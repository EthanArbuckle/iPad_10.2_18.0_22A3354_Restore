void sub_22F374EFC(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F374F08(a1 + 8, *a2);
}

void sub_22F374F08(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  llvm::raw_ostream *v33;
  uint64_t v34;
  char v35;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 47) < 0)
    v15 = *(_QWORD *)(a1 + 32);
  else
    v15 = *(unsigned __int8 *)(a1 + 47);
  if (v15)
  {
    if (*(char *)(a1 + 47) >= 0)
      v16 = (const char *)(a1 + 24);
    else
      v16 = *(const char **)(a1 + 24);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v26 = *((_DWORD *)v4 + 6);
  sub_22EF816F0((_QWORD *)(a1 + 8), v19, v20, v21, v22, v23, v24, v25);
LABEL_31:
  LODWORD(v27) = *((_DWORD *)v4 + 6);
  while (v26 < v27)
  {
    v28 = (uint64_t)v4[2] + 32 * v27;
    v35 = 1;
    v29 = *(_QWORD *)(v28 - 8);
    if (!v29)
    {
      sub_22E4A06C4();
      sub_22F375154(v34);
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v29 + 48))(v29, &v35);
    v27 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v27;
    v30 = (uint64_t)v4[2] + 32 * v27;
    v31 = *(_QWORD **)(v30 + 24);
    if (v31 == (_QWORD *)v30)
    {
      v31 = (_QWORD *)((char *)v4[2] + 32 * v27);
      v32 = 4;
      goto LABEL_37;
    }
    if (v31)
    {
      v32 = 5;
LABEL_37:
      (*(void (**)(void))(*v31 + 8 * v32))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v33 = v4[134];
  else
    v33 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v33 - 2, 0);
}

llvm::raw_ostream *sub_22F375154(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(_QWORD *)a1;
  v3 = (_BYTE *)(*(_QWORD *)a1 + 8);
  sub_22F0FB510((uint64_t)v3, *(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 8);
  v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  if ((v4 & 8) != 0)
    v5 = (_QWORD *)*v5;
  return sub_22EF83028(v3, v2, (uint64_t)v5);
}

void sub_22F3751A0(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F3751AC(a1 + 8, *a2);
}

void sub_22F3751AC(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  _BYTE *v27;
  uint64_t v28;
  char v29;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 47) < 0)
    v15 = *(_QWORD *)(a1 + 32);
  else
    v15 = *(unsigned __int8 *)(a1 + 47);
  if (v15)
  {
    if (*(char *)(a1 + 47) >= 0)
      v16 = (const char *)(a1 + 24);
    else
      v16 = *(const char **)(a1 + 24);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22F375154(a1 + 8);
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v29 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F3753F8(v27, v28);
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v29);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

_BYTE *sub_22F3753F8(_BYTE *result, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v3;

  if (a2)
  {
    v2 = result;
    if (*result)
    {
      result = (_BYTE *)sub_22EFCCC4C(a2);
      v3 = (unint64_t)result;
    }
    else
    {
      v3 = *(_QWORD *)(a2 + 16);
    }
    for (; v3; v3 = *(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF8)
    {
      if (*((_DWORD *)v2 + 1) != 1 || (*(_BYTE *)(v3 + 29) & 2) == 0)
        result = (_BYTE *)sub_22EF8622C(v2 + 8, v2, v3);
    }
  }
  return result;
}

void sub_22F375474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(unsigned int *)(a2 + 80);
  if ((_DWORD)v4)
  {
    v5 = *(uint64_t **)(a2 + 72);
    v6 = 8 * v4;
    do
    {
      v7 = *v5;
      if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v7 + 29) & 2) == 0)
        sub_22EF8622C(a1 + 8, a1, v7);
      ++v5;
      v6 -= 8;
    }
    while (v6);
  }
  v8 = *(unsigned int *)(a2 + 112);
  if ((_DWORD)v8)
  {
    v9 = *(__int128 **)(a2 + 104);
    v10 = 16 * v8;
    do
    {
      v11 = *v9++;
      v13 = a1;
      v14 = v11;
      sub_22EF86E34((char *)(a1 + 8), &v13);
      v10 -= 16;
    }
    while (v10);
  }
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 64))(a2);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v12, a1);
}

unint64_t sub_22F375558(uint64_t a1, unint64_t a2)
{
  uint64_t *v4;
  unint64_t result;
  uint64_t *i;
  uint64_t v7;

  v4 = (uint64_t *)sub_22F3B6E50(a2);
  result = sub_22F3B6E50(a2);
  for (i = (uint64_t *)(result + 8 * *(unsigned int *)(a2 + 128)); v4 != i; ++v4)
  {
    v7 = *v4;
    if (*(_DWORD *)(a1 + 4) != 1 || (*(_WORD *)(v7 + 28) & 4) != 0)
      result = (unint64_t)sub_22EF8A54C((char *)(a1 + 8), a1, (uint64_t *)v7);
  }
  return result;
}

uint64_t sub_22F3755D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  const char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  const char *v21;

  result = sub_22F376E64(a1, *(_QWORD *)(a2 + 56));
  if (*(_QWORD *)(a2 + 72) >= 8uLL)
  {
    v5 = sub_22F259350(a2);
    v6 = v5;
    v7 = *(_QWORD *)(a2 + 72);
    v8 = v7 & 6;
    v9 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
    if (v8 != 2 || v9 == 0)
    {
      if (v8 != 4 || v9 == 0)
        v9 = 0;
      else
        v9 = (_QWORD *)*v9;
    }
    if (v8 == 2)
      v12 = "inherited from";
    else
      v12 = "previous";
    sub_22F0EFE08((uint64_t)v5);
    v14 = *(_OWORD *)v6;
    v15 = *((_QWORD *)v6 + 2);
    v16 = a1;
    v17 = v14;
    v18 = v15;
    v19 = v13;
    v20 = v9;
    v21 = v12;
    return sub_22EF88E40((unsigned __int8 *)(a1 + 8), (uint64_t)&v16);
  }
  return result;
}

void sub_22F3756A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  _QWORD *v16;
  const char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  const char *v23;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
    sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 152), a1);
  v6 = *(_QWORD *)(a2 + 72);
  v5 = (uint64_t *)(a2 + 72);
  v4 = v6;
  if (v6 >= 8)
  {
    v7 = v4 & 6;
    v8 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
    if (v7 == 2)
      v9 = v8;
    else
      v9 = 0;
    v10 = v9 + 9;
    if (!v9)
      v10 = v5;
    v11 = *v10;
    v12 = v11 & 6;
    v13 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF8);
    if (v12 == 4 && v13 != 0)
      v13 = (uint64_t *)v13[1];
    v15 = *v13;
    v16 = v8;
    if (!v9)
    {
      v16 = 0;
      if (v7 == 4)
      {
        if (v8)
          v16 = (_QWORD *)*v8;
      }
    }
    v18 = a1;
    v19 = 1;
    if (v7 == 2)
      v17 = "inherited from";
    else
      v17 = "previous";
    v20 = v15;
    v21 = 0;
    v22 = v16;
    v23 = v17;
    sub_22EF88E40((unsigned __int8 *)(a1 + 8), (uint64_t)&v18);
  }
}

void sub_22F375794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v16;
  const char *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  const char *v23;

  v4 = sub_22F2D6770(a2);
  if (v4)
    sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v4, a1);
  v7 = *(_QWORD *)(a2 + 72);
  v6 = (uint64_t *)(a2 + 72);
  v5 = v7;
  if (v7 >= 4)
  {
    v8 = v5 & 3;
    v9 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFFFCLL);
    if (v8 == 1)
      v10 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    else
      v10 = 0;
    v11 = (uint64_t *)(v10 + 72);
    if (!v10)
      v11 = v6;
    v12 = *v11;
    v13 = v12 & 3;
    v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (v13 == 2 && v14 != 0)
      v14 = *(_QWORD *)(v14 + 8);
    v16 = v9;
    if (!v10)
    {
      v16 = 0;
      if (v8 == 2)
      {
        if (v9)
          v16 = (_QWORD *)*v9;
      }
    }
    v18 = a1;
    v19 = 7;
    if (v8 == 1)
      v17 = "inherited from";
    else
      v17 = "previous";
    v20 = v14;
    v21 = 0;
    v22 = v16;
    v23 = v17;
    sub_22EF88E40((unsigned __int8 *)(a1 + 8), (uint64_t)&v18);
  }
}

void sub_22F375880(uint64_t a1, uint64_t a2)
{
  int v3;
  unint64_t v4;

  if (*(_DWORD *)(a1 + 4) == 1)
  {
    v3 = *(_DWORD *)(a2 + 28);
    if ((v3 & 0x7F) != 0x40 && (*(_BYTE *)(a2 + 97) & 8) != 0)
      return;
  }
  else
  {
    v3 = *(_DWORD *)(a2 + 28);
  }
  if (((v3 & 0x7F) != 0x40 || (*(_DWORD *)(a2 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF) && *(_QWORD *)(a2 + 88) >= 8uLL)
  {
    v4 = sub_22EFBC5B4(a2);
    sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v4, a1);
  }
}

void sub_22F37591C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 88), a1);
  v5 = *(_QWORD *)(a2 + 96);
  if (v5)
    sub_22EF87230(v4, 0, 0, v5, a1);
}

void sub_22F375988(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (uint64_t *)sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v5 = sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v6 = *(_DWORD **)(a2 + 40);
  v7 = (uint64_t *)(v5 + 8 * v6[1]);
  if (v7 != v4)
  {
    do
    {
      v8 = *v4++;
      sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v8, a1);
    }
    while (v4 != v7);
    v6 = *(_DWORD **)(a2 + 40);
  }
  v11 = *v6;
  v10 = (uint64_t *)(v6 + 4);
  v9 = v11;
  if (v11)
  {
    v12 = 8 * v9;
    do
    {
      v13 = *v10++;
      sub_22EF887EC((char *)(a1 + 8), a1, v13);
      v12 -= 8;
    }
    while (v12);
  }
}

void sub_22F375A30(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t *)sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v5 = sub_22F3F327C(*(unsigned int **)(a2 + 40)) + 8 * *(unsigned int *)(*(_QWORD *)(a2 + 40) + 4);
  if ((uint64_t *)v5 != v4)
  {
    do
    {
      v6 = *v4++;
      sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v6, a1);
    }
    while (v4 != (uint64_t *)v5);
  }
}

void sub_22F375AA4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, a1);
  sub_22EF87230(v4, 0, 0, *(_QWORD *)(a2 + 48), a1);
}

void sub_22F375B00(uint64_t *a1)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a1 + 8);
  sub_22F3E1FC4((uint64_t)v3, a1 + 1);
  v4 = a1[2];
  if (v4)
    sub_22EF87230(v3, 0, 0, v4, v2);
}

uint64_t sub_22F375B60(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F375B6C(a1 + 8, *a2);
}

uint64_t sub_22F375B6C(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F375B00((uint64_t *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v15 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F375CA0(v13, v14);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v15);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F375CA0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  if (*(_DWORD *)(result + 4) == 1)
  {
    v3 = result;
    v4 = result + 8;
    sub_22EF87230(result + 8, 0, 0, *(_QWORD *)(a2 + 16), result);
    v5 = sub_22F3F2E70(a2);
    if (*(_DWORD *)(v3 + 4) != 1 || (*(_BYTE *)(v5 + 29) & 2) == 0)
      sub_22EF8622C(v4, v3, v5);
    v6 = sub_22F3F2E44(a2);
    sub_22EF87230(v4, 0, 0, v6, v3);
    return sub_22EF87230(v4, 0, 0, *(_QWORD *)(a2 + 72), v3);
  }
  return result;
}

uint64_t sub_22F375D60(uint64_t result, uint64_t *a2)
{
  uint64_t v3;
  _QWORD v4[4];

  if (*(_DWORD *)(result + 4) == 1)
  {
    v3 = result;
    sub_22F05FD5C(a2, v4);
    sub_22EF87230(v3 + 8, 0, 0, v4[1], v3);
    sub_22F05FD5C(a2, v4);
    return sub_22EF87230(v3 + 8, 0, 0, v4[2], v3);
  }
  return result;
}

uint64_t sub_22F375DE8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a2 + 80);
  if (v2)
  {
    v3 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v3)
    {
      v4 = result;
      v5 = v2 + 16;
      v6 = (unsigned __int8 *)(result + 8);
      v7 = 32 * v3;
      do
      {
        sub_22F0EFE08(v5);
        v8 = *(_QWORD *)(v5 + 16);
        v9 = *(_OWORD *)v5;
        v5 += 32;
        v12 = v9;
        v13 = v8;
        v11 = v4;
        v14 = v10;
        v15 = 0;
        v16 = 0;
        result = sub_22EF88E40(v6, (uint64_t)&v11);
        v7 -= 32;
      }
      while (v7);
    }
  }
  return result;
}

uint64_t sub_22F375E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];
  BOOL v14;

  v3 = a2 + 32;
  v4 = (char *)(a1 + 8);
  sub_22EF87230(a1 + 8, 0, 0, *(_QWORD *)(a2 + 32), a1);
  result = sub_22F37650C(a1, *(_QWORD *)(*(_QWORD *)v3 + 8));
  v6 = *(unsigned int *)(v3 - 16);
  if ((_DWORD)v6)
  {
    v7 = *(_DWORD *)(v3 - 12);
    v8 = (v6 + 1);
    v9 = 8 * v6;
    v10 = v3;
    do
    {
      v11 = *(_QWORD *)(v10 + 8);
      v10 += 8;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      v13[0] = a1;
      v13[1] = v11;
      v13[2] = v12;
      v14 = v7 == 0;
      result = sub_22EF89AF8(v4, v13);
      --v7;
      v3 = v10;
      v9 -= 8;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_22F375F3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_DWORD *)(a1 + 4) == 1)
  {
    if (*(_WORD *)(a2 + 4))
    {
      v5 = 0;
      v6 = 16 * *(unsigned __int16 *)(a2 + 4);
      v7 = 32;
      do
      {
        v8 = (_QWORD *)(sub_22F3C64D0(a2) + v5);
        if ((*(_BYTE *)v8 & 1) == 0)
        {
          if (sub_22F3C6428(a2, v8))
          {
            v9 = *v8 & 0xFFFFFFFFFFFFFFF8;
            if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v9 + 29) & 2) == 0)
              sub_22EF8622C(a1 + 8, a1, v9);
          }
          else
          {
            sub_22EF87230(a1 + 8, 0, 0, *(_QWORD *)(a2 + v7), a1);
          }
        }
        v5 += 16;
        v7 += 8;
      }
      while (v6 != v5);
    }
    v10 = sub_22F3C6624(a2);
    sub_22F376E64(a1, v10);
    v11 = sub_22F3C6220(a2);
    v12 = *(uint64_t **)(v11 + 120);
    v13 = sub_22EFBAACC(v11);
    if (v13)
    {
      v14 = 8 * v13;
      do
      {
        v15 = *v12;
        if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v15 + 29) & 2) == 0)
          sub_22EF8622C(a1 + 8, a1, v15);
        ++v12;
        v14 -= 8;
      }
      while (v14);
    }
    v16 = sub_22F3C63FC(a2);
    return sub_22EF87230(a1 + 8, 0, 0, v16, a1);
  }
  else
  {
    result = sub_22F3C61E8(a2);
    if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(result + 29) & 2) == 0)
      return sub_22EF8622C(a1 + 8, a1, result);
  }
  return result;
}

uint64_t sub_22F3760E8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v3 = result;
  v4 = a2 + 40;
  v5 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v5)
  {
    v6 = 8 * v5;
    v7 = (uint64_t *)(a2 + 40);
    do
    {
      v8 = *v7;
      if (*(_DWORD *)(v3 + 4) != 1 || (*(_BYTE *)(v8 + 29) & 2) == 0)
        result = sub_22EF8622C(v3 + 8, v3, v8);
      ++v7;
      v6 -= 8;
    }
    while (v6);
    v9 = *(unsigned int *)(a2 + 16);
  }
  else
  {
    v9 = 0;
  }
  v10 = *(unsigned int *)(a2 + 20);
  if ((_DWORD)v10)
  {
    v11 = 8 * v10;
    v12 = (uint64_t *)(v4 + 8 * v9);
    do
    {
      v13 = *v12++;
      result = sub_22EF89ECC((char *)(v3 + 8), v3, v13);
      v11 -= 8;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_22F376198(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((*(_BYTE *)(a2 + 2) & 1) != 0)
  {
    v2 = *(unsigned int *)(a2 + 28);
    if ((_DWORD)v2)
    {
      v3 = result;
      v4 = (__int128 *)(a2 + 40);
      v5 = (unsigned __int8 *)(result + 8);
      v6 = 24 * v2;
      do
      {
        v8 = *v4;
        v9 = *((_QWORD *)v4 + 2);
        v7 = v3;
        v11 = 0;
        v12 = 0;
        v10 = 0;
        result = sub_22EF88E40(v5, (uint64_t)&v7);
        v4 = (__int128 *)((char *)v4 + 24);
        v6 -= 24;
      }
      while (v6);
    }
  }
  return result;
}

uint64_t sub_22F37622C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v4 + 29) & 2) == 0)
    sub_22EF8622C(a1 + 8, a1, v4);
  sub_22F3C6ADC(a2, (uint64_t)&v6);
  v9 = v6;
  v8 = a1;
  v10 = v7;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  return sub_22EF88E40((unsigned __int8 *)(a1 + 8), (uint64_t)&v8);
}

double sub_22F3762A8(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F3762B4(a1 + 8, *a2);
}

double sub_22F3762B4(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22EF88ADC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v16 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F3763E8(v13, v14, v15);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v16);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

double sub_22F3763E8(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _BYTE v10[32];
  uint64_t v11;
  __int128 v12;
  _BYTE v13[32];
  uint64_t v14;

  v12 = *a2;
  *(_QWORD *)v13 = *((_QWORD *)a2 + 2);
  *(_OWORD *)&v13[8] = *(__int128 *)((char *)a2 + 24);
  *(_QWORD *)&v13[24] = *((_QWORD *)a2 + 5);
  v14 = a3;
  sub_22EF88D74((uint64_t **)&v12);
  v9 = *(__int128 *)((char *)a2 + 24);
  *(_QWORD *)v10 = *((_QWORD *)a2 + 5);
  *(_OWORD *)&v10[8] = v9;
  *(_QWORD *)&v10[24] = *(_QWORD *)v10;
  v11 = a3;
  sub_22EF88D74((uint64_t **)&v9);
  v6 = *(_OWORD *)v13;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v13[16];
  v7 = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 72) = v7;
  result = *(double *)&v10[16];
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&v10[16];
  *(_QWORD *)(a1 + 104) = v11;
  return result;
}

void sub_22F376498(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned int *v5;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(a1 + 48))
    strlen(*(const char **)(a1 + 48));
  v5 = (unsigned int *)(a1 + 8);
  sub_22F08F2B8(v2 + 8, v5, v3, v4);
  sub_22EF8909C(v2, (uint64_t)v5);
}

uint64_t sub_22F37650C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;

  v4 = (_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 8) != 0)
  {
    v4 = (_QWORD *)*v4;
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xCFFFFFFFFLL | a2 & 7;
  }
  else
  {
    v5 = a2 & 7;
  }
  v6 = (char *)(a1 + 8);
  if (v5)
    return sub_22EF89564(v6, a1, a2);
  else
    return sub_22EF89198(v6, a1, v4);
}

void sub_22F376550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)a1;
  sub_22F08E8C0(*(_QWORD *)a1 + 8, *(_QWORD *)(a1 + 8));
  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
  {
    sub_22F3765B4(v2, v3);
    v4 = sub_22F10D19C(*(_QWORD *)(a1 + 8));
    if (v4 != (*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0))
      sub_22F37650C(v2, v4);
  }
}

void sub_22F3765B4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_22F376608()
{
  uint64_t v0;
  uint64_t v1;

  sub_22EF87230((unsigned __int8 *)(v0 + 8), 0, 0, *(_QWORD *)(v1 + 24), v0);
}

uint64_t sub_22F376634()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22EF89198((char *)(v0 + 8), v0, *(_QWORD *)(v1 + 32));
}

void sub_22F376658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;

  v17 = *(unsigned int *)(v16 + 20);
  if ((_DWORD)v17)
  {
    v18 = (__int128 *)(v16 + 40);
    v19 = 24 * v17;
    do
    {
      a11 = *v18;
      a12 = *((_QWORD *)v18 + 2);
      a10 = v15;
      a14 = 0;
      a15 = 0;
      a13 = 0;
      sub_22EF88E40((unsigned __int8 *)(v15 + 8), (uint64_t)&a10);
      v18 = (__int128 *)((char *)v18 + 24);
      v19 -= 24;
    }
    while (v19);
  }
  sub_22F3765F0();
}

uint64_t sub_22F3766B4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22F37650C(v0, *(_QWORD *)(v1 + 24));
}

uint64_t sub_22F37675C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22F3767D4(v0, v1);
}

uint64_t sub_22F37677C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_22F37650C(a1, a2[3]);
  v5 = (unsigned __int16)(a2[2] >> 38);
  if ((unsigned __int16)(a2[2] >> 38))
  {
    v6 = a2 + 5;
    v7 = 8 * v5;
    do
    {
      v8 = *v6++;
      result = sub_22F37650C(a1, v8);
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_22F3767D4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF89198((char *)(a1 + 8), a1, *(_QWORD *)(a2 + 32));
  sub_22F40A854(a2, (uint64_t)&v6);
  v9 = v6;
  v8 = a1;
  v10 = v7;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  return sub_22EF88E40(v4, (uint64_t)&v8);
}

uint64_t sub_22F376848(uint64_t a1, uint64_t a2)
{
  int v4;

  if ((*(_BYTE *)(a2 + 18) & 0x10) != 0)
  {
    do
    {
      a2 = *(_QWORD *)(*(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (a2)
      {
        v4 = *(_DWORD *)(a2 + 16);
        if ((v4 & 0xFE) == 0x28)
          continue;
      }
      a2 = sub_22F10CF48(a2);
      v4 = *(_DWORD *)(a2 + 16);
    }
    while ((v4 & 0x100000) != 0);
  }
  return sub_22F37650C(a1, *(_QWORD *)(a2 + 32));
}

uint64_t sub_22F3768B0(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F3768BC(a1 + 8, *a2);
}

uint64_t sub_22F3768BC(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t *v13;
  char v14;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F376550(a1 + 40);
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v14 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F3769F0(v13);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v14);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F3769F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *a1;
  v3 = *a1 + 8;
  sub_22F08EB50(v3, a1[1]);
  v4 = a1[1];
  v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  if ((v4 & 8) != 0)
    v5 = (_QWORD *)*v5;
  return sub_22EF89198(v3, v2, v5);
}

uint64_t sub_22F376A3C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F376A48(a1 + 8, *a2);
}

uint64_t sub_22F376A48(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  char v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F3769F0((uint64_t *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v13 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F376B7C();
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v13);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F376B7C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F376B88(a1 + 8, *a2);
}

uint64_t sub_22F376B88(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t *v13;
  char v14;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F376498(a1 + 40);
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v14 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F376CBC(v13);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v14);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F376CBC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;

  v2 = *a1;
  v3 = *a1 + 8;
  v4 = a1 + 1;
  sub_22F3E2134(v3, (uint64_t)(a1 + 1));
  v5 = (uint64_t *)a1[2];
  if (v5)
    sub_22F37650C(v2, *v5);
  return sub_22EF87230(v3, 0, 0, *v4, v2);
}

uint64_t sub_22F376D24(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F376D30(a1 + 8, *a2);
}

uint64_t sub_22F376D30(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F376CBC((uint64_t *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v15 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F376E64(v13, v14);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v15);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F376E64(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (a2)
  {
    v3 = result;
    v4 = a2 + 16;
    v5 = *(_DWORD *)(a2 + 12);
    if ((v5 & 0x1FFFFFFF) != 0)
    {
      v6 = 8 * (v5 & 0x1FFFFFFF);
      v7 = (uint64_t *)(a2 + 16);
      do
      {
        v8 = *v7;
        if (*(_DWORD *)(v3 + 4) != 1 || (*(_BYTE *)(v8 + 29) & 2) == 0)
          result = sub_22EF8622C(v3 + 8, v3, v8);
        ++v7;
        v6 -= 8;
      }
      while (v6);
      v5 = *(_DWORD *)(a2 + 12);
    }
    if ((v5 & 0x40000000) != 0)
    {
      v9 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
      if (v9)
        return sub_22EF87230(v3 + 8, 0, 0, v9, v3);
    }
  }
  return result;
}

uint64_t sub_22F376F1C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F376F28(a1 + 8, *a2);
}

uint64_t sub_22F376F28(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  char v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22EF8A0F0((uint64_t *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v13 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F37705C();
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v13);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F37705C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377068(a1 + 8, *a2);
}

uint64_t sub_22F377068(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22EF8759C(a1 + 40);
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v15 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F37719C(v13, v14);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v15);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F37719C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a2)
  {
    v2 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v2)
    {
      v3 = result;
      v4 = a2 + 16;
      v5 = (unsigned __int8 *)(result + 8);
      v6 = 32 * v2;
      do
      {
        sub_22F0EFE08(v4);
        v9 = *(_OWORD *)v4;
        v10 = *(_QWORD *)(v4 + 16);
        v8 = v3;
        v11 = v7;
        v12 = 0;
        v13 = 0;
        result = sub_22EF88E40(v5, (uint64_t)&v8);
        v4 += 32;
        v6 -= 32;
      }
      while (v6);
    }
  }
  return result;
}

uint64_t sub_22F377230(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F37723C(a1 + 8, *a2);
}

uint64_t sub_22F37723C(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  char v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  v6 = *(_QWORD *)(a1 + 40);
  sub_22F08F7A8(v6 + 8, *(uint64_t **)(a1 + 48));
  sub_22EF87230((unsigned __int8 *)(v6 + 8), 0, 0, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8), v6);
LABEL_4:
  LODWORD(v7) = *(_DWORD *)(v4 + 16);
  while (v5 < v7)
  {
    v8 = *(_QWORD *)(v4 + 8) + 32 * v7;
    v16 = 1;
    v9 = *(_QWORD *)(v8 - 8);
    if (!v9)
    {
      sub_22E4A06C4();
      return sub_22F37739C(v14, v15);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v9 + 48))(v9, &v16);
    v7 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v7;
    v10 = *(_QWORD *)(v4 + 8) + 32 * v7;
    v11 = *(_QWORD **)(v10 + 24);
    if (v11 == (_QWORD *)v10)
    {
      v11 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v7);
      v12 = 4;
      goto LABEL_10;
    }
    if (v11)
    {
      v12 = 5;
LABEL_10:
      (*(void (**)(void))(*v11 + 8 * v12))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F37739C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BOOL4 v10;

  sub_22F376E64(a1, a2[7]);
  v4 = a2[6];
  if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v4 + 29) & 2) == 0)
    sub_22EF8622C(a1 + 8, a1, v4);
  v5 = *(uint64_t **)(sub_22F3B8610((unint64_t)a2) + 16);
  result = sub_22F3B8610((unint64_t)a2);
  v7 = *(_QWORD *)(result + 16) + 8 * *(unsigned int *)(result + 24);
  while (v5 != (uint64_t *)v7)
  {
    v8 = *v5++;
    v9 = sub_22E6939D8(v8);
    v10 = (*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != (_QWORD)a2;
    result = (uint64_t)sub_22EF8A944(a1, v9, v10);
  }
  return result;
}

uint64_t sub_22F377454(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F377460(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  char v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F08FCF4(*(_QWORD *)(a1 + 40) + 8, *(_QWORD *)(a1 + 48));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v13 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F377598();
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v13);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F377598(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F3775A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL4 v11;

  sub_22F376E64(a1, a2[7]);
  v4 = a2[6];
  if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v4 + 29) & 2) == 0)
    sub_22EF8622C(a1 + 8, a1, v4);
  sub_22EFE95D4((unint64_t)a2);
  v5 = *(uint64_t **)(sub_22EFE9368((uint64_t)a2) + 32);
  sub_22EFE95D4((unint64_t)a2);
  result = sub_22EFE9368((uint64_t)a2);
  v7 = *(_QWORD *)(result + 32) + 8 * *(unsigned int *)(result + 40);
  while (v5 != (uint64_t *)v7)
  {
    v8 = *v5++;
    v9 = *(_QWORD *)((*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF8) + 112);
    v10 = sub_22E3CD31C((uint64_t *)(v9 + 104), v9);
    v11 = (*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != (_QWORD)a2;
    result = (uint64_t)sub_22EF8B130(a1, v10, v11);
  }
  return result;
}

uint64_t sub_22F37767C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F377688(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F377694(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BOOL4 v10;

  sub_22F376E64(a1, a2[7]);
  v4 = a2[6];
  if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v4 + 29) & 2) == 0)
    sub_22EF8622C(a1 + 8, a1, v4);
  v5 = *(uint64_t **)(sub_22F3B8610((unint64_t)a2) + 16);
  result = sub_22F3B8610((unint64_t)a2);
  v7 = *(_QWORD *)(result + 16) + 8 * *(unsigned int *)(result + 24);
  while (v5 != (uint64_t *)v7)
  {
    v8 = *v5++;
    v9 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v8 + 80) + 72), *(_QWORD *)(v8 + 80));
    v10 = (*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != (_QWORD)a2;
    result = (uint64_t)sub_22EF8B93C(a1, v9, v10);
  }
  return result;
}

uint64_t sub_22F377754(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F377760(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377460(a1 + 8, *a2);
}

uint64_t sub_22F37776C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v2)
  {
    v4 = result;
    v5 = 0;
    v6 = (unsigned __int8 *)(result + 8);
    v7 = 24 * v2;
    do
    {
      v8 = (__int128 *)(*(_QWORD *)a2 + v5);
      v9 = *v8;
      v10 = *((_QWORD *)v8 + 2);
      v11 = v4;
      v12 = v9;
      v13 = v10;
      v15 = 0;
      v16 = 0;
      v14 = 0;
      result = sub_22EF88E40(v6, (uint64_t)&v11);
      v5 += 24;
    }
    while (v7 != v5);
  }
  return result;
}

void sub_22F377810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(unsigned int *)(a2 + 48);
  if ((_DWORD)v4)
  {
    v5 = *(uint64_t **)(a2 + 56);
    v6 = 8 * v4;
    do
    {
      v7 = *v5++;
      sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v7, a1);
      v6 -= 8;
    }
    while (v6);
  }
  v8 = *(unsigned int *)(a2 + 64);
  if ((_DWORD)v8)
  {
    v9 = *(uint64_t **)(a2 + 72);
    v10 = 8 * v8;
    do
    {
      v11 = *v9++;
      sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, v11, a1);
      v10 -= 8;
    }
    while (v10);
  }
}

void sub_22F3778A8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 40), a1);
  sub_22EF87230(v4, 0, 0, *(_QWORD *)(a2 + 48), a1);
}

void sub_22F377900(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 40), a1);
  v5 = *(unsigned int *)(a2 + 48);
  if ((_DWORD)v5)
  {
    v6 = *(uint64_t **)(a2 + 56);
    v7 = 8 * v5;
    do
    {
      v8 = *v6++;
      sub_22EF87230(v4, 0, 0, v8, a1);
      v7 -= 8;
    }
    while (v7);
  }
}

void sub_22F377974(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 40), a1);
  v5 = *(unsigned int *)(a2 + 56);
  if ((_DWORD)v5)
  {
    v6 = *(uint64_t **)(a2 + 64);
    v7 = 8 * v5;
    do
    {
      v8 = *v6++;
      sub_22EF87230(v4, 0, 0, v8, a1);
      v7 -= 8;
    }
    while (v7);
  }
  v9 = *(unsigned int *)(a2 + 72);
  if ((_DWORD)v9)
  {
    v10 = *(uint64_t **)(a2 + 80);
    v11 = 8 * v9;
    do
    {
      v12 = *v10++;
      sub_22EF87230(v4, 0, 0, v12, a1);
      v11 -= 8;
    }
    while (v11);
  }
}

void sub_22F377A20(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (unsigned __int8 *)(a1 + 8);
  sub_22EF87230((unsigned __int8 *)(a1 + 8), 0, 0, *(_QWORD *)(a2 + 40), a1);
  v5 = *(unsigned int *)(a2 + 48);
  if ((_DWORD)v5)
  {
    v6 = *(uint64_t **)(a2 + 56);
    v7 = 8 * v5;
    do
    {
      v8 = *v6++;
      sub_22EF87230(v4, 0, 0, v8, a1);
      v7 -= 8;
    }
    while (v7);
  }
  v9 = *(unsigned int *)(a2 + 64);
  if ((_DWORD)v9)
  {
    v10 = *(uint64_t **)(a2 + 72);
    v11 = 8 * v9;
    do
    {
      v12 = *v10++;
      sub_22EF87230(v4, 0, 0, v12, a1);
      v11 -= 8;
    }
    while (v11);
  }
  v13 = *(unsigned int *)(a2 + 80);
  if ((_DWORD)v13)
  {
    v14 = *(uint64_t **)(a2 + 88);
    v15 = 8 * v13;
    do
    {
      v16 = *v14++;
      sub_22EF87230(v4, 0, 0, v16, a1);
      v15 -= 8;
    }
    while (v15);
  }
  v17 = *(unsigned int *)(a2 + 96);
  if ((_DWORD)v17)
  {
    v18 = *(uint64_t **)(a2 + 104);
    v19 = 8 * v17;
    do
    {
      v20 = *v18++;
      sub_22EF87230(v4, 0, 0, v20, a1);
      v19 -= 8;
    }
    while (v19);
  }
  v21 = *(unsigned int *)(a2 + 128);
  if ((_DWORD)v21)
  {
    v22 = *(uint64_t **)(a2 + 136);
    v23 = 8 * v21;
    do
    {
      v24 = *v22++;
      sub_22EF87230(v4, 0, 0, v24, a1);
      v23 -= 8;
    }
    while (v23);
  }
}

uint64_t sub_22F377B5C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377B68(a1 + 8, *a2);
}

uint64_t sub_22F377B68(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t *v14;
  char v15;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  v6 = *(_QWORD *)(a1 + 40);
  sub_22F08A974(v6 + 8, *(_QWORD *)(a1 + 48));
  sub_22EF8C36C(v6, *(_QWORD *)(a1 + 48));
LABEL_4:
  LODWORD(v7) = *(_DWORD *)(v4 + 16);
  while (v5 < v7)
  {
    v8 = *(_QWORD *)(v4 + 8) + 32 * v7;
    v15 = 1;
    v9 = *(_QWORD *)(v8 - 8);
    if (!v9)
    {
      sub_22E4A06C4();
      return sub_22F377CB4(v14);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v9 + 48))(v9, &v15);
    v7 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v7;
    v10 = *(_QWORD *)(v4 + 8) + 32 * v7;
    v11 = *(_QWORD **)(v10 + 24);
    if (v11 == (_QWORD *)v10)
    {
      v11 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v7);
      v12 = 4;
      goto LABEL_10;
    }
    if (v11)
    {
      v12 = 5;
LABEL_10:
      (*(void (**)(void))(*v11 + 8 * v12))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F377CB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v2 = *a1;
  v3 = *a1 + 8;
  sub_22F08F120(v3, a1[1]);
  result = a1[1];
  if (result)
  {
    v5 = (uint64_t *)sub_22F3A7DC8(result);
    result = sub_22F3A7E0C(a1[1]);
    if (v5 != (uint64_t *)result)
    {
      v6 = (uint64_t *)result;
      do
      {
        v7 = *v5++;
        v8 = a1[2];
        v9[0] = v2;
        v9[1] = v7;
        v9[2] = v8;
        result = sub_22EF8C8A4(v3, v9);
      }
      while (v5 != v6);
    }
  }
  return result;
}

uint64_t sub_22F377D44(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377D50(a1 + 8, *a2);
}

uint64_t sub_22F377D50(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  char v13;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22F377CB4((uint64_t *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v13 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F377E84();
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v13);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F377E84(uint64_t a1, unsigned __int8 *a2)
{
  return sub_22F377E90(a1 + 8, *a2);
}

uint64_t sub_22F377E90(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)a1)
  {
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(v4 + 1048));
  }
  *(_BYTE *)v4 = 1;
  v5 = *(_DWORD *)(v4 + 16);
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(v4 + 1048));
  sub_22EF86450((_QWORD *)(a1 + 40));
LABEL_4:
  LODWORD(v6) = *(_DWORD *)(v4 + 16);
  while (v5 < v6)
  {
    v7 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v15 = 1;
    v8 = *(_QWORD *)(v7 - 8);
    if (!v8)
    {
      sub_22E4A06C4();
      return sub_22F377FC4(v13, v14);
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v8 + 48))(v8, &v15);
    v6 = (*(_DWORD *)(v4 + 16) - 1);
    *(_DWORD *)(v4 + 16) = v6;
    v9 = *(_QWORD *)(v4 + 8) + 32 * v6;
    v10 = *(_QWORD **)(v9 + 24);
    if (v10 == (_QWORD *)v9)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v4 + 8) + 32 * v6);
      v11 = 4;
      goto LABEL_10;
    }
    if (v10)
    {
      v11 = 5;
LABEL_10:
      (*(void (**)(void))(*v10 + 8 * v11))();
      goto LABEL_4;
    }
  }
  result = llvm::json::OStream::objectEnd((llvm::json::OStream *)(v4 + 1048));
  if (a2)
  {
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(v4 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v4 + 1048));
  }
  return result;
}

uint64_t sub_22F377FC4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_DWORD *)(result + 4) == 1)
  {
    v3 = result;
    v4 = result + 8;
    sub_22EF8CE48(result + 8, 0, 0);
    v5 = sub_22F3F2E70(a2);
    if (*(_DWORD *)(v3 + 4) != 1 || (*(_BYTE *)(v5 + 29) & 2) == 0)
      sub_22EF814B0(v4, v3, v5);
    sub_22F3F2E44(a2);
    sub_22EF8CE48(v4, 0, 0);
    return sub_22EF8CE48(v4, 0, 0);
  }
  return result;
}

uint64_t sub_22F378084(uint64_t result, uint64_t *a2)
{
  int v3;
  uint64_t v4;

  if (*(_DWORD *)(result + 4) == 1)
  {
    v3 = result;
    sub_22F05FD5C(a2, &v4);
    sub_22EF8CE48(v3 + 8, 0, 0);
    sub_22F05FD5C(a2, &v4);
    return sub_22EF8CE48(v3 + 8, 0, 0);
  }
  return result;
}

llvm::raw_ostream *sub_22F37810C(llvm::raw_ostream *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  llvm::raw_ostream *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  llvm::raw_ostream *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a2 + 80);
  if (v2)
  {
    v3 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v3)
    {
      v4 = result;
      v5 = v2 + 16;
      v6 = (char *)result + 8;
      v7 = 32 * v3;
      do
      {
        sub_22F0EFE08(v5);
        v8 = *(_QWORD *)(v5 + 16);
        v9 = *(_OWORD *)v5;
        v5 += 32;
        v12 = v9;
        v13 = v8;
        v11 = v4;
        v14 = v10;
        v15 = 0;
        v16 = 0;
        result = sub_22EF82658(v6, (uint64_t)&v11);
        v7 -= 32;
      }
      while (v7);
    }
  }
  return result;
}

llvm::raw_ostream *sub_22F3781A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  llvm::raw_ostream *result;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];
  BOOL v14;

  v3 = a2 + 32;
  v4 = (_BYTE *)(a1 + 8);
  sub_22EF8CE48(a1 + 8, 0, 0);
  result = sub_22F372F24(a1, *(_QWORD *)(*(_QWORD *)v3 + 8));
  v6 = *(unsigned int *)(v3 - 16);
  if ((_DWORD)v6)
  {
    v7 = *(_DWORD *)(v3 - 12);
    v8 = (v6 + 1);
    v9 = 8 * v6;
    v10 = v3;
    do
    {
      v11 = *(_QWORD *)(v10 + 8);
      v10 += 8;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      v13[0] = a1;
      v13[1] = v11;
      v13[2] = v12;
      v14 = v7 == 0;
      result = sub_22EF8E3C4(v4, v13);
      --v7;
      v3 = v10;
      v9 -= 8;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_22F378260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  if (*(_DWORD *)(a1 + 4) == 1)
  {
    if (*(_WORD *)(a2 + 4))
    {
      v4 = 0;
      v5 = 16 * *(unsigned __int16 *)(a2 + 4);
      v6 = 32;
      do
      {
        v7 = (_QWORD *)(sub_22F3C64D0(a2) + v4);
        if ((*(_BYTE *)v7 & 1) == 0)
        {
          if (sub_22F3C6428(a2, v7))
          {
            v8 = *v7 & 0xFFFFFFFFFFFFFFF8;
            if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v8 + 29) & 2) == 0)
              sub_22EF814B0(a1 + 8, a1, v8);
          }
          else
          {
            sub_22EF8CE48(a1 + 8, 0, 0);
          }
        }
        v4 += 16;
        v6 += 8;
      }
      while (v5 != v4);
    }
    v9 = sub_22F3C6624(a2);
    sub_22EF82F70(a1, v9);
    v10 = sub_22F3C6220(a2);
    v11 = *(uint64_t **)(v10 + 120);
    v12 = sub_22EFBAACC(v10);
    if (v12)
    {
      v13 = 8 * v12;
      do
      {
        v14 = *v11;
        if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v14 + 29) & 2) == 0)
          sub_22EF814B0(a1 + 8, a1, v14);
        ++v11;
        v13 -= 8;
      }
      while (v13);
    }
    sub_22F3C63FC(a2);
    return sub_22EF8CE48((int)a1 + 8, 0, 0);
  }
  else
  {
    result = sub_22F3C61E8(a2);
    if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(result + 29) & 2) == 0)
      return sub_22EF814B0(a1 + 8, a1, result);
  }
  return result;
}

llvm::raw_ostream *sub_22F37840C(llvm::raw_ostream *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v3 = (uint64_t)result;
  v4 = a2 + 40;
  v5 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v5)
  {
    v6 = 8 * v5;
    v7 = (uint64_t *)(a2 + 40);
    do
    {
      v8 = *v7;
      if (*(_DWORD *)(v3 + 4) != 1 || (*(_BYTE *)(v8 + 29) & 2) == 0)
        result = (llvm::raw_ostream *)sub_22EF814B0(v3 + 8, v3, v8);
      ++v7;
      v6 -= 8;
    }
    while (v6);
    v9 = *(unsigned int *)(a2 + 16);
  }
  else
  {
    v9 = 0;
  }
  v10 = *(unsigned int *)(a2 + 20);
  if ((_DWORD)v10)
  {
    v11 = 8 * v10;
    v12 = (uint64_t *)(v4 + 8 * v9);
    do
    {
      v13 = *v12++;
      result = sub_22EF8E7B0((_BYTE *)(v3 + 8), v3, v13);
      v11 -= 8;
    }
    while (v11);
  }
  return result;
}

llvm::raw_ostream *sub_22F3784BC(llvm::raw_ostream *result, uint64_t a2)
{
  uint64_t v2;
  llvm::raw_ostream *v3;
  __int128 *v4;
  _BYTE *v5;
  uint64_t v6;
  llvm::raw_ostream *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((*(_BYTE *)(a2 + 2) & 1) != 0)
  {
    v2 = *(unsigned int *)(a2 + 28);
    if ((_DWORD)v2)
    {
      v3 = result;
      v4 = (__int128 *)(a2 + 40);
      v5 = (char *)result + 8;
      v6 = 24 * v2;
      do
      {
        v8 = *v4;
        v9 = *((_QWORD *)v4 + 2);
        v7 = v3;
        v11 = 0;
        v12 = 0;
        v10 = 0;
        result = sub_22EF82658(v5, (uint64_t)&v7);
        v4 = (__int128 *)((char *)v4 + 24);
        v6 -= 24;
      }
      while (v6);
    }
  }
  return result;
}

llvm::raw_ostream *sub_22F378550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_DWORD *)(a1 + 4) != 1 || (*(_BYTE *)(v4 + 29) & 2) == 0)
    sub_22EF814B0(a1 + 8, a1, v4);
  sub_22F3C6ADC(a2, (uint64_t)&v6);
  v9 = v6;
  v8 = a1;
  v10 = v7;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  return sub_22EF82658((_BYTE *)(a1 + 8), (uint64_t)&v8);
}

uint64_t sub_22F3785CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v2 = *a1;
  v3 = *a1 + 8;
  sub_22F4030A0(v3, (uint64_t)(a1 + 1));
  v4 = (uint64_t *)a1[2];
  if (v4)
    sub_22F372F24(v2, *v4);
  return sub_22EF8CE48(v3, 0, 0);
}

void sub_22F378634(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F378640(a1 + 8, *a2);
}

void sub_22F378640(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  char v27;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 63) < 0)
    v15 = *(_QWORD *)(a1 + 48);
  else
    v15 = *(unsigned __int8 *)(a1 + 63);
  if (v15)
  {
    if (*(char *)(a1 + 63) >= 0)
      v16 = (const char *)(a1 + 40);
    else
      v16 = *(const char **)(a1 + 40);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22F3785CC((uint64_t *)(a1 + 8));
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v27 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F37888C();
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v27);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

void sub_22F37888C(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F378898(a1 + 8, *a2);
}

void sub_22F378898(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  char v27;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 47) < 0)
    v15 = *(_QWORD *)(a1 + 32);
  else
    v15 = *(unsigned __int8 *)(a1 + 47);
  if (v15)
  {
    if (*(char *)(a1 + 47) >= 0)
      v16 = (const char *)(a1 + 24);
    else
      v16 = *(const char **)(a1 + 24);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22EF8E9F0((uint64_t *)(a1 + 8));
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v27 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F378AE4();
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v27);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

void sub_22F378AE4(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F378AF0(a1 + 8, *a2);
}

void sub_22F378AF0(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  uint64_t *v27;
  char v28;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 47) < 0)
    v15 = *(_QWORD *)(a1 + 32);
  else
    v15 = *(unsigned __int8 *)(a1 + 47);
  if (v15)
  {
    if (*(char *)(a1 + 47) >= 0)
      v16 = (const char *)(a1 + 24);
    else
      v16 = *(const char **)(a1 + 24);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22EF8D174(a1 + 8);
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v28 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F378D3C(v27);
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v28);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

uint64_t sub_22F378D3C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v2 = *a1;
  v3 = *a1 + 8;
  sub_22F402410(v3, a1[1]);
  result = a1[1];
  if (result)
  {
    v5 = (uint64_t *)sub_22F3A7DC8(result);
    result = sub_22F3A7E0C(a1[1]);
    if (v5 != (uint64_t *)result)
    {
      v6 = (uint64_t *)result;
      do
      {
        v7 = *v5++;
        v8 = a1[2];
        v9[0] = v2;
        v9[1] = v7;
        v9[2] = v8;
        result = sub_22EF8EE14(v3, v9);
      }
      while (v5 != v6);
    }
  }
  return result;
}

void sub_22F378DCC(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F378DD8(a1 + 8, *a2);
}

void sub_22F378DD8(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  _BYTE *v27;
  uint64_t *v28;
  char v29;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 55) < 0)
    v15 = *(_QWORD *)(a1 + 40);
  else
    v15 = *(unsigned __int8 *)(a1 + 55);
  if (v15)
  {
    if (*(char *)(a1 + 55) >= 0)
      v16 = (const char *)(a1 + 32);
    else
      v16 = *(const char **)(a1 + 32);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22F378D3C((uint64_t *)(a1 + 8));
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v29 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F379024(v27, v28);
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v29);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

void sub_22F379024(_BYTE *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5[11];

  v5[10] = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  sub_22EF530AC((uint64_t)v5, (uint64_t)(a2 + 1));
  v5[9] = a2[10];
  sub_22EF8F200(a1, &v4);
  if (LODWORD(v5[0]) >= 2)
    sub_22EF53BC0(v5);
}

void sub_22F3790C4(uint64_t a1)
{
  sub_22EF8F664(a1);
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3790E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x80uLL);
  *v2 = &off_24FABB268;
  sub_22EF8F6B4((uint64_t)(v2 + 1), v1);
  return v2;
}

uint64_t sub_22F379128(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24FABB268;
  return sub_22EF8F6B4((uint64_t)(a2 + 1), a1 + 8);
}

void sub_22F379144(uint64_t a1, unsigned __int8 *a2)
{
  sub_22F379150(a1 + 8, *a2);
}

void sub_22F379150(uint64_t a1, int a2)
{
  llvm::raw_ostream **v4;
  llvm::raw_ostream *v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  int v8;
  llvm::raw_ostream *v9;
  const char *v10;
  llvm::raw_ostream *v11;
  char v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  const char *v16;
  llvm::raw_ostream *v17;
  std::string::value_type v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  llvm::raw_ostream *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  char v31;

  v4 = *(llvm::raw_ostream ***)a1;
  v5 = **(llvm::raw_ostream ***)a1;
  v6 = (_BYTE *)*((_QWORD *)v5 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)v5 + 3))
  {
    llvm::raw_ostream::write(v5);
  }
  else
  {
    *((_QWORD *)v5 + 4) = v6 + 1;
    *v6 = 10;
  }
  v7 = *v4;
  v8 = *((unsigned __int8 *)v4 + 8);
  v9 = *v4;
  if (*((_BYTE *)v4 + 8))
  {
    (*(void (**)(llvm::raw_ostream *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v7 + 24))(*v4, 4, 0, 0);
    v9 = *v4;
  }
  if (*((char *)v4 + 1087) >= 0)
    v10 = (const char *)(v4 + 133);
  else
    v10 = (const char *)v4[133];
  v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, v10);
  if (a2)
    v12 = 96;
  else
    v12 = 124;
  v13 = (char *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v13 >= *((_QWORD *)v11 + 3))
  {
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v13 + 1;
    *v13 = v12;
  }
  v14 = (_BYTE *)*((_QWORD *)v11 + 4);
  if ((unint64_t)v14 >= *((_QWORD *)v11 + 3))
  {
    llvm::raw_ostream::write(v11);
  }
  else
  {
    *((_QWORD *)v11 + 4) = v14 + 1;
    *v14 = 45;
  }
  if (*(char *)(a1 + 119) < 0)
    v15 = *(_QWORD *)(a1 + 104);
  else
    v15 = *(unsigned __int8 *)(a1 + 119);
  if (v15)
  {
    if (*(char *)(a1 + 119) >= 0)
      v16 = (const char *)(a1 + 96);
    else
      v16 = *(const char **)(a1 + 96);
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::write(*v4, v16);
    sub_22E47DAC0(v17, ": ");
  }
  if (a2)
    v18 = 32;
  else
    v18 = 124;
  std::string::push_back((std::string *)(v4 + 133), v18);
  std::string::push_back((std::string *)(v4 + 133), 32);
  if (v8)
    (*(void (**)(llvm::raw_ostream *))(*(_QWORD *)v7 + 32))(v7);
  *((_BYTE *)v4 + 1057) = 1;
  v19 = *((_DWORD *)v4 + 6);
  sub_22F0FE404(*(_QWORD *)(a1 + 8) + 8, a1 + 16);
LABEL_31:
  LODWORD(v20) = *((_DWORD *)v4 + 6);
  while (v19 < v20)
  {
    v21 = (uint64_t)v4[2] + 32 * v20;
    v31 = 1;
    v22 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      sub_22E4A06C4();
      sub_22F3793A8(v27, v28, v29, v30);
      return;
    }
    (*(void (**)(uint64_t, char *))(*(_QWORD *)v22 + 48))(v22, &v31);
    v20 = (*((_DWORD *)v4 + 6) - 1);
    *((_DWORD *)v4 + 6) = v20;
    v23 = (uint64_t)v4[2] + 32 * v20;
    v24 = *(_QWORD **)(v23 + 24);
    if (v24 == (_QWORD *)v23)
    {
      v24 = (_QWORD *)((char *)v4[2] + 32 * v20);
      v25 = 4;
      goto LABEL_37;
    }
    if (v24)
    {
      v25 = 5;
LABEL_37:
      (*(void (**)(void))(*v24 + 8 * v25))();
      goto LABEL_31;
    }
  }
  if (*((char *)v4 + 1087) < 0)
    v26 = v4[134];
  else
    v26 = (llvm::raw_ostream *)*((unsigned __int8 *)v4 + 1087);
  std::string::resize((std::string *)(v4 + 133), (std::string::size_type)v26 - 2, 0);
}

uint64_t sub_22F3793A8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;
  uint64_t v9;

  if (*(_BYTE *)(a2 + 103))
  {
    v8 = sub_22EF5B130(*(_QWORD *)a2);
    *(_DWORD *)(v8 + 180) = *(_DWORD *)(sub_22EF5B130(*(_QWORD *)(a2 + 8)) + 180);
  }
  *(_BYTE *)(a2 + 103) = 0;
  v9 = sub_22EF5B130(*(_QWORD *)a2);
  *(_DWORD *)(v9 + 312) = a3;
  *(_DWORD *)(v9 + 316) = a4;
  if (*(char *)(v9 + 311) < 0)
  {
    **(_BYTE **)(v9 + 288) = 0;
    *(_QWORD *)(v9 + 296) = 0;
  }
  else
  {
    *(_BYTE *)(v9 + 288) = 0;
    *(_BYTE *)(v9 + 311) = 0;
  }
  return sub_22E78E558(a1, v9);
}

uint64_t sub_22F379440(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;
  uint64_t v9;

  if (!*(_BYTE *)(a2 + 103))
  {
    v8 = sub_22EF5B130(*(_QWORD *)(a2 + 8));
    *(_DWORD *)(v8 + 180) = *(_DWORD *)(sub_22EF5B130(*(_QWORD *)a2) + 180);
  }
  *(_BYTE *)(a2 + 103) = 1;
  v9 = sub_22EF5B130(*(_QWORD *)(a2 + 8));
  *(_DWORD *)(v9 + 312) = a3;
  *(_DWORD *)(v9 + 316) = a4;
  if (*(char *)(v9 + 311) < 0)
  {
    **(_BYTE **)(v9 + 288) = 0;
    *(_QWORD *)(v9 + 296) = 0;
  }
  else
  {
    *(_BYTE *)(v9 + 288) = 0;
    *(_BYTE *)(v9 + 311) = 0;
  }
  return sub_22E78E558(a1, v9);
}

uint64_t sub_22F3794DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = sub_22EF8F978(a1, a2, a3);
  if ((_DWORD)result)
    return sub_22EF8FD38(a1) ^ 1;
  return result;
}

uint64_t sub_22F37950C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v5 = sub_22EFC7948(a2);
  v6 = sub_22EFC7948(a3);
  if ((v5 != 0) == (v6 == 0))
    return 0;
  if (!v5)
    return 1;
  result = sub_22EF8F978(a1, v5, v6);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22F379584(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v16;
  int v17;
  BOOL v18;
  unsigned int v20;

  if (a2)
  {
    v5 = ((a4 >> 4) ^ (a4 >> 9) | ((unint64_t)((a3 >> 4) ^ (a3 >> 9)) << 32))
       + ~((unint64_t)((a4 >> 4) ^ (a4 >> 9)) << 32);
    v6 = (v5 ^ (v5 >> 22)) + ~((v5 ^ (v5 >> 22)) << 13);
    v7 = (9 * (v6 ^ (v6 >> 8))) ^ ((9 * (v6 ^ (v6 >> 8))) >> 15);
    v8 = a2 - 1;
    v9 = (a2 - 1) & (((v7 + ~(v7 << 27)) >> 31) ^ (v7 + ~((_DWORD)v7 << 27)));
    v10 = (_QWORD *)(a1 + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    if (*v10 == a3 && v12 == a4)
    {
      v14 = 1;
    }
    else
    {
      v16 = 0;
      v17 = 1;
      while (v11 != -4096 || v12 != -4096)
      {
        if (v16)
          v18 = 0;
        else
          v18 = v12 == -8192;
        if (v18 && v11 == -8192)
          v16 = v10;
        v20 = v9 + v17++;
        v9 = v20 & v8;
        v10 = (_QWORD *)(a1 + 16 * (v20 & v8));
        v11 = *v10;
        v12 = v10[1];
        v14 = 1;
        if (*v10 == a3 && v12 == a4)
          goto LABEL_8;
      }
      v14 = 0;
      if (v16)
        v10 = v16;
    }
  }
  else
  {
    v10 = 0;
    v14 = 0;
  }
LABEL_8:
  *a5 = v10;
  return v14;
}

uint64_t sub_22F37966C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v10 = 0;
  result = sub_22F379584(*(_QWORD *)a2, *(_DWORD *)(a2 + 16), *a3, a3[1], &v10);
  v7 = v10;
  if ((result & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    result = (uint64_t)sub_22F3796FC(a2, a3, v10);
    v7 = (_QWORD *)result;
    *(_OWORD *)result = *(_OWORD *)a3;
    v8 = 1;
  }
  v9 = *(_QWORD *)a2 + 16 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v8;
  return result;
}

_QWORD *sub_22F3796FC(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  int v5;
  unsigned int v6;
  _QWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
    goto LABEL_8;
  }
  if (v6 + ~v5 - *(_DWORD *)(a1 + 12) <= v6 >> 3)
  {
LABEL_8:
    sub_22EF9554C(a1, v6);
    v8 = 0;
    sub_22F379584(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, a2[1], &v8);
    a3 = v8;
  }
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -4096 || a3[1] != -4096)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

void sub_22F3797B8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;

  *(_QWORD *)(a1 + 8) = 0;
  v6 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v6)
    memset_pattern16(*(void **)a1, &unk_22F49F970, 16 * v6);
  while (a2 != a3)
  {
    v7 = *a2;
    v8 = a2[1];
    if ((*a2 != -4096 || v8 != -4096) && (v7 != -8192 || v8 != -8192))
    {
      v10 = 0;
      sub_22F379584(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), v7, v8, &v10);
      v9 = v10;
      *v10 = *a2;
      v9[1] = a2[1];
      ++*(_DWORD *)(a1 + 8);
    }
    a2 += 2;
  }
}

uint64_t sub_22F379878(uint64_t a1)
{
  return dword_22F49FE64[*(_DWORD *)(a1 + 28) & 0x7F];
}

uint64_t sub_22F379890(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_22F3798AC + 4 * word_22F49FC88[*a1]))();
}

uint64_t sub_22F3798AC()
{
  return 174;
}

uint64_t sub_22F37A00C(uint64_t a1)
{
  return *(unsigned int *)((char *)&unk_22F49FFB4 + ((uint64_t)((unint64_t)*(unsigned int *)(a1 + 16) << 56) >> 54));
}

uint64_t sub_22F37A024(_QWORD *a1)
{
  if ((*a1 & 0xFLL) != 0)
    return 7;
  else
    return *(unsigned int *)((char *)&unk_22F4A0098
                           + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(*a1 & 0xFFFFFFFFFFFFFFF0)
                                                                          + 16) << 56) >> 54));
}

llvm::raw_ostream *sub_22F37A058(llvm::raw_ostream *result, llvm::raw_ostream *a2, int a3)
{
  uint64_t v5;
  _BYTE *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const char *v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  llvm::raw_ostream *v28;
  uint64_t v29;

  v5 = (uint64_t)result;
  if (*((_DWORD *)result + 9))
  {
    v6 = (_BYTE *)*((_QWORD *)a2 + 4);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 3))
    {
      v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(a2);
    }
    else
    {
      *((_QWORD *)a2 + 4) = v6 + 1;
      *v6 = 32;
      v7 = a2;
    }
    result = sub_22E47DAC0(v7, (char *)*(&off_24FABF600 + *(int *)(v5 + 36)));
  }
  v8 = *(_QWORD *)(v5 + 40);
  if (v8)
  {
    sub_22E47DAC0(a2, " simdlen(");
    sub_22F0D9044(v8, (int)a2, 0, a3, 0, "\n", 1uLL);
    result = sub_22E47DAC0(a2, ")");
  }
  if (*(_DWORD *)(v5 + 48))
  {
    sub_22E47DAC0(a2, " uniform");
    v9 = *(unsigned int *)(v5 + 48);
    if ((_DWORD)v9)
    {
      v10 = *(uint64_t **)(v5 + 56);
      v11 = "(";
      v12 = 8 * v9;
      v13 = 1;
      do
      {
        v14 = *v10;
        v15 = (void *)*((_QWORD *)a2 + 4);
        if (v13 <= *((_QWORD *)a2 + 3) - (_QWORD)v15)
        {
          memcpy(v15, v11, v13);
          *((_QWORD *)a2 + 4) += v13;
        }
        else
        {
          llvm::raw_ostream::write(a2, v11);
        }
        sub_22F0D9044(v14, (int)a2, 0, a3, 0, "\n", 1uLL);
        ++v10;
        v13 = 2;
        v11 = ", ";
        v12 -= 8;
      }
      while (v12);
    }
    result = sub_22E47DAC0(a2, ")");
  }
  v29 = v5;
  v16 = *(unsigned int *)(v5 + 64);
  if ((_DWORD)v16)
  {
    v17 = *(uint64_t **)(v5 + 72);
    v18 = 8 * v16;
    v19 = *(_QWORD **)(v29 + 88);
    do
    {
      v20 = *v17;
      sub_22E47DAC0(a2, " aligned(");
      sub_22F0D9044(v20, (int)a2, 0, a3, 0, "\n", 1uLL);
      if (*v19)
      {
        sub_22E47DAC0(a2, ": ");
        sub_22F0D9044(*v19, (int)a2, 0, a3, 0, "\n", 1uLL);
      }
      result = sub_22E47DAC0(a2, ")");
      ++v19;
      ++v17;
      v18 -= 8;
    }
    while (v18);
  }
  v21 = *(unsigned int *)(v29 + 96);
  if ((_DWORD)v21)
  {
    v22 = *(uint64_t **)(v29 + 104);
    v23 = *(int **)(v29 + 120);
    v24 = 8 * v21;
    v25 = *(_QWORD **)(v29 + 136);
    do
    {
      v26 = *v22;
      sub_22E47DAC0(a2, " linear(");
      if (*v23 != 3)
      {
        v27 = (char *)sub_22F42187C((const char *)0x2C, *v23);
        v28 = sub_22E47DAC0(a2, v27);
        sub_22E47DAC0(v28, "(");
      }
      sub_22F0D9044(v26, (int)a2, 0, a3, 0, "\n", 1uLL);
      if (*v23 != 3)
        sub_22E47DAC0(a2, ")");
      if (*v25)
      {
        sub_22E47DAC0(a2, ": ");
        sub_22F0D9044(*v25, (int)a2, 0, a3, 0, "\n", 1uLL);
      }
      result = sub_22E47DAC0(a2, ")");
      ++v25;
      ++v23;
      ++v22;
      v24 -= 8;
    }
    while (v24);
  }
  return result;
}

llvm::raw_ostream *sub_22F37A3D0(llvm::raw_ostream *result, llvm::raw_ostream *a2, int a3)
{
  uint64_t v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  _BYTE *v8;
  llvm::raw_ostream *v9;
  char *v10;
  uint64_t v11;
  char *v12;

  v5 = (uint64_t)result;
  if (*((_DWORD *)result + 10) != 2)
  {
    v6 = sub_22E47DAC0(a2, " device_type(");
    v7 = sub_22E47DAC0(v6, off_24FABF618[*(int *)(v5 + 40)]);
    result = sub_22E47DAC0(v7, ")");
  }
  if (*(_DWORD *)(v5 + 36))
  {
    v8 = (_BYTE *)*((_QWORD *)a2 + 4);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 3))
    {
      v9 = (llvm::raw_ostream *)llvm::raw_ostream::write(a2);
    }
    else
    {
      *((_QWORD *)a2 + 4) = v8 + 1;
      *v8 = 32;
      v9 = a2;
    }
    if (*(_DWORD *)(v5 + 36))
      v10 = "link";
    else
      v10 = "to";
    result = sub_22E47DAC0(v9, v10);
  }
  v11 = *(_QWORD *)(v5 + 48);
  if (v11)
  {
    sub_22E47DAC0(a2, " indirect(");
    sub_22F0D9044(v11, (int)a2, 0, a3, 0, "\n", 1uLL);
    v12 = ")";
    return sub_22E47DAC0(a2, v12);
  }
  if (*(_BYTE *)(v5 + 56))
  {
    v12 = " indirect";
    return sub_22E47DAC0(a2, v12);
  }
  return result;
}

char *sub_22F37A500(int a1)
{
  return off_24FABF618[a1];
}

uint64_t sub_22F37A510(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = sub_22EF95D10(a1);
  if (v2)
    return *(unsigned int *)(v1 + 40) | 0x100000000;
  else
    return 0;
}

uint64_t sub_22F37A53C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = sub_22EF95D10(a1);
  if (v2)
    return *(unsigned int *)(v1 + 16) | 0x100000000;
  else
    return 0;
}

llvm::raw_ostream *sub_22F37A568(uint64_t a1, llvm::raw_ostream *a2, uint64_t a3)
{
  uint64_t v6;
  llvm::raw_ostream *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    sub_22E47DAC0(a2, "(");
    sub_22F0D9044(v6, (int)a2, 0, a3, 0, "\n", 1uLL);
    sub_22E47DAC0(a2, ")");
  }
  v7 = sub_22E47DAC0(a2, " match(");
  v8 = sub_22F3EEFD4(v7, *(_DWORD **)(a1 + 48));
  result = sub_22E47DAC0(v8, ")");
  v14[0] = a2;
  v14[1] = a3;
  if (*(_DWORD *)(a1 + 56))
  {
    sub_22E47DAC0(a2, " adjust_args(nothing:");
    sub_22EF95DD8((uint64_t)v14, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 64) + 8 * *(unsigned int *)(a1 + 56));
    result = sub_22E47DAC0(a2, ")");
  }
  if (*(_DWORD *)(a1 + 72))
  {
    sub_22E47DAC0(a2, " adjust_args(need_device_ptr:");
    sub_22EF95DD8((uint64_t)v14, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 80) + 8 * *(unsigned int *)(a1 + 72));
    result = sub_22E47DAC0(a2, ")");
  }
  if (*(_DWORD *)(a1 + 88))
  {
    sub_22E47DAC0(a2, " append_args(");
    v10 = *(unsigned int *)(a1 + 88);
    if ((_DWORD)v10)
    {
      v11 = 0;
      v12 = 4 * v10;
      v13 = *(_QWORD *)(a1 + 96);
      do
      {
        if (v11)
          sub_22E47DAC0(a2, ", ");
        sub_22E47DAC0(a2, "interop(");
        sub_22E47DAC0(a2, off_24FABF630[*(int *)(v13 + v11)]);
        sub_22E47DAC0(a2, ")");
        v11 += 4;
      }
      while (v12 != v11);
    }
    return sub_22E47DAC0(a2, ")");
  }
  return result;
}

__n128 sub_22F37A754(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 360;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 360;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 360;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 360;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37A7EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF648[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37A854(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 49;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 49;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 49;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 49;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37A8EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF660[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37A954(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 50;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 50;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 50;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 50;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37A9EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF678[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37AA54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  result = *(__n128 *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 86;
  *(__n128 *)(v3 + 40) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 86;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 86;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 86;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F37AAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 87;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 87;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 87;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 87;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37AB94(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;
  llvm::raw_ostream *v7;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::amdgpu_num_sgpr";
  else
    v5 = " __attribute__((amdgpu_num_sgpr";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F37AC64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 88;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 88;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 88;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 88;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37AD04(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;
  llvm::raw_ostream *v7;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::amdgpu_num_vgpr";
  else
    v5 = " __attribute__((amdgpu_num_vgpr";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F37ADD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  result = *(__n128 *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 89;
  *(__n128 *)(v3 + 40) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 89;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 89;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 89;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F37AE74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 90;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 90;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 90;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 90;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37AF14(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FABF6C0[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0A88[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F37AFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 91;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 91;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 91;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 91;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37B080(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0A88[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37B0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 92;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 92;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 92;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 92;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37B180(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF6D8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F37B1E8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 361;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F37B2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F37B1E8(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F37B368(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  const void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  llvm::raw_ostream *v20;
  const void *v21;
  unint64_t v22;
  void *v23;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::abi_tag");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v7)
    {
      v11 = "]]";
      goto LABEL_22;
    }
    v8 = *(_QWORD *)(a1 + 40);
    v9 = v8 + 16 * v7;
    v10 = "(";
    v11 = "]]";
    do
    {
      sub_22E47DAC0(a2, v10);
      v12 = sub_22E47DAC0(a2, "\"");
      v13 = *(const void **)v8;
      v14 = *(_QWORD *)(v8 + 8);
      v15 = (void *)*((_QWORD *)v12 + 4);
      if (v14 <= *((_QWORD *)v12 + 3) - (_QWORD)v15)
      {
        if (v14)
        {
          memcpy(v15, v13, *(_QWORD *)(v8 + 8));
          *((_QWORD *)v12 + 4) += v14;
        }
      }
      else
      {
        v12 = (llvm::raw_ostream *)llvm::raw_ostream::write(v12, (const char *)v13);
      }
      sub_22E47DAC0(v12, "\"");
      v8 += 16;
      v10 = ", ";
    }
    while (v8 != v9);
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((abi_tag");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_22;
    }
    v17 = *(_QWORD *)(a1 + 40);
    v18 = v17 + 16 * v16;
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      v21 = *(const void **)v17;
      v22 = *(_QWORD *)(v17 + 8);
      v23 = (void *)*((_QWORD *)v20 + 4);
      if (v22 <= *((_QWORD *)v20 + 3) - (_QWORD)v23)
      {
        if (v22)
        {
          memcpy(v23, v21, *(_QWORD *)(v17 + 8));
          *((_QWORD *)v20 + 4) += v22;
        }
      }
      else
      {
        v20 = (llvm::raw_ostream *)llvm::raw_ostream::write(v20, (const char *)v21);
      }
      sub_22E47DAC0(v20, "\"");
      v17 += 16;
      v19 = ", ";
    }
    while (v17 != v18);
  }
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_22:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

uint64_t sub_22F37B5A8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 93;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37B624(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 93;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F37B714(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F37B774(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((acquire_capability");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F37BA68(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF6F0[v2];
}

uint64_t sub_22F37BAA8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 51;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F37BB20(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 51;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F37BBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 51;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F37BCCC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::acquire_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((acquire_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F37BE50(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 94;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 94;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F37BFBC(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((acquired_after");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = 8 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v6 += 8;
      llvm::raw_ostream::operator<<();
      v8 = ", ";
      v7 -= 8;
    }
    while (v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F37C090(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 95;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37C10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 95;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F37C1FC(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((acquired_before");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = 8 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v6 += 8;
      llvm::raw_ostream::operator<<();
      v8 = ", ";
      v7 -= 8;
    }
    while (v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F37C2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  v7 = *(unsigned __int8 *)(v3 + 34) << 16;
  *(_WORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 34) = (v7 & 0xFFE00000) >> 16;
  *(_DWORD *)(v3 + 36) = v4;
  v8 = v7 & 0xFFE00000 | (*(unsigned __int8 *)(a1 + 34) << 16) & 0x1FFFF;
  *(_WORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

llvm::raw_ostream *sub_22F37C374(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF720[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F37C430(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 362;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F37C50C(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 362;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F37C584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 362;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F37C66C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::alias");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((alias");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F37C7F0(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 96;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F37C874(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 96;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 96;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 96;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 96;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F37C90C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 97;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F37C990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 97;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 97;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 97;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 97;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F37CA28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 363;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 363;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 363;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 363;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37CAC8(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((align_value");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F37CB90(uint64_t a1, char a2, uint64_t a3, _OWORD *a4)
{
  uint64_t result;
  __int128 v8;
  int v9;
  int v10;
  unsigned int v11;

  result = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v8 = a4[1];
  *(_OWORD *)result = *a4;
  *(_OWORD *)(result + 16) = v8;
  v9 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_BYTE *)(result + 35) = a2;
  *(_QWORD *)(result + 40) = a3;
  *(_WORD *)(result + 32) = 98;
  *(_BYTE *)(result + 34) = (v9 | 0x40000u) >> 16;
  v10 = *(unsigned __int8 *)(result + 30);
  if ((~(v10 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v11 = (*(unsigned __int16 *)(result + 28) | (v10 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v11;
    *(_BYTE *)(result + 30) = BYTE2(v11);
  }
  return result;
}

uint64_t sub_22F37CC2C(uint64_t a1)
{
  _QWORD *v1;
  unsigned int v2;

  v1 = *(_QWORD **)(a1 + 40);
  if (!*(_BYTE *)(a1 + 35))
    return (*(unsigned __int8 *)(*(_QWORD *)(*v1 & 0xFFFFFFFFFFFFFFF0) + 17) >> 2) & 1;
  if (!v1)
    return 0;
  v2 = *(_DWORD *)v1;
  if ((v2 & 0x10000) != 0)
    return 1;
  else
    return (v2 >> 15) & 1;
}

uint64_t sub_22F37CC74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int *v4;
  int v5;
  uint64_t v6;
  int *v8;
  unsigned int v9;

  if (!*(_BYTE *)(a1 + 35))
    return 0;
  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
  {
    sub_22F007D7C(&v8, v3, a2, 0);
    if (v9 >= 0x41)
      v4 = v8;
    else
      v4 = (int *)&v8;
    v5 = *v4;
    v6 = sub_22EF5CDF0(a2, *(_QWORD *)(*(_QWORD *)(a2 + 16408) & 0xFFFFFFFFFFFFFFF0)) * v5;
    if (v9 >= 0x41)
    {
      if (v8)
        MEMORY[0x2348A0E84](v8, 0x1000C8000313F17);
    }
    return v6;
  }
  return sub_22F368934(a2);
}

void sub_22F37CD34(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F37CD98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  sub_22E47DAC0(v16, " [[gnu::aligned");
  if (*(_BYTE *)(v18 + 35))
  {
    v20 = *(_QWORD *)(v18 + 40);
    v19 = (_QWORD *)(v18 + 40);
    if (v20)
    {
      sub_22E47DAC0(v16, "(");
      sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
      sub_22F0D9044(*v19, (int)v16, 0, v17, 0, "\n", 1uLL);
      sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
      sub_22E47DAC0(v16, ")");
    }
  }
  return sub_22E47DAC0(v16, "]]");
}

char *sub_22F37CF04(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF738[v2];
}

uint64_t sub_22F37CF44(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 99;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F37CFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 99;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 99;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 99;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 99;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37D070(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF768[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F37D130(uint64_t a1, int a2, int a3, _OWORD *a4)
{
  uint64_t result;
  __int128 v8;
  int v9;
  int v10;
  unsigned int v11;

  result = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v8 = a4[1];
  *(_OWORD *)result = *a4;
  *(_OWORD *)(result + 16) = v8;
  v9 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_DWORD *)(result + 40) = a3;
  *(_WORD *)(result + 32) = 100;
  *(_BYTE *)(result + 34) = (v9 | 0x40000u) >> 16;
  v10 = *(unsigned __int8 *)(result + 30);
  if ((~(v10 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v11 = (*(unsigned __int16 *)(result + 28) | (v10 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v11;
    *(_BYTE *)(result + 30) = BYTE2(v11);
  }
  return result;
}

double sub_22F37D1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 100;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 100;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 100;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 100;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37D268(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v10;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((alloc_size");
    sub_22E47DAC0(a2, "(");
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v10 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v10, (char *)&unk_22F5BAADF);
    v7 = "))";
    if ((*(_DWORD *)(a1 + 40) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_22E47DAC0(a2, " [[gnu::alloc_size");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  v7 = "]]";
  if ((*(_DWORD *)(a1 + 40) & 0x80000000) != 0)
  {
LABEL_5:
    sub_22E47DAC0(a2, ", ");
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v8 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v8, (char *)&unk_22F5BAADF);
  }
LABEL_6:
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F37D3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 101;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 101;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 101;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 101;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37D45C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::always_destroy";
  else
    v5 = " __attribute__((always_destroy";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F37D4D8(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 45;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

llvm::raw_ostream *sub_22F37D560(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FABF7B0[v4];
  sub_22E47DAC0(a2, off_24FABF780[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37D5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 102;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 102;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 102;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 102;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37D660(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((analyzer_noreturn");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F37D6AC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 46;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F37D794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F37D6AC(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F37D82C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  const void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  llvm::raw_ostream *v20;
  const void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  llvm::raw_ostream *v28;
  const void *v29;
  unint64_t v30;
  void *v31;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((analyzer_suppress");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_31;
    }
    v17 = *(_QWORD *)(a1 + 40);
    v18 = v17 + 16 * v16;
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      v21 = *(const void **)v17;
      v22 = *(_QWORD *)(v17 + 8);
      v23 = (void *)*((_QWORD *)v20 + 4);
      if (v22 <= *((_QWORD *)v20 + 3) - (_QWORD)v23)
      {
        if (v22)
        {
          memcpy(v23, v21, *(_QWORD *)(v17 + 8));
          *((_QWORD *)v20 + 4) += v22;
        }
      }
      else
      {
        v20 = (llvm::raw_ostream *)llvm::raw_ostream::write(v20, (const char *)v21);
      }
      sub_22E47DAC0(v20, "\"");
      v17 += 16;
      v19 = ", ";
    }
    while (v17 != v18);
    goto LABEL_30;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[clang::analyzer_suppress");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v24 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v24)
    {
      v25 = *(_QWORD *)(a1 + 40);
      v26 = v25 + 16 * v24;
      v27 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v27);
        v28 = sub_22E47DAC0(a2, "\"");
        v29 = *(const void **)v25;
        v30 = *(_QWORD *)(v25 + 8);
        v31 = (void *)*((_QWORD *)v28 + 4);
        if (v30 <= *((_QWORD *)v28 + 3) - (_QWORD)v31)
        {
          if (v30)
          {
            memcpy(v31, v29, *(_QWORD *)(v25 + 8));
            *((_QWORD *)v28 + 4) += v30;
          }
        }
        else
        {
          v28 = (llvm::raw_ostream *)llvm::raw_ostream::write(v28, (const char *)v29);
        }
        sub_22E47DAC0(v28, "\"");
        v25 += 16;
        v27 = ", ";
      }
      while (v25 != v26);
      goto LABEL_30;
    }
LABEL_32:
    v11 = "]]";
    goto LABEL_31;
  }
  sub_22E47DAC0(a2, " [[clang::analyzer_suppress");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_32;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = v8 + 16 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v12 = sub_22E47DAC0(a2, "\"");
    v13 = *(const void **)v8;
    v14 = *(_QWORD *)(v8 + 8);
    v15 = (void *)*((_QWORD *)v12 + 4);
    if (v14 <= *((_QWORD *)v12 + 3) - (_QWORD)v15)
    {
      if (v14)
      {
        memcpy(v15, v13, *(_QWORD *)(v8 + 8));
        *((_QWORD *)v12 + 4) += v14;
      }
    }
    else
    {
      v12 = (llvm::raw_ostream *)llvm::raw_ostream::write(v12, (const char *)v13);
    }
    sub_22E47DAC0(v12, "\"");
    v8 += 16;
    v10 = ", ";
  }
  while (v8 != v9);
LABEL_30:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_31:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

uint64_t sub_22F37DB38(uint64_t a1, const void *a2, uint64_t a3, const void *a4, unsigned int a5, _OWORD *a6)
{
  uint64_t v12;
  uint64_t result;
  int v14;
  unsigned int v15;

  v12 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  result = sub_22F37DCAC(v12, a1, a6, a2, a3, a4, a5);
  v14 = *(unsigned __int8 *)(result + 30);
  if ((~(v14 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v15 = (*(unsigned __int16 *)(result + 28) | (v14 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v15;
    *(_BYTE *)(result + 30) = BYTE2(v15);
  }
  return result;
}

uint64_t sub_22F37DBD4(uint64_t a1, const void *a2, unsigned int a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  int v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  v9 = v8;
  v10 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 77;
  *(_BYTE *)(v8 + 34) = v11 & 0xE0;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 44) = 0;
  *(_QWORD *)(v8 + 36) = 0;
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  *(_DWORD *)(v8 + 64) = a3;
  v14 = (void *)sub_22E3CD3D4(v7, 8 * a3, 4);
  *(_QWORD *)(v9 + 72) = v14;
  v15 = *(unsigned int *)(v9 + 64);
  if ((_DWORD)v15)
    memmove(v14, a2, 8 * v15);
  return v9;
}

uint64_t sub_22F37DCAC(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, const void *a6, unsigned int a7)
{
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v12 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v12;
  v13 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 77;
  *(_BYTE *)(a1 + 34) = v13 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v14 = a2 + 2032;
  *(_QWORD *)(a1 + 40) = sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_DWORD *)(a1 + 48) = a7;
  *(_QWORD *)(a1 + 56) = sub_22E3CD3D4(v14, 8 * a7, 4);
  *(_DWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  if (a5)
    memcpy(*(void **)(a1 + 40), a4, *(unsigned int *)(a1 + 36));
  v15 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v15)
    memmove(*(void **)(a1 + 56), a6, 8 * v15);
  return a1;
}

uint64_t sub_22F37DD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  const void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v4 = a2 + 2032;
  v5 = sub_22E3CD3D4(a2 + 2032, 80, 3);
  v6 = sub_22F37DCAC(v5, a2, (_OWORD *)a1, *(const void **)(a1 + 40), *(unsigned int *)(a1 + 36), *(const void **)(a1 + 56), *(_DWORD *)(a1 + 48));
  v7 = *(unsigned __int16 *)(v6 + 32);
  v8 = (v7 | (*(unsigned __int8 *)(v6 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v6 + 34) = BYTE2(v8);
  *(_WORD *)(v6 + 32) = v7;
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v6 + 34) = BYTE2(v9);
  *(_WORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 34) = (v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v6 + 32) = v7;
  v10 = *(const void **)(a1 + 72);
  v11 = *(unsigned int *)(a1 + 64);
  *(_DWORD *)(v6 + 64) = v11;
  v12 = (void *)sub_22E3CD3D4(v4, 8 * v11, 4);
  *(_QWORD *)(v5 + 72) = v12;
  v13 = *(unsigned int *)(v5 + 64);
  if ((_DWORD)v13)
    memmove(v12, v10, 8 * v13);
  return v5;
}

llvm::raw_ostream *sub_22F37DE5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  llvm::raw_ostream *v14;
  const void *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  llvm::raw_ostream *v21;
  const void *v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    if (v5 == 1)
    {
      sub_22E47DAC0(a2, " [[clang::annotate");
      sub_22E47DAC0(a2, "(");
      v6 = sub_22E47DAC0(a2, "\"");
      v7 = *(const void **)(a1 + 40);
      v8 = *(unsigned int *)(a1 + 36);
      v9 = (void *)*((_QWORD *)v6 + 4);
      if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
      {
        if ((_DWORD)v8)
        {
          memcpy(v9, v7, *(unsigned int *)(a1 + 36));
          *((_QWORD *)v6 + 4) += v8;
        }
      }
      else
      {
        v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
      }
      sub_22E47DAC0(v6, "\"");
      sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
      v10 = *(unsigned int *)(a1 + 48);
      if ((_DWORD)v10)
      {
        v11 = *(_QWORD *)(a1 + 56);
        v12 = 8 * v10;
        v13 = "]]";
        do
        {
          sub_22E47DAC0(a2, ", ");
          v11 += 8;
          llvm::raw_ostream::operator<<();
          v12 -= 8;
        }
        while (v12);
        goto LABEL_25;
      }
LABEL_24:
      v13 = "]]";
      goto LABEL_25;
    }
    sub_22E47DAC0(a2, " [[clang::annotate");
    sub_22E47DAC0(a2, "(");
    v21 = sub_22E47DAC0(a2, "\"");
    v22 = *(const void **)(a1 + 40);
    v23 = *(unsigned int *)(a1 + 36);
    v24 = (void *)*((_QWORD *)v21 + 4);
    if (*((_QWORD *)v21 + 3) - (_QWORD)v24 >= v23)
    {
      if ((_DWORD)v23)
      {
        memcpy(v24, v22, *(unsigned int *)(a1 + 36));
        *((_QWORD *)v21 + 4) += v23;
      }
    }
    else
    {
      v21 = (llvm::raw_ostream *)llvm::raw_ostream::write(v21, (const char *)v22);
    }
    sub_22E47DAC0(v21, "\"");
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v25 = *(unsigned int *)(a1 + 48);
    if (!(_DWORD)v25)
      goto LABEL_24;
    v26 = *(_QWORD *)(a1 + 56);
    v27 = 8 * v25;
    v13 = "]]";
    do
    {
      sub_22E47DAC0(a2, ", ");
      v26 += 8;
      llvm::raw_ostream::operator<<();
      v27 -= 8;
    }
    while (v27);
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((annotate");
    sub_22E47DAC0(a2, "(");
    v14 = sub_22E47DAC0(a2, "\"");
    v15 = *(const void **)(a1 + 40);
    v16 = *(unsigned int *)(a1 + 36);
    v17 = (void *)*((_QWORD *)v14 + 4);
    if (*((_QWORD *)v14 + 3) - (_QWORD)v17 >= v16)
    {
      if ((_DWORD)v16)
      {
        memcpy(v17, v15, *(unsigned int *)(a1 + 36));
        *((_QWORD *)v14 + 4) += v16;
      }
    }
    else
    {
      v14 = (llvm::raw_ostream *)llvm::raw_ostream::write(v14, (const char *)v15);
    }
    sub_22E47DAC0(v14, "\"");
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v18 = *(unsigned int *)(a1 + 48);
    if ((_DWORD)v18)
    {
      v19 = *(_QWORD *)(a1 + 56);
      v20 = 8 * v18;
      v13 = "))";
      do
      {
        sub_22E47DAC0(a2, ", ");
        v19 += 8;
        llvm::raw_ostream::operator<<();
        v20 -= 8;
      }
      while (v20);
    }
    else
    {
      v13 = "))";
    }
  }
LABEL_25:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v13);
}

__n128 sub_22F37E188(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 103;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 103;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 103;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 103;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F37E220(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 104;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 104;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 104;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 104;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37E2B8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF7E0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37E320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 52;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 52;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 52;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 52;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37E3B8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF7F8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37E420(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 105;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 105;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 105;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 105;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37E4B8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF810[v4]);
  return sub_22E47DAC0(a2, v5);
}

double sub_22F37E520(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 56);
  result = *(double *)(a1 + 48);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_WORD *)(v3 + 32) = 106;
  v8 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  *(_QWORD *)(v3 + 40) = v4;
  *(double *)(v3 + 48) = result;
  v9 = v8 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v3 + 56) = v5;
  *(_WORD *)(v3 + 32) = 106;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 106;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = v10 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 106;
  *(_BYTE *)(v3 + 34) = BYTE2(v11);
  return result;
}

char *sub_22F37E5D0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF828[v2];
}

__n128 sub_22F37E610(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 107;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 107;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 107;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 107;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F37E6B0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::__clang_arm_builtin_alias");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((__clang_arm_builtin_alias");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F37E844(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 1;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 1;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 1;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 1;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37E8DC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF858[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F37E944(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 108;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 108;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 108;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 108;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37E9DC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF870[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F37EA44(uint64_t a1, const void *a2, uint64_t a3, char a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  void *v13;
  __int16 v14;
  int v15;
  unsigned int v16;

  v9 = a1 + 2032;
  v10 = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v11 = a5[1];
  *(_OWORD *)v10 = *a5;
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_BYTE *)(v10 + 34);
  *(_WORD *)(v10 + 32) = 109;
  *(_BYTE *)(v10 + 34) = v12 & 0xE0;
  *(_DWORD *)(v10 + 36) = a3;
  v13 = (void *)sub_22E3CD3D4(v9, a3, 0);
  *(_QWORD *)(v10 + 40) = v13;
  *(_BYTE *)(v10 + 48) = a4;
  if (a3)
    memcpy(v13, a2, *(unsigned int *)(v10 + 36));
  v14 = *(_WORD *)(v10 + 32);
  *(_BYTE *)(v10 + 34) |= 4u;
  *(_WORD *)(v10 + 32) = v14;
  v15 = *(unsigned __int8 *)(v10 + 30);
  if ((~(v15 << 16) & 0x780000) == 0 && !*(_QWORD *)v10)
  {
    v16 = (*(unsigned __int16 *)(v10 + 28) | (v15 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v10 + 28) = *(_WORD *)(v10 + 28);
    *(_BYTE *)(v10 + 30) = BYTE2(v16);
  }
  return v10;
}

uint64_t sub_22F37EB28(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, char a6)
{
  __int128 v10;
  char v11;
  void *v12;

  v10 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 109;
  *(_BYTE *)(a1 + 34) = v11 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = a6;
  if (a5)
    memcpy(v12, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F37EBA8(uint64_t a1, const void *a2, uint64_t a3, char a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  void *v13;
  int v14;
  unsigned int v15;

  v9 = a1 + 2032;
  v10 = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v11 = a5[1];
  *(_OWORD *)v10 = *a5;
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_BYTE *)(v10 + 34);
  *(_WORD *)(v10 + 32) = 109;
  *(_BYTE *)(v10 + 34) = v12 & 0xE0;
  *(_DWORD *)(v10 + 36) = a3;
  v13 = (void *)sub_22E3CD3D4(v9, a3, 0);
  *(_QWORD *)(v10 + 40) = v13;
  *(_BYTE *)(v10 + 48) = a4;
  if (a3)
    memcpy(v13, a2, *(unsigned int *)(v10 + 36));
  v14 = *(unsigned __int8 *)(v10 + 30);
  if ((~(v14 << 16) & 0x780000) == 0 && !*(_QWORD *)v10)
  {
    v15 = (*(unsigned __int16 *)(v10 + 28) | (v14 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v10 + 28) = v15;
    *(_BYTE *)(v10 + 30) = BYTE2(v15);
  }
  return v10;
}

uint64_t sub_22F37EC74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  char v9;
  void *v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_BYTE *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 109;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v10 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v10;
  *(_BYTE *)(v4 + 48) = v7;
  if ((_DWORD)v6)
    memcpy(v10, v5, *(unsigned int *)(v4 + 36));
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F37ED64(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  llvm::raw_ostream *v7;
  const void *v8;
  size_t v9;
  void *v10;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " __asm__";
  else
    v6 = " asm";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v7 = sub_22E47DAC0(a2, "\"");
  v8 = *(const void **)(a1 + 40);
  v9 = *(unsigned int *)(a1 + 36);
  v10 = (void *)*((_QWORD *)v7 + 4);
  if (*((_QWORD *)v7 + 3) - (_QWORD)v10 >= v9)
  {
    if ((_DWORD)v9)
    {
      memcpy(v10, v8, v9);
      *((_QWORD *)v7 + 4) += v9;
    }
  }
  else
  {
    v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v8);
  }
  sub_22E47DAC0(v7, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

uint64_t sub_22F37EE68(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 110;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 110;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F37EFD4(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F37F034(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((assert_capability");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F37F248(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF888[v2];
}

uint64_t sub_22F37F288(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 111;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37F304(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 111;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F37F3F4(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((assert_exclusive_lock");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = 8 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v6 += 8;
      llvm::raw_ostream::operator<<();
      v8 = ", ";
      v7 -= 8;
    }
    while (v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F37F4C8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 112;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F37F544(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 112;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F37F634(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((assert_shared_lock");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = 8 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v6 += 8;
      llvm::raw_ostream::operator<<();
      v8 = ", ";
      v7 -= 8;
    }
    while (v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F37F708(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  result = *(__n128 *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 113;
  *(__n128 *)(v3 + 40) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 113;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 113;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 113;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F37F7A8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  int v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 114;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F37F82C(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = (*(unsigned __int8 *)(v8 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v8 + 32) = 114;
  *(_BYTE *)(v8 + 34) = BYTE2(v10);
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F37F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v4 + 32) = 114;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F37F9F0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::assume");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((assume");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F37FB74(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *__src, uint64_t a13, char a14, void *a15, uint64_t a16, int a17)
{
  __int128 v18;
  int v19;
  uint64_t v20;

  v18 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 115;
  *(_BYTE *)(a1 + 34) = BYTE2(v19);
  *(_QWORD *)(a1 + 40) = a4;
  *(_QWORD *)(a1 + 48) = a5;
  *(_QWORD *)(a1 + 56) = a6;
  *(_QWORD *)(a1 + 64) = a7;
  *(_QWORD *)(a1 + 72) = a8;
  *(_QWORD *)(a1 + 80) = a9;
  *(_QWORD *)(a1 + 88) = a10;
  *(_BYTE *)(a1 + 96) = a11;
  v20 = a2 + 2032;
  *(_DWORD *)(a1 + 100) = a13;
  *(_QWORD *)(a1 + 104) = sub_22E3CD3D4(a2 + 2032, a13, 0);
  *(_BYTE *)(a1 + 112) = a14;
  *(_DWORD *)(a1 + 116) = a16;
  *(_QWORD *)(a1 + 120) = sub_22E3CD3D4(v20, a16, 0);
  *(_DWORD *)(a1 + 128) = a17;
  if (a13)
    memcpy(*(void **)(a1 + 104), __src, *(unsigned int *)(a1 + 100));
  if (a16)
    memcpy(*(void **)(a1 + 120), a15, *(unsigned int *)(a1 + 116));
  return a1;
}

uint64_t sub_22F37FC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 136, 3);
  result = sub_22F37FB74(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96), *(void **)(a1 + 104), *(unsigned int *)(a1 + 100), *(_BYTE *)(a1 + 112), *(void **)(a1 + 120), *(unsigned int *)(a1 + 116), *(_DWORD *)(a1 + 128));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

uint64_t sub_22F37FD3C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 116;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F37FDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 116;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 116;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 116;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 116;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F37FE58(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF8A8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F37FEC0(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 117;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F37FF38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 117;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F380020(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::btf_decl_tag");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((btf_decl_tag");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3801A4(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 2;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F38021C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 2;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F380304(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::btf_type_tag");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((btf_type_tag");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F380488(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 118;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 118;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 118;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 118;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F380528(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF8C0[v4]);
  sub_22E47DAC0(a2, "(");
  v6 = sub_22E47DAC0(a2, "\"");
  v7 = sub_22E47DAC0(v6, "byref");
  sub_22E47DAC0(v7, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3805E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 119;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 119;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 119;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 119;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F380680(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 364;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 364;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 364;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 364;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F380720(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  unsigned int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5 > 1)
  {
    sub_22E47DAC0(a2, " __attribute__((clang_builtin_alias");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  else
  {
    sub_22E47DAC0(a2, " [[clang::builtin_alias");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

const char *sub_22F3808B8(uint64_t a1)
{
  int v1;
  unsigned int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2 >= 2)
    return "clang_builtin_alias";
  else
    return "builtin_alias";
}

uint64_t sub_22F380904(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  char v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = *(_BYTE *)(result + 34);
  *(_WORD *)(result + 32) = 120;
  *(_BYTE *)(result + 34) = v5 & 0xE0;
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F38097C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 120;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 120;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 120;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 120;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F380A14(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " _Noreturn");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F380A60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 53;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 53;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 53;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 53;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F380AF8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FABF8D8[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F380B60(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF900[v2];
}

uint64_t sub_22F380BA0(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 121;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F380C24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 121;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 121;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 121;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 121;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F380CBC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF928[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F380D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 78;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F380D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 78;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 78;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 78;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 78;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F380DDC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF940[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F380E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 122;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 122;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 122;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 122;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F380EE4(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;
  llvm::raw_ostream *v4;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(guard");
  sub_22E47DAC0(a2, "(");
  v3 = sub_22E47DAC0(a2, "\"");
  v4 = sub_22E47DAC0(v3, "nocf");
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, ")");
}

__n128 sub_22F380F78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 123;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 123;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 123;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 123;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381010(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF958[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F381078(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 124;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 124;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 124;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 124;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381110(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF970[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F381178(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 125;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 125;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 125;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 125;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381210(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF988[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F381278(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 126;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 126;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 126;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 126;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381310(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF9A0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F381378(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 127;
  *(_BYTE *)(a1 + 34) = v8 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F3813E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 127;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F3814CC(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F38152C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((cpu_dispatch");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

uint64_t sub_22F38174C(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 128;
  *(_BYTE *)(a1 + 34) = v8 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F3817BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 128;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F3818A0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F381900(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((cpu_specific");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

uint64_t sub_22F381B20(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 129;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F381BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 129;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 129;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 129;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 129;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381C3C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__constant__";
  else
    v5 = " __attribute__((constant";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F381CB8(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 130;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F381D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 130;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 130;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 130;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 130;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381DD4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__device__";
  else
    v5 = " __attribute__((device";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F381E50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 131;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 131;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 131;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 131;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381EE8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__device_builtin_surface_type__";
  else
    v5 = " __attribute__((device_builtin_surface_type";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F381F64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 132;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 132;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 132;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 132;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F381FFC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__device_builtin_texture_type__";
  else
    v5 = " __attribute__((device_builtin_texture_type";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F382078(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 133;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 133;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 133;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 133;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F382110(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__global__";
  else
    v5 = " __attribute__((global";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F38218C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 134;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F382210(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 134;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 134;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 134;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 134;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3822A8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__host__";
  else
    v5 = " __attribute__((host";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F382324(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 135;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3823A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 135;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 135;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 135;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 135;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F382440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 result;
  __int128 v6;
  char v7;

  result = *(__n128 *)a3;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 136;
  *(_BYTE *)(a1 + 34) = v7 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  *(_QWORD *)(a1 + 48) = a5;
  return result;
}

__n128 sub_22F382464(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  result = *(__n128 *)(a1 + 40);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 136;
  *(__n128 *)(v3 + 40) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 136;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 136;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 136;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F382504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 137;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 137;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 137;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 137;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38259C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__shared__";
  else
    v5 = " __attribute__((shared";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F382618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 138;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 138;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 138;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 138;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3826B0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  unsigned int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4 >= 2)
    v5 = " [[_Noreturn";
  else
    v5 = " [[noreturn";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, "]]");
}

const char *sub_22F38271C(uint64_t a1)
{
  int v1;
  unsigned int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2 >= 2)
    return "_Noreturn";
  else
    return "noreturn";
}

uint64_t sub_22F382768(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 139;
  *(_BYTE *)(a1 + 34) = v8 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 4 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 4 * v10);
  return a1;
}

uint64_t sub_22F3827D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 139;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 4 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 4 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F3828BC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  uint64_t v13;
  llvm::raw_ostream *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  char *v18;
  llvm::raw_ostream *v19;
  uint64_t v20;
  llvm::raw_ostream *v21;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::callable_when");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v7)
    {
      v11 = "]]";
      goto LABEL_13;
    }
    v8 = 4 * v7;
    v9 = *(int **)(a1 + 40);
    v10 = "(";
    v11 = "]]";
    do
    {
      sub_22E47DAC0(a2, v10);
      v12 = sub_22E47DAC0(a2, "\"");
      v13 = *v9++;
      v14 = sub_22E47DAC0(v12, off_24FAC0CA0[v13]);
      sub_22E47DAC0(v14, "\"");
      v10 = ", ";
      v8 -= 4;
    }
    while (v8);
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((callable_when");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v15 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v15)
    {
      v11 = "))";
      goto LABEL_13;
    }
    v16 = 4 * v15;
    v17 = *(int **)(a1 + 40);
    v18 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v18);
      v19 = sub_22E47DAC0(a2, "\"");
      v20 = *v17++;
      v21 = sub_22E47DAC0(v19, off_24FAC0CA0[v20]);
      sub_22E47DAC0(v21, "\"");
      v18 = ", ";
      v16 -= 4;
    }
    while (v16);
  }
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_13:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

uint64_t sub_22F382A88(uint64_t a1, const void *a2, unsigned int a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  uint64_t v12;
  __int16 v13;
  int v14;
  unsigned int v15;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 140;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, 4 * a3, 4);
  *(_QWORD *)(v8 + 40) = v11;
  v12 = *(unsigned int *)(v8 + 36);
  if ((_DWORD)v12)
    memmove(v11, a2, 4 * v12);
  v13 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v13;
  v14 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v14 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v15 = (*(unsigned __int16 *)(v8 + 28) | (v14 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v15);
  }
  return v8;
}

uint64_t sub_22F382B68(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 140;
  *(_BYTE *)(a1 + 34) = v8 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 4 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 4 * v10);
  return a1;
}

uint64_t sub_22F382BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 140;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 4 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 4 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F382CBC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((callback");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v12 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v12)
    {
      v11 = "))";
      goto LABEL_18;
    }
    v13 = *(_QWORD *)(a1 + 40);
    v14 = 4 * v12;
    v15 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v15);
      v13 += 4;
      llvm::raw_ostream::operator<<();
      v15 = ", ";
      v14 -= 4;
    }
    while (v14);
    goto LABEL_17;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[clang::callback");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v16)
    {
      v17 = *(_QWORD *)(a1 + 40);
      v18 = 4 * v16;
      v19 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v19);
        v17 += 4;
        llvm::raw_ostream::operator<<();
        v19 = ", ";
        v18 -= 4;
      }
      while (v18);
      goto LABEL_17;
    }
LABEL_19:
    v11 = "]]";
    goto LABEL_18;
  }
  sub_22E47DAC0(a2, " [[clang::callback");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_19;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = 4 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v8 += 4;
    llvm::raw_ostream::operator<<();
    v10 = ", ";
    v9 -= 4;
  }
  while (v9);
LABEL_17:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_18:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

__n128 sub_22F382EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 365;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 365;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 365;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 365;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F382F40(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF9B8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F382FA8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 141;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F383020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 141;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

void sub_22F383108(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F383164(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  llvm::raw_ostream *v14;
  uint64_t v15;
  llvm::raw_ostream *v16;
  const void *v17;
  size_t v18;
  void *v19;

  sub_22E47DAC0(v14, " __attribute__((capability");
  sub_22E47DAC0(v14, "(");
  v16 = sub_22E47DAC0(v14, "\"");
  v17 = *(const void **)(v15 + 40);
  v18 = *(unsigned int *)(v15 + 36);
  v19 = (void *)*((_QWORD *)v16 + 4);
  if (*((_QWORD *)v16 + 3) - (_QWORD)v19 >= v18)
  {
    if ((_DWORD)v18)
    {
      memcpy(v19, v17, v18);
      *((_QWORD *)v16 + 4) += v18;
    }
  }
  else
  {
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::write(v16, (const char *)v17);
  }
  sub_22E47DAC0(v16, "\"");
  sub_22E47DAC0(v14, ")");
  return sub_22E47DAC0(v14, "))");
}

char *sub_22F3832B8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABF9D0[v2];
}

uint64_t sub_22F3832F8(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 142;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F38337C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 142;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 142;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 142;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 142;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F383414(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 79;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 79;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 79;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 79;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3834AC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[carries_dependency";
  else
    v5 = " __attribute__((carries_dependency";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F383528(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 143;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 143;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 143;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 143;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F3835C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 3;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 3;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 3;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 3;
  *(_BYTE *)(v3 + 34) = (v8 & 0xFFFBFFFF | ((v9 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F383660(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((cmse_nonsecure_call");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3836AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 144;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 144;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 144;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 144;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F383744(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((cmse_nonsecure_entry");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F383790(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 145;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F383808(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 145;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3838F0(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(code_seg");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, ")");
}

__n128 sub_22F3839D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 146;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 146;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 146;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 146;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F383A6C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABF9F0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F383AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 147;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 147;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 147;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 147;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F383B6C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFA08[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F383BD4(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 148;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F383C58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 148;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 148;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 148;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 148;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F383CF0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC10D0[v4];
  sub_22E47DAC0(a2, off_24FABFA20[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F383D58(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABFA50[v2];
}

__n128 sub_22F383D98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 149;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 149;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 149;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 149;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F383E30(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FABFA98 + v4);
  sub_22E47DAC0(a2, off_24FABFA80[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F383E98(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC11D8[v2];
}

__n128 sub_22F383ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 150;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 150;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 150;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 150;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F383F78(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFAB0[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F384034(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 151;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 151;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 151;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 151;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3840D4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " [[clang::consumable";
  else
    v6 = " __attribute__((consumable";
  if (v5)
    v7 = "]]";
  else
    v7 = "))";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, off_24FAC0CA0[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F3841B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 152;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 152;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 152;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 152;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F384250(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::consumable_auto_cast_state";
  else
    v5 = " __attribute__((consumable_auto_cast_state";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3842CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 153;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 153;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 153;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 153;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F384364(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::consumable_set_state_on_read";
  else
    v5 = " __attribute__((consumable_set_state_on_read";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F3843E0(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 154;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F384464(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 154;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 154;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 154;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 154;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3844FC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFAC8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F384564(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 155;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3845E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 155;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F384608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 155;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 155;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 155;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 155;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3846A0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0C80[v4];
  sub_22E47DAC0(a2, off_24FABFAE0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F384708(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 156;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 156;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 156;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 156;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F3847A0(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_BYTE *)(result + 35) = 0;
  *(_WORD *)(result + 32) = 157;
  *(_BYTE *)(result + 34) = (v5 | 0x40000u) >> 16;
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F384828(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 157;
  *(_BYTE *)(v3 + 35) = 0;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 157;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 157;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 157;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3848C4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0C80[v4];
  sub_22E47DAC0(a2, off_24FABFB00[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F38492C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 158;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 158;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 158;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 158;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F3849C4(uint64_t a1, uint64_t a2, _OWORD *a3, char a4, const void *a5, unsigned int a6, const void *a7, unsigned int a8)
{
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v12;
  v13 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 159;
  *(_BYTE *)(a1 + 34) = v13 & 0xE0;
  *(_BYTE *)(a1 + 35) = a4;
  *(_DWORD *)(a1 + 36) = a6;
  v14 = a2 + 2032;
  *(_QWORD *)(a1 + 40) = sub_22E3CD3D4(a2 + 2032, 8 * a6, 4);
  *(_DWORD *)(a1 + 48) = a8;
  *(_QWORD *)(a1 + 56) = sub_22E3CD3D4(v14, 4 * a8, 4);
  v15 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v15)
    memmove(*(void **)(a1 + 40), a5, 8 * v15);
  v16 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v16)
    memmove(*(void **)(a1 + 56), a7, 4 * v16);
  return a1;
}

uint64_t sub_22F384A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  result = sub_22F3849C4(v4, a2, (_OWORD *)a1, *(_BYTE *)(a1 + 35), *(const void **)(a1 + 40), *(_DWORD *)(a1 + 36), *(const void **)(a1 + 56), *(_DWORD *)(a1 + 48));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

uint64_t sub_22F384B2C(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, const void *a6, uint64_t a7)
{
  __int128 v12;
  char v13;
  uint64_t v14;

  v12 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v12;
  v13 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 160;
  *(_BYTE *)(a1 + 34) = v13 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v14 = a2 + 2032;
  *(_QWORD *)(a1 + 40) = sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_DWORD *)(a1 + 48) = a7;
  *(_QWORD *)(a1 + 56) = sub_22E3CD3D4(v14, a7, 0);
  if (a5)
    memcpy(*(void **)(a1 + 40), a4, *(unsigned int *)(a1 + 36));
  if (a7)
    memcpy(*(void **)(a1 + 56), a6, *(unsigned int *)(a1 + 48));
  return a1;
}

uint64_t sub_22F384BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  result = sub_22F384B2C(v4, a2, (_OWORD *)a1, *(const void **)(a1 + 40), *(unsigned int *)(a1 + 36), *(const void **)(a1 + 56), *(unsigned int *)(a1 + 48));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

void sub_22F384C8C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F384CE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  llvm::raw_ostream *v14;
  uint64_t v15;
  llvm::raw_ostream *v16;
  const void *v17;
  size_t v18;
  void *v19;

  sub_22E47DAC0(v14, " [[gnu::deprecated");
  v16 = sub_22E47DAC0(v14, "(\"");
  v17 = *(const void **)(v15 + 40);
  v18 = *(unsigned int *)(v15 + 36);
  v19 = (void *)*((_QWORD *)v16 + 4);
  if (*((_QWORD *)v16 + 3) - (_QWORD)v19 >= v18)
  {
    if ((_DWORD)v18)
    {
      memcpy(v19, v17, v18);
      *((_QWORD *)v16 + 4) += v18;
    }
  }
  else
  {
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::write(v16, (const char *)v17);
  }
  sub_22E47DAC0(v16, "\"");
  sub_22E47DAC0(v14, ")");
  return sub_22E47DAC0(v14, "]]");
}

void sub_22F384D9C()
{
  llvm::raw_ostream *v0;
  uint64_t v1;
  llvm::raw_ostream *v2;
  const void *v3;
  unint64_t v4;
  void *v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;

  sub_22E47DAC0(v0, " __attribute__((deprecated");
  v2 = sub_22E47DAC0(v0, "(\"");
  v3 = *(const void **)(v1 + 40);
  v4 = *(unsigned int *)(v1 + 36);
  v5 = (void *)*((_QWORD *)v2 + 4);
  if (*((_QWORD *)v2 + 3) - (_QWORD)v5 >= v4)
  {
    if ((_DWORD)v4)
    {
      memcpy(v5, v3, *(unsigned int *)(v1 + 36));
      *((_QWORD *)v2 + 4) += v4;
    }
  }
  else
  {
    v2 = (llvm::raw_ostream *)llvm::raw_ostream::write(v2, (const char *)v3);
  }
  sub_22E47DAC0(v2, "\"");
  if (*(_DWORD *)(v1 + 48))
  {
    v6 = sub_22E47DAC0(v0, ", \"");
    v7 = *(const void **)(v1 + 56);
    v8 = *(unsigned int *)(v1 + 48);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      llvm::raw_ostream::write(v6, (const char *)v7);
    }
    JUMPOUT(0x22F384D48);
  }
  JUMPOUT(0x22F384D58);
}

__n128 sub_22F384F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 161;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 161;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 161;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 161;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F384FA0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFB20[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F38505C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, unsigned int a6)
{
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 162;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, 4 * a6, 4);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v11)
    memmove(v10, a5, 4 * v11);
  return a1;
}

uint64_t sub_22F3850D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 162;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, 4 * v7, 4);
  *(_QWORD *)(v4 + 56) = v10;
  v11 = *(unsigned int *)(v4 + 48);
  if ((_DWORD)v11)
    memmove(v10, v6, 4 * v11);
  v12 = *(unsigned __int16 *)(v4 + 32);
  v13 = (v12 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v12;
  v14 = v13 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v12;
  *(_BYTE *)(v4 + 34) = (v14 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v12;
  return v4;
}

uint64_t sub_22F3851BC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, uint64_t a6, int a7, char a8, uint64_t a9)
{
  __int128 v14;
  int v15;
  void *v16;

  v14 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 163;
  *(_BYTE *)(a1 + 34) = BYTE2(v15);
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v16 = (void *)sub_22E3CD3D4(a2 + 2032, a6, 0);
  *(_QWORD *)(a1 + 56) = v16;
  *(_DWORD *)(a1 + 64) = a7;
  *(_BYTE *)(a1 + 68) = a8;
  *(_QWORD *)(a1 + 72) = a9;
  if (a6)
    memcpy(v16, a5, *(unsigned int *)(a1 + 48));
  return a1;
}

uint64_t sub_22F385264(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  int v12;
  void *v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 80, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_DWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 68);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v11;
  v12 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 163;
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v13 = (void *)sub_22E3CD3D4(v3, v7, 0);
  *(_QWORD *)(v4 + 56) = v13;
  *(_DWORD *)(v4 + 64) = v8;
  *(_BYTE *)(v4 + 68) = v9;
  *(_QWORD *)(v4 + 72) = v10;
  if ((_DWORD)v7)
    memcpy(v13, v6, *(unsigned int *)(v4 + 48));
  v14 = *(unsigned __int16 *)(v4 + 32);
  v15 = (v14 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v15);
  *(_WORD *)(v4 + 32) = v14;
  v16 = v15 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v16);
  *(_WORD *)(v4 + 32) = v14;
  *(_BYTE *)(v4 + 34) = (v16 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v14;
  return v4;
}

__n128 sub_22F385380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 164;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 164;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 164;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 164;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F385418(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFB38[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F385480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 165;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 165;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 165;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 165;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F385518(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFB50[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F385580(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 166;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 166;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 166;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 166;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F385618(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(empty_bases");
  return sub_22E47DAC0(a2, ")");
}

uint64_t sub_22F385664(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 167;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, v7, 0);
  *(_QWORD *)(v4 + 56) = v10;
  if ((_DWORD)v7)
    memcpy(v10, v6, *(unsigned int *)(v4 + 48));
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

uint64_t sub_22F385754(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  int v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 168;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3857D8(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = (*(unsigned __int8 *)(v8 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v8 + 32) = 168;
  *(_BYTE *)(v8 + 34) = BYTE2(v10);
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F3858A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v4 + 32) = 168;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F38599C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::enforce_tcb");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((enforce_tcb");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F385B20(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  int v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 169;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F385BA4(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = (*(unsigned __int8 *)(v8 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v8 + 32) = 169;
  *(_BYTE *)(v8 + 34) = BYTE2(v10);
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F385C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(v4 + 32) = 169;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F385D68(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::enforce_tcb_leaf");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((enforce_tcb_leaf");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F385EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 170;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 170;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 170;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 170;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F385F8C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  llvm::raw_ostream *v7;
  char *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FABFB68[v5]);
  sub_22E47DAC0(a2, "(");
  v7 = sub_22E47DAC0(a2, "\"");
  if (*(_DWORD *)(a1 + 36))
    v8 = "open";
  else
    v8 = "closed";
  v9 = sub_22E47DAC0(v7, v8);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F386060(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 171;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3860D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 171;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

void sub_22F3861C0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F38621C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  llvm::raw_ostream *v14;
  uint64_t v15;
  llvm::raw_ostream *v16;
  const void *v17;
  size_t v18;
  void *v19;

  sub_22E47DAC0(v14, " [[gnu::error");
  sub_22E47DAC0(v14, "(");
  v16 = sub_22E47DAC0(v14, "\"");
  v17 = *(const void **)(v15 + 40);
  v18 = *(unsigned int *)(v15 + 36);
  v19 = (void *)*((_QWORD *)v16 + 4);
  if (*((_QWORD *)v16 + 3) - (_QWORD)v19 >= v18)
  {
    if ((_DWORD)v18)
    {
      memcpy(v19, v17, v18);
      *((_QWORD *)v16 + 4) += v18;
    }
  }
  else
  {
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::write(v16, (const char *)v17);
  }
  sub_22E47DAC0(v16, "\"");
  sub_22E47DAC0(v14, ")");
  return sub_22E47DAC0(v14, "]]");
}

void sub_22F3862E0()
{
  llvm::raw_ostream *v0;
  uint64_t v1;
  llvm::raw_ostream *v2;
  const void *v3;
  size_t v4;
  void *v5;

  sub_22E47DAC0(v0, " __attribute__((error");
  sub_22E47DAC0(v0, "(");
  v2 = sub_22E47DAC0(v0, "\"");
  v3 = *(const void **)(v1 + 40);
  v4 = *(unsigned int *)(v1 + 36);
  v5 = (void *)*((_QWORD *)v2 + 4);
  if (*((_QWORD *)v2 + 3) - (_QWORD)v5 >= v4)
  {
    if ((_DWORD)v4)
    {
      memcpy(v5, v3, v4);
      *((_QWORD *)v2 + 4) += v4;
    }
  }
  else
  {
    llvm::raw_ostream::write(v2, (const char *)v3);
  }
  JUMPOUT(0x22F38628CLL);
}

char *sub_22F386370(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABFB80[v2];
}

__n128 sub_22F3863B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 172;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 172;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 172;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 172;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386448(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFBB0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3864B0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, unsigned int a6)
{
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 173;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a6, 4);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v11)
    memmove(v10, a5, 8 * v11);
  return a1;
}

uint64_t sub_22F386530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 173;
  *(_BYTE *)(v4 + 34) = BYTE2(v9);
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, 8 * v7, 4);
  *(_QWORD *)(v4 + 56) = v10;
  v11 = *(unsigned int *)(v4 + 48);
  if ((_DWORD)v11)
    memmove(v10, v6, 8 * v11);
  v12 = *(unsigned __int16 *)(v4 + 32);
  v13 = (v12 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v12;
  v14 = v13 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v12;
  *(_BYTE *)(v4 + 34) = (v14 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v12;
  return v4;
}

llvm::raw_ostream *sub_22F386628(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((exclusive_trylock_function");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD *)(a1 + 56);
    v8 = 8 * v6;
    do
    {
      sub_22E47DAC0(a2, ", ");
      v7 += 8;
      llvm::raw_ostream::operator<<();
      v8 -= 8;
    }
    while (v8);
  }
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F386744(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, const void *a6, uint64_t a7, char a8)
{
  __int128 v14;
  char v15;
  uint64_t v16;

  v14 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 174;
  *(_BYTE *)(a1 + 34) = v15 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v16 = a2 + 2032;
  *(_QWORD *)(a1 + 40) = sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_DWORD *)(a1 + 48) = a7;
  *(_QWORD *)(a1 + 56) = sub_22E3CD3D4(v16, a7, 0);
  *(_BYTE *)(a1 + 64) = a8;
  if (a5)
    memcpy(*(void **)(a1 + 40), a4, *(unsigned int *)(a1 + 36));
  if (a7)
    memcpy(*(void **)(a1 + 56), a6, *(unsigned int *)(a1 + 48));
  return a1;
}

uint64_t sub_22F386810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 72, 3);
  result = sub_22F386744(v4, a2, (_OWORD *)a1, *(const void **)(a1 + 40), *(unsigned int *)(a1 + 36), *(const void **)(a1 + 56), *(unsigned int *)(a1 + 48), *(_BYTE *)(a1 + 64));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

__n128 sub_22F3868B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 175;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 175;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 175;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 175;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38694C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::externally_initialized";
  else
    v5 = " __attribute__((externally_initialized";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3869C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 39;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 39;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 39;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 39;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386A60(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FABFBF8[v4];
  sub_22E47DAC0(a2, off_24FABFBC8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F386AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 54;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 54;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 54;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 54;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386B60(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FABFC28[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F386BC8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABFC50[v2];
}

uint64_t sub_22F386C08(uint64_t a1, uint64_t a2, char a3, char a4)
{
  int v5;
  uint64_t result;
  char v7;

  v5 = ((a4 & 0xF) << 19) | ((a3 & 7) << 16);
  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 24) = 0;
  *(_WORD *)(result + 28) = 478;
  *(_BYTE *)(result + 30) = BYTE2(v5);
  v7 = *(_BYTE *)(result + 34);
  *(_WORD *)(result + 32) = 176;
  *(_BYTE *)(result + 34) = v7 & 0xE0;
  return result;
}

__n128 sub_22F386C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 176;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 176;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 176;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 176;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386D04(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " sealed";
  else
    v5 = " final";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

const char *sub_22F386D70(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2)
    return "sealed";
  else
    return "final";
}

__n128 sub_22F386DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 177;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 177;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 177;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 177;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386E54(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFC78[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F386EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 178;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 178;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 178;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 178;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F386F54(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFC90[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F386FBC(uint64_t a1, uint64_t a2, int a3, int a4, _OWORD *a5)
{
  uint64_t result;
  __int128 v10;
  int v11;
  int v12;
  unsigned int v13;

  result = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v10 = a5[1];
  *(_OWORD *)result = *a5;
  *(_OWORD *)(result + 16) = v10;
  v11 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 40) = a2;
  *(_DWORD *)(result + 48) = a3;
  *(_DWORD *)(result + 52) = a4;
  *(_WORD *)(result + 32) = 179;
  *(_BYTE *)(result + 34) = (v11 | 0x40000u) >> 16;
  v12 = *(unsigned __int8 *)(result + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v13 = (*(unsigned __int16 *)(result + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v13;
    *(_BYTE *)(result + 30) = BYTE2(v13);
  }
  return result;
}

double sub_22F38705C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(double *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 179;
  *(double *)(v3 + 48) = result;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 179;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 179;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 179;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

uint64_t sub_22F387104(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 180;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F387190(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 180;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 180;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 180;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 180;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F387230(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFCA8[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3872F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 181;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 181;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 181;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 181;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F387388(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFCC0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3873F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 182;
  v7 = (*(unsigned __int8 *)(v3 + 34) >> 5 << 21) | 0x1800B6;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 182;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 182;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 182;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

llvm::raw_ostream *sub_22F387498(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((guarded_by");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F387560(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 183;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 183;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 183;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 183;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3875F8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::guarded_var";
  else
    v5 = " __attribute__((guarded_var";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F387674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 184;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 184;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 184;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 184;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38770C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " __declspec(__managed__";
  else
    v5 = " __attribute__((managed";
  if (v4)
    v6 = ")";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

double sub_22F387788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  double result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_DWORD *)(a1 + 44);
  result = *(double *)(a1 + 36);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(double *)(v3 + 36) = result;
  *(_WORD *)(v3 + 32) = 185;
  *(_DWORD *)(v3 + 44) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 185;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 185;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 185;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F387830(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 186;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 186;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 186;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 186;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3878C8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, ":SV_GroupIndex");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

uint64_t sub_22F387914(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  char v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = *(_BYTE *)(result + 34);
  *(_WORD *)(result + 32) = 187;
  *(_BYTE *)(result + 34) = v7 & 0xE0;
  *(_DWORD *)(result + 36) = a2;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F387994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 187;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 187;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 187;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 187;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F387A34(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, "[shader");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = sub_22E47DAC0(v4, off_24FABFCD8[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v5, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]");
}

__n128 sub_22F387AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 188;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 188;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 188;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 188;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F387B78(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFD48[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F387BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 189;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 189;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 189;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 189;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F387C78(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFD60[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F387CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 190;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 190;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 190;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 190;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F387D78(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFD78[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F387DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 191;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 191;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 191;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 191;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F387E80(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 366;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F387EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 366;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F387FE0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::ifunc");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((ifunc");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F388164(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 192;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 192;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 192;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 192;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F388204(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;
  llvm::raw_ostream *v7;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[gnu::init_priority";
  else
    v5 = " __attribute__((init_priority";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F3882D4(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 367;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F3883B0(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 367;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F388428(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 367;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F388510(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, "#pragma init_seg");
  sub_22F388570(a1, a2);
  return sub_22E47DAC0(a2, "\n");
}

_BYTE *sub_22F388570(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;
  const void *v4;
  size_t v5;
  _BYTE *result;

  v3 = sub_22E47DAC0(a2, " (");
  v4 = *(const void **)(a1 + 40);
  v5 = *(unsigned int *)(a1 + 36);
  result = (_BYTE *)*((_QWORD *)v3 + 4);
  if (*((_QWORD *)v3 + 3) - (_QWORD)result >= v5)
  {
    if ((_DWORD)v5)
    {
      memcpy(result, v4, v5);
      result = (_BYTE *)(*((_QWORD *)v3 + 4) + v5);
      *((_QWORD *)v3 + 4) = result;
    }
  }
  else
  {
    v3 = (llvm::raw_ostream *)llvm::raw_ostream::write(v3, (const char *)v4);
    result = (_BYTE *)*((_QWORD *)v3 + 4);
  }
  if ((unint64_t)result >= *((_QWORD *)v3 + 3))
    return (_BYTE *)llvm::raw_ostream::write(v3);
  *((_QWORD *)v3 + 4) = result + 1;
  *result = 41;
  return result;
}

__n128 sub_22F38861C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 55;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 55;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 55;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 55;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3886B4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::intel_ocl_bicc";
  else
    v5 = " __attribute__((intel_ocl_bicc";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F388730(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 193;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 193;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 193;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 193;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3887C8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFD90[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F388830(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 56;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 56;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 56;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 56;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3888C8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFDA8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F388930(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 194;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 194;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 194;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 194;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3889C8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFDC0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F388A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 195;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 195;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 195;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 195;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F388AD0(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(layout_version");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v3 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v3, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, ")");
}

__n128 sub_22F388B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 196;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 196;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 196;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 196;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F388C08(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFDD8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F388C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 57;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 57;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 57;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 57;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F388D08(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::lifetimebound";
  else
    v5 = " __attribute__((lifetimebound";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F388D84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 40;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 40;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 40;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 40;
  *(_BYTE *)(v3 + 34) = (v8 & 0xFFFBFFFF | ((v9 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F388E1C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::likely";
  else
    v5 = " [[likely";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F388E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 368;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 368;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 368;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 368;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F388F20(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFDF0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F388F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 197;
  v7 = (*(unsigned __int8 *)(v3 + 34) >> 5 << 21) | 0x800C5;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 197;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 197;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 197;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

llvm::raw_ostream *sub_22F389030(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((lock_returned");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F3890F8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 198;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F389174(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 198;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F389264(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((locks_excluded");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = 8 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v6 += 8;
      llvm::raw_ostream::operator<<();
      v8 = ", ";
      v7 -= 8;
    }
    while (v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F389338(uint64_t a1, int a2, int a3, uint64_t a4, _OWORD *a5)
{
  uint64_t result;
  __int128 v10;
  int v11;
  int v12;
  unsigned int v13;

  result = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v10 = a5[1];
  *(_OWORD *)result = *a5;
  *(_OWORD *)(result + 16) = v10;
  v11 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_DWORD *)(result + 40) = a3;
  *(_QWORD *)(result + 48) = a4;
  *(_WORD *)(result + 32) = 369;
  *(_BYTE *)(result + 34) = (v11 | 0x40000u) >> 16;
  v12 = *(unsigned __int8 *)(result + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v13 = (*(unsigned __int16 *)(result + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v13;
    *(_BYTE *)(result + 30) = BYTE2(v13);
  }
  return result;
}

double sub_22F3893DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v4 = *(_QWORD *)(a1 + 48);
  result = *(double *)(a1 + 36);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(double *)(v3 + 36) = result;
  *(_WORD *)(v3 + 32) = 369;
  *(_QWORD *)(v3 + 48) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 369;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 369;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 369;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F389484(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  int v6;
  int v7;

  v6 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v6 << 16) & 0x780000) != 0)
    v7 = ((*(unsigned __int16 *)(a1 + 28) | (v6 << 16)) >> 19) & 0xF;
  else
    v7 = sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, off_24FABFE08[v7]);
  sub_22EF95698(a1, a2, a3);
  return sub_22E47DAC0(a2, "\n");
}

char *sub_22F389508(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABFE30[v2];
}

__n128 sub_22F389548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 199;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 199;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 199;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 199;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3895E8(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((interrupt");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v3 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v3, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F389688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 200;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 200;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 200;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 200;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F389720(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFE58[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F389788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 58;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 58;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 58;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 58;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F389820(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFE70[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F389888(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 201;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 201;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 201;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 201;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F389920(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(allocator");
  return sub_22E47DAC0(a2, ")");
}

uint64_t sub_22F38996C(uint64_t a1, char a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_BYTE *)(result + 35) = a2;
  *(_WORD *)(result + 32) = 202;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F3899F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_BYTE *)(a1 + 35);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 202;
  *(_BYTE *)(v3 + 35) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 202;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 202;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 202;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F389A98(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, off_24FABFE88[v4]);
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

char *sub_22F389AF8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FABFEA8[v2];
}

__n128 sub_22F389B38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 203;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 203;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 203;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 203;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F389BD0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(novtable");
  return sub_22E47DAC0(a2, ")");
}

__n128 sub_22F389C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 204;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 204;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 204;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 204;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F389CBC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0A88[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F389D78(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 205;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F389DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 205;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 205;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 205;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 205;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F389E94(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFEC8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F389EFC(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 206;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F389F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 206;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 206;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 206;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 206;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F38A028(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 207;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F38A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 207;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 207;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 207;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 207;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F38A154(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 208;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 208;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 208;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 208;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38A1EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFEE0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F38A254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 209;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 209;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 209;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 209;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38A2EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFEF8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F38A354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 370;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38A374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 370;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 370;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 370;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 370;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38A40C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[accept_intersection");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38A458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 371;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38A478(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 371;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 371;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 371;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 371;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38A510(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[amplification_count");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38A55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 372;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38A57C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 372;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 372;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 372;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 372;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38A614(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[amplification_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 373;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38A684(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 373;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 373;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 373;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 373;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38A724(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[array_ref_size");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38A7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 374;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38A810(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 374;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 374;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 374;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 374;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38A8B0(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[attribute");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38A978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 375;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38A998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 375;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 375;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 375;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 375;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38AA30(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[barycentric_coord");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38AA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 376;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38AA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 376;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 376;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 376;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 376;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38AB34(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[base_instance");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38AB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 377;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38ABA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 377;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 377;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 377;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 377;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38AC38(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[base_vertex");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38AC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 378;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38ACA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 378;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 378;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 378;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 378;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38AD48(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[index");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38AE10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 379;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 379;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 379;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 379;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38AEB0(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[buffer");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38AF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 380;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38AF98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 380;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 380;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 380;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 380;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B030(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[center_no_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 381;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B09C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 381;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 381;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 381;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 381;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B134(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[center_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 382;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 382;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 382;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 382;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 382;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B238(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[centroid_no_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 383;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 383;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 383;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 383;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 383;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B33C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[centroid_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 384;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 384;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 384;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 384;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 384;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B440(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[clip_distance");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 385;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 385;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 385;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 385;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 385;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38B550(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[color");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 4;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 4;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 4;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 4;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B6B0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " constant");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F38B6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 386;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 386;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 386;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 386;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 386;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B7B4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[continue_search");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 387;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38B820(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 387;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 387;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 387;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 387;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38B8B8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[curve_parameter");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38B904(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 388;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  return result;
}

__n128 sub_22F38B928(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 388;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 388;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 388;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 388;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38B9C8(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[depth");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = sub_22E47DAC0(v4, off_24FABFF10[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v5, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38BA74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 5;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 5;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 5;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 5;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38BB0C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " device");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F38BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 389;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 389;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 389;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 389;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 389;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38BC10(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[direction");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38BC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 390;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38BC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 390;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 390;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 390;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 390;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38BD14(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[dispatch_quadgroups_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38BD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 391;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38BD80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 391;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 391;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 391;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 391;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38BE18(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[dispatch_simdgroups_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38BE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 392;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38BE84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 392;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 392;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 392;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 392;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38BF1C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[dispatch_threads_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38BF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 393;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38BF88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 393;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 393;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 393;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 393;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C020(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[distance");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 394;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 394;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 394;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 394;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C104(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[early_fragment_tests");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 395;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38C170(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 395;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 395;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 395;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 395;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C208(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[flat");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 396;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 396;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 396;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 396;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C2EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[fragment";
  else
    v5 = " fragment";
  if (v4)
    v6 = "]]";
  else
    v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F38C368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 397;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38C388(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 397;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 397;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 397;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 397;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C420(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[front_facing");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C46C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __n128 result;
  __int128 v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_WORD *)(v3 + 32) = 210;
  v8 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  *(_QWORD *)(v3 + 40) = v4;
  v9 = v8 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v3 + 48) = v5;
  *(_WORD *)(v3 + 32) = 210;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 210;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = v10 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 210;
  *(_BYTE *)(v3 + 34) = BYTE2(v11);
  return result;
}

llvm::raw_ostream *sub_22F38C514(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[function_constant");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

uint64_t sub_22F38C5DC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 398;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F38C6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F38C5DC(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F38C75C(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  llvm::raw_ostream *v9;
  const void *v10;
  unint64_t v11;
  void *v12;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[function_groups");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = v6 + 16 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v9 = sub_22E47DAC0(a2, "\"");
      v10 = *(const void **)v6;
      v11 = *(_QWORD *)(v6 + 8);
      v12 = (void *)*((_QWORD *)v9 + 4);
      if (v11 <= *((_QWORD *)v9 + 3) - (_QWORD)v12)
      {
        if (v11)
        {
          memcpy(v12, v10, *(_QWORD *)(v6 + 8));
          *((_QWORD *)v9 + 4) += v11;
        }
      }
      else
      {
        v9 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, (const char *)v10);
      }
      sub_22E47DAC0(v9, "\"");
      v6 += 16;
      v8 = ", ";
    }
    while (v6 != v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 399;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38C8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 399;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 399;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 399;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 399;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38C958(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[geometry_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38C9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 400;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38C9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 400;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 400;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 400;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 400;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38CA5C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[geometry_intersection_function_table_offset");
  return sub_22E47DAC0(a2, "]]");
}

uint64_t sub_22F38CAA8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 401;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F38CB20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 401;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F38CC08(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[host_name");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 402;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 402;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 402;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 402;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38CD8C(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[id");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38CE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 403;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38CE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 403;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 403;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 403;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 403;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38CF18(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  int v6;
  int v7;
  char *v8;

  v6 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v6 << 16) & 0x780000) != 0)
    v7 = ((*(unsigned __int16 *)(a1 + 28) | (v6 << 16)) >> 19) & 0xF;
  else
    v7 = sub_22F1BFAD0(a1);
  if (v7)
    v8 = " [[alias_implicit_imageblock_color";
  else
    v8 = " [[alias_implicit_imageblock";
  sub_22E47DAC0(a2, v8);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

const char *sub_22F38D000(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2)
    return "alias_implicit_imageblock_color";
  else
    return "alias_implicit_imageblock";
}

__n128 sub_22F38D04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 404;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 404;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 404;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 404;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F38D0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 405;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38D10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 405;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 405;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 405;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 405;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38D1A4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[instance_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38D1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 406;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38D210(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 406;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 406;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 406;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 406;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38D2A8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[instance_intersection_function_table_offset");
  return sub_22E47DAC0(a2, "]]");
}

uint64_t sub_22F38D2F4(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, const void *a5, unsigned int a6)
{
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 407;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  *(_DWORD *)(a1 + 40) = a6;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a6, 4);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v11)
    memmove(v10, a5, 8 * v11);
  return a1;
}

uint64_t sub_22F38D364(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v5 = *(const void **)(a1 + 48);
  v6 = *(_DWORD *)(a1 + 36);
  v7 = *(unsigned int *)(a1 + 40);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 407;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  *(_DWORD *)(v4 + 40) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, 8 * v7, 4);
  *(_QWORD *)(v4 + 48) = v10;
  v11 = *(unsigned int *)(v4 + 40);
  if ((_DWORD)v11)
    memmove(v10, v5, 8 * v11);
  v12 = *(unsigned __int16 *)(v4 + 32);
  v13 = (v12 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v12;
  v14 = v13 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v12;
  *(_BYTE *)(v4 + 34) = (v14 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v12;
  return v4;
}

llvm::raw_ostream *sub_22F38D448(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[intersection");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = sub_22E47DAC0(v4, off_24FABFF30[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v5, "\"");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = 8 * v6;
    do
    {
      sub_22E47DAC0(a2, ", ");
      v7 += 8;
      llvm::raw_ostream::operator<<();
      v8 -= 8;
    }
    while (v8);
  }
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38D54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 408;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38D56C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 408;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 408;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 408;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 408;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38D604(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[invariant");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38D650(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 409;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 409;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 409;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 409;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38D6E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[kernel";
  else
    v5 = " kernel";
  if (v4)
    v6 = "]]";
  else
    v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F38D764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 410;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38D784(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 410;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 410;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 410;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 410;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38D81C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[key_frame_count");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38D868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 411;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38D88C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 411;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 411;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 411;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 411;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38D92C(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threadgroup");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38D9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 412;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38DA14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 412;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 412;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 412;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 412;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38DAAC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[max_distance");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38DAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 413;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 413;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 413;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 413;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38DB98(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[max_total_threadgroups_per_mesh_grid");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 414;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 414;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 414;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 414;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38DD00(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[max_total_threads_per_threadgroup");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38DDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 415;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 415;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 415;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 415;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38DE60(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[mesh");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38DEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 416;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 416;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 416;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 416;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 416;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38DF64(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[min_distance");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38DFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 417;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38DFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 417;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 417;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 417;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 417;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E068(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[motion_end_time");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 418;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 418;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 418;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 418;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 418;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E16C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[motion_start_time");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 419;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 419;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 419;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 419;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E250(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[no_user_resource_stores");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E29C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 420;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 420;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 420;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 420;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E334(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[object");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 6;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 6;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 6;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 6;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E418(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " object_data");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F38E464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 421;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 421;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 421;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 421;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 421;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E51C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[object_to_world_transform");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 422;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E588(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 422;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 422;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 422;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 422;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E620(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[opaque");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 423;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E68C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 423;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 423;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 423;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 423;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E724(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[origin");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E770(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  __n128 result;
  __int128 v6;
  char v7;

  result = *(__n128 *)a3;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 424;
  *(_BYTE *)(a1 + 34) = v7 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  *(_QWORD *)(a1 + 40) = a5;
  return result;
}

__n128 sub_22F38E798(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  int v8;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_DWORD *)(a1 + 36);
  v5 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_DWORD *)(v3 + 36) = v4;
  *(_WORD *)(v3 + 32) = 424;
  *(_QWORD *)(v3 + 40) = v5;
  LODWORD(v5) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v5);
  LODWORD(v5) = v5 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 424;
  *(_BYTE *)(v3 + 34) = BYTE2(v5);
  LODWORD(v5) = v5 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 424;
  *(_BYTE *)(v3 + 34) = BYTE2(v5);
  v8 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 424;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v5 & 0xFFFBFFFF | ((v8 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F38E840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 425;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E860(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 425;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 425;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 425;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 425;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E8F8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[patch_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 426;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38E964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 426;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 426;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 426;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 426;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38E9FC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[payload");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38EA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 427;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38EA68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 427;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 427;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 427;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 427;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38EB00(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[pixel_position_in_tile");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38EB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 428;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38EB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 428;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 428;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 428;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 428;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38EC04(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[pixels_per_tile");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38EC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 429;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38EC70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 429;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 429;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 429;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 429;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38ED08(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[point_coord");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38ED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 430;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38ED74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 430;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 430;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 430;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 430;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38EE0C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[point_size");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38EE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 431;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38EE78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 431;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 431;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 431;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 431;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38EF10(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[position");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38EF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 432;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38EF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 432;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 432;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 432;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 432;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F014(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[position_in_patch");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 433;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F080(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 433;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 433;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 433;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 433;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F118(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[post_depth_coverage");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 434;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 434;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 434;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 434;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 434;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F21C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[primitive_culled");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 435;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F288(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 435;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 435;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 435;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 435;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F320(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[primitive_data");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 436;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F38C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 436;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 436;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 436;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 436;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F424(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[primitive_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 437;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 437;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 437;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 437;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 437;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F528(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[quadgroup_index_in_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 438;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F594(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 438;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 438;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 438;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 438;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F62C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[quadgroups_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 439;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F38F69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 439;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 439;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 439;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 439;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F38F73C(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[raster_order_group");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F804(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 7;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 7;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 7;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 7;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F89C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " ray_data");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F38F8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 440;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38F908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 440;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 440;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 440;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 440;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38F9A0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[render_target_array_index");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38F9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 441;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 441;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 441;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 441;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 441;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FAA4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[simdgroup_index_in_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38FAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 442;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FB10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 442;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 442;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 442;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 442;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FBA8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[simdgroups_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38FBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 443;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FC14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 443;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 443;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 443;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 443;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FCAC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[sample_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38FCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 444;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FD18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 444;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 444;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 444;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 444;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FDB0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[sample_mask");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38FDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 445;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 445;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 445;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 445;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 445;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FEB4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[sample_no_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F38FF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 446;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F38FF20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 446;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 446;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 446;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 446;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F38FFB8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[sample_perspective");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 447;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F390028(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 447;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 447;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 447;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 447;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3900C8(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[sampler");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390190(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 448;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 448;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 448;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 448;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390228(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[shared");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 449;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390294(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 449;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 449;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 449;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 449;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39032C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[stage_in");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 450;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390398(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 450;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 450;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 450;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 450;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390430(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[grid_origin");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F39047C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 451;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F39049C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 451;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 451;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 451;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 451;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390534(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[grid_size");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 452;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3905A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 452;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 452;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 452;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 452;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390638(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[stencil");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 453;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  return result;
}

__n128 sub_22F3906A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 453;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 453;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 453;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 453;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F390748(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[texture");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390810(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 8;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 8;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 8;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 8;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3908A8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " thread");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F3908F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 454;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390914(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 454;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 454;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 454;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 454;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3909AC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_execution_width");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3909F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 9;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 9;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 9;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 9;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390A90(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " threadgroup");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F390ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 10;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 10;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 10;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 10;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390B74(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " threadgroup_imageblock");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F390BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 455;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 455;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 455;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 455;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 455;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390C78(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threadgroup_position_in_grid");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 456;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 456;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 456;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 456;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 456;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390D7C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threadgroups_per_grid");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 457;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 457;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 457;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 457;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 457;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390E80(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_index_in_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 458;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 458;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 458;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 458;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 458;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F390F84(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_index_in_quadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F390FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 459;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F390FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 459;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 459;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 459;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 459;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391088(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_index_in_simdgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3910D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 460;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3910F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 460;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 460;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 460;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 460;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39118C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_position_in_grid");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3911D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 461;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3911F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 461;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 461;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 461;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 461;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391290(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[thread_position_in_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3912DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 462;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3912FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 462;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 462;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 462;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 462;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391394(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threads_per_grid");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3913E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 463;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391400(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 463;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 463;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 463;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 463;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391498(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threads_per_threadgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3914E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 464;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 464;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 464;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 464;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 464;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39159C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[threads_per_simdgroup");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3915E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 465;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 465;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 465;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 465;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 465;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3916A0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[tile_index");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3916EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 466;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F39170C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 466;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 466;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 466;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 466;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3917A4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[time");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3917F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 467;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 467;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 467;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 467;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F391890(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;
  uint64_t v6;
  unsigned int *v7;
  const void *v8;
  size_t v9;
  unsigned int v10;
  void *v11;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[user");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = v4;
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = *(unsigned int **)(v6 + 16);
    v10 = *v7;
    v8 = v7 + 4;
    v9 = v10;
    v11 = (void *)*((_QWORD *)v4 + 4);
    if ((unint64_t)v10 <= *((_QWORD *)v5 + 3) - (_QWORD)v11)
    {
      if (v9)
      {
        memcpy(v11, v8, v9);
        *((_QWORD *)v5 + 4) += v9;
      }
    }
    else
    {
      v5 = (llvm::raw_ostream *)llvm::raw_ostream::write(v5, (const char *)v8);
    }
  }
  sub_22E47DAC0(v5, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F39197C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 468;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F39199C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 468;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 468;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 468;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 468;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391A34(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[user_instance_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F391A80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 469;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 469;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 469;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 469;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391B18(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[vertex";
  else
    v5 = " vertex";
  if (v4)
    v6 = "]]";
  else
    v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F391B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 470;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 470;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 470;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 470;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 470;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391C4C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[vertex_id");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F391C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 471;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 471;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 471;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 471;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 471;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391D50(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[viewport_array_index");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F391D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 11;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 11;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 11;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 11;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391E34(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[stitchable";
  else
    v5 = " [[visible";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, "]]");
}

const char *sub_22F391EA0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2)
    return "stitchable";
  else
    return "visible";
}

__n128 sub_22F391EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 472;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F391F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 472;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 472;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 472;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 472;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F391FA4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[world_space_direction");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F391FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 473;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F392010(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 473;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 473;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 473;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 473;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3920A8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[world_space_origin");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3920F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 474;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F392114(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 474;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 474;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 474;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 474;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3921AC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[world_to_object_transform");
  return sub_22E47DAC0(a2, "]]");
}

__n128 sub_22F3921F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 211;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 211;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 211;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 211;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F392290(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFF48[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3922F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 212;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 212;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 212;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 212;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F392390(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFF60[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3923F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 213;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 213;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 213;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 213;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F392498(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFF78[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F392554(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 214;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 214;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 214;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 214;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3925EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FABFF90[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F392654(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 215;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 215;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 215;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 215;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3926F4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FABFFF0[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0A88[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F3927C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 216;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 216;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 216;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 216;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F392860(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC10D0[v4];
  sub_22E47DAC0(a2, off_24FAC0008[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3928C8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0038[v2];
}

__n128 sub_22F392908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 217;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 217;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 217;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 217;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3929A0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC10D0[v4];
  sub_22E47DAC0(a2, off_24FAC0068[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F392A08(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0098[v2];
}

__n128 sub_22F392A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 475;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 475;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 475;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 475;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F392AE8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::mode");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((mode");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F392C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 41;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 41;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 41;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 41;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F392D14(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC00C8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F392D7C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 80;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F392E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 80;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F392E20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 80;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 80;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 80;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 80;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F392EB8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC00E0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F392F20(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 218;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F392FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 218;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 218;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 218;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 218;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39303C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC00F8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3930A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 219;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 219;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 219;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 219;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F393144(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;
  uint64_t v6;
  unsigned int *v7;
  const void *v8;
  size_t v9;
  unsigned int v10;
  void *v11;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((ns_error_domain");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = v4;
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    v7 = *(unsigned int **)(v6 + 16);
    v10 = *v7;
    v8 = v7 + 4;
    v9 = v10;
    v11 = (void *)*((_QWORD *)v4 + 4);
    if ((unint64_t)v10 <= *((_QWORD *)v5 + 3) - (_QWORD)v11)
    {
      if (v9)
      {
        memcpy(v11, v8, v9);
        *((_QWORD *)v5 + 4) += v9;
      }
    }
    else
    {
      v5 = (llvm::raw_ostream *)llvm::raw_ostream::write(v5, (const char *)v8);
    }
  }
  sub_22E47DAC0(v5, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F393230(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 220;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 220;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 220;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 220;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3932C8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0110[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F393330(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 221;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3933B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 221;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 221;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 221;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 221;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39344C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0128[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3934B4(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 59;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F393538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 59;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 59;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 59;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 59;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3935D0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0140[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F393638(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 222;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 222;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 222;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 222;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3936D0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0380[v4];
  sub_22E47DAC0(a2, off_24FAC0158[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F393738(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 223;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 223;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 223;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 223;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3937D0(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(noalias");
  return sub_22E47DAC0(a2, ")");
}

uint64_t sub_22F39381C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 476;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F393904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F39381C(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F39399C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  const void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  llvm::raw_ostream *v20;
  const void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  llvm::raw_ostream *v28;
  const void *v29;
  unint64_t v30;
  void *v31;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((no_builtin");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_31;
    }
    v17 = *(_QWORD *)(a1 + 40);
    v18 = v17 + 16 * v16;
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      v21 = *(const void **)v17;
      v22 = *(_QWORD *)(v17 + 8);
      v23 = (void *)*((_QWORD *)v20 + 4);
      if (v22 <= *((_QWORD *)v20 + 3) - (_QWORD)v23)
      {
        if (v22)
        {
          memcpy(v23, v21, *(_QWORD *)(v17 + 8));
          *((_QWORD *)v20 + 4) += v22;
        }
      }
      else
      {
        v20 = (llvm::raw_ostream *)llvm::raw_ostream::write(v20, (const char *)v21);
      }
      sub_22E47DAC0(v20, "\"");
      v17 += 16;
      v19 = ", ";
    }
    while (v17 != v18);
    goto LABEL_30;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[clang::no_builtin");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v24 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v24)
    {
      v25 = *(_QWORD *)(a1 + 40);
      v26 = v25 + 16 * v24;
      v27 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v27);
        v28 = sub_22E47DAC0(a2, "\"");
        v29 = *(const void **)v25;
        v30 = *(_QWORD *)(v25 + 8);
        v31 = (void *)*((_QWORD *)v28 + 4);
        if (v30 <= *((_QWORD *)v28 + 3) - (_QWORD)v31)
        {
          if (v30)
          {
            memcpy(v31, v29, *(_QWORD *)(v25 + 8));
            *((_QWORD *)v28 + 4) += v30;
          }
        }
        else
        {
          v28 = (llvm::raw_ostream *)llvm::raw_ostream::write(v28, (const char *)v29);
        }
        sub_22E47DAC0(v28, "\"");
        v25 += 16;
        v27 = ", ";
      }
      while (v25 != v26);
      goto LABEL_30;
    }
LABEL_32:
    v11 = "]]";
    goto LABEL_31;
  }
  sub_22E47DAC0(a2, " [[clang::no_builtin");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_32;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = v8 + 16 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v12 = sub_22E47DAC0(a2, "\"");
    v13 = *(const void **)v8;
    v14 = *(_QWORD *)(v8 + 8);
    v15 = (void *)*((_QWORD *)v12 + 4);
    if (v14 <= *((_QWORD *)v12 + 3) - (_QWORD)v15)
    {
      if (v14)
      {
        memcpy(v15, v13, *(_QWORD *)(v8 + 8));
        *((_QWORD *)v12 + 4) += v14;
      }
    }
    else
    {
      v12 = (llvm::raw_ostream *)llvm::raw_ostream::write(v12, (const char *)v13);
    }
    sub_22E47DAC0(v12, "\"");
    v8 += 16;
    v10 = ", ";
  }
  while (v8 != v9);
LABEL_30:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_31:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

__n128 sub_22F393CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 224;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 224;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 224;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 224;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F393D40(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0178[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F393DA8(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 225;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F393E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 225;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 225;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 225;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 225;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F393EC4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0190[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F393F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 12;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 12;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 12;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 12;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F393FC4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC01A8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39402C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 226;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 226;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 226;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 226;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3940C4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::no_destroy";
  else
    v5 = " __attribute__((no_destroy";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F394140(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 227;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 227;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 227;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 227;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3941D8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC01C0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F394240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 477;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 477;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 477;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 477;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3942D8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC01D8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F394340(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 47;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3943C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 47;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 47;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 47;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 47;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39445C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0220[v4];
  sub_22E47DAC0(a2, off_24FAC01F0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3944C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 228;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 228;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 228;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 228;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39455C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0250[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3945C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 48;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 48;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 48;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 48;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39465C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0268[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3946C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 229;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 229;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 229;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 229;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39475C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0280[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3947C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 230;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 230;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 230;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 230;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39485C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0298[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3948C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 231;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 231;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 231;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 231;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39495C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC02B0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3949C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 232;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 232;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 232;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 232;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F394A5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC02C8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F394AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 233;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 233;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 233;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 233;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F394B5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0380[v4];
  sub_22E47DAC0(a2, off_24FAC02E0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F394BC4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 234;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F394CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F394BC4(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F394D44(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  const void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  llvm::raw_ostream *v20;
  const void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  llvm::raw_ostream *v28;
  const void *v29;
  unint64_t v30;
  void *v31;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((no_sanitize");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_31;
    }
    v17 = *(_QWORD *)(a1 + 40);
    v18 = v17 + 16 * v16;
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      v21 = *(const void **)v17;
      v22 = *(_QWORD *)(v17 + 8);
      v23 = (void *)*((_QWORD *)v20 + 4);
      if (v22 <= *((_QWORD *)v20 + 3) - (_QWORD)v23)
      {
        if (v22)
        {
          memcpy(v23, v21, *(_QWORD *)(v17 + 8));
          *((_QWORD *)v20 + 4) += v22;
        }
      }
      else
      {
        v20 = (llvm::raw_ostream *)llvm::raw_ostream::write(v20, (const char *)v21);
      }
      sub_22E47DAC0(v20, "\"");
      v17 += 16;
      v19 = ", ";
    }
    while (v17 != v18);
    goto LABEL_30;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[clang::no_sanitize");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v24 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v24)
    {
      v25 = *(_QWORD *)(a1 + 40);
      v26 = v25 + 16 * v24;
      v27 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v27);
        v28 = sub_22E47DAC0(a2, "\"");
        v29 = *(const void **)v25;
        v30 = *(_QWORD *)(v25 + 8);
        v31 = (void *)*((_QWORD *)v28 + 4);
        if (v30 <= *((_QWORD *)v28 + 3) - (_QWORD)v31)
        {
          if (v30)
          {
            memcpy(v31, v29, *(_QWORD *)(v25 + 8));
            *((_QWORD *)v28 + 4) += v30;
          }
        }
        else
        {
          v28 = (llvm::raw_ostream *)llvm::raw_ostream::write(v28, (const char *)v29);
        }
        sub_22E47DAC0(v28, "\"");
        v25 += 16;
        v27 = ", ";
      }
      while (v25 != v26);
      goto LABEL_30;
    }
LABEL_32:
    v11 = "]]";
    goto LABEL_31;
  }
  sub_22E47DAC0(a2, " [[clang::no_sanitize");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_32;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = v8 + 16 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v12 = sub_22E47DAC0(a2, "\"");
    v13 = *(const void **)v8;
    v14 = *(_QWORD *)(v8 + 8);
    v15 = (void *)*((_QWORD *)v12 + 4);
    if (v14 <= *((_QWORD *)v12 + 3) - (_QWORD)v15)
    {
      if (v14)
      {
        memcpy(v15, v13, *(_QWORD *)(v8 + 8));
        *((_QWORD *)v12 + 4) += v14;
      }
    }
    else
    {
      v12 = (llvm::raw_ostream *)llvm::raw_ostream::write(v12, (const char *)v13);
    }
    sub_22E47DAC0(v12, "\"");
    v8 += 16;
    v10 = ", ";
  }
  while (v8 != v9);
LABEL_30:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_31:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

__n128 sub_22F395050(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 235;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 235;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 235;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 235;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3950E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0300[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F395150(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 236;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 236;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 236;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 236;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3951E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0318[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F395250(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 237;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 237;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 237;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 237;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3952E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0330[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F395350(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 238;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 238;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 238;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 238;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3953E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0348[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F395450(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 239;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 239;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 239;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 239;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3954E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0380[v4];
  sub_22E47DAC0(a2, off_24FAC0360[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F395550(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 240;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 240;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 240;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 240;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3955E8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::no_tracepoint";
  else
    v5 = " __attribute__((no_tracepoint";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F395664(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 241;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 241;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 241;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 241;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3956FC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[no_unique_address");
  return sub_22E47DAC0(a2, "]]");
}

uint64_t sub_22F395748(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v8;
  int v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 81;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 4 * a5;
  v11 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v12 = v11;
  if (a5)
    bzero(v11, v10);
  *(_QWORD *)(a1 + 40) = v12;
  v13 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v13)
    memmove(v12, a4, 4 * v13);
  return a1;
}

uint64_t sub_22F3957F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F395748(v4, a2, (_OWORD *)a1, *(const void **)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F395888(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((nonnull");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v12 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v12)
    {
      v11 = "))";
      goto LABEL_18;
    }
    v13 = *(_QWORD *)(a1 + 40);
    v14 = 4 * v12;
    v15 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v15);
      v13 += 4;
      llvm::raw_ostream::operator<<();
      v15 = ", ";
      v14 -= 4;
    }
    while (v14);
    goto LABEL_17;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[gnu::nonnull");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v16)
    {
      v17 = *(_QWORD *)(a1 + 40);
      v18 = 4 * v16;
      v19 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v19);
        v17 += 4;
        llvm::raw_ostream::operator<<();
        v19 = ", ";
        v18 -= 4;
      }
      while (v18);
      goto LABEL_17;
    }
LABEL_19:
    v11 = "]]";
    goto LABEL_18;
  }
  sub_22E47DAC0(a2, " [[gnu::nonnull");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_19;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = 4 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v8 += 4;
    llvm::raw_ostream::operator<<();
    v10 = ", ";
    v9 -= 4;
  }
  while (v9);
LABEL_17:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_18:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

__n128 sub_22F395A80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 242;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 242;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 242;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 242;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F395B18(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC03A0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F395B80(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  uint64_t result;
  __int128 v10;
  int v11;
  int v12;
  unsigned int v13;

  result = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v10 = a5[1];
  *(_OWORD *)result = *a5;
  *(_OWORD *)(result + 16) = v10;
  v11 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_QWORD *)(result + 40) = a3;
  *(_QWORD *)(result + 48) = a4;
  *(_WORD *)(result + 32) = 243;
  *(_BYTE *)(result + 34) = (v11 | 0x40000u) >> 16;
  v12 = *(unsigned __int8 *)(result + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v13 = (*(unsigned __int16 *)(result + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v13;
    *(_BYTE *)(result + 30) = BYTE2(v13);
  }
  return result;
}

__n128 sub_22F395C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_DWORD *)(v3 + 36) = v4;
  *(_WORD *)(v3 + 32) = 243;
  *(__n128 *)(v3 + 40) = result;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 243;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 243;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 243;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

uint64_t sub_22F395CC8(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 478;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F395D54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 478;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 478;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 478;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 478;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F395DF4(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 244;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F395E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 244;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 244;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 244;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 244;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F395F10(uint64_t a1, int a2, uint64_t a3, const void *a4, unsigned int a5, const void *a6, unsigned int a7, void *a8, unsigned int a9, void *a10, unsigned int a11, void *a12, unsigned int a13, void *a14, unsigned int a15, _OWORD *a16)
{
  uint64_t v18;
  uint64_t result;
  __int16 v20;
  int v21;
  unsigned int v22;

  v18 = sub_22E3CD3D4(a1 + 2032, 144, 3);
  result = sub_22F39602C(v18, a1, a16, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  v20 = *(_WORD *)(result + 32);
  *(_BYTE *)(result + 34) |= 4u;
  *(_WORD *)(result + 32) = v20;
  v21 = *(unsigned __int8 *)(result + 30);
  if ((~(v21 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v22 = (*(unsigned __int16 *)(result + 28) | (v21 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v22;
    *(_BYTE *)(result + 30) = BYTE2(v22);
  }
  return result;
}

uint64_t sub_22F39602C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t a5, const void *a6, unsigned int a7, const void *a8, unsigned int a9, void *__src, unsigned int a11, void *a12, unsigned int a13, void *a14, unsigned int a15, void *a16, unsigned int a17)
{
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v20 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 479;
  *(_BYTE *)(a1 + 34) = v21 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  *(_QWORD *)(a1 + 40) = a5;
  v22 = a2 + 2032;
  *(_DWORD *)(a1 + 48) = a7;
  *(_QWORD *)(a1 + 56) = sub_22E3CD3D4(a2 + 2032, 8 * a7, 4);
  *(_DWORD *)(a1 + 64) = a9;
  *(_QWORD *)(a1 + 72) = sub_22E3CD3D4(v22, 8 * a9, 4);
  *(_DWORD *)(a1 + 80) = a11;
  *(_QWORD *)(a1 + 88) = sub_22E3CD3D4(v22, 8 * a11, 4);
  *(_DWORD *)(a1 + 96) = a13;
  *(_QWORD *)(a1 + 104) = sub_22E3CD3D4(v22, 8 * a13, 4);
  *(_DWORD *)(a1 + 112) = a15;
  *(_QWORD *)(a1 + 120) = sub_22E3CD3D4(v22, 4 * a15, 4);
  *(_DWORD *)(a1 + 128) = a17;
  *(_QWORD *)(a1 + 136) = sub_22E3CD3D4(v22, 8 * a17, 4);
  v23 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v23)
    memmove(*(void **)(a1 + 56), a6, 8 * v23);
  v24 = *(unsigned int *)(a1 + 64);
  if ((_DWORD)v24)
    memmove(*(void **)(a1 + 72), a8, 8 * v24);
  v25 = *(unsigned int *)(a1 + 80);
  if ((_DWORD)v25)
    memmove(*(void **)(a1 + 88), __src, 8 * v25);
  v26 = *(unsigned int *)(a1 + 96);
  if ((_DWORD)v26)
    memmove(*(void **)(a1 + 104), a12, 8 * v26);
  v27 = *(unsigned int *)(a1 + 112);
  if ((_DWORD)v27)
    memmove(*(void **)(a1 + 120), a14, 4 * v27);
  v28 = *(unsigned int *)(a1 + 128);
  if ((_DWORD)v28)
    memmove(*(void **)(a1 + 136), a16, 8 * v28);
  return a1;
}

uint64_t sub_22F3961D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 144, 3);
  result = sub_22F39602C(v4, a2, (_OWORD *)a1, *(_DWORD *)(a1 + 36), *(_QWORD *)(a1 + 40), *(const void **)(a1 + 56), *(_DWORD *)(a1 + 48), *(const void **)(a1 + 72), *(_DWORD *)(a1 + 64), *(void **)(a1 + 88), *(_DWORD *)(a1 + 80), *(void **)(a1 + 104), *(_DWORD *)(a1 + 96), *(void **)(a1 + 120), *(_DWORD *)(a1 + 112), *(void **)(a1 + 136), *(_DWORD *)(a1 + 128));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F3962C8(unsigned __int8 *a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(a1[30] << 16) & 0x780000) == 0)
    sub_22F1BFAD0((uint64_t)a1);
  sub_22E47DAC0(a2, "#pragma omp declare simd");
  sub_22F37A058((llvm::raw_ostream *)a1, a2, a3);
  return sub_22E47DAC0(a2, "\n");
}

uint64_t sub_22F396338(uint64_t a1, int a2, int a3, uint64_t a4, char a5, int a6, _OWORD *a7)
{
  uint64_t result;
  __int128 v14;
  int v15;
  int v16;
  unsigned int v17;

  result = sub_22E3CD3D4(a1 + 2032, 64, 3);
  v14 = a7[1];
  *(_OWORD *)result = *a7;
  *(_OWORD *)(result + 16) = v14;
  v15 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_DWORD *)(result + 40) = a3;
  *(_QWORD *)(result + 48) = a4;
  *(_BYTE *)(result + 56) = a5;
  *(_DWORD *)(result + 60) = a6;
  *(_WORD *)(result + 32) = 245;
  *(_BYTE *)(result + 34) = (v15 | 0x40000u) >> 16;
  v16 = *(unsigned __int8 *)(result + 30);
  if ((~(v16 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v17 = (*(unsigned __int16 *)(result + 28) | (v16 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v17;
    *(_BYTE *)(result + 30) = BYTE2(v17);
  }
  return result;
}

double sub_22F3963F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  double result;
  __int128 v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v6 = *(_DWORD *)(a1 + 60);
  result = *(double *)(a1 + 36);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v8;
  *(_WORD *)(v3 + 32) = 245;
  v9 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  *(double *)(v3 + 36) = result;
  *(_QWORD *)(v3 + 48) = v4;
  *(_DWORD *)(v3 + 60) = v6;
  v10 = v9 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v3 + 56) = v5;
  *(_WORD *)(v3 + 32) = 245;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = v10 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 245;
  *(_BYTE *)(v3 + 34) = BYTE2(v11);
  v12 = v11 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 245;
  *(_BYTE *)(v3 + 34) = BYTE2(v12);
  return result;
}

llvm::raw_ostream *sub_22F3964A8(unsigned __int8 *a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(a1[30] << 16) & 0x780000) == 0)
    sub_22F1BFAD0((uint64_t)a1);
  sub_22E47DAC0(a2, "#pragma omp declare target");
  sub_22F37A3D0((llvm::raw_ostream *)a1, a2, a3);
  return sub_22E47DAC0(a2, "\n");
}

uint64_t sub_22F396518(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, unsigned int a5, const void *a6, unsigned int a7, void *a8, unsigned int a9, _OWORD *a10)
{
  uint64_t v18;
  uint64_t result;
  __int16 v20;
  int v21;
  unsigned int v22;

  v18 = sub_22E3CD3D4(a1 + 2032, 104, 3);
  result = sub_22F396604(v18, a1, a10, a2, a3, a4, a5, a6, a7, a8, a9);
  v20 = *(_WORD *)(result + 32);
  *(_BYTE *)(result + 34) |= 4u;
  *(_WORD *)(result + 32) = v20;
  v21 = *(unsigned __int8 *)(result + 30);
  if ((~(v21 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v22 = (*(unsigned __int16 *)(result + 28) | (v21 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v22;
    *(_BYTE *)(result + 30) = BYTE2(v22);
  }
  return result;
}

uint64_t sub_22F396604(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, const void *a6, unsigned int a7, const void *a8, unsigned int a9, void *__src, unsigned int a11)
{
  __int128 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v14 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x100000;
  *(_WORD *)(a1 + 32) = 246;
  *(_BYTE *)(a1 + 34) = BYTE2(v15);
  *(_QWORD *)(a1 + 40) = a4;
  *(_QWORD *)(a1 + 48) = a5;
  *(_DWORD *)(a1 + 56) = a7;
  v16 = a2 + 2032;
  *(_QWORD *)(a1 + 64) = sub_22E3CD3D4(a2 + 2032, 8 * a7, 4);
  *(_DWORD *)(a1 + 72) = a9;
  *(_QWORD *)(a1 + 80) = sub_22E3CD3D4(v16, 8 * a9, 4);
  *(_DWORD *)(a1 + 88) = a11;
  *(_QWORD *)(a1 + 96) = sub_22E3CD3D4(v16, 4 * a11, 4);
  v17 = *(unsigned int *)(a1 + 56);
  if ((_DWORD)v17)
    memmove(*(void **)(a1 + 64), a6, 8 * v17);
  v18 = *(unsigned int *)(a1 + 72);
  if ((_DWORD)v18)
    memmove(*(void **)(a1 + 80), a8, 8 * v18);
  v19 = *(unsigned int *)(a1 + 88);
  if ((_DWORD)v19)
    memmove(*(void **)(a1 + 96), __src, 4 * v19);
  return a1;
}

uint64_t sub_22F396708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 104, 3);
  result = sub_22F396604(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(const void **)(a1 + 64), *(_DWORD *)(a1 + 56), *(const void **)(a1 + 80), *(_DWORD *)(a1 + 72), *(void **)(a1 + 96), *(_DWORD *)(a1 + 88));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F3967C8(uint64_t a1, llvm::raw_ostream *a2, uint64_t a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, "#pragma omp declare variant");
  sub_22F37A568(a1, a2, a3);
  return sub_22E47DAC0(a2, "\n");
}

uint64_t sub_22F396838(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 40) = a2;
  *(_WORD *)(result + 32) = 480;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F3968C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 480;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 480;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 480;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 480;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F396964(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 247;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3969E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 247;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 247;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 247;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 247;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F396A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 82;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F396AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 82;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 82;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 82;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 82;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F396B38(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC03B8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F396BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 248;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 248;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 248;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 248;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F396C38(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC03D0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F396CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 249;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 249;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 249;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 249;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F396D38(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC03E8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F396DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 250;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 250;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 250;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 250;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F396E38(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0400[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F396EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 251;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 251;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 251;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 251;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F396F38(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0418[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F396FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 252;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 252;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 252;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 252;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397038(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0430[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3970A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 481;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 481;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 481;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 481;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397138(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0448[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3971A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 253;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 253;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 253;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 253;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F397240(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::objc_bridge");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((objc_bridge");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F3973D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 254;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 254;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 254;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 254;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F397474(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::objc_bridge_mutable");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((objc_bridge_mutable");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F397608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v4 = *(_QWORD *)(a1 + 56);
  result = *(__n128 *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(__n128 *)(v3 + 40) = result;
  *(_WORD *)(v3 + 32) = 255;
  *(_QWORD *)(v3 + 56) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 255;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 255;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 255;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F3976B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 482;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 482;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 482;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 482;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397748(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0460[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3977B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 256;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 256;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 256;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 256;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397848(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((objc_complete_definition");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F397894(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 483;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 483;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 483;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 483;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39792C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0478[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F397994(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 484;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F397A18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 484;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 484;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 484;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 484;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397AB0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0490[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F397B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 485;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 485;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 485;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 485;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397BB0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC04A8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F397C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 257;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 257;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 257;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 257;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397CB0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC04C0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F397D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 258;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 258;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 258;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 258;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397DB0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC04D8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F397E18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 259;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 259;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 259;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 259;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F397EB0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC04F0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F397F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 13;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 13;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 13;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 13;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F397FB8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::objc_gc");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((objc_gc");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F39814C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 260;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 260;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 260;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 260;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3981E4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0508[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39824C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 14;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 14;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 14;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 14;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3982E4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __unsafe_unretained");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F398330(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 15;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 15;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 15;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 15;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3983C8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __kindof");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F398414(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 261;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 261;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 261;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 261;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3984B4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC0568[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0550[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F398588(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 262;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 262;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 262;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 262;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398620(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0580[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F398688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 486;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 486;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 486;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 486;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398720(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0598[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F398788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 487;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 487;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 487;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 487;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398820(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC05B0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F398888(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 60;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 60;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 60;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 60;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F398928(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  uint64_t v8;
  unsigned int *v9;
  const void *v10;
  size_t v11;
  unsigned int v12;
  void *v13;
  char *v14;
  llvm::raw_ostream *v16;
  uint64_t v17;
  unsigned int *v18;
  const void *v19;
  size_t v20;
  unsigned int v21;
  void *v22;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::objc_ownership");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(unsigned int **)(v8 + 16);
      v12 = *v9;
      v10 = v9 + 4;
      v11 = v12;
      v13 = (void *)*((_QWORD *)v6 + 4);
      if ((unint64_t)v12 <= *((_QWORD *)v7 + 3) - (_QWORD)v13)
      {
        if (v11)
        {
          memcpy(v13, v10, v11);
          *((_QWORD *)v7 + 4) += v11;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v10);
      }
    }
    v14 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((objc_ownership");
    sub_22E47DAC0(a2, "(");
    v16 = sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v7 = v16;
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v18 = *(unsigned int **)(v17 + 16);
      v21 = *v18;
      v19 = v18 + 4;
      v20 = v21;
      v22 = (void *)*((_QWORD *)v16 + 4);
      if ((unint64_t)v21 <= *((_QWORD *)v7 + 3) - (_QWORD)v22)
      {
        if (v20)
        {
          memcpy(v22, v19, v20);
          *((_QWORD *)v7 + 4) += v20;
        }
      }
      else
      {
        v7 = (llvm::raw_ostream *)llvm::raw_ostream::write(v7, (const char *)v19);
      }
    }
    v14 = "))";
  }
  sub_22E47DAC0(v7, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v14);
}

__n128 sub_22F398ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 263;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 263;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 263;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 263;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398B54(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC05C8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F398BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 264;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 264;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 264;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 264;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398C54(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC05E0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F398CBC(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 265;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F398D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 265;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 265;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 265;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 265;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398DD8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC05F8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F398E40(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 266;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F398EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 266;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 266;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 266;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 266;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F398F5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0610[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F398FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 267;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 267;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 267;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 267;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39905C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0628[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3990C4(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 488;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39913C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 488;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F399224(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::objc_runtime_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((objc_runtime_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F3993A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 489;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 489;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 489;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 489;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399440(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0640[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3994A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 268;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 268;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 268;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 268;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399540(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0658[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3995A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 490;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 490;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 490;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 490;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399640(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0670[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3996A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 269;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 269;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 269;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 269;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399740(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " suppress_direct");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

uint64_t sub_22F39978C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return dword_22F4A0E98[v2];
}

__n128 sub_22F3997CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 491;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 491;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 491;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 491;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399864(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, off_24FAC0688[v4]);
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

char *sub_22F3998C4(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC06B8[v2];
}

__n128 sub_22F399904(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 16;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 16;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 16;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 16;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39999C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FAC0880 + v4);
  sub_22E47DAC0(a2, off_24FAC06E8[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F399A04(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0710[v2];
}

__n128 sub_22F399A44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 17;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 17;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 17;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 17;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399ADC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FAC0880 + v4);
  sub_22E47DAC0(a2, off_24FAC0738[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F399B44(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0760[v2];
}

__n128 sub_22F399B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 18;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 18;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 18;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 18;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399C1C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FAC0880 + v4);
  sub_22E47DAC0(a2, off_24FAC0788[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F399C84(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC07B0[v2];
}

__n128 sub_22F399CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 19;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 19;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 19;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 19;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399D5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC07D8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F399DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 20;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 20;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 20;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 20;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F399E5C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC07F0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F399EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 270;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 270;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 270;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 270;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F399F64(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((intel_reqd_sub_group_size");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v3 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v3, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F39A004(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 21;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 21;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 21;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 21;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A09C(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " ocl_constant");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39A0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 22;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 22;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 22;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 22;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A180(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " ocl_global");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39A1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 23;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 23;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 23;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 23;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A264(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " ocl_local");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39A2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 24;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 24;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 24;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 24;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A348(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " ocl_private");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39A394(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 271;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 271;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 271;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 271;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A42C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " kernel";
  else
    v5 = " __kernel";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39A498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 25;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 25;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 25;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 25;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A530(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FAC0880 + v4);
  sub_22E47DAC0(a2, off_24FAC0808[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F39A598(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0830[v2];
}

__n128 sub_22F39A5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 26;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 26;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 26;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 26;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A670(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = (char *)*(&off_24FAC0880 + v4);
  sub_22E47DAC0(a2, off_24FAC0858[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F39A6D8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC08A8[v2];
}

__n128 sub_22F39A718(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 42;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 42;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 42;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 42;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39A7B8(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((opencl_unroll_hint");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v3 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v3, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F39A858(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 272;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39A8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 272;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 272;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 272;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 272;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39A974(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC08D0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F39A9DC(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 492;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39AA60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 492;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 492;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 492;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 492;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39AAF8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC08E8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F39AB60(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  char v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = *(_BYTE *)(result + 34);
  *(_WORD *)(result + 32) = 273;
  *(_BYTE *)(result + 34) = v5 & 0xE0;
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39ABD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 273;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 273;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 273;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 273;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39AC70(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " override");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

uint64_t sub_22F39ACBC(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 40) = a2;
  *(_WORD *)(result + 32) = 274;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F39AD48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 274;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 274;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 274;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 274;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F39ADE8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, unsigned int a6)
{
  __int128 v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v9 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 275;
  *(_BYTE *)(a1 + 34) = v10 & 0xE0;
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v11 = 4 * a6;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v11, 4);
  v13 = v12;
  if (a6)
    bzero(v12, v11);
  *(_QWORD *)(a1 + 56) = v13;
  v14 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v14)
    memmove(v13, a5, 4 * v14);
  return a1;
}

uint64_t sub_22F39AE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  result = sub_22F39ADE8(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(const void **)(a1 + 56), *(_DWORD *)(a1 + 48));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

void sub_22F39AF24(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F39AF84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  llvm::raw_ostream *v18;
  llvm::raw_ostream *v19;
  uint64_t v20;
  unsigned int *v21;
  const void *v22;
  size_t v23;
  unsigned int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_22E47DAC0(v16, " __attribute__((ownership_holds");
  sub_22E47DAC0(v16, "(");
  v18 = sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = v18;
  v20 = *(_QWORD *)(v17 + 40);
  if (v20)
  {
    v21 = *(unsigned int **)(v20 + 16);
    v24 = *v21;
    v22 = v21 + 4;
    v23 = v24;
    v25 = (void *)*((_QWORD *)v18 + 4);
    if ((unint64_t)v24 <= *((_QWORD *)v19 + 3) - (_QWORD)v25)
    {
      if (v23)
      {
        memcpy(v25, v22, v23);
        *((_QWORD *)v19 + 4) += v23;
      }
    }
    else
    {
      v19 = (llvm::raw_ostream *)llvm::raw_ostream::write(v19, (const char *)v22);
    }
  }
  sub_22E47DAC0(v19, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v26 = *(unsigned int *)(v17 + 48);
  if ((_DWORD)v26)
  {
    v27 = *(_QWORD *)(v17 + 56);
    v28 = 4 * v26;
    do
    {
      sub_22E47DAC0(v16, ", ");
      v27 += 4;
      llvm::raw_ostream::operator<<();
      v28 -= 4;
    }
    while (v28);
  }
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(v16, ")");
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F39B7FC(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0900[v2];
}

uint64_t sub_22F39B83C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 276;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39B8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 276;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 276;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 276;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 276;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39B958(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0948[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39B9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 277;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 277;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 277;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 277;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39BA60(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " [[clang::param_typestate";
  else
    v6 = " __attribute__((param_typestate";
  if (v5)
    v7 = "]]";
  else
    v7 = "))";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, off_24FAC0CA0[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F39BB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 61;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 61;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 61;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 61;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39BBDC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FAC0960[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F39BC44(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0988[v2];
}

__n128 sub_22F39BC84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 83;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 83;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 83;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 83;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39BD24(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC10D0[v4];
  sub_22E47DAC0(a2, off_24FAC09B0[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F39BDE0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC09E0[v2];
}

double sub_22F39BE20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 278;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 278;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 278;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 278;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F39BEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 62;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 62;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 62;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 62;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39BF60(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  llvm::raw_ostream *v7;
  char *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0A10[v5]);
  sub_22E47DAC0(a2, "(");
  v7 = sub_22E47DAC0(a2, "\"");
  if (*(_DWORD *)(a1 + 36))
    v8 = "aapcs-vfp";
  else
    v8 = "aapcs";
  v9 = sub_22E47DAC0(v7, v8);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F39C034(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 40) = a2;
  *(_WORD *)(result + 32) = 279;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F39C0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 279;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 279;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 279;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 279;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F39C160(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, char a5, int a6, const void *a7, uint64_t a8)
{
  __int128 v11;
  char v12;
  void *v13;

  v11 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 27;
  *(_BYTE *)(a1 + 34) = v12 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  *(_BYTE *)(a1 + 40) = a5;
  *(_DWORD *)(a1 + 44) = a6;
  *(_DWORD *)(a1 + 48) = a8;
  v13 = (void *)sub_22E3CD3D4(a2 + 2032, a8, 0);
  *(_QWORD *)(a1 + 56) = v13;
  if (a8)
    memcpy(v13, a7, *(unsigned int *)(a1 + 48));
  return a1;
}

uint64_t sub_22F39C1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  const void *v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  void *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_DWORD *)(a1 + 36);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(const void **)(a1 + 56);
  v8 = *(_DWORD *)(a1 + 44);
  v9 = *(unsigned int *)(a1 + 48);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v10;
  v11 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 27;
  *(_BYTE *)(v4 + 34) = v11 & 0xE0;
  *(_DWORD *)(v4 + 36) = v5;
  *(_BYTE *)(v4 + 40) = v6;
  *(_DWORD *)(v4 + 44) = v8;
  *(_DWORD *)(v4 + 48) = v9;
  v12 = (void *)sub_22E3CD3D4(v3, v9, 0);
  *(_QWORD *)(v4 + 56) = v12;
  if ((_DWORD)v9)
    memcpy(v12, v7, *(unsigned int *)(v4 + 48));
  v13 = *(unsigned __int16 *)(v4 + 32);
  v14 = (v13 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v13;
  v15 = v14 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v15);
  *(_WORD *)(v4 + 32) = v13;
  *(_BYTE *)(v4 + 34) = (v15 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v13;
  return v4;
}

const char *sub_22F39C2D8(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2)
    return "__ptrauth_restricted_intptr";
  else
    return "__ptrauth";
}

double sub_22F39C324(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 280;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 280;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 280;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 280;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F39C3C4(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 281;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39C4A0(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 281;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39C518(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 281;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

uint64_t sub_22F39C600(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 282;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39C6DC(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 282;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39C754(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 282;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

uint64_t sub_22F39C83C(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 283;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39C918(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 283;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39C990(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 283;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

uint64_t sub_22F39CA78(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 284;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39CB54(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 284;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39CBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 284;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

uint64_t sub_22F39CCB4(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 285;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39CD90(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 285;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39CE08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 285;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

__n128 sub_22F39CEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 286;
  v7 = (*(unsigned __int8 *)(v3 + 34) >> 5 << 21) | 0x10011E;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 286;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 286;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 286;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

__n128 sub_22F39CF98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 63;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 63;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 63;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 63;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D030(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0A28[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39D098(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 64;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 64;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 64;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 64;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D130(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0A40[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39D198(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 287;
  v7 = (*(unsigned __int8 *)(v3 + 34) >> 5 << 21) | 0x18011F;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 287;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 287;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 287;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  return result;
}

llvm::raw_ostream *sub_22F39D240(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((pt_guarded_by");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F39D308(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 288;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 288;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 288;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 288;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D3A0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::pt_guarded_var";
  else
    v5 = " __attribute__((pt_guarded_var";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F39D41C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 28;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 28;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 28;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 28;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D4B4(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __ptr32");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39D500(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 29;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 29;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 29;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 29;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D598(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __ptr64");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39D5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 30;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 30;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 30;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 30;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F39D67C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 31;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 31;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 31;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 31;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F39D714(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 289;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39D798(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 289;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 289;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 289;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 289;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39D830(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0A58[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39D898(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 290;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 290;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 290;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 290;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39D938(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC0AA0[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0A88[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F39DA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 291;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 291;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 291;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 291;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39DAA4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0AB8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39DB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 292;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 292;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 292;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 292;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39DBA4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0AD0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39DC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 65;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 65;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 65;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 65;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39DCA4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0B08[v4];
  sub_22E47DAC0(a2, off_24FAC0AE8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39DD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 293;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 293;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 293;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 293;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39DDA4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::reinitializes";
  else
    v5 = " __attribute__((reinitializes";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F39DE20(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 294;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F39DE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 294;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F39DF8C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F39DFEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((release_capability");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F39E3C0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0B28[v2];
}

uint64_t sub_22F39E400(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 84;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39E478(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 84;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F39E53C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 84;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F39E624(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::release_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((release_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F39E7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 493;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 493;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 493;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 493;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39E840(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((kernel");
  return sub_22E47DAC0(a2, "))");
}

double sub_22F39E88C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  double result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_DWORD *)(a1 + 44);
  result = *(double *)(a1 + 36);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(double *)(v3 + 36) = result;
  *(_WORD *)(v3 + 32) = 295;
  *(_DWORD *)(v3 + 44) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 295;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 295;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 295;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F39E934(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 296;
  *(_BYTE *)(a1 + 34) = BYTE2(v8);
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 8 * v10);
  return a1;
}

uint64_t sub_22F39E9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 296;
  *(_BYTE *)(v4 + 34) = BYTE2(v8);
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 8 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 8 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

void sub_22F39EAA0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F39EB00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  sub_22E47DAC0(v16, " __attribute__((requires_capability");
  v18 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 36);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 40);
    v21 = 8 * v19;
    v22 = "(";
    do
    {
      sub_22E47DAC0(v16, v22);
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v22 = ", ";
      v21 -= 8;
    }
    while (v21);
    sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
    v18 = ")";
  }
  sub_22E47DAC0(v16, v18);
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F39EED4(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0B68[v2];
}

__n128 sub_22F39EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 297;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 297;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 297;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 297;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39EFAC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0C80[v4];
  sub_22E47DAC0(a2, off_24FAC0BA8[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F39F014(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0BC8[v2];
}

__n128 sub_22F39F054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 298;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 298;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 298;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 298;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F0EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0BE8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39F154(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 299;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 299;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 299;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 299;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F39F1F4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " [[clang::return_typestate";
  else
    v6 = " __attribute__((return_typestate";
  if (v5)
    v7 = "]]";
  else
    v7 = "))";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, off_24FAC0CA0[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

uint64_t sub_22F39F2D8(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 300;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39F35C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 300;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 300;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 300;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 300;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F3F4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0C00[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F39F45C(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 301;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F39F4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 301;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 301;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 301;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 301;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F578(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0C18[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39F5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 32;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 32;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 32;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 32;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F678(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __sptr");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F39F6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 302;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 302;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 302;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 302;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F75C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0C30[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 303;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 303;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 303;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 303;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F85C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0C48[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F39F8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 304;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 304;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 304;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 304;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39F95C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::scoped_lockable";
  else
    v5 = " __attribute__((scoped_lockable";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F39F9D8(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  __int16 v12;
  int v13;
  unsigned int v14;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 305;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(_WORD *)(v8 + 32);
  *(_BYTE *)(v8 + 34) |= 4u;
  *(_WORD *)(v8 + 32) = v12;
  v13 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v13 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v14 = (*(unsigned __int16 *)(v8 + 28) | (v13 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = *(_WORD *)(v8 + 28);
    *(_BYTE *)(v8 + 30) = BYTE2(v14);
  }
  return v8;
}

uint64_t sub_22F39FAB4(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 305;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F39FB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 305;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

void sub_22F39FC14(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F39FC70(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  llvm::raw_ostream *v14;
  uint64_t v15;
  llvm::raw_ostream *v16;
  const void *v17;
  size_t v18;
  void *v19;

  sub_22E47DAC0(v14, " [[gnu::section");
  sub_22E47DAC0(v14, "(");
  v16 = sub_22E47DAC0(v14, "\"");
  v17 = *(const void **)(v15 + 40);
  v18 = *(unsigned int *)(v15 + 36);
  v19 = (void *)*((_QWORD *)v16 + 4);
  if (*((_QWORD *)v16 + 3) - (_QWORD)v19 >= v18)
  {
    if ((_DWORD)v18)
    {
      memcpy(v19, v17, v18);
      *((_QWORD *)v16 + 4) += v18;
    }
  }
  else
  {
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::write(v16, (const char *)v17);
  }
  sub_22E47DAC0(v16, "\"");
  sub_22E47DAC0(v14, ")");
  return sub_22E47DAC0(v14, "]]");
}

const char *sub_22F39FE30(uint64_t a1)
{
  int v1;
  unsigned int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2 >= 3)
    return "allocate";
  else
    return "section";
}

__n128 sub_22F39FE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 306;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 306;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 306;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 306;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F39FF14(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0C80[v4];
  sub_22E47DAC0(a2, off_24FAC0C60[v4]);
  return sub_22E47DAC0(a2, v5);
}

double sub_22F39FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 307;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 307;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 307;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 307;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F3A001C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 308;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 308;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 308;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 308;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A00BC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " [[clang::set_typestate";
  else
    v6 = " __attribute__((set_typestate";
  if (v5)
    v7 = "]]";
  else
    v7 = "))";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, off_24FAC0CA0[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

uint64_t sub_22F3A01A0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, unsigned int a6)
{
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 309;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a6, 4);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v11)
    memmove(v10, a5, 8 * v11);
  return a1;
}

uint64_t sub_22F3A0220(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 309;
  *(_BYTE *)(v4 + 34) = BYTE2(v9);
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, 8 * v7, 4);
  *(_QWORD *)(v4 + 56) = v10;
  v11 = *(unsigned int *)(v4 + 48);
  if ((_DWORD)v11)
    memmove(v10, v6, 8 * v11);
  v12 = *(unsigned __int16 *)(v4 + 32);
  v13 = (v12 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v12;
  v14 = v13 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v12;
  *(_BYTE *)(v4 + 34) = (v14 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v12;
  return v4;
}

llvm::raw_ostream *sub_22F3A0318(uint64_t a1, llvm::raw_ostream *a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((shared_trylock_function");
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(a1 + 40), (int)a2, 0, a3, 0, "\n", 1uLL);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD *)(a1 + 56);
    v8 = 8 * v6;
    do
    {
      sub_22E47DAC0(a2, ", ");
      v7 += 8;
      llvm::raw_ostream::operator<<();
      v8 -= 8;
    }
    while (v8);
  }
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A0434(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 310;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 310;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 310;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 310;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A04CC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0CB8[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A0534(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 311;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 311;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 311;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 311;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A05CC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::standalone_debug";
  else
    v5 = " __attribute__((standalone_debug";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3A0648(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 66;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 66;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 66;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 66;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A06E0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FAC0CD0[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3A0748(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0CF8[v2];
}

uint64_t sub_22F3A0788(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 312;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3A080C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 312;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 312;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 312;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 312;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F3A08A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 43;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F3A098C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F3A08A4(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F3A0A24(uint64_t a1, llvm::raw_ostream *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  llvm::raw_ostream *v9;
  const void *v10;
  unint64_t v11;
  void *v12;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " [[gsl::suppress");
  v4 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v5 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v5)
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = v6 + 16 * v5;
    v8 = "(";
    do
    {
      sub_22E47DAC0(a2, v8);
      v9 = sub_22E47DAC0(a2, "\"");
      v10 = *(const void **)v6;
      v11 = *(_QWORD *)(v6 + 8);
      v12 = (void *)*((_QWORD *)v9 + 4);
      if (v11 <= *((_QWORD *)v9 + 3) - (_QWORD)v12)
      {
        if (v11)
        {
          memcpy(v12, v10, *(_QWORD *)(v6 + 8));
          *((_QWORD *)v9 + 4) += v11;
        }
      }
      else
      {
        v9 = (llvm::raw_ostream *)llvm::raw_ostream::write(v9, (const char *)v10);
      }
      sub_22E47DAC0(v9, "\"");
      v6 += 16;
      v8 = ", ";
    }
    while (v6 != v7);
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v4 = ")";
  }
  sub_22E47DAC0(a2, v4);
  return sub_22E47DAC0(a2, "]]");
}

double sub_22F3A0B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 313;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 313;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 313;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 313;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A0C08(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  char *v8;
  llvm::raw_ostream *v9;
  llvm::raw_ostream *v11;
  llvm::raw_ostream *v12;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((swift_async");
    sub_22E47DAC0(a2, "(");
    v11 = sub_22E47DAC0(a2, "\"");
    v12 = sub_22E47DAC0(v11, off_24FAC0D20[*(int *)(a1 + 36)]);
    sub_22E47DAC0(v12, "\"");
    v8 = "))";
    if ((*(_DWORD *)(a1 + 40) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_22E47DAC0(a2, " [[clang::swift_async");
  sub_22E47DAC0(a2, "(");
  v6 = sub_22E47DAC0(a2, "\"");
  v7 = sub_22E47DAC0(v6, off_24FAC0D20[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v7, "\"");
  v8 = "]]";
  if ((*(_DWORD *)(a1 + 40) & 0x80000000) != 0)
  {
LABEL_5:
    sub_22E47DAC0(a2, ", ");
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v9 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v9, (char *)&unk_22F5BAADF);
  }
LABEL_6:
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v8);
}

__n128 sub_22F3A0D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 67;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 67;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 67;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 67;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A0E0C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0D38[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A0E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 73;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3A0E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 73;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 73;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 73;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 73;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A0F2C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0D50[v4]);
  return sub_22E47DAC0(a2, v5);
}

double sub_22F3A0F94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = *(double *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 314;
  *(double *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 314;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 314;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 314;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

uint64_t sub_22F3A1034(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 315;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A10AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 315;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A1194(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_async_name");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F3A1278(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 316;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A12F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 316;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A13D8(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_attr");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F3A14BC(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 317;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A1534(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 317;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A161C(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_bridge");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A1700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 318;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 318;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 318;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 318;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A1798(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_bridged_typedef");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A17E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 68;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 68;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 68;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 68;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A187C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0D68[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A18E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 74;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3A1904(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 74;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 74;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 74;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 74;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A199C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0D80[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A1A04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 319;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 319;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 319;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 319;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A1AA4(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  llvm::raw_ostream *v5;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_error");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = sub_22E47DAC0(v4, off_24FAC0D98[*(int *)(a1 + 36)]);
  sub_22E47DAC0(v5, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A1B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 75;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3A1B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 75;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 75;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 75;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 75;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A1C08(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0DC0[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A1C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 320;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 320;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 320;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 320;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F3A1D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 321;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 321;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 321;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 321;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F3A1DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  char v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 76;
  *(_BYTE *)(a1 + 34) = v5 & 0xE0;
  return result;
}

__n128 sub_22F3A1DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 76;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 76;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 76;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 76;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A1E58(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0DD8[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3A1EC0(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 322;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A1F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 322;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A2020(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  size_t v6;
  void *v7;

  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_name");
  sub_22E47DAC0(a2, "(");
  v4 = sub_22E47DAC0(a2, "\"");
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (*((_QWORD *)v4 + 3) - (_QWORD)v7 >= v6)
  {
    if ((_DWORD)v6)
    {
      memcpy(v7, v5, v6);
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    v4 = (llvm::raw_ostream *)llvm::raw_ostream::write(v4, (const char *)v5);
  }
  sub_22E47DAC0(v4, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A2104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 323;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 323;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 323;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 323;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A21A4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  llvm::raw_ostream *v7;
  char *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " __attribute__((swift_wrapper";
  else
    v6 = " __attribute__((swift_newtype";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v7 = sub_22E47DAC0(a2, "\"");
  if (*(_DWORD *)(a1 + 36))
    v8 = "enum";
  else
    v8 = "struct";
  v9 = sub_22E47DAC0(v7, v8);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, "))");
}

const char *sub_22F3A227C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  if (v2)
    return "swift_wrapper";
  else
    return "swift_newtype";
}

__n128 sub_22F3A22C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 494;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 494;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 494;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 494;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A2360(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_objc_members");
  return sub_22E47DAC0(a2, "))");
}

__n128 sub_22F3A23AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 324;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 324;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 324;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 324;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A2444(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __attribute__((swift_private");
  return sub_22E47DAC0(a2, "))");
}

uint64_t sub_22F3A2490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _OWORD *a6)
{
  uint64_t result;
  __int128 v12;
  int v13;
  int v14;
  unsigned int v15;

  result = sub_22E3CD3D4(a1 + 2032, 72, 3);
  v12 = a6[1];
  *(_OWORD *)result = *a6;
  *(_OWORD *)(result + 16) = v12;
  v13 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 36) = a2;
  *(_QWORD *)(result + 44) = a3;
  *(_QWORD *)(result + 56) = a4;
  *(_BYTE *)(result + 64) = a5;
  *(_WORD *)(result + 32) = 495;
  *(_BYTE *)(result + 34) = (v13 | 0x40000u) >> 16;
  v14 = *(unsigned __int8 *)(result + 30);
  if ((~(v14 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v15 = (*(unsigned __int16 *)(result + 28) | (v14 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v15;
    *(_BYTE *)(result + 30) = BYTE2(v15);
  }
  return result;
}

__n128 sub_22F3A2544(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  __n128 result;
  __int128 v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = sub_22E3CD3D4(a2 + 2032, 72, 3);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a1 + 64);
  result = *(__n128 *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_WORD *)(v3 + 32) = 495;
  v8 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  *(__n128 *)(v3 + 36) = result;
  *(_QWORD *)(v3 + 56) = v4;
  v9 = v8 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v3 + 64) = v5;
  *(_WORD *)(v3 + 32) = 495;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 495;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = v10 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 495;
  *(_BYTE *)(v3 + 34) = BYTE2(v11);
  return result;
}

uint64_t sub_22F3A25F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, _OWORD *a6)
{
  uint64_t result;
  __int128 v12;
  int v13;
  int v14;
  unsigned int v15;

  result = sub_22E3CD3D4(a1 + 2032, 64, 3);
  v12 = a6[1];
  *(_OWORD *)result = *a6;
  *(_OWORD *)(result + 16) = v12;
  v13 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_QWORD *)(result + 36) = a2;
  *(_QWORD *)(result + 44) = a3;
  *(_DWORD *)(result + 52) = a4;
  *(_BYTE *)(result + 56) = a5;
  *(_WORD *)(result + 32) = 496;
  *(_BYTE *)(result + 34) = (v13 | 0x40000u) >> 16;
  v14 = *(unsigned __int8 *)(result + 30);
  if ((~(v14 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v15 = (*(unsigned __int16 *)(result + 28) | (v14 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v15;
    *(_BYTE *)(result + 30) = BYTE2(v15);
  }
  return result;
}

__n128 sub_22F3A26A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  char v5;
  __n128 result;
  __int128 v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v4 = *(_DWORD *)(a1 + 52);
  v5 = *(_BYTE *)(a1 + 56);
  result = *(__n128 *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_WORD *)(v3 + 32) = 496;
  v8 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  *(__n128 *)(v3 + 36) = result;
  *(_DWORD *)(v3 + 52) = v4;
  v9 = v8 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v3 + 56) = v5;
  *(_WORD *)(v3 + 32) = 496;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 496;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = v10 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 496;
  *(_BYTE *)(v3 + 34) = BYTE2(v11);
  return result;
}

uint64_t sub_22F3A2758(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, uint64_t a6)
{
  __int128 v10;
  char v11;
  void *v12;

  v10 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 325;
  *(_BYTE *)(a1 + 34) = v11 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = a6;
  if (a5)
    memcpy(v12, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A27D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v5 = *(unsigned int *)(a1 + 36);
  v6 = *(const void **)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 325;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_DWORD *)(v4 + 36) = v5;
  v10 = (void *)sub_22E3CD3D4(v3, v5, 0);
  *(_QWORD *)(v4 + 40) = v10;
  *(_QWORD *)(v4 + 48) = v7;
  if ((_DWORD)v5)
    memcpy(v10, v6, *(unsigned int *)(v4 + 36));
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

__n128 sub_22F3A28BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 69;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 69;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 69;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 69;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A2954(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0DF0[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3A29BC(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 326;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A2A34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 326;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A2B1C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::tls_model");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((tls_model");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A2CA0(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 327;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A2D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 327;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A2E00(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::target");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((target");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A2F84(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, unsigned int a5)
{
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  const void *v18;
  void *v19;
  _QWORD *v20;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 328;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = 16 * a5;
  v11 = a2 + 2032;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, v10, 4);
  v13 = v12;
  if (a5)
    bzero(v12, v10);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v14)
  {
    v15 = 0;
    v16 = 16 * v14;
    do
    {
      v17 = *(_QWORD *)(a4 + v15 + 8);
      if (v17)
      {
        v18 = *(const void **)(a4 + v15);
        v19 = (void *)sub_22E3CD3D4(v11, *(_QWORD *)(a4 + v15 + 8), 0);
        memcpy(v19, v18, v17);
        v20 = (_QWORD *)(*(_QWORD *)(a1 + 40) + v15);
        *v20 = v19;
        v20[1] = v17;
      }
      v15 += 16;
    }
    while (v16 != v15);
  }
  return a1;
}

uint64_t sub_22F3A306C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  result = sub_22F3A2F84(v4, a2, (_OWORD *)a1, *(_QWORD *)(a1 + 40), *(_DWORD *)(a1 + 36));
  v6 = *(unsigned __int16 *)(result + 32);
  v7 = (v6 | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(result + 34) = BYTE2(v7);
  *(_WORD *)(result + 32) = v6;
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(result + 34) = BYTE2(v8);
  *(_WORD *)(result + 32) = v6;
  *(_BYTE *)(result + 34) = (v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(result + 32) = v6;
  return result;
}

llvm::raw_ostream *sub_22F3A3104(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  const void *v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  llvm::raw_ostream *v20;
  const void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  llvm::raw_ostream *v28;
  const void *v29;
  unint64_t v30;
  void *v31;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((target_clones");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_31;
    }
    v17 = *(_QWORD *)(a1 + 40);
    v18 = v17 + 16 * v16;
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      v21 = *(const void **)v17;
      v22 = *(_QWORD *)(v17 + 8);
      v23 = (void *)*((_QWORD *)v20 + 4);
      if (v22 <= *((_QWORD *)v20 + 3) - (_QWORD)v23)
      {
        if (v22)
        {
          memcpy(v23, v21, *(_QWORD *)(v17 + 8));
          *((_QWORD *)v20 + 4) += v22;
        }
      }
      else
      {
        v20 = (llvm::raw_ostream *)llvm::raw_ostream::write(v20, (const char *)v21);
      }
      sub_22E47DAC0(v20, "\"");
      v17 += 16;
      v19 = ", ";
    }
    while (v17 != v18);
    goto LABEL_30;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[gnu::target_clones");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v24 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v24)
    {
      v25 = *(_QWORD *)(a1 + 40);
      v26 = v25 + 16 * v24;
      v27 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v27);
        v28 = sub_22E47DAC0(a2, "\"");
        v29 = *(const void **)v25;
        v30 = *(_QWORD *)(v25 + 8);
        v31 = (void *)*((_QWORD *)v28 + 4);
        if (v30 <= *((_QWORD *)v28 + 3) - (_QWORD)v31)
        {
          if (v30)
          {
            memcpy(v31, v29, *(_QWORD *)(v25 + 8));
            *((_QWORD *)v28 + 4) += v30;
          }
        }
        else
        {
          v28 = (llvm::raw_ostream *)llvm::raw_ostream::write(v28, (const char *)v29);
        }
        sub_22E47DAC0(v28, "\"");
        v25 += 16;
        v27 = ", ";
      }
      while (v25 != v26);
      goto LABEL_30;
    }
LABEL_32:
    v11 = "]]";
    goto LABEL_31;
  }
  sub_22E47DAC0(a2, " [[gnu::target_clones");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_32;
  v8 = *(_QWORD *)(a1 + 40);
  v9 = v8 + 16 * v7;
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v12 = sub_22E47DAC0(a2, "\"");
    v13 = *(const void **)v8;
    v14 = *(_QWORD *)(v8 + 8);
    v15 = (void *)*((_QWORD *)v12 + 4);
    if (v14 <= *((_QWORD *)v12 + 3) - (_QWORD)v15)
    {
      if (v14)
      {
        memcpy(v15, v13, *(_QWORD *)(v8 + 8));
        *((_QWORD *)v12 + 4) += v14;
      }
    }
    else
    {
      v12 = (llvm::raw_ostream *)llvm::raw_ostream::write(v12, (const char *)v13);
    }
    sub_22E47DAC0(v12, "\"");
    v8 += 16;
    v10 = ", ";
  }
  while (v8 != v9);
LABEL_30:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_31:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

__n128 sub_22F3A3410(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 329;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 329;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 329;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 329;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A34B0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  char *v9;
  llvm::raw_ostream *v10;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
    v6 = " [[clang::test_typestate";
  else
    v6 = " __attribute__((test_typestate";
  if (v5)
    v7 = "]]";
  else
    v7 = "))";
  sub_22E47DAC0(a2, v6);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  if (*(_DWORD *)(a1 + 36))
    v9 = "unconsumed";
  else
    v9 = "consumed";
  v10 = sub_22E47DAC0(v8, v9);
  sub_22E47DAC0(v10, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F3A3598(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 70;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 70;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 70;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 70;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A3630(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FAC0E08[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3A3698(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0E30[v2];
}

__n128 sub_22F3A36D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 497;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 497;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 497;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 497;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A3770(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __declspec(thread");
  return sub_22E47DAC0(a2, ")");
}

__n128 sub_22F3A37BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 330;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 330;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 330;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 330;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A3854(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::tracepoint";
  else
    v5 = " __attribute__((tracepoint";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3A38D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 331;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 331;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 331;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 331;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A3968(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0E58[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A39D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 332;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 332;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 332;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 332;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A3A68(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::trivial_abi";
  else
    v5 = " __attribute__((trivial_abi";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F3A3AE4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, const void *a5, unsigned int a6)
{
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = (*(unsigned __int8 *)(a1 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(a1 + 32) = 333;
  *(_BYTE *)(a1 + 34) = BYTE2(v9);
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a6;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, 8 * a6, 4);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v11)
    memmove(v10, a5, 8 * v11);
  return a1;
}

uint64_t sub_22F3A3B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  int v9;
  void *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(const void **)(a1 + 56);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = (*(unsigned __int8 *)(v4 + 34) << 16) & 0xE00000 | 0x180000;
  *(_WORD *)(v4 + 32) = 333;
  *(_BYTE *)(v4 + 34) = BYTE2(v9);
  *(_QWORD *)(v4 + 40) = v5;
  *(_DWORD *)(v4 + 48) = v7;
  v10 = (void *)sub_22E3CD3D4(v3, 8 * v7, 4);
  *(_QWORD *)(v4 + 56) = v10;
  v11 = *(unsigned int *)(v4 + 48);
  if ((_DWORD)v11)
    memmove(v10, v6, 8 * v11);
  v12 = *(unsigned __int16 *)(v4 + 32);
  v13 = (v12 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v12;
  v14 = v13 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v14);
  *(_WORD *)(v4 + 32) = v12;
  *(_BYTE *)(v4 + 34) = (v14 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v12;
  return v4;
}

void sub_22F3A3C5C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F3A3CC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  llvm::raw_ostream *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_22E47DAC0(v16, " __attribute__((try_acquire_capability");
  sub_22E47DAC0(v16, "(");
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  sub_22F0D9044(*(_QWORD *)(v17 + 40), (int)v16, 0, v18, 0, "\n", 1uLL);
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  v19 = *(unsigned int *)(v17 + 48);
  if ((_DWORD)v19)
  {
    v20 = *(_QWORD *)(v17 + 56);
    v21 = 8 * v19;
    do
    {
      sub_22E47DAC0(v16, ", ");
      v20 += 8;
      llvm::raw_ostream::operator<<();
      v21 -= 8;
    }
    while (v21);
  }
  sub_22E47DAC0(v16, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(v16, ")");
  return sub_22E47DAC0(v16, "))");
}

char *sub_22F3A3FF0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0E70[v2];
}

__n128 sub_22F3A4030(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 33;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 33;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 33;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 33;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A40C8(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " _Nonnull");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F3A4114(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 34;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 34;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 34;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 34;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A41AC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " _Null_unspecified");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F3A41F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 35;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 35;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 35;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 35;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A4290(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " _Nullable");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F3A42DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 36;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 36;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 36;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 36;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A4374(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " _Nullable_result");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

__n128 sub_22F3A43C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v4 = *(_WORD *)(a1 + 56);
  result = *(__n128 *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(__n128 *)(v3 + 40) = result;
  *(_WORD *)(v3 + 32) = 334;
  *(_WORD *)(v3 + 56) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 334;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 334;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 334;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

uint64_t sub_22F3A4468(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 335;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F3A44F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 335;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  return result;
}

__n128 sub_22F3A4518(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 335;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 335;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 335;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 335;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A45B8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC0FF8[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0E90[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F3A468C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  __n128 result;
  __int128 v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_DWORD *)(a1 + 48);
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 40) = v4;
  *(_WORD *)(v3 + 32) = 336;
  *(_DWORD *)(v3 + 48) = v5;
  v8 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 336;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = v9 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 336;
  *(_BYTE *)(v3 + 34) = BYTE2(v10);
  v11 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 336;
  *(_BYTE *)(v3 + 34) = (v10 & 0xFFFBFFFF | ((v11 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F3A4734(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 37;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 37;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 37;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 37;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A47CC(uint64_t a1, llvm::raw_ostream *a2)
{
  if ((~(*(unsigned __int8 *)(a1 + 30) << 16) & 0x780000) == 0)
    sub_22F1BFAD0(a1);
  sub_22E47DAC0(a2, " __uptr");
  return sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
}

uint64_t sub_22F3A4818(uint64_t a1, const void *a2, uint64_t a3, int a4, _OWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  void *v13;
  __int16 v14;
  int v15;
  unsigned int v16;

  v9 = a1 + 2032;
  v10 = sub_22E3CD3D4(a1 + 2032, 56, 3);
  v11 = a5[1];
  *(_OWORD *)v10 = *a5;
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_BYTE *)(v10 + 34);
  *(_WORD *)(v10 + 32) = 337;
  *(_BYTE *)(v10 + 34) = v12 & 0xE0;
  *(_DWORD *)(v10 + 36) = a3;
  v13 = (void *)sub_22E3CD3D4(v9, a3, 0);
  *(_QWORD *)(v10 + 40) = v13;
  *(_DWORD *)(v10 + 48) = a4;
  if (a3)
    memcpy(v13, a2, *(unsigned int *)(v10 + 36));
  v14 = *(_WORD *)(v10 + 32);
  *(_BYTE *)(v10 + 34) |= 4u;
  *(_WORD *)(v10 + 32) = v14;
  v15 = *(unsigned __int8 *)(v10 + 30);
  if ((~(v15 << 16) & 0x780000) == 0 && !*(_QWORD *)v10)
  {
    v16 = (*(unsigned __int16 *)(v10 + 28) | (v15 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v10 + 28) = *(_WORD *)(v10 + 28);
    *(_BYTE *)(v10 + 30) = BYTE2(v16);
  }
  return v10;
}

uint64_t sub_22F3A48FC(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, int a6)
{
  __int128 v10;
  char v11;
  void *v12;

  v10 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 337;
  *(_BYTE *)(a1 + 34) = v11 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v12;
  *(_DWORD *)(a1 + 48) = a6;
  if (a5)
    memcpy(v12, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A497C(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 337;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 0;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A49F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  char v9;
  void *v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_DWORD *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 337;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v10 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v10;
  *(_DWORD *)(v4 + 48) = v7;
  if ((_DWORD)v6)
    memcpy(v10, v5, *(unsigned int *)(v4 + 36));
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F3A4AE8(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::unavailable");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((unavailable");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F3A4C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 338;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 338;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 338;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 338;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A4D04(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::uninitialized";
  else
    v5 = " __attribute__((uninitialized";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3A4D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 44;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 44;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 44;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 44;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A4E18(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::unlikely";
  else
    v5 = " [[unlikely";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, "]]");
}

uint64_t sub_22F3A4E84(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 339;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3A4F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 339;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 339;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 339;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 339;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A4FA0(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0ED0[v4];
  sub_22E47DAC0(a2, off_24FAC0EA8[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3A5008(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0EF8[v2];
}

uint64_t sub_22F3A5048(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 85;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A50C0(uint64_t a1, const void *a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  void *v11;
  int v12;
  unsigned int v13;

  v7 = a1 + 2032;
  v8 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  v9 = a4[1];
  *(_OWORD *)v8 = *a4;
  *(_OWORD *)(v8 + 16) = v9;
  v10 = *(_BYTE *)(v8 + 34);
  *(_WORD *)(v8 + 32) = 85;
  *(_BYTE *)(v8 + 34) = v10 & 0xE0;
  *(_DWORD *)(v8 + 36) = a3;
  v11 = (void *)sub_22E3CD3D4(v7, a3, 0);
  *(_QWORD *)(v8 + 40) = v11;
  if (a3)
    memcpy(v11, a2, *(unsigned int *)(v8 + 36));
  v12 = *(unsigned __int8 *)(v8 + 30);
  if ((~(v12 << 16) & 0x780000) == 0 && !*(_QWORD *)v8)
  {
    v13 = (*(unsigned __int16 *)(v8 + 28) | (v12 << 16)) & 0xFF87FFFF;
    *(_WORD *)(v8 + 28) = v13;
    *(_BYTE *)(v8 + 30) = BYTE2(v13);
  }
  return v8;
}

uint64_t sub_22F3A5184(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 85;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A526C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::use_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((use_handle");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A53F0(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 340;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

__n128 sub_22F3A5474(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 340;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 340;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 340;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 340;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A550C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0F20[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A5574(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 341;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 341;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 341;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 341;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A560C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::using_if_exists";
  else
    v5 = " __attribute__((using_if_exists";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

uint64_t sub_22F3A5688(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5, uint64_t a6)
{
  __int128 v10;
  char v11;
  void *v12;

  v10 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 342;
  *(_BYTE *)(a1 + 34) = v11 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v12 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = a6;
  if (a5)
    memcpy(v12, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A5704(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  void *v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  v5 = *(unsigned int *)(a1 + 36);
  v6 = *(const void **)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 342;
  *(_BYTE *)(v4 + 34) = v9 & 0xE0;
  *(_DWORD *)(v4 + 36) = v5;
  v10 = (void *)sub_22E3CD3D4(v3, v5, 0);
  *(_QWORD *)(v4 + 40) = v10;
  *(_QWORD *)(v4 + 48) = v7;
  if ((_DWORD)v5)
    memcpy(v10, v6, *(unsigned int *)(v4 + 36));
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F3A57EC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, "[uuid");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]";
  }
  else
  {
    sub_22E47DAC0(a2, " __declspec(uuid");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = ")";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

__n128 sub_22F3A596C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 71;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 71;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 71;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 71;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A5A04(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC0F38[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A5A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 56, 3);
  result = *(__n128 *)(a1 + 36);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_WORD *)(v3 + 32) = 343;
  *(__n128 *)(v3 + 36) = result;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 343;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 343;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 343;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

__n128 sub_22F3A5B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 344;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 344;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 344;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 344;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A5BA4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  char *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  if (v4)
    v5 = " [[clang::vecreturn";
  else
    v5 = " __attribute__((vecreturn";
  if (v4)
    v6 = "]]";
  else
    v6 = "))";
  sub_22E47DAC0(a2, v5);
  return sub_22E47DAC0(a2, v6);
}

__n128 sub_22F3A5C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  int v7;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_QWORD *)(a1 + 40);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 345;
  *(_QWORD *)(v3 + 40) = v4;
  LODWORD(v4) = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 345;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  LODWORD(v4) = v4 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 345;
  *(_BYTE *)(v3 + 34) = BYTE2(v4);
  v7 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 345;
  *(_BYTE *)(v3 + 34) = (unint64_t)(v4 & 0xFFFBFFFF | ((v7 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F3A5CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 72;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 72;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 72;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 72;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A5D58(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC0F78[v4];
  sub_22E47DAC0(a2, off_24FAC0F50[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3A5DC0(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC0FA0[v2];
}

uint64_t sub_22F3A5E00(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  int v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000;
  *(_DWORD *)(result + 36) = a2;
  *(_WORD *)(result + 32) = 346;
  *(_BYTE *)(result + 34) = (v7 | 0x40000u) >> 16;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F3A5E8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __n128 result;
  __int128 v5;
  char v6;

  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 346;
  *(_BYTE *)(a1 + 34) = v6 & 0xE0;
  *(_DWORD *)(a1 + 36) = a4;
  return result;
}

__n128 sub_22F3A5EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 346;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 346;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 346;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 346;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A5F50(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC0FF8[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC0FE0[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

__n128 sub_22F3A6024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 347;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 347;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 347;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 347;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A60BC(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC1010[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3A6124(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 348;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A619C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 348;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

void sub_22F3A6284(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  __asm { BR              X10 }
}

llvm::raw_ostream *sub_22F3A62E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  llvm::raw_ostream *v14;
  uint64_t v15;
  llvm::raw_ostream *v16;
  const void *v17;
  size_t v18;
  void *v19;

  sub_22E47DAC0(v14, " [[nodiscard");
  sub_22E47DAC0(v14, "(");
  v16 = sub_22E47DAC0(v14, "\"");
  v17 = *(const void **)(v15 + 40);
  v18 = *(unsigned int *)(v15 + 36);
  v19 = (void *)*((_QWORD *)v16 + 4);
  if (*((_QWORD *)v16 + 3) - (_QWORD)v19 >= v18)
  {
    if ((_DWORD)v18)
    {
      memcpy(v19, v17, v18);
      *((_QWORD *)v16 + 4) += v18;
    }
  }
  else
  {
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::write(v16, (const char *)v17);
  }
  sub_22E47DAC0(v16, "\"");
  sub_22E47DAC0(v14, ")");
  return sub_22E47DAC0(v14, "]]");
}

void sub_22F3A63A4()
{
  JUMPOUT(0x22F3A62F4);
}

void sub_22F3A63B0()
{
  llvm::raw_ostream *v0;
  uint64_t v1;
  llvm::raw_ostream *v2;
  const void *v3;
  size_t v4;
  void *v5;

  sub_22E47DAC0(v0, " __attribute__((warn_unused_result");
  sub_22E47DAC0(v0, "(");
  v2 = sub_22E47DAC0(v0, "\"");
  v3 = *(const void **)(v1 + 40);
  v4 = *(unsigned int *)(v1 + 36);
  v5 = (void *)*((_QWORD *)v2 + 4);
  if (*((_QWORD *)v2 + 3) - (_QWORD)v5 >= v4)
  {
    if ((_DWORD)v4)
    {
      memcpy(v5, v3, v4);
      *((_QWORD *)v2 + 4) += v4;
    }
  }
  else
  {
    llvm::raw_ostream::write(v2, (const char *)v3);
  }
  JUMPOUT(0x22F3A6350);
}

char *sub_22F3A6434(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC1028[v2];
}

uint64_t sub_22F3A6474(uint64_t a1, _OWORD *a2)
{
  uint64_t result;
  __int128 v4;
  int v5;
  int v6;
  unsigned int v7;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v4 = a2[1];
  *(_OWORD *)result = *a2;
  *(_OWORD *)(result + 16) = v4;
  v5 = (*(unsigned __int8 *)(result + 34) << 16) & 0xE00000 | 0x40000;
  *(_WORD *)(result + 32) = 349;
  *(_BYTE *)(result + 34) = BYTE2(v5);
  v6 = *(unsigned __int8 *)(result + 30);
  if ((~(v6 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v7 = (*(unsigned __int16 *)(result + 28) | (v6 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v7;
    *(_BYTE *)(result + 30) = BYTE2(v7);
  }
  return result;
}

uint64_t sub_22F3A64F8(uint64_t a1, uint64_t a2, char a3)
{
  __int128 v4;
  uint64_t v5;
  int v6;
  __int16 v7;
  char v8;

  v4 = 0uLL;
  v5 = a2;
  v6 = 0;
  v7 = 478;
  v8 = (((a3 & 7) << 16) | 0x780000u) >> 16;
  return sub_22F3A6474(a1, &v4);
}

__n128 sub_22F3A653C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 349;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 349;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 349;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 349;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A65D4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC1058[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A663C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 350;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 350;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 350;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 350;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A66D4(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC1070[v4]);
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3A673C(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 351;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A67B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 351;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A689C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[gnu::weakref");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((weakref");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A6A20(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 352;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A6A98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 352;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A6B80(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::export_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((export_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A6D04(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 353;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A6D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 353;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A6E64(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::import_module");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((import_module");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

uint64_t sub_22F3A6FE8(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, uint64_t a5)
{
  __int128 v8;
  char v9;
  void *v10;

  v8 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 354;
  *(_BYTE *)(a1 + 34) = v9 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v10 = (void *)sub_22E3CD3D4(a2 + 2032, a5, 0);
  *(_QWORD *)(a1 + 40) = v10;
  if (a5)
    memcpy(v10, a4, *(unsigned int *)(a1 + 36));
  return a1;
}

uint64_t sub_22F3A7060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 354;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, v6, 0);
  *(_QWORD *)(v4 + 40) = v9;
  if ((_DWORD)v6)
    memcpy(v9, v5, *(unsigned int *)(v4 + 36));
  v10 = *(unsigned __int16 *)(v4 + 32);
  v11 = (v10 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v11);
  *(_WORD *)(v4 + 32) = v10;
  v12 = v11 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v10;
  *(_BYTE *)(v4 + 34) = (v12 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v10;
  return v4;
}

llvm::raw_ostream *sub_22F3A7148(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  llvm::raw_ostream *v6;
  const void *v7;
  size_t v8;
  void *v9;
  char *v10;
  const void *v12;
  size_t v13;
  void *v14;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (v5)
  {
    sub_22E47DAC0(a2, " [[clang::import_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v7 = *(const void **)(a1 + 40);
    v8 = *(unsigned int *)(a1 + 36);
    v9 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v9 >= v8)
    {
      if ((_DWORD)v8)
      {
        memcpy(v9, v7, v8);
        *((_QWORD *)v6 + 4) += v8;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v7);
    }
    v10 = "]]";
  }
  else
  {
    sub_22E47DAC0(a2, " __attribute__((import_name");
    sub_22E47DAC0(a2, "(");
    v6 = sub_22E47DAC0(a2, "\"");
    v12 = *(const void **)(a1 + 40);
    v13 = *(unsigned int *)(a1 + 36);
    v14 = (void *)*((_QWORD *)v6 + 4);
    if (*((_QWORD *)v6 + 3) - (_QWORD)v14 >= v13)
    {
      if ((_DWORD)v13)
      {
        memcpy(v14, v12, v13);
        *((_QWORD *)v6 + 4) += v13;
      }
    }
    else
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::write(v6, (const char *)v12);
    }
    v10 = "))";
  }
  sub_22E47DAC0(v6, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v10);
}

double sub_22F3A72CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  double result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v4 = *(_DWORD *)(a1 + 44);
  result = *(double *)(a1 + 36);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(double *)(v3 + 36) = result;
  *(_WORD *)(v3 + 32) = 355;
  *(_DWORD *)(v3 + 44) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 355;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 355;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 355;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

__n128 sub_22F3A7374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 356;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 356;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 356;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 356;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A740C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC1088[v4]);
  return sub_22E47DAC0(a2, v5);
}

__n128 sub_22F3A7474(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_WORD *)(v3 + 32) = 357;
  *(__n128 *)v3 = result;
  *(_OWORD *)(v3 + 16) = v5;
  v6 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v6);
  v7 = v6 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 357;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 357;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18);
  *(_WORD *)(v3 + 32) = 357;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  return result;
}

llvm::raw_ostream *sub_22F3A750C(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC10D0[v4];
  sub_22E47DAC0(a2, off_24FAC10A0[v4]);
  return sub_22E47DAC0(a2, v5);
}

char *sub_22F3A7574(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v1 << 16) & 0x780000) != 0)
    v2 = ((*(unsigned __int16 *)(a1 + 28) | (v1 << 16)) >> 19) & 0xF;
  else
    v2 = sub_22F1BFAD0(a1);
  return off_24FAC1100[v2];
}

__n128 sub_22F3A75B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 358;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 358;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 358;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 358;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A7654(uint64_t a1, llvm::raw_ostream *a2)
{
  int v3;
  int v4;
  char *v5;
  llvm::raw_ostream *v6;

  v3 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v3 << 16) & 0x780000) != 0)
    v4 = ((*(unsigned __int16 *)(a1 + 28) | (v3 << 16)) >> 19) & 0xF;
  else
    v4 = sub_22F1BFAD0(a1);
  v5 = off_24FAC11C0[v4];
  sub_22E47DAC0(a2, off_24FAC1130[v4]);
  sub_22E47DAC0(a2, "(");
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  sub_22E47DAC0(v6, (char *)&unk_22F5BAADF);
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v5);
}

uint64_t sub_22F3A7710(uint64_t a1, uint64_t a2, _OWORD *a3, const void *a4, unsigned int a5)
{
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;

  v7 = a3[1];
  *(_OWORD *)a1 = *a3;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_BYTE *)(a1 + 34);
  *(_WORD *)(a1 + 32) = 38;
  *(_BYTE *)(a1 + 34) = v8 & 0xE0;
  *(_DWORD *)(a1 + 36) = a5;
  v9 = (void *)sub_22E3CD3D4(a2 + 2032, 4 * a5, 4);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v10)
    memmove(v9, a4, 4 * v10);
  return a1;
}

uint64_t sub_22F3A7780(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  void *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;

  v3 = a2 + 2032;
  v4 = sub_22E3CD3D4(a2 + 2032, 48, 3);
  v5 = *(const void **)(a1 + 40);
  v6 = *(unsigned int *)(a1 + 36);
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v7;
  v8 = *(_BYTE *)(v4 + 34);
  *(_WORD *)(v4 + 32) = 38;
  *(_BYTE *)(v4 + 34) = v8 & 0xE0;
  *(_DWORD *)(v4 + 36) = v6;
  v9 = (void *)sub_22E3CD3D4(v3, 4 * v6, 4);
  *(_QWORD *)(v4 + 40) = v9;
  v10 = *(unsigned int *)(v4 + 36);
  if ((_DWORD)v10)
    memmove(v9, v5, 4 * v10);
  v11 = *(unsigned __int16 *)(v4 + 32);
  v12 = (v11 | (*(unsigned __int8 *)(v4 + 34) << 16)) & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_BYTE *)(v4 + 34) = BYTE2(v12);
  *(_WORD *)(v4 + 32) = v11;
  v13 = v12 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_BYTE *)(v4 + 34) = BYTE2(v13);
  *(_WORD *)(v4 + 32) = v11;
  *(_BYTE *)(v4 + 34) = (v13 & 0xFFFBFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 2) & 1) << 18)) >> 16;
  *(_WORD *)(v4 + 32) = v11;
  return v4;
}

llvm::raw_ostream *sub_22F3A7864(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  char *v10;
  char *v11;
  llvm::raw_ostream *v12;
  char *v14;
  llvm::raw_ostream *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  char *v19;
  llvm::raw_ostream *v20;
  char *v22;
  llvm::raw_ostream *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  char *v27;
  llvm::raw_ostream *v28;
  char *v30;
  llvm::raw_ostream *v31;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  if (!v5)
  {
    sub_22E47DAC0(a2, " __attribute__((xnu_usage_semantics");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v16 = *(unsigned int *)(a1 + 36);
    if (!(_DWORD)v16)
    {
      v11 = "))";
      goto LABEL_27;
    }
    v17 = 4 * v16;
    v18 = *(_DWORD **)(a1 + 40);
    v19 = "(";
    v11 = "))";
    do
    {
      sub_22E47DAC0(a2, v19);
      v20 = sub_22E47DAC0(a2, "\"");
      if (*v18++)
        v22 = "data";
      else
        v22 = "pointer";
      v23 = sub_22E47DAC0(v20, v22);
      sub_22E47DAC0(v23, "\"");
      v19 = ", ";
      v17 -= 4;
    }
    while (v17);
    goto LABEL_26;
  }
  if (v5 != 1)
  {
    sub_22E47DAC0(a2, " [[clang::xnu_usage_semantics");
    v6 = (char *)&unk_22F5BAADF;
    sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
    v24 = *(unsigned int *)(a1 + 36);
    if ((_DWORD)v24)
    {
      v25 = 4 * v24;
      v26 = *(_DWORD **)(a1 + 40);
      v27 = "(";
      v11 = "]]";
      do
      {
        sub_22E47DAC0(a2, v27);
        v28 = sub_22E47DAC0(a2, "\"");
        if (*v26++)
          v30 = "data";
        else
          v30 = "pointer";
        v31 = sub_22E47DAC0(v28, v30);
        sub_22E47DAC0(v31, "\"");
        v27 = ", ";
        v25 -= 4;
      }
      while (v25);
      goto LABEL_26;
    }
LABEL_28:
    v11 = "]]";
    goto LABEL_27;
  }
  sub_22E47DAC0(a2, " [[clang::xnu_usage_semantics");
  v6 = (char *)&unk_22F5BAADF;
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v7 = *(unsigned int *)(a1 + 36);
  if (!(_DWORD)v7)
    goto LABEL_28;
  v8 = 4 * v7;
  v9 = *(_DWORD **)(a1 + 40);
  v10 = "(";
  v11 = "]]";
  do
  {
    sub_22E47DAC0(a2, v10);
    v12 = sub_22E47DAC0(a2, "\"");
    if (*v9++)
      v14 = "data";
    else
      v14 = "pointer";
    v15 = sub_22E47DAC0(v12, v14);
    sub_22E47DAC0(v15, "\"");
    v10 = ", ";
    v8 -= 4;
  }
  while (v8);
LABEL_26:
  sub_22E47DAC0(a2, (char *)&unk_22F5BAADF);
  v6 = ")";
LABEL_27:
  sub_22E47DAC0(a2, v6);
  return sub_22E47DAC0(a2, v11);
}

uint64_t sub_22F3A7AE8(uint64_t a1, int a2, _OWORD *a3)
{
  uint64_t result;
  __int128 v6;
  char v7;
  int v8;
  unsigned int v9;

  result = sub_22E3CD3D4(a1 + 2032, 40, 3);
  v6 = a3[1];
  *(_OWORD *)result = *a3;
  *(_OWORD *)(result + 16) = v6;
  v7 = *(_BYTE *)(result + 34);
  *(_WORD *)(result + 32) = 359;
  *(_BYTE *)(result + 34) = v7 & 0xE0;
  *(_DWORD *)(result + 36) = a2;
  v8 = *(unsigned __int8 *)(result + 30);
  if ((~(v8 << 16) & 0x780000) == 0 && !*(_QWORD *)result)
  {
    v9 = (*(unsigned __int16 *)(result + 28) | (v8 << 16)) & 0xFF87FFFF;
    *(_WORD *)(result + 28) = v9;
    *(_BYTE *)(result + 30) = BYTE2(v9);
  }
  return result;
}

__n128 sub_22F3A7B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  __n128 result;
  __int128 v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v3 = sub_22E3CD3D4(a2 + 2032, 40, 3);
  v4 = *(_DWORD *)(a1 + 36);
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v6;
  *(_WORD *)(v3 + 32) = 359;
  *(_DWORD *)(v3 + 36) = v4;
  v7 = (*(unsigned __int8 *)(v3 + 34) << 16) & 0xFFE00000;
  *(_BYTE *)(v3 + 34) = BYTE2(v7);
  v8 = v7 & 0xFFFEFFFF | ((*(_BYTE *)(a1 + 34) & 1) << 16);
  *(_WORD *)(v3 + 32) = 359;
  *(_BYTE *)(v3 + 34) = BYTE2(v8);
  v9 = v8 & 0xFFFDFFFF | (((*(unsigned __int8 *)(a1 + 34) >> 1) & 1) << 17);
  *(_WORD *)(v3 + 32) = 359;
  *(_BYTE *)(v3 + 34) = BYTE2(v9);
  v10 = *(unsigned __int8 *)(a1 + 34) >> 2;
  *(_WORD *)(v3 + 32) = 359;
  *(_BYTE *)(v3 + 34) = (v9 & 0xFFFBFFFF | ((v10 & 1) << 18)) >> 16;
  return result;
}

llvm::raw_ostream *sub_22F3A7C08(uint64_t a1, llvm::raw_ostream *a2)
{
  int v4;
  int v5;
  char *v6;
  char *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;

  v4 = *(unsigned __int8 *)(a1 + 30);
  if ((~(v4 << 16) & 0x780000) != 0)
    v5 = ((*(unsigned __int16 *)(a1 + 28) | (v4 << 16)) >> 19) & 0xF;
  else
    v5 = sub_22F1BFAD0(a1);
  v6 = off_24FAC11A8[v5];
  v7 = off_24FAC11C0[v5];
  sub_22E47DAC0(a2, off_24FAC1190[v5]);
  sub_22E47DAC0(a2, "(");
  v8 = sub_22E47DAC0(a2, "\"");
  v9 = sub_22E47DAC0(v8, *(char **)&v6[8 * *(int *)(a1 + 36)]);
  sub_22E47DAC0(v9, "\"");
  sub_22E47DAC0(a2, ")");
  return sub_22E47DAC0(a2, v7);
}

unint64_t sub_22F3A7CDC(uint64_t a1)
{
  _QWORD **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;

  if (*(_DWORD *)(a1 + 40))
  {
    v2 = *(_QWORD ***)(a1 + 48);
    while (1)
    {
      v3 = sub_22F10BF84(*(_QWORD *)(**v2 & 0xFFFFFFFFFFFFFFF0));
      v4 = v3 & 0xFF00000000;
      if ((v3 & 0xFF00000000) != 0)
        break;
      if (++v2 == (_QWORD **)(*(_QWORD *)(a1 + 48) + 8 * *(unsigned int *)(a1 + 40)))
      {
        v5 = 0;
        v4 = 0;
        v6 = v3 & 0xFFFFFF00;
        v7 = v3 & 0xFFFFFF0000000000;
        return v4 | v5 | v7 | v6 & 0xFFFFFF00;
      }
    }
    v6 = v3 & 0xFFFFFF00;
    v7 = v3 & 0xFFFFFF0000000000;
    v5 = v3;
  }
  else
  {
    v5 = 0;
    v4 = 0;
    v7 = 0;
    v6 = 0;
  }
  return v4 | v5 | v7 | v6 & 0xFFFFFF00;
}

uint64_t sub_22F3A7D7C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  _BOOL4 v3;
  BOOL v4;
  int v5;

  v1 = *(unsigned __int16 *)(a1 + 32);
  v2 = v1 - 437;
  v3 = (v1 - 390) < 3;
  v4 = v2 > 0x1B;
  v5 = (1 << v2) & 0xFFC6033;
  return !v4 && v5 != 0 || v3;
}

char *sub_22F3A7DB4(uint64_t a1)
{
  return off_24FAC1268[*(char *)(a1 + 12)];
}

uint64_t sub_22F3A7DC8(uint64_t a1)
{
  return ((uint64_t (*)(_QWORD))((char *)nullsub_999 + 4 * byte_22F4A0EB0[*(unsigned __int8 *)(a1 + 12) - 1]))(0);
}

uint64_t sub_22F3A7DF4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 32;
}

uint64_t sub_22F3A7DFC@<X0>(uint64_t a1@<X8>)
{
  return nullsub_999(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3A7E04@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 64);
}

uint64_t sub_22F3A7E0C(uint64_t a1)
{
  return ((uint64_t (*)(_QWORD))((char *)nullsub_1000 + 4 * byte_22F4A0EBC[*(unsigned __int8 *)(a1 + 12) - 1]))(0);
}

uint64_t sub_22F3A7E38@<X0>(uint64_t a1@<X8>)
{
  return a1 + 40;
}

uint64_t sub_22F3A7E40@<X0>(uint64_t a1@<X8>)
{
  return nullsub_1000(*(_QWORD *)(a1 + 16) + 8 * *(_QWORD *)(a1 + 24));
}

void sub_22F3A7E4C()
{
  JUMPOUT(0x22F3A7E44);
}

char *sub_22F3A7E54(int a1)
{
  return off_24FAC12D0[a1];
}

const char *sub_22F3A7E64(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;

  v2 = *(_DWORD *)(a1 + 40);
  if (v2 == -2)
    return "...";
  v6 = *(_QWORD *)(a2 + 32);
  if ((*(_WORD *)(v6 + 48) & 1) == 0)
  {
    sub_22EFA5954(v6);
    v6 = *(_QWORD *)(a2 + 32);
    v2 = *(_DWORD *)(a1 + 40);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 16) + 8 * v2) + 40);
  v8 = v7 & 7;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v8)
    v10 = 1;
  else
    v10 = v9 == 0;
  if (v10)
    return (const char *)&unk_22F5C097E;
  else
    return (const char *)(*(_QWORD *)(v9 + 16) + 16);
}

uint64_t sub_22F3A7EF0(uint64_t result, const void ***a2)
{
  const void **v2;
  const void **v3;
  char v4;
  const void *v5;
  size_t v6;
  _QWORD *v7;
  const void **v8;
  const void **v9;
  uint64_t v10;

  v2 = *a2;
  v3 = a2[1];
  while (v2 != v3)
  {
    v8 = v3;
    v9 = v2;
    v10 = result;
    v4 = *((_BYTE *)v2 + 23);
    if (v4 >= 0)
      v5 = v2;
    else
      v5 = *v2;
    if (v4 >= 0)
      v6 = v4 & 0x7F;
    else
      v6 = (size_t)v2[1];
    v7 = sub_22F3A81B0(result, v5, v6);
    result = v10;
    v7[2] |= 0x2000000uLL;
    v3 = v8;
    v2 = v9 + 3;
  }
  return result;
}

char **sub_22F3A7F5C(uint64_t a1, char *a2, size_t a3)
{
  char **result;

  result = sub_22EFA658C(a2, a3);
  if (!result)
    return (char **)sub_22F3A7FB4(a1, a2, a3);
  return result;
}

const void **sub_22F3A7FB4(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v3;
  const char ***i;
  const void **v7;
  const char *v8;
  size_t v9;

  v3 = *(unsigned int *)(a1 + 24);
  if (!(_DWORD)v3)
    return 0;
  for (i = *(const char ****)(a1 + 16); ; ++i)
  {
    v7 = (const void **)*i;
    v8 = **i;
    v9 = v8 ? strlen(**i) : 0;
    if (v9 == a3 && (!a3 || !memcmp(v8, a2, a3)))
      break;
    if (!--v3)
      return 0;
  }
  return v7;
}

char **sub_22F3A8044(uint64_t a1, unsigned int a2)
{
  if (a2 < 0xC6)
    return &(&off_24FAC12E8)[3 * a2];
  else
    return *(char ***)(*(_QWORD *)(a1 + 16) + 8 * a2 - 1584);
}

char **sub_22F3A8078(unsigned int a1)
{
  if (a1 >= 0xC6)
    return 0;
  else
    return &(&off_24FAC12E8)[3 * a1];
}

uint64_t sub_22F3A8094(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  const char **v6;
  uint64_t v7;
  uint64_t v8;
  const char ***v9;
  uint64_t v10;
  uint64_t v11[3];
  int v12;
  _QWORD v13[2];
  void *v14;
  uint64_t v15;
  _QWORD v16[3];

  v16[2] = *MEMORY[0x24BDAC8D0];
  v13[0] = a2;
  v13[1] = a3;
  if (a3 < 2)
    return 0;
  v12 = 1;
  v14 = v16;
  v15 = 0x200000000;
  v11[0] = (uint64_t)v13;
  v11[1] = (uint64_t)&v12;
  v11[2] = (uint64_t)&v14;
  v6 = (const char **)&off_24FAC12E8;
  v7 = 4752;
  do
  {
    sub_22EFA8C84(v11, v6);
    v6 += 3;
    v7 -= 24;
  }
  while (v7);
  v8 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v8)
  {
    v9 = *(const char ****)(a1 + 16);
    v10 = 8 * v8;
    do
    {
      if ((*((_BYTE *)*v9 + 21) & 2) == 0)
        sub_22EFA8C84(v11, *v9);
      ++v9;
      v10 -= 8;
    }
    while (v10);
  }
  if ((_DWORD)v15 == 1)
    v3 = *(_QWORD *)v14;
  else
    v3 = 0;
  if (v14 != v16)
    free(v14);
  return v3;
}

_QWORD *sub_22F3A81B0(uint64_t a1, const void *a2, size_t a3)
{
  void *v6;
  _QWORD *v7;
  int v8;
  unsigned int v9;

  v6 = (void *)sub_22E3CD3D4(*(_QWORD *)(a1 + 8), a3 + 1, 0);
  memcpy(v6, a2, a3);
  *((_BYTE *)v6 + a3) = 0;
  v7 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(a1 + 8), 24, 3);
  v7[1] = 0;
  v7[2] = 0;
  *v7 = v6;
  v8 = (*(_DWORD *)a1)++;
  v7[2] = v7[2] & 0xFFFFFFFFFFF00000 | *(_QWORD *)&v8 & 0xFFFFFLL;
  v9 = *(_DWORD *)(a1 + 24);
  if (v9 >= *(_DWORD *)(a1 + 28))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v9 = *(_DWORD *)(a1 + 24);
  }
  *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v9) = v7;
  ++*(_DWORD *)(a1 + 24);
  return v7;
}

_QWORD *sub_22F3A8274(uint64_t a1, const void *a2, size_t a3)
{
  _QWORD *result;

  result = sub_22F3A81B0(a1, a2, a3);
  result[2] |= 0x20000000000uLL;
  return result;
}

uint64_t sub_22F3A8294(uint64_t *a1, char *a2, unsigned int a3)
{
  llvm *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char **v7;
  uint64_t v9;

  v3 = 0;
  v4 = a3;
  if (a3)
  {
    do
    {
      v5 = *a2++;
      v3 = (llvm *)(v5 + 10 * (_DWORD)v3 - 48);
      --v4;
    }
    while (v4);
  }
  v6 = sub_22E3CD3D4(*a1, 4, 0);
  v9 = v6;
  if (llvm::ConvertCodePointToUTF8(v3, (uint64_t)&v9, v7))
    return v6;
  else
    return 0;
}

uint64_t sub_22F3A8310(uint64_t *a1, unsigned __int8 *a2, unsigned int a3)
{
  llvm *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char **v7;
  uint64_t v9;

  v3 = 0;
  v4 = a3;
  if (a3)
  {
    do
    {
      v5 = *a2++;
      v3 = (llvm *)(word_22F4A1464[v5] + 16 * (_DWORD)v3);
      --v4;
    }
    while (v4);
  }
  v6 = sub_22E3CD3D4(*a1, 4, 0);
  v9 = v6;
  if (llvm::ConvertCodePointToUTF8(v3, (uint64_t)&v9, v7))
    return v6;
  else
    return 0;
}

uint64_t sub_22F3A8390(uint64_t a1)
{
  uint64_t v2;
  uint64_t first_of;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 40);
  first_of = llvm::StringRef::find_first_of();
  if (first_of == -1)
    return *(_QWORD *)(a1 + 48);
  while (*(_BYTE *)(v2 + first_of) == 34)
  {
    v4 = first_of + v2;
    v2 += first_of + 1;
    v5 = llvm::StringRef::find_first_of();
    if (v5 != -1)
    {
      if (*(_BYTE *)(v2 + v5) == 34)
        v2 += v5 + 1;
      else
        v2 = v4 + 1;
    }
    first_of = llvm::StringRef::find_first_of();
    if (first_of == -1)
      return *(_QWORD *)(a1 + 48);
  }
  return v2 + first_of;
}

double sub_22F3A84B0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  double result;

  v2 = *(unsigned __int8 **)(a1 + 40);
  v3 = *(unsigned __int8 **)(a1 + 48);
  if (*(_BYTE *)(a1 + 61) == 2)
  {
    if (v2 == v3)
      goto LABEL_9;
    v4 = *(unsigned __int8 **)(a1 + 40);
    while (1)
    {
      v5 = *v4;
      if ((word_22F4ADB24[v5] & 5) == 0)
        break;
      if (++v4 == v3)
        goto LABEL_6;
    }
    if ((_DWORD)v5 == 42)
    {
      v2 = v4 + 1;
      *(_QWORD *)(a1 + 40) = v4 + 1;
    }
  }
LABEL_6:
  if (v2 != v3)
  {
    sub_22EFA8D58(a1, a2);
    return result;
  }
  LODWORD(v2) = (_DWORD)v3;
LABEL_9:
  *(_DWORD *)a2 = *(_DWORD *)(a1 + 56) + (_DWORD)v2 - *(_DWORD *)(a1 + 24);
  *(_DWORD *)(a2 + 12) = 0;
  *(_QWORD *)(a2 + 16) = "";
  *(_QWORD *)&result = 7;
  *(_QWORD *)(a2 + 4) = 7;
  return result;
}

uint64_t sub_22F3A854C(uint64_t result, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;

  v2 = *(unsigned __int8 **)(result + 40);
  v3 = *(unsigned __int8 **)(result + 48);
  v4 = v2;
  if (v2 != v3)
  {
    v4 = *(unsigned __int8 **)(result + 40);
    while ((word_22F4ADB24[*v4] & 2) == 0)
    {
      if (++v4 == v3)
      {
        v4 = *(unsigned __int8 **)(result + 48);
        break;
      }
    }
  }
  *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
  *(_DWORD *)(a2 + 4) = 10;
  *(_QWORD *)(result + 40) = v4;
  *(_QWORD *)(a2 + 16) = v2;
  *(_DWORD *)(a2 + 8) = (_DWORD)v4 - (_DWORD)v2;
  *(_DWORD *)(a2 + 12) = (_DWORD)v4 - (_DWORD)v2;
  *(_BYTE *)(result + 62) = 0;
  return result;
}

uint64_t sub_22F3A85B4(uint64_t result, uint64_t a2)
{
  unsigned __int8 *v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  unsigned __int8 *v14;
  int v15;

  v2 = *(unsigned __int8 **)(result + 40);
  v3 = *v2;
  if ((word_22F4ADB24[v3] & 0x68) != 0)
  {
    v4 = *(unsigned __int8 **)(result + 48);
    v5 = *(unsigned __int8 **)(result + 40);
    if (v2 != v4)
    {
      v5 = *(unsigned __int8 **)(result + 40);
      while ((word_22F4ADB24[*v5] & 0x68) != 0)
      {
        if (++v5 == v4)
        {
          v5 = *(unsigned __int8 **)(result + 48);
          break;
        }
      }
    }
    *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
    *(_DWORD *)(a2 + 4) = 12;
    *(_QWORD *)(result + 40) = v5;
    *(_QWORD *)(a2 + 16) = v2;
    *(_DWORD *)(a2 + 8) = (_DWORD)v5 - (_DWORD)v2;
    *(_DWORD *)(a2 + 12) = (_DWORD)v5 - (_DWORD)v2;
    v2 = v5;
    goto LABEL_8;
  }
  if ((char)v3 > 46)
  {
    if ((char)v3 == 47)
    {
      v13 = v2 + 1;
      if (v2 + 1 == *(unsigned __int8 **)(result + 48) || *v13 != 62)
      {
        *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
        *(_DWORD *)(a2 + 12) = 1;
        *(_QWORD *)(result + 40) = v13;
        *(_QWORD *)(a2 + 16) = v2;
        *(_QWORD *)(a2 + 4) = 0x100000002;
        goto LABEL_13;
      }
      v14 = v2 + 2;
      *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
      *(_DWORD *)(a2 + 4) = 16;
      v15 = 2;
    }
    else
    {
      if ((char)v3 != 62)
      {
        if ((char)v3 == 61)
        {
          v7 = (_DWORD)v2++ - *(_DWORD *)(result + 24);
          *(_DWORD *)a2 = *(_DWORD *)(result + 56) + v7;
          *(_DWORD *)(a2 + 4) = 13;
          *(_DWORD *)(a2 + 12) = 1;
          *(_QWORD *)(result + 40) = v2;
        }
        goto LABEL_8;
      }
      v14 = v2 + 1;
      *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
      *(_DWORD *)(a2 + 4) = 15;
      v15 = 1;
    }
    *(_DWORD *)(a2 + 12) = v15;
    *(_QWORD *)(result + 40) = v14;
LABEL_13:
    *(_BYTE *)(result + 62) = 0;
    return result;
  }
  if ((char)v3 == 34 || (char)v3 == 39)
  {
    v9 = *(unsigned __int8 **)(result + 48);
    v10 = v2 + 1;
    v11 = v2 + 1;
    if (v2 + 1 != v9)
    {
      v11 = v2 + 1;
      while (*v11 != *v2 || *(v11 - 1) == 92)
      {
        if (++v11 == v9)
        {
          v11 = *(unsigned __int8 **)(result + 48);
          break;
        }
      }
    }
    if (v11 == v9)
      v12 = v11;
    else
      v12 = v11 + 1;
    *(_DWORD *)a2 = *(_DWORD *)(result + 56) + (_DWORD)v2 - *(_DWORD *)(result + 24);
    *(_DWORD *)(a2 + 4) = 14;
    *(_QWORD *)(result + 40) = v12;
    *(_QWORD *)(a2 + 16) = v10;
    *(_DWORD *)(a2 + 8) = (_DWORD)v11 - (_DWORD)v10;
    *(_DWORD *)(a2 + 12) = (_DWORD)v12 - (_DWORD)v2;
    v2 = v12;
  }
LABEL_8:
  v6 = *(unsigned __int8 **)(result + 48);
  while (1)
  {
    if (v2 == v6)
    {
      *(_QWORD *)(result + 40) = v6;
      goto LABEL_13;
    }
    if ((word_22F4ADB24[*v2] & 7) == 0)
      break;
    ++v2;
  }
  *(_QWORD *)(result + 40) = v2;
  if (v2 == v6)
    goto LABEL_13;
  v8 = *v2;
  if ((word_22F4ADB24[v8] & 0x60) == 0 && (v8 > 0x3E || ((1 << v8) & 0x6000808400000000) == 0))
    goto LABEL_13;
  return result;
}

uint64_t sub_22F3A8824(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, int a4, uint64_t a5)
{
  uint64_t v9;
  char *v10;
  char *v11;
  _BYTE *v12;
  size_t v13;
  uint64_t result;
  int v15;
  unsigned __int8 *v16;
  uint64_t v17;
  char v18;
  unsigned __int8 *v19;

  v9 = a1 + 64;
  *(_QWORD *)(a1 + 72) = 0;
  if (a4 == 92)
    v10 = "\\";
  else
    v10 = "@";
  if (a4 == 92)
    v11 = "";
  else
    v11 = "";
  sub_22E61131C(a1 + 64, v10, v11);
  v12 = *(_BYTE **)(a5 + 8);
  if (v12)
    v13 = strlen(*(const char **)(a5 + 8));
  else
    v13 = 0;
  result = sub_22E61131C(v9, v12, &v12[v13]);
  v15 = *(_DWORD *)(a1 + 40);
  *a2 = *(_DWORD *)(a1 + 56) + v15 - *(_DWORD *)(a1 + 24);
  a2[1] = 6;
  a2[3] = (_DWORD)a3 - v15;
  *(_QWORD *)(a1 + 40) = a3;
  a2[2] = *(_DWORD *)(a5 + 16) & 0xFFFFF;
  v16 = *(unsigned __int8 **)(a1 + 48);
  if (v16 != a3 && (v17 = *a3, (word_22F4ADB24[v17] & 2) != 0))
  {
    v19 = a3 + 1;
    if ((_DWORD)v17 != 10)
    {
      if (v19 == v16)
      {
        v19 = *(unsigned __int8 **)(a1 + 48);
      }
      else if (a3[1] == 10)
      {
        v19 = a3 + 2;
      }
    }
    *(_QWORD *)(a1 + 40) = v19;
    v18 = 2;
  }
  else
  {
    v18 = 1;
  }
  *(_BYTE *)(a1 + 62) = v18;
  return result;
}

BOOL sub_22F3A894C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned __int8 *v6;
  _BOOL8 result;
  int v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a1 + 40);
  v4 = *(unsigned __int8 **)(a1 + 48);
  v6 = (unsigned __int8 *)(v5 + 2);
  if ((unsigned __int8 *)(v5 + 2) != v4)
  {
    while ((word_22F4ADB24[*v6] & 0x68) != 0)
    {
      if (++v6 == v4)
      {
        v6 = *(unsigned __int8 **)(a1 + 48);
        break;
      }
    }
  }
  result = sub_22EFA8F04((char *)(v5 + 1), (uint64_t)&v6[-v5 - 1]);
  v8 = (_DWORD)v6 - v5;
  *(_DWORD *)a2 = *(_DWORD *)(a1 + 56) + v5 - *(_DWORD *)(a1 + 24);
  if (result)
  {
    *(_DWORD *)(a2 + 12) = v8;
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a2 + 16) = v5 + 1;
    *(_DWORD *)(a2 + 4) = 11;
    *(_DWORD *)(a2 + 8) = (_DWORD)v6 - (v5 + 1);
    if (v6 == v4)
    {
LABEL_9:
      *(_QWORD *)(a1 + 40) = v4;
    }
    else
    {
      while ((word_22F4ADB24[*v6] & 7) != 0)
      {
        if (++v6 == v4)
          goto LABEL_9;
      }
      *(_QWORD *)(a1 + 40) = v6;
      if (v6 != v4)
      {
        v9 = *v6;
        if ((_DWORD)v9 == 47 || (_DWORD)v9 == 62 || (word_22F4ADB24[v9] & 0x60) != 0)
          *(_BYTE *)(a1 + 62) = 4;
      }
    }
  }
  else
  {
    *(_DWORD *)(a2 + 12) = v8;
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 4) = 2;
    *(_DWORD *)(a2 + 8) = v8;
  }
  return result;
}

BOOL sub_22F3A8A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char *v7;
  char *v8;
  int v9;
  _BOOL8 result;

  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned __int8 **)(a1 + 48);
  v6 = (unsigned __int8 *)(v4 + 2);
  if ((unsigned __int8 *)(v4 + 2) != v5)
  {
    while ((word_22F4ADB24[*v6] & 7) != 0)
    {
      if (++v6 == v5)
      {
        v7 = *(char **)(a1 + 48);
LABEL_5:
        v8 = *(char **)(a1 + 48);
        goto LABEL_6;
      }
    }
  }
  v7 = *(char **)(a1 + 48);
  v8 = v7;
  if (v6 != v5)
  {
    v8 = (char *)v6;
    while ((word_22F4ADB24[*v8] & 0x68) != 0)
    {
      if (++v8 == (char *)v5)
      {
        v7 = (char *)v6;
        goto LABEL_5;
      }
    }
    v7 = (char *)v6;
  }
LABEL_6:
  v9 = (_DWORD)v8 - (_DWORD)v7;
  result = sub_22EFA8F04(v7, v8 - v7);
  if (result)
  {
    while (v8 != (char *)v5)
    {
      if ((word_22F4ADB24[*v8] & 7) == 0)
        goto LABEL_18;
      ++v8;
    }
    v8 = (char *)v5;
LABEL_18:
    *(_DWORD *)a2 = *(_DWORD *)(a1 + 56) + v4 - *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a2 + 4) = 17;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a2 + 16) = v7;
    *(_DWORD *)(a2 + 8) = v9;
    *(_DWORD *)(a2 + 12) = (_DWORD)v8 - v4;
    if (v8 != (char *)v5 && *v8 == 62)
      *(_BYTE *)(a1 + 62) = 5;
  }
  else
  {
    *(_DWORD *)a2 = *(_DWORD *)(a1 + 56) + v4 - *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a2 + 4) = 2;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a2 + 16) = v4;
    *(_DWORD *)(a2 + 8) = (_DWORD)v8 - v4;
    *(_DWORD *)(a2 + 12) = (_DWORD)v8 - v4;
  }
  return result;
}

uint64_t sub_22F3A8BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = a5;
  *(_DWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = a6;
  *(_QWORD *)(a1 + 40) = a7;
  *(_QWORD *)(a1 + 72) = a1 + 88;
  *(_QWORD *)(a1 + 80) = 0x800000000;
  sub_22EFA92B0(a2, (int *)(a1 + 48));
  return a1;
}

_QWORD *sub_22F3A8C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  _QWORD *result;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;

  v9 = 0;
  if (sub_22EFAC3C8(a3, (uint64_t)&v9))
  {
    if (v11 >= 2)
      v6 = v11 - 1;
    else
      v6 = 0;
    sub_22EFAF880(*(_QWORD *)(a1 + 8), a2, v9, v6 + v9, v12, v10);
  }
  result = (_QWORD *)sub_22EFAC5FC(a3, (uint64_t)&v9);
  if ((_DWORD)result)
  {
    if (v11 >= 2)
      v8 = v11 - 1;
    else
      v8 = 0;
    return sub_22F3A9B20(*(uint64_t **)(a1 + 8), a2, v9, v8 + v9, v12, v10);
  }
  return result;
}

void sub_22F3A8CF0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unsigned int v5;
  unsigned int v6[3];
  unsigned int v7;
  void *v8;

  v6[0] = 0;
  if (sub_22EFAC5FC(a3, (uint64_t)v6))
  {
    if (v7 >= 2)
      v5 = v7 - 1;
    else
      v5 = 0;
    sub_22EFAFEB0(*(uint64_t **)(a1 + 8), a2, v6[0], v5 + v6[0], v8, v6[2]);
  }
}

void sub_22F3A8D60(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  _DWORD v16[3];
  unsigned int v17;
  uint64_t v18;

  v8 = 24 * a4;
  v9 = (void *)sub_22E3CD3D4(*(_QWORD *)(a1 + 16), v8, 3);
  v10 = (uint64_t)v9;
  if (a4)
  {
    bzero(v9, 24 * ((v8 - 24) / 0x18uLL) + 24);
    v11 = 0;
    v16[0] = 0;
    v12 = (_QWORD *)(v10 + 16);
    while (sub_22EFAC5FC(a3, (uint64_t)v16))
    {
      v13 = v16[2];
      if (v17 >= 2)
        v14 = v17 - 1;
      else
        v14 = 0;
      v15 = v18;
      *(v12 - 2) = v16[0] | ((unint64_t)(v14 + v16[0]) << 32);
      *(v12 - 1) = v15;
      *v12 = v13;
      v12 += 3;
      if (a4 == ++v11)
      {
        LODWORD(v11) = a4;
        break;
      }
    }
  }
  else
  {
    LODWORD(v11) = 0;
  }
  sub_22F3A9888(*(_QWORD *)(a1 + 8), a2, v10, v11);
}

_QWORD *sub_22F3A8E64(uint64_t a1)
{
  uint64_t v2;
  char **v3;
  _BOOL4 v4;
  char *v5;
  uint64_t *v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  __int128 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  uint64_t v23;
  char **v24;
  uint64_t v25;
  char **v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char **v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD v45[53];

  v45[52] = *MEMORY[0x24BDAC8D0];
  v2 = *(unsigned int *)(a1 + 56);
  if (v2 < 0xC6)
    v3 = &(&off_24FAC12E8)[3 * v2];
  else
    v3 = *(char ***)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v2 - 1584);
  v4 = *(_DWORD *)(a1 + 52) != 4;
  v5 = v3[2];
  if ((v5 & 0x10000000) != 0)
  {
    v13 = *(uint64_t **)(a1 + 8);
    v14 = *(_DWORD *)(a1 + 60);
    if (v14 >= 2)
      v15 = v14 - 1;
    else
      v15 = 0;
    v16 = sub_22EFAF0A4(v13, *(_DWORD *)(a1 + 48), v15 + *(_DWORD *)(a1 + 48), v2, v4);
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v6 = *(uint64_t **)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 48);
    v8 = *(_DWORD *)(a1 + 60);
    if (v8 >= 2)
      v9 = v8 - 1;
    else
      v9 = 0;
    v10 = v9 + v7;
    if ((v5 & 0x20000000) != 0)
    {
      v12 = sub_22EFAFD0C(v6, v7, v10, v2, v4);
      v11 = 0;
    }
    else
    {
      v11 = (_QWORD *)sub_22F3A97F4(v6, v7, v10, v2, v4);
      v12 = 0;
    }
    v16 = 0;
  }
  v17 = (__int128 *)(a1 + 48);
  v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    v19 = *(_QWORD *)(a1 + 72) + 24 * v18;
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(_OWORD *)(v19 - 24);
    *(_DWORD *)(a1 + 80) = v18 - 1;
    *v17 = v21;
    *(_QWORD *)(a1 + 64) = v20;
  }
  else
  {
    sub_22EFA92B0(*(_QWORD *)a1, (int *)(a1 + 48));
  }
  v22 = *(_DWORD *)(a1 + 52);
  if ((v22 & 0xFFFFFFFE) == 4)
  {
    v23 = *(unsigned int *)(a1 + 56);
    v24 = v23 < 0xC6
        ? &(&off_24FAC12E8)[3 * v23]
        : *(char ***)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v23 - 1584);
    if ((*((_BYTE *)v24 + 19) & 2) != 0)
    {
      v34 = sub_22F3A97BC(*(uint64_t **)(a1 + 8), 0, 0);
      if (v16)
      {
        v35 = *(_QWORD **)(a1 + 8);
        goto LABEL_39;
      }
      v35 = *(_QWORD **)(a1 + 8);
      if (v12)
      {
LABEL_42:
        sub_22F3A9BA4((uint64_t)v35, v12, v34);
        return (_QWORD *)v12;
      }
LABEL_60:
      sub_22F3A98B0(v35, (uint64_t)v11, v34);
      return v11;
    }
  }
  if (v16 | v12 || (*((_BYTE *)v3 + 18) & 0xF0) != 0)
  {
    *(_QWORD *)&v41 = *(_QWORD *)(a1 + 16);
    *((_QWORD *)&v41 + 1) = a1;
    LOBYTE(v42) = 0;
    v43 = v45;
    v44 = 0x1000000000;
    v45[51] = 0;
    sub_22EFADEC8((uint64_t)&v41);
    if (v16)
    {
      sub_22F3A8C38(a1, v16, (uint64_t)&v41);
    }
    else if (v12)
    {
      sub_22F3A8CF0(a1, (_QWORD *)v12, (uint64_t)&v41);
    }
    else
    {
      sub_22F3A8D60(a1, v11, (uint64_t)&v41, (*((_DWORD *)v3 + 4) >> 20) & 0xF);
    }
    sub_22F3A9268((uint64_t)&v41);
    if (v43 != v45)
      free(v43);
    v22 = *(_DWORD *)(a1 + 52);
  }
  if ((v22 & 0xFFFFFFFE) == 4)
  {
    v25 = *(unsigned int *)(a1 + 56);
    if (v25 < 0xC6)
      v26 = &(&off_24FAC12E8)[3 * v25];
    else
      v26 = *(char ***)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v25 - 1584);
    if ((*((_BYTE *)v26 + 19) & 2) == 0)
    {
LABEL_37:
      v33 = sub_22EFAC804(a1);
      goto LABEL_38;
    }
  }
  else
  {
    if (v22 != 1)
      goto LABEL_37;
    v41 = *v17;
    v42 = *(_QWORD *)(a1 + 64);
    v27 = *(_DWORD *)(a1 + 80);
    if (v27)
    {
      v28 = *(_QWORD *)(a1 + 72) + 24 * v27;
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(_OWORD *)(v28 - 24);
      *(_DWORD *)(a1 + 80) = v27 - 1;
      *v17 = v30;
      *(_QWORD *)(a1 + 64) = v29;
    }
    else
    {
      sub_22EFA92B0(*(_QWORD *)a1, (int *)(a1 + 48));
    }
    if ((*(_DWORD *)(a1 + 52) & 0xFFFFFFFE) == 4)
    {
      v31 = *(unsigned int *)(a1 + 56);
      v32 = v31 < 0xC6
          ? &(&off_24FAC12E8)[3 * v31]
          : *(char ***)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v31 - 1584);
      v37 = (*((unsigned __int8 *)v32 + 19) >> 1) & 1;
    }
    else
    {
      v37 = 0;
    }
    v38 = sub_22E5BBF6C(a1 + 72, a1 + 48);
    v39 = *(_QWORD *)(a1 + 72) + 24 * *(unsigned int *)(a1 + 80);
    v40 = *(_OWORD *)v38;
    *(_QWORD *)(v39 + 16) = *(_QWORD *)(v38 + 16);
    *(_OWORD *)v39 = v40;
    ++*(_DWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 64) = v42;
    *v17 = v41;
    if (!v37)
      goto LABEL_37;
  }
  v33 = sub_22F3A97BC(*(uint64_t **)(a1 + 8), 0, 0);
LABEL_38:
  v34 = v33;
  v35 = *(_QWORD **)(a1 + 8);
  if (!v16)
  {
    if (v12)
      goto LABEL_42;
    goto LABEL_60;
  }
LABEL_39:
  sub_22F3A9BA4((uint64_t)v35, v16, v34);
  return (_QWORD *)v16;
}

__n128 sub_22F3A9268(uint64_t a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  __n128 result;
  uint64_t v9;
  __n128 *v10;
  __n128 *v11;

  v2 = *(_DWORD *)(a1 + 452);
  v3 = *(unsigned int *)(a1 + 32);
  if (v3 > v2)
  {
    v5 = *(_QWORD *)(a1 + 440);
    v6 = *(_QWORD *)(a1 + 424);
    if (v5 == v6)
    {
      v7 = 0;
    }
    else
    {
      v7 = *(_DWORD *)(a1 + 448) + v5 - v6;
      v1 = *(_DWORD *)(a1 + 432) - v5;
      *(_DWORD *)(a1 + 452) = ++v2;
    }
    result.n128_u64[0] = sub_22F3A95FC((__n128 *)*(_QWORD *)(a1 + 8), (__n128 *)(*(_QWORD *)(a1 + 24) + 24 * v2), v3 - (unint64_t)v2).n128_u64[0];
    *(_DWORD *)(a1 + 452) = *(_DWORD *)(a1 + 32);
    if (v5 != v6)
    {
      v9 = *(_QWORD *)(a1 + 8);
      v10 = (__n128 *)sub_22E5BBF6C(v9 + 72, v9 + 48);
      v11 = (__n128 *)(*(_QWORD *)(v9 + 72) + 24 * *(unsigned int *)(v9 + 80));
      result = *v10;
      v11[1].n128_u64[0] = v10[1].n128_u64[0];
      *v11 = result;
      ++*(_DWORD *)(v9 + 80);
      *(_DWORD *)(v9 + 48) = v7;
      *(_DWORD *)(v9 + 52) = 2;
      *(_DWORD *)(v9 + 56) = v1;
      *(_DWORD *)(v9 + 60) = v1;
      *(_QWORD *)(v9 + 64) = v5;
    }
  }
  return result;
}

uint64_t sub_22F3A9350(uint64_t a1)
{
  int v2;
  uint64_t v3;
  size_t v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v3 = a1 + 48;
  v2 = *(_DWORD *)(a1 + 48);
  v4 = *(unsigned int *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v6 = *(_DWORD *)(a1 + 80);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 72) + 24 * v6;
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(_OWORD *)(v7 - 24);
    *(_DWORD *)(a1 + 80) = v6 - 1;
    *(_OWORD *)v3 = v9;
    *(_QWORD *)(a1 + 64) = v8;
  }
  else
  {
    sub_22EFA92B0(*(_QWORD *)a1, (int *)v3);
  }
  if (*(_DWORD *)(a1 + 52) == 15)
  {
    v10 = *(_DWORD *)(a1 + 48);
    v11 = *(_DWORD *)(a1 + 80);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + 72) + 24 * v11;
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(_OWORD *)(v12 - 24);
      *(_DWORD *)(a1 + 80) = v11 - 1;
      *(_OWORD *)v3 = v14;
      *(_QWORD *)(v3 + 16) = v13;
    }
    else
    {
      sub_22EFA92B0(*(_QWORD *)a1, (int *)v3);
    }
  }
  else
  {
    v10 = 0;
  }
  return sub_22EFB0558(*(_QWORD *)(a1 + 8), v2, v10, v5, v4);
}

uint64_t sub_22F3A9438(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  const char *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = a1 + 48;
  v3 = *(_DWORD *)(a1 + 48);
  v4 = *(_DWORD *)(a1 + 56);
  v5 = *(_DWORD *)(a1 + 60);
  v6 = *(_DWORD *)(a1 + 80);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 72) + 24 * v6;
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(_OWORD *)(v7 - 24);
    *(_DWORD *)(a1 + 80) = v6 - 1;
    *(_OWORD *)v2 = v9;
    *(_QWORD *)(a1 + 64) = v8;
  }
  else
  {
    sub_22EFA92B0(*(_QWORD *)a1, (int *)v2);
  }
  if (*(_DWORD *)(a1 + 52) == 10)
  {
    v10 = *(_DWORD *)(a1 + 48);
    v11 = *(const char **)(a1 + 64);
    v12 = *(unsigned int *)(a1 + 56);
  }
  else
  {
    v12 = 0;
    v13 = v5 - 1;
    if (v5 < 2)
      v13 = 0;
    v10 = v13 + v3;
    v11 = "";
  }
  v14 = sub_22F3AA040(*(uint64_t **)(a1 + 8), v3, v4, v10, (uint64_t)v11, v12);
  v15 = *(_DWORD *)(a1 + 80);
  if (v15)
  {
    v16 = *(_QWORD *)(a1 + 72) + 24 * v15;
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(_OWORD *)(v16 - 24);
    *(_DWORD *)(a1 + 80) = v15 - 1;
    *(_OWORD *)v2 = v18;
    *(_QWORD *)(v2 + 16) = v17;
  }
  else
  {
    sub_22EFA92B0(*(_QWORD *)a1, (int *)v2);
  }
  return v14;
}

uint64_t sub_22F3A9544(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 52);
  if (((1 << v1) & 0x2083C) != 0)
    return sub_22EFAC804(a1);
  if (v1 == 6)
    return sub_22EFAD91C(a1);
  return sub_22F3A9438(a1);
}

uint64_t sub_22F3A9574(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(result + 432);
  v2 = *(_QWORD *)(result + 440) + 1;
  *(_QWORD *)(result + 440) = v2;
  if (v2 == v1)
  {
    v3 = result;
    v4 = *(_DWORD *)(result + 452) + 1;
    *(_DWORD *)(result + 452) = v4;
    if (*(_DWORD *)(result + 32) <= v4)
    {
      result = sub_22EFADEC8(result);
      if (!(_DWORD)result)
        return result;
      v4 = *(_DWORD *)(v3 + 452);
    }
    v5 = *(_QWORD *)(v3 + 24) + 24 * v4;
    v6 = *(_QWORD *)(v5 + 16);
    v7 = v6 + *(unsigned int *)(v5 + 8);
    *(_QWORD *)(v3 + 424) = v6;
    *(_QWORD *)(v3 + 432) = v7;
    *(_QWORD *)(v3 + 440) = v6;
    *(_DWORD *)(v3 + 448) = *(_DWORD *)v5;
  }
  return result;
}

__n128 sub_22F3A95FC(__n128 *a1, __n128 *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __n128 result;

  if (a3)
  {
    v6 = (uint64_t)&a1[4].n128_i64[1];
    v7 = sub_22E5BBF6C((uint64_t)&a1[4].n128_i64[1], (unint64_t)a1[3].n128_u64);
    v8 = a1[4].n128_u64[1] + 24 * a1[5].n128_u32[0];
    v9 = *(_OWORD *)v7;
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v7 + 16);
    *(_OWORD *)v8 = v9;
    ++a1[5].n128_u32[0];
    sub_22F3A9694(v6, (uint64_t)a2 + 24 * a3, (uint64_t)a2 + 24 * a3, (uint64_t)a2, (uint64_t)&a2[1].n128_i64[1]);
    result = *a2;
    a1[4].n128_u64[0] = a2[1].n128_u64[0];
    a1[3] = result;
  }
  return result;
}

uint64_t sub_22F3A9694(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = a3;
  v7 = result;
  v8 = 0xAAAAAAAAAAAAAAABLL * ((a3 - a5) >> 3);
  v9 = *(unsigned int *)(result + 8);
  if (v8 + v9 > *(unsigned int *)(result + 12))
  {
    result = llvm::SmallVectorBase<unsigned int>::grow_pod();
    LODWORD(v9) = *(_DWORD *)(v7 + 8);
  }
  if (v6 != a5)
  {
    v10 = *(_QWORD *)v7 + 24 * v9;
    do
    {
      v11 = *(_OWORD *)(v6 - 24);
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(v6 - 8);
      *(_OWORD *)v10 = v11;
      v10 += 24;
      v6 -= 24;
    }
    while (v6 != a5);
    LODWORD(v9) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(v7 + 8) = v9 + v8;
  return result;
}

double sub_22F3A9738(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double result;

  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  a1[8] = 0x1000000000;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a1 + 14;
  *(_QWORD *)&result = 0x800000000;
  a1[13] = 0x800000000;
  return result;
}

uint64_t sub_22F3A976C(uint64_t result, uint64_t a2)
{
  uint64_t v3;

  if (a2)
  {
    v3 = result;
    result = sub_22E3CD3D4(*(_QWORD *)result, 56, 3);
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(v3 + 40) = result;
    *(_QWORD *)result = a2;
    *(_WORD *)(result + 48) &= ~1u;
  }
  return result;
}

uint64_t sub_22F3A97BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_22E3CD3D4(*a1, 32, 3);
  return sub_22F3AA3C4(v5, a2, a3);
}

uint64_t sub_22F3A97F4(uint64_t *a1, int a2, int a3, int a4, char a5)
{
  uint64_t v10;

  v10 = sub_22E3CD3D4(*a1, 40, 3);
  *(_DWORD *)(v10 + 4) = a2;
  *(_DWORD *)(v10 + 8) = a3;
  *(_BYTE *)(v10 + 12) = 1;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_DWORD *)v10 = a2 + 1;
  *(_DWORD *)(v10 + 12) = ((a4 & 0xFFFFF) << 8) & 0xEFFFFFFF | ((a5 & 1) << 28) | *(_DWORD *)(v10 + 12) & 0xE00000FF;
  sub_22EFAE084((unint64_t)a1, v10);
  return v10;
}

void sub_22F3A9888(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  a2[2] = a3;
  a2[3] = a4;
  if (a4)
  {
    v4 = *(unsigned int *)(a3 + 24 * a4 - 20);
    if ((_DWORD)v4)
      *(_QWORD *)((char *)a2 + 4) = *((unsigned int *)a2 + 1) | (unint64_t)(v4 << 32);
  }
}

void sub_22F3A98B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  *(_QWORD *)(a2 + 32) = a3;
  v5 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v5)
    *(_QWORD *)(a2 + 4) = *(unsigned int *)(a2 + 4) | (unint64_t)(v5 << 32);
  sub_22EFAE2B0((uint64_t)a1, a2);
  sub_22EFAE4AC(a1, a2);
  if (a1[5])
  {
    sub_22EFAE868((unint64_t)a1, a2);
    sub_22EFAEBC8(a1, a2);
  }
}

unint64_t sub_22F3A9928(uint64_t a1)
{
  unint64_t result;
  __int16 v3;
  uint64_t v4;

  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    v3 = *(_WORD *)(result + 48);
    if ((v3 & 1) == 0)
    {
      sub_22EFA5954(result);
      result = *(_QWORD *)(a1 + 40);
      v3 = *(_WORD *)(result + 48);
    }
    return (v3 & 0xE) == 2 && (v4 = *(_QWORD *)(result + 8)) != 0 && (*(_DWORD *)(v4 + 28) & 0x7Eu) - 52 < 6;
  }
  return result;
}

unint64_t sub_22F3A9990(uint64_t a1)
{
  unint64_t result;
  __int16 v3;
  uint64_t v4;

  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    v3 = *(_WORD *)(result + 48);
    if ((v3 & 1) == 0)
    {
      sub_22EFA5954(result);
      result = *(_QWORD *)(a1 + 40);
      v3 = *(_WORD *)(result + 48);
    }
    return (v3 & 0xE) == 2 && (v4 = *(_QWORD *)(result + 8)) != 0 && (*(_DWORD *)(v4 + 28) & 0x7F) == 24;
  }
  return result;
}

uint64_t sub_22F3A99F4(uint64_t a1)
{
  unint64_t v2;
  __int16 v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 40);
  if (!v2)
    return 0;
  v3 = *(_WORD *)(v2 + 48);
  if ((v3 & 1) == 0)
  {
    sub_22EFA5954(v2);
    v2 = *(_QWORD *)(a1 + 40);
    v3 = *(_WORD *)(v2 + 48);
  }
  if ((v3 & 0xE) == 6 && (v4 = *(_QWORD *)(v2 + 8)) != 0 && (*(_DWORD *)(v4 + 28) & 0x7Fu) - 60 <= 6)
    return sub_22E4EE1BC(*(_QWORD *)(*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFFF0));
  else
    return 0;
}

unint64_t sub_22F3A9A70(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    if ((*(_WORD *)(result + 48) & 1) == 0)
      sub_22EFA5954(result);
    if ((sub_22EFAF818(a1) & 1) != 0 || (sub_22EFB1448(a1) & 1) != 0)
      return 1;
    result = *(_QWORD *)(a1 + 40);
    if (result)
    {
      if ((*(_WORD *)(result + 48) & 1) == 0)
      {
        sub_22EFA5954(result);
        result = *(_QWORD *)(a1 + 40);
      }
      v3 = *(_QWORD *)(result + 8);
      if (v3 && (*(_DWORD *)(v3 + 28) & 0x7F) == 0x16)
        return 1;
      if ((*(_WORD *)(result + 48) & 1) == 0)
      {
        sub_22EFA5954(result);
        v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
      }
      return v3 && (*(_DWORD *)(v3 + 28) & 0x7F) == 23;
    }
  }
  return result;
}

_QWORD *sub_22F3A9B20(uint64_t *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v11;
  _QWORD *result;

  v11 = *(_DWORD *)(a2 + 12);
  if ((v11 & 0x80000000) == 0)
    *(_DWORD *)(a2 + 12) = v11 & 0x1FFFFFFF;
  result = (_QWORD *)sub_22E3CD3D4(*a1, 24, 3);
  *result = a3 | ((unint64_t)a4 << 32);
  result[1] = a5;
  result[2] = a6;
  *(_QWORD *)(a2 + 16) = result;
  *(_QWORD *)(a2 + 24) = 1;
  if ((_DWORD)a4)
    *(_QWORD *)(a2 + 4) = (a4 << 32) | *(unsigned int *)(a2 + 4);
  return result;
}

uint64_t sub_22F3A9BA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(a2 + 32) = a3;
  v3 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v3)
    *(_QWORD *)(a2 + 4) = *(unsigned int *)(a2 + 4) | (unint64_t)(v3 << 32);
  return sub_22EFAE2B0(result, a2);
}

uint64_t sub_22F3A9BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[3];
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  v7[0] = 0;
  v7[1] = a1;
  v7[2] = a2;
  v8 = (a2 + 2) / 3uLL;
  v9 = v8 + 1;
  v10 = 0;
  sub_22EFB16A8(a3, (uint64_t)v7);
  result = 0;
  if (v9 <= v8 && v7[0] != 0)
  {
    v5 = *(_QWORD *)(v7[0] + 40);
    if ((v5 & 7) != 0)
      v6 = 0;
    else
      v6 = v5 & 0xFFFFFFFFFFFFFFF8;
    return *(_QWORD *)(v6 + 16) + 16;
  }
  return result;
}

uint64_t sub_22F3A9C40(uint64_t *a1, int a2, int a3, unsigned int a4)
{
  const char **v8;
  char *v9;
  size_t v10;
  uint64_t v11;
  int v12;
  int v13;

  if (a4 < 0xC6)
    v8 = (const char **)&(&off_24FAC12E8)[3 * a4];
  else
    v8 = *(const char ***)(*(_QWORD *)(a1[3] + 16) + 8 * a4 - 1584);
  v9 = (char *)*v8;
  if (*v8)
    v10 = strlen(*v8);
  else
    v10 = 0;
  v11 = sub_22E3CD3D4(*a1, 32, 3);
  v12 = sub_22EFB0404(v11, (unsigned __int8 *)v9, v10);
  *(_DWORD *)v11 = a2;
  *(_DWORD *)(v11 + 4) = a2;
  *(_BYTE *)(v11 + 12) = 10;
  *(_WORD *)(v11 + 12) &= ~0x100u;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  v13 = *(_DWORD *)(v11 + 12) & 0x1FF | (v12 << 9) | (a4 << 12);
  *(_DWORD *)(v11 + 8) = a3;
  *(_DWORD *)(v11 + 12) = v13;
  return v11;
}

uint64_t sub_22F3A9D18(uint64_t *a1, int a2, int a3, unsigned int a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;
  const char **v17;
  char *v18;
  size_t v19;
  uint64_t v20;
  int v21;
  int v22;

  v16 = (_QWORD *)sub_22E3CD3D4(*a1, 24, 3);
  *v16 = a5 | ((unint64_t)a6 << 32);
  v16[1] = a7;
  v16[2] = a8;
  if (a4 < 0xC6)
    v17 = (const char **)&(&off_24FAC12E8)[3 * a4];
  else
    v17 = *(const char ***)(*(_QWORD *)(a1[3] + 16) + 8 * a4 - 1584);
  v18 = (char *)*v17;
  if (*v17)
    v19 = strlen(*v17);
  else
    v19 = 0;
  v20 = sub_22E3CD3D4(*a1, 32, 3);
  v21 = sub_22EFB0404(v20, (unsigned __int8 *)v18, v19);
  *(_DWORD *)v20 = a2;
  *(_DWORD *)(v20 + 4) = a2;
  *(_BYTE *)(v20 + 12) = 10;
  *(_WORD *)(v20 + 12) &= ~0x100u;
  *(_QWORD *)(v20 + 16) = v16;
  *(_QWORD *)(v20 + 24) = 1;
  v22 = *(_DWORD *)(v20 + 12) & 0x1FF | (v21 << 9) | (a4 << 12);
  *(_DWORD *)(v20 + 8) = a3;
  *(_DWORD *)(v20 + 12) = v22;
  return v20;
}

uint64_t sub_22F3A9E34(uint64_t *a1, int a2, int a3, const void *a4, size_t a5)
{
  int v8;
  uint64_t result;
  int v10;

  v8 = *((_DWORD *)sub_22F3A8274(a1[3], a4, a5) + 4);
  result = sub_22E3CD3D4(*a1, 32, 3);
  *(_DWORD *)result = a2;
  *(_DWORD *)(result + 4) = a2;
  *(_BYTE *)(result + 12) = 10;
  *(_WORD *)(result + 12) &= ~0x100u;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  v10 = *(_DWORD *)(result + 12) & 0x1FF | (v8 << 12);
  *(_DWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 12) = v10;
  return result;
}

uint64_t sub_22F3A9EB0(uint64_t *a1, int a2, int a3, int a4)
{
  uint64_t result;
  int v8;

  result = sub_22E3CD3D4(*a1, 32, 3);
  *(_DWORD *)result = a2;
  *(_DWORD *)(result + 4) = a2;
  *(_BYTE *)(result + 12) = 10;
  *(_WORD *)(result + 12) &= ~0x100u;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  v8 = *(_DWORD *)(result + 12) & 0x1FF | (a4 << 12);
  *(_DWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 12) = v8;
  return result;
}

uint64_t sub_22F3A9F18(uint64_t *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  __int16 v10;

  result = sub_22E3CD3D4(*a1, 32, 3);
  *(_DWORD *)result = a2;
  *(_DWORD *)(result + 4) = a2;
  *(_DWORD *)(result + 8) = a3;
  *(_BYTE *)(result + 12) = 11;
  v10 = *(_WORD *)(result + 12);
  *(_QWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = a5;
  *(_WORD *)(result + 12) = v10 & 0xFCFF;
  return result;
}

uint64_t sub_22F3A9F78(uint64_t *a1, int a2, unsigned int a3)
{
  const char **v6;
  int v7;
  uint64_t result;

  if (a3 < 0xC6)
    v6 = (const char **)&(&off_24FAC12E8)[3 * a3];
  else
    v6 = *(const char ***)(*(_QWORD *)(a1[3] + 16) + 8 * a3 - 1584);
  if (*v6)
    v7 = strlen(*v6) + 1;
  else
    v7 = 1;
  result = sub_22E3CD3D4(*a1, 80, 3);
  *(_DWORD *)(result + 4) = a2;
  *(_DWORD *)(result + 8) = v7 + a2;
  *(_BYTE *)(result + 12) = 4;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)result = a2 + 1;
  *(_DWORD *)(result + 12) = *(_DWORD *)(result + 12) & 0xE00000FF | ((a3 & 0xFFFFF) << 8) | 0x10000000;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_22F3AA040(uint64_t *a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = sub_22E3CD3D4(*a1, 64, 3);
  *(_DWORD *)(v12 + 4) = a2;
  *(_DWORD *)(v12 + 8) = a6 + a4;
  *(_BYTE *)(v12 + 12) = 5;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_DWORD *)v12 = a2 + 1;
  *(_DWORD *)(v12 + 12) = *(_DWORD *)(v12 + 12) & 0xE00000FF | ((a3 & 0xFFFFF) << 8) | 0x10000000;
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = a6;
  *(_DWORD *)(v12 + 56) = a4;
  sub_22EFAF238((uint64_t)a1, v12);
  sub_22EFAF488((uint64_t)a1, v12);
  return v12;
}

uint64_t sub_22F3AA0F4(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;
  __int16 v9;

  result = sub_22E3CD3D4(*a1, 56, 3);
  v8 = a2 + 1 + a4;
  *(_DWORD *)(result + 4) = a2;
  *(_DWORD *)(result + 8) = v8;
  *(_BYTE *)(result + 12) = 9;
  v9 = *(_WORD *)(result + 12);
  *(_QWORD *)(result + 16) = a3;
  *(_QWORD *)(result + 24) = a4;
  *(_DWORD *)(result + 32) = a2 + 1;
  *(_DWORD *)(result + 36) = v8;
  *(_DWORD *)result = a2 + 1;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_WORD *)(result + 12) = v9 & 0xF8FF;
  return result;
}

uint64_t sub_22F3AA160(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v7;
  unsigned int v8;

  *(_QWORD *)(a2 + 40) = a3;
  *(_QWORD *)(a2 + 48) = a4;
  *(_DWORD *)(a2 + 8) = a5;
  if (a6)
  {
    *(_WORD *)(a2 + 12) |= 0x400u;
  }
  else
  {
    v7 = result;
    result = sub_22EFB04E4(*(char **)(a2 + 16), *(_QWORD *)(a2 + 24));
    if ((result & 1) == 0)
    {
      v8 = *(_DWORD *)(v7 + 104);
      if (v8 >= *(_DWORD *)(v7 + 108))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v8 = *(_DWORD *)(v7 + 104);
      }
      *(_QWORD *)(*(_QWORD *)(v7 + 96) + 8 * v8) = a2;
      ++*(_DWORD *)(v7 + 104);
    }
  }
  return result;
}

const char *sub_22F3AA1E4(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  const char **v3;
  const char *v4;

  v2 = (a1 >> 8) & 0xFFFFF;
  if (v2 < 0xC6)
    v3 = (const char **)&(&off_24FAC12E8)[3 * v2];
  else
    v3 = *(const char ***)(a2 + 8 * v2 - 1584);
  v4 = *v3;
  if (*v3)
    strlen(*v3);
  return v4;
}

uint64_t sub_22F3AA248(uint64_t a1, _WORD *__s2, size_t __n, uint64_t a4, unsigned int a5)
{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  int *v13;
  const void *v14;
  int v15;
  unint64_t v18;
  __int16 v19;

  v8 = a5;
  if (a5)
  {
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a4 + 8 * v10) + 40) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(*(_QWORD *)(a4 + 8 * v10) + 40) & 7) == 0 && v11 != 0)
      {
        v13 = *(int **)(v11 + 16);
        v15 = *v13;
        v14 = v13 + 4;
        if (v15 == __n && (!__n || !memcmp(v14, __s2, __n)))
          break;
      }
      if (v8 == ++v10)
        goto LABEL_11;
    }
  }
  else
  {
    if (__n != 3)
      return 0xFFFFFFFFLL;
    if (*__s2 != 11822 || *((_BYTE *)__s2 + 2) != 46)
      return 0xFFFFFFFFLL;
    v18 = *(_QWORD *)(a1 + 40);
    if (!v18)
      return 0xFFFFFFFFLL;
LABEL_11:
    v19 = *(_WORD *)(v18 + 48);
    if ((v19 & 1) == 0)
    {
      sub_22EFA5954(v18);
      v19 = *(_WORD *)(*(_QWORD *)(a1 + 40) + 48);
    }
    if ((v19 & 0x200) != 0)
      return 4294967294;
    else
      return 0xFFFFFFFFLL;
  }
  return v10;
}

uint64_t sub_22F3AA32C(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v8;
  unsigned int v9;
  _BOOL4 v10;
  _QWORD v13[3];
  int v14;
  unsigned int v15;
  uint64_t v16;

  v13[0] = 0;
  v13[1] = a1;
  v13[2] = a2;
  v4 = (a2 + 2) / 3uLL;
  v5 = v4 + 1;
  v14 = v4;
  v15 = v4 + 1;
  v16 = 0;
  v6 = a4;
  if (a4)
  {
    do
    {
      v8 = *a3++;
      sub_22EFB14B0((uint64_t)v13, v8);
      --v6;
    }
    while (v6);
    LODWORD(v4) = v14;
    v5 = v15;
    v9 = v16;
    v10 = v13[0] == 0;
  }
  else
  {
    v9 = 0;
    v10 = 1;
  }
  if (v5 > v4 || v10)
    return 0xFFFFFFFFLL;
  else
    return v9;
}

uint64_t sub_22F3AA3C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  __int16 v3;

  *(_QWORD *)result = 0;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 6;
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = a3;
  v3 = *(_WORD *)(result + 12);
  if (a3)
  {
    *(_WORD *)(result + 12) = v3 & 0xFEFF;
    *(_QWORD *)(result + 4) = *(unsigned int *)(*(_QWORD *)a2 + 4) | ((unint64_t)*(unsigned int *)(*(_QWORD *)(a2 + 8 * a3 - 8) + 8) << 32);
    *(_DWORD *)result = *(_DWORD *)(*(_QWORD *)a2 + 4);
  }
  else
  {
    *(_WORD *)(result + 12) = v3 | 0x300;
  }
  return result;
}

void sub_22F3AA420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(unsigned int *)(a1 + 8);
  if (v4 + a2 > (unint64_t)*(unsigned int *)(a1 + 12))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v4 = *(unsigned int *)(a1 + 8);
  }
  if (a2)
    bzero((void *)(*(_QWORD *)a1 + 8 * v4), 8 * a2);
  *(_DWORD *)(a1 + 8) = v4 + a2;
}

BOOL sub_22F3AA48C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = sub_22EFC72E8(v2);
  if (!sub_22EFBCBC4(v2, v3))
    return 0;
  v4 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 48) & 0xFFFFFFFFFFFFFFF0));
  if (v4)
    v5 = (*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v4;
  else
    v5 = 0;
  v6 = sub_22EFC3B90(v5);
  if (!v6)
    return 0;
  v7 = 0;
  while (1)
  {
    v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v6)
      break;
    if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
      ++v7;
  }
  if (v7)
    return 0;
  v9 = sub_22EFC3B90(v5);
  return sub_22E9D848C(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_22F3AA55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  const llvm::APInt *v5;

  result = (uint64_t)sub_22EFBCF80(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(result + 8) + 72 * *(unsigned int *)(result + 16);
  v5 = (const llvm::APInt *)(v4 + 8);
  LODWORD(v4) = *(_DWORD *)(v4 + 16);
  *(_DWORD *)(a2 + 8) = v4;
  if (v4 > 0x40)
    result = llvm::APInt::initSlowCase((llvm::APInt *)a2, v5);
  else
    *(_QWORD *)a2 = *(_QWORD *)v5;
  *(_BYTE *)(a2 + 12) = *((_BYTE *)v5 + 12);
  return result;
}

unsigned __int8 *sub_22F3AA5C4(uint64_t a1, int a2)
{
  char v2;
  unsigned __int8 *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  v2 = a2;
  v13 = a2;
  v5 = a1 + 8;
  result = *(unsigned __int8 **)(a1 + 8);
  v6 = *(unsigned int *)(v5 + 8);
  if ((_DWORD)v6)
  {
    v7 = 16 * v6;
    while (*result != a2)
    {
      result += 16;
      v7 -= 16;
      if (!v7)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v8 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 104) + 32))(*(_QWORD *)(a1 + 104)) + 64;
    v9 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), off_24FAC2578[v2], qword_22F4A16A0[v2]);
    v10 = sub_22EFCE144(v8, v9);
    if (v10 < 8)
      return 0;
    v11 = v10 & 0xFFFFFFFFFFFFFFF8;
    if ((v10 & 4) != 0)
    {
      if (v11)
        v11 = *(_QWORD *)v11;
    }
    if ((*(_DWORD *)(v11 + 28) & 0x7Fu) - 60 >= 7)
    {
      return 0;
    }
    else
    {
      v12 = v11;
      sub_22F3AA6C4(v5, &v13, (uint64_t *)&v12);
      return (unsigned __int8 *)(*(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 16) - 16);
    }
  }
  return result;
}

uint64_t sub_22F3AA6C4(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v3 = *(unsigned int *)(a1 + 8);
  if (v3 >= *(_DWORD *)(a1 + 12))
    return sub_22EFB1ED4(a1, *a2, *a3);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a1 + 16 * v3;
  v6 = *a3;
  *(_BYTE *)v5 = *a2;
  *(_QWORD *)(v5 + 8) = v6;
  v7 = v3 + 1;
  *(_DWORD *)(a1 + 8) = v7;
  return v4 + 16 * v7 - 16;
}

_BYTE *sub_22F3AA708@<X0>(int a1@<W0>, unint64_t *a2@<X8>)
{
  BOOL *v4;
  unint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *result;
  char v9;
  char v10;
  char v11;
  BOOL v12;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_22EFB1E30(a2, 4uLL);
  v12 = a1 != 2;
  v4 = (BOOL *)a2[1];
  v5 = a2[2];
  if ((unint64_t)v4 >= v5)
  {
    v6 = (_BYTE *)sub_22EFB2164(a2, (char *)&v12);
    v5 = a2[2];
  }
  else
  {
    *v4 = a1 != 2;
    v6 = v4 + 1;
  }
  a2[1] = (unint64_t)v6;
  v11 = 2;
  if ((unint64_t)v6 >= v5)
  {
    v7 = (_BYTE *)sub_22EFB2164(a2, &v11);
    v5 = a2[2];
  }
  else
  {
    *v6 = 2;
    v7 = v6 + 1;
  }
  a2[1] = (unint64_t)v7;
  v10 = 3;
  if ((unint64_t)v7 >= v5)
  {
    result = (_BYTE *)sub_22EFB2164(a2, &v10);
  }
  else
  {
    *v7 = 3;
    result = v7 + 1;
  }
  a2[1] = (unint64_t)result;
  if (!a1)
  {
    v9 = 4;
    if ((unint64_t)result >= a2[2])
      result = (_BYTE *)sub_22EFB2164(a2, &v9);
    else
      *result++ = 4;
    a2[1] = (unint64_t)result;
  }
  return result;
}

uint64_t sub_22F3AA800(uint64_t a1)
{
  _DWORD *v1;

  v1 = *(_DWORD **)(a1 + 32);
  if (v1)
    LODWORD(v1) = (*v1 >> 13) & 0x1F;
  return v1 | ((**(_DWORD **)(a1 + 24) | **(_DWORD **)(a1 + 16)) >> 13) & 0x1F;
}

uint64_t sub_22F3AA82C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0)
                          + 17);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  return (v1 << 29 >> 31) & 0xC | v1 & 0x13 | v2 & 0x12 | (v2 << 29 >> 31) & 0xC | (**(_DWORD **)(a1 + 32) >> 13) & 0x1Bu;
}

uint64_t sub_22F3AA894(uint64_t a1)
{
  return ((**(_DWORD **)(a1 + 48) | **(_DWORD **)(a1 + 24)) >> 13) & 0x1F;
}

uint64_t sub_22F3AA8B0(uint64_t a1, int a2)
{
  unsigned int *v3;
  char v4;
  unsigned int v5;
  _DWORD *v6;
  _DWORD *v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  unsigned __int8 *v14;
  char v15;

  v3 = *(unsigned int **)(a1 + 16);
  v4 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  v5 = ((char)(32 * v4) >> 7) & 0xC | v4 & 0x12;
  v6 = v3 + 4;
  v9 = *v3;
  v7 = v3 + 2;
  v8 = v9;
  v10 = (unint64_t)v9 >> 8;
  v11 = 2 * v10;
  while (v11 * 4)
  {
    v12 = *(unsigned __int8 **)&v7[v11];
    v13 = *v12;
    v11 -= 2;
    if (v13 != 19)
      goto LABEL_4;
  }
  if (v8 < 0x100)
    goto LABEL_7;
  v12 = *(unsigned __int8 **)&v6[2 * (v10 - 1)];
  if (!v12)
    goto LABEL_7;
  v13 = *v12;
LABEL_4:
  if ((v13 - 101) <= 0x86)
  {
    v14 = sub_22F0D66F4(v12);
    if (v14)
      v5 |= (*(_DWORD *)v14 >> 13) & 0x1F;
  }
LABEL_7:
  v15 = v5 | 0xA;
  if (!a2)
    v15 = v5;
  return v15 & 0x1E;
}

uint64_t sub_22F3AA970(uint64_t a1)
{
  char v1;
  unsigned int v2;

  v1 = *(_BYTE *)(*(_QWORD *)(**(_QWORD **)(a1 + 24) & 0xFFFFFFFFFFFFFFF0) + 17);
  v2 = ((char)(32 * v1) >> 7) & 0xC | v1 & 0x13 | (**(_DWORD **)(a1 + 16) >> 13) & 0x1F;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    return v2;
  else
    return v2 & 0xFFFFFFFB;
}

uint64_t sub_22F3AA9CC(uint64_t a1)
{
  unsigned int v1;
  int v4;
  char v5;

  v1 = **(_DWORD **)(a1 + 16);
  if ((v1 & 0x18000) != 0)
  {
    return ((**(_DWORD **)(a1 + 24) | **(_DWORD **)(a1 + 32) | v1) >> 13) & 0x11 | 0xE;
  }
  else
  {
    v4 = **(_DWORD **)(a1 + 24) >> 13;
    if (*(_BYTE *)(a1 + 48))
      v5 = **(_DWORD **)(a1 + 24) >> 13;
    else
      v5 = **(_DWORD **)(a1 + 32) >> 13;
    if (*(_BYTE *)(a1 + 48))
      v4 = **(_DWORD **)(a1 + 32) >> 13;
    return v5 & 0x1F | (v4 | (v1 >> 13)) & 0x13;
  }
}

uint64_t sub_22F3AAA40(uint64_t a1)
{
  return (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0) + 16) >> 8) & 0x17 | (**(_DWORD **)(a1 + 16) >> 13) & 0x13u;
}

uint64_t sub_22F3AAA74(uint64_t a1)
{
  return (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) >> 8) & 0x12;
}

uint64_t sub_22F3AAA90(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 2 | ((**(_DWORD **)(a1 + 24) | **(_DWORD **)(a1 + 16)) >> 13) & 0x19;
}

uint64_t sub_22F3AAAC4(uint64_t a1)
{
  unsigned int v1;

  v1 = ((char)(32 * *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17)) >> 7) & 0xC | *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 0x12;
  if (sub_22EFC7ADC(*(_QWORD *)(a1 + 16) + 40))
    return v1 | 2;
  else
    return v1;
}

uint64_t sub_22F3AAB1C(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 16) >> 13) & 0x1F;
}

uint64_t sub_22F3AAB2C(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  return v1 & 0x12 | (**(_DWORD **)(a1 + 16) >> 13) & 0x1B | (v1 << 29 >> 31) & 0xCu;
}

unint64_t sub_22F3AAB64(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  int v3;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = v1 & 0xFFFFFFFFFFFFFFF8;
  if ((v1 & 4) != 0)
  {
    v3 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v2 & 0xFFFFFFFFFFFFFFF0) + 17);
    LODWORD(v2) = (v3 << 29 >> 31) & 0xC | v3 & 0x13;
  }
  else
  {
    LOBYTE(v2) = *(_DWORD *)v2 >> 13;
  }
  return v2 & 0x1B;
}

uint64_t sub_22F3AABAC(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 16) >> 13) & 0x1B;
}

uint64_t sub_22F3AABC0(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 24) >> 13) & 0x1F;
}

uint64_t sub_22F3AABD0(uint64_t a1)
{
  _DWORD *v1;

  v1 = *(_DWORD **)(a1 + 16);
  if (v1)
    return (*v1 >> 13) & 0x13;
  else
    return 0;
}

uint64_t sub_22F3AABF0(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 24) >> 13) & 0x1B;
}

uint64_t sub_22F3AAC04(uint64_t a1)
{
  int v1;
  int v2;
  _DWORD *v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1 + 48) & 0xFFFFFFFFFFFFFFF0) + 17);
  v2 = (v1 << 29 >> 31) & 0xC | v1 & 0x13;
  v3 = *(_DWORD **)(a1 + 32);
  if (v3)
    v2 |= (*v3 >> 13) & 0x1F;
  return v2 & 0xFFFFFFFB;
}

uint64_t sub_22F3AAC48(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 32) >> 12) & 8 | (**(_DWORD **)(a1 + 32) >> 13) & 0x1Bu;
}

uint64_t sub_22F3AAC68(uint64_t a1, int a2)
{
  if (a2 == 1)
    return (**(_DWORD **)(a1 + 16) >> 13) & 0x11 | 0xAu;
  else
    return (**(_DWORD **)(a1 + 16) >> 13) & 0x13;
}

uint64_t sub_22F3AAC8C(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;

  v1 = *(_DWORD **)(a1 + 48);
  if (v1)
  {
    v2 = (*v1 >> 13) & 0x1C;
    v3 = 19;
  }
  else
  {
    v2 = 14;
    v3 = 17;
  }
  return v3 & (**(_DWORD **)(a1 + 24) >> 13) | v2;
}

uint64_t sub_22F3AACC4(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 24) >> 13) & 0x11 | 0xEu;
}

uint64_t sub_22F3AACDC(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1 + 16) & 0xFFFFFFFFFFFFFFF0) + 17);
  return (v1 << 29 >> 31) & 0xC | v1 & 0x13u;
}

uint64_t sub_22F3AAD08(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  char v4;

  v1 = *(_QWORD *)(a1 + 40);
  if ((v1 & 6) == 2)
  {
    v2 = (_DWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF0) + 16);
    v3 = 18;
    v4 = 8;
    return v3 & (*v2 >> v4);
  }
  if ((v1 & 6) == 0)
  {
    v2 = (_DWORD *)(v1 & 0xFFFFFFFFFFFFFFF8);
    v3 = 27;
    v4 = 13;
    return v3 & (*v2 >> v4);
  }
  return 0;
}

uint64_t sub_22F3AAD58(uint64_t a1)
{
  return ((**(_DWORD **)(a1 + 32) | **(_DWORD **)(a1 + 24)) >> 13) & 0x1F;
}

uint64_t sub_22F3AAD70(uint64_t a1)
{
  return (**(_DWORD **)(a1 + 16) >> 13) & 0x1A;
}

uint64_t sub_22F3AAD84(uint64_t a1)
{
  _DWORD *v1;
  unsigned int v2;
  _DWORD *v3;

  v1 = *(_DWORD **)(a1 + 24);
  v2 = **(_DWORD **)(a1 + 16);
  if (v1)
    v2 |= *v1;
  v3 = *(_DWORD **)(a1 + 32);
  if (v3)
    v2 |= *v3;
  return (v2 >> 13) & 0x1F;
}

uint64_t sub_22F3AADB0(uint64_t a1)
{
  _DWORD **v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v1 = (_DWORD **)(a1 + 32);
  v2 = *(unsigned int *)(a1 + 24);
  v3 = (**(_DWORD **)(a1 + 32 + 8 * v2) >> 13) & 0x1F;
  if ((_DWORD)v2)
  {
    v4 = 8 * v2;
    do
    {
      if (*v1)
        v3 |= (**v1 >> 13) & 0x1F | (**v1 >> 14) & 4;
      ++v1;
      v4 -= 8;
    }
    while (v4);
  }
  return v3;
}

uint64_t sub_22F3AAE00(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int i;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  v2 = (v1 << 29 >> 31) & 0xC | v1 & 0x12;
  v3 = *(_DWORD *)(a1 + 28);
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v6 = sub_22F3C3714(a1, i);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 56);
        v8 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
        if ((v7 & 4) != 0)
          v8 = (_QWORD *)v8[4];
        if (v8)
        {
          v9 = *(unsigned __int8 *)(*(_QWORD *)(*v8 & 0xFFFFFFFFFFFFFFF0) + 17);
          v2 |= v9 & 0x13 | (v9 << 29 >> 31) & 0xC;
        }
      }
      sub_22F3C3720(a1, i, &v11);
      if (v11)
        v2 |= (*v11 >> 13) & 0x1F;
      if (v12)
        v2 |= (*v12 >> 13) & 0x1F;
      if (v13)
        v2 |= (*v13 >> 13) & 0x1F;
    }
  }
  return v2;
}

uint64_t sub_22F3AAF0C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD **v3;
  uint64_t v4;
  _DWORD *v5;

  v1 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 4 | 0x1A;
  v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v2)
  {
    v3 = (_DWORD **)(a1 + 32);
    v4 = 8 * v2;
    do
    {
      v5 = *v3++;
      v1 |= (*v5 >> 13) & 0x1F;
      v4 -= 8;
    }
    while (v4);
  }
  return v1;
}

uint64_t sub_22F3AAF58(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1 + 32) & 0xFFFFFFFFFFFFFFF0) + 17);
  return (v1 << 29 >> 31) & 0xC | v1 & 0x13u;
}

uint64_t sub_22F3AAF84(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  return (v1 << 29 >> 31) & 0xC | v1 & 0x12u;
}

uint64_t sub_22F3AAFAC(uint64_t a1)
{
  unsigned int v1;
  int v2;
  uint64_t v3;
  _DWORD **v4;
  _DWORD *v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1 + 24) & 0xFFFFFFFFFFFFFFF0) + 17);
  v2 = v1 & 0x13 | (8 * ((v1 >> 2) & 1));
  v3 = *(unsigned int *)(a1 + 36);
  if ((_DWORD)v3)
  {
    v4 = (_DWORD **)(a1 + 16 * *(unsigned int *)(a1 + 32) + 40);
    do
    {
      v5 = *v4++;
      v2 |= (*v5 >> 13) & 0x1B;
      --v3;
    }
    while (v3);
  }
  return v2;
}

uint64_t sub_22F3AB008(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  v2 = (v1 << 29 >> 31) & 0xC | v1 & 0x12;
  v3 = *(unsigned int *)(a1 + 32);
  if ((_DWORD)v3)
  {
    v4 = *(_DWORD ***)(a1 + 24);
    v5 = 8 * v3;
    do
    {
      v6 = *v4++;
      v2 |= (*v6 >> 13) & 0x1F;
      v5 -= 8;
    }
    while (v5);
  }
  return v2;
}

uint64_t sub_22F3AB05C(uint64_t a1, int a2)
{
  uint64_t v2;
  _DWORD **v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  _DWORD *v7;
  int v8;
  uint64_t v9;

  v2 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v2)
  {
    v3 = (_DWORD **)(a1 + 40);
    v4 = 8 * v2;
    do
    {
      v5 = *v3++;
      a2 |= (*v5 >> 13) & 0x10;
      v4 -= 8;
    }
    while (v4);
  }
  v7 = *(_DWORD **)(a1 + 32);
  v6 = a1 + 32;
  v8 = (*v7 >> 13) & 0x10 | a2;
  v9 = *(unsigned int *)(v6 - 12);
  if ((_DWORD)v9 == -1)
    LOBYTE(v8) = v8 | 0xE;
  else
    v8 |= (**(_DWORD **)(v6 + 8 * v9 + 8) >> 13) & 0x1E;
  return v8;
}

uint64_t sub_22F3AB0D0(unsigned int *a1)
{
  int v1;
  uint64_t v2;
  _DWORD **v3;
  _DWORD *v4;

  v1 = (**((_DWORD **)a1 + 2) >> 13) & 0x1F;
  v2 = 8 * ((unint64_t)*a1 >> 18) - 8;
  if (8 * ((unint64_t)*a1 >> 18) != 8)
  {
    v3 = (_DWORD **)(a1 + 6);
    do
    {
      v4 = *v3++;
      v1 |= (*v4 >> 13) & 0x1F;
      v2 -= 8;
    }
    while (v2);
  }
  return v1;
}

uint64_t sub_22F3AB114(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _DWORD **v3;
  uint64_t v4;
  _DWORD *v5;

  v1 = *(unsigned int *)(a1 + 72);
  if ((_DWORD)v1)
  {
    v2 = 0;
    v3 = (_DWORD **)(a1 + 16);
    v4 = 8 * v1;
    do
    {
      v5 = *v3++;
      v2 |= (*v5 >> 13) & 0x1F;
      v4 -= 8;
    }
    while (v4);
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2;
}

uint64_t sub_22F3AB150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  _QWORD *v5;
  unsigned int v6;
  unint64_t v7;
  int v8;

  v1 = (**(_DWORD **)(a1 + 16) >> 13) & 0x1F;
  v2 = *(_QWORD *)(a1 + 64);
  if ((v2 & 1) == 0)
  {
    v3 = (_QWORD *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3)
    {
      v4 = *(_BYTE *)(*(_QWORD *)(*v3 & 0xFFFFFFFFFFFFFFF0) + 17);
      v1 = v4 & 0x13 | v1 | ((char)(32 * v4) >> 7) & 0xC;
    }
  }
  v5 = *(_QWORD **)(a1 + 48);
  if (v5)
  {
    v6 = *(unsigned __int8 *)(*(_QWORD *)(*v5 & 0xFFFFFFFFFFFFFFF0) + 17);
    v1 = v6 & 0x13 | (8 * ((v6 >> 2) & 1)) | v1;
  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    v8 = sub_22F0AAC5C(v7);
    return (2 * v8) & 0x10 | v8 & 3 | v1;
  }
  return v1;
}

uint64_t sub_22F3AB200(uint64_t a1, int a2)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
  return v2 & 0x12 | a2 | ((char)(32 * v2) >> 7) & 0xC;
}

uint64_t sub_22F3AB234(uint64_t a1)
{
  char v1;
  uint64_t v2;
  int v3;
  char v4;
  _DWORD *v5;
  __int128 v7;
  uint64_t v8;

  v1 = 0;
  v2 = 0;
  v8 = *MEMORY[0x24BDAC8D0];
  v7 = *(_OWORD *)(a1 + 40);
  v3 = 14;
  do
  {
    v4 = v1;
    v5 = (_DWORD *)*((_QWORD *)&v7 + v2);
    if (v5)
      v3 |= (*v5 >> 13) & 0x1E;
    v1 = 1;
    v2 = 1;
  }
  while ((v4 & 1) == 0);
  return v3;
}

uint64_t sub_22F3AB2BC(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(unsigned int *)(v3 + 8);
  if ((_DWORD)v4)
  {
    v5 = 0;
    v6 = v3 + 16;
    v7 = 32 * v4;
    while (1)
    {
      v5 |= sub_22F0EEB00(v6) & 3;
      if (v5 == 3)
        break;
      v6 += 32;
      v7 -= 32;
      if (!v7)
        goto LABEL_8;
    }
    v5 = 3;
  }
  else
  {
    v5 = 0;
  }
LABEL_8:
  if (a2)
    v8 = 8;
  else
    v8 = 0;
  return v8 & 0xFFFFFFFC | v5 & 3;
}

uint64_t sub_22F3AB340(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _DWORD **v3;
  _DWORD *v4;

  v1 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v1)
  {
    v2 = 0;
    v3 = (_DWORD **)(a1 + 40);
    do
    {
      v4 = *v3++;
      v2 |= (*v4 >> 13) & 0x1B;
      --v1;
    }
    while (v1);
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2;
}

uint64_t sub_22F3AB37C(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;

  if ((*(_DWORD *)(a1 + 24) & 0xFF0000) == 0x10000 && (v1 = *(_DWORD **)(a1 + 40)) != 0)
  {
    v2 = (*v1 >> 13) & 0x1F;
  }
  else
  {
    v3 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 17);
    v2 = (v3 << 29 >> 31) & 0xC | v3 & 0x12;
  }
  if ((unsigned __int16)*(_DWORD *)(a1 + 24))
  {
    v4 = (_DWORD **)(a1 + 48);
    v5 = 8 * (unsigned __int16)*(_DWORD *)(a1 + 24);
    do
    {
      v6 = *v4++;
      v2 |= (*v6 >> 13) & 0x1F;
      v5 -= 8;
    }
    while (v5);
  }
  return v2;
}

void *sub_22F3AB3F4(uint64_t a1)
{
  void *result;

  sub_22E687D9C((uint64_t *)(a1 + 8));
  sub_22F3AB434((_QWORD *)(a1 + 32));
  result = sub_22EB4E16C((llvm::SmallPtrSetImplBase *)(a1 + 168));
  *(_DWORD *)(a1 + 248) = 0;
  *(_DWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 232) = 0;
  return result;
}

_QWORD *sub_22F3AB434(_QWORD *result)
{
  int v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  int v5;

  v1 = *(_DWORD *)result;
  if (*(_DWORD *)result > 1u || *((_DWORD *)result + 1))
  {
    if ((v1 & 1) != 0)
    {
      v3 = result + 1;
      v4 = result + 17;
    }
    else
    {
      v2 = *((unsigned int *)result + 4);
      if (((2 * v1) & 0xFFFFFFFC) < v2 && v2 >= 0x41)
        return sub_22EFB54E0(result);
      if (!(_DWORD)v2)
      {
        v5 = 0;
LABEL_10:
        *(_DWORD *)result = v5;
        *((_DWORD *)result + 1) = 0;
        return result;
      }
      v3 = (_QWORD *)result[1];
      v4 = &v3[2 * v2];
    }
    do
    {
      *v3 = 0;
      v3 += 2;
    }
    while (v3 != v4);
    v5 = *(_DWORD *)result & 1;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_22F3AB4A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v4 = *a1;
  *a1 = *a2;
  *a2 = v4;
  sub_22F3ABAF4((__int128 *)(a1 + 1), a2 + 1);
  sub_22EFB3458((unsigned int *)a1 + 8, (unsigned int *)a2 + 8);
  result = llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 21), (llvm::SmallPtrSetImplBase *)(a2 + 21));
  v6 = *((_BYTE *)a1 + 368);
  *((_BYTE *)a1 + 368) = *((_BYTE *)a2 + 368);
  *((_BYTE *)a2 + 368) = v6;
  v7 = *((_BYTE *)a1 + 369);
  *((_BYTE *)a1 + 369) = *((_BYTE *)a2 + 369);
  *((_BYTE *)a2 + 369) = v7;
  v8 = *((_BYTE *)a1 + 370);
  *((_BYTE *)a1 + 370) = *((_BYTE *)a2 + 370);
  *((_BYTE *)a2 + 370) = v8;
  v9 = a1[29];
  a1[29] = a2[29];
  a2[29] = v9;
  return result;
}

__n128 sub_22F3AB534(uint64_t a1, int a2, unint64_t a3)
{
  uint64_t v4;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  __n128 *v12;
  int v13;

  v13 = a2;
  v4 = sub_22F3AB62C(a1, &v13);
  v6 = v4;
  v7 = *(_QWORD *)v4;
  v8 = *(unsigned int *)(v4 + 8);
  if ((_DWORD)v8)
  {
    v9 = 24 * v8;
    v10 = *(_QWORD *)v4;
    while (*(_QWORD *)v10 != *(_QWORD *)a3
         || *(_DWORD *)(v10 + 8) != *(_DWORD *)(a3 + 8)
         || *(_QWORD *)(v10 + 16) != *(_QWORD *)(a3 + 16))
    {
      v10 += 24;
      v9 -= 24;
      if (!v9)
      {
        v10 = v7 + 24 * v8;
        break;
      }
    }
  }
  else
  {
    v10 = *(_QWORD *)v4;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((v10 - v7) >> 3) == v8)
  {
    v11 = (__n128 *)sub_22E5BBF6C(v4, a3);
    v12 = (__n128 *)(*(_QWORD *)v6 + 24 * *(unsigned int *)(v6 + 8));
    result = *v11;
    v12[1].n128_u64[0] = v11[1].n128_u64[0];
    *v12 = result;
    ++*(_DWORD *)(v6 + 8);
  }
  return result;
}

uint64_t sub_22F3AB62C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  void *v12;
  uint64_t v13;
  _BYTE v14[96];
  int v15;
  void *v16;
  uint64_t v17;
  _QWORD v18[13];

  v18[12] = *MEMORY[0x24BDAC8D0];
  v10 = *a2;
  v11 = 0;
  sub_22EFB5B48((uint64_t)&v8, a1, &v10, &v11);
  v4 = v8;
  if (v9)
  {
    v12 = v14;
    v13 = 0x400000000;
    v15 = *a2;
    v16 = v18;
    v17 = 0x400000000;
    sub_22EFB59BC((uint64_t *)(a1 + 24), &v15);
    if (v16 != v18)
      free(v16);
    if (v12 != v14)
      free(v12);
    v5 = *(_QWORD *)(a1 + 24);
    v6 = -286331153 * ((unint64_t)(*(_QWORD *)(a1 + 32) - v5) >> 3) - 1;
    *(_DWORD *)(v4 + 4) = v6;
  }
  else
  {
    v6 = *(_DWORD *)(v8 + 4);
    v5 = *(_QWORD *)(a1 + 24);
  }
  return v5 + 120 * v6 + 8;
}

uint64_t sub_22F3AB750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  llvm *v14;
  llvm *v15;
  llvm *v16;
  uint64_t v17;
  llvm *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t i;
  llvm *v23[2];
  unsigned int v24;
  llvm *v25;
  uint64_t v26;
  unsigned int v27;
  _QWORD v28[2];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23[0] = 0;
  v23[1] = 0;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28[0] = 0;
  v28[1] = 0;
  v29 = 0;
  v31 = 0;
  v32 = 0;
  v30 = 0;
  sub_22EFB476C((uint64_t *)v23, a1, 0, 0, a2);
  v3 = *(_QWORD *)(a2 + 24);
  for (i = *(_QWORD *)(a2 + 32); v3 != i; v3 += 56)
  {
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    while (v4 != v5)
    {
      v6 = *(unsigned int *)(v4 + 16);
      if (v6 >= 2)
      {
        v7 = *(_QWORD *)(v4 + 8);
        v8 = 3 * v6;
        v9 = v7 + 8 * v8;
        v10 = 8 * v8;
        while (!sub_22EFB5C34((uint64_t *)(v4 + 8), v7))
        {
          v7 += 24;
          v10 -= 24;
          if (!v10)
            goto LABEL_8;
        }
        if (v10 == 24)
        {
          v9 = v7;
        }
        else
        {
          v11 = 24;
          v9 = v7;
          do
          {
            v12 = v7 + v11;
            if ((sub_22EFB5C34((uint64_t *)(v4 + 8), v7 + v11) & 1) == 0)
            {
              v13 = *(_OWORD *)v12;
              *(_QWORD *)(v9 + 16) = *(_QWORD *)(v12 + 16);
              *(_OWORD *)v9 = v13;
              v9 += 24;
            }
            v11 += 24;
          }
          while (v10 != v11);
        }
LABEL_8:
        *(_DWORD *)(v4 + 16) = -1431655765 * ((unint64_t)(v9 - *(_QWORD *)(v4 + 8)) >> 3);
      }
      v4 += 120;
    }
  }
  v14 = (llvm *)((char *)v25 + 16 * v27);
  if ((_DWORD)v26)
  {
    if (v27)
    {
      v21 = 16 * v27;
      v15 = v25;
      while ((*(_QWORD *)v15 | 0x1000) == 0xFFFFFFFFFFFFF000)
      {
        v15 = (llvm *)((char *)v15 + 16);
        v21 -= 16;
        if (!v21)
          goto LABEL_19;
      }
    }
    else
    {
      v15 = v25;
    }
  }
  else
  {
LABEL_19:
    v15 = (llvm *)((char *)v25 + 16 * v27);
  }
  v16 = (llvm *)((char *)v25 + 16 * v27);
LABEL_21:
  while (v15 != v16)
  {
    v17 = *((_QWORD *)v15 + 1);
    if (v17)
    {
      v19 = sub_22F31EB90(v17);
      MEMORY[0x2348A0E9C](v19, 0x1020C400B2C5FE4);
    }
    v18 = (llvm *)((char *)v15 + 16);
    v15 = v14;
    if (v18 != v14)
    {
      v15 = v18;
      while ((*(_QWORD *)v15 | 0x1000) == 0xFFFFFFFFFFFFF000)
      {
        v15 = (llvm *)((char *)v15 + 16);
        if (v15 == v14)
        {
          v15 = v14;
          goto LABEL_21;
        }
      }
    }
  }
  sub_22F31EB90((uint64_t)v28);
  llvm::deallocate_buffer(v25, (void *)(16 * v27));
  return llvm::deallocate_buffer(v23[0], (void *)(16 * v24));
}

_QWORD *sub_22F3AB990(_QWORD *a1, unsigned int a2)
{
  uint64_t v3;
  _QWORD *result;
  int v5;
  _QWORD *v6;

  if (a2 <= 8)
  {
    *a1 = 1;
  }
  else
  {
    *(_DWORD *)a1 &= ~1u;
    v3 = a2;
    result = (_QWORD *)MEMORY[0x23489D23C](16 * a2, 8);
    a1[1] = result;
    a1[2] = v3;
    v5 = *(_DWORD *)a1;
    *a1 = *(_DWORD *)a1 & 1;
    if ((v5 & 1) == 0)
    {
      v6 = &result[2 * v3];
      goto LABEL_6;
    }
  }
  result = a1 + 1;
  v6 = a1 + 17;
  do
  {
LABEL_6:
    *result = 0;
    result += 2;
  }
  while (result != v6);
  return result;
}

uint64_t sub_22F3ABA0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD v8[6];
  uint64_t v9;
  _QWORD v10[2];
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;

  v17 = *a2;
  v18 = 0;
  sub_22F294A80((uint64_t)&v15, a1, &v17, &v18);
  v4 = v15;
  if (v16)
  {
    v9 = *a2;
    v10[0] = 0;
    memset(v8, 0, sizeof(v8));
    v10[1] = 0;
    v11 = 0;
    v13 = 0;
    v14 = 0;
    v12 = 0;
    sub_22EFB4F5C((void **)(a1 + 24), &v9);
    sub_22F31EBDC((uint64_t)v10);
    sub_22F31EBDC((uint64_t)v8);
    v6 = *(_QWORD *)(a1 + 24);
    v5 = -1227133513 * ((unint64_t)(*(_QWORD *)(a1 + 32) - v6) >> 3) - 1;
    *(_DWORD *)(v4 + 8) = v5;
  }
  else
  {
    v5 = *(_DWORD *)(v15 + 8);
    v6 = *(_QWORD *)(a1 + 24);
  }
  return v6 + 56 * v5 + 8;
}

__int128 *sub_22F3ABAF4(__int128 *result, uint64_t *a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 *v4;
  uint64_t *v5;

  v2 = *((_QWORD *)result + 2);
  *((_QWORD *)result + 2) = a2[2];
  a2[2] = v2;
  v3 = *result;
  *result = *(_OWORD *)a2;
  *(_OWORD *)a2 = v3;
  if (*((_QWORD *)result + 2))
  {
    **((_QWORD **)result + 1) = result;
    v4 = *(__int128 **)result;
  }
  else
  {
    *(_QWORD *)result = result;
    v4 = result;
  }
  *((_QWORD *)v4 + 1) = result;
  if (a2[2])
  {
    *(_QWORD *)a2[1] = a2;
    v5 = (uint64_t *)*a2;
  }
  else
  {
    *a2 = (uint64_t)a2;
    v5 = a2;
  }
  v5[1] = (uint64_t)a2;
  return result;
}

uint64_t *sub_22F3ABB68(uint64_t *result, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = result;
  v5 = *result;
  v4 = result[1];
  v6 = a2[1];
  if (v4 != *result)
  {
    v7 = 0;
    do
    {
      v8 = *(_DWORD *)(v4 + v7 - 120);
      *(_QWORD *)(v6 + v7 - 112) = v6 + v7 - 96;
      result = (uint64_t *)(v6 + v7 - 112);
      *((_DWORD *)result - 2) = v8;
      result[1] = 0x400000000;
      if (*(_DWORD *)(v4 + v7 - 104))
        result = (uint64_t *)sub_22F2A39AC((uint64_t)result, v4 + v7 - 112);
      v7 -= 120;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  v9 = *v3;
  *v3 = v6;
  a2[1] = v9;
  v10 = v3[1];
  v3[1] = a2[2];
  a2[2] = v10;
  v11 = v3[2];
  v3[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return result;
}

llvm::raw_ostream *sub_22F3ABC3C(uint64_t a1, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *result;
  _DWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  int v8;

  v8 = *(_DWORD *)(a1 + 40);
  if (v8 || (v7 = *(_QWORD *)(a1 + 32)) != 0 && (v8 = *(_DWORD *)(v7 + 24)) != 0)
  {
    sub_22F422CEC(&v8, a2, *(_QWORD **)(*(_QWORD *)(a1 + 24) + 1992));
    sub_22E47DAC0(a2, ": ");
  }
  result = sub_22E47DAC0(a2, *(char **)(a1 + 48));
  v5 = *(_DWORD **)(a1 + 32);
  if (v5 && (v5[7] & 0x7Fu) - 13 <= 0x3D)
  {
    sub_22E47DAC0(a2, " '");
    (*(void (**)(_DWORD *, llvm::raw_ostream *, uint64_t, uint64_t))(*(_QWORD *)v5 + 96))(v5, a2, *(_QWORD *)(a1 + 24) + 15104, 1);
    result = sub_22E47DAC0(a2, "'");
  }
  v6 = (_BYTE *)*((_QWORD *)a2 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)a2 + 3))
    return (llvm::raw_ostream *)llvm::raw_ostream::write(a2);
  *((_QWORD *)a2 + 4) = v6 + 1;
  *v6 = 10;
  return result;
}

uint64_t sub_22F3ABD4C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 4) == 0)
    return sub_22F114CF4(a1, a2);
  sub_22F114870(a2);
  return (*(_DWORD *)(a2 + 16) >> 14) & 7 | 0x30u;
}

unint64_t sub_22F3ABD90(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 144) & 6) == 4)
    return *(_QWORD *)(a1 + 144) & 0xFFFFFFFFFFFFFFF8;
  else
    return 0;
}

uint64_t sub_22F3ABDAC(uint64_t a1)
{
  unint64_t v1;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v1 = *(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a1 + 40) & 7) != 0 || v1 == 0)
    return 0;
  v4 = *(uint64_t **)(v1 + 16);
  v7 = *v4;
  v5 = v4 + 2;
  v6 = v7;
  v8 = v7;
  if (!(_DWORD)v7 || *(_BYTE *)v5 != 67)
    return 0;
  *((_QWORD *)&v9 + 1) = v6;
  *(_QWORD *)&v9 = v8 - 20;
  switch((unint64_t)(v9 >> 2))
  {
    case 0uLL:
      if (*v5 != 0x676E697274534643 || v5[1] != 0x6F46646E65707041 || *((_DWORD *)v5 + 4) != 1952542066)
        return 0;
      break;
    case 1uLL:
      if (*v5 != 0x676E697274534643 || v5[1] != 0x6957657461657243 || v5[2] != 0x74616D726F466874)
        return 0;
      break;
    case 3uLL:
      if (*v5 != 0x676E697274534643
        || v5[1] != 0x6F46646E65707041
        || v5[2] != 0x41646E4174616D72
        || v5[3] != 0x73746E656D756772)
      {
        return 0;
      }
      break;
    case 4uLL:
      if (memcmp(v5, "CFStringCreateWithFormatAndArguments", 0x24uLL))
        return 0;
      break;
    default:
      return 0;
  }
  return 2;
}

void sub_22F3ABF28(_QWORD *a1, llvm::raw_ostream *a2)
{
  uint64_t v4;

  v4 = sub_22EFC72E8((unint64_t)a1) + 15104;
  sub_22EFBA008(a1, a2, v4);
}

BOOL sub_22F3ABF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*(_BYTE *)(a1 + 104) & 4) == 0)
    return 0;
  v4 = a1 + 48;
  v5 = sub_22EFCE144(a1 + 48, a2);
  v6 = *(_QWORD *)(sub_22EFCAD5C(v4) + 16);
  v7 = (_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  if ((v6 & 4) != 0)
    v7 = (_QWORD *)*v7;
  v8 = sub_22EFCBFBC((unint64_t)v7);
  v9 = sub_22EFCE144(v8, a2);
  if (v5)
  {
    v10 = 1;
    while ((v5 & 4) != 0 && (v5 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v5 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
      v11 = v10++;
      if (!v5)
        goto LABEL_10;
    }
    v11 = v10;
  }
  else
  {
    v11 = 0;
  }
LABEL_10:
  if (v9)
  {
    v12 = 1;
    do
    {
      v13 = v12;
      if ((v9 & 4) == 0)
        break;
      if ((v9 & 0xFFFFFFFFFFFFFFF8) == 0)
        break;
      v9 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
      ++v12;
    }
    while (v9);
  }
  else
  {
    v13 = 0;
  }
  return v11 == v13;
}

void sub_22F3AC02C(_QWORD *a1, llvm::raw_ostream *a2, uint64_t a3, int a4)
{
  if (a4)
    sub_22EFBA008(a1, a2, a3);
  else
    (*(void (**)(_QWORD *))(*a1 + 88))(a1);
}

unint64_t sub_22F3AC040(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4[2];

  v1 = *(_QWORD *)(a1 + 56);
  v2 = (uint64_t *)(v1 & 0xFFFFFFFFFFFFFFF8);
  if ((v1 & 4) != 0)
    v2 = (uint64_t *)v2[4];
  if (!v2)
    return 0;
  v4[0] = *v2;
  v4[1] = (uint64_t)(v2 + 1);
  return sub_22F1167E8(v4);
}

unint64_t sub_22F3AC084(unint64_t result, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(result + 56);
  if ((v3 & 4) == 0)
  {
    v4 = result;
    v5 = v3 & 0xFFFFFFFFFFFFFFF8;
    v6 = sub_22EFC72E8(result);
    result = sub_22E3CD3D4(v6 + 2032, 48, 3);
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 40) = 0;
    v3 = result | 4;
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)(v4 + 56) = result | 4;
    *(_QWORD *)((result & 0xFFFFFFFFFFFFFFF8) + 32) = v5;
  }
  *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 40) = a2;
  return result;
}

char *sub_22F3AC0F4(int a1)
{
  return off_24FAC30E8[a1 - 1];
}

unint64_t sub_22F3AC108(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;

  v2 = sub_22EFC72E8(a1);
  if (sub_22EFBBF74(a1, v2) == 1)
  {
    v3 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 80) + 72), *(_QWORD *)(a1 + 80));
    if (v3)
    {
      v4 = v3;
      v5 = 0;
      while (1)
      {
        v6 = sub_22EFC72E8(v4);
        v7 = sub_22EFBBF74(v4, v6);
        if (v7 == 2)
          break;
        if (v5)
          v8 = 0;
        else
          v8 = v7 == 1;
        if (v8)
          v5 = v4;
        if ((*(_BYTE *)(v4 + 72) & 3) == 0)
        {
          v4 = sub_22E3CD31C((uint64_t *)(v4 + 72), v4);
          if (v4)
            continue;
        }
        return v5;
      }
    }
  }
  return 0;
}

unint64_t sub_22F3AC1A8(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  result = a1 + 88;
  v3 = (v2 & (v2 << 61 >> 63) & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v2 & (v2 << 61 >> 63) & 0xFFFFFFFFFFFFFFF8) != 0)
    return v3;
  return result;
}

uint64_t sub_22F3AC1C4(unint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BYTE *v5;
  unsigned int v6;
  _BYTE *v7;
  int v8;

  v4 = sub_22EFBC5B4(a1);
  v5 = (_BYTE *)sub_22EFBCE18(a1);
  v6 = *v5;
  if ((v6 & 0x20) == 0)
  {
    v7 = v5;
    *v5 = v6 | 0x20;
    if (sub_22F0085E8(v4, a2, 0))
      v8 = 16;
    else
      v8 = 0;
    v6 = *v7 & 0xEF | v8;
    *v7 = v6;
  }
  return (v6 >> 4) & 1;
}

uint64_t *sub_22F3AC240(unint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22EFC72E8(a1);
  return sub_22F3684A4(v4, a1, a2 & 0xFFFFFFFFFFFFFFFBLL);
}

uint64_t *sub_22F3AC26C(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;

  v6 = sub_22EFC72E8(a1);
  return sub_22F368424(v6, a1, a2, a3, 0);
}

unint64_t sub_22F3AC2AC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 88) & 0xFFFFFFFFFFFFFFF8;
}

_QWORD *sub_22F3AC2B8(unint64_t a1, int a2)
{
  uint64_t v4;
  _QWORD *result;

  v4 = sub_22EFC72E8(a1);
  result = sub_22F36F294(v4, a1, a2);
  *(_DWORD *)(a1 + 96) |= 0xFF00000u;
  return result;
}

void sub_22F3AC2F4(_QWORD *a1, llvm::raw_ostream *a2, uint64_t a3, int a4)
{
  unint64_t v7;
  uint64_t v9;

  if (a4)
    sub_22EFBA008(a1, a2, a3);
  else
    (*(void (**)(_QWORD *, llvm::raw_ostream *))(*a1 + 88))(a1, a2);
  v7 = a1[18] & 0xFFFFFFFFFFFFFFF8;
  if ((a1[18] & 6) == 4 && v7 != 0)
  {
    v9 = *(_QWORD *)(v7 + 24);
    if (v9)
      sub_22F117B8C(a2, *(_QWORD *)v9, *(unsigned int *)(v9 + 8), a3, 0, 0, 0);
  }
}

_DWORD *sub_22F3AC398(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  _DWORD *result;
  _QWORD *v7;
  uint64_t v8;

  v5 = 8 * a3;
  result = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a3 + 8, 3);
  *result = a3;
  if (a3)
  {
    v7 = result + 2;
    do
    {
      v8 = *a2++;
      *v7++ = v8;
      v5 -= 8;
    }
    while (v5);
  }
  return result;
}

unint64_t sub_22F3AC3F0(uint64_t a1)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t result;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 56);
  v2 = (unint64_t *)(v1 & 0xFFFFFFFFFFFFFFF8);
  if ((v1 & 4) != 0)
    v2 = (unint64_t *)v2[4];
  if (!v2)
    return 0;
  v5 = *v2;
  v4 = (uint64_t)(v2 + 1);
  result = v5;
  if ((v5 & 0xF) == 0 && *(_BYTE *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 16) == 37)
    result = sub_22F1169C8(result, v4);
  if ((result & 0xF) != 0)
    return 0;
  if (*(unsigned __int8 *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 16) - 25 >= 2)
    return 0;
  return result;
}

uint64_t sub_22F3AC46C(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13[2];
  _QWORD v14[2];

  v2 = sub_22F3AC3F0(a1);
  v14[0] = v2;
  v14[1] = v3;
  if (!v2)
    goto LABEL_7;
  v4 = v2;
  v5 = *(_QWORD **)(sub_22EFC72E8(a1) + 1992);
  v13[0] = *(_QWORD *)(v4 + 24);
  v13[1] = sub_22E47EE80(v14);
  v6 = sub_22F116708(v13);
  v7 = sub_22F1167E8(v13);
  v8 = 0;
  if (!v6 || !v7)
  {
    v10 = 0;
    return v10 | v8;
  }
  v9 = *(_DWORD *)(a1 + 24);
  v10 = 0;
  if (v9)
  {
    v11 = v7;
    if (sub_22F1E3C34(v5, v7, v9))
    {
      v10 = v11 << 32;
      v8 = v6;
      return v10 | v8;
    }
LABEL_7:
    v8 = 0;
    v10 = 0;
  }
  return v10 | v8;
}

unint64_t sub_22F3AC524(uint64_t a1)
{
  int v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v7;

  v2 = sub_22EFBAACC(a1);
  v3 = sub_22F3AC5B8(a1);
  if (v2 | v3)
  {
    v5 = v3;
    v4 = v3;
    if (v2)
      v4 = (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 120) + 16))(**(_QWORD **)(a1 + 120));
    if (!(_DWORD)v5)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8 * (v2 - 1));
      v5 = (unint64_t)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7) >> 32;
    }
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  return v4 | (v5 << 32);
}

uint64_t sub_22F3AC5B8(uint64_t a1)
{
  uint64_t result;
  BOOL v2;
  unint64_t v3;

  result = *(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (result)
    v2 = *(_BYTE *)(result + 16) == 26;
  else
    v2 = 0;
  if (v2)
  {
LABEL_7:
    v3 = *(_QWORD *)(result + 16);
    if ((v3 & 0x800000000000000) != 0)
      return *(unsigned int *)(result + 8 * (unsigned __int16)(v3 >> 38) + 40);
    return 0;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
  {
    result = sub_22F10CF48(result);
    if (!result)
      return result;
    goto LABEL_7;
  }
  return 0;
}

uint64_t sub_22F3AC620(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = sub_22EFC72E8(a1);
  v3 = *(_QWORD *)(v2 + 2000);
  if ((*(_DWORD *)(v3 + 52) & 0x80) != 0)
  {
LABEL_4:
    if ((*(_BYTE *)(v3 + 1) & 1) == 0)
    {
      if ((*(_QWORD *)(a1 + 80) & 0x2E000) != 0x22000)
        return 1;
      v5 = 0;
      v6 = a1;
      do
      {
        v7 = ((*(_QWORD *)(v6 + 80) & 0xE000) != 0x2000) & (*(_QWORD *)(v6 + 80) >> 17);
        if ((((*(_QWORD *)(v6 + 80) & 0xE000) != 0x2000) & (*(_QWORD *)(v6 + 80) >> 17)) != 0)
          break;
        if ((*(_BYTE *)(v6 + 104) & 3) != 0)
        {
          if (v5)
            return v7;
          v5 = 1;
        }
        v8 = sub_22E3CD31C((uint64_t *)(v6 + 104), v6);
        if (v8 == a1)
          break;
        v6 = v8;
      }
      while (v8);
      return v7;
    }
    return 0;
  }
  v4 = v2;
  if (sub_22EA0E0E4(a1))
  {
    v3 = *(_QWORD *)(v4 + 2000);
    goto LABEL_4;
  }
  if (!a1)
    return 0;
  v9 = 0;
  v10 = a1;
  do
  {
    v11 = *(_QWORD *)(v10 + 16);
    v12 = v11 & 0xFFFFFFFFFFFFFFF8;
    if ((v11 & 4) != 0)
      v12 = *(_QWORD *)(v12 + 8);
    if ((*(_WORD *)(v12 + 8) & 0x7F) == 0x53 && (*(_BYTE *)(v10 + 29) & 2) == 0)
    {
      v7 = 1;
      if ((*(_QWORD *)(v10 + 80) & 0x20000) == 0 || (*(_QWORD *)(v10 + 80) & 0xE000) == 0x2000)
        break;
    }
    if ((*(_BYTE *)(v10 + 104) & 3) != 0)
    {
      if (v9)
        return 0;
      v9 = 1;
    }
    v13 = sub_22E3CD31C((uint64_t *)(v10 + 104), v10);
    v7 = 0;
    if (v13 == a1)
      break;
    v10 = v13;
  }
  while (v13);
  return v7;
}

BOOL sub_22F3AC76C(uint64_t a1)
{
  _BOOL8 result;

  result = sub_22E6A2F54(a1);
  if (result)
    return !sub_22EAA34D4(a1);
  return result;
}

uint64_t sub_22F3AC79C(uint64_t a1)
{
  if ((sub_22EFC18B0(a1) & 1) != 0)
    return 0;
  if (sub_22E88FFC4(a1))
    return 1;
  if (sub_22EFC1DF4(a1))
    return 2;
  if (sub_22EFC1EFC(a1))
    return 3;
  if (sub_22EFC1E78(a1))
    return 4;
  if (sub_22EA1DB60(a1))
    return 5;
  if (sub_22E4752A8(a1))
    return 6;
  if (sub_22EA1DBC0(a1))
    return 7;
  if (sub_22E6A2F54(a1) && sub_22EAA34D4(a1))
    return 9;
  if (sub_22E6A2F54(a1) && !sub_22EAA34D4(a1))
    return 10;
  if (!sub_22EFC1F80(a1))
    return 12;
  if (sub_22F31DBB0(a1))
    return 8;
  return 11;
}

void sub_22F3AC8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_22E3CD3D4(a2 + 2032, 32 * *(unsigned int *)(a4 + 8) + 8 * *(unsigned int *)(a3 + 8) + 16, 3);
  sub_22EFC2438(v7, a3, a4);
  *(_QWORD *)(a1 + 144) = v8 | 6;
}

uint64_t sub_22F3AC924(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 120) = a2 & 0xFFFFFFFFFFFFFFFBLL;
  return result;
}

unint64_t sub_22F3AC930(unint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = result;
  v6 = *(_QWORD *)(result + 120);
  if (a2)
  {
    if ((v6 & 4) == 0)
    {
      v7 = sub_22EFC72E8(result);
      result = sub_22E3CD3D4(v7 + 2032, 32, 3);
      *(_QWORD *)(result + 24) = 0;
      v6 = result | 4;
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 16) = 0;
      *(_QWORD *)(v5 + 120) = result | 4;
    }
    v8 = v6 & 0xFFFFFFFFFFFFFFF8;
LABEL_5:
    *(_QWORD *)v8 = a2;
    *(_QWORD *)(v8 + 8) = a3;
    return result;
  }
  if ((v6 & 4) != 0)
  {
    v8 = v6 & 0xFFFFFFFFFFFFFFF8;
    if (!*(_DWORD *)(v8 + 16))
    {
      *(_QWORD *)(result + 120) = 0;
      return result;
    }
    goto LABEL_5;
  }
  return result;
}

unint64_t sub_22F3AC9B8(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t *v4;
  unsigned int v5;
  uint64_t v6[2];

  result = 0;
  v3 = *(_QWORD *)(a1 + 128);
  if ((v3 & 4) != 0)
  {
    v4 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFFF8);
    if (v4)
    {
      v6[0] = *v4;
      v6[1] = (uint64_t)(v4 + 1);
      v5 = sub_22F116708(v6);
      return v5 | (sub_22F1167E8(v6) << 32);
    }
  }
  return result;
}

BOOL sub_22F3ACA14(uint64_t a1)
{
  _BOOL8 result;

  result = sub_22EFC39E4(a1);
  if (result)
    return !sub_22ED30EC8(a1);
  return result;
}

unint64_t sub_22F3ACA44(uint64_t a1)
{
  _QWORD *v1;

  v1 = *(_QWORD **)(a1 + 144);
  if (v1)
    return *v1 & 0xFFFFFFFFFFFFFFF8;
  else
    return 0;
}

unint64_t sub_22F3ACA60(uint64_t a1)
{
  unint64_t v2;
  _QWORD v4[2];
  int v5;
  _QWORD *v6;
  __int128 v7;
  _QWORD v8[18];
  _QWORD v9[17];

  v9[16] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a1 + 77) & 4) != 0)
    return *(unsigned int *)(a1 + 152);
  v4[0] = 0;
  v4[1] = 0;
  v5 = 0;
  v6 = v8;
  v7 = xmmword_22F44E310;
  v8[16] = v9;
  v8[17] = 0x2000000000;
  sub_22F3E9CFC(v4, (uint64_t *)a1);
  *(_QWORD *)(a1 + 72) |= 0x40000000000uLL;
  v2 = sub_22F0BCA28((uint64_t)v4);
  *(_DWORD *)(a1 + 152) = v2;
  sub_22EFC59B8((uint64_t)v4);
  return v2;
}

unint64_t sub_22F3ACB30(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v9;
  uint64_t v10[2];

  v2 = *(unsigned int *)(a1 + 116);
  if (!(_DWORD)v2)
    v2 = *(unsigned int *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 120);
  if ((v3 & 4) != 0 && (v9 = v3 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v9 + 16)))
    v4 = **(unsigned int ***)(v9 + 24);
  else
    v4 = (unsigned int *)(a1 + 56);
  v5 = *v4;
  v6 = *(_QWORD *)(a1 + 128);
  if ((v6 & 4) != 0)
  {
    v7 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF8);
    if (v7)
    {
      if (!*(_DWORD *)(a1 + 116))
      {
        v10[0] = *v7;
        v10[1] = (uint64_t)(v7 + 1);
        v2 = sub_22F1167E8(v10);
      }
    }
  }
  return v5 | (v2 << 32);
}

uint64_t sub_22F3ACBB4(uint64_t a1, char a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v14 = sub_22EFC7430(128, a1, a3, 0);
  v15 = (_QWORD *)sub_22EFC31D8(v14, 34, a2, a1, a3, a5, a6, a7, a4);
  *v15 = &off_24FAC2720;
  v16 = v15[9];
  v15[9] = v16 & 0x7FFFFF;
  *((_DWORD *)v15 + 18) = (*(_QWORD *)(*(_QWORD *)(a1 + 2000) + 20) >> 25) & 0x100000 | v16 & 0x6FFFFF;
  if (!v15[6])
  {
    if (a7)
      *(_QWORD *)(v14 + 48) = *(_QWORD *)(a7 + 48);
    else
      sub_22EF6462C(a1, v14);
  }
  return v14;
}

uint64_t sub_22F3ACCA8(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_22E3CD3D4(a1 + 2032, 136, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EFC31D8(v4 + 8, 34, 0, a1, 0, 0, 0, 0, 0);
  *(_QWORD *)(v4 + 8) = &off_24FAC2720;
  v6 = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v4 + 80) = v6 & 0x7FFFFF;
  *(_DWORD *)(v4 + 80) = (*(_QWORD *)(*(_QWORD *)(a1 + 2000) + 20) >> 25) & 0x100000 | v6 & 0x6FFFFF;
  return result;
}

void sub_22F3ACD50(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  int v6;
  __int16 v7;
  char v8;

  v2 = sub_22EFC72E8(a1);
  v4 = 0uLL;
  v6 = 0;
  v5 = 0;
  v8 = 120;
  v7 = 0;
  v3 = sub_22F3832F8(v2, &v4);
  sub_22EFCA95C(a1, v3);
}

uint64_t sub_22F3ACDA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[65];

  v8[64] = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(sub_22EFC72E8((unint64_t)a1) + 16048);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 160))(v2);
  v6 = v8;
  v7 = 0x4000000000;
  a1[9] |= 0x8000000uLL;
  (*(void (**)(uint64_t, _QWORD *, BOOL (*)(uint64_t, int), char *, void **))(*(_QWORD *)v2 + 112))(v2, a1 + 8, sub_22EFC5BAC, &v5, &v6);
  if ((_DWORD)v7)
  {
    a1[10] = sub_22EFCC21C((uint64_t *)v6, v7, 0);
    a1[11] = v3;
  }
  if (v6 != v8)
    free(v6);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 168))(v2);
}

uint64_t sub_22F3ACE98(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = sub_22EFCC21C(*(uint64_t **)a2, *(unsigned int *)(a2 + 8), 0);
  a1[11] = v4;
  *(_QWORD *)(v4 + 8) &= 7uLL;
  a1[9] |= 0x2000000000uLL;
  a1[10] = result;
  return result;
}

unint64_t sub_22F3ACEE0(uint64_t a1)
{
  unint64_t v1;
  _QWORD v4[2];
  int v5;
  _QWORD *v6;
  __int128 v7;
  _QWORD v8[18];
  _QWORD v9[17];

  v9[16] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 72);
  if (!(v1 >> 38))
  {
    v4[0] = 0;
    v4[1] = 0;
    v5 = 0;
    v6 = v8;
    v7 = xmmword_22F44E310;
    v8[16] = v9;
    v8[17] = 0x2000000000;
    sub_22F0BE420((uint64_t)v4, a1);
    v1 = *(_QWORD *)(a1 + 72) & 0x3FFFFFFFFFLL | ((unint64_t)(sub_22F0BCA28((uint64_t)v4) >> 4) << 38);
    *(_QWORD *)(a1 + 72) = v1;
    sub_22EFC59B8((uint64_t)v4);
  }
  return v1 >> 38;
}

_DWORD *sub_22F3ACFA8(_DWORD *result, const void *a2, unint64_t a3)
{
  _DWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  if (a3)
  {
    v4 = result;
    result[20] = a3;
    v5 = 8 * a3;
    if (a3 >> 61)
      v6 = -1;
    else
      v6 = 8 * a3;
    v7 = sub_22EFC72E8((unint64_t)result);
    v8 = (void *)sub_22E3CD3D4(v7 + 2032, v6, 3);
    *((_QWORD *)v4 + 9) = v8;
    return memmove(v8, a2, v5);
  }
  return result;
}

uint64_t sub_22F3AD00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  if (a5)
    v6 = 0x4000;
  else
    v6 = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a1 + 48) & 0xFFFFBFFF | v6;
  *(_DWORD *)(a1 + 112) = a4;
  if (a4)
  {
    v8 = 16 * a4;
    result = sub_22E3CD3D4(a2 + 2032, 16 * a4, 3);
    v10 = 0;
    do
    {
      *(_OWORD *)(result + v10) = *(_OWORD *)(a3 + v10);
      v10 += 16;
    }
    while (v8 != v10);
  }
  else
  {
    result = 0;
  }
  *(_QWORD *)(a1 + 104) = result;
  return result;
}

uint64_t sub_22F3AD090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned int *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 88);
  if (v2)
    sub_22F0D60E4(v2);
  else
    v3 = v1;
  return v1 | (v3 << 32);
}

uint64_t sub_22F3AD0C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22E3CD3D4(a1 + 2032, 112, 3);
  *(_QWORD *)v2 = 0;
  result = sub_22EA41AB8(v2 + 8, 83, 0, 0);
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = 0;
  *(_WORD *)(v2 + 56) = *(_WORD *)(v2 + 56) & 0xE000 | 0x53;
  *(_QWORD *)(v2 + 80) = a1 | 2;
  *(_QWORD *)(v2 + 88) = result;
  *(_QWORD *)(v2 + 8) = &off_24FAC25C8;
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = 0;
  return result;
}

uint64_t sub_22F3AD14C(uint64_t a1, uint64_t a2, int a3, int a4, const void *a5, size_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a2)
    v10 = a2 + 40;
  else
    v10 = 0;
  v11 = sub_22EFC7430(40, a1, v10, a6 + 1);
  v12 = sub_22EA41AB8(v11, 79, v10, a3);
  *(_QWORD *)v12 = &off_24FAC2938;
  *(_DWORD *)(v12 + 36) = a4;
  v13 = v12 + 40;
  memcpy((void *)(v12 + 40), a5, a6);
  *(_BYTE *)(v13 + a6) = 0;
  return v11;
}

uint64_t sub_22F3AD1E8(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, (a3 + 1) + 48, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 79, 0, 0);
  *(_QWORD *)(v4 + 8) = &off_24FAC2938;
  *(_DWORD *)(v4 + 44) = 0;
  return result;
}

uint64_t sub_22F3AD248(uint64_t a1, uint64_t a2, int a3, const void *a4, size_t a5, const void *a6, size_t a7)
{
  size_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v12 = a5 + 1;
  if (a2)
    v13 = a2 + 40;
  else
    v13 = 0;
  v14 = v12 + a7;
  v15 = sub_22EFC7430(48, a1, v13, v12 + a7 + 1);
  v16 = (_QWORD *)sub_22EA41AB8(v15, 80, v13, a3);
  *v16 = &off_24FAC29A0;
  v16[5] = v12;
  v17 = v16 + 6;
  memcpy(v16 + 6, a4, a5);
  *((_BYTE *)v17 + a5) = 0;
  memcpy((char *)v17 + v12, a6, a7);
  *((_BYTE *)v17 + v14) = 0;
  return v15;
}

uint64_t sub_22F3AD314(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, (a3 + 1) + 56, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 80, 0, 0);
  *(_QWORD *)(v4 + 8) = &off_24FAC29A0;
  *(_QWORD *)(v4 + 48) = 0;
  return result;
}

uint64_t sub_22F3AD374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (a2)
    v2 = a2 + 40;
  else
    v2 = 0;
  v3 = sub_22EFC7430(72, a1, v2, 0);
  result = sub_22EA41AB8(v3, 6, v2, 0);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0xE000 | 6;
  *(_QWORD *)result = &off_24FAC2A08;
  return result;
}

uint64_t sub_22F3AD3E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t result;

  v7 = sub_22EFC7430(80, a1, a2, 0);
  result = sub_22EA41AB8(v7, 15, a2, a3);
  *(_QWORD *)result = &off_24FAC2A70;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_BYTE *)(result + 72) = 0;
  *(_DWORD *)(result + 76) = a3;
  return result;
}

uint64_t sub_22F3AD454(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t result;

  v9 = sub_22EFC7430(80, a1, a2, 0);
  result = sub_22EA41AB8(v9, 15, a2, a3);
  *(_QWORD *)result = &off_24FAC2A70;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_BYTE *)(result + 72) = 0;
  *(_DWORD *)(result + 76) = a5;
  return result;
}

uint64_t sub_22F3AD4C4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 88, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 15, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC2A70;
  *(_DWORD *)(v3 + 84) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 80) = 0;
  return result;
}

size_t sub_22F3AD528(unint64_t a1, const void *a2, size_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  size_t result;

  v6 = a3 + 1;
  v7 = sub_22EFC72E8(a1);
  v8 = (void *)sub_22E3CD3D4(v7 + 2032, v6, 0);
  memcpy(v8, a2, a3);
  *((_BYTE *)v8 + a3) = 0;
  result = strlen((const char *)v8);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = result;
  return result;
}

uint64_t sub_22F3AD594(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)sub_22E3CD3D4(a1 + 2032, 112, 3);
  *v6 = 0;
  return sub_22F3AE53C((uint64_t)(v6 + 1), a1, a2, a3);
}

uint64_t sub_22F3AD5E0(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 112, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 62, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_DWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 80) = a1 | 2;
  *(_QWORD *)(v4 + 88) = result;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC3008;
  *(_DWORD *)(v4 + 104) = 1310720;
  *(_DWORD *)(v4 + 36) |= 0x200u;
  return result;
}

double sub_22F3AD66C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;

  v5 = sub_22EFC7430(128, a1, a2, 0);
  return sub_22EFC42F4(v5, a2, a3);
}

double sub_22F3AD6A8(uint64_t a1, int a2)
{
  _DWORD *v3;

  v3 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 136, 3);
  *v3 = 0;
  v3[1] = a2;
  return sub_22EFC42F4((uint64_t)(v3 + 2), 0, 0);
}

uint64_t sub_22F3AD6E8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = sub_22EFC7430(88, a1, a2, 8 * a3);
  result = sub_22EA41AB8(v5, 2, a2, 0);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0xE000 | 2;
  *(_QWORD *)result = &off_24FAC2800;
  *(_DWORD *)(result + 72) = a3;
  *(_DWORD *)(result + 76) = 0;
  *(_QWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_22F3AD758(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = sub_22E3CD3D4(a1 + 2032, 8 * a3 + 96, 3);
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 4) = a2;
  result = sub_22EA41AB8(v5 + 8, 2, 0, 0);
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = 0;
  *(_WORD *)(v5 + 56) = *(_WORD *)(v5 + 56) & 0xE000 | 2;
  *(_QWORD *)(v5 + 8) = &off_24FAC2800;
  *(_DWORD *)(v5 + 80) = a3;
  *(_DWORD *)(v5 + 84) = 0;
  *(_QWORD *)(v5 + 88) = 0;
  return result;
}

unint64_t sub_22F3AD7DC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 80) & 0xFFFFFFFFFFFFFFF8;
}

uint64_t sub_22F3AD7E8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 80) = *(_QWORD *)(result + 80) & 7 | a2;
  return result;
}

uint64_t sub_22F3AD7FC(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 80) >> 2) & 1;
}

uint64_t sub_22F3AD808(uint64_t result, int a2)
{
  uint64_t v2;

  v2 = 4;
  if (!a2)
    v2 = 0;
  *(_QWORD *)(result + 80) = *(_QWORD *)(result + 80) & 0xFFFFFFFFFFFFFFFBLL | v2;
  return result;
}

uint64_t sub_22F3AD82C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14;
  uint64_t result;

  v14 = sub_22EFC7430(72, a1, a2, 0);
  result = sub_22EA41AB8(v14, 68, a2, a3);
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)result = &off_24FAC2860;
  *(_QWORD *)(result + 56) = a6;
  *(_DWORD *)(result + 64) = a7;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 2000) + 1) & 1) != 0)
    *(_DWORD *)(result + 28) |= 0x20000u;
  return result;
}

uint64_t sub_22F3AD8CC(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 68, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC2860;
  *(_QWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 72) = 0;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 2000) + 1) & 1) != 0)
    *(_DWORD *)(v4 + 36) |= 0x20000u;
  return result;
}

uint64_t sub_22F3AD950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned int *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 56);
  if (v2)
    sub_22F0D60E4(v2);
  else
    v3 = v1;
  return v1 | (v3 << 32);
}

unint64_t sub_22F3AD98C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6[2];

  v2 = *(unsigned int *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if ((v3 & 4) != 0)
    v4 = (uint64_t *)*v4;
  if (v4 && sub_22EFBB538(*v4))
  {
    v6[0] = *v4;
    v6[1] = (uint64_t)(v4 + 1);
    sub_22F116708(v6);
    v2 = sub_22F1167E8(v6);
  }
  return *(unsigned int *)(a1 + 56) | (v2 << 32);
}

unint64_t sub_22F3ADA00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v7[2];

  v2 = *(_QWORD *)(a1 + 80);
  v3 = (_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if ((v2 & 4) != 0)
    v3 = (_QWORD *)*v3;
  if (v3)
  {
    v7[0] = *v3;
    v7[1] = (uint64_t)(v3 + 1);
    sub_22F116708(v7);
    v4 = sub_22F1167E8(v7);
    v5 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    v5 = *(_DWORD *)(a1 + 56);
    v4 = v5;
  }
  return v5 | (v4 << 32);
}

uint64_t sub_22F3ADA6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v9;
  uint64_t result;

  v9 = sub_22EFC7430(56, a1, a2, 0);
  result = sub_22EA41AB8(v9, 7, a2, a4);
  *(_QWORD *)result = &off_24FAC2D40;
  *(_QWORD *)(result + 40) = a3;
  *(_DWORD *)(result + 48) = a5;
  return result;
}

uint64_t sub_22F3ADAD4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 64, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 7, 0, 0);
  *(_QWORD *)(v3 + 8) = &off_24FAC2D40;
  *(_QWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  return result;
}

_QWORD *sub_22F3ADB34(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  _QWORD *result;

  v5 = sub_22EFC7430(40, a1, a2, 0);
  result = (_QWORD *)sub_22EA41AB8(v5, 4, a2, a3);
  *result = &off_24FAC2E10;
  return result;
}

uint64_t sub_22F3ADB84(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 4, 0, 0);
  *(_QWORD *)(v3 + 8) = &off_24FAC2E10;
  return result;
}

_QWORD *sub_22F3ADBD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  _DWORD *v14;
  int v15;

  v11 = 4 * a6;
  v12 = sub_22EFC7430(56, a1, a2, 4 * a6);
  result = (_QWORD *)sub_22EA41AB8(v12, 10, a2, a3);
  *result = &off_24FAC28D8;
  result[5] = a4;
  result[6] = 4;
  if (a6)
  {
    v14 = result + 7;
    do
    {
      v15 = *a5++;
      *v14++ = v15;
      v11 -= 4;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_22F3ADC68(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 4 * a3 + 64, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22E7B5130(v4 + 8, 10);
  *(_QWORD *)(v4 + 8) = &off_24FAC28D8;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  return result;
}

uint64_t sub_22F3ADCBC(uint64_t a1)
{
  int v2;
  uint64_t v3;

  if ((*(_BYTE *)(a1 + 48) & 4) == 0)
    return 0;
  v2 = 0;
  v3 = *(_QWORD *)(a1 + 40);
  do
  {
    v3 = *(_QWORD *)(v3 + 32);
    ++v2;
  }
  while (v3);
  return a1 + 56;
}

unint64_t sub_22F3ADCEC(uint64_t a1)
{
  unsigned int *v1;
  unsigned int v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 48) & 4) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(a1 + 40);
    do
    {
      v4 = *(_QWORD *)(v4 + 32);
      ++v3;
    }
    while (v4);
    v1 = (unsigned int *)(a1 + 4 * v3 + 52);
  }
  else
  {
    v1 = (unsigned int *)(a1 + 56);
  }
  return *(unsigned int *)(a1 + 24) | ((unint64_t)*v1 << 32);
}

uint64_t sub_22F3ADD2C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = sub_22EFC7430(80, a1, a2, 0);
  result = sub_22EA41AB8(v5, 5, a2, a3);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0xE000 | 5;
  *(_QWORD *)result = &off_24FAC2DA8;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_22F3ADD9C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 88, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 5, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_WORD *)(v3 + 56) = *(_WORD *)(v3 + 56) & 0xE000 | 5;
  *(_QWORD *)(v3 + 8) = &off_24FAC2DA8;
  *(_DWORD *)(v3 + 80) = 0;
  return result;
}

void sub_22F3ADE14()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3ADE28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32);
}

uint64_t sub_22F3ADE34()
{
  return 0;
}

BOOL sub_22F3ADE3C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1) != 0;
}

void sub_22F3ADE64()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3ADE78(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return a1;
}

void sub_22F3ADEA0(uint64_t a1)
{
  nullsub_910(a1 + 40);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3ADEDC()
{
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3ADEF4()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3ADF08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32);
}

void sub_22F3ADF1C()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3ADF30(_QWORD *result)
{
  *result = &off_24FAC3080;
  return result;
}

void sub_22F3ADF40(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3ADF60(_QWORD *result)
{
  *result = &off_24FAC3080;
  return result;
}

void sub_22F3ADF70(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3ADF90(_QWORD *result)
{
  *result = &off_24FAC3080;
  return result;
}

void sub_22F3ADFA0(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3ADFC4()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3ADFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  LODWORD(v1) = *(_DWORD *)(a1 + 56);
  v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v1)
    v1 = v1;
  else
    v1 = v2;
  return v1 | (v2 << 32);
}

void sub_22F3ADFF4()
{
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3AE00C()
{
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3AE024()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3AE038(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 48) << 32);
}

void sub_22F3AE04C()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE060(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return a1;
}

void sub_22F3AE088(uint64_t a1)
{
  nullsub_910(a1 + 40);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3AE0C0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(unsigned int *)(a1 + 24);
  return v1 | (sub_22F3AE5B0(a1) << 32);
}

void sub_22F3AE0E8()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3AE0FC(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return a1;
}

void sub_22F3AE12C(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE16C(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return a1;
}

void sub_22F3AE194(uint64_t a1)
{
  nullsub_910(a1 + 64);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE1CC(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return a1;
}

void sub_22F3AE1F4(uint64_t a1)
{
  nullsub_910(a1 + 64);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3AE230(llvm::PrettyStackTraceEntry *a1)
{
  llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE254(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return a1;
}

void sub_22F3AE27C(uint64_t a1)
{
  nullsub_910(a1 + 40);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3AE2B4(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 72), a1);
}

unint64_t sub_22F3AE2C0(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 72);
  v2 = (uint64_t *)(a1 + 72);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

uint64_t sub_22F3AE2DC(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return a1;
}

void sub_22F3AE304(uint64_t a1)
{
  nullsub_910(a1 + 64);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE33C(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return a1;
}

void sub_22F3AE364(uint64_t a1)
{
  nullsub_910(a1 + 40);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE39C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 88);
}

uint64_t sub_22F3AE3A4(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return a1;
}

void sub_22F3AE3CC(uint64_t a1)
{
  nullsub_910(a1 + 40);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3AE408()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3AE41C(uint64_t result, uint64_t a2, uint64_t a3)
{
  _DWORD *v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v11;
  _QWORD *v12;

  v5 = (_DWORD *)result;
  v6 = *(_DWORD *)result;
  *(_QWORD *)result = *(_DWORD *)result & 1;
  if ((v6 & 1) != 0)
  {
    v8 = (_QWORD *)(result + 8);
    v9 = (_QWORD *)(result + 136);
  }
  else
  {
    v7 = *(unsigned int *)(result + 16);
    if (!(_DWORD)v7)
      goto LABEL_13;
    v8 = *(_QWORD **)(result + 8);
    v9 = &v8[2 * v7];
  }
  do
  {
    *v8 = -1;
    v8 += 2;
  }
  while (v8 != v9);
LABEL_13:
  while (a2 != a3)
  {
    if (*(_QWORD *)a2 != -16 && *(_QWORD *)a2 != -1)
    {
      v12 = 0;
      result = sub_22EFC4F0C((uint64_t)v5, (_QWORD *)a2, &v12);
      v11 = v12;
      *v12 = *(_QWORD *)a2;
      *((_BYTE *)v11 + 8) = *(_BYTE *)(a2 + 8);
      *v5 += 2;
    }
    a2 += 16;
  }
  return result;
}

uint64_t sub_22F3AE4E0(uint64_t a1)
{
  char v2;

  v2 = sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0), "imageblock", 10, 1, 0);
  if (a1 && (v2 & 1) != 0)
    return a1;
  else
    return sub_22F10CF48(a1);
}

uint64_t sub_22F3AE53C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = sub_22EA41AB8(a1, 62, 0, 0);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = a3;
  *(_QWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = a2 | 2;
  *(_QWORD *)(result + 80) = result;
  *(_QWORD *)(result + 88) = 0;
  *(_QWORD *)result = &off_24FAC3008;
  *(_DWORD *)(result + 96) = (a4 & 7) << 18;
  *(_DWORD *)(result + 28) |= 0x200u;
  return result;
}

unint64_t sub_22F3AE5B0(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = *(unsigned int *)(a1 + 72);
  if (!(_DWORD)result)
  {
    if (sub_22EFCCC7C(a1 + 40))
    {
      return *(unsigned int *)(a1 + 24);
    }
    else
    {
      v3 = sub_22EFCCC4C(a1 + 40);
      return (unint64_t)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3) >> 32;
    }
  }
  return result;
}

llvm::raw_ostream *sub_22F3AE608(llvm *a1)
{
  uint64_t v2;
  llvm::raw_ostream *result;
  _BYTE *v4;

  v2 = llvm::errs(a1);
  result = (llvm::raw_ostream *)sub_22EFC6724(v2, *(_QWORD *)a1);
  v4 = (_BYTE *)*((_QWORD *)result + 4);
  if ((unint64_t)v4 >= *((_QWORD *)result + 3))
    return (llvm::raw_ostream *)llvm::raw_ostream::write(result);
  *((_QWORD *)result + 4) = v4 + 1;
  *v4 = 10;
  return result;
}

uint64_t sub_22F3AE65C(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t NodeOrInsertPos;
  uint64_t v5;
  void *v7[2];
  _QWORD v8[17];

  v8[16] = *MEMORY[0x24BDAC8D0];
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  v7[0] = v8;
  v7[1] = (void *)0x2000000000;
  sub_22E3CF554((uint64_t)v7, v3);
  NodeOrInsertPos = llvm::FoldingSetBase::FindNodeOrInsertPos();
  if (NodeOrInsertPos)
  {
    v5 = NodeOrInsertPos - 8;
  }
  else
  {
    v5 = sub_22E3CD3D4(*a1 + 2032, 32, 3);
    *(_DWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = 0;
    llvm::FoldingSetBase::InsertNode();
  }
  if (v7[0] != v8)
    free(v7[0]);
  return v5 | 7;
}

uint64_t sub_22F3AE768(_QWORD *a1, uint64_t a2)
{
  uint64_t NodeOrInsertPos;
  uint64_t v5;
  void *v7[2];
  _QWORD v8[17];

  v8[16] = *MEMORY[0x24BDAC8D0];
  v7[0] = v8;
  v7[1] = (void *)0x2000000000;
  sub_22E3CF554((uint64_t)v7, a2);
  NodeOrInsertPos = llvm::FoldingSetBase::FindNodeOrInsertPos();
  if (NodeOrInsertPos)
  {
    v5 = NodeOrInsertPos - 8;
  }
  else
  {
    v5 = sub_22E3CD3D4(*a1 + 2032, 32, 3);
    *(_DWORD *)v5 = 1;
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = a2;
    *(_QWORD *)(v5 + 24) = 0;
    llvm::FoldingSetBase::InsertNode();
  }
  if (v7[0] != v8)
    free(v7[0]);
  return v5 | 7;
}

llvm::raw_ostream *sub_22F3AE864(llvm::raw_ostream *a1, _QWORD *a2)
{
  unint64_t v5[2];
  unsigned int v6[216];
  _BYTE v7[864];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  sub_22F1D4230((uint64_t)v7);
  sub_22F1D4230((uint64_t)v6);
  sub_22E462F04(v5, v6);
  sub_22EFC6F2C(a2, a1, v5[0], v5[1]);
  sub_22E54B4D4((uint64_t)v6);
  sub_22E54B4D4((uint64_t)v7);
  return a1;
}

uint64_t sub_22F3AE900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a2 - 8;
  if (!a2)
    v3 = 0;
  return sub_22E3CF554(a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_22F3AE918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = a2 - 8;
  if (!a2)
    v5 = 0;
  sub_22E3CF554(a5, *(_QWORD *)(v5 + 16));
  return llvm::FoldingSetNodeID::operator==();
}

unint64_t sub_22F3AE958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a2 - 8;
  if (!a2)
    v4 = 0;
  sub_22E3CF554(a3, *(_QWORD *)(v4 + 16));
  return sub_22E3D0BF8(*(_QWORD **)a3, *(_QWORD *)a3 + 4 * *(unsigned int *)(a3 + 8));
}

uint64_t sub_22F3AE99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22E3CF554(a3, *(_QWORD *)(a2 + 8));
}

uint64_t sub_22F3AE9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a2 - 8;
  if (!a2)
    v3 = 0;
  return sub_22E3CF554(a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_22F3AE9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = a2 - 8;
  if (!a2)
    v5 = 0;
  sub_22E3CF554(a5, *(_QWORD *)(v5 + 16));
  return llvm::FoldingSetNodeID::operator==();
}

unint64_t sub_22F3AEA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a2 - 8;
  if (!a2)
    v4 = 0;
  sub_22E3CF554(a3, *(_QWORD *)(v4 + 16));
  return sub_22E3D0BF8(*(_QWORD **)a3, *(_QWORD *)a3 + 4 * *(unsigned int *)(a3 + 8));
}

char *sub_22F3AEA44(uint64_t a1)
{
  return off_24FAC31E0[*(_DWORD *)(a1 + 28) & 0x7F];
}

void sub_22F3AEA5C()
{
  byte_255E04EB0 = 1;
}

llvm::raw_ostream *sub_22F3AEA6C(llvm *a1)
{
  llvm::raw_ostream *v1;
  llvm *v2;
  llvm::raw_ostream *v3;
  llvm::raw_ostream *v4;
  llvm *v5;
  llvm::raw_ostream *v6;
  llvm::raw_ostream *v7;
  llvm::raw_ostream *v8;
  llvm::raw_ostream *v9;
  llvm::raw_ostream *v10;
  llvm::raw_ostream *v11;
  llvm::raw_ostream *v12;
  llvm::raw_ostream *v13;
  llvm::raw_ostream *v14;
  llvm::raw_ostream *v15;
  llvm::raw_ostream *v16;
  llvm::raw_ostream *v17;
  llvm::raw_ostream *v18;
  llvm::raw_ostream *v19;
  llvm::raw_ostream *v20;
  llvm::raw_ostream *v21;
  llvm::raw_ostream *v22;
  llvm::raw_ostream *v23;
  llvm::raw_ostream *v24;
  llvm::raw_ostream *v25;
  llvm::raw_ostream *v26;
  llvm::raw_ostream *v27;
  llvm::raw_ostream *v28;
  llvm::raw_ostream *v29;
  llvm::raw_ostream *v30;
  llvm::raw_ostream *v31;
  llvm::raw_ostream *v32;
  llvm::raw_ostream *v33;
  llvm::raw_ostream *v34;
  llvm::raw_ostream *v35;
  llvm::raw_ostream *v36;
  llvm::raw_ostream *v37;
  llvm::raw_ostream *v38;
  llvm::raw_ostream *v39;
  llvm::raw_ostream *v40;
  llvm::raw_ostream *v41;
  llvm::raw_ostream *v42;
  llvm::raw_ostream *v43;
  llvm::raw_ostream *v44;
  llvm::raw_ostream *v45;
  llvm::raw_ostream *v46;
  llvm::raw_ostream *v47;
  llvm::raw_ostream *v48;
  llvm::raw_ostream *v49;
  llvm::raw_ostream *v50;
  llvm::raw_ostream *v51;
  llvm::raw_ostream *v52;
  llvm::raw_ostream *v53;
  llvm::raw_ostream *v54;
  llvm::raw_ostream *v55;
  llvm::raw_ostream *v56;
  llvm::raw_ostream *v57;
  llvm::raw_ostream *v58;
  llvm::raw_ostream *v59;
  llvm::raw_ostream *v60;
  llvm::raw_ostream *v61;
  llvm::raw_ostream *v62;
  llvm::raw_ostream *v63;
  llvm::raw_ostream *v64;
  llvm::raw_ostream *v65;
  llvm::raw_ostream *v66;
  llvm::raw_ostream *v67;
  llvm::raw_ostream *v68;
  llvm::raw_ostream *v69;
  llvm::raw_ostream *v70;
  llvm::raw_ostream *v71;
  llvm::raw_ostream *v72;
  llvm::raw_ostream *v73;
  llvm::raw_ostream *v74;
  llvm::raw_ostream *v75;
  llvm::raw_ostream *v76;
  llvm::raw_ostream *v77;
  llvm::raw_ostream *v78;
  llvm::raw_ostream *v79;
  llvm::raw_ostream *v80;
  llvm::raw_ostream *v81;
  llvm::raw_ostream *v82;
  llvm::raw_ostream *v83;
  llvm::raw_ostream *v84;
  llvm::raw_ostream *v85;
  llvm::raw_ostream *v86;
  llvm::raw_ostream *v87;
  llvm::raw_ostream *v88;
  llvm::raw_ostream *v89;
  llvm::raw_ostream *v90;
  llvm::raw_ostream *v91;
  llvm::raw_ostream *v92;
  llvm::raw_ostream *v93;
  llvm::raw_ostream *v94;
  llvm::raw_ostream *v95;
  llvm::raw_ostream *v96;
  llvm::raw_ostream *v97;
  llvm::raw_ostream *v98;
  llvm::raw_ostream *v99;
  llvm::raw_ostream *v100;
  llvm::raw_ostream *v101;
  llvm::raw_ostream *v102;
  llvm::raw_ostream *v103;
  llvm::raw_ostream *v104;
  llvm::raw_ostream *v105;
  llvm::raw_ostream *v106;
  llvm::raw_ostream *v107;
  llvm::raw_ostream *v108;
  llvm::raw_ostream *v109;
  llvm::raw_ostream *v110;
  llvm::raw_ostream *v111;
  llvm::raw_ostream *v112;
  llvm::raw_ostream *v113;
  llvm::raw_ostream *v114;
  llvm::raw_ostream *v115;
  llvm::raw_ostream *v116;
  llvm::raw_ostream *v117;
  llvm::raw_ostream *v118;
  llvm::raw_ostream *v119;
  llvm::raw_ostream *v120;
  llvm::raw_ostream *v121;
  llvm::raw_ostream *v122;
  llvm::raw_ostream *v123;
  llvm::raw_ostream *v124;
  llvm::raw_ostream *v125;
  llvm::raw_ostream *v126;
  llvm::raw_ostream *v127;
  llvm::raw_ostream *v128;
  llvm::raw_ostream *v129;
  llvm::raw_ostream *v130;
  llvm::raw_ostream *v131;
  llvm::raw_ostream *v132;
  llvm::raw_ostream *v133;
  llvm::raw_ostream *v134;
  llvm::raw_ostream *v135;
  llvm::raw_ostream *v136;
  llvm::raw_ostream *v137;
  llvm::raw_ostream *v138;
  llvm::raw_ostream *v139;
  llvm::raw_ostream *v140;
  llvm::raw_ostream *v141;
  llvm::raw_ostream *v142;
  llvm::raw_ostream *v143;
  llvm::raw_ostream *v144;
  llvm::raw_ostream *v145;
  llvm::raw_ostream *v146;
  llvm::raw_ostream *v147;
  llvm::raw_ostream *v148;
  llvm::raw_ostream *v149;
  llvm::raw_ostream *v150;
  llvm::raw_ostream *v151;
  llvm::raw_ostream *v152;
  llvm::raw_ostream *v153;
  llvm::raw_ostream *v154;
  llvm::raw_ostream *v155;
  llvm::raw_ostream *v156;
  llvm::raw_ostream *v157;
  llvm::raw_ostream *v158;
  llvm::raw_ostream *v159;
  llvm::raw_ostream *v160;
  llvm::raw_ostream *v161;
  llvm::raw_ostream *v162;
  llvm::raw_ostream *v163;
  llvm::raw_ostream *v164;
  llvm::raw_ostream *v165;
  llvm::raw_ostream *v166;
  llvm::raw_ostream *v167;
  llvm::raw_ostream *v168;
  llvm::raw_ostream *v169;
  llvm::raw_ostream *v170;
  llvm::raw_ostream *v171;
  llvm::raw_ostream *v172;
  llvm::raw_ostream *v173;
  llvm::raw_ostream *v174;
  llvm::raw_ostream *v175;
  llvm::raw_ostream *v176;
  llvm::raw_ostream *v177;
  llvm::raw_ostream *v178;
  llvm::raw_ostream *v179;
  llvm::raw_ostream *v180;
  llvm::raw_ostream *v181;
  llvm::raw_ostream *v182;
  llvm::raw_ostream *v183;
  llvm::raw_ostream *v184;
  llvm::raw_ostream *v185;
  llvm::raw_ostream *v186;
  llvm::raw_ostream *v187;
  llvm::raw_ostream *v188;
  llvm::raw_ostream *v189;
  llvm::raw_ostream *v190;
  llvm::raw_ostream *v191;
  llvm::raw_ostream *v192;
  llvm::raw_ostream *v193;
  llvm::raw_ostream *v194;
  llvm::raw_ostream *v195;
  llvm::raw_ostream *v196;
  llvm::raw_ostream *v197;
  llvm::raw_ostream *v198;
  llvm::raw_ostream *v199;
  llvm::raw_ostream *v200;
  llvm::raw_ostream *v201;
  llvm::raw_ostream *v202;
  llvm::raw_ostream *v203;
  llvm::raw_ostream *v204;
  llvm::raw_ostream *v205;
  llvm::raw_ostream *v206;
  llvm::raw_ostream *v207;
  llvm::raw_ostream *v208;
  llvm::raw_ostream *v209;
  llvm::raw_ostream *v210;
  llvm::raw_ostream *v211;
  llvm::raw_ostream *v212;
  llvm::raw_ostream *v213;
  llvm::raw_ostream *v214;
  llvm::raw_ostream *v215;
  llvm::raw_ostream *v216;
  llvm::raw_ostream *v217;
  llvm::raw_ostream *v218;
  llvm::raw_ostream *v219;
  llvm::raw_ostream *v220;
  llvm::raw_ostream *v221;
  llvm::raw_ostream *v222;
  llvm::raw_ostream *v223;
  llvm::raw_ostream *v224;
  llvm::raw_ostream *v225;
  llvm::raw_ostream *v226;
  llvm::raw_ostream *v227;
  llvm::raw_ostream *v228;
  llvm::raw_ostream *v229;
  llvm::raw_ostream *v230;
  llvm::raw_ostream *v231;
  llvm::raw_ostream *v232;
  llvm::raw_ostream *v233;
  llvm::raw_ostream *v234;
  llvm::raw_ostream *v235;
  llvm::raw_ostream *v236;
  llvm::raw_ostream *v237;
  llvm::raw_ostream *v238;
  llvm::raw_ostream *v239;
  llvm::raw_ostream *v240;
  llvm::raw_ostream *v241;
  llvm::raw_ostream *v242;
  llvm::raw_ostream *v243;
  llvm::raw_ostream *v244;
  llvm::raw_ostream *v245;
  llvm::raw_ostream *v246;
  llvm::raw_ostream *v247;
  llvm::raw_ostream *v248;
  llvm::raw_ostream *v249;
  llvm::raw_ostream *v250;
  llvm::raw_ostream *v251;
  llvm::raw_ostream *v252;
  llvm::raw_ostream *v253;
  llvm::raw_ostream *v254;
  llvm::raw_ostream *v255;
  llvm::raw_ostream *v256;
  llvm::raw_ostream *v257;
  llvm::raw_ostream *v258;
  llvm::raw_ostream *v259;
  llvm::raw_ostream *v260;
  llvm::raw_ostream *v261;
  llvm::raw_ostream *v262;
  llvm::raw_ostream *v263;
  llvm::raw_ostream *v264;
  llvm::raw_ostream *v265;
  llvm::raw_ostream *v266;
  llvm::raw_ostream *v267;
  llvm::raw_ostream *v268;
  llvm::raw_ostream *v269;
  llvm::raw_ostream *v270;
  llvm::raw_ostream *v271;
  llvm::raw_ostream *v272;
  llvm::raw_ostream *v273;
  llvm::raw_ostream *v274;
  llvm::raw_ostream *v275;
  llvm::raw_ostream *v276;
  llvm::raw_ostream *v277;
  llvm::raw_ostream *v278;
  llvm::raw_ostream *v279;
  llvm::raw_ostream *v280;
  llvm::raw_ostream *v281;
  llvm::raw_ostream *v282;
  llvm::raw_ostream *v283;
  llvm::raw_ostream *v284;
  llvm::raw_ostream *v285;
  llvm::raw_ostream *v286;
  llvm::raw_ostream *v287;
  llvm::raw_ostream *v288;
  llvm::raw_ostream *v289;
  llvm::raw_ostream *v290;
  llvm::raw_ostream *v291;
  llvm::raw_ostream *v292;
  llvm::raw_ostream *v293;
  llvm::raw_ostream *v294;
  llvm::raw_ostream *v295;
  llvm::raw_ostream *v296;
  llvm::raw_ostream *v297;
  llvm::raw_ostream *v298;
  llvm::raw_ostream *v299;
  llvm::raw_ostream *v300;
  llvm::raw_ostream *v301;
  llvm::raw_ostream *v302;
  llvm::raw_ostream *v303;
  llvm::raw_ostream *v304;
  llvm::raw_ostream *v305;
  llvm::raw_ostream *v306;
  llvm::raw_ostream *v307;
  llvm::raw_ostream *v308;
  llvm::raw_ostream *v309;
  llvm::raw_ostream *v310;
  llvm::raw_ostream *v311;
  llvm::raw_ostream *v312;
  llvm::raw_ostream *v313;
  llvm::raw_ostream *v314;
  llvm::raw_ostream *v315;
  llvm::raw_ostream *v316;
  llvm::raw_ostream *v317;
  llvm::raw_ostream *v318;
  llvm::raw_ostream *v319;
  llvm::raw_ostream *v320;
  llvm::raw_ostream *v321;
  llvm::raw_ostream *v322;
  llvm::raw_ostream *v323;
  llvm::raw_ostream *v324;
  llvm::raw_ostream *v325;
  llvm::raw_ostream *v326;
  llvm::raw_ostream *v327;
  llvm::raw_ostream *v328;
  llvm::raw_ostream *v329;
  llvm::raw_ostream *v330;
  llvm::raw_ostream *v331;
  llvm::raw_ostream *v332;
  llvm::raw_ostream *v333;
  llvm::raw_ostream *v334;
  llvm::raw_ostream *v335;
  llvm::raw_ostream *v336;
  llvm::raw_ostream *v337;
  llvm::raw_ostream *v338;
  llvm::raw_ostream *v339;
  llvm::raw_ostream *v340;
  llvm::raw_ostream *v341;
  llvm::raw_ostream *v342;
  llvm::raw_ostream *v343;

  v1 = (llvm::raw_ostream *)llvm::errs(a1);
  v2 = sub_22E47DAC0(v1, "\n*** Decl Stats:\n");
  v3 = (llvm::raw_ostream *)llvm::errs(v2);
  sub_22E47DAC0(v3, "  ");
  v4 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  v5 = sub_22E47DAC0(v4, " decls total.\n");
  if (dword_253E4C0F8 >= 1)
  {
    v6 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v6, "    ");
    v7 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v7, " AccessSpec decls, ");
    v8 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v8, " each (");
    v9 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v9, " bytes)\n");
  }
  if (dword_253E4C0FC >= 1)
  {
    v10 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v10, "    ");
    v11 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v11, " Block decls, ");
    v12 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v12, " each (");
    v13 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v13, " bytes)\n");
  }
  if (dword_253E4C100 >= 1)
  {
    v14 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v14, "    ");
    v15 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v15, " Captured decls, ");
    v16 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v16, " each (");
    v17 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v17, " bytes)\n");
  }
  if (dword_253E4C104 >= 1)
  {
    v18 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v18, "    ");
    v19 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v19, " ClassScopeFunctionSpecialization decls, ");
    v20 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v20, " each (");
    v21 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v21, " bytes)\n");
  }
  if (dword_253E4C108 >= 1)
  {
    v22 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v22, "    ");
    v23 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v23, " Empty decls, ");
    v24 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v24, " each (");
    v25 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v25, " bytes)\n");
  }
  if (dword_253E4C10C >= 1)
  {
    v26 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v26, "    ");
    v27 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v27, " Export decls, ");
    v28 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v28, " each (");
    v29 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v29, " bytes)\n");
  }
  if (dword_253E4C110 >= 1)
  {
    v30 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v30, "    ");
    v31 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v31, " ExternCContext decls, ");
    v32 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v32, " each (");
    v33 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v33, " bytes)\n");
  }
  if (dword_253E4C114 >= 1)
  {
    v34 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v34, "    ");
    v35 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v35, " FileScopeAsm decls, ");
    v36 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v36, " each (");
    v37 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v37, " bytes)\n");
  }
  if (dword_253E4C118 >= 1)
  {
    v38 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v38, "    ");
    v39 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v39, " Friend decls, ");
    v40 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v40, " each (");
    v41 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v41, " bytes)\n");
  }
  if (dword_253E4C11C >= 1)
  {
    v42 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v42, "    ");
    v43 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v43, " FriendTemplate decls, ");
    v44 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v44, " each (");
    v45 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v45, " bytes)\n");
  }
  if (dword_253E4C120 >= 1)
  {
    v46 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v46, "    ");
    v47 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v47, " Import decls, ");
    v48 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v48, " each (");
    v49 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v49, " bytes)\n");
  }
  if (dword_253E4C124 >= 1)
  {
    v50 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v50, "    ");
    v51 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v51, " LifetimeExtendedTemporary decls, ");
    v52 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v52, " each (");
    v53 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v53, " bytes)\n");
  }
  if (dword_253E4C128 >= 1)
  {
    v54 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v54, "    ");
    v55 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v55, " LinkageSpec decls, ");
    v56 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v56, " each (");
    v57 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v57, " bytes)\n");
  }
  if (dword_253E4C12C >= 1)
  {
    v58 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v58, "    ");
    v59 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v59, " Using decls, ");
    v60 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v60, " each (");
    v61 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v61, " bytes)\n");
  }
  if (dword_253E4C130 >= 1)
  {
    v62 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v62, "    ");
    v63 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v63, " UsingEnum decls, ");
    v64 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v64, " each (");
    v65 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v65, " bytes)\n");
  }
  if (dword_253E4C134 >= 1)
  {
    v66 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v66, "    ");
    v67 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v67, " Label decls, ");
    v68 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v68, " each (");
    v69 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v69, " bytes)\n");
  }
  if (dword_253E4C138 >= 1)
  {
    v70 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v70, "    ");
    v71 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v71, " Namespace decls, ");
    v72 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v72, " each (");
    v73 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v73, " bytes)\n");
  }
  if (dword_253E4C13C >= 1)
  {
    v74 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v74, "    ");
    v75 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v75, " NamespaceAlias decls, ");
    v76 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v76, " each (");
    v77 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v77, " bytes)\n");
  }
  if (dword_253E4C140 >= 1)
  {
    v78 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v78, "    ");
    v79 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v79, " ObjCCompatibleAlias decls, ");
    v80 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v80, " each (");
    v81 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v81, " bytes)\n");
  }
  if (dword_253E4C144 >= 1)
  {
    v82 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v82, "    ");
    v83 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v83, " ObjCCategory decls, ");
    v84 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v84, " each (");
    v85 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v85, " bytes)\n");
  }
  if (dword_253E4C148 >= 1)
  {
    v86 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v86, "    ");
    v87 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v87, " ObjCCategoryImpl decls, ");
    v88 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v88, " each (");
    v89 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v89, " bytes)\n");
  }
  if (dword_253E4C14C >= 1)
  {
    v90 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v90, "    ");
    v91 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v91, " ObjCImplementation decls, ");
    v92 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v92, " each (");
    v93 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v93, " bytes)\n");
  }
  if (dword_253E4C150 >= 1)
  {
    v94 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v94, "    ");
    v95 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v95, " ObjCInterface decls, ");
    v96 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v96, " each (");
    v97 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v97, " bytes)\n");
  }
  if (dword_253E4C154 >= 1)
  {
    v98 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v98, "    ");
    v99 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v99, " ObjCProtocol decls, ");
    v100 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v100, " each (");
    v101 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v101, " bytes)\n");
  }
  if (dword_253E4C158 >= 1)
  {
    v102 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v102, "    ");
    v103 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v103, " ObjCMethod decls, ");
    v104 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v104, " each (");
    v105 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v105, " bytes)\n");
  }
  if (dword_253E4C15C >= 1)
  {
    v106 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v106, "    ");
    v107 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v107, " ObjCProperty decls, ");
    v108 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v108, " each (");
    v109 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v109, " bytes)\n");
  }
  if (dword_253E4C160 >= 1)
  {
    v110 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v110, "    ");
    v111 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v111, " BuiltinTemplate decls, ");
    v112 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v112, " each (");
    v113 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v113, " bytes)\n");
  }
  if (dword_253E4C164 >= 1)
  {
    v114 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v114, "    ");
    v115 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v115, " Concept decls, ");
    v116 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v116, " each (");
    v117 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v117, " bytes)\n");
  }
  if (dword_253E4C168 >= 1)
  {
    v118 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v118, "    ");
    v119 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v119, " ClassTemplate decls, ");
    v120 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v120, " each (");
    v121 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v121, " bytes)\n");
  }
  if (dword_253E4C16C >= 1)
  {
    v122 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v122, "    ");
    v123 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v123, " FunctionTemplate decls, ");
    v124 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v124, " each (");
    v125 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v125, " bytes)\n");
  }
  if (dword_253E4C170 >= 1)
  {
    v126 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v126, "    ");
    v127 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v127, " TypeAliasTemplate decls, ");
    v128 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v128, " each (");
    v129 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v129, " bytes)\n");
  }
  if (dword_253E4C174 >= 1)
  {
    v130 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v130, "    ");
    v131 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v131, " VarTemplate decls, ");
    v132 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v132, " each (");
    v133 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v133, " bytes)\n");
  }
  if (dword_253E4C178 >= 1)
  {
    v134 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v134, "    ");
    v135 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v135, " TemplateTemplateParm decls, ");
    v136 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v136, " each (");
    v137 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v137, " bytes)\n");
  }
  if (dword_253E4C17C >= 1)
  {
    v138 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v138, "    ");
    v139 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v139, " Enum decls, ");
    v140 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v140, " each (");
    v141 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v141, " bytes)\n");
  }
  if (dword_253E4C180 >= 1)
  {
    v142 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v142, "    ");
    v143 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v143, " Record decls, ");
    v144 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v144, " each (");
    v145 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v145, " bytes)\n");
  }
  if (dword_253E4C184 >= 1)
  {
    v146 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v146, "    ");
    v147 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v147, " CXXRecord decls, ");
    v148 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v148, " each (");
    v149 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v149, " bytes)\n");
  }
  if (dword_253E4C188 >= 1)
  {
    v150 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v150, "    ");
    v151 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v151, " ClassTemplateSpecialization decls, ");
    v152 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v152, " each (");
    v153 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v153, " bytes)\n");
  }
  if (dword_253E4C18C >= 1)
  {
    v154 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v154, "    ");
    v155 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v155, " ClassTemplatePartialSpecialization decls, ");
    v156 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v156, " each (");
    v157 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v157, " bytes)\n");
  }
  if (dword_253E4C190 >= 1)
  {
    v158 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v158, "    ");
    v159 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v159, " TemplateTypeParm decls, ");
    v160 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v160, " each (");
    v161 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v161, " bytes)\n");
  }
  if (dword_253E4C194 >= 1)
  {
    v162 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v162, "    ");
    v163 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v163, " ObjCTypeParam decls, ");
    v164 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v164, " each (");
    v165 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v165, " bytes)\n");
  }
  if (dword_253E4C198 >= 1)
  {
    v166 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v166, "    ");
    v167 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v167, " TypeAlias decls, ");
    v168 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v168, " each (");
    v169 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v169, " bytes)\n");
  }
  if (dword_253E4C19C >= 1)
  {
    v170 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v170, "    ");
    v171 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v171, " Typedef decls, ");
    v172 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v172, " each (");
    v173 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v173, " bytes)\n");
  }
  if (dword_253E4C1A0 >= 1)
  {
    v174 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v174, "    ");
    v175 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v175, " UnresolvedUsingTypename decls, ");
    v176 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v176, " each (");
    v177 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v177, " bytes)\n");
  }
  if (dword_253E4C1A4 >= 1)
  {
    v178 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v178, "    ");
    v179 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v179, " UnresolvedUsingIfExists decls, ");
    v180 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v180, " each (");
    v181 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v181, " bytes)\n");
  }
  if (dword_253E4C1A8 >= 1)
  {
    v182 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v182, "    ");
    v183 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v183, " UsingDirective decls, ");
    v184 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v184, " each (");
    v185 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v185, " bytes)\n");
  }
  if (dword_253E4C1AC >= 1)
  {
    v186 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v186, "    ");
    v187 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v187, " UsingPack decls, ");
    v188 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v188, " each (");
    v189 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v189, " bytes)\n");
  }
  if (dword_253E4C1B0 >= 1)
  {
    v190 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v190, "    ");
    v191 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v191, " UsingShadow decls, ");
    v192 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v192, " each (");
    v193 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v193, " bytes)\n");
  }
  if (dword_253E4C1B4 >= 1)
  {
    v194 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v194, "    ");
    v195 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v195, " ConstructorUsingShadow decls, ");
    v196 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v196, " each (");
    v197 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v197, " bytes)\n");
  }
  if (dword_253E4C1B8 >= 1)
  {
    v198 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v198, "    ");
    v199 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v199, " Binding decls, ");
    v200 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v200, " each (");
    v201 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v201, " bytes)\n");
  }
  if (dword_253E4C1BC >= 1)
  {
    v202 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v202, "    ");
    v203 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v203, " Field decls, ");
    v204 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v204, " each (");
    v205 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v205, " bytes)\n");
  }
  if (dword_253E4C1C0 >= 1)
  {
    v206 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v206, "    ");
    v207 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v207, " ObjCAtDefsField decls, ");
    v208 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v208, " each (");
    v209 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v209, " bytes)\n");
  }
  if (dword_253E4C1C4 >= 1)
  {
    v210 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v210, "    ");
    v211 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v211, " ObjCIvar decls, ");
    v212 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v212, " each (");
    v213 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v213, " bytes)\n");
  }
  if (dword_253E4C1C8 >= 1)
  {
    v214 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v214, "    ");
    v215 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v215, " Function decls, ");
    v216 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v216, " each (");
    v217 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v217, " bytes)\n");
  }
  if (dword_253E4C1CC >= 1)
  {
    v218 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v218, "    ");
    v219 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v219, " CXXDeductionGuide decls, ");
    v220 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v220, " each (");
    v221 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v221, " bytes)\n");
  }
  if (dword_253E4C1D0 >= 1)
  {
    v222 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v222, "    ");
    v223 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v223, " CXXMethod decls, ");
    v224 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v224, " each (");
    v225 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v225, " bytes)\n");
  }
  if (dword_253E4C1D4 >= 1)
  {
    v226 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v226, "    ");
    v227 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v227, " CXXConstructor decls, ");
    v228 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v228, " each (");
    v229 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v229, " bytes)\n");
  }
  if (dword_253E4C1D8 >= 1)
  {
    v230 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v230, "    ");
    v231 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v231, " CXXConversion decls, ");
    v232 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v232, " each (");
    v233 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v233, " bytes)\n");
  }
  if (dword_253E4C1DC >= 1)
  {
    v234 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v234, "    ");
    v235 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v235, " CXXDestructor decls, ");
    v236 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v236, " each (");
    v237 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v237, " bytes)\n");
  }
  if (dword_253E4C1E0 >= 1)
  {
    v238 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v238, "    ");
    v239 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v239, " MSProperty decls, ");
    v240 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v240, " each (");
    v241 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v241, " bytes)\n");
  }
  if (dword_253E4C1E4 >= 1)
  {
    v242 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v242, "    ");
    v243 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v243, " NonTypeTemplateParm decls, ");
    v244 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v244, " each (");
    v245 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v245, " bytes)\n");
  }
  if (dword_253E4C1E8 >= 1)
  {
    v246 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v246, "    ");
    v247 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v247, " Var decls, ");
    v248 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v248, " each (");
    v249 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v249, " bytes)\n");
  }
  if (dword_253E4C1EC >= 1)
  {
    v250 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v250, "    ");
    v251 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v251, " Decomposition decls, ");
    v252 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v252, " each (");
    v253 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v253, " bytes)\n");
  }
  if (dword_253E4C1F0 >= 1)
  {
    v254 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v254, "    ");
    v255 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v255, " ImplicitParam decls, ");
    v256 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v256, " each (");
    v257 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v257, " bytes)\n");
  }
  if (dword_253E4C1F4 >= 1)
  {
    v258 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v258, "    ");
    v259 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v259, " OMPCapturedExpr decls, ");
    v260 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v260, " each (");
    v261 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v261, " bytes)\n");
  }
  if (dword_253E4C1F8 >= 1)
  {
    v262 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v262, "    ");
    v263 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v263, " ParmVar decls, ");
    v264 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v264, " each (");
    v265 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v265, " bytes)\n");
  }
  if (dword_253E4C1FC >= 1)
  {
    v266 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v266, "    ");
    v267 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v267, " VarTemplateSpecialization decls, ");
    v268 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v268, " each (");
    v269 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v269, " bytes)\n");
  }
  if (dword_253E4C200 >= 1)
  {
    v270 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v270, "    ");
    v271 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v271, " VarTemplatePartialSpecialization decls, ");
    v272 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v272, " each (");
    v273 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v273, " bytes)\n");
  }
  if (dword_253E4C204 >= 1)
  {
    v274 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v274, "    ");
    v275 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v275, " EnumConstant decls, ");
    v276 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v276, " each (");
    v277 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v277, " bytes)\n");
  }
  if (dword_253E4C208 >= 1)
  {
    v278 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v278, "    ");
    v279 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v279, " IndirectField decls, ");
    v280 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v280, " each (");
    v281 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v281, " bytes)\n");
  }
  if (dword_253E4C20C >= 1)
  {
    v282 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v282, "    ");
    v283 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v283, " MSGuid decls, ");
    v284 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v284, " each (");
    v285 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v285, " bytes)\n");
  }
  if (dword_253E4C210 >= 1)
  {
    v286 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v286, "    ");
    v287 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v287, " OMPDeclareMapper decls, ");
    v288 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v288, " each (");
    v289 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v289, " bytes)\n");
  }
  if (dword_253E4C214 >= 1)
  {
    v290 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v290, "    ");
    v291 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v291, " OMPDeclareReduction decls, ");
    v292 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v292, " each (");
    v293 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v293, " bytes)\n");
  }
  if (dword_253E4C218 >= 1)
  {
    v294 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v294, "    ");
    v295 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v295, " TemplateParamObject decls, ");
    v296 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v296, " each (");
    v297 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v297, " bytes)\n");
  }
  if (dword_253E4C21C >= 1)
  {
    v298 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v298, "    ");
    v299 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v299, " UnnamedGlobalConstant decls, ");
    v300 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v300, " each (");
    v301 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v301, " bytes)\n");
  }
  if (dword_253E4C220 >= 1)
  {
    v302 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v302, "    ");
    v303 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v303, " UnresolvedUsingValue decls, ");
    v304 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v304, " each (");
    v305 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v305, " bytes)\n");
  }
  if (dword_253E4C224 >= 1)
  {
    v306 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v306, "    ");
    v307 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v307, " OMPAllocate decls, ");
    v308 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v308, " each (");
    v309 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v309, " bytes)\n");
  }
  if (dword_253E4C228 >= 1)
  {
    v310 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v310, "    ");
    v311 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v311, " OMPRequires decls, ");
    v312 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v312, " each (");
    v313 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v313, " bytes)\n");
  }
  if (dword_253E4C22C >= 1)
  {
    v314 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v314, "    ");
    v315 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v315, " OMPThreadPrivate decls, ");
    v316 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v316, " each (");
    v317 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v317, " bytes)\n");
  }
  if (dword_253E4C230 >= 1)
  {
    v318 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v318, "    ");
    v319 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v319, " ObjCPropertyImpl decls, ");
    v320 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v320, " each (");
    v321 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v321, " bytes)\n");
  }
  if (dword_253E4C234 >= 1)
  {
    v322 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v322, "    ");
    v323 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v323, " PragmaComment decls, ");
    v324 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v324, " each (");
    v325 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v325, " bytes)\n");
  }
  if (dword_253E4C238 >= 1)
  {
    v326 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v326, "    ");
    v327 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v327, " PragmaDetectMismatch decls, ");
    v328 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v328, " each (");
    v329 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v329, " bytes)\n");
  }
  if (dword_253E4C23C >= 1)
  {
    v330 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v330, "    ");
    v331 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v331, " RequiresExprBody decls, ");
    v332 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v332, " each (");
    v333 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v333, " bytes)\n");
  }
  if (dword_253E4C240 >= 1)
  {
    v334 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v334, "    ");
    v335 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v335, " StaticAssert decls, ");
    v336 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v336, " each (");
    v337 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v337, " bytes)\n");
  }
  if (dword_253E4C244 >= 1)
  {
    v338 = (llvm::raw_ostream *)llvm::errs(v5);
    sub_22E47DAC0(v338, "    ");
    v339 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v339, " TranslationUnit decls, ");
    v340 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    sub_22E47DAC0(v340, " each (");
    v341 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v5 = sub_22E47DAC0(v341, " bytes)\n");
  }
  v342 = (llvm::raw_ostream *)llvm::errs(v5);
  sub_22E47DAC0(v342, "Total bytes = ");
  v343 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  return sub_22E47DAC0(v343, "\n");
}

uint64_t sub_22F3B0FB8(uint64_t result)
{
  if (result <= 0x53)
    ++*off_24FAC3480[(int)result];
  return result;
}

void sub_22F3B0FDC(uint64_t a1, llvm::raw_ostream *a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;

  v8 = *(_DWORD *)(a1 + 32);
  if (v8 || (v6 = *(_QWORD *)(a1 + 24)) != 0 && (v8 = *(_DWORD *)(v6 + 24)) != 0)
  {
    sub_22F422CEC(&v8, a2, *(_QWORD **)(a1 + 40));
    sub_22E47DAC0(a2, ": ");
  }
  sub_22E47DAC0(a2, *(char **)(a1 + 48));
  v4 = *(_QWORD *)(a1 + 24);
  if (v4 && (*(_DWORD *)(v4 + 28) & 0x7Fu) - 13 <= 0x3D)
  {
    sub_22E47DAC0(a2, " '");
    sub_22F3ABF28((_QWORD *)v4, a2);
    v5 = (_BYTE *)*((_QWORD *)a2 + 4);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 3))
    {
      llvm::raw_ostream::write(a2);
    }
    else
    {
      *((_QWORD *)a2 + 4) = v5 + 1;
      *v5 = 39;
    }
  }
  v7 = (_BYTE *)*((_QWORD *)a2 + 4);
  if ((unint64_t)v7 >= *((_QWORD *)a2 + 3))
  {
    llvm::raw_ostream::write(a2);
  }
  else
  {
    *((_QWORD *)a2 + 4) = v7 + 1;
    *v7 = 10;
  }
}

void sub_22F3B10E8()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B10FC(unint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  v3 = sub_22EFC8764(a1);
  sub_22EF5B13C(*(_QWORD *)(v3 + 88), a1);
  return sub_22E63E268(v4);
}

uint64_t sub_22F3B1140(unint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  v3 = sub_22EFC8764(a1);
  sub_22EF5B13C(*(_QWORD *)(v3 + 88), a1);
  return sub_22EFCEFB8(v4);
}

uint64_t sub_22F3B1184(unint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  v3 = sub_22EFC8764(a1);
  sub_22EF5B13C(*(_QWORD *)(v3 + 88), a1);
  return sub_22EFCF018(v4);
}

uint64_t sub_22F3B11C8(unint64_t a1)
{
  unint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  v3 = sub_22EFC8764(a1);
  sub_22EF5B13C(*(_QWORD *)(v3 + 88), a1);
  return sub_22EFCF078(v4);
}

BOOL sub_22F3B120C(unint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;

  v2 = *(_QWORD *)(*(_QWORD *)(sub_22EFC8764(a1) + 88) + 15088);
  v3 = *(void **)(v2 + 224);
  v4 = *(_QWORD *)(v2 + 232);
  v9 = *(_OWORD *)(v2 + 240);
  if (sub_22EFC93E8(a1, v3, v4, (uint64_t *)&v9, 0, 0) == 2)
    return 1;
  if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22EFC8764(a1) + 88) + 2000) + 140) & 0x4000000000000) == 0)
    return 0;
  v6 = *(_QWORD *)(v2 + 264);
  if (!v6)
    return 0;
  v7 = *(void **)(v2 + 256);
  v8 = *(_OWORD *)(v2 + 272);
  return sub_22EFC93E8(a1, v7, v6, (uint64_t *)&v8, 0, 0) == 2;
}

int32x2_t sub_22F3B12BC(unint64_t a1)
{
  int v1;
  unint64_t v3;
  int32x2_t result;

  v1 = *(_DWORD *)(a1 + 28);
  if ((v1 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 28) = v1 & 0xFFFFFEFF;
    v3 = sub_22EFC8764(a1);
    return sub_22F3683A0(*(_QWORD *)(v3 + 88), a1);
  }
  return result;
}

unint64_t sub_22F3B1300(unint64_t result)
{
  uint64_t v1;

  while ((*(_WORD *)(result + 8) & 0x7F) != 1)
  {
    v1 = *(_QWORD *)(sub_22EFCAD5C(result) + 16);
    result = v1 & 0xFFFFFFFFFFFFFFF8;
    if ((v1 & 4) != 0)
      result = *(_QWORD *)result;
    if (!result)
      return result;
  }
  result -= 40;
  return result;
}

unint64_t sub_22F3B1340(unint64_t a1)
{
  int v1;
  uint64_t v2;

  while (1)
  {
    v1 = *(_WORD *)(a1 + 8) & 0x7F;
    if (v1 == 12)
      break;
    if (v1 == 83)
      return 0;
LABEL_5:
    v2 = *(_QWORD *)(sub_22EFCAD5C(a1) + 16);
    a1 = v2 & 0xFFFFFFFFFFFFFFF8;
    if ((v2 & 4) != 0)
      a1 = *(_QWORD *)(a1 + 8);
  }
  if ((*(_DWORD *)(a1 + 8) & 0xE000) != 0x2000)
    goto LABEL_5;
  return a1 - 40;
}

BOOL sub_22F3B13A0(unint64_t a1)
{
  return sub_22EFCBD94(a1, 2);
}

uint64_t *sub_22F3B13A8(uint64_t a1, uint64_t a2)
{
  uint64_t *result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = (uint64_t *)sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 80) + 72), *(_QWORD *)(a1 + 80));
  if (result)
  {
    v4 = (uint64_t)result;
    do
    {
      v5 = *(unsigned int *)(a2 + 8);
      if (v5 >= *(unsigned int *)(a2 + 12))
      {
        v12 = v4;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v4 = v12;
        v5 = *(unsigned int *)(a2 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a2 + 8 * v5) = v4 + 40;
      ++*(_DWORD *)(a2 + 8);
      result = (uint64_t *)(v4 + 72);
      if ((*(_BYTE *)(v4 + 72) & 3) != 0)
        break;
      result = (uint64_t *)sub_22E3CD31C(result, v4);
      v4 = (uint64_t)result;
    }
    while (result);
  }
  v6 = *(_QWORD *)a2;
  v7 = *(unsigned int *)(a2 + 8);
  v8 = (_QWORD *)(*(_QWORD *)a2 + 8 * v7 - 8);
  if ((_DWORD)v7)
    v9 = v6 >= (unint64_t)v8;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = v6 + 8;
    do
    {
      v11 = *(_QWORD *)(v10 - 8);
      *(_QWORD *)(v10 - 8) = *v8;
      *v8-- = v11;
      v9 = v10 >= (unint64_t)v8;
      v10 += 8;
    }
    while (!v9);
  }
  return result;
}

uint64_t *sub_22F3B1490(uint64_t a1, uint64_t a2)
{
  uint64_t *result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = (uint64_t *)sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 88) + 80), *(_QWORD *)(a1 + 88));
  if (result)
  {
    v4 = (uint64_t)result;
    do
    {
      v5 = *(unsigned int *)(a2 + 8);
      if (v5 >= *(unsigned int *)(a2 + 12))
      {
        v12 = v4;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v4 = v12;
        v5 = *(unsigned int *)(a2 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a2 + 8 * v5) = v4 + 48;
      ++*(_DWORD *)(a2 + 8);
      result = (uint64_t *)(v4 + 80);
      if ((*(_BYTE *)(v4 + 80) & 3) != 0)
        break;
      result = (uint64_t *)sub_22E3CD31C(result, v4);
      v4 = (uint64_t)result;
    }
    while (result);
  }
  v6 = *(_QWORD *)a2;
  v7 = *(unsigned int *)(a2 + 8);
  v8 = (_QWORD *)(*(_QWORD *)a2 + 8 * v7 - 8);
  if ((_DWORD)v7)
    v9 = v6 >= (unint64_t)v8;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = v6 + 8;
    do
    {
      v11 = *(_QWORD *)(v10 - 8);
      *(_QWORD *)(v10 - 8) = *v8;
      *v8-- = v11;
      v9 = v10 >= (unint64_t)v8;
      v10 += 8;
    }
    while (!v9);
  }
  return result;
}

uint64_t sub_22F3B1578(uint64_t result, uint64_t a2)
{
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (unint64_t *)(result + 16);
  v4 = *(_QWORD *)(result + 16);
  if (v4 == a2)
  {
    if (*(_QWORD *)(result + 24) == a2)
    {
      *v3 = 0;
      *(_QWORD *)(result + 24) = 0;
    }
    else
    {
      *v3 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
    }
  }
  else
  {
    do
    {
      v5 = v4;
      v6 = *(_QWORD *)(v4 + 8);
      v4 = v6 & 0xFFFFFFFFFFFFFFF8;
    }
    while ((v6 & 0xFFFFFFFFFFFFFFF8) != a2);
    *(_QWORD *)(v5 + 8) = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8 | v6 & 7;
    if (*(_QWORD *)(result + 24) == a2)
      *(_QWORD *)(result + 24) = v5;
  }
  *(_QWORD *)(a2 + 8) &= 7uLL;
  if ((*(_DWORD *)(a2 + 28) & 0x7Fu) - 13 <= 0x3D)
  {
    result = sub_22EFCCCB4(a2);
    if ((result & 1) == 0)
    {
      if (*(_QWORD *)(a2 + 40))
      {
        v7 = *(_QWORD *)(a2 + 16);
        v8 = v7 & 0xFFFFFFFFFFFFFFF8;
        if ((v7 & 4) != 0)
          v8 = *(_QWORD *)v8;
        do
        {
          result = *(_QWORD *)sub_22EFCC008(v8);
          if (result)
          {
            v13 = *(_QWORD *)(a2 + 40);
            v9 = sub_22EFCCD88(result, &v13);
            result = (uint64_t)sub_22F3B1788((uint64_t *)(v9 + 8), (_QWORD *)a2);
          }
          v10 = *(_WORD *)(v8 + 8) & 0x7F;
          v11 = v10 == 5 || v10 == 12;
          if (!v11 && (v10 != 33 || (*(_BYTE *)(v8 + 12) & 0x80) != 0))
            break;
          result = sub_22EFCAD5C(v8);
          v12 = *(_QWORD *)(result + 16);
          v8 = v12 & 0xFFFFFFFFFFFFFFF8;
          if ((v12 & 4) != 0)
            v8 = *(_QWORD *)v8;
        }
        while (v8);
      }
    }
  }
  return result;
}

unint64_t sub_22F3B16C0(unint64_t a1)
{
  int v1;
  uint64_t v3;

  while (1)
  {
    v1 = *(_WORD *)(a1 + 8) & 0x7F;
    if (v1 == 83 || v1 == 16)
      break;
    v3 = *(_QWORD *)(sub_22EFCAD5C(a1) + 16);
    a1 = v3 & 0xFFFFFFFFFFFFFFF8;
    if ((v3 & 4) != 0)
      a1 = *(_QWORD *)a1;
  }
  return sub_22EFCC008(a1);
}

unint64_t sub_22F3B16FC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  if ((*(_WORD *)(a1 + 8) & 0x7Eu) - 34 > 3)
    return 0;
  do
  {
    v1 = a1;
    v2 = *(_QWORD *)(sub_22EFCAD5C(a1) + 16);
    a1 = v2 & 0xFFFFFFFFFFFFFFF8;
    if ((v2 & 4) != 0)
      a1 = *(_QWORD *)(a1 + 8);
  }
  while ((*(_WORD *)(a1 + 8) & 0x7Eu) - 34 < 4);
  return v1 - 64;
}

void sub_22F3B1764(llvm::PrettyStackTraceEntry *a1)
{
  llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t *sub_22F3B1788(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t *v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *result;
  v3 = *result & 0xFFFFFFFFFFFFFFFCLL;
  if (v3 >= 8)
  {
    v5 = result;
    result = (uint64_t *)sub_22EFCECEC(*result);
    v11 = 0;
    v6 = (_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if ((v2 & 4) != 0 && v6)
    {
      v7 = 0;
      v8 = (unint64_t *)&v11;
      do
      {
        if ((_QWORD *)*v6 == a2)
        {
          v3 = v6[1];
          v6[1] = result[1892] | 4;
          result[1892] = (uint64_t)v6;
          v9 = v8;
        }
        else
        {
          *v8 = v3;
          v3 = v6[1];
          v9 = v6 + 1;
          v7 = v8;
        }
        v6 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
        if ((v3 & 4) == 0)
          break;
        v8 = v9;
      }
      while (v6);
      if (v6 == a2)
      {
        if (v7)
        {
          v10 = (_QWORD *)(*v7 & 0xFFFFFFFFFFFFFFF8);
          *v7 = *v10 & 0xFFFFFFFFFFFFFFFBLL;
          v10[1] = result[1892] | 4;
          result[1892] = (uint64_t)v10;
        }
        goto LABEL_15;
      }
    }
    else
    {
      if (v6 == a2)
      {
LABEL_15:
        *v5 = *v5 & 3 | v11;
        return result;
      }
      v9 = (unint64_t *)&v11;
    }
    *v9 = v3;
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_22F3B1894(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = result;
  v3 = *(uint64_t **)result;
  if (*(_QWORD *)result != *(_QWORD *)(result + 8))
  {
    v4 = *(_QWORD *)(a2 + 16048);
    do
    {
      result = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v4 + 16))(v4, (unint64_t)*v3 >> 2);
      *v3 = *v3 & 3 | result;
      ++v3;
    }
    while (v3 != *(uint64_t **)(v2 + 8));
  }
  *(_QWORD *)(v2 + 16) &= ~4uLL;
  return result;
}

unint64_t sub_22F3B1908(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 32);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(*(_QWORD *)(a1 + 88));
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 56))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 32) = v1;
  }
  return v1;
}

uint64_t sub_22F3B1954(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5, int a6, char a7)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v14 = sub_22EFC7430(144, a1, a2, 0);
  v15 = (_QWORD *)sub_22EFC31D8(v14, 35, 3, a1, a2, a4, 0, 0, a4);
  v16 = v15[9] & 0x7FFFFFLL;
  v15[9] = v16;
  *v15 = &off_24FAC3730;
  v15[16] = 0;
  v15[17] = 0;
  *((_DWORD *)v15 + 18) = v16 | 0x20000;
  v17 = sub_22E3CD3D4(a1 + 2032, 144, 3);
  *(_QWORD *)(v14 + 128) = sub_22F3B4190(v17, v14, a3, a5, a6, a7);
  *(_DWORD *)(v14 + 72) &= ~0x100000u;
  *(_DWORD *)(v14 + 28) |= 0x200u;
  if (!*(_QWORD *)(v14 + 48))
    sub_22EF6462C(a1, v14);
  return v14;
}

uint64_t sub_22F3B1A64(unint64_t a1)
{
  unint64_t v2;

  v2 = sub_22EFD10F8(a1);
  if (v2)
    return (*(_BYTE *)(v2 + 83) & 0xC0) != 0;
  else
    return sub_22EAA9528(a1);
}

uint64_t sub_22F3B1AA4(uint64_t a1)
{
  uint64_t result;
  char v3;

  result = sub_22EFC7ADC(a1 + 64);
  if ((_DWORD)result)
    return sub_22EFB3B2C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22EFD9CC0, (uint64_t)&v3) ^ 1;
  return result;
}

uint64_t sub_22F3B1AEC(unint64_t a1)
{
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 128) + 104) & 0xFFFF8) != 0)
    return 0;
  else
    return (*(unsigned __int8 *)(*(_QWORD *)(sub_22EFC72E8(a1) + 2000) + 1) >> 4) & 1;
}

uint64_t sub_22F3B1B24(unint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  __int128 v10;

  v4 = a4;
  v7 = *(_QWORD *)(a1 + 128);
  *(_DWORD *)(v7 + 104) = *(_DWORD *)(v7 + 104) & 0xFFF0001F | (32 * (a4 & 0x7FFF));
  *(_WORD *)(v7 + 108) &= 0xE000u;
  result = sub_22E3CD3D4(a2 + 2032, 16 * a4, 3);
  *(_QWORD *)(v7 + 128) = result;
  if (v4)
  {
    v9 = v4;
    do
    {
      if ((*a3 & 1) == 0)
        *(_WORD *)(v7 + 108) = *(_WORD *)(v7 + 108) & 0xE000 | (*(_WORD *)(v7 + 108) + 1) & 0x1FFF;
      v10 = *(_OWORD *)a3;
      a3 += 16;
      *(_OWORD *)result = v10;
      result += 16;
      --v9;
    }
    while (v9);
  }
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 128) + 104) & 0xFFFF8) != 0
    || (result = sub_22EFC72E8(a1), (*(_BYTE *)(*(_QWORD *)(result + 2000) + 1) & 0x10) == 0))
  {
    *(_QWORD *)v7 |= 0x1000000000uLL;
  }
  return result;
}

uint64_t sub_22F3B1BE8(uint64_t a1)
{
  if (((*(_DWORD *)(a1 + 72) >> 13) & 5 | 2) == 3 || *(_QWORD *)(a1 + 136) > 7uLL)
    return 0;
  if (*(_QWORD *)(a1 + 128)
    || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104)), *(_QWORD *)(a1 + 128)))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    if ((**(_QWORD **)(a1 + 128) & 0x100) != 0)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
      return (**(_QWORD **)(a1 + 128) >> 21) & 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_22F3B1C84(unint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;

  result = sub_22EFD4B08(a1);
  if (result)
  {
    v2 = result;
    result += 16;
    v3 = *(_DWORD *)(v2 + 12) & 0x1FFFFFFF;
    if ((_DWORD)v3)
    {
      v4 = result;
      do
      {
        v5 = v3 >> 1;
        v6 = (uint64_t *)(v4 + 8 * (v3 >> 1));
        v8 = *v6;
        v7 = v6 + 1;
        v3 += ~(v3 >> 1);
        if ((*(_DWORD *)(v8 + 28) & 0x200) != 0)
          v3 = v5;
        else
          v4 = (uint64_t)v7;
      }
      while (v3);
    }
  }
  return result;
}

unint64_t sub_22F3B1CF4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = sub_22EFCAD5C(a1 + 64);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(v3 + 120);
  if ((v4 & 1) != 0)
  {
    v5 = sub_22EFC72E8(v2);
    v4 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v5 + 16048) + 16))(*(_QWORD *)(v5 + 16048), v4 >> 1);
    *(_QWORD *)(v3 + 120) = v4;
  }
  return v4;
}

_QWORD *sub_22F3B1D48(_QWORD *result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  _QWORD v7[5];

  if (a2)
  {
    v7[3] = v2;
    v7[4] = v3;
    v5 = result;
    v6 = sub_22EFC72E8((unint64_t)result);
    v7[0] = v5;
    result = sub_22F283EC0((uint64_t *)(v6 + 1896), v7);
    *((_DWORD *)result + 2) = a2;
  }
  return result;
}

uint64_t sub_22F3B1D90(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_22EFC72E8(a1);
  result = sub_22E3CD3D4(v6 + 2032, 16, 3);
  *(_QWORD *)result = a2 & 0xFFFFFFFFFFFFFFF9 | (2 * (a3 - 1));
  *(_DWORD *)(result + 8) = 0;
  *(_QWORD *)(a1 + 136) = result | 4;
  return result;
}

unint64_t sub_22F3B1DF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  unint64_t v17;
  unint64_t result;

  v17 = sub_22EFC7430(176, a1, a2, 0);
  result = sub_22EFBF4FC(v17, 53, a1, a2, a3, a5, a6, a7, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)result = &off_24FAC3AE8;
  *(_QWORD *)(result + 160) = a9;
  *(_QWORD *)(result + 168) = a4;
  if (a8)
    *(_DWORD *)(result + 140) = a8;
  *(_QWORD *)(result + 80) &= ~0x2000000000uLL;
  return result;
}

unint64_t sub_22F3B1EBC(uint64_t a1, int a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6[3];

  v4 = sub_22E3CD3D4(a1 + 2032, 184, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  memset(v6, 0, sizeof(v6));
  result = sub_22EFBF4FC(v4 + 8, 53, a1, 0, 0, v6, 0, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(v4 + 8) = &off_24FAC3AE8;
  *(_QWORD *)(v4 + 168) = 0;
  *(_QWORD *)(v4 + 176) = 0;
  *(_QWORD *)(v4 + 88) &= ~0x2000000000uLL;
  return result;
}

uint64_t sub_22F3B1F5C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = sub_22EFC7430(72, a1, a2, 0);
  result = sub_22EA41AB8(v5, 81, a2, a3);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_WORD *)(result + 48) = *(_WORD *)(result + 48) & 0xE000 | 0x51;
  *(_QWORD *)result = &off_24FAC42C0;
  return result;
}

uint64_t sub_22F3B1FC8(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 81, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_WORD *)(v3 + 56) = *(_WORD *)(v3 + 56) & 0xE000 | 0x51;
  *(_QWORD *)(v3 + 8) = &off_24FAC42C0;
  return result;
}

uint64_t sub_22F3B203C(unint64_t a1)
{
  uint64_t v3;

  if ((*(_DWORD *)(a1 + 28) & 0x7F) == 0x37)
    return 0;
  v3 = sub_22EFC72E8(a1);
  return sub_22F368744(v3, a1);
}

unint64_t sub_22F3B2080(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22EFC72E8(a2);
  v5 = sub_22EFD74C4(v4, a1, a2);
  return sub_22EF5B848(v4, v5, 0);
}

uint64_t sub_22F3B20CC(uint64_t a1)
{
  unint64_t v2;
  int v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v2 = sub_22EFC20FC(a1, 1);
  if (!v2)
    v2 = a1;
  v7 = 0;
  v3 = sub_22EFBF86C(v2, &v7, 0);
  result = 0;
  if (v3)
  {
    v5 = v7;
    if (((*(uint64_t (**)(unint64_t))(*(_QWORD *)v7 + 24))(v7) & 1) != 0)
      return 0;
    v6 = *(_QWORD *)(v5 + 80);
    if ((v6 & 0x8000000) != 0)
    {
      if ((v6 & 0x20000000) != 0)
        return 1;
    }
    else if (*(_QWORD *)(v5 + 128) | *(_QWORD *)(v5 + 80) & 0x20000000)
    {
      return 1;
    }
    return (v6 >> 35) & 1;
  }
  return result;
}

uint64_t sub_22F3B2164(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  __int16 v8;

  *(_QWORD *)result = a3 & 0xFFFFFFFFFFFFFFF9;
  *(_QWORD *)(result + 8) = a6;
  *(_DWORD *)(result + 16) = a8;
  *(_DWORD *)(result + 20) = a5;
  *(_DWORD *)(result + 24) = a7;
  if (a4)
    v8 = 2;
  else
    v8 = 0;
  *(_WORD *)(result + 28) = v8;
  return result;
}

uint64_t sub_22F3B2188(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  *(_QWORD *)result = a3 & 0xFFFFFFFFFFFFFFF9 | 4;
  *(_QWORD *)(result + 8) = a6;
  *(_DWORD *)(result + 16) = a4;
  *(_DWORD *)(result + 20) = a5;
  *(_DWORD *)(result + 24) = a7;
  *(_WORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_22F3B21A4(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(_QWORD *)result = a3 & 0xFFFFFFFFFFFFFFF9;
  *(_QWORD *)(result + 8) = a5;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 20) = a4;
  *(_DWORD *)(result + 24) = a6;
  *(_WORD *)(result + 28) = 1;
  return result;
}

unint64_t sub_22F3B21C8(uint64_t a1, int a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6[3];

  v4 = sub_22E3CD3D4(a1 + 2032, 184, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  memset(v6, 0, sizeof(v6));
  result = sub_22EFBF4FC(v4 + 8, 57, a1, 0, 0, v6, 0, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(v4 + 8) = &off_24FAC3BD8;
  *(_QWORD *)(v4 + 168) = 0;
  *(_QWORD *)(v4 + 176) = 0;
  *(_DWORD *)(v4 + 36) &= ~0x200u;
  return result;
}

_QWORD *sub_22F3B2268(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if (a2)
  {
    v3 = result[14];
    if (!*(_QWORD *)(v3 + 160))
    {
      *(_QWORD *)(v3 + 160) = a2;
      *(_QWORD *)(v3 + 168) = a3;
      result = (_QWORD *)sub_22EFC8974((unint64_t)result);
      if (result)
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*result + 80))(result, v3, a2, a3);
    }
  }
  return result;
}

BOOL sub_22F3B22D4(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  if ((*(_BYTE *)(a1 + 29) & 2) == 0)
    return 0;
  v3 = *(_QWORD *)(sub_22EFCAD5C(a1 + 72) + 16);
  v4 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if ((v3 & 4) != 0)
    v4 = (_QWORD *)*v4;
  v5 = v4 ? (uint64_t)(v4 - 8) : 0;
  v6 = *(_QWORD *)(v5 + 128);
  if (!v6 || ((*(unsigned __int16 *)(v6 + 8) | (*(unsigned __int8 *)(v6 + 10) << 16)) & 0x100000) == 0)
    return 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(unsigned __int8 *)(v7 + 16) - 27 > 0xFFFFFFFD;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  return *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 10;
}

double sub_22F3B238C(uint64_t a1, int a2)
{
  uint64_t v3;
  _BYTE *v4;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  v4 = sub_22E79390C();
  sub_22EA41AB8(v3 + 8, 44, 0, 0);
  *(_QWORD *)(v3 + 48) = v4;
  *(_QWORD *)(v3 + 8) = &off_24FAC3CC8;
  result = 0.0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_QWORD *)(v3 + 88) = 0;
  return result;
}

uint64_t sub_22F3B2408(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, unint64_t a8)
{
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;

  v14 = sub_22EA41AB8(a1, 16, a3, a6);
  *(_QWORD *)(v14 + 40) = a7;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v14 + 64) = 0;
  *(_QWORD *)(v14 + 72) = 0;
  *(_WORD *)(v14 + 56) = *(_WORD *)(v14 + 56) & 0xE000 | 0x10;
  *(_QWORD *)(v14 + 80) = a2 | 2;
  v15 = (unint64_t *)(v14 + 80);
  *(_QWORD *)(a1 + 88) = a1;
  *(_QWORD *)a1 = &off_24FAC3890;
  *(_DWORD *)(a1 + 96) = a5;
  *(_DWORD *)(a1 + 100) = 0;
  v16 = 4;
  if (!a4)
    v16 = 0;
  *(_QWORD *)(a1 + 104) = v16;
  sub_22F3B24CC(v15, a8);
  if (a8)
  {
    if ((*(_BYTE *)(a8 + 80) & 3) == 0)
      a8 = *(_QWORD *)(a8 + 104) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a1 + 104) & 7 | a8;
  }
  return a1;
}

uint64_t sub_22F3B24CC(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t *v5;

  if (a2)
  {
    v3 = *(_QWORD *)(a2 + 88);
    a1[1] = v3;
    v4 = sub_22E3CD31C((uint64_t *)(v3 + 80), v3);
    *a1 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    *((_DWORD *)a1 - 13) |= *(_DWORD *)(v4 + 28) & 0x260000;
    v5 = (unint64_t *)a1[1];
  }
  else
  {
    v5 = a1 - 10;
    a1[1] = (unint64_t)(a1 - 10);
  }
  return sub_22E7B7A74((uint64_t)(v5 + 10), (uint64_t)(a1 - 10));
}

uint64_t sub_22F3B2534(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14;

  v14 = sub_22EFC7430(112, a1, a2, 0);
  return sub_22F3B2408(v14, a1, a2, a3, a4, a5, a6, a7);
}

BOOL sub_22F3B25B0(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 80) & 3) != 0;
}

unint64_t sub_22F3B25C4(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 48), a1);
}

unint64_t sub_22F3B25D0(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 48);
  v2 = (uint64_t *)(a1 + 48);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

unint64_t sub_22F3B25EC(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 56) + 48), *(_QWORD *)(a1 + 56));
}

double sub_22F3B25F8(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_22E3CD3D4(a1 + 2032, 104, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  v5 = sub_22EA41AB8(v4 + 8, 17, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = a1 | 2;
  *(_QWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 8) = &off_24FAC3D40;
  result = 0.0;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  return result;
}

uint64_t sub_22F3B2674(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;

  v1 = *(_QWORD *)(a1 + 48);
  if (!v1)
    return 0;
  if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 49 < 3)
    return 1;
  if ((*(_DWORD *)(v1 + 28) & 0x7F) == 0x30)
  {
    v3 = *(_QWORD *)(v1 + 16);
    v4 = v3 & 0xFFFFFFFFFFFFFFF8;
    if ((v3 & 4) != 0)
      v4 = *(_QWORD *)v4;
    v5 = *(_WORD *)(v4 + 8) & 0x7F;
    result = 1;
    if (v5 > 0x18 || ((1 << v5) & 0x1000006) == 0)
    {
      if (v5 - 52 < 6)
        return 1;
      else
        return 3;
    }
  }
  else
  {
    if (sub_22E3CB5E0(*(_QWORD *)(a1 + 48)))
      return 1;
    if ((*(_BYTE *)(v1 + 96) & 0x18) != 0)
      return 2;
    else
      return 3;
  }
  return result;
}

uint64_t sub_22F3B2724(unint64_t a1, int a2)
{
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  if (a2 && !*(_QWORD *)(a1 + 64))
  {
    v3 = sub_22EFC72E8(a1);
    v4 = (_DWORD *)sub_22E3CD3D4(v3 + 2032, 72, 3);
    *v4 = 0;
    *(_QWORD *)(a1 + 64) = v4;
    v5 = sub_22EFC72E8(a1);
    sub_22EF5908C(v5, (uint64_t)sub_22E7B7544, (uint64_t)v4);
  }
  return *(_QWORD *)(a1 + 64);
}

uint64_t sub_22F3B2790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  unsigned int v13;

  result = sub_22EA41AB8(a1, a2, a4, a5);
  *(_QWORD *)(result + 40) = a6;
  *(_QWORD *)(result + 48) = a3 | 2;
  *(_QWORD *)result = &off_24FAC3908;
  *(_QWORD *)(result + 56) = result;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = a7;
  if (a8)
  {
    *(_QWORD *)(result + 64) = a8;
    v13 = *(_DWORD *)(result + 28) & 0xC000FFFF | *(_DWORD *)(a8 + 28) & 0x367F0000;
  }
  else
  {
    v13 = *(_DWORD *)(result + 28);
  }
  *(_DWORD *)(result + 28) = v13 | 0x200;
  return result;
}

uint64_t sub_22F3B281C(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 88, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 46, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = a1 | 2;
  *(_QWORD *)(v4 + 8) = &off_24FAC3908;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 64) = result;
  return result;
}

uint64_t sub_22F3B2890(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;

  v12 = sub_22EFC7430(104, a1, a2, 0);
  return sub_22F3B4318(v12, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22F3B28FC(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 112, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 47, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = a1 | 2;
  *(_QWORD *)(v4 + 64) = result;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC3E98;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) &= ~1u;
  return result;
}

uint64_t sub_22F3B2980(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t *a6, int a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v13 = sub_22EFC7430(88, a1, a2, 0);
  v14 = *a6;
  result = sub_22EA41AB8(v13, 13, a2, *((_DWORD *)a6 + 2));
  *(_QWORD *)(result + 40) = v14;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_24FAC3E20;
  *(_DWORD *)(result + 56) = a3;
  *(_QWORD *)(result + 64) = a4;
  *(_QWORD *)(result + 72) = a5;
  *(_QWORD *)(result + 80) = a6[2];
  v16 = 4;
  if (!a7)
    v16 = 0;
  *(_QWORD *)(result + 48) = v16;
  return result;
}

double sub_22F3B2A20(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  sub_22EA41AB8(v3 + 8, 13, 0, 0);
  *(_QWORD *)(v3 + 8) = &off_24FAC3E20;
  *(_DWORD *)(v3 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_QWORD *)(v3 + 72) = 0;
  *(_OWORD *)(v3 + 80) = 0u;
  return result;
}

unint64_t sub_22F3B2A88(uint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;

  v2 = *(_DWORD *)(a1 + 56);
  if (!v2)
  {
    v8 = *(_OWORD *)(a1 + 64);
    v2 = sub_22F0AB0EC((unint64_t *)&v8);
  }
  v3 = *(_DWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)&v8 = *(_QWORD *)(a1 + 40);
  DWORD2(v8) = v3;
  v9 = v4;
  sub_22EFC70E8(&v8);
  if (v5)
    v6 = v5;
  else
    v6 = v3;
  return v2 | (unint64_t)(v6 << 32);
}

uint64_t sub_22F3B2B04(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v11 = sub_22EFC7430(72, a1, a2, 0);
  v12 = *(_QWORD *)(a6 + 40);
  result = sub_22EA41AB8(v11, 14, a2, a5);
  *(_QWORD *)(result + 40) = v12;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_24FAC3F10;
  *(_DWORD *)(result + 56) = a3;
  *(_DWORD *)(result + 60) = a4;
  *(_QWORD *)(result + 64) = a6;
  return result;
}

uint64_t sub_22F3B2B80(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 14, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC3F10;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  return result;
}

unint64_t sub_22F3B2BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32);
}

uint64_t sub_22F3B2BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;

  v9 = 8 * a5;
  v10 = sub_22EFC7430(64, a1, a2, 8 * a5);
  if (a3)
  {
    v11 = *(_DWORD *)(a3 + 24);
    v12 = *(_QWORD *)(a3 + 40);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  result = sub_22EA41AB8(v10, 45, a2, v11);
  *(_QWORD *)result = &off_24FAC3F88;
  *(_QWORD *)(result + 40) = v12;
  *(_QWORD *)(result + 48) = a3;
  *(_DWORD *)(result + 56) = a5;
  if (a5)
  {
    v14 = (_QWORD *)(result + 64);
    do
    {
      v15 = *a4++;
      *v14++ = v15;
      v9 -= 8;
    }
    while (v9);
  }
  return result;
}

uint64_t sub_22F3B2C90(uint64_t a1, int a2, unsigned int a3)
{
  size_t v5;
  uint64_t v6;

  v5 = 8 * a3;
  v6 = sub_22E3CD3D4(a1 + 2032, v5 + 72, 3);
  *(_DWORD *)v6 = 0;
  *(_DWORD *)(v6 + 4) = a2;
  sub_22EA41AB8(v6 + 8, 45, 0, 0);
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 8) = &off_24FAC3F88;
  *(_DWORD *)(v6 + 64) = a3;
  if (a3)
    bzero((void *)(v6 + 72), v5);
  return v6 + 8;
}

uint64_t sub_22F3B2D20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t *a6, int a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v14 = sub_22EFC7430(88, a1, a2, 0);
  v15 = *(_QWORD *)(a1 + 16832);
  v16 = *a6;
  result = sub_22EA41AB8(v14, 74, a2, *((_DWORD *)a6 + 2));
  *(_QWORD *)(result + 40) = v16;
  *(_QWORD *)(result + 48) = v15;
  *(_QWORD *)result = &off_24FAC4000;
  *(_DWORD *)(result + 56) = a3;
  *(_DWORD *)(result + 60) = a7;
  *(_QWORD *)(result + 64) = a4;
  *(_QWORD *)(result + 72) = a5;
  *(_QWORD *)(result + 80) = a6[2];
  return result;
}

double sub_22F3B2DB8(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  sub_22EA41AB8(v3 + 8, 74, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC4000;
  result = 0.0;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  return result;
}

unint64_t sub_22F3B2E18(uint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;

  v2 = *(_DWORD *)(a1 + 56);
  if (!v2)
  {
    v8 = *(_OWORD *)(a1 + 64);
    v2 = sub_22F0AB0EC((unint64_t *)&v8);
  }
  v3 = *(_DWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)&v8 = *(_QWORD *)(a1 + 40);
  DWORD2(v8) = v3;
  v9 = v4;
  sub_22EFC70E8(&v8);
  if (v5)
    v6 = v5;
  else
    v6 = v3;
  return v2 | (unint64_t)(v6 << 32);
}

uint64_t sub_22F3B2E94(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int a9)
{
  uint64_t v16;
  unint64_t v17;
  uint64_t result;

  v16 = sub_22EFC7430(88, a1, a2, 0);
  if ((a8 & 7) != 0)
    v17 = 0;
  else
    v17 = a8 & 0xFFFFFFFFFFFFFFF8;
  result = sub_22EA41AB8(v16, 42, a2, a7);
  *(_QWORD *)(result + 40) = v17;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_24FAC4078;
  *(_DWORD *)(result + 56) = a3;
  *(_DWORD *)(result + 60) = a4;
  *(_DWORD *)(result + 64) = a9;
  *(_QWORD *)(result + 72) = a5;
  *(_QWORD *)(result + 80) = a6;
  return result;
}

uint64_t sub_22F3B2F30(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 42, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC4078;
  *(_DWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  return result;
}

_QWORD *sub_22F3B2F94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *result;

  v7 = sub_22EFC7430(48, a1, a2, 0);
  result = (_QWORD *)sub_22EA41AB8(v7, 43, a2, a3);
  result[5] = a4;
  *result = &off_24FAC3980;
  return result;
}

uint64_t sub_22F3B2FF4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 56, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 43, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC3980;
  return result;
}

uint64_t sub_22F3B3054(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v13 = sub_22EFC7430(64, a1, a2, 0);
  result = sub_22EA41AB8(v13, 82, a2, a3);
  *(_QWORD *)result = &off_24FAC40F0;
  v15 = 2;
  if (!a7)
    v15 = 0;
  *(_QWORD *)(result + 40) = v15 | a4 & 0xFFFFFFFFFFFFFFFDLL;
  *(_QWORD *)(result + 48) = a5;
  *(_DWORD *)(result + 56) = a6;
  return result;
}

uint64_t sub_22F3B30E0(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 72, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 82, 0, 0);
  *(_QWORD *)(v3 + 8) = &off_24FAC40F0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 64) = 0;
  return result;
}

_QWORD *sub_22F3B3140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *result;

  v7 = sub_22EFC7430(72, a1, a2, 0);
  result = (_QWORD *)sub_22EA41AB8(v7, 48, a2, a3);
  result[5] = a4;
  result[6] = 0;
  *result = &off_24FAC4158;
  result[8] = 0;
  return result;
}

uint64_t sub_22F3B31A4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 48, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC4158;
  *(_QWORD *)(v3 + 72) = 0;
  return result;
}

uint64_t sub_22F3B3204(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v17 = 8 * a10;
  v18 = sub_22EFC7430(104, a1, a2, 8 * a10);
  result = sub_22EFBB5EC(v18, 61, a1, a2, a3, a4, 0, a5, a6, a7);
  *(_QWORD *)result = &off_24FAC41D0;
  *(_DWORD *)(result + 100) = a10;
  if (a10)
  {
    v20 = 0;
    v21 = a9;
    do
    {
      *(_QWORD *)(result + v20 + 104) = a9[v20 / 8];
      v20 += 8;
    }
    while (v17 != v20);
    do
    {
      v22 = *v21++;
      *(_QWORD *)(v22 + 56) = result;
      v17 -= 8;
    }
    while (v17);
  }
  return result;
}

uint64_t sub_22F3B32E8(uint64_t a1, int a2, unsigned int a3)
{
  size_t v6;
  uint64_t v7;

  v6 = 8 * a3;
  v7 = sub_22E3CD3D4(a1 + 2032, v6 + 112, 3);
  *(_DWORD *)v7 = 0;
  *(_DWORD *)(v7 + 4) = a2;
  sub_22EFBB5EC(v7 + 8, 61, a1, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(v7 + 8) = &off_24FAC41D0;
  *(_DWORD *)(v7 + 108) = a3;
  if (a3)
    bzero((void *)(v7 + 112), v6);
  return v7 + 8;
}

uint64_t sub_22F3B3394(uint64_t result, llvm::raw_ostream *a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v3 = result;
  v4 = (_BYTE *)*((_QWORD *)a2 + 4);
  if ((unint64_t)v4 >= *((_QWORD *)a2 + 3))
  {
    result = llvm::raw_ostream::write(a2);
  }
  else
  {
    *((_QWORD *)a2 + 4) = v4 + 1;
    *v4 = 91;
  }
  v5 = *(unsigned int *)(v3 + 100);
  if ((_DWORD)v5)
  {
    v6 = 0;
    v7 = (uint64_t *)(v3 + 104);
    v8 = 8 * v5;
    do
    {
      v9 = *v7;
      if ((v6 & 1) != 0)
        sub_22E47DAC0(a2, ", ");
      result = (*(uint64_t (**)(uint64_t, llvm::raw_ostream *))(*(_QWORD *)v9 + 88))(v9, a2);
      ++v7;
      v6 = 1;
      v8 -= 8;
    }
    while (v8);
  }
  v10 = (_BYTE *)*((_QWORD *)a2 + 4);
  if ((unint64_t)v10 >= *((_QWORD *)a2 + 3))
    return llvm::raw_ostream::write(a2);
  *((_QWORD *)a2 + 4) = v10 + 1;
  *v10 = 93;
  return result;
}

uint64_t sub_22F3B3480(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t result;

  v16 = sub_22EFC7430(88, a1, a2, 0);
  result = sub_22EA41AB8(v16, 58, a2, a3);
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6 & 0xFFFFFFFFFFFFFFFBLL;
  *(_DWORD *)(result + 64) = a7;
  *(_QWORD *)result = &off_24FAC4248;
  *(_QWORD *)(result + 72) = a8;
  *(_QWORD *)(result + 80) = a9;
  return result;
}

uint64_t sub_22F3B3514(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 58, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC4248;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  return result;
}

uint64_t sub_22F3B357C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80) + 72), *(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80));
  if (v8)
    v9 = v8 + 40;
  else
    v9 = 0;
  v10 = sub_22EFC7430(152, a1, v9, 0);
  result = sub_22EA41AB8(v10, 69, v9, 0);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = a2;
  *(_QWORD *)result = &off_24FAC39F8;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = a3;
  *(_QWORD *)(result + 72) = a4;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_22F3B3610(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 160, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 69, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC39F8;
  *(_QWORD *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 88) = 0;
  return result;
}

uint64_t sub_22F3B3674(uint64_t a1, llvm::raw_ostream *a2)
{
  uint64_t i;
  uint64_t result;
  _BYTE *v5;
  _BYTE *v6;

  llvm::raw_ostream::operator<<();
  for (i = 0; i != 8; ++i)
  {
    result = llvm::raw_ostream::operator<<();
    if ((_DWORD)i == 1)
    {
      v5 = (_BYTE *)*((_QWORD *)a2 + 4);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 3))
      {
        result = llvm::raw_ostream::write(a2);
      }
      else
      {
        *((_QWORD *)a2 + 4) = v5 + 1;
        *v5 = 45;
      }
    }
  }
  v6 = (_BYTE *)*((_QWORD *)a2 + 4);
  if ((unint64_t)v6 >= *((_QWORD *)a2 + 3))
    return llvm::raw_ostream::write(a2);
  *((_QWORD *)a2 + 4) = v6 + 1;
  *v6 = 125;
  return result;
}

uint64_t sub_22F3B377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;

  v9 = (_QWORD *)sub_22EA41AB8(a1, 73, a3, 0);
  v9[5] = 0;
  v9[6] = a4;
  v9[7] = 0;
  *v9 = &off_24FAC3A70;
  v10 = (uint64_t)(v9 + 8);
  v11 = (unsigned int *)sub_22EF53B24((uint64_t)(v9 + 8), a5);
  if (sub_22EF53D60(v11))
    sub_22EF5908C(a2, (uint64_t)sub_22E7B7544, v10);
  return a1;
}

uint64_t sub_22F3B37FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80) + 72), *(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80));
  if (v6)
    v7 = v6 + 40;
  else
    v7 = 0;
  v8 = sub_22EFC7430(136, a1, v7, 0);
  return sub_22F3B377C(v8, a1, v7, a2, a3);
}

_DWORD *sub_22F3B3868(uint64_t a1, int a2)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v7[10];

  v7[9] = *MEMORY[0x24BDAC8D0];
  v4 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 144, 3);
  v5 = v4 + 2;
  *v4 = 0;
  v4[1] = a2;
  LODWORD(v7[0]) = 0;
  sub_22F3B377C((uint64_t)(v4 + 2), a1, 0, 0, (uint64_t)v7);
  if (LODWORD(v7[0]) >= 2)
    sub_22EF53BC0(v7);
  return v5;
}

llvm::raw_ostream *sub_22F3B3910(int a1, llvm::raw_ostream *a2)
{
  return sub_22E47DAC0(a2, "unnamed-global-constant");
}

unsigned __int8 **sub_22F3B3920(unsigned __int8 **a1, int a2)
{
  char *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;

  v3 = off_24FAC43B8[a2];
  v4 = *a1;
  if (!v4)
  {
    v4 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)a1[1]);
    *a1 = v4;
  }
  v4[*v4 + 1] = 1;
  v5 = *a1;
  v6 = **a1;
  *v5 = v6 + 1;
  *(_QWORD *)&v5[8 * v6 + 16] = v3;
  return a1;
}

void sub_22F3B398C(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B39B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 36) << 32);
}

uint64_t sub_22F3B39C0(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return nullsub_910(a1);
}

void sub_22F3B39F4(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3A3C(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return nullsub_910(a1);
}

void sub_22F3B3A70(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3AB8(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return nullsub_910(a1);
}

void sub_22F3B3AEC(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3B34(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return nullsub_910(a1);
}

void sub_22F3B3B68(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3BB4(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B3BD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32);
}

void sub_22F3B3BEC(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3C10(uint64_t a1)
{
  return *(_QWORD *)(a1 + 64);
}

uint64_t sub_22F3B3C18(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

void sub_22F3B3C24(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3C4C(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3C74(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3C98(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

unint64_t sub_22F3B3CA0(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 48), a1);
}

unint64_t sub_22F3B3CAC(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 48);
  v2 = (uint64_t *)(a1 + 48);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

unint64_t sub_22F3B3CC8(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 56) + 48), *(_QWORD *)(a1 + 56));
}

void sub_22F3B3CD8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3D00(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3D28(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3D4C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48));
}

void sub_22F3B3D60(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3D88(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3DB0(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B3DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 56) << 32);
}

void sub_22F3B3DE8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3E0C(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  return nullsub_910(a1);
}

void sub_22F3B3E20(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B3E58(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3E7C(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return nullsub_910(a1);
}

void sub_22F3B3EA4(uint64_t a1)
{
  nullsub_910(a1 + 64);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3EE0(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  return nullsub_910(a1);
}

void sub_22F3B3F14(_QWORD *a1)
{
  *a1 = &off_24FAC2EA0;
  nullsub_910(a1 + 9);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B3F5C(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return nullsub_910(a1);
}

void sub_22F3B3F84(uint64_t a1)
{
  nullsub_910(a1 + 40);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B3FC0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(unsigned int *)(a1 + 72);
  return v1 | (sub_22F3B440C(a1) << 32);
}

uint64_t sub_22F3B3FE4(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B400C(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B4048(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96);
}

void sub_22F3B4054(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B4078(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC39F8;
  v3 = *(_DWORD *)(a1 + 80);
  v2 = (uint64_t *)(a1 + 80);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  return nullsub_910(a1);
}

void sub_22F3B40B4(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC39F8;
  v3 = *(_DWORD *)(a1 + 80);
  v2 = (uint64_t *)(a1 + 80);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B4104(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC3A70;
  v3 = *(_DWORD *)(a1 + 64);
  v2 = (uint64_t *)(a1 + 64);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  return nullsub_910(a1);
}

void sub_22F3B4140(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC3A70;
  v3 = *(_DWORD *)(a1 + 64);
  v2 = (uint64_t *)(a1 + 64);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B4190(uint64_t result, uint64_t a2, uint64_t a3, char a4, int a5, char a6)
{
  int v6;

  *(_OWORD *)(result + 72) = 0u;
  *(_OWORD *)(result + 60) = 0u;
  *(_OWORD *)(result + 44) = 0u;
  *(_OWORD *)(result + 28) = 0u;
  *(_OWORD *)(result + 12) = 0u;
  *(_QWORD *)(result + 88) = a2;
  *(_QWORD *)(result + 96) = 0;
  if (a5)
    v6 = 4;
  else
    v6 = 0;
  *(_DWORD *)(result + 104) = v6 & 0xFFFFFFE4 | a4 & 3 | (8 * (a6 & 3)) | *(_DWORD *)(result + 104) & 0xFFF00000;
  *(_WORD *)(result + 108) &= 0xC000u;
  *(_DWORD *)(result + 112) &= 0x80000000;
  *(_QWORD *)(result + 120) = 0;
  *(_QWORD *)(result + 128) = 0;
  *(_QWORD *)(result + 136) = a3;
  *(_QWORD *)result = 0x8007FF8000203200;
  *(_BYTE *)(result + 10) = 17;
  *(_WORD *)(result + 8) = -16300;
  return result;
}

uint64_t *sub_22F3B4218(uint64_t *result, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *v4;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;

  if (a4 != a3)
  {
    v4 = a3;
    v6 = a4 - a3;
    v7 = (_QWORD *)result[1];
    v9 = result;
    if (v6 > (uint64_t)((result[2] & 0xFFFFFFFFFFFFFFF8) - (_QWORD)v7) >> 3)
    {
      result = (uint64_t *)sub_22E78E458(result, a2, v6 + (((uint64_t)v7 - *result) >> 3));
      v7 = (_QWORD *)v9[1];
    }
    v8 = v7;
    do
      *v8++ = *v4++;
    while (v4 != a4);
    v9[1] = (uint64_t)&v7[v6];
  }
  return result;
}

uint64_t sub_22F3B42B4(uint64_t a1)
{
  nullsub_910(a1 + 40);
  return nullsub_910(a1);
}

void sub_22F3B42DC(uint64_t a1)
{
  nullsub_910(a1 + 40);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B4318(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v14 = *(_QWORD *)(a5 + 40);
  v15 = *(_DWORD *)(a6 + 28) & 0x7F;
  v16 = v15 > 0x2F;
  v17 = (1 << v15) & 0xC00000060000;
  v18 = v16 || v17 == 0;
  v19 = a6;
  if (!v18)
    v19 = sub_22EFBAEA4(a6);
  sub_22F3B2790(a1, 47, a2, a3, a4, v14, a5, v19);
  *(_QWORD *)a1 = &off_24FAC3E98;
  if ((*(_DWORD *)(a6 + 28) & 0x7F) == 0x2F)
    v20 = a6;
  else
    v20 = 0;
  *(_QWORD *)(a1 + 80) = v20;
  *(_QWORD *)(a1 + 88) = v20;
  v21 = *(_BYTE *)(a1 + 96);
  *(_BYTE *)(a1 + 96) = v21 & 0xFE | a7;
  if (v20 && (*(_BYTE *)(v20 + 96) & 1) != 0)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(v20 + 88);
    *(_BYTE *)(a1 + 96) = v21 | 1;
  }
  return a1;
}

unint64_t sub_22F3B440C(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 50) & 1) != 0)
    return *(unsigned int *)(a1 + 76);
  if (sub_22EFCCC7C(a1 + 40))
    return *(unsigned int *)(a1 + 24);
  if ((*(_WORD *)(a1 + 48) & 0x80) != 0)
    sub_22EFCC320(a1 + 40);
  return (unint64_t)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56)) >> 32;
}

uint64_t sub_22F3B4474(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, *(const char **)(a1 + 8), *(unsigned int *)(a1 + 16), *(unsigned __int16 *)(a1 + 20), *(unsigned __int16 *)(a1 + 22));
}

uint64_t sub_22F3B44B4(uint64_t a1, char *__str, size_t __size)
{
  return snprintf(__str, __size, *(const char **)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

unint64_t sub_22F3B44EC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 48);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(a1);
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 16))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 48) = v1;
  }
  return v1;
}

void sub_22F3B4538(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22F3B455C(_QWORD *result, const void *a2, unsigned int a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  void *v8;

  *result = 0;
  if (a3)
  {
    v6 = result;
    v7 = 8 * a3;
    v8 = (void *)sub_22E3CD3D4(a4 + 2032, v7, 3);
    *v6 = v8;
    *((_DWORD *)v6 + 2) = a3;
    return memcpy(v8, a2, v7);
  }
  return result;
}

_QWORD *sub_22F3B45C4(_QWORD *result, const void *a2, unsigned int a3, const void *a4, uint64_t a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;

  if (a3)
  {
    v8 = result;
    v9 = 4 * a3;
    v10 = a5 + 2032;
    v11 = (void *)sub_22E3CD3D4(a5 + 2032, v9, 3);
    bzero(v11, v9);
    v8[2] = v11;
    memcpy(v11, a4, v9);
    *v8 = 0;
    v12 = (void *)sub_22E3CD3D4(v10, 8 * a3, 3);
    *v8 = v12;
    *((_DWORD *)v8 + 2) = a3;
    return memcpy(v12, a2, 8 * a3);
  }
  return result;
}

unint64_t sub_22F3B466C(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  unint64_t v3;

  result = sub_22EFCE144(a1 + 48, a2);
  if (result)
  {
    while (1)
    {
      v3 = result & 0xFFFFFFFFFFFFFFF8;
      if ((result & 4) == 0 || !v3)
        break;
      result = *(_QWORD *)v3;
      if (!*(_QWORD *)v3 || (*(_DWORD *)(result + 28) & 0x7F) != 0x33)
      {
        result = *(_QWORD *)(v3 + 8);
        if (result)
          continue;
      }
      return result;
    }
    if ((*(_DWORD *)(v3 + 28) & 0x7F) != 0x33 || v3 == 0)
      return 0;
    else
      result &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_22F3B46CC(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 < 8)
    return 0;
  v4 = v2 & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v4 + 72) & 1) != 0)
  {
    *(_BYTE *)(v4 + 72) &= ~1u;
    v5 = sub_22EFC72E8(a1);
    (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v5 + 16048) + 144))(*(_QWORD *)(v5 + 16048), a1);
  }
  result = sub_22F3346EC(a1);
  if (result)
  {
    result = sub_22F272660(result);
    if (result)
    {
      v6 = result;
      v7 = *(_QWORD *)(result + 120);
      if (!v7)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 96) + 88), *(_QWORD *)(result + 96));
        v7 = *(_QWORD *)(v6 + 120);
      }
      if (v7 < 8)
        v8 = 0;
      else
        v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
      if (v8)
        return v8;
      else
        return v6;
    }
  }
  return result;
}

unint64_t sub_22F3B4790(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;
  unint64_t v5;
  BOOL v6;

  result = sub_22EFCE144(a1 + 48, a2);
  if (result)
  {
    while (1)
    {
      v5 = result & 0xFFFFFFFFFFFFFFF8;
      if ((result & 4) == 0 || !v5)
        break;
      result = *(_QWORD *)v5;
      if (*(_QWORD *)v5)
        v6 = (*(_DWORD *)(*(_QWORD *)v5 + 28) & 0x7F) == 25;
      else
        v6 = 0;
      if (!v6 || a3 == (*(_BYTE *)(result + 73) & 0x40) >> 6)
      {
        result = *(_QWORD *)(v5 + 8);
        if (result)
          continue;
      }
      return result;
    }
    result = 0;
    if (v5 && (*(_DWORD *)(v5 + 28) & 0x7F) == 0x19)
    {
      if (a3 != (*(_BYTE *)(v5 + 73) & 0x40) >> 6)
        return v5;
      else
        return 0;
    }
  }
  return result;
}

unint64_t sub_22F3B4828(uint64_t *a1)
{
  unint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = a1[14];
  if (!result)
  {
    v3 = a1[15];
    if (!v3)
    {
      sub_22E3CD31C((uint64_t *)(a1[12] + 88), a1[12]);
      v3 = a1[15];
    }
    if (v3 >= 8 && (v4 = *(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8)) != 0)
    {
      return *(_QWORD *)(v4 + 112);
    }
    else
    {
      result = sub_22E3CD31C((uint64_t *)(a1[12] + 88), a1[12]);
      if (result)
      {
        v5 = result;
        do
        {
          result = *(_QWORD *)(v5 + 112);
          if (result)
            break;
          if ((*(_BYTE *)(v5 + 88) & 3) != 0)
            return 0;
          result = sub_22E3CD31C((uint64_t *)(v5 + 88), v5);
          v5 = result;
        }
        while (result);
      }
    }
  }
  return result;
}

uint64_t sub_22F3B48C4(unint64_t a1)
{
  uint64_t v2;

  *(_BYTE *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 72) &= ~1u;
  v2 = sub_22EFC72E8(a1);
  return (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v2 + 16048) + 144))(*(_QWORD *)(v2 + 16048), a1);
}

unint64_t sub_22F3B4908(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  unint64_t *v10;
  uint64_t v11;
  unint64_t *v12;

  v6 = *(_QWORD *)(a1 + 120);
  if (!v6)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v6 = *(_QWORD *)(a1 + 120);
  }
  if (v6 < 8)
    return 0;
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v7 + 72) & 1) != 0)
  {
    *(_BYTE *)(v7 + 72) &= ~1u;
    v8 = sub_22EFC72E8(a1);
    (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v8 + 16048) + 144))(*(_QWORD *)(v8 + 16048), a1);
  }
  result = sub_22EFDA4F0(a1 + 48, a2, a3);
  if (result)
    return result;
  v10 = (unint64_t *)sub_22F276134(a1);
  v11 = sub_22F2761B0(a1);
  if (v10 == (unint64_t *)v11)
    return 0;
  v12 = (unint64_t *)v11;
  while (1)
  {
    result = sub_22EFDA7BC(*v10, a2, a3);
    if (result)
      break;
    if (++v10 == v12)
      return 0;
  }
  return result;
}

unint64_t sub_22F3B49DC(unint64_t a1)
{
  unint64_t v1;

  while (1)
  {
    v1 = a1;
    if (!a1 || (sub_22F3B4A28(a1) & 1) != 0)
      break;
    if (!sub_22EFDB060(v1))
      return 0;
    a1 = sub_22F3B46CC(v1);
  }
  return v1;
}

uint64_t sub_22F3B4A28(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if (v3 != a1)
    return 0;
  v5 = v2 & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFF8) + 72);
  if ((v6 & 1) != 0)
  {
    *(_BYTE *)(v5 + 72) = v6 & 0xFE;
    v7 = sub_22EFC72E8(a1);
    (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v7 + 16048) + 144))(*(_QWORD *)(v7 + 16048), a1);
    v6 = *(unsigned __int8 *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 72);
  }
  return (v6 >> 2) & 1;
}

uint64_t sub_22F3B4AC4(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22EFC72E8(a1);
  result = sub_22E3CD3D4(v2 + 2032, 88, 3);
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_BYTE *)(result + 72) = *(_BYTE *)(result + 72) & 0xC0 | 2;
  *(_DWORD *)(result + 76) = 0;
  *(_DWORD *)(result + 80) = 0;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a1 + 120) & 7 | result;
  *(_QWORD *)(result & 0xFFFFFFFFFFFFFFF8) = a1;
  return result;
}

uint64_t *sub_22F3B4B38(unint64_t a1)
{
  uint64_t *result;
  int v3;
  uint64_t v4;

  result = (uint64_t *)sub_22F3B4AC4(a1);
  if (a1)
  {
    v3 = 0;
    v4 = a1;
    do
    {
      if (v4 != a1)
        *(_QWORD *)(v4 + 120) = *(_QWORD *)(a1 + 120);
      result = (uint64_t *)(v4 + 88);
      if ((*(_BYTE *)(v4 + 88) & 3) != 0)
      {
        if (v3)
          return result;
        v3 = 1;
      }
      result = (uint64_t *)sub_22E3CD31C(result, v4);
      if (result == (uint64_t *)a1)
        break;
      v4 = (uint64_t)result;
    }
    while (result);
  }
  return result;
}

unint64_t sub_22F3B4BA0(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 120);
  if (!v4)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v4 = *(_QWORD *)(v3 + 120);
  }
  if (v4 < 8)
    return 0;
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v5 + 72) & 1) != 0)
  {
    *(_BYTE *)(v5 + 72) &= ~1u;
    v6 = sub_22EFC72E8(v3);
    (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v6 + 16048) + 144))(*(_QWORD *)(v6 + 16048), v3);
  }
  do
  {
    v7 = *(_QWORD *)(v3 + 40);
    if ((v7 & 7) != 0)
      v8 = 0;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFFF8;
    if (v8 == a2)
      break;
    v3 = sub_22F3B46CC(v3);
  }
  while (v3);
  return v3;
}

uint64_t sub_22F3B4C44(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(result + 40);
  if ((v2 & 7) != 0)
    v3 = 0;
  else
    v3 = v2 & 0xFFFFFFFFFFFFFFF8;
  if (v3 != a2)
  {
    v5 = sub_22F259248(result);
    if ((_QWORD *)v5 == v6)
    {
      return 0;
    }
    else
    {
      v7 = (_QWORD *)v5;
      v8 = v6;
      do
      {
        result = sub_22F3B4C44(*v7, a2);
        if (result)
          break;
        ++v7;
      }
      while (v7 != v8);
    }
  }
  return result;
}

unint64_t sub_22F3B4CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(a1 + 104);
  if (!v6)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v6 = *(_QWORD *)(a1 + 104);
  }
  if (v6 < 8)
    return 0;
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  if (!v7 || (*(_BYTE *)(v7 + 8) & 4) != 0)
    return 0;
  result = sub_22EFDA1A0(a1, a2, a3, 0);
  if (result)
    return result;
  v9 = sub_22F259248(a1);
  if ((_QWORD *)v9 == v10)
    return 0;
  v11 = (_QWORD *)v9;
  v12 = v10;
  do
  {
    result = sub_22F3B4CBC(*v11, a2, a3);
    if (result)
      break;
    ++v11;
  }
  while (v11 != v12);
  return result;
}

uint64_t sub_22F3B4D74(uint64_t a1, uint64_t *a2, int a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  while (1)
  {
    v5 = a1;
    v6 = *(_QWORD *)(a1 + 120);
    if (!v6)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
      v6 = *(_QWORD *)(v5 + 120);
    }
    if (v6 < 8)
      return 0;
    v7 = v6 & 0xFFFFFFFFFFFFFFF8;
    if ((*(_BYTE *)(v7 + 72) & 1) != 0)
    {
      *(_BYTE *)(v7 + 72) &= ~1u;
      v8 = sub_22EFC72E8(v5);
      (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v8 + 16048) + 144))(*(_QWORD *)(v8 + 16048), v5);
    }
    v9 = sub_22F3B4E88(v5);
    if (v9)
    {
      result = sub_22EFDA1A0(v9, *a2, a3, 0);
      if (result)
        return result;
    }
    v11 = *a2;
    if (a3)
    {
      result = sub_22EFDD9A0(v5, v11);
LABEL_10:
      if (result)
        return result;
      goto LABEL_11;
    }
    result = sub_22EFDDB1C(v5, v11);
    if (result)
      return result;
    if (!sub_22F3B46CC(v5))
    {
      result = sub_22EFDBA90(v5, *a2, 1, 0, 1, 0);
      if (result)
        return result;
      result = sub_22F3B4D74(v5, a2, 1);
      goto LABEL_10;
    }
LABEL_11:
    result = sub_22F3B46CC(v5);
    if (!result)
      return result;
    a1 = sub_22F3B46CC(v5);
  }
}

uint64_t sub_22F3B4E88(unint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 < 8)
    return 0;
  v3 = v2 & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)v3;
  if (!*(_QWORD *)v3)
    return 0;
  if ((*(_BYTE *)(v3 + 72) & 1) != 0)
  {
    *(_BYTE *)(v3 + 72) &= ~1u;
    v6 = sub_22EFC72E8(a1);
    (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(v6 + 16048) + 144))(*(_QWORD *)(v6 + 16048), a1);
  }
  v7 = sub_22EFC72E8(a1);
  return sub_22F368BD4(v7, v4);
}

unint64_t sub_22F3B4F18(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[2];
  int v7;
  _QWORD *v8;
  __int128 v9;
  _QWORD v10[18];
  _QWORD v11[17];

  v11[16] = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 >= 8 && (*(_BYTE *)((v2 & 0xFFFFFFFFFFFFFFF8) + 72) & 0x20) != 0)
    return *(unsigned int *)((v2 & 0xFFFFFFFFFFFFFFF8) + 76);
  v6[0] = 0;
  v6[1] = 0;
  v7 = 0;
  v8 = v10;
  v9 = xmmword_22F44E310;
  v10[16] = v11;
  v10[17] = 0x2000000000;
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  sub_22F0BD750((uint64_t)v6, v3);
  *(_BYTE *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 72) |= 0x20u;
  v4 = sub_22F0BCA28((uint64_t)v6);
  *(_DWORD *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 76) = v4;
  sub_22EFC59B8((uint64_t)v6);
  return v4;
}

uint64_t sub_22F3B5044(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, char a10, char a11, char a12, char a13, __int16 a14, char a15, __int16 a16, char a17)
{
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  v23 = (_QWORD *)sub_22EA41AB8(a1, 24, a7, a2);
  *v23 = &unk_24FAC2F18;
  v23[5] = a4;
  sub_22EFCB6FC((uint64_t)(v23 + 6), 24);
  *(_QWORD *)a1 = &off_24FAC4448;
  *(_QWORD *)(a1 + 80) = a5;
  *(_QWORD *)(a1 + 88) = a6;
  *(_QWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 108) = a3;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  v24 = 0x20000;
  if (!a8)
    v24 = 0;
  v25 = 0x40000;
  if (!a9)
    v25 = 0;
  v26 = 0x80000;
  if (!a10)
    v26 = 0;
  v27 = 0x100000;
  if (!a11)
    v27 = 0;
  v28 = 0x200000;
  if (!a13)
    v28 = 0;
  v29 = v25 | v24 | v26 | v27;
  v30 = 0x40001E000;
  if (a17)
    v30 = 0x60001E000;
  *(_QWORD *)(a1 + 56) = v29 | v28 | v30 | ((a15 & 3) << 24) | *(_QWORD *)(a1 + 56) & 0xFFFFFF8000001FFFLL;
  if (a12)
    v31 = 512;
  else
    v31 = 0;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a1 + 28) & 0xFFFFFDFF | v31;
  return a1;
}

uint64_t sub_22F3B51C0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, char a10, char a11, char a12, char a13, __int16 a14, char a15, __int16 a16, char a17)
{
  uint64_t v20;

  v20 = sub_22EFC7430(144, a1, a7, 0);
  return sub_22F3B5044(v20, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

_DWORD *sub_22F3B527C(uint64_t a1, int a2)
{
  _DWORD *v2;
  _QWORD *v3;

  v2 = sub_22EFC73F0(144, a1, a2, 0);
  v3 = (_QWORD *)sub_22EA41AB8((uint64_t)v2, 24, 0, 0);
  *v3 = &unk_24FAC2F18;
  v3[5] = 0;
  sub_22EFCB6FC((uint64_t)(v3 + 6), 24);
  *(_QWORD *)v2 = &off_24FAC4448;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *(_OWORD *)(v2 + 31) = 0u;
  *((_QWORD *)v2 + 7) = *((_QWORD *)v2 + 7) & 0xFFFFFF8000001FFFLL | 0x40003E000;
  v2[7] &= ~0x200u;
  return v2;
}

unint64_t sub_22F3B531C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 112);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(a1);
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 40))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 112) = v1;
  }
  return v1;
}

_QWORD *sub_22F3B5364(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *result;

  v4 = sub_22EFC72E8(a1);
  result = sub_22F368D4C(v4, a2, a1);
  *(_QWORD *)(a1 + 56) |= 0x400000uLL;
  *(_QWORD *)(a2 + 56) |= 0x800000uLL;
  return result;
}

_QWORD *sub_22F3B53AC(_QWORD *result, uint64_t a2, const void *a3, uint64_t a4, const void *a5, uint64_t a6)
{
  _QWORD *v10;

  result[12] = 0;
  *((_DWORD *)result + 26) = a4;
  if (a4 | a6)
  {
    v10 = result;
    result = (_QWORD *)sub_22E3CD3D4(a2 + 2032, (4 * a6 + 8 * a4), 3);
    v10[12] = result;
    if (a4)
      result = memmove(result, a3, 8 * a4);
    if (a6)
      return memmove((void *)(v10[12] + 8 * *((unsigned int *)v10 + 26)), a5, 4 * a6);
  }
  return result;
}

uint64_t sub_22F3B5450(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  int v9;

  if ((*(_BYTE *)(result + 29) & 2) == 0)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 40);
    if ((v4 & 7) == 1)
      goto LABEL_3;
    if ((v4 & 7u) < 2)
      return result;
    if ((v4 & 7) == 2)
    {
LABEL_3:
      v5 = 1;
    }
    else
    {
      v9 = *(_DWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
      v5 = v9 - 3;
      if (v9 == 3)
        return result;
    }
    v6 = 0;
    do
    {
      result = sub_22F32ADEC(v3, v6);
      v7 = result;
      v8 = *(unsigned int *)(a2 + 8);
      if (v8 >= *(unsigned int *)(a2 + 12))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v8 = *(unsigned int *)(a2 + 8);
      }
      *(_DWORD *)(*(_QWORD *)a2 + 4 * v8) = v7;
      ++*(_DWORD *)(a2 + 8);
      ++v6;
    }
    while (v5 != v6);
  }
  return result;
}

_QWORD *sub_22F3B551C(uint64_t a1, uint64_t a2, const void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12;
  uint64_t v13;
  const void *v14;

  if ((*(_BYTE *)(a1 + 29) & 2) != 0)
  {
    v14 = 0;
    v13 = 0;
  }
  else
  {
    v12 = sub_22F0D356C(*(_QWORD *)(a1 + 40), a5, a6, (uint64_t)a3, a4, *(_DWORD *)(a1 + 108));
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a1 + 56) & 0xFFFFFFF3FFFFFFFFLL | ((unint64_t)(v12 & 3) << 34);
    if ((v12 & 3) != 0)
      v13 = 0;
    else
      v13 = a6;
    if ((v12 & 3) != 0)
      v14 = 0;
    else
      v14 = (const void *)a5;
  }
  return sub_22F3B53AC((_QWORD *)a1, a2, a3, a4, v14, v13);
}

unint64_t sub_22F3B55B8(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  unint64_t v4;

  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    v3 = *(_QWORD *)(a1 + 40);
    if ((v3 & 7) != 0)
      v4 = 0;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFFF8;
    return sub_22EFDD7A0(result, v4);
  }
  return result;
}

void sub_22F3B55DC(uint64_t a1)
{
  uint64_t v1;

  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1);
  if (v1)
    sub_22F0D60E4(v1);
}

uint64_t sub_22F3B5618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  int v16;
  __int16 v17;
  char v18;
  __int16 v19;

  v19 = 0;
  v5 = sub_22EFDC8D0(a1, a2, a3, (_BYTE *)&v19 + 1, (BOOL *)&v19);
  v6 = sub_22E3CB704(*(llvm::StringMapImpl **)(a2 + 15192), "self", 4uLL);
  v7 = sub_22EFC4364(a2, a1 + 48, 0, v6, v5, 0);
  *(_QWORD *)(a1 + 120) = v7;
  if ((_BYTE)v19)
  {
    v14 = 0uLL;
    v16 = 0;
    v15 = 0;
    v18 = 120;
    v17 = 0;
    v8 = sub_22F392D7C(a2, &v14);
    sub_22EFCA95C(v7, v8);
  }
  if (HIBYTE(v19))
    *(_BYTE *)(v7 + 96) |= 0x80u;
  v9 = sub_22E3CB704(*(llvm::StringMapImpl **)(a2 + 15192), "_cmd", 4uLL);
  v10 = sub_22F36E228(a2);
  v11 = *(_QWORD *)(v10 + 48);
  if (v11)
    v12 = v11 & 0xFFFFFFFFFFFFFFF0;
  else
    v12 = sub_22EF6462C(a2, v10);
  result = sub_22EFC4364(a2, a1 + 48, 0, v9, v12, 1);
  *(_QWORD *)(a1 + 128) = result;
  return result;
}

unint64_t sub_22F3B5740(uint64_t a1)
{
  uint64_t *v1;
  unsigned int v2;
  uint64_t v4[2];

  v1 = *(uint64_t **)(a1 + 88);
  if (!v1)
    return 0;
  v4[0] = *v1;
  v4[1] = (uint64_t)(v1 + 1);
  v2 = sub_22F116708(v4);
  return v2 | (sub_22F1167E8(v4) << 32);
}

void sub_22F3B5794(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_22EFC72E8(a1);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = sub_22F1133DC(&v3, v2);
  sub_22F409EB0((uint64_t *)&v4, v2, 0, 0, 1);
}

void sub_22F3B57F0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(a1 + 80);
  v4 = sub_22EFC72E8(a1);
  v8 = sub_22F1133DC(&v7, v4);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if ((v5 & 4) != 0)
    v6 = (_QWORD *)*v6;
  sub_22F409EE0((uint64_t *)&v8, a2, (unint64_t)v6, 1);
}

unint64_t sub_22F3B5854(unint64_t a1)
{
  unint64_t v2;
  _QWORD v4[2];
  int v5;
  _QWORD *v6;
  __int128 v7;
  _QWORD v8[18];
  _QWORD v9[17];

  v9[16] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a1 + 60) & 0x40) != 0)
    return *(unsigned int *)(a1 + 136);
  v4[0] = 0;
  v4[1] = 0;
  v5 = 0;
  v6 = v8;
  v7 = xmmword_22F44E310;
  v8[16] = v9;
  v8[17] = 0x2000000000;
  sub_22F0BDBD8((uint64_t)v4, a1);
  *(_QWORD *)(a1 + 56) |= 0x4000000000uLL;
  v2 = sub_22F0BCA28((uint64_t)v4);
  *(_DWORD *)(a1 + 136) = v2;
  sub_22EFC59B8((uint64_t)v4);
  return v2;
}

uint64_t sub_22F3B5928(uint64_t a1, uint64_t a2, unsigned __int8 a3, int a4, __int16 a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t result;

  v17 = sub_22EFC7430(104, a1, a2, 0);
  result = sub_22EA41AB8(v17, 39, a2, a6);
  *(_QWORD *)(result + 40) = a7;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a1 | 2;
  *(_QWORD *)(result + 72) = result;
  *(_QWORD *)(result + 80) = a9 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)result = &off_24FAC4640;
  *(_WORD *)(result + 88) = a5 & 0x3FFF | (a3 << 14);
  *(_DWORD *)(result + 92) = a4;
  *(_DWORD *)(result + 96) = a8;
  return result;
}

uint64_t sub_22F3B59D8(uint64_t a1, int a2)
{
  _DWORD *v3;
  uint64_t result;

  v3 = sub_22EFC73F0(104, a1, a2, 0);
  result = sub_22EA41AB8((uint64_t)v3, 39, 0, 0);
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = a1 | 2;
  *(_QWORD *)(result + 72) = result;
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)result = &off_24FAC4640;
  *(_WORD *)(result + 88) = 0;
  *(_DWORD *)(result + 92) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

unint64_t sub_22F3B5A40(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6[2];

  v1 = *(unsigned int *)(a1 + 92);
  if (!(_DWORD)v1)
    v1 = *(unsigned int *)(a1 + 24);
  v2 = v1;
  if (*(_DWORD *)(a1 + 96))
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
    if ((v3 & 4) != 0)
      v4 = (_QWORD *)*v4;
    v6[0] = *v4;
    v6[1] = (uint64_t)(v4 + 1);
    v2 = sub_22F1167E8(v6);
  }
  return v1 | (v2 << 32);
}

_DWORD *sub_22F3B5AA4(uint64_t a1, int a2, const void *a3, uint64_t a4, int a5)
{
  size_t v9;
  _DWORD *v10;
  _DWORD *v11;

  v9 = 8 * a4;
  v10 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a4 + 16, 3);
  v11 = v10;
  *v10 = a2;
  v10[1] = a5;
  v10[2] = a4;
  if (a4)
    memmove(v10 + 4, a3, v9);
  return v11;
}

uint64_t *sub_22F3B5B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  uint64_t *v16;
  uint64_t v17;

  v16 = (uint64_t *)sub_22EFC7430(128, a1, a2, 0);
  v17 = sub_22F3B5C58((uint64_t)v16, a1, a2, a3, a4, a5, a7, a6, a8);
  *(_QWORD *)(v17 + 120) = (*(_QWORD *)(v17 + 120) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                           * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000) + 20) >> 45) & 1))) ^ 4;
  sub_22F36D148(a1, v16, a6);
  return v16;
}

uint64_t sub_22F3B5BE0(uint64_t a1, int a2)
{
  _DWORD *v3;
  uint64_t result;

  v3 = sub_22EFC73F0(128, a1, a2, 0);
  result = sub_22F3B5C58((uint64_t)v3, a1, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(result + 120) = (*(_QWORD *)(result + 120) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                                 * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000)
                                                                                               + 20) >> 45) & 1))) ^ 4;
  return result;
}

uint64_t sub_22F3B5C58(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9)
{
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v15 = (_QWORD *)sub_22EA41AB8(a1, 22, a3, a7);
  *v15 = &unk_24FAC2F18;
  v15[5] = a5;
  v16 = (uint64_t)(v15 + 6);
  sub_22EFCB6FC((uint64_t)(v15 + 6), 22);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = a2 | 2;
  *(_DWORD *)(a1 + 60) = a4;
  *(_QWORD *)a1 = &off_24FAC44C0;
  *(_QWORD *)(a1 + 96) = a1;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_22F3B5D64((unint64_t *)(a1 + 88), a8);
  if (a8)
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a8 + 120);
  if (a9)
    v17 = 512;
  else
    v17 = 0;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a1 + 28) & 0xFFFFFDFF | v17;
  *(_QWORD *)(a1 + 112) = a6;
  if (a6)
  {
    v19 = *(unsigned int *)(a6 + 8);
    if ((_DWORD)v19)
    {
      v20 = (uint64_t *)(a6 + 16);
      v21 = 8 * v19;
      do
      {
        v22 = *v20++;
        sub_22EFC80B8(v22, v16);
        v21 -= 8;
      }
      while (v21);
    }
  }
  return a1;
}

uint64_t sub_22F3B5D64(unint64_t *a1, uint64_t a2)
{
  unint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;

  if (a2)
  {
    v4 = *(_QWORD *)(a2 + 96);
    a1[1] = v4;
    v6 = a1;
    v5 = sub_22E3CD31C((uint64_t *)(v4 + 88), v4);
    a1 = v6;
    *v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    *((_DWORD *)v6 - 15) |= *(_DWORD *)(v5 + 28) & 0x260000;
    v2 = (unint64_t *)v6[1];
  }
  else
  {
    v2 = a1 - 11;
    a1[1] = (unint64_t)(a1 - 11);
  }
  return sub_22E7B7A74((uint64_t)(v2 + 11), (uint64_t)(a1 - 11));
}

unint64_t sub_22F3B5DDC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = result;
  v2 = *(_QWORD *)(result + 120);
  if (!v2)
  {
    result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 96) + 88), *(_QWORD *)(result + 96));
    v2 = *(_QWORD *)(v1 + 120);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if (v3 == v1)
    *(_BYTE *)((v2 & 0xFFFFFFFFFFFFFFF8) + 72) |= 4u;
  return result;
}

void *sub_22F3B5E40(uint64_t a1)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v5 = sub_22EFDE918(v4);
    if (v5)
      return *(void **)(v5 + 40);
  }
  v2 = *(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a1 + 40) & 7) != 0 || v2 == 0)
    return &unk_22F5C210D;
  else
    return (void *)(*(_QWORD *)(v2 + 16) + 16);
}

void *sub_22F3B5EB4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
    return sub_22F3B5E40(v1);
  if ((MEMORY[0x28] & 7) != 0)
    v2 = 0;
  else
    v2 = MEMORY[0x28] & 0xFFFFFFFFFFFFFFF8;
  return (void *)(*(_QWORD *)(v2 + 16) + 16);
}

_QWORD *sub_22F3B5EF0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = sub_22EFC72E8(a1);
  v5 = *(_QWORD *)(a1 + 120);
  if (!v5)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v5 = *(_QWORD *)(a1 + 120);
  }
  if (v5 < 8)
    v6 = 0;
  else
    v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  return sub_22F368CD4(v4, v6, a2);
}

BOOL sub_22F3B5F58(uint64_t a1)
{
  unint64_t i;

  if ((*(_WORD *)(a1 + 56) & 0x80) != 0)
    sub_22EFCC320(a1 + 48);
  for (i = *(_QWORD *)(a1 + 64); i; i = *(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8)
  {
    if ((*(_DWORD *)(i + 28) & 0x7F) == 0x33)
      break;
  }
  return i == 0;
}

uint64_t sub_22F3B5FB0(unint64_t a1)
{
  uint64_t v2;

  v2 = sub_22EFC72E8(a1);
  return sub_22F368C34(v2, a1);
}

double sub_22F3B5FD8(uint64_t a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;
  double result;

  v2 = sub_22EFC73F0(96, a1, a2, 0);
  v3 = sub_22EA41AB8((uint64_t)v2, 51, 0, 0);
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_QWORD *)v3 = &off_24FAC4730;
  *(_BYTE *)(v3 + 88) &= 0xF0u;
  return result;
}

void sub_22F3B6034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 48);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if ((v2 & 4) != 0)
    v3 = (_QWORD *)*v3;
  sub_22F409EE0(&v4, a2, (unint64_t)v3, 3);
}

_QWORD *sub_22F3B6074(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)sub_22EFC7430(80, a1, a2, 0);
  return sub_22F3B7690(v13, a2, a3, a4, a5, a6, a7);
}

double sub_22F3B60E0(uint64_t a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;
  double result;

  v2 = sub_22EFC73F0(80, a1, a2, 0);
  v3 = sub_22EA41AB8((uint64_t)v2, 50, 0, 0);
  *(_QWORD *)(v3 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_QWORD *)v3 = &off_24FAC47A8;
  return result;
}

uint64_t sub_22F3B6134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  _QWORD *v12;

  v12 = (_QWORD *)sub_22EA41AB8(a1, 23, a3, a5);
  *v12 = &unk_24FAC2F18;
  v12[5] = a4;
  sub_22EFCB6FC((uint64_t)(v12 + 6), 23);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = a2 | 2;
  *(_DWORD *)(a1 + 60) = a6;
  *(_QWORD *)a1 = &off_24FAC4540;
  *(_QWORD *)(a1 + 96) = a1;
  *(_QWORD *)(a1 + 104) = 0;
  sub_22F3B61D8((unint64_t *)(a1 + 88), a7);
  if (a7)
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a7 + 104);
  return a1;
}

uint64_t sub_22F3B61D8(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t *v5;

  if (a2)
  {
    v3 = *(_QWORD *)(a2 + 96);
    a1[1] = v3;
    v4 = sub_22E3CD31C((uint64_t *)(v3 + 88), v3);
    *a1 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    *((_DWORD *)a1 - 15) |= *(_DWORD *)(v4 + 28) & 0x260000;
    v5 = (unint64_t *)a1[1];
  }
  else
  {
    v5 = a1 - 11;
    a1[1] = (unint64_t)(a1 - 11);
  }
  return sub_22E7B7A74((uint64_t)(v5 + 11), (uint64_t)(a1 - 11));
}

uint64_t sub_22F3B6240(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t result;

  v12 = sub_22EFC7430(112, a1, a2, 0);
  result = sub_22F3B6134(v12, a1, a2, a3, a4, a5, a6);
  *(_QWORD *)(result + 104) = (*(_QWORD *)(result + 104) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                                 * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000)
                                                                                               + 20) >> 45) & 1))) ^ 4;
  return result;
}

uint64_t sub_22F3B62CC(uint64_t a1, int a2)
{
  _DWORD *v3;
  uint64_t result;

  v3 = sub_22EFC73F0(112, a1, a2, 0);
  result = sub_22F3B6134((uint64_t)v3, a1, 0, 0, 0, 0, 0);
  *(_QWORD *)(result + 104) = (*(_QWORD *)(result + 104) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                                 * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000)
                                                                                               + 20) >> 45) & 1))) ^ 4;
  return result;
}

uint64_t sub_22F3B6334(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;

  v2 = sub_22EFC72E8(a1);
  result = sub_22E3CD3D4(v2 + 2032, 40, 3);
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 36) = 0;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a1 + 104) & 7 | result;
  v4 = result & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 32) = *(_BYTE *)((result & 0xFFFFFFFFFFFFFFF8) + 32) & 0xFE;
  return result;
}

uint64_t *sub_22F3B6398(unint64_t a1)
{
  uint64_t *result;
  int v3;
  uint64_t v4;
  char v5;

  result = (uint64_t *)sub_22F3B6334(a1);
  if (a1)
  {
    v3 = 0;
    v4 = a1;
    do
    {
      result = (uint64_t *)(v4 + 88);
      v5 = *(_BYTE *)(v4 + 88);
      *(_QWORD *)(v4 + 104) = *(_QWORD *)(a1 + 104);
      if ((v5 & 3) != 0)
      {
        if (v3)
          return result;
        v3 = 1;
      }
      result = (uint64_t *)sub_22E3CD31C(result, v4);
      if (result == (uint64_t *)a1)
        break;
      v4 = (uint64_t)result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_22F3B63F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  _DWORD v11[4];

  v10 = *(_OWORD *)a2;
  v11[0] = 0;
  result = sub_22F33B8D4(a1, (uint64_t)&v10, v11, (uint64_t)&v8);
  if (v9)
  {
    v5 = v8;
    v6 = *(_QWORD *)(a1 + 32);
    if (v6 >= *(_QWORD *)(a1 + 40))
    {
      result = (uint64_t)sub_22E54DBA4((void **)(a1 + 24), a2);
    }
    else
    {
      v7 = *(_OWORD *)a2;
      *(_QWORD *)(v6 + 16) = *(_QWORD *)(a2 + 16);
      *(_OWORD *)v6 = v7;
      result = v6 + 24;
    }
    *(_QWORD *)(a1 + 32) = result;
    *(_DWORD *)(v5 + 16) = -1431655765 * ((unint64_t)(result - *(_QWORD *)(a1 + 24)) >> 3) - 1;
  }
  return result;
}

unint64_t sub_22F3B64A8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[2];
  int v7;
  _QWORD *v8;
  __int128 v9;
  _QWORD v10[18];
  _QWORD v11[17];

  v11[16] = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 104);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 104);
  }
  if (v2 >= 8 && (*(_BYTE *)((v2 & 0xFFFFFFFFFFFFFFF8) + 32) & 1) != 0)
    return *(unsigned int *)((v2 & 0xFFFFFFFFFFFFFFF8) + 36);
  v6[0] = 0;
  v6[1] = 0;
  v7 = 0;
  v8 = v10;
  v9 = xmmword_22F44E310;
  v10[16] = v11;
  v10[17] = 0x2000000000;
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 104);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  sub_22F0BD9E4((uint64_t)v6, v3);
  *(_BYTE *)((*(_QWORD *)(a1 + 104) & 0xFFFFFFFFFFFFFFF8) + 32) |= 1u;
  v4 = sub_22F0BCA28((uint64_t)v6);
  *(_DWORD *)((*(_QWORD *)(a1 + 104) & 0xFFFFFFFFFFFFFFF8) + 36) = v4;
  sub_22EFC59B8((uint64_t)v6);
  return v4;
}

uint64_t sub_22F3B65D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13)
{
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v19 = (_QWORD *)sub_22EA41AB8(a1, 19, a3, a5);
  *v19 = &unk_24FAC2F18;
  v19[5] = a7;
  v20 = (uint64_t)(v19 + 6);
  sub_22EFCB6FC((uint64_t)(v19 + 6), 19);
  *(_DWORD *)(a1 + 60) = a4;
  *(_QWORD *)(a1 + 88) = a2 | 2;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)a1 = &off_24FAC45C0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 96) = a1;
  *(_QWORD *)(a1 + 104) = a8;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = a6;
  *(_DWORD *)(a1 + 140) = a11;
  *(_DWORD *)(a1 + 144) = a13;
  sub_22F3B61D8((unint64_t *)(a1 + 88), a9);
  if (a9)
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a9 + 120);
  *(_QWORD *)(a1 + 112) = a10;
  if (a10)
  {
    v21 = *(unsigned int *)(a10 + 8);
    if ((_DWORD)v21)
    {
      v22 = (uint64_t *)(a10 + 16);
      v23 = 8 * v21;
      do
      {
        v24 = *v22++;
        sub_22EFC80B8(v24, v20);
        v23 -= 8;
      }
      while (v23);
    }
  }
  return a1;
}

uint64_t sub_22F3B66DC(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12)
{
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v18 = sub_22EFC7430(152, a1, a2, 0);
  v19 = sub_22F3B65D8(v18, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0, a12);
  *(_QWORD *)(v19 + 120) = (*(_QWORD *)(v19 + 120) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                           * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000) + 20) >> 45) & 1))) ^ 4;
  if (a7)
  {
    *(_QWORD *)(v18 + 128) = sub_22F257E10(a7);
    v20 = *(_QWORD *)(a7 + 120);
    if (!v20)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a7 + 96) + 88), *(_QWORD *)(a7 + 96));
      v20 = *(_QWORD *)(a7 + 120);
    }
    if (v20 >= 8)
    {
      *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF8) + 56) = v18;
      v21 = *(_QWORD *)(a1 + 16056);
      if (v21)
        (*(void (**)(uint64_t, uint64_t, unint64_t))(*(_QWORD *)v21 + 136))(v21, v18, a7);
    }
  }
  return v18;
}

uint64_t sub_22F3B67F8(uint64_t a1, int a2)
{
  _DWORD *v3;
  uint64_t result;

  v3 = sub_22EFC73F0(152, a1, a2, 0);
  result = sub_22F3B65D8((uint64_t)v3, a1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)(result + 120) = (*(_QWORD *)(result + 120) & 0xFFFFFFFFFFFFFFFBLL | (4
                                                                                 * ((*(_QWORD *)(*(_QWORD *)(a1 + 2000)
                                                                                               + 20) >> 45) & 1))) ^ 4;
  return result;
}

_QWORD *sub_22F3B6874(unint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22EFC72E8(a1);
  return sub_22F368CD4(v4, a1, a2);
}

double sub_22F3B68A0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_22EFC72E8(a1);
  v3 = sub_22E3CD3D4(v2 + 2032, 48, 3);
  result = 0.0;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a1 + 120) & 7 | v3;
  *(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8) = a1;
  return result;
}

unint64_t sub_22F3B68F4(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[2];
  int v7;
  _QWORD *v8;
  __int128 v9;
  _QWORD v10[18];
  _QWORD v11[17];

  v11[16] = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  v3 = v2 & 0xFFFFFFFFFFFFFFF8;
  if (v2 >= 8 && (*(_BYTE *)(v3 + 8) & 2) != 0)
    return *(unsigned int *)(v3 + 40);
  v6[0] = 0;
  v6[1] = 0;
  v7 = 0;
  v8 = v10;
  v9 = xmmword_22F44E310;
  v10[16] = v11;
  v10[17] = 0x2000000000;
  sub_22F0BD544((uint64_t)v6, *(_QWORD *)v3);
  *(_BYTE *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 8) |= 2u;
  v4 = sub_22F0BCA28((uint64_t)v6);
  *(_DWORD *)((*(_QWORD *)(a1 + 120) & 0xFFFFFFFFFFFFFFF8) + 40) = v4;
  sub_22EFC59B8((uint64_t)v6);
  return v4;
}

uint64_t *sub_22F3B69F8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *result;
  char v7;

  v2 = sub_22EFC72E8(a1);
  v3 = sub_22E3CD3D4(v2 + 2032, 48, 3);
  v4 = 0;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a1 + 120) & 7 | v3;
  *(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8) = a1;
  v5 = a1;
  do
  {
    result = (uint64_t *)(v5 + 88);
    v7 = *(_BYTE *)(v5 + 88);
    *(_QWORD *)(v5 + 120) = *(_QWORD *)(a1 + 120);
    if ((v7 & 3) != 0)
    {
      if (v4)
        return result;
      v4 = 1;
    }
    result = (uint64_t *)sub_22E3CD31C(result, v5);
    if (result == (uint64_t *)a1)
      break;
    v5 = (uint64_t)result;
  }
  while (result);
  return result;
}

uint64_t sub_22F3B6A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  uint64_t v10;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v10 = a4;
  if (a4)
  {
    v14 = *(_QWORD *)(a4 + 120);
    if (!v14)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a4 + 96) + 88), *(_QWORD *)(a4 + 96));
      v14 = *(_QWORD *)(v10 + 120);
    }
    if (v14 >= 8)
      v10 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8);
  }
  v15 = sub_22EFC7430(104, a1, a2, 0);
  v16 = (_QWORD *)sub_22EA41AB8(v15, 20, a2, a5);
  *v16 = &unk_24FAC2F18;
  v16[5] = a3;
  sub_22EFCB6FC((uint64_t)(v16 + 6), 20);
  *(_QWORD *)(v15 + 80) = 0;
  *(_QWORD *)(v15 + 88) = v10;
  *(_DWORD *)(v15 + 60) = a6;
  *(_QWORD *)v15 = &off_24FAC4820;
  *(_DWORD *)(v15 + 96) = a7;
  return v15;
}

_DWORD *sub_22F3B6B68(uint64_t a1, int a2)
{
  _DWORD *v2;
  _QWORD *v3;

  v2 = sub_22EFC73F0(104, a1, a2, 0);
  v3 = (_QWORD *)sub_22EA41AB8((uint64_t)v2, 20, 0, 0);
  *v3 = &unk_24FAC2F18;
  v3[5] = 0;
  sub_22EFCB6FC((uint64_t)(v3 + 6), 20);
  v2[15] = 0;
  *((_QWORD *)v2 + 10) = 0;
  *((_QWORD *)v2 + 11) = 0;
  *(_QWORD *)v2 = &off_24FAC4820;
  v2[24] = 0;
  return v2;
}

uint64_t sub_22F3B6BE4(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;

  result = sub_22EFC72E8(a1);
  if (a1)
  {
    v5 = result;
    if ((*(_DWORD *)(a1 + 28) & 0x7F) == 0x14)
    {
      v7 = *(_QWORD *)(a1 + 40);
      if ((v7 & 7) != 0)
        v8 = 0;
      else
        v8 = v7 & 0xFFFFFFFFFFFFFFF8;
      result = sub_22EFDD7A0(a2, v8);
      if (result)
        result = (uint64_t)sub_22F368CD4(v5, result, a1);
    }
    else if ((*(_DWORD *)(a1 + 28) & 0x7F) == 0x15 && a2 != 0)
    {
      result = (uint64_t)sub_22F368CD4(result, a2, a1);
    }
  }
  *(_QWORD *)(a1 + 88) = a2;
  return result;
}

llvm::raw_ostream *sub_22F3B6C78(llvm::raw_ostream *this, uint64_t a2)
{
  unint64_t v3;
  unsigned int *v6;
  const void *v7;
  size_t v8;
  unsigned int v9;
  void *v10;

  v3 = *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a2 + 40) & 7) == 0 && v3 != 0)
  {
    v6 = *(unsigned int **)(v3 + 16);
    v9 = *v6;
    v7 = v6 + 4;
    v8 = v9;
    v10 = (void *)*((_QWORD *)this + 4);
    if ((unint64_t)v9 <= *((_QWORD *)this + 3) - (_QWORD)v10)
    {
      if (v8)
      {
        memcpy(v10, v7, v8);
        *((_QWORD *)this + 4) += v8;
      }
    }
    else
    {
      llvm::raw_ostream::write(this, (const char *)v7);
    }
  }
  return this;
}

uint64_t sub_22F3B6CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, int a9)
{
  uint64_t v14;
  uint64_t v17;
  unint64_t v19;

  v14 = a3;
  if (a3)
  {
    v19 = *(_QWORD *)(a3 + 120);
    if (!v19)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a3 + 96) + 88), *(_QWORD *)(a3 + 96));
      v19 = *(_QWORD *)(v14 + 120);
    }
    if (v19 >= 8)
      v14 = *(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  }
  v17 = sub_22EFC7430(136, a1, a2, 0);
  return sub_22F3B771C(v17, a2, v14, a4, a5, a6, a7, a8, a9);
}

_DWORD *sub_22F3B6DBC(uint64_t a1, int a2)
{
  _DWORD *v2;
  _QWORD *v3;

  v2 = sub_22EFC73F0(136, a1, a2, 0);
  v3 = (_QWORD *)sub_22EA41AB8((uint64_t)v2, 21, 0, 0);
  *v3 = &unk_24FAC2F18;
  v3[5] = 0;
  sub_22EFCB6FC((uint64_t)(v3 + 6), 21);
  v2[15] = 0;
  *((_QWORD *)v2 + 10) = 0;
  *((_QWORD *)v2 + 11) = 0;
  *(_QWORD *)v2 = &off_24FAC48A0;
  *((_QWORD *)v2 + 15) = 0;
  v2[32] = 0;
  *((_QWORD *)v2 + 12) = 0;
  *((_QWORD *)v2 + 13) = 0;
  v2[28] = 0;
  *((_BYTE *)v2 + 132) &= 0xFCu;
  return v2;
}

unint64_t sub_22F3B6E50(unint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 120);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(a1);
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 48))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 120) = v1;
  }
  return v1;
}

uint64_t sub_22F3B6E9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v13;
  uint64_t result;

  v13 = sub_22EFC7430(64, a1, a2, 0);
  result = sub_22EA41AB8(v13, 18, a2, a3);
  *(_QWORD *)result = &off_24FAC4920;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_DWORD *)(result + 56) = a6;
  *(_DWORD *)(result + 60) = a7;
  return result;
}

_QWORD *sub_22F3B6F14(uint64_t a1, int a2)
{
  _DWORD *v2;
  _QWORD *result;

  v2 = sub_22EFC73F0(64, a1, a2, 0);
  result = (_QWORD *)sub_22EA41AB8((uint64_t)v2, 18, 0, 0);
  result[5] = 0;
  result[6] = 0;
  *result = &off_24FAC4920;
  result[7] = 0;
  return result;
}

double sub_22F3B6F60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  double result;

  v16 = sub_22EFC7430(128, a1, a2, 0);
  v17 = sub_22EA41AB8(v16, 25, a2, a3);
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)v17 = &off_24FAC46B8;
  *(_DWORD *)(v17 + 48) = a5;
  *(_DWORD *)(v17 + 52) = a6;
  *(_QWORD *)(v17 + 56) = a7;
  *(_QWORD *)(v17 + 64) = a8;
  v18 = *(_DWORD *)(v17 + 76) & 0xFFF80000 | ((a9 & 3) << 17);
  *(_DWORD *)(v17 + 72) &= 0xFFFE0000;
  *(_DWORD *)(v17 + 76) = v18;
  result = 0.0;
  *(_OWORD *)(v17 + 80) = 0u;
  *(_OWORD *)(v17 + 96) = 0u;
  *(_OWORD *)(v17 + 112) = 0u;
  return result;
}

double sub_22F3B700C(uint64_t a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;
  double result;

  v2 = sub_22EFC73F0(128, a1, a2, 0);
  v3 = sub_22EA41AB8((uint64_t)v2, 25, 0, 0);
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)v3 = &off_24FAC46B8;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(int8x8_t *)(v3 + 72) = vand_s8(*(int8x8_t *)(v3 + 72), (int8x8_t)0xFFF80000FFFE0000);
  result = 0.0;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  return result;
}

double sub_22F3B7074(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v14;
  uint64_t v15;
  double result;

  v14 = sub_22EFC7430(96, a1, a2, 0);
  v15 = sub_22EA41AB8(v14, 78, a2, a4);
  *(_QWORD *)v15 = &off_24FAC4998;
  *(_DWORD *)(v15 + 36) = a3;
  *(_DWORD *)(v15 + 40) = a8;
  *(_QWORD *)(v15 + 48) = a5;
  *(_QWORD *)(v15 + 56) = a7;
  result = 0.0;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  return result;
}

double sub_22F3B70F4(uint64_t a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;
  double result;

  v2 = sub_22EFC73F0(96, a1, a2, 0);
  v3 = sub_22EA41AB8((uint64_t)v2, 78, 0, 0);
  *(_QWORD *)v3 = &off_24FAC4998;
  *(_DWORD *)(v3 + 36) = 0;
  *(_DWORD *)(v3 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  return result;
}

void sub_22F3B7148(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B7170(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B7194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32);
}

void sub_22F3B71A8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B71D0(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B71F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60) | ((unint64_t)*(unsigned int *)(a1 + 84) << 32);
}

uint64_t sub_22F3B7208(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B7230(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B726C(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B7294(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B72D4(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B72F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60) | ((unint64_t)*(unsigned int *)(a1 + 60) << 32);
}

void sub_22F3B7308(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B732C(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B7354(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B7390(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 120);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 120);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if (v3 == a1)
    v4 = *(unsigned int *)(a1 + 84);
  else
    v4 = *(unsigned int *)(a1 + 24);
  return *(unsigned int *)(a1 + 60) | (unint64_t)(v4 << 32);
}

uint64_t sub_22F3B73F8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96);
}

unint64_t sub_22F3B7400(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 88), a1);
}

unint64_t sub_22F3B740C(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 88);
  v2 = (uint64_t *)(a1 + 88);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

unint64_t sub_22F3B7428(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
}

uint64_t sub_22F3B7434(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B745C(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B7498(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[6];
  v3 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a1 + 64))(a1);
  if (v3)
    sub_22F0D60E4(v3);
  else
    v4 = a1[27];
  return v2 | (v4 << 32);
}

BOOL sub_22F3B74D8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 112) != 0;
}

uint64_t sub_22F3B74E8(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B7510(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B754C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 104);
  if (!v2)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v2 = *(_QWORD *)(a1 + 104);
  }
  if (v2 < 8)
    v3 = 0;
  else
    v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if (v3 == a1)
    v4 = *(unsigned int *)(a1 + 84);
  else
    v4 = *(unsigned int *)(a1 + 24);
  return *(unsigned int *)(a1 + 60) | (unint64_t)(v4 << 32);
}

uint64_t sub_22F3B75B4(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96);
}

unint64_t sub_22F3B75BC(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 88), a1);
}

unint64_t sub_22F3B75C8(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 88);
  v2 = (uint64_t *)(a1 + 88);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

unint64_t sub_22F3B75E4(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
}

uint64_t sub_22F3B75F0(uint64_t a1)
{
  nullsub_910(a1 + 48);
  return nullsub_910(a1);
}

void sub_22F3B7618(uint64_t a1)
{
  nullsub_910(a1 + 48);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B7654(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96);
}

unint64_t sub_22F3B765C(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(a1 + 88), a1);
}

unint64_t sub_22F3B7668(uint64_t a1)
{
  uint64_t *v2;
  char v3;

  v3 = *(_BYTE *)(a1 + 88);
  v2 = (uint64_t *)(a1 + 88);
  if ((v3 & 3) != 0)
    return 0;
  else
    return sub_22E3CD31C(v2, a1);
}

unint64_t sub_22F3B7684(uint64_t a1)
{
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
}

_QWORD *sub_22F3B7690(_QWORD *a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;

  v12 = sub_22EA41AB8((uint64_t)a1, 50, a2, a4);
  *(_QWORD *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = a6;
  *(_QWORD *)(v12 + 56) = 0;
  *(_QWORD *)v12 = &off_24FAC2F90;
  *(_DWORD *)(v12 + 64) = a3;
  *(_DWORD *)(v12 + 68) = 0;
  *(_QWORD *)(v12 + 72) = 0;
  if (a7)
    sub_22E670130((unint64_t)a1, a7);
  *a1 = &off_24FAC47A8;
  return a1;
}

uint64_t sub_22F3B771C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, int a9)
{
  uint64_t v15;
  unint64_t v16;

  if (a3)
  {
    v15 = *(_QWORD *)(a3 + 40);
    if ((v15 & 7) != 0)
      v16 = 0;
    else
      v16 = v15 & 0xFFFFFFFFFFFFFFF8;
  }
  else
  {
    v16 = 0;
  }
  sub_22EA41AB8(a1, 21, a2, a5);
  *(_QWORD *)a1 = &unk_24FAC2F18;
  *(_QWORD *)(a1 + 40) = v16;
  sub_22EFCB6FC(a1 + 48, 21);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = a3;
  *(_DWORD *)(a1 + 60) = a6;
  *(_QWORD *)a1 = &off_24FAC48A0;
  *(_QWORD *)(a1 + 96) = a4;
  *(_DWORD *)(a1 + 104) = a7;
  *(_DWORD *)(a1 + 108) = a8;
  *(_DWORD *)(a1 + 112) = a9;
  *(_QWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 132) &= 0xFCu;
  return a1;
}

uint64_t sub_22F3B77F4(uint64_t a1, uint64_t a2, int a3, const void *a4, uint64_t a5)
{
  uint64_t v7;
  void *v8;
  int v10;

  v10 = a3;
  v7 = sub_22F3B7854(a1, a2, a5, &v10);
  v8 = (void *)sub_22F3F327C(*(unsigned int **)(v7 + 40));
  if (a5)
    memmove(v8, a4, 8 * a5);
  return v7;
}

uint64_t sub_22F3B7854(uint64_t a1, uint64_t a2, unsigned int a3, int *a4)
{
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;

  v8 = sub_22F3F3254(0, 0, a3);
  v9 = sub_22EFC7430(48, a1, a2, v8);
  v10 = (_QWORD *)sub_22EA41AB8(v9, 77, a2, *a4);
  v10[5] = 0;
  *v10 = &off_24FAC4A70;
  v11 = (char *)sub_22F3F3298((uint64_t)(v10 + 6), 0, 0, 0, a3);
  *(_QWORD *)(v9 + 40) = v11;
  sub_22F3F3268(v11, 0, 0);
  return v9;
}

_DWORD *sub_22F3B78F0(uint64_t a1, int a2, unsigned int a3, int a4)
{
  unint64_t v8;
  _DWORD *v9;
  _QWORD *v10;

  v8 = sub_22F3F3254(a3, 0, a4);
  v9 = sub_22EFC73F0(48, a1, a2, v8);
  v10 = (_QWORD *)sub_22EA41AB8((uint64_t)v9, 77, 0, 0);
  v10[5] = 0;
  *v10 = &off_24FAC4A70;
  *((_QWORD *)v9 + 5) = sub_22F3F328C((uint64_t)(v10 + 6), a3, 0, a4);
  return v9;
}

uint64_t sub_22F3B7984(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, unsigned int a5, int *a6)
{
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;

  v12 = sub_22F3F3254(a4, 0, a5);
  v13 = sub_22EFC7430(48, a1, a2, v12);
  v14 = (_QWORD *)sub_22EA41AB8(v13, 75, a2, *a6);
  v14[5] = 0;
  *v14 = &off_24FAC4C30;
  v15 = (char *)sub_22F3F3298((uint64_t)(v14 + 6), a3, a4, 0, a5);
  *(_QWORD *)(v13 + 40) = v15;
  sub_22F3F3268(v15, a3, a4);
  return v13;
}

_DWORD *sub_22F3B7A34(uint64_t a1, int a2, unsigned int a3, int a4, int *a5)
{
  unint64_t v10;
  _DWORD *v11;
  _QWORD *v12;

  v10 = sub_22F3F3254(a3, 0, a4);
  v11 = sub_22EFC73F0(48, a1, a2, v10);
  v12 = (_QWORD *)sub_22EA41AB8((uint64_t)v11, 75, 0, *a5);
  v12[5] = 0;
  *v12 = &off_24FAC4C30;
  *((_QWORD *)v11 + 5) = sub_22F3F328C((uint64_t)(v12 + 6), a3, 0, a4);
  return v11;
}

uint64_t sub_22F3B7AD4(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, unsigned int a5, int *a6)
{
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;

  v12 = sub_22F3F3254(a4, 0, a5);
  v13 = sub_22EFC7430(48, a1, a2, v12);
  v14 = (_QWORD *)sub_22EA41AB8(v13, 76, a2, *a6);
  v14[5] = 0;
  *v14 = &off_24FAC4BC8;
  v15 = (char *)sub_22F3F3298((uint64_t)(v14 + 6), a3, a4, 0, a5);
  *(_QWORD *)(v13 + 40) = v15;
  sub_22F3F3268(v15, a3, a4);
  return v13;
}

_DWORD *sub_22F3B7B84(uint64_t a1, int a2, unsigned int a3, int a4, int *a5)
{
  unint64_t v10;
  _DWORD *v11;
  _QWORD *v12;

  v10 = sub_22F3F3254(a3, 0, a4);
  v11 = sub_22EFC73F0(48, a1, a2, v10);
  v12 = (_QWORD *)sub_22EA41AB8((uint64_t)v11, 76, 0, *a5);
  v12[5] = 0;
  *v12 = &off_24FAC4BC8;
  *((_QWORD *)v11 + 5) = sub_22F3F328C((uint64_t)(v12 + 6), a3, 0, a4);
  return v11;
}

uint64_t sub_22F3B7C24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  _QWORD *v12;

  v11 = sub_22EFC7430(144, a1, a2, 0);
  v12 = (_QWORD *)sub_22EA41AB8(v11, 71, a2, a3);
  *v12 = &unk_24FAC2AE8;
  v12[5] = a4;
  v12[6] = a5;
  sub_22EFCB6FC((uint64_t)(v12 + 7), 71);
  *(_QWORD *)v11 = &off_24FAC49F8;
  *(_OWORD *)(v11 + 88) = 0u;
  *(_OWORD *)(v11 + 104) = 0u;
  *(_OWORD *)(v11 + 120) = 0u;
  *(_QWORD *)(v11 + 136) = a6;
  *(_WORD *)(v11 + 64) &= 0x9FFFu;
  return v11;
}

_DWORD *sub_22F3B7CD8(uint64_t a1, int a2)
{
  _DWORD *v2;
  _QWORD *v3;

  v2 = sub_22EFC73F0(144, a1, a2, 0);
  v3 = (_QWORD *)sub_22EA41AB8((uint64_t)v2, 71, 0, 0);
  *v3 = &unk_24FAC2AE8;
  v3[5] = 0;
  v3[6] = 0;
  sub_22EFCB6FC((uint64_t)(v3 + 7), 71);
  *(_QWORD *)v2 = &off_24FAC49F8;
  *(_OWORD *)(v2 + 22) = 0u;
  *(_OWORD *)(v2 + 26) = 0u;
  *(_OWORD *)(v2 + 30) = 0u;
  *((_QWORD *)v2 + 17) = 0;
  *((_WORD *)v2 + 32) &= 0x9FFFu;
  return v2;
}

unint64_t sub_22F3B7D68(unint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 136);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(a1);
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 16))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 136) = v1;
  }
  return v1;
}

_QWORD *sub_22F3B7DB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v13 = a3;
  v12 = a4;
  v10 = a6;
  v11 = a5;
  return sub_22F3B7E08(a1, a2, a7, a8, 1u, &v13, &v12, &v11, &v10, &a9);
}

_QWORD *sub_22F3B7E08(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4, unsigned int a5, int *a6, uint64_t *a7, uint64_t *a8, uint64_t *a9, uint64_t *a10)
{
  unint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  v18 = sub_22F3F3254(a4, 0, a5);
  v19 = (_QWORD *)sub_22EFC7430(120, a1, a2, v18);
  v20 = *a6;
  v21 = *a7;
  v22 = *a8;
  v23 = *a9;
  v24 = *a10;
  v25 = (_QWORD *)sub_22EA41AB8((uint64_t)v19, 70, a2, v20);
  v25[5] = v21;
  v25[6] = v22;
  *v25 = &off_24FAC4C98;
  v25[7] = 0;
  sub_22EFCB6FC((uint64_t)(v25 + 8), 70);
  *v19 = &off_24FAC4AD8;
  v19[12] = 0;
  v19[13] = v23;
  v19[14] = v24;
  v26 = (char *)sub_22F3F3298((uint64_t)(v19 + 15), a3, a4, 0, a5);
  v19[7] = v26;
  sub_22F3F3268(v26, a3, a4);
  return v19;
}

_QWORD *sub_22F3B7F0C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v7 = 0;
  v6 = 0;
  v4 = 0;
  v5 = 0;
  return sub_22F3B7F50(a1, a2, a3, 1, &v7, &v6, &v5, &v4);
}

_QWORD *sub_22F3B7F50(uint64_t a1, int a2, unsigned int a3, int a4, int *a5, uint64_t *a6, uint64_t *a7, uint64_t *a8)
{
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v16 = sub_22F3F3254(a3, 0, a4);
  v17 = sub_22EFC73F0(120, a1, a2, v16);
  v18 = *a6;
  v19 = *a7;
  v20 = *a8;
  v21 = (_QWORD *)sub_22EA41AB8((uint64_t)v17, 70, 0, *a5);
  v21[5] = v18;
  v21[6] = v19;
  *v21 = &off_24FAC4C98;
  v21[7] = 0;
  sub_22EFCB6FC((uint64_t)(v21 + 8), 70);
  *v17 = &off_24FAC4AD8;
  v17[12] = 0;
  v17[13] = v20;
  v17[14] = 0;
  v17[7] = sub_22F3F328C((uint64_t)(v17 + 15), a3, 0, a4);
  return v17;
}

unint64_t sub_22F3B8034(unint64_t a1)
{
  unint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 112);
  if ((v1 & 1) != 0)
  {
    v3 = sub_22EFC72E8(a1);
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v3 + 16048) + 16))(*(_QWORD *)(v3 + 16048), v1 >> 1);
    *(_QWORD *)(a1 + 112) = v1;
  }
  return v1;
}

uint64_t sub_22F3B8080(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v10 = sub_22EFC7430(104, a1, a2, 0);
  v11 = sub_22EF579A8(a1, a4, 0);
  result = sub_22EFBB5EC(v10, 63, a1, a2, a5, a5, a3, a4, (uint64_t)v11, 0);
  *(_QWORD *)v10 = &off_24FAC4B50;
  *(_DWORD *)(v10 + 28) |= 0x200u;
  return result;
}

uint64_t sub_22F3B8130(uint64_t a1, int a2)
{
  _DWORD *v3;
  uint64_t result;

  v3 = sub_22EFC73F0(104, a1, a2, 0);
  result = sub_22EFBB5EC((uint64_t)v3, 63, a1, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)result = &off_24FAC4B50;
  *(_DWORD *)(result + 28) |= 0x200u;
  return result;
}

unint64_t sub_22F3B81A8(uint64_t a1)
{
  unint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;

  v2 = sub_22EFBC5B4(a1);
  sub_22F0D5A50(v2);
  v4 = v3;
  v5 = sub_22EFBC5B4(a1);
  sub_22F0D60E4(v5);
  return v4 | (unint64_t)(v6 << 32);
}

void sub_22F3B81E8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B820C(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return nullsub_910(a1);
}

void sub_22F3B8234(uint64_t a1)
{
  nullsub_910(a1 + 64);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B8270(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  return nullsub_910(a1);
}

void sub_22F3B8284(_QWORD *a1)
{
  *a1 = &off_24FAC3080;
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B82BC(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B82E4(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3B8308(uint64_t a1)
{
  nullsub_910(a1 + 56);
  return nullsub_910(a1);
}

void sub_22F3B8330(uint64_t a1)
{
  nullsub_910(a1 + 56);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B8370(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B8394(unint64_t a1, uint64_t a2, __int128 *a3, int a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  int v14;
  char v15;

  v10 = sub_22EFC72E8(a1);
  v11 = a2;
  v12 = *a3;
  v13 = v10;
  v14 = a4;
  v15 = a5;
  sub_22EFDF258((uint64_t)&v11, a1);
}

void sub_22F3B8400(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  int v7;
  char v8;

  v1 = a1;
  while ((*(_WORD *)(a1 + 8) & 0x7F) != 0x53)
  {
    v2 = *(_QWORD *)(sub_22EFCAD5C(a1) + 16);
    a1 = v2 & 0xFFFFFFFFFFFFFFF8;
    if ((v2 & 4) != 0)
      a1 = *(_QWORD *)a1;
  }
  v3 = *(_QWORD *)(a1 + 48);
  v4 = llvm::errs((llvm *)a1);
  v5 = *(_OWORD *)(v3 + 15104);
  v6 = v3;
  v7 = 0;
  v8 = 0;
  sub_22EFE433C((uint64_t)&v4, v1, 0);
}

llvm::raw_ostream **sub_22F3B848C(llvm::raw_ostream **a1, _DWORD *a2)
{
  switch(a2[2])
  {
    case 0:
      a1 = (llvm::raw_ostream **)sub_22F3ED360(a1);
      break;
    case 1:
      a1 = (llvm::raw_ostream **)sub_22F3ED370(a1);
      break;
    case 3:
      a1 = sub_22F3EECE4(a1, (uint64_t)a2);
      break;
    case 4:
      a1 = (llvm::raw_ostream **)sub_22F3ECBC8((uint64_t)a1, (uint64_t)a2);
      break;
    case 5:
      a1 = sub_22F3EE094(a1, (uint64_t)a2);
      break;
    case 6:
      a1 = sub_22F3ED9CC(a1, (uint64_t)a2);
      break;
    case 7:
      a1 = (llvm::raw_ostream **)sub_22F3ECE64((uint64_t)a1, (uint64_t)a2);
      break;
    case 9:
      a1 = (llvm::raw_ostream **)sub_22F3ED064(a1, (uint64_t)a2);
      break;
    case 0xA:
      a1 = (llvm::raw_ostream **)sub_22F3EEE0C(a1, (uint64_t)a2);
      break;
    case 0xB:
      a1 = (llvm::raw_ostream **)sub_22F3ED330(a1);
      break;
    case 0xC:
      a1 = (llvm::raw_ostream **)sub_22F3ECEC4((uint64_t)a1, (uint64_t)a2);
      break;
    case 0xD:
      a1 = (llvm::raw_ostream **)sub_22F3ED340(a1);
      break;
    case 0xE:
      a1 = sub_22F3EE1A0(a1, (uint64_t)a2);
      break;
    case 0xF:
      a1 = sub_22F3EE144(a1, (uint64_t)a2);
      break;
    case 0x10:
      a1 = (llvm::raw_ostream **)sub_22F3ECF84(a1, (uint64_t)a2);
      break;
    case 0x11:
      a1 = (llvm::raw_ostream **)sub_22F3EE83C(a1, (uint64_t)a2);
      break;
    case 0x12:
      a1 = (llvm::raw_ostream **)sub_22F3EE29C((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x13:
      a1 = (llvm::raw_ostream **)sub_22F3EE23C((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x14:
      a1 = (llvm::raw_ostream **)sub_22F3ED840((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x15:
      a1 = (llvm::raw_ostream **)sub_22F3ECF24((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x16:
      a1 = (llvm::raw_ostream **)sub_22F3ED3C0((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x18:
      a1 = (llvm::raw_ostream **)sub_22F3EE7A0((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x19:
      a1 = (llvm::raw_ostream **)sub_22F3ED054(a1);
      break;
    case 0x1A:
      a1 = sub_22F3EEB4C(a1, (uint64_t)a2);
      break;
    case 0x1B:
      a1 = (llvm::raw_ostream **)sub_22F3EEDAC((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x1C:
      a1 = (llvm::raw_ostream **)sub_22F3ECB08((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x1D:
      a1 = sub_22F3EDAE8(a1, (uint64_t)a2);
      break;
    case 0x1E:
      a1 = (llvm::raw_ostream **)sub_22F3EE1FC((llvm::raw_ostream *)a1, (uint64_t)a2);
      break;
    case 0x1F:
    case 0x51:
      a1 = (llvm::raw_ostream **)sub_22F3EE53C(a1);
      break;
    case 0x20:
      a1 = (llvm::raw_ostream **)sub_22F3ECD9C(a1);
      break;
    case 0x21:
      a1 = (llvm::raw_ostream **)sub_22F3ED578((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x22:
      a1 = sub_22F3EE9E8(a1, (uint64_t)a2);
      break;
    case 0x23:
      a1 = (llvm::raw_ostream **)sub_22F3ED638((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x24:
      a1 = (llvm::raw_ostream **)sub_22F3ECA30((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x25:
      a1 = sub_22F3EDE54(a1, (uint64_t)a2);
      break;
    case 0x27:
      a1 = sub_22F3EEAF0(a1, (uint64_t)a2);
      break;
    case 0x29:
      a1 = (llvm::raw_ostream **)sub_22F3ED698((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x2A:
      a1 = sub_22F3EE98C(a1, (uint64_t)a2);
      break;
    case 0x2B:
      a1 = sub_22F3EDB44(a1, (uint64_t)a2);
      break;
    case 0x2C:
      a1 = sub_22F3EDF3C(a1, a2);
      break;
    case 0x2E:
      a1 = sub_22F3EE360(a1, (uint64_t)a2);
      break;
    case 0x31:
      a1 = (llvm::raw_ostream **)sub_22F3ED270(a1);
      break;
    case 0x32:
      a1 = (llvm::raw_ostream **)sub_22F3ED260(a1);
      break;
    case 0x33:
      a1 = (llvm::raw_ostream **)sub_22F3ED240(a1);
      break;
    case 0x34:
      a1 = (llvm::raw_ostream **)sub_22F3ED948((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x35:
      a1 = sub_22F3EEA44(a1, (uint64_t)a2);
      break;
    case 0x37:
      a1 = (llvm::raw_ostream **)sub_22F3ED8C4((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x38:
      a1 = (llvm::raw_ostream **)sub_22F3ED5D8((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x39:
      a1 = (llvm::raw_ostream **)sub_22F3ED458((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x3A:
      a1 = (llvm::raw_ostream **)sub_22F3ECB68((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x3B:
      a1 = (llvm::raw_ostream **)sub_22F3EEAA0(a1, (uint64_t)a2);
      break;
    case 0x3C:
      a1 = (llvm::raw_ostream **)sub_22F3ED1BC((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x3D:
      a1 = (llvm::raw_ostream **)sub_22F3ECDAC((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x3E:
      a1 = (llvm::raw_ostream **)sub_22F3ED518((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x3F:
      a1 = sub_22F3EDA8C(a1, (uint64_t)a2);
      break;
    case 0x40:
      a1 = (llvm::raw_ostream **)sub_22F3ECFD4(a1, (uint64_t)a2);
      break;
    case 0x41:
      a1 = (llvm::raw_ostream **)sub_22F3ED280(a1);
      break;
    case 0x42:
      a1 = sub_22F3EDC58(a1, (uint64_t)a2);
      break;
    case 0x43:
      a1 = (llvm::raw_ostream **)sub_22F3ED390(a1);
      break;
    case 0x44:
      a1 = (llvm::raw_ostream **)sub_22F3ED380(a1);
      break;
    case 0x45:
      a1 = (llvm::raw_ostream **)sub_22F3ED044(a1);
      break;
    case 0x46:
      a1 = (llvm::raw_ostream **)sub_22F3ECC28((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x47:
      a1 = (llvm::raw_ostream **)sub_22F3ED0B4((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x48:
      a1 = (llvm::raw_ostream **)sub_22F3ED350(a1);
      break;
    case 0x49:
      a1 = sub_22F3EDBFC(a1, (uint64_t)a2);
      break;
    case 0x4A:
      a1 = (llvm::raw_ostream **)sub_22F3ED3B0(a1);
      break;
    case 0x4B:
      a1 = (llvm::raw_ostream **)sub_22F3ECC88((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x4C:
      a1 = (llvm::raw_ostream **)sub_22F3ECCE8((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x4D:
      a1 = sub_22F3EDD6C(a1, (uint64_t)a2);
      break;
    case 0x4E:
      a1 = (llvm::raw_ostream **)sub_22F3ED4B8((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x50:
      a1 = (llvm::raw_ostream **)sub_22F3ED3A0(a1);
      break;
    case 0x52:
      a1 = (llvm::raw_ostream **)sub_22F3ED024(a1);
      break;
    case 0x53:
      a1 = (llvm::raw_ostream **)sub_22F3ED034(a1);
      break;
    case 0x56:
      a1 = (llvm::raw_ostream **)sub_22F3ED250(a1);
      break;
    case 0x57:
      a1 = (llvm::raw_ostream **)sub_22F3ED2A0(a1, (uint64_t)a2);
      break;
    case 0x58:
      a1 = (llvm::raw_ostream **)sub_22F3ED7E0((uint64_t)a1, (uint64_t)a2);
      break;
    case 0x59:
      a1 = sub_22F3EE930(a1, (uint64_t)a2);
      break;
    case 0x5A:
      a1 = sub_22F3EE8D4(a1, (uint64_t)a2);
      break;
    case 0x5B:
      a1 = sub_22F3EEBA8(a1, (uint64_t)a2);
      break;
    case 0x5D:
      a1 = (llvm::raw_ostream **)sub_22F3ED290(a1);
      break;
    default:
      return a1;
  }
  return a1;
}

uint64_t sub_22F3B85F8(uint64_t a1)
{
  return sub_22E3CD3D4(a1 + 2032, 16, 3);
}

uint64_t sub_22F3B8610(unint64_t a1)
{
  sub_22EFE95D4(a1);
  return sub_22EFE9368(a1) + 16;
}

unint64_t sub_22F3B863C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10[2];

  v10[0] = a2;
  v10[1] = a3;
  v9 = a4;
  sub_22EFE95D4(a1);
  v7 = sub_22EFE9368(a1);
  return sub_22F3B8690(a1, v7 + 112, a5, v10, &v9);
}

unint64_t sub_22F3B8690(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t NodeOrInsertPos;
  unint64_t v10;
  void *v12[2];
  _QWORD v13[17];

  v13[16] = *MEMORY[0x24BDAC8D0];
  v12[0] = v13;
  v12[1] = (void *)0x2000000000;
  v5 = *a4;
  v6 = a4[1];
  v7 = *a5;
  v8 = sub_22EFC72E8(a1);
  sub_22EFEA3CC((uint64_t)v12, v5, v6, v7, v8);
  NodeOrInsertPos = llvm::FoldingSetBase::FindNodeOrInsertPos();
  if (NodeOrInsertPos)
    v10 = sub_22E6939D8(NodeOrInsertPos - 144);
  else
    v10 = 0;
  if (v12[0] != v13)
    free(v12[0]);
  return v10;
}

unint64_t sub_22F3B8778(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  sub_22EFE95D4(a1);
  v4 = sub_22EFE9368(a1);
  v5 = *(unsigned int *)(v4 + 136);
  if (!(_DWORD)v5)
    return 0;
  v6 = *(uint64_t **)(v4 + 128);
  v7 = 8 * v5;
  while (1)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(*v6 + 48) + 32);
    if ((v8 & 7 | *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8)) == (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8) | a2 & 7))
      break;
    ++v6;
    v7 -= 8;
    if (!v7)
      return 0;
  }
  return sub_22E6939D8(*v6);
}

unint64_t sub_22F3B8804(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  sub_22EFE95D4(a1);
  v4 = sub_22EFE9368(a1);
  v5 = *(unsigned int *)(v4 + 136);
  if (!(_DWORD)v5)
    return 0;
  v6 = *(uint64_t **)(v4 + 128);
  v7 = 8 * v5;
  while (1)
  {
    v8 = *v6;
    v9 = *(_QWORD *)(*(_QWORD *)(*v6 + 104) + 200) & 0xFFFFFFFFFFFFFFF8;
    if ((*(uint64_t (**)(unint64_t))(*(_QWORD *)v9 + 32))(v9) == v3)
      break;
    ++v6;
    v7 -= 8;
    if (!v7)
      return 0;
  }
  return sub_22E6939D8(v8);
}

unint64_t sub_22F3B88A4(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unsigned int v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v10[2];

  v1 = *(_QWORD *)(a1 + 72);
  v2 = v1 & 6;
  if (v1 < 8 || v2 == 2)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v4 = *(_DWORD *)(a1 + 56);
      v5 = *(unsigned int *)(a1 + 24);
      if (v4)
        v6 = v4;
      else
        v6 = v5;
    }
    else
    {
      v6 = *(_DWORD *)(a1 + 56);
      v5 = v6;
    }
  }
  else
  {
    v6 = *(_DWORD *)(a1 + 56);
    v7 = (uint64_t *)(v1 & 0xFFFFFFFFFFFFFFF8);
    if (v2 == 4 && v7 != 0)
      v7 = (uint64_t *)v7[1];
    v10[0] = *v7;
    v10[1] = (uint64_t)(v7 + 1);
    v5 = sub_22F1167E8(v10);
  }
  return v6 | (v5 << 32);
}

__n128 sub_22F3B8930(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v8;
  __n128 result;

  v8 = a4[1].n128_u64[0];
  result = *a4;
  *(_QWORD *)(a1 + 80) = a2;
  *(_QWORD *)(a1 + 88) = a3;
  *(_DWORD *)(a1 + 96) = 0;
  *(__n128 *)(a1 + 104) = result;
  *(_QWORD *)(a1 + 120) = v8;
  *(_QWORD *)(a1 + 128) = a5;
  *(_QWORD *)(a1 + 136) = a6;
  *(_QWORD *)(a1 + 144) = a7;
  *(_QWORD *)(a1 + 152) = a8;
  *(_BYTE *)(a1 + 60) |= 4u;
  return result;
}

uint64_t sub_22F3B8968(uint64_t a1, uint64_t a2, int a3, int a4, int a5, unsigned __int16 a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t *a10, uint64_t a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v26;

  v18 = *(_QWORD *)(*a9 & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  v19 = sub_22F110500((uint64_t)&v26, v18);
  if (v19 && *(_BYTE *)(v19 + 16) == 14)
    v20 = 8 * (*(_QWORD *)(v19 + 40) != 0);
  else
    v20 = 0;
  v21 = sub_22EFC7430(88, a1, a2, v20 | (16 * a11));
  return sub_22EFEB274(v21, a2, a3, a4, a5, a6, a7, a8, (uint64_t)a9, a10, a11, a12, a13);
}

double sub_22F3B8A48(uint64_t a1, int a2, unsigned int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = 8;
  if (!a4)
    v6 = 0;
  v7 = sub_22E3CD3D4(a1 + 2032, (v6 | (16 * a3)) + 96, 3);
  *(_DWORD *)v7 = 0;
  *(_DWORD *)(v7 + 4) = a2;
  sub_22EA41AB8(v7 + 8, 59, 0, 0);
  result = 0.0;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_QWORD *)(v7 + 8) = &off_24FAC4D70;
  *(_QWORD *)(v7 + 80) = 0;
  *(_WORD *)(v7 + 88) = 257;
  *(_DWORD *)(v7 + 92) = a3;
  return result;
}

unint64_t sub_22F3B8AD4(uint64_t a1)
{
  unint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (*(_QWORD *)(a1 + 72) < 4uLL || (*(_QWORD *)(a1 + 72) & 3) == 1)
  {
    v3 = sub_22EFBB490(a1);
    v4 = v3;
  }
  else
  {
    v4 = sub_22EFBB464(a1);
    v5 = *(_QWORD *)(a1 + 72) & 0xFFFFFFFFFFFFFFFCLL;
    if ((*(_QWORD *)(a1 + 72) & 3) != 1)
      v5 = 0;
    if (!v5)
      v5 = a1;
    v6 = *(_QWORD *)(v5 + 72);
    v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if ((v6 & 3) == 2 && v7 != 0)
      v7 = *(_QWORD *)(v7 + 8);
    sub_22F0D4E74(v7);
  }
  return v3 & 0xFFFFFFFF00000000 | v4;
}

void sub_22F3B8B68(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(a1 + 72);
  v1 = (uint64_t *)(a1 + 72);
  v2 = v3;
  if (v3 >= 4)
  {
    v4 = v2 & 3;
    v5 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (v4 != 1)
      v5 = 0;
    if (v5)
      v6 = (uint64_t *)(v5 + 72);
    else
      v6 = v1;
    v7 = *v6;
    v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if ((v7 & 3) == 2 && v8 != 0)
      v8 = *(_QWORD *)(v8 + 8);
    sub_22F0D4E74(v8);
  }
}

uint64_t sub_22F3B8BD0(uint64_t a1, uint64_t a2, int a3, int a4, unsigned __int16 a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t result;

  v15 = sub_22EFC7430(88, a1, a2, 0);
  result = sub_22EA41AB8(v15, 32, a2, a3);
  *(_QWORD *)(result + 40) = a7;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = a8;
  *(_DWORD *)(result + 64) = a4 & 0xFFFFF | (a5 << 20);
  *(_QWORD *)result = &off_24FAC4DE8;
  *(_QWORD *)(result + 72) = 0;
  *(_BYTE *)(result + 80) = a6;
  *(_BYTE *)(result + 81) = 0;
  *(_DWORD *)(result + 84) = 0;
  return result;
}

uint64_t sub_22F3B8C6C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 32, 0, 0);
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 8) = &off_24FAC4DE8;
  *(_QWORD *)(v3 + 80) = 0;
  *(_WORD *)(v3 + 88) = 0;
  *(_DWORD *)(v3 + 92) = 0;
  return result;
}

uint64_t sub_22F3B8CD8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = sub_22E3CD3D4(a1 + 2032, 8 * a3 + 96, 3);
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 4) = a2;
  result = sub_22EA41AB8(v5 + 8, 32, 0, 0);
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_DWORD *)(v5 + 72) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 8) = &off_24FAC4DE8;
  *(_QWORD *)(v5 + 80) = 0;
  *(_WORD *)(v5 + 88) = 257;
  *(_DWORD *)(v5 + 92) = a3;
  return result;
}

void sub_22F3B8D58(uint64_t a1)
{
  int *v1;

  if (*(_QWORD *)(a1 + 72) >= 8uLL)
  {
    v1 = sub_22F259350(a1);
    if ((*v1 - 5) > 1)
      sub_22F0EFE08((uint64_t)v1);
  }
}

uint64_t sub_22F3B8DA4(uint64_t result, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  __int128 v5;
  unint64_t v6;

  v3 = result;
  if (*(_DWORD *)a3)
  {
    result = sub_22E3CD3D4(a2 + 2032, 32, 3);
    v5 = a3[1];
    *(_OWORD *)result = *a3;
    *(_OWORD *)(result + 16) = v5;
    v6 = result & 0xFFFFFFFFFFFFFFF9;
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v3 + 72) = v6;
  return result;
}

uint64_t sub_22F3B8DF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = sub_22EFE9708(a5, a2);
  v13 = sub_22EFC7430(72, a1, a2, 0);
  v14 = (_QWORD *)sub_22EA41AB8(v13, 27, a2, a3);
  v14[5] = a4;
  v14[6] = 0;
  *v14 = &off_24FAC5488;
  v14[7] = a5;
  v14[8] = a6;
  if (v12)
    sub_22EFC77E8(v13, 1);
  return v13;
}

double sub_22F3B8E98(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 80, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  sub_22EA41AB8(v3 + 8, 27, 0, 0);
  result = 0.0;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_QWORD *)(v3 + 8) = &off_24FAC5488;
  return result;
}

uint64_t sub_22F3B8EF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v14;

  v14 = (_QWORD *)sub_22EFEB67C(a1, a2, 37, a3, a4, a5, a6, a8, a9, a10, a12);
  *v14 = &off_24FAC4EE0;
  v14[23] = a7;
  v14[24] = a11;
  v14[25] = 0;
  if (sub_22EFE9708(a7, (uint64_t)(v14 + 8)))
    sub_22EFC77E8(a1, 1);
  return a1;
}

uint64_t sub_22F3B8F90(uint64_t a1, char a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_22F0F043C(a1, a11);
  v19 = v18;
  v20 = sub_22EFC7430(208, a1, a3, 0);
  v21 = sub_22F3B8EF8(v20, a1, a2, a3, a4, a5, a6, a7, a9, a10, v19, a13);
  *(_BYTE *)(v21 + 180) = *(_BYTE *)(v21 + 180) & 0xF8 | 2;
  *(_DWORD *)(v21 + 72) &= ~0x100000u;
  sub_22EF64558(a1, v20, a12);
  return v20;
}

uint64_t sub_22F3B9070(uint64_t a1, uint64_t a2, int a3, const void *a4, unint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t result;

  if (a5)
  {
    if (a5 >> 61)
      v14 = -1;
    else
      v14 = 8 * a5;
    v15 = (void *)sub_22E3CD3D4(a1 + 2032, v14, 3);
    memmove(v15, a4, 8 * a5);
  }
  else
  {
    v15 = 0;
  }
  v16 = sub_22EFC7430(64, a1, a2, 0);
  result = sub_22EA41AB8(v16, 9, a2, a3);
  *(_QWORD *)result = &off_24FAC5240;
  *(_DWORD *)(result + 36) = a5;
  *(_QWORD *)(result + 40) = v15;
  *(_QWORD *)(result + 48) = a6;
  *(_DWORD *)(result + 56) = a7;
  return result;
}

uint64_t sub_22F3B9138(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 72, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22E7B5130(v3 + 8, 9);
  *(_QWORD *)(v3 + 8) = &off_24FAC5240;
  *(_QWORD *)(v3 + 44) = 0;
  *(_QWORD *)(v3 + 60) = 0;
  *(_QWORD *)(v3 + 52) = 0;
  return result;
}

uint64_t sub_22F3B9190(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = sub_22EFE9708(a5, a2);
  v13 = sub_22EFC7430(88, a1, a2, 0);
  v14 = (_QWORD *)sub_22EA41AB8(v13, 30, a2, a3);
  v14[5] = a4;
  v14[6] = a6;
  v14[7] = a5;
  v14[8] = a1 | 2;
  v14[9] = v14;
  v14[10] = 0;
  *v14 = &off_24FAC52A8;
  if (v12)
    sub_22EFC77E8(v13, 1);
  return v13;
}

uint64_t sub_22F3B9244(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22E3CD3D4(a1 + 2032, 64, 3);
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 4) = a2;
  result = sub_22EA41AB8(v3 + 8, 3, 0, 0);
  *(_QWORD *)(v3 + 8) = &off_24FAC5328;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  return result;
}

uint64_t sub_22F3B929C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = sub_22EFE9708(a5, a2);
  v13 = sub_22EFC7430(88, a1, a2, 0);
  v14 = (_QWORD *)sub_22EA41AB8(v13, 31, a2, a3);
  v14[5] = a4;
  v14[6] = a6;
  v14[7] = a5;
  v14[8] = a1 | 2;
  v14[9] = v14;
  v14[10] = 0;
  *v14 = &off_24FAC5390;
  if (v12)
    sub_22EFC77E8(v13, 1);
  return v13;
}

uint64_t sub_22F3B934C(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_22E3CD3D4(a1 + 2032, 96, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  result = sub_22EA41AB8(v4 + 8, 31, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = a1 | 2;
  *(_QWORD *)(v4 + 80) = result;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC5390;
  return result;
}

_QWORD *sub_22F3B93BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)sub_22E3CD3D4(a2 + 2032, 208, 3);
  *v3 = 0;
  v3[1] = 0;
  llvm::FoldingSetBase::FoldingSetBase((llvm::FoldingSetBase *)(v3 + 2));
  v3[4] = v3 + 6;
  v3[5] = 0x800000000;
  llvm::FoldingSetBase::FoldingSetBase((llvm::FoldingSetBase *)(v3 + 14));
  v3[16] = v3 + 18;
  v3[17] = 0x800000000;
  sub_22EF5908C(a2, (uint64_t)sub_22F3BA408, (uint64_t)v3);
  return v3;
}

unint64_t sub_22F3B9448(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10[2];

  v10[0] = a2;
  v10[1] = a3;
  v9 = a4;
  sub_22EFE95D4(a1);
  v7 = sub_22EFE9368(a1);
  return sub_22F3B949C(a1, v7 + 112, a5, v10, &v9);
}

unint64_t sub_22F3B949C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t NodeOrInsertPos;
  unint64_t v10;
  void *v12[2];
  _QWORD v13[17];

  v13[16] = *MEMORY[0x24BDAC8D0];
  v12[0] = v13;
  v12[1] = (void *)0x2000000000;
  v5 = *a4;
  v6 = a4[1];
  v7 = *a5;
  v8 = sub_22EFC72E8(a1);
  sub_22F3B9584((uint64_t)v12, v5, v6, v7, v8);
  NodeOrInsertPos = llvm::FoldingSetBase::FindNodeOrInsertPos();
  if (NodeOrInsertPos)
    v10 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(NodeOrInsertPos - 24) + 72), *(_QWORD *)(NodeOrInsertPos - 24));
  else
    v10 = 0;
  if (v12[0] != v13)
    free(v12[0]);
  return v10;
}

void sub_22F3B9584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  sub_22E3CF554(a1, a3);
  if (a3)
  {
    v10 = 24 * a3;
    do
    {
      sub_22F0EED38(a2, a1, a5);
      a2 += 24;
      v10 -= 24;
    }
    while (v10);
  }
  sub_22EFEA4C8(a5, a1, a4);
}

unint64_t sub_22F3B95FC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  sub_22EFE95D4(a1);
  v4 = sub_22EFE9368(a1);
  v5 = *(unsigned int *)(v4 + 136);
  if (!(_DWORD)v5)
    return 0;
  v6 = *(uint64_t **)(v4 + 128);
  v7 = 8 * v5;
  while (1)
  {
    v8 = *v6;
    v9 = *(_QWORD *)(*(_QWORD *)(*v6 + 80) + 440) & 0xFFFFFFFFFFFFFFF8;
    if ((*(uint64_t (**)(unint64_t))(*(_QWORD *)v9 + 32))(v9) == v3)
      break;
    ++v6;
    v7 -= 8;
    if (!v7)
      return 0;
  }
  return sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v8 + 80) + 72), *(_QWORD *)(v8 + 80));
}

double sub_22F3B96A0(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_22E3CD3D4(a1 + 2032, 432, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  v5 = sub_22EA41AB8(v4 + 8, 65, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_DWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 80) = a1 | 2;
  *(_QWORD *)(v4 + 88) = v5;
  *(_QWORD *)(v4 + 96) = 0;
  *(_DWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC4F60;
  *(_QWORD *)(v4 + 120) = 0;
  *(_QWORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 144) = v4 + 160;
  *(_QWORD *)&result = 0x800000000;
  *(_QWORD *)(v4 + 152) = 0x800000000;
  *(_QWORD *)(v4 + 416) = 0;
  *(_DWORD *)(v4 + 424) = 0;
  *(_BYTE *)(v4 + 428) &= 0xF0u;
  return result;
}

uint64_t sub_22F3B9750(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int128 *a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v16;

  v16 = (_QWORD *)sub_22EFEC588(a1, 66, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12);
  *v16 = &off_24FAC4FD8;
  v16[53] = a6;
  v16[54] = a13;
  v16[55] = 0;
  if (sub_22EFE9708(a6, a3))
    sub_22EFC77E8(a1, 1);
  return a1;
}

uint64_t sub_22F3B97F0(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, __int128 *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  sub_22F0F043C(a1, a12);
  v19 = v18;
  v20 = sub_22EFC7430(448, a1, a2, 0);
  result = sub_22F3B9750(v20, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v19);
  *(_BYTE *)(result + 420) = *(_BYTE *)(result + 420) & 0xF8 | 2;
  return result;
}

double sub_22F3B98B0(uint64_t a1, int a2)
{
  _DWORD *v4;

  v4 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 456, 3);
  *v4 = 0;
  v4[1] = a2;
  return sub_22EFECA84((uint64_t)(v4 + 2), a1);
}

uint64_t sub_22F3B98F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  _DWORD *v22;
  int v23;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];

  v32[2] = *MEMORY[0x24BDAC8D0];
  if (a5)
  {
    v25 = sub_22EF67C8C(a2);
    v26 = sub_22EF579A8(a2, v25, 0);
    v27 = sub_22EFEB338(a2, a3, 0, 0, 0, 0, 0, *v26, 0, (uint64_t)v26);
    v28 = sub_22EFEAF4C(a2, a3, 0, 0, 0, 1u, 0, 1, 1u, 0, 0);
    *(_DWORD *)(v28 + 28) |= 0x200u;
    v29 = v27;
    v30 = v28;
    v20 = (_DWORD *)sub_22E3CD3D4(a2 + 2032, 32, 3);
    v22 = v20;
    v23 = 2;
  }
  else
  {
    v10 = sub_22EFEAF4C(a2, a3, 0, 0, 1u, 0, 0, 1, 0, 0, 0);
    *(_DWORD *)(v10 + 28) |= 0x200u;
    v11 = sub_22EF579A8(a2, *(_QWORD *)(v10 + 48) & 0xFFFFFFFFFFFFFFF0, 0);
    v12 = sub_22EFEB338(a2, a3, 0, 0, 0, 1u, 0, *v11, 1, (uint64_t)v11);
    *(_DWORD *)(v12 + 28) |= 0x200u;
    v32[0] = v10;
    v32[1] = v12;
    v13 = (_DWORD *)sub_22E3CD3D4(a2 + 2032, 32, 3);
    sub_22EFE8D6C(v13, v14, 0, 0, (uint64_t)v32, 2, 0, 0);
    v15 = sub_22EFC7430(88, a2, a3, 0);
    v16 = sub_22EA41AB8(v15, 32, a3, 0);
    *(_QWORD *)(v16 + 40) = 0;
    *(_QWORD *)(v16 + 48) = 0;
    *(_QWORD *)(v16 + 56) = v13;
    *(_DWORD *)(v16 + 64) = 0;
    *(_QWORD *)v16 = &off_24FAC4DE8;
    *(_QWORD *)(v16 + 72) = 0;
    *(_WORD *)(v16 + 80) = 0;
    *(_DWORD *)(v16 + 84) = 0;
    *(_DWORD *)(v16 + 28) |= 0x200u;
    v17 = sub_22EFEAF4C(a2, a3, 0, 0, 0, 1u, 0, 1, 0, 0, 0);
    *(_DWORD *)(v17 + 28) |= 0x200u;
    v18 = sub_22EF579A8(a2, *(_QWORD *)(v17 + 48) & 0xFFFFFFFFFFFFFFF0, 0);
    v19 = sub_22EFEB338(a2, a3, 0, 0, 0, 2u, 0, *v18, 0, (uint64_t)v18);
    v29 = v15;
    v30 = v17;
    v31 = v19;
    v20 = (_DWORD *)sub_22E3CD3D4(a2 + 2032, 40, 3);
    v22 = v20;
    v23 = 3;
  }
  sub_22EFE8D6C(v20, v21, 0, 0, (uint64_t)&v29, v23, 0, 0);
  sub_22EA41AB8(a1, 26, a3, 0);
  *(_QWORD *)(a1 + 40) = a4;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v22;
  *(_QWORD *)a1 = &off_24FAC5050;
  *(_DWORD *)(a1 + 64) = a5;
  return a1;
}

void sub_22F3B9C24(uint64_t *a1, llvm::raw_ostream *this, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *(_QWORD *)&v11 = a3;
  *((_QWORD *)&v11 + 1) = a4;
  v6 = *a1;
  if (v6)
  {
    sub_22F0AAD88(v6, this, &v11, 0);
    a4 = *((_QWORD *)&v11 + 1);
    a3 = v11;
  }
  sub_22EFC6F2C(a1 + 3, this, a3, a4);
  if (a1[8])
  {
    sub_22E47DAC0(this, "<");
    v7 = a1[8];
    v8 = *(unsigned int *)(v7 + 8);
    if ((_DWORD)v8)
    {
      v9 = v7 + 16;
      v10 = 32 * v8;
      do
      {
        sub_22F0EF330(v9, &v11, this, 0);
        v9 += 32;
        v10 -= 32;
      }
      while (v10);
    }
    sub_22E47DAC0(this, ">");
  }
}

uint64_t sub_22F3B9CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80) + 72), *(_QWORD *)(*(_QWORD *)(a1 + 1960) + 80));
  if (v6)
    v7 = v6 + 40;
  else
    v7 = 0;
  v8 = sub_22EFC7430(136, a1, v7, 0);
  v9 = (_QWORD *)sub_22EA41AB8(v8, 72, v7, 0);
  v9[5] = 0;
  v9[6] = a2;
  v9[7] = 0;
  *v9 = &off_24FAC5410;
  v10 = (uint64_t)(v9 + 8);
  sub_22EF53B24((uint64_t)(v9 + 8), a3);
  sub_22EF5908C(a1, (uint64_t)sub_22E7B7544, v10);
  return v8;
}

uint64_t sub_22F3B9D90(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v6[10];

  v6[9] = *MEMORY[0x24BDAC8D0];
  v4 = sub_22E3CD3D4(a1 + 2032, 144, 3);
  *(_DWORD *)v4 = 0;
  *(_DWORD *)(v4 + 4) = a2;
  LODWORD(v6[0]) = 0;
  sub_22EA41AB8(v4 + 8, 72, 0, 0);
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 8) = &off_24FAC5410;
  sub_22EF53B24(v4 + 72, (uint64_t)v6);
  if (LODWORD(v6[0]) >= 2)
    sub_22EF53BC0(v6);
  sub_22EF5908C(a1, (uint64_t)sub_22E7B7544, v4 + 72);
  return v4 + 8;
}

llvm::raw_ostream *sub_22F3B9E70(unint64_t a1, llvm::raw_ostream *a2)
{
  uint64_t v4;

  sub_22E47DAC0(a2, "<template param ");
  v4 = sub_22EFC72E8(a1);
  sub_22EFEC848(a1, (uint64_t **)a2, v4 + 15104);
  return sub_22E47DAC0(a2, ">");
}

uint64_t sub_22F3B9EC8(unint64_t a1, llvm::raw_ostream *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + 64;
  v6 = *(_QWORD *)(a1 + 48);
  sub_22EFC72E8(a1);
  return sub_22EF53F70(v5, a2, a3, v6);
}

void sub_22F3B9F14(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B9F3C(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B9F64(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3B9F8C(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22F3B9FB0(uint64_t a1)
{
  int *v4;
  unint64_t v5;
  unint64_t v6;

  if (*(_QWORD *)(a1 + 72) < 8uLL || (*(_QWORD *)(a1 + 72) & 6) == 2)
  {
    v6 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    v4 = sub_22F259350(a1);
    sub_22F0EFE08((uint64_t)v4);
    v6 = HIDWORD(v5);
  }
  return **(unsigned int **)(a1 + 56) | (v6 << 32);
}

uint64_t sub_22F3BA004(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return nullsub_910(a1);
}

void sub_22F3BA02C(uint64_t a1)
{
  nullsub_910(a1 + 64);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA068(uint64_t a1)
{
  nullsub_910(a1 + 64);
  return nullsub_910(a1);
}

void sub_22F3BA090(uint64_t a1)
{
  nullsub_910(a1 + 64);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA0D0(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA0F8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA120(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA148(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA16C(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = &off_24FAC4F60;
  v2 = (_QWORD *)a1[17];
  if (v2 != a1 + 19)
    free(v2);
  *a1 = &off_24FAC3080;
  return nullsub_910(a1);
}

void sub_22F3BA1BC(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = &off_24FAC4F60;
  v2 = (_QWORD *)a1[17];
  if (v2 != a1 + 19)
    free(v2);
  *a1 = &off_24FAC3080;
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA220(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = &off_24FAC4F60;
  v2 = (_QWORD *)a1[17];
  if (v2 != a1 + 19)
    free(v2);
  *a1 = &off_24FAC3080;
  return nullsub_910(a1);
}

void sub_22F3BA270(_QWORD *a1)
{
  _QWORD *v2;

  *a1 = &off_24FAC4F60;
  v2 = (_QWORD *)a1[17];
  if (v2 != a1 + 19)
    free(v2);
  *a1 = &off_24FAC3080;
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA2D8(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA2FC(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC5410;
  v3 = *(_DWORD *)(a1 + 64);
  v2 = (uint64_t *)(a1 + 64);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  return nullsub_910(a1);
}

void sub_22F3BA338(uint64_t a1)
{
  uint64_t *v2;
  unsigned int v3;

  *(_QWORD *)a1 = &off_24FAC5410;
  v3 = *(_DWORD *)(a1 + 64);
  v2 = (uint64_t *)(a1 + 64);
  if (v3 >= 2)
    sub_22EF53BC0(v2);
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3BA38C(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA3B0()
{
  return 0;
}

void sub_22F3BA3BC(uint64_t a1)
{
  nullsub_910(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3BA3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = **(unsigned int **)(a1 + 56);
  sub_22F0D60E4(*(_QWORD *)(a1 + 64));
  return v1 | (v2 << 32);
}

_QWORD *sub_22F3BA40C(_QWORD *a1)
{
  llvm::FoldingSetBase *v2;
  _QWORD *v3;
  _QWORD *v4;
  llvm::FoldingSetBase *v6;

  v2 = (llvm::FoldingSetBase *)(a1 + 14);
  v3 = (_QWORD *)a1[16];
  if (v3 != a1 + 18)
  {
    v6 = v2;
    free(v3);
    v2 = v6;
  }
  llvm::FoldingSetBase::~FoldingSetBase(v2);
  v4 = (_QWORD *)a1[4];
  if (v4 != a1 + 6)
    free(v4);
  llvm::FoldingSetBase::~FoldingSetBase((llvm::FoldingSetBase *)(a1 + 2));
  return a1;
}

uint64_t sub_22F3BA47C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_22F3BA48C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v2)
  {
    v3 = sub_22EFED974(v2);
    MEMORY[0x2348A0E9C](v3, 0x1020C40355347DDLL);
  }
  return a1;
}

uint64_t sub_22F3BA4D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD v8[81];

  v8[80] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  v5 = a1;
  v6 = v8;
  v7 = 0x1000000000;
  v4 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(*(_QWORD *)(a2 + 1960) + 80) + 72), *(_QWORD *)(*(_QWORD *)(a2 + 1960) + 80));
  sub_22F3BAC7C((uint64_t)&v5, v4, v4, &v5, &v4, v5);
  if (v6 != v8)
    free(v6);
  return a1;
}

double sub_22F3BA594@<D0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = *(_QWORD *)a1;
    v9 = operator new();
    v6 = sub_22F3BA4D0(v9, v8);
    v10 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v6;
    if (v10)
    {
      v11 = sub_22EFED974(v10);
      MEMORY[0x2348A0E9C](v11, 0x1020C40355347DDLL);
      v6 = *(_QWORD *)(a1 + 16);
    }
  }
  return sub_22EFECDAC(v6, *(_DWORD *)(a1 + 8), a2, a3);
}

void sub_22F3BA628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  if (sub_22F24C318(*(_QWORD *)a3, *(_DWORD *)(a3 + 16), a2, &v11))
    v5 = v11 == *(_QWORD *)a3 + 16 * *(unsigned int *)(a3 + 16);
  else
    v5 = 1;
  if (v5)
  {
    *(_BYTE *)(a1 + 40) = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v11 + 8);
    v7 = v6 & 0xFFFFFFFFFFFFFFF8;
    if ((~(_BYTE)v6 & 6) != 0 || v7 == 0)
    {
      sub_22EFED328(a1, v6);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v9 = *(_QWORD *)v7;
      v10 = *(unsigned int *)(v7 + 8);
      *(_BYTE *)(a1 + 40) = 0;
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v10;
    }
  }
}

void sub_22F3BA6D0(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  int v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  while (1)
  {
    if (!sub_22EFED390(a3, a4)
      || ((v16 = 0, sub_22F24C318(*(_QWORD *)a2, *(_DWORD *)(a2 + 16), (uint64_t)a3, &v16))
        ? (v7 = v16 == *(_QWORD *)a2 + 16 * *(unsigned int *)(a2 + 16))
        : (v7 = 1),
          v7))
    {
      v12 = sub_22F379890(a3);
      *(_BYTE *)(a1 + 40) = 1;
      *(_DWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = a3;
      return;
    }
    v8 = *(_QWORD *)(v16 + 8);
    v9 = v8 & 0xFFFFFFFFFFFFFFF8;
    if ((v8 & 6) != 2 || v9 == 0)
      break;
    a4 = (uint64_t)a3;
    a3 = (unsigned __int8 *)(v8 & 0xFFFFFFFFFFFFFFF8);
    if ((*(_BYTE *)v9 + 21) <= 0x7Au)
    {
      v11 = sub_22F379890((unsigned __int8 *)(v8 & 0xFFFFFFFFFFFFFFF8));
      *(_BYTE *)(a1 + 40) = 1;
      *(_DWORD *)a1 = v11;
      *(_QWORD *)(a1 + 8) = v9;
      return;
    }
  }
  if ((v8 & 6) != 6 || v9 == 0)
  {
    sub_22EFED328(a1, v8);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    v14 = *(_QWORD *)v9;
    v15 = *(unsigned int *)(v9 + 8);
    *(_BYTE *)(a1 + 40) = 0;
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v15;
  }
}

void sub_22F3BA7E4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;

  v11 = 0;
  if (sub_22EFED7D8(*(_QWORD *)a3, *(_DWORD *)(a3 + 16), a2, &v11))
    v5 = v11 == (unsigned int *)(*(_QWORD *)a3 + 48 * *(unsigned int *)(a3 + 16));
  else
    v5 = 1;
  if (v5)
  {
    *(_BYTE *)(a1 + 40) = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
  else
  {
    v6 = *((_QWORD *)v11 + 5);
    v7 = v6 & 0xFFFFFFFFFFFFFFF8;
    if ((~(_BYTE)v6 & 6) != 0 || v7 == 0)
    {
      sub_22EFED328(a1, v6);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v9 = *(_QWORD *)v7;
      v10 = *(unsigned int *)(v7 + 8);
      *(_BYTE *)(a1 + 40) = 0;
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v10;
    }
  }
}

unint64_t sub_22F3BA890(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  if (!(_DWORD)v1)
    goto LABEL_8;
  if (v1 == 72)
    goto LABEL_12;
  v2 = *a1;
  while (1)
  {
    v2 = dword_24FABB2A0[4 * v2];
    if (!(_DWORD)v2)
      break;
    if (v2 == 72)
      goto LABEL_12;
  }
  if (v1 == 5)
  {
LABEL_12:
    v6 = *((_QWORD *)a1 + 1);
    v7 = *((_QWORD *)a1 + 2);
    v8 = v6;
    return sub_22F3BA960(&v8, &v7);
  }
  else
  {
LABEL_8:
    if ((int)v1 <= 72)
      v3 = 0;
    else
      v3 = *((_QWORD *)a1 + 1);
    v4 = 0x9DDFEA08EB382D69 * ((8 * v3 + sub_22E72796C()) ^ HIDWORD(v3));
    return 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (HIDWORD(v3) ^ (v4 >> 47) ^ v4)) ^ ((0x9DDFEA08EB382D69
                                                                       * (HIDWORD(v3) ^ (v4 >> 47) ^ v4)) >> 47));
  }
}

unint64_t sub_22F3BA960(uint64_t *a1, uint64_t *a2)
{
  _OWORD v5[4];
  _OWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v7 = 0;
  memset(v6, 0, sizeof(v6));
  memset(v5, 0, sizeof(v5));
  v8 = sub_22E72796C();
  return sub_22F3BA9FC((char *)v5, v5, (char *)v6, *a1, a2);
}

unint64_t sub_22F3BA9FC(char *a1, _QWORD *__dst, char *a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v8;
  char *v9;
  uint64_t v11;
  int v12[2];

  v11 = 0;
  v8 = sub_22E54F04C(a1, &v11, __dst, (unint64_t)a3, a4);
  *(_QWORD *)v12 = v11;
  v9 = (char *)sub_22E54F04C(a1, (uint64_t *)v12, v8, (unint64_t)a3, *a5);
  return sub_22E54F2E8(a1, *(uint64_t *)v12, v9, a3);
}

unsigned int *sub_22F3BAA78(uint64_t a1)
{
  int v1;
  unsigned int *v2;
  unsigned int *result;
  unsigned int *v4[2];

  v1 = *(_DWORD *)(a1 + 8);
  v2 = *(unsigned int **)a1;
  result = (unsigned int *)(*(_QWORD *)a1 + 48 * *(unsigned int *)(a1 + 16));
  if (v1)
  {
    v4[0] = v2;
    v4[1] = result;
    sub_22F3BAAC0(v4);
    return v4[0];
  }
  return result;
}

unsigned int *sub_22F3BAAC0(unsigned int **a1)
{
  unsigned int *result;
  BOOL v3;
  unsigned int v4[10];
  unsigned int v5[10];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v4[0] = 1072;
  for (result = *a1; result != a1[1]; *a1 = result)
  {
    if (*result | v5[0] && (*result != 1072 || v5[0] != 1072))
    {
      v3 = sub_22F359EAC(result, v5);
      result = *a1;
      if (!v3 && *result | v4[0] && (*result != 1072 || v4[0] != 1072))
      {
        result = (unsigned int *)sub_22F359EAC(result, v4);
        if (!(_DWORD)result)
          return result;
        result = *a1;
      }
    }
    result += 12;
  }
  return result;
}

uint64_t sub_22F3BABA0(uint64_t result)
{
  uint64_t v1;
  unsigned int *v2;
  uint64_t v3;
  unsigned int v4[10];
  unsigned int v5[10];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = *(unsigned int *)(result + 16);
  if ((_DWORD)v1)
  {
    v5[0] = 0;
    v4[0] = 1072;
    v2 = *(unsigned int **)result;
    v3 = 48 * v1;
    do
    {
      if (*v2 | v5[0] && (*v2 != 1072 || v5[0] != 1072))
      {
        result = sub_22F359EAC(v2, v5);
        if ((result & 1) == 0 && *v2 | v4[0] && (*v2 != 1072 || v4[0] != 1072))
          result = sub_22F359EAC(v2, v4);
      }
      v2 += 12;
      v3 -= 48;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_22F3BAC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (!a2)
    return 1;
  sub_22F3BAD64(a1, a3, a6);
  v15 = sub_22F379878(a2);
  v16 = a2;
  v11 = sub_22EC51434(a1 + 8, (unint64_t)&v15);
  v12 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v13 = *(_QWORD *)(v11 + 32);
  v14 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v11;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = v13;
  ++*(_DWORD *)(a1 + 16);
  result = sub_22F3BB028(a4, *a5);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_22F3BAD64(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32[2];
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_DWORD *)(result + 16))
    return result;
  v3 = result;
  *(_QWORD *)&v32[0] = a2;
  result = (uint64_t)sub_22F24C2B0(a3, (uint64_t *)v32);
  v4 = result;
  v5 = *(_QWORD *)(result + 8);
  if (v5 <= 7)
  {
    v6 = *(_QWORD *)(v3 + 8) + 40 * *(unsigned int *)(v3 + 16);
    v7 = *(unsigned int *)(v6 - 40);
    if ((_DWORD)v7)
    {
      if (v7 == 76)
      {
LABEL_6:
        v8 = *(_QWORD *)(v6 - 32);
        if (v8)
        {
          v9 = v8 & 0xFFFFFFFFFFFFFFF9;
LABEL_37:
          *(_QWORD *)(v4 + 8) = v9;
          return result;
        }
      }
      else
      {
        v27 = *(unsigned int *)(v6 - 40);
        while (1)
        {
          v27 = dword_24FABB2A0[4 * v27];
          if (!(_DWORD)v27)
            break;
          if (v27 == 76)
            goto LABEL_6;
        }
      }
      if (v7 == 172)
      {
LABEL_31:
        v28 = *(_QWORD *)(v6 - 32);
        if (v28)
        {
          v9 = v28 & 0xFFFFFFFFFFFFFFF9 | 2;
          goto LABEL_37;
        }
      }
      else
      {
        while (1)
        {
          v7 = dword_24FABB2A0[4 * v7];
          if (!(_DWORD)v7)
            break;
          if (v7 == 172)
            goto LABEL_31;
        }
      }
    }
    result = operator new();
    v29 = *(_QWORD *)(v3 + 8) + 40 * *(unsigned int *)(v3 + 16);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(_OWORD *)(v29 - 24);
    *(_OWORD *)result = *(_OWORD *)(v29 - 40);
    *(_OWORD *)(result + 16) = v31;
    *(_QWORD *)(result + 32) = v30;
    v9 = result & 0xFFFFFFFFFFFFFFF9 | 4;
    goto LABEL_37;
  }
  if ((~(_BYTE)v5 & 6) != 0)
  {
    v10 = operator new();
    sub_22EFED328((uint64_t)v32, *(_QWORD *)(v4 + 8));
    *(_QWORD *)v10 = v10 + 16;
    *(_QWORD *)(v10 + 8) = 0x200000000;
    sub_22EFEDB84(v10, v32);
    result = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if ((*(_QWORD *)(v4 + 8) & 6) == 4 && result != 0)
      result = MEMORY[0x2348A0E9C]();
    v5 = v10 | 6;
    *(_QWORD *)(v4 + 8) = v10 | 6;
  }
  v12 = v5 & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v3 + 8);
  v14 = *(_DWORD *)(v3 + 16);
  v15 = v13 + 40 * v14;
  v17 = *(_DWORD *)(v15 - 40);
  v16 = (unsigned int *)(v15 - 40);
  if (v17 < 73 || !*(_QWORD *)(v13 + 40 * v14 - 32))
  {
LABEL_25:
    result = sub_22EC51434(v12, v13 + 40 * v14 - 40);
    v24 = *(_QWORD *)v12 + 40 * *(unsigned int *)(v12 + 8);
    v25 = *(_QWORD *)(result + 32);
    v26 = *(_OWORD *)(result + 16);
    *(_OWORD *)v24 = *(_OWORD *)result;
    *(_OWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 32) = v25;
    ++*(_DWORD *)(v12 + 8);
    return result;
  }
  v18 = *(unsigned int **)v12;
  v19 = *(unsigned int *)(v12 + 8);
  if ((_DWORD)v19)
  {
    v20 = &v18[10 * v19];
    v21 = 40 * v19;
    while (1)
    {
      result = sub_22F359EAC(v18, v16);
      if ((result & 1) != 0)
        break;
      v18 += 10;
      v21 -= 40;
      if (!v21)
      {
        v18 = v20;
        break;
      }
    }
    v22 = v18;
    v18 = *(unsigned int **)v12;
    v23 = *(_DWORD *)(v12 + 8);
  }
  else
  {
    v23 = 0;
    v22 = *(unsigned int **)v12;
  }
  if (v22 == &v18[10 * v23])
  {
    v13 = *(_QWORD *)(v3 + 8);
    v14 = *(_DWORD *)(v3 + 16);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_22F3BB028(uint64_t *a1, unint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 28) & 0x7F)
  {
    case 0:
      if ((sub_22F3BB4AC(a1, a2) & 1) == 0)
        return 0;
      goto LABEL_29;
    case 1:
      if ((sub_22F3BB558(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 2:
      if ((sub_22F3BB6B0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 3:
      if ((sub_22EFEDC64(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 4:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 5:
      if ((sub_22F3BB74C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 6:
      if ((sub_22F3BB74C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 7:
      if ((sub_22F3BB7D8(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 8:
      if ((sub_22F3BB894(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 9:
      if ((sub_22EFEDDE0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xA:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xB:
      if ((sub_22F3BB7D8(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xC:
      if ((sub_22F3BB74C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xD:
      if ((sub_22F3BB9F0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xE:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0xF:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x10:
      if ((sub_22F3BBB28(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x11:
      if ((sub_22F3BBBB4(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x12:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x13:
      if ((sub_22EFEE020(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x14:
      if ((sub_22F3BBB28(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x15:
      if ((sub_22F3BBB28(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x16:
      if ((sub_22EFEE168(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x17:
      if ((sub_22EFEE3B0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x18:
      if ((sub_22F3BBC98(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x19:
      if ((sub_22F3BBE14(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1A:
      if ((sub_22F3BBF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1B:
      if ((sub_22F3BBFDC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1C:
      if ((sub_22F3BC0A8(a1, (_QWORD *)a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1D:
      if ((sub_22F3BC1B4(a1, (_QWORD *)a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1E:
      if ((sub_22F3BC2C0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x1F:
      if ((sub_22F3BC3A0(a1, (_QWORD *)a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x20:
      if ((sub_22F3BC4AC(a1, (_QWORD *)a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x21:
      if ((sub_22F3BC5BC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x22:
      if ((sub_22F3BC750(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x23:
      if ((sub_22F3BC7E8(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x24:
      if ((sub_22F3BC880(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x25:
      if ((sub_22EFEE524(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x26:
      if ((sub_22EFEE670(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x27:
      if ((sub_22F3BC9E4(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x28:
      if ((sub_22F3BCB1C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x29:
      if ((sub_22F3BCB1C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2A:
      if ((sub_22F3BCC48(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2B:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2C:
      if ((sub_22F3BCD58(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2D:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2E:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x2F:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x30:
      if ((sub_22F3BCE68(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x31:
      if ((sub_22EFEE85C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x32:
      if ((sub_22EFEE9EC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x33:
      if ((sub_22EFEE9EC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x34:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x35:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x36:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x37:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x38:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x39:
      if ((sub_22F3BCF24(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3A:
      if ((sub_22F3BCFAC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3B:
      if ((sub_22EFEEB4C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3C:
      if ((sub_22F3BD060(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3D:
      if ((sub_22F3BD114(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3E:
      if ((sub_22F3BD060(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x3F:
      if ((sub_22F3BD060(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x40:
      if ((sub_22F3BD210(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x41:
      if ((sub_22F3BD35C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x42:
      if ((sub_22EFEECB4(a1, a2) & 1) == 0)
        return 0;
      goto LABEL_29;
    case 0x43:
      if ((sub_22F3BD4DC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x44:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x45:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x46:
      if ((sub_22F3BD598(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x47:
      if ((sub_22F3BD608(a1, (_QWORD *)a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x48:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x49:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4A:
      if ((sub_22F3BB9F0(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4B:
      if ((sub_22F3BD668(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4C:
      if ((sub_22F3BD798(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4D:
      if ((sub_22F3BD878(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4E:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x4F:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x50:
      if ((sub_22F3BB4AC(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x51:
      if ((sub_22F3BD974(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x52:
      if ((sub_22F3BDA0C(a1, a2) & 1) != 0)
        goto LABEL_29;
      return 0;
    case 0x53:
      result = sub_22EFEEE68(a1, a2);
      if ((_DWORD)result)
        goto LABEL_29;
      return result;
    default:
LABEL_29:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_22F3BB460(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) == 0)
    return 1;
  if (*(_QWORD *)(a2 + 152))
    return (sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 152), 0) & 1) != 0;
  result = sub_22EFEF1D8(a1, a2 + 80);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22F3BB4AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (sub_22EFCB718(a2))
    v4 = sub_22EFCAE04(a2);
  else
    v4 = 0;
  result = sub_22EFF4B10(a1, v4);
  if ((_DWORD)result)
  {
    v6 = sub_22F255ABC(a2);
    if (v6 == v7)
    {
      return 1;
    }
    else
    {
      v8 = v7;
      v9 = v6 + 8;
      do
      {
        v11 = *(_QWORD *)(v9 - 8);
        result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
        if ((_DWORD)result)
          v10 = v9 == v8;
        else
          v10 = 1;
        v9 += 8;
      }
      while (!v10);
    }
  }
  return result;
}

uint64_t sub_22F3BB558(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 96);
  if (!v4
    || (v16 = *v4,
        v15 = (uint64_t)(v4 + 1),
        *(_QWORD *)&v17 = v16,
        *((_QWORD *)&v17 + 1) = v15,
        LODWORD(v18) = sub_22F37A024(&v17),
        v19 = v17,
        result = sub_22F3BEEB4((uint64_t)a1, v16, v15, (uint64_t)&v18, a1, (uint64_t)&v17, *a1 + 24),
        (_DWORD)result))
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 64))(a2);
    result = sub_22EFEF038((uint64_t)a1, v5, 0);
    if ((_DWORD)result)
    {
      v7 = *(unsigned int *)(a2 + 112);
      if ((_DWORD)v7)
      {
        v8 = 16 * v7;
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 104) + 8);
        while (1)
        {
          if (*v9)
          {
            result = sub_22EFEF038((uint64_t)a1, *v9, 0);
            if (!(_DWORD)result)
              break;
          }
          v9 += 2;
          v8 -= 16;
          if (!v8)
            goto LABEL_8;
        }
      }
      else
      {
LABEL_8:
        v10 = sub_22F255ABC(a2);
        if (v10 == v11)
        {
          return 1;
        }
        else
        {
          v12 = v11;
          v13 = v10 + 8;
          do
          {
            v18 = *(_QWORD *)(v13 - 8);
            result = sub_22F3C0544((uint64_t)a1, v18, v18, (uint64_t)a1, &v18, *a1);
            if ((_DWORD)result)
              v14 = v13 == v12;
            else
              v14 = 1;
            v13 += 8;
          }
          while (!v14);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BB6B0(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v4 = sub_22F3AD7DC(a2);
  result = sub_22EFEF038((uint64_t)a1, v4, 0);
  if ((_DWORD)result)
  {
    v6 = sub_22F255ABC(a2);
    if (v6 == v7)
    {
      return 1;
    }
    else
    {
      v8 = v7;
      v9 = v6 + 8;
      do
      {
        v11 = *(_QWORD *)(v9 - 8);
        result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
        if ((_DWORD)result)
          v10 = v9 == v8;
        else
          v10 = 1;
        v9 += 8;
      }
      while (!v10);
    }
  }
  return result;
}

uint64_t sub_22F3BB74C(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_22EFF4B10(a1, a2 + 40);
  if ((_DWORD)result)
  {
    v5 = sub_22F255ABC(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 8;
      do
      {
        v10 = *(_QWORD *)(v8 - 8);
        result = sub_22F3C0544((uint64_t)a1, v10, v10, (uint64_t)a1, &v10, *a1);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 8;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22F3BB7D8(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 40));
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BB894(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 40);
  v5 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0 && v5)
  {
    v7 = *v5;
    v6 = (uint64_t)(v5 + 1);
    *(_QWORD *)&v16 = v7;
    *((_QWORD *)&v16 + 1) = v6;
    LODWORD(v17) = sub_22F37A024(&v16);
    v18 = v16;
    if ((sub_22F3BEEB4((uint64_t)a1, v7, v6, (uint64_t)&v17, a1, (uint64_t)&v16, *a1 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if ((v4 & 4) != 0)
      v9 = 0;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFFF8;
    v17 = v9;
    result = sub_22F3BAC7C(a1, v9, v9, a1, &v17, *a1);
    if (!(_DWORD)result)
      return result;
  }
  if (sub_22EFCB718(a2))
    v10 = sub_22EFCAE04(a2);
  else
    v10 = 0;
  result = sub_22EFF4B10(a1, v10);
  if ((_DWORD)result)
  {
    v11 = sub_22F255ABC(a2);
    if (v11 == v12)
    {
      return 1;
    }
    else
    {
      v13 = v12;
      v14 = v11 + 8;
      do
      {
        v17 = *(_QWORD *)(v14 - 8);
        result = sub_22F3C0544((uint64_t)a1, v17, v17, (uint64_t)a1, (uint64_t *)&v17, *a1);
        if ((_DWORD)result)
          v15 = v14 == v13;
        else
          v15 = 1;
        v14 += 8;
      }
      while (!v15);
    }
  }
  return result;
}

uint64_t sub_22F3BB9F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)&v17 = *(_QWORD *)(a2 + 64);
  *((_QWORD *)&v17 + 1) = v4;
  LODWORD(v18) = 5;
  v19 = v17;
  result = sub_22F3BE830((uint64_t)a1, v17, v4, (uint64_t)&v18, a1, (uint64_t *)&v17, *a1 + 24);
  if ((_DWORD)result)
  {
    v6 = *(_DWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 80);
    v14 = *(_QWORD *)(a2 + 40);
    v15 = v6;
    v16 = v7;
    result = sub_22EFF25B0(a1, &v14);
    if ((_DWORD)result)
    {
      v8 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
      result = sub_22EFF4B10(a1, v8);
      if ((_DWORD)result)
      {
        v9 = sub_22F255ABC(a2);
        if (v9 == v10)
        {
          return 1;
        }
        else
        {
          v11 = v10;
          v12 = v9 + 8;
          do
          {
            v18 = *(_QWORD *)(v12 - 8);
            result = sub_22F3C0544((uint64_t)a1, v18, v18, (uint64_t)a1, &v18, *a1);
            if ((_DWORD)result)
              v13 = v12 == v11;
            else
              v13 = 1;
            v12 += 8;
          }
          while (!v13);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BBB28(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_22EFF4B10(a1, a2 + 48);
  if ((_DWORD)result)
  {
    v5 = sub_22F255ABC(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 8;
      do
      {
        v10 = *(_QWORD *)(v8 - 8);
        result = sub_22F3C0544((uint64_t)a1, v10, v10, (uint64_t)a1, &v10, *a1);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 8;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22F3BBBB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)&v11 = *(_QWORD *)(a2 + 72);
  *((_QWORD *)&v11 + 1) = v4;
  LODWORD(v12) = 5;
  v13 = v11;
  result = sub_22F3BE830((uint64_t)a1, v11, v4, (uint64_t)&v12, a1, (uint64_t *)&v11, *a1 + 24);
  if ((_DWORD)result)
  {
    v6 = sub_22F255ABC(a2);
    if (v6 == v7)
    {
      return 1;
    }
    else
    {
      v8 = v7;
      v9 = v6 + 8;
      do
      {
        v12 = *(_QWORD *)(v9 - 8);
        result = sub_22F3C0544((uint64_t)a1, v12, v12, (uint64_t)a1, &v12, *a1);
        if ((_DWORD)result)
          v10 = v9 == v8;
        else
          v10 = 1;
        v9 += 8;
      }
      while (!v10);
    }
  }
  return result;
}

uint64_t sub_22F3BBC98(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 88);
  if (!v4
    || (v16 = *v4,
        v15 = (uint64_t)(v4 + 1),
        *(_QWORD *)&v17 = v16,
        *((_QWORD *)&v17 + 1) = v15,
        LODWORD(v18) = sub_22F37A024(&v17),
        v19 = v17,
        result = sub_22F3BEEB4((uint64_t)a1, v16, v15, (uint64_t)&v18, a1, (uint64_t)&v17, *a1 + 24),
        (_DWORD)result))
  {
    v5 = *(unsigned int *)(a2 + 104);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(a2 + 96);
      v7 = 8 * v5;
      while (1)
      {
        v18 = *v6;
        if ((sub_22F3BAC7C(a1, v18, v18, a1, &v18, *a1) & 1) == 0)
          return 0;
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_6;
      }
    }
    else
    {
LABEL_6:
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 72))(a2)
        || (v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 64))(a2),
            result = sub_22EFEF038((uint64_t)a1, v8, 0),
            (_DWORD)result))
      {
        v10 = sub_22F255ABC(a2);
        if (v10 == v11)
        {
          return 1;
        }
        else
        {
          v12 = v11;
          v13 = v10 + 8;
          do
          {
            v18 = *(_QWORD *)(v13 - 8);
            result = sub_22F3C0544((uint64_t)a1, v18, v18, (uint64_t)a1, &v18, *a1);
            if ((_DWORD)result)
              v14 = v13 == v12;
            else
              v14 = 1;
            v13 += 8;
          }
          while (!v14);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BBE14(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 64);
  if (v4)
  {
    v12 = *v4;
    v11 = (uint64_t)(v4 + 1);
    *(_QWORD *)&v13 = v12;
    *((_QWORD *)&v13 + 1) = v11;
    LODWORD(v14) = sub_22F37A024(&v13);
    v15 = v13;
    if ((sub_22F3BEEB4((uint64_t)a1, v12, v11, (uint64_t)&v14, a1, (uint64_t)&v13, *a1 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 56));
    if (!(_DWORD)result)
      return result;
  }
  v6 = sub_22F255ABC(a2);
  if (v6 == v7)
    return 1;
  v8 = v7;
  v9 = v6 + 8;
  do
  {
    v14 = *(_QWORD *)(v9 - 8);
    result = sub_22F3C0544((uint64_t)a1, v14, v14, (uint64_t)a1, &v14, *a1);
    if ((_DWORD)result)
      v10 = v9 == v8;
    else
      v10 = 1;
    v9 += 8;
  }
  while (!v10);
  return result;
}

uint64_t sub_22F3BBF24(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0484(a1, *(_QWORD *)(a2 + 56));
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BBFDC(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0484(a1, *(_QWORD *)(a2 + 56));
  if ((_DWORD)result)
  {
    result = sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 64), 0);
    if ((_DWORD)result)
    {
      v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
      result = sub_22EFF4B10(a1, v5);
      if ((_DWORD)result)
      {
        v6 = sub_22F255ABC(a2);
        if (v6 == v7)
        {
          return 1;
        }
        else
        {
          v8 = v7;
          v9 = v6 + 8;
          do
          {
            v11 = *(_QWORD *)(v9 - 8);
            result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
            if ((_DWORD)result)
              v10 = v9 == v8;
            else
              v10 = 1;
            v9 += 8;
          }
          while (!v10);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC0A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0484(a1, a2[7]);
  if ((_DWORD)result)
  {
    v11 = a2[6];
    result = sub_22F3BAC7C(a1, v11, v11, a1, &v11, *a1);
    if ((_DWORD)result)
    {
      if ((_QWORD *)(*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != a2
        || (result = sub_22EFF5064(a1, (unint64_t)a2), (_DWORD)result))
      {
        v5 = sub_22EFCB718((uint64_t)a2) ? sub_22EFCAE04((uint64_t)a2) : 0;
        result = sub_22EFF4B10(a1, v5);
        if ((_DWORD)result)
        {
          v6 = sub_22F255ABC((uint64_t)a2);
          if (v6 == v7)
          {
            return 1;
          }
          else
          {
            v8 = v7;
            v9 = v6 + 8;
            do
            {
              v11 = *(_QWORD *)(v9 - 8);
              result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
              if ((_DWORD)result)
                v10 = v9 == v8;
              else
                v10 = 1;
              v9 += 8;
            }
            while (!v10);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC1B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0484(a1, a2[7]);
  if ((_DWORD)result)
  {
    v11 = a2[6];
    result = sub_22F3BAC7C(a1, v11, v11, a1, &v11, *a1);
    if ((_DWORD)result)
    {
      if ((_QWORD *)(*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != a2
        || (result = sub_22EFF5160(a1, (unint64_t)a2), (_DWORD)result))
      {
        v5 = sub_22EFCB718((uint64_t)a2) ? sub_22EFCAE04((uint64_t)a2) : 0;
        result = sub_22EFF4B10(a1, v5);
        if ((_DWORD)result)
        {
          v6 = sub_22F255ABC((uint64_t)a2);
          if (v6 == v7)
          {
            return 1;
          }
          else
          {
            v8 = v7;
            v9 = v6 + 8;
            do
            {
              v11 = *(_QWORD *)(v9 - 8);
              result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
              if ((_DWORD)result)
                v10 = v9 == v8;
              else
                v10 = 1;
              v9 += 8;
            }
            while (!v10);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC2C0(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 + 48);
  result = sub_22F3BAC7C(a1, v11, v11, a1, &v11, *a1);
  if ((_DWORD)result)
  {
    result = sub_22F3C0484(a1, *(_QWORD *)(a2 + 56));
    if ((_DWORD)result)
    {
      v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
      result = sub_22EFF4B10(a1, v5);
      if ((_DWORD)result)
      {
        v6 = sub_22F255ABC(a2);
        if (v6 == v7)
        {
          return 1;
        }
        else
        {
          v8 = v7;
          v9 = v6 + 8;
          do
          {
            v11 = *(_QWORD *)(v9 - 8);
            result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
            if ((_DWORD)result)
              v10 = v9 == v8;
            else
              v10 = 1;
            v9 += 8;
          }
          while (!v10);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC3A0(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0484(a1, a2[7]);
  if ((_DWORD)result)
  {
    v11 = a2[6];
    result = sub_22F3BAC7C(a1, v11, v11, a1, &v11, *a1);
    if ((_DWORD)result)
    {
      if ((_QWORD *)(*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) != a2
        || (result = sub_22EFF52D0(a1, (unint64_t)a2), (_DWORD)result))
      {
        v5 = sub_22EFCB718((uint64_t)a2) ? sub_22EFCAE04((uint64_t)a2) : 0;
        result = sub_22EFF4B10(a1, v5);
        if ((_DWORD)result)
        {
          v6 = sub_22F255ABC((uint64_t)a2);
          if (v6 == v7)
          {
            return 1;
          }
          else
          {
            v8 = v7;
            v9 = v6 + 8;
            do
            {
              v11 = *(_QWORD *)(v9 - 8);
              result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
              if ((_DWORD)result)
                v10 = v9 == v8;
              else
                v10 = 1;
              v9 += 8;
            }
            while (!v10);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC4AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  BOOL v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v13 = a2[6];
  result = sub_22F3BAC7C(a1, v13, v13, a1, &v13, *a1);
  if ((_DWORD)result)
  {
    v5 = a2[9] < 8uLL || (a2[9] & 6) == 2;
    if (v5 || (v7 = sub_22F259350((uint64_t)a2), result = sub_22EFF36F8(a1, (uint64_t)v7), (_DWORD)result))
    {
      result = sub_22F3C0484(a1, a2[7]);
      if ((_DWORD)result)
      {
        v6 = sub_22EFCB718((uint64_t)a2) ? sub_22EFCAE04((uint64_t)a2) : 0;
        result = sub_22EFF4B10(a1, v6);
        if ((_DWORD)result)
        {
          v8 = sub_22F255ABC((uint64_t)a2);
          if (v8 == v9)
          {
            return 1;
          }
          else
          {
            v10 = v9;
            v11 = v8 + 8;
            do
            {
              v13 = *(_QWORD *)(v11 - 8);
              result = sub_22F3C0544((uint64_t)a1, v13, v13, (uint64_t)a1, &v13, *a1);
              if ((_DWORD)result)
                v12 = v11 == v10;
              else
                v12 = 1;
              v11 += 8;
            }
            while (!v12);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC5BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 120);
  if ((v4 & 4) != 0)
  {
    v15 = 0;
    while (1)
    {
      v16 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v15 >= *(unsigned int *)(v16 + 16))
        break;
      sub_22F3C0484(a1, *(_QWORD *)(*(_QWORD *)(v16 + 24) + 8 * v15++));
      v4 = *(_QWORD *)(a2 + 120);
      if ((v4 & 4) == 0)
        goto LABEL_2;
    }
    v5 = *(_QWORD *)v16;
    v6 = *(_QWORD *)(v16 + 8);
  }
  else
  {
LABEL_2:
    v5 = 0;
    v6 = 0;
  }
  *(_QWORD *)&v19 = v5;
  *((_QWORD *)&v19 + 1) = v6;
  LODWORD(v20) = 5;
  v21 = v19;
  result = sub_22F3BE830((uint64_t)a1, v5, v6, (uint64_t)&v20, a1, (uint64_t *)&v19, *a1 + 24);
  if ((_DWORD)result)
  {
    v8 = *(_QWORD *)(a2 + 128);
    if ((v8 & 4) == 0)
      goto LABEL_6;
    v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF8);
    if ((v8 & 0xFFFFFFFFFFFFFFF8) == 0
      || (v18 = *v9,
          v17 = (uint64_t)(v9 + 1),
          *(_QWORD *)&v19 = v18,
          *((_QWORD *)&v19 + 1) = v17,
          LODWORD(v20) = sub_22F37A024(&v19),
          v21 = v19,
          result = sub_22F3BEEB4((uint64_t)a1, v18, v17, (uint64_t)&v20, a1, (uint64_t)&v19, *a1 + 24),
          (_DWORD)result))
    {
LABEL_6:
      result = sub_22EFF4B10(a1, a2 + 64);
      if ((_DWORD)result)
      {
        v10 = sub_22F255ABC(a2);
        if (v10 == v11)
        {
          return 1;
        }
        else
        {
          v12 = v11;
          v13 = v10 + 8;
          do
          {
            v20 = *(_QWORD *)(v13 - 8);
            result = sub_22F3C0544((uint64_t)a1, v20, v20, (uint64_t)a1, &v20, *a1);
            if ((_DWORD)result)
              v14 = v13 == v12;
            else
              v14 = 1;
            v13 += 8;
          }
          while (!v14);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC750(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_22F3C09F4(a1, a2);
  if ((_DWORD)result)
  {
    result = sub_22EFF4B10(a1, a2 + 64);
    if ((_DWORD)result)
    {
      v5 = sub_22F255ABC(a2);
      if (v5 == v6)
      {
        return 1;
      }
      else
      {
        v7 = v6;
        v8 = v5 + 8;
        do
        {
          v10 = *(_QWORD *)(v8 - 8);
          result = sub_22F3C0544((uint64_t)a1, v10, v10, (uint64_t)a1, &v10, *a1);
          if ((_DWORD)result)
            v9 = v8 == v7;
          else
            v9 = 1;
          v8 += 8;
        }
        while (!v9);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC7E8(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_22F3C0ACC(a1, a2);
  if ((_DWORD)result)
  {
    result = sub_22EFF4B10(a1, a2 + 64);
    if ((_DWORD)result)
    {
      v5 = sub_22F255ABC(a2);
      if (v5 == v6)
      {
        return 1;
      }
      else
      {
        v7 = v6;
        v8 = v5 + 8;
        do
        {
          v10 = *(_QWORD *)(v8 - 8);
          result = sub_22F3C0544((uint64_t)a1, v10, v10, (uint64_t)a1, &v10, *a1);
          if ((_DWORD)result)
            v9 = v8 == v7;
          else
            v9 = 1;
          v8 += 8;
        }
        while (!v9);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC880(uint64_t *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t ***)(a2 + 160);
  if (!v4)
    goto LABEL_21;
  v5 = *v4;
  if (!*v4
    || (v17 = *v5,
        v16 = (uint64_t)(v5 + 1),
        *(_QWORD *)&v18 = v17,
        *((_QWORD *)&v18 + 1) = v16,
        LODWORD(v19) = sub_22F37A024(&v18),
        v20 = v18,
        result = sub_22F3BEEB4((uint64_t)a1, v17, v16, (uint64_t)&v19, a1, (uint64_t)&v18, *a1 + 24),
        (_DWORD)result))
  {
LABEL_21:
    v6 = *(_QWORD *)(a2 + 120);
    if ((v6 & 4) != 0)
    {
      v9 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF8);
      v7 = *v9;
      v8 = v9[1];
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    *(_QWORD *)&v18 = v7;
    *((_QWORD *)&v18 + 1) = v8;
    LODWORD(v19) = 5;
    v20 = v18;
    result = sub_22F3BE830((uint64_t)a1, v7, v8, (uint64_t)&v19, a1, (uint64_t *)&v18, *a1 + 24);
    if ((_DWORD)result)
    {
      result = sub_22EFF4B10(a1, a2 + 64);
      if ((_DWORD)result)
      {
        v11 = sub_22F255ABC(a2);
        if (v11 == v12)
        {
          return 1;
        }
        else
        {
          v13 = v12;
          v14 = v11 + 8;
          do
          {
            v19 = *(_QWORD *)(v14 - 8);
            result = sub_22F3C0544((uint64_t)a1, v19, v19, (uint64_t)a1, &v19, *a1);
            if ((_DWORD)result)
              v15 = v14 == v13;
            else
              v15 = 1;
            v14 += 8;
          }
          while (!v15);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BC9E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_21;
  v11 = *(_QWORD *)(a2 + 80);
  v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (uint64_t *)*v12;
  v14 = *v12;
  v13 = (uint64_t)(v12 + 1);
  *(_QWORD *)&v15 = v14;
  *((_QWORD *)&v15 + 1) = v13;
  LODWORD(v16) = sub_22F37A024(&v15);
  v17 = v15;
  result = sub_22F3BEEB4((uint64_t)a1, v14, v13, (uint64_t)&v16, a1, (uint64_t)&v15, *a1 + 24);
  if ((_DWORD)result)
  {
LABEL_21:
    if (sub_22EFCB718(a2))
      v4 = sub_22EFCAE04(a2);
    else
      v4 = 0;
    result = sub_22EFF4B10(a1, v4);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v16 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v16, v16, (uint64_t)a1, &v16, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BCB1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (uint64_t *)*v5;
  v7 = *v5;
  v6 = (uint64_t)(v5 + 1);
  *(_QWORD *)&v15 = v7;
  *((_QWORD *)&v15 + 1) = v6;
  LODWORD(v16) = sub_22F37A024(&v15);
  v17 = v15;
  result = sub_22F3BEEB4((uint64_t)a1, v7, v6, (uint64_t)&v16, a1, (uint64_t)&v15, *a1 + 24);
  if ((_DWORD)result)
  {
    v9 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v9);
    if ((_DWORD)result)
    {
      v10 = sub_22F255ABC(a2);
      if (v10 == v11)
      {
        return 1;
      }
      else
      {
        v12 = v11;
        v13 = v10 + 8;
        do
        {
          v16 = *(_QWORD *)(v13 - 8);
          result = sub_22F3C0544((uint64_t)a1, v16, v16, (uint64_t)a1, &v16, *a1);
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BCC48(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)&v12 = *(_QWORD *)(a2 + 72);
  *((_QWORD *)&v12 + 1) = v4;
  LODWORD(v13) = 5;
  v14 = v12;
  result = sub_22F3BE830((uint64_t)a1, v12, v4, (uint64_t)&v13, a1, (uint64_t *)&v12, *a1 + 24);
  if ((_DWORD)result)
  {
    v6 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v6);
    if ((_DWORD)result)
    {
      v7 = sub_22F255ABC(a2);
      if (v7 == v8)
      {
        return 1;
      }
      else
      {
        v9 = v8;
        v10 = v7 + 8;
        do
        {
          v13 = *(_QWORD *)(v10 - 8);
          result = sub_22F3C0544((uint64_t)a1, v13, v13, (uint64_t)a1, &v13, *a1);
          if ((_DWORD)result)
            v11 = v10 == v9;
          else
            v11 = 1;
          v10 += 8;
        }
        while (!v11);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BCD58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)&v12 = *(_QWORD *)(a2 + 56);
  *((_QWORD *)&v12 + 1) = v4;
  LODWORD(v13) = 5;
  v14 = v12;
  result = sub_22F3BE830((uint64_t)a1, v12, v4, (uint64_t)&v13, a1, (uint64_t *)&v12, *a1 + 24);
  if ((_DWORD)result)
  {
    v6 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v6);
    if ((_DWORD)result)
    {
      v7 = sub_22F255ABC(a2);
      if (v7 == v8)
      {
        return 1;
      }
      else
      {
        v9 = v8;
        v10 = v7 + 8;
        do
        {
          v13 = *(_QWORD *)(v10 - 8);
          result = sub_22F3C0544((uint64_t)a1, v13, v13, (uint64_t)a1, &v13, *a1);
          if ((_DWORD)result)
            v11 = v10 == v9;
          else
            v11 = 1;
          v10 += 8;
        }
        while (!v11);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BCE68(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 64), 0);
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BCF24(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_22EFF53D4(a1, a2);
  if ((_DWORD)result)
  {
    v5 = sub_22F255ABC(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 8;
      do
      {
        v10 = *(_QWORD *)(v8 - 8);
        result = sub_22F3C0544((uint64_t)a1, v10, v10, (uint64_t)a1, &v10, *a1);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 8;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22F3BCFAC(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0BBC(a1, a2);
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD060(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22F3C0DE8(a1, a2);
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD114(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  result = sub_22F3C0DE8(a1, a2);
  if ((_DWORD)result)
  {
    v5 = *(unsigned int *)(a2 + 100);
    if ((_DWORD)v5)
    {
      v6 = (uint64_t *)(a2 + 104);
      v7 = 8 * v5;
      while (1)
      {
        v14 = *v6;
        if ((sub_22F3BAC7C(a1, v14, v14, a1, &v14, *a1) & 1) == 0)
          return 0;
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_6;
      }
    }
    else
    {
LABEL_6:
      if (sub_22EFCB718(a2))
        v8 = sub_22EFCAE04(a2);
      else
        v8 = 0;
      result = sub_22EFF4B10(a1, v8);
      if ((_DWORD)result)
      {
        v9 = sub_22F255ABC(a2);
        if (v9 == v10)
        {
          return 1;
        }
        else
        {
          v11 = v10;
          v12 = v9 + 8;
          do
          {
            v14 = *(_QWORD *)(v12 - 8);
            result = sub_22F3C0544((uint64_t)a1, v14, v14, (uint64_t)a1, &v14, *a1);
            if ((_DWORD)result)
              v13 = v12 == v11;
            else
              v13 = 1;
            v12 += 8;
          }
          while (!v13);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD210(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_22F3C0DE8(a1, a2);
  if ((_DWORD)result)
  {
    if (!sub_22EFBF4CC(a2)
      || (*(_DWORD *)(a2 + 96) & 0x600) != 0x400
      || (v5 = sub_22F3AC2AC(a2), result = sub_22EFEF038((uint64_t)a1, v5, 0), (_DWORD)result))
    {
      if (!sub_22EFBF4CC(a2) || (*(_DWORD *)(a2 + 96) & 0x600) == 0x200 || (*(_DWORD *)(a2 + 96) & 0x600) == 0x400)
        goto LABEL_29;
      v12 = sub_22EFBC5B4(a2);
      v13 = v12;
      if (v12 && (*(_BYTE *)v12 & 0xFE) == 0xAC)
        v13 = *(_QWORD *)(v12 + 16);
      result = sub_22EFEF038((uint64_t)a1, v13, 0);
      if ((_DWORD)result)
      {
LABEL_29:
        if (sub_22EFCB718(a2))
          v6 = sub_22EFCAE04(a2);
        else
          v6 = 0;
        result = sub_22EFF4B10(a1, v6);
        if ((_DWORD)result)
        {
          v7 = sub_22F255ABC(a2);
          if (v7 == v8)
          {
            return 1;
          }
          else
          {
            v9 = v8;
            v10 = v7 + 8;
            do
            {
              v14 = *(_QWORD *)(v10 - 8);
              result = sub_22F3C0544((uint64_t)a1, v14, v14, (uint64_t)a1, &v14, *a1);
              if ((_DWORD)result)
                v11 = v10 == v9;
              else
                v11 = 1;
              v10 += 8;
            }
            while (!v11);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD35C(uint64_t *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t ***)(a2 + 120);
  if (!v4)
    goto LABEL_24;
  v5 = *v4;
  if (!*v4
    || (v13 = *v5,
        v12 = (uint64_t)(v5 + 1),
        *(_QWORD *)&v19 = v13,
        *((_QWORD *)&v19 + 1) = v12,
        LODWORD(v20) = sub_22F37A024(&v19),
        v21 = v19,
        result = sub_22F3BEEB4((uint64_t)a1, v13, v12, (uint64_t)&v20, a1, (uint64_t)&v19, *a1 + 24),
        (_DWORD)result))
  {
LABEL_24:
    v6 = *(_QWORD *)(a2 + 56);
    if ((v6 & 4) != 0)
    {
      v9 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF8);
      v7 = *v9;
      v8 = v9[1];
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    *(_QWORD *)&v19 = v7;
    *((_QWORD *)&v19 + 1) = v8;
    LODWORD(v20) = 5;
    v21 = v19;
    result = sub_22F3BE830((uint64_t)a1, v7, v8, (uint64_t)&v20, a1, (uint64_t *)&v19, *a1 + 24);
    if ((_DWORD)result)
    {
      v11 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
      result = sub_22EFF4B10(a1, v11);
      if ((_DWORD)result)
      {
        v14 = sub_22F255ABC(a2);
        if (v14 == v15)
        {
          return 1;
        }
        else
        {
          v16 = v15;
          v17 = v14 + 8;
          do
          {
            v20 = *(_QWORD *)(v17 - 8);
            result = sub_22F3C0544((uint64_t)a1, v20, v20, (uint64_t)a1, &v20, *a1);
            if ((_DWORD)result)
              v18 = v17 == v16;
            else
              v18 = 1;
            v17 += 8;
          }
          while (!v18);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD4DC(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 56), 0);
  if ((_DWORD)result)
  {
    v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
    result = sub_22EFF4B10(a1, v5);
    if ((_DWORD)result)
    {
      v6 = sub_22F255ABC(a2);
      if (v6 == v7)
      {
        return 1;
      }
      else
      {
        v8 = v7;
        v9 = v6 + 8;
        do
        {
          v11 = *(_QWORD *)(v9 - 8);
          result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
          if ((_DWORD)result)
            v10 = v9 == v8;
          else
            v10 = 1;
          v9 += 8;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD598(_QWORD *a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned int v7;
  uint64_t v8;

  v4 = *(_DWORD **)(a2 + 56);
  v7 = *v4;
  v6 = (uint64_t *)(v4 + 4);
  v5 = v7;
  if (!v7)
    return sub_22EFF335C(a1, *(_QWORD *)(a2 + 48));
  v8 = 8 * v5;
  while ((sub_22EFF38CC(a1, *v6) & 1) != 0)
  {
    ++v6;
    v8 -= 8;
    if (!v8)
      return sub_22EFF335C(a1, *(_QWORD *)(a2 + 48));
  }
  return 0;
}

uint64_t sub_22F3BD608(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (sub_22EFEF038((uint64_t)a1, a2[11], 0)
    && ((v4 = a2[12]) == 0 || sub_22EFEF038((uint64_t)a1, v4, 0)))
  {
    return sub_22EFF335C(a1, a2[6]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22F3BD668(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v4 = (uint64_t *)sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v5 = sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v6 = *(_DWORD **)(a2 + 40);
  v7 = (uint64_t *)(v5 + 8 * v6[1]);
  if (v7 != v4)
  {
    while ((sub_22EFEF038((uint64_t)a1, *v4, 0) & 1) != 0)
    {
      if (++v4 == v7)
      {
        v6 = *(_DWORD **)(a2 + 40);
        goto LABEL_5;
      }
    }
    return 0;
  }
LABEL_5:
  v10 = *v6;
  v9 = (uint64_t *)(v6 + 4);
  v8 = v10;
  if (v10)
  {
    v11 = 8 * v8;
    while ((sub_22EFF38CC(a1, *v9) & 1) != 0)
    {
      ++v9;
      v11 -= 8;
      if (!v11)
        goto LABEL_9;
    }
    return 0;
  }
LABEL_9:
  if (sub_22EFCB718(a2))
    v12 = sub_22EFCAE04(a2);
  else
    v12 = 0;
  result = sub_22EFF4B10(a1, v12);
  if ((_DWORD)result)
  {
    v14 = sub_22F255ABC(a2);
    if (v14 == v15)
    {
      return 1;
    }
    else
    {
      v16 = v15;
      v17 = v14 + 8;
      do
      {
        v19 = *(_QWORD *)(v17 - 8);
        result = sub_22F3C0544((uint64_t)a1, v19, v19, (uint64_t)a1, &v19, *a1);
        if ((_DWORD)result)
          v18 = v17 == v16;
        else
          v18 = 1;
        v17 += 8;
      }
      while (!v18);
    }
  }
  return result;
}

uint64_t sub_22F3BD798(uint64_t *a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v4 = *(_DWORD **)(a2 + 40);
  v7 = *v4;
  v6 = (uint64_t *)(v4 + 4);
  v5 = v7;
  if (v7)
  {
    v8 = 8 * v5;
    while ((sub_22EFF38CC(a1, *v6) & 1) != 0)
    {
      ++v6;
      v8 -= 8;
      if (!v8)
        goto LABEL_5;
    }
    return 0;
  }
  else
  {
LABEL_5:
    if (sub_22EFCB718(a2))
      v9 = sub_22EFCAE04(a2);
    else
      v9 = 0;
    result = sub_22EFF4B10(a1, v9);
    if ((_DWORD)result)
    {
      v11 = sub_22F255ABC(a2);
      if (v11 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v12;
        v14 = v11 + 8;
        do
        {
          v16 = *(_QWORD *)(v14 - 8);
          result = sub_22F3C0544((uint64_t)a1, v16, v16, (uint64_t)a1, &v16, *a1);
          if ((_DWORD)result)
            v15 = v14 == v13;
          else
            v15 = 1;
          v14 += 8;
        }
        while (!v15);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BD878(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = (uint64_t *)sub_22F3F327C(*(unsigned int **)(a2 + 40));
  v5 = sub_22F3F327C(*(unsigned int **)(a2 + 40)) + 8 * *(unsigned int *)(*(_QWORD *)(a2 + 40) + 4);
  if ((uint64_t *)v5 == v4)
  {
LABEL_4:
    if (sub_22EFCB718(a2))
      v6 = sub_22EFCAE04(a2);
    else
      v6 = 0;
    result = sub_22EFF4B10(a1, v6);
    if ((_DWORD)result)
    {
      v8 = sub_22F255ABC(a2);
      if (v8 == v9)
      {
        return 1;
      }
      else
      {
        v10 = v9;
        v11 = v8 + 8;
        do
        {
          v13 = *(_QWORD *)(v11 - 8);
          result = sub_22F3C0544((uint64_t)a1, v13, v13, (uint64_t)a1, &v13, *a1);
          if ((_DWORD)result)
            v12 = v11 == v10;
          else
            v12 = 1;
          v11 += 8;
        }
        while (!v12);
      }
    }
  }
  else
  {
    while ((sub_22EFEF038((uint64_t)a1, *v4, 0) & 1) != 0)
    {
      if (++v4 == (uint64_t *)v5)
        goto LABEL_4;
    }
    return 0;
  }
  return result;
}

uint64_t sub_22F3BD974(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v4 = sub_22EFCAE04(a2);
  result = sub_22EFF4B10(a1, v4);
  if ((_DWORD)result)
  {
    v6 = sub_22F255ABC(a2);
    if (v6 == v7)
    {
      return 1;
    }
    else
    {
      v8 = v7;
      v9 = v6 + 8;
      do
      {
        v11 = *(_QWORD *)(v9 - 8);
        result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
        if ((_DWORD)result)
          v10 = v9 == v8;
        else
          v10 = 1;
        v9 += 8;
      }
      while (!v10);
    }
  }
  return result;
}

uint64_t sub_22F3BDA0C(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, 0);
  if ((_DWORD)result)
  {
    result = sub_22EFEF038((uint64_t)a1, *(_QWORD *)(a2 + 48), 0);
    if ((_DWORD)result)
    {
      v5 = sub_22EFCB718(a2) ? sub_22EFCAE04(a2) : 0;
      result = sub_22EFF4B10(a1, v5);
      if ((_DWORD)result)
      {
        v6 = sub_22F255ABC(a2);
        if (v6 == v7)
        {
          return 1;
        }
        else
        {
          v8 = v7;
          v9 = v6 + 8;
          do
          {
            v11 = *(_QWORD *)(v9 - 8);
            result = sub_22F3C0544((uint64_t)a1, v11, v11, (uint64_t)a1, &v11, *a1);
            if ((_DWORD)result)
              v10 = v9 == v8;
            else
              v10 = 1;
            v9 += 8;
          }
          while (!v10);
        }
      }
    }
  }
  return result;
}

__n128 sub_22F3BDAE0(uint64_t a1, unsigned __int8 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_22F3BAD64(a1, (uint64_t)a2, *(_QWORD *)a1);
  v8 = sub_22F379890(a2);
  v9 = a2;
  v4 = sub_22EC51434(a1 + 8, (unint64_t)&v8);
  v5 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v6 = *(_QWORD *)(v4 + 32);
  result = *(__n128 *)(v4 + 16);
  *(_OWORD *)v5 = *(_OWORD *)v4;
  *(__n128 *)(v5 + 16) = result;
  *(_QWORD *)(v5 + 32) = v6;
  ++*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_22F3BDB90(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v3;

  switch(*(_BYTE *)a2)
  {
    case 1:
      result = sub_22EFEF2CC((uint64_t)a1, a2);
      break;
    case 2:
    case 3:
    case 5:
    case 6:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x13:
    case 0x14:
    case 0x56:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x5A:
    case 0x5B:
    case 0x5C:
    case 0x5D:
    case 0x5E:
    case 0x5F:
    case 0x60:
    case 0x61:
    case 0x62:
    case 0x63:
    case 0x64:
    case 0x65:
    case 0x66:
    case 0x67:
    case 0x68:
    case 0x69:
    case 0x6B:
    case 0x6D:
    case 0x6E:
    case 0x6F:
    case 0x70:
    case 0x71:
    case 0x73:
    case 0x74:
    case 0x75:
    case 0x76:
    case 0x79:
    case 0x7A:
    case 0x7C:
    case 0x7D:
    case 0x7F:
    case 0x80:
    case 0x82:
    case 0x84:
    case 0x85:
    case 0x86:
    case 0x8A:
    case 0x8B:
    case 0x8C:
    case 0x8D:
    case 0x8E:
    case 0x99:
    case 0x9A:
    case 0x9B:
    case 0x9E:
    case 0x9F:
    case 0xA0:
    case 0xA2:
    case 0xA4:
    case 0xA5:
    case 0xA7:
    case 0xA8:
    case 0xA9:
    case 0xAA:
    case 0xAB:
    case 0xAC:
    case 0xAD:
    case 0xAE:
    case 0xAF:
    case 0xB1:
    case 0xB2:
    case 0xB3:
    case 0xB5:
    case 0xB8:
    case 0xBB:
    case 0xBD:
    case 0xBE:
    case 0xBF:
    case 0xC0:
    case 0xC1:
    case 0xC2:
    case 0xC3:
    case 0xC5:
    case 0xC6:
    case 0xC7:
    case 0xC9:
    case 0xCA:
    case 0xCB:
    case 0xCC:
    case 0xCE:
    case 0xCF:
    case 0xD0:
    case 0xD2:
    case 0xD5:
    case 0xD6:
    case 0xD7:
    case 0xD8:
    case 0xDA:
    case 0xDD:
    case 0xDE:
    case 0xDF:
    case 0xE0:
    case 0xE1:
    case 0xE2:
    case 0xE3:
    case 0xE4:
    case 0xE5:
    case 0xE7:
    case 0xE9:
    case 0xEB:
    case 0xEC:
      result = sub_22EFEF464((uint64_t)a1, a2);
      break;
    case 4:
      result = sub_22EFEF54C(a1, a2);
      break;
    case 7:
      result = sub_22EFEF66C(a1, a2);
      break;
    case 0xC:
      result = sub_22EFEF790(a1, a2);
      break;
    case 0x12:
      result = sub_22EFEF82C(a1, a2);
      break;
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x1F:
    case 0x20:
    case 0x21:
    case 0x22:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2A:
    case 0x2B:
    case 0x2C:
    case 0x2D:
    case 0x2E:
    case 0x2F:
    case 0x30:
    case 0x31:
    case 0x32:
    case 0x33:
    case 0x34:
    case 0x35:
    case 0x36:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3B:
    case 0x3C:
    case 0x3D:
    case 0x3E:
    case 0x3F:
    case 0x40:
    case 0x41:
    case 0x42:
    case 0x43:
    case 0x44:
    case 0x45:
    case 0x46:
    case 0x47:
    case 0x48:
    case 0x49:
    case 0x4A:
    case 0x4B:
    case 0x4C:
    case 0x4D:
    case 0x4E:
    case 0x4F:
    case 0x50:
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
      result = sub_22EFEF9B0(a1, a2);
      break;
    case 0x19:
      result = sub_22EFEFACC(a1, a2);
      break;
    case 0x6A:
      result = sub_22EFEFC04((uint64_t)a1, a2);
      break;
    case 0x6C:
      result = sub_22EFEFD0C(a1, a2);
      break;
    case 0x72:
      v3 = *(_QWORD *)(a2 + 16);
      result = sub_22F3BAC7C(a1, v3, v3, a1, &v3, *a1);
      break;
    case 0x77:
      result = sub_22EFEFE80(a1, a2);
      break;
    case 0x78:
      result = sub_22EFEFFF4((uint64_t)a1, a2);
      break;
    case 0x7B:
      result = sub_22EFF012C(a1, (unsigned int *)a2);
      break;
    case 0x7E:
    case 0xDC:
      result = sub_22EFF02DC(a1, a2);
      break;
    case 0x81:
      result = sub_22EFF0450(a1, (_QWORD *)a2);
      break;
    case 0x83:
    case 0x88:
      result = sub_22EFF065C(a1, a2);
      break;
    case 0x87:
    case 0x89:
      result = sub_22EFF07D0(a1, a2);
      break;
    case 0x8F:
    case 0x90:
    case 0x91:
    case 0x92:
    case 0x93:
    case 0x94:
    case 0x95:
    case 0x96:
    case 0x97:
    case 0x98:
    case 0xD1:
      result = sub_22EFF093C(a1, a2);
      break;
    case 0x9C:
    case 0xEA:
      result = sub_22EFF0AB0(a1, a2);
      break;
    case 0x9D:
      result = sub_22EFF0C28(a1, a2);
      break;
    case 0xA1:
      result = sub_22EFF0D20(a1, (unsigned int *)a2);
      break;
    case 0xA3:
      result = sub_22EFF0F00(a1, (unsigned int *)a2);
      break;
    case 0xA6:
      result = sub_22EFF10B0((uint64_t)a1, a2);
      break;
    case 0xB0:
      result = sub_22EFF11A8(a1, a2);
      break;
    case 0xB4:
      result = sub_22F3BE6F8((uint64_t)a1, a2);
      break;
    case 0xB6:
      result = sub_22F3BE784(a1, a2);
      break;
    case 0xB7:
      result = sub_22EFF12C8(a1, a2);
      break;
    case 0xB9:
      result = sub_22EFF142C((uint64_t)a1, a2);
      break;
    case 0xBA:
      result = sub_22EFF1568(a1, a2);
      break;
    case 0xBC:
      result = sub_22EFF1670(a1, (unsigned int *)a2);
      break;
    case 0xC4:
      result = sub_22EFF184C(a1, a2);
      break;
    case 0xC8:
      result = sub_22EFF19B4(a1, a2);
      break;
    case 0xCD:
      result = sub_22EFF1B24(a1, a2);
      break;
    case 0xD3:
    case 0xD4:
      result = sub_22EFF1DB8(a1, (unsigned int *)a2);
      break;
    case 0xD9:
      result = sub_22EFF1F68((uint64_t)a1, (int *)a2);
      break;
    case 0xDB:
      result = sub_22EFF2000(a1, a2);
      break;
    case 0xE6:
      result = sub_22EFF22BC(a1, a2);
      break;
    case 0xE8:
      result = sub_22EFF2444(a1, a2);
      break;
    default:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_22F3BE6F8(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = a2;
  v3 = a1;
  v4 = *(_QWORD *)(a2 + 48);
  if ((v4 & 0xFFFFFFFFFFFFFFFCLL) == 4)
    return sub_22EFF4A18(a1, a2);
  if ((v4 & 4) != 0)
    a2 = v4 & 0xFFFFFFFFFFFFFFF8;
  result = sub_22EFF4A18(a1, a2);
  if ((_DWORD)result)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if ((v6 & 4) != 0)
      a2 = v2;
    else
      a2 = v6 & 0xFFFFFFFFFFFFFFF8;
    a1 = v3;
    return sub_22EFF4A18(a1, a2);
  }
  return result;
}

uint64_t sub_22F3BE784(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (*(_WORD *)(a2 + 4))
  {
    v4 = 0;
    v5 = 16 * *(unsigned __int16 *)(a2 + 4);
    v6 = 32;
    while (1)
    {
      v7 = sub_22F3C64D0(a2);
      if ((sub_22F3C03F8(a1, a2, (_QWORD *)(v7 + v4), *(_QWORD *)(a2 + v6)) & 1) == 0)
        return 0;
      v6 += 8;
      v4 += 16;
      if (v5 == v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v9 = sub_22F3C61E8(a2);
    return sub_22F3BAC7C(a1, v9, v9, a1, &v9, *a1);
  }
}

uint64_t sub_22F3BE830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t result;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (!a2)
    return 1;
  v13 = *(_OWORD *)(a4 + 16);
  v21[0] = *(_OWORD *)a4;
  v21[1] = v13;
  v22 = *(_QWORD *)(a4 + 32);
  sub_22F3BE924(a1, (uint64_t)v21, a7);
  v18 = 5;
  v19 = a2;
  v20 = a3;
  v14 = sub_22EC51434(a1 + 8, (unint64_t)&v18);
  v15 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v16 = *(_QWORD *)(v14 + 32);
  v17 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v14;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = v16;
  ++*(_DWORD *)(a1 + 16);
  result = sub_22F3BED90(a5, *a6, a6[1]);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_22F3BE924(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32[2];
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (!*(_DWORD *)(result + 16))
    return result;
  v3 = result;
  result = (uint64_t)sub_22F3BEBE0(a3, a2);
  v4 = result;
  v5 = *(_QWORD *)(result + 40);
  if (v5 <= 7)
  {
    v6 = *(_QWORD *)(v3 + 8) + 40 * *(unsigned int *)(v3 + 16);
    v7 = *(unsigned int *)(v6 - 40);
    if ((_DWORD)v7)
    {
      if (v7 == 76)
      {
LABEL_6:
        v8 = *(_QWORD *)(v6 - 32);
        if (v8)
        {
          v9 = v8 & 0xFFFFFFFFFFFFFFF9;
LABEL_37:
          *(_QWORD *)(v4 + 40) = v9;
          return result;
        }
      }
      else
      {
        v27 = *(unsigned int *)(v6 - 40);
        while (1)
        {
          v27 = dword_24FABB2A0[4 * v27];
          if (!(_DWORD)v27)
            break;
          if (v27 == 76)
            goto LABEL_6;
        }
      }
      if (v7 == 172)
      {
LABEL_31:
        v28 = *(_QWORD *)(v6 - 32);
        if (v28)
        {
          v9 = v28 & 0xFFFFFFFFFFFFFFF9 | 2;
          goto LABEL_37;
        }
      }
      else
      {
        while (1)
        {
          v7 = dword_24FABB2A0[4 * v7];
          if (!(_DWORD)v7)
            break;
          if (v7 == 172)
            goto LABEL_31;
        }
      }
    }
    result = operator new();
    v29 = *(_QWORD *)(v3 + 8) + 40 * *(unsigned int *)(v3 + 16);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(_OWORD *)(v29 - 24);
    *(_OWORD *)result = *(_OWORD *)(v29 - 40);
    *(_OWORD *)(result + 16) = v31;
    *(_QWORD *)(result + 32) = v30;
    v9 = result & 0xFFFFFFFFFFFFFFF9 | 4;
    goto LABEL_37;
  }
  if ((~(_BYTE)v5 & 6) != 0)
  {
    v10 = operator new();
    sub_22EFED328((uint64_t)v32, *(_QWORD *)(v4 + 40));
    *(_QWORD *)v10 = v10 + 16;
    *(_QWORD *)(v10 + 8) = 0x200000000;
    sub_22EFEDB84(v10, v32);
    result = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF8;
    if ((*(_QWORD *)(v4 + 40) & 6) == 4 && result != 0)
      result = MEMORY[0x2348A0E9C]();
    v5 = v10 | 6;
    *(_QWORD *)(v4 + 40) = v10 | 6;
  }
  v12 = v5 & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v3 + 8);
  v14 = *(_DWORD *)(v3 + 16);
  v15 = v13 + 40 * v14;
  v17 = *(_DWORD *)(v15 - 40);
  v16 = (unsigned int *)(v15 - 40);
  if (v17 < 73 || !*(_QWORD *)(v13 + 40 * v14 - 32))
  {
LABEL_25:
    result = sub_22EC51434(v12, v13 + 40 * v14 - 40);
    v24 = *(_QWORD *)v12 + 40 * *(unsigned int *)(v12 + 8);
    v25 = *(_QWORD *)(result + 32);
    v26 = *(_OWORD *)(result + 16);
    *(_OWORD *)v24 = *(_OWORD *)result;
    *(_OWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 32) = v25;
    ++*(_DWORD *)(v12 + 8);
    return result;
  }
  v18 = *(unsigned int **)v12;
  v19 = *(unsigned int *)(v12 + 8);
  if ((_DWORD)v19)
  {
    v20 = &v18[10 * v19];
    v21 = 40 * v19;
    while (1)
    {
      result = sub_22F359EAC(v18, v16);
      if ((result & 1) != 0)
        break;
      v18 += 10;
      v21 -= 40;
      if (!v21)
      {
        v18 = v20;
        break;
      }
    }
    v22 = v18;
    v18 = *(unsigned int **)v12;
    v23 = *(_DWORD *)(v12 + 8);
  }
  else
  {
    v23 = 0;
    v22 = *(unsigned int **)v12;
  }
  if (v22 == &v18[10 * v23])
  {
    v13 = *(_QWORD *)(v3 + 8);
    v14 = *(_DWORD *)(v3 + 16);
    goto LABEL_25;
  }
  return result;
}

unsigned int *sub_22F3BEBE0(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int *v5;
  uint64_t v6;
  __int128 v7;
  unsigned int *v9;

  v9 = 0;
  v4 = sub_22EFED7D8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), (unsigned int *)a2, &v9);
  v5 = v9;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22EFF26F0(a1, (unsigned int *)a2, v9);
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)v5 = *(_OWORD *)a2;
    *((_OWORD *)v5 + 1) = v7;
    *((_QWORD *)v5 + 4) = v6;
    *((_QWORD *)v5 + 5) = 0;
  }
  return v5;
}

uint64_t sub_22F3BEC4C(uint64_t result, unsigned int *a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  unsigned int *v9;
  __int128 v10;
  __int128 v11;
  unsigned int *v12;
  unsigned int v13[10];
  unsigned int v14[10];
  uint64_t v15;

  v5 = result;
  v15 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_DWORD **)result;
    v8 = 48 * v6;
    do
    {
      *v7 = 0;
      v7 += 12;
      v8 -= 48;
    }
    while (v8);
  }
  v14[0] = 0;
  v13[0] = 1072;
  while (a2 != (unsigned int *)a3)
  {
    if (*a2 | v14[0] && (*a2 != 1072 || v14[0] != 1072))
    {
      result = sub_22F359EAC(a2, v14);
      if ((result & 1) == 0 && *a2 | v13[0] && (*a2 != 1072 || v13[0] != 1072))
      {
        result = sub_22F359EAC(a2, v13);
        if ((result & 1) == 0)
        {
          v12 = 0;
          result = sub_22EFED7D8(*(_QWORD *)v5, *(_DWORD *)(v5 + 16), a2, &v12);
          v9 = v12;
          v10 = *(_OWORD *)a2;
          v11 = *((_OWORD *)a2 + 1);
          *((_QWORD *)v12 + 4) = *((_QWORD *)a2 + 4);
          *(_OWORD *)v9 = v10;
          *((_OWORD *)v9 + 1) = v11;
          *((_QWORD *)v9 + 5) = *((_QWORD *)a2 + 5);
          ++*(_DWORD *)(v5 + 8);
        }
      }
    }
    a2 += 12;
  }
  return result;
}

uint64_t sub_22F3BED90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  __int128 v13;
  int v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v12[0] = a2;
  v12[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8);
  if ((v5 & 0xFFFFFFFFFFFFFFF8) == 0
    || (*(_QWORD *)&v13 = v5 & 0xFFFFFFFFFFFFFFF8,
        *((_QWORD *)&v13 + 1) = a3,
        v14 = 5,
        v15 = v13,
        result = sub_22F3BE830(a1),
        (_DWORD)result))
  {
    v6 = sub_22F0AAB60(a2);
    if (v6 > 6)
      return 1;
    v7 = v6;
    result = 1;
    if (((1 << v7) & 0x67) == 0)
    {
      v9 = sub_22F0AB4E0((uint64_t)v12);
      v11 = v10;
      *(_QWORD *)&v13 = v9;
      *((_QWORD *)&v13 + 1) = v10;
      v14 = sub_22F37A024(&v13);
      v15 = v13;
      result = sub_22F3BEEB4(a1, v9, v11, &v14, a1, &v13, *a1 + 24);
      if ((_DWORD)result)
        return 1;
    }
  }
  return result;
}

uint64_t sub_22F3BEEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  int v17;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a2;
  *((_QWORD *)&v16 + 1) = a3;
  if (!a2)
    return 1;
  v11 = *(_OWORD *)(a4 + 16);
  v19[0] = *(_OWORD *)a4;
  v19[1] = v11;
  v20 = *(_QWORD *)(a4 + 32);
  sub_22F3BE924(a1, (uint64_t)v19, a7);
  v17 = sub_22F37A024(&v16);
  v18 = v16;
  v12 = sub_22EC51434(a1 + 8, (unint64_t)&v17);
  v13 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v14 = *(_QWORD *)(v12 + 32);
  v15 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v12;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = v14;
  ++*(_DWORD *)(a1 + 16);
  result = sub_22EFF28B4(a5, *(_QWORD *)a6, *(_QWORD *)(a6 + 8));
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_22F3BEFA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 - 1) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF060(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t result;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 + 15) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  result = sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
  if ((_DWORD)result)
    return sub_22EFEF038(a1, *(_QWORD *)(a3 + 8));
  return result;
}

uint64_t sub_22F3BF12C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 + 11) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF1E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 + 7) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF29C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF350(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 32);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 + 3) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF408(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _BYTE v14[24];
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _BYTE v18[24];
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v15 = a2;
  v16 = a3;
  result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 24));
  if ((_DWORD)result)
  {
    if (!*(_QWORD *)(a2 + 40))
      return 1;
    v7 = *(_QWORD *)(a3 + 16);
    *(_QWORD *)&v17 = *(_QWORD *)(a3 + 8);
    *((_QWORD *)&v17 + 1) = v7;
    *(_DWORD *)v18 = 5;
    *(_OWORD *)&v18[8] = v17;
    result = sub_22F3BE830((uint64_t)a1, v17, v7, (uint64_t)v18, a1, (uint64_t *)&v17, *a1 + 24);
    if ((_DWORD)result)
    {
      sub_22F40B320(&v15, (uint64_t)v14);
      result = sub_22EFF25B0(a1, v14);
      if ((_DWORD)result)
      {
        v8 = *(_DWORD *)(v15 + 20);
        if (!v8)
          return 1;
        v9 = 0;
        v10 = 24 * v8 - 24;
        v11 = 56;
        do
        {
          v12 = *(_QWORD *)(v16 + v11);
          *(_OWORD *)v18 = *(_OWORD *)(v15 + v9 + 48);
          *(_QWORD *)&v18[16] = *(_QWORD *)(v15 + v9 + 64);
          v19 = v12;
          result = sub_22EFF36F8(a1, v18);
          if (!(_DWORD)result)
            break;
          v11 += 8;
          v13 = v10 == v9;
          v9 += 24;
        }
        while (!v13);
      }
    }
  }
  return result;
}

uint64_t sub_22F3BF53C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5;
  int v6;
  __int128 v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)&v5 = *(_QWORD *)(a2 + 32);
  *((_QWORD *)&v5 + 1) = v3;
  v6 = 5;
  v7 = v5;
  return sub_22F3BE830((uint64_t)a1, v5, v3, (uint64_t)&v6, a1, (uint64_t *)&v5, *a1 + 24);
}

uint64_t sub_22F3BF5B4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  int v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a2 + 32);
  if (!v6
    || (v11 = *(_QWORD *)(a3 + 8),
        *(_QWORD *)&v12 = v6,
        *((_QWORD *)&v12 + 1) = v11,
        v13 = 5,
        v14 = v12,
        result = sub_22F3BE830((uint64_t)a1, v6, v11, (uint64_t)&v13, a1, (uint64_t *)&v12, *a1 + 24),
        (_DWORD)result))
  {
    v7 = *(_QWORD *)(a2 + 40);
    v8 = sub_22F115954(v7);
    v9 = (a3 + (unint64_t)v8 + 15) / v8 * v8;
    *(_QWORD *)&v12 = v7;
    *((_QWORD *)&v12 + 1) = v9;
    v13 = sub_22F37A024(&v12);
    v14 = v12;
    return sub_22F3BEEB4(a1, v7, v9, &v13, a1, &v12, *a1 + 24);
  }
  return result;
}

uint64_t sub_22F3BF6B4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  __int128 v8;
  int v9;
  __int128 v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v7[0] = a2;
  v7[1] = a3;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = sub_22E47EE80(v7);
  *(_QWORD *)&v8 = v4;
  *((_QWORD *)&v8 + 1) = v5;
  v9 = sub_22F37A024(&v8);
  v10 = v8;
  return sub_22F3BEEB4(a1, v4, v5, &v9, a1, &v8, *a1 + 24);
}

uint64_t sub_22F3BF75C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  _DWORD *v10;
  uint64_t v11;
  unint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v20 = a2;
  v21 = a3;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = sub_22E47EE80(&v20);
  *(_QWORD *)&v22 = v4;
  *((_QWORD *)&v22 + 1) = v5;
  LODWORD(v23) = sub_22F37A024(&v22);
  v24 = v22;
  result = sub_22F3BEEB4(a1, v4, v5, &v23, a1, &v22, *a1 + 24);
  if ((_DWORD)result)
  {
    v7 = v20;
    v8 = *(_QWORD *)(v20 + 16);
    if (*(_BYTE *)(v20 + 16) != 25 && (v8 & 0x3FFFC000000000) != 0)
    {
      v16 = 0;
      v17 = (unsigned __int16)(v8 >> 38);
      do
      {
        v18 = v21 + 8 * v16;
        v19 = *(_QWORD *)(v18 + 16);
        if (v19)
        {
          v23 = *(_QWORD *)(v18 + 16);
          if ((sub_22F3BAC7C(a1, v19, v19, a1, &v23, *a1) & 1) == 0)
            return 0;
        }
        else if (v16 < (unsigned __int16)(*(_QWORD *)(v7 + 16) >> 38))
        {
          result = sub_22EFF335C(a1, *(_QWORD *)(v7 + 40 + 8 * v16));
          if (!(_DWORD)result)
            return result;
        }
        ++v16;
      }
      while (v17 != v16);
      v8 = *(_QWORD *)(v7 + 16);
    }
    if ((v8 & 0x3C0000000000000) == 0x80000000000000
      && (v10 = (_DWORD *)((v7 + 8 * (unsigned __int16)(v8 >> 38) + 4 * ((v8 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8),
          v13 = *v10,
          v12 = (unint64_t *)(v10 + 2),
          (v11 = v13) != 0))
    {
      v14 = 8 * v11;
      while ((sub_22EFF335C(a1, *v12) & 1) != 0)
      {
        ++v12;
        v14 -= 8;
        if (!v14)
          goto LABEL_12;
      }
      return 0;
    }
    else
    {
LABEL_12:
      v15 = sub_22F257D3C(v7);
      if (!v15)
        return 1;
      result = sub_22EFEF038(a1, v15);
      if ((_DWORD)result)
        return 1;
    }
  }
  return result;
}

uint64_t sub_22F3BF91C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 24);
  v6 = sub_22F115954(v5);
  v7 = (a3 + (unint64_t)v6 + 3) / v6 * v6;
  *(_QWORD *)&v9 = v5;
  *((_QWORD *)&v9 + 1) = v7;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  return sub_22F3BEEB4(a1, v5, v7, &v10, a1, &v9, *a1 + 24);
}

uint64_t sub_22F3BF9D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  if (sub_22EFEF038(a1, *(_QWORD *)(a3 + 16)) && sub_22EFEF038(a1, *(_QWORD *)(a3 + 24)))
    return sub_22EFF335C(a1, *(_QWORD *)(a2 + 32));
  else
    return 0;
}

uint64_t sub_22F3BFA40(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  __int128 v13;
  int v14;
  __int128 v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v6 = *(uint64_t **)(a3 + 8);
  if (v6)
  {
    v9 = *v6;
    v8 = v6 + 1;
    *(_QWORD *)&v13 = v9;
    *((_QWORD *)&v13 + 1) = v8;
    v14 = sub_22F37A024(&v13);
    v15 = v13;
    if ((sub_22F3BEEB4(a1, v9, v8, &v14, a1, &v13, *a1 + 24) & 1) == 0)
      return 0;
    goto LABEL_6;
  }
  result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF0);
  if ((_DWORD)result)
  {
LABEL_6:
    v10 = *(_QWORD *)(a2 + 32);
    v11 = sub_22F115954(v10);
    v12 = (a3 + (unint64_t)v11 + 15) / v11 * v11;
    *(_QWORD *)&v13 = v10;
    *((_QWORD *)&v13 + 1) = v12;
    v14 = sub_22F37A024(&v13);
    v15 = v13;
    return sub_22F3BEEB4(a1, v10, v12, &v14, a1, &v13, *a1 + 24);
  }
  return result;
}

uint64_t sub_22F3BFB70(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  __int128 v20;
  int v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) == a2)
    goto LABEL_2;
  v17 = ((HIWORD(*(_DWORD *)(a2 + 16)) & 0x3F8u) + 4 * (*(_DWORD *)(a2 + 16) >> 26) + 31) & 0x7F8;
  v18 = sub_22F115954(*(_QWORD *)(a2 + 24));
  v19 = (a3 + v18 + v17 - 1) / v18 * v18;
  *(_QWORD *)&v20 = v6;
  *((_QWORD *)&v20 + 1) = v19;
  v21 = sub_22F37A024(&v20);
  v22 = v20;
  result = sub_22F3BEEB4(a1, v6, v19, &v21, a1, &v20, *a1 + 24);
  if ((_DWORD)result)
  {
LABEL_2:
    v7 = *(_DWORD *)(a2 + 16);
    v8 = (v7 >> 19) & 0x7F;
    if ((_DWORD)v8)
    {
      v9 = (_QWORD **)(a3 + 24);
      while (1)
      {
        v10 = (uint64_t)(*v9 + 1);
        *(_QWORD *)&v20 = **v9;
        v11 = v20;
        *((_QWORD *)&v20 + 1) = v10;
        v21 = sub_22F37A024(&v20);
        v22 = v20;
        if ((sub_22F3BEEB4(a1, v11, v10, &v21, a1, &v20, *a1 + 24) & 1) == 0)
          return 0;
        ++v9;
        if (!--v8)
        {
          v7 = *(_DWORD *)(a2 + 16);
          goto LABEL_7;
        }
      }
    }
    else
    {
LABEL_7:
      v12 = v7 >> 26;
      if ((_DWORD)v12)
      {
        v13 = a2 + 48;
        v14 = a3 + 24;
        do
        {
          v15 = (*(_QWORD *)(a2 + 16) >> 19) & 0x7FLL;
          a3 = a3 & 0xFFFFFFFF00000000 | *(unsigned int *)(v14 + 8 * v15);
          sub_22F3C02D0((uint64_t)a1, *(_QWORD *)(v13 + 8 * v15), a3);
          v14 += 4;
          v13 += 8;
          --v12;
        }
        while (v12);
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3BFD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  __int128 *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_22F3C01BC(a1, *(_QWORD *)(a2 + 32));
  if ((_DWORD)result)
  {
    v7 = *(unsigned int *)(a2 + 20);
    if ((_DWORD)v7)
    {
      v8 = (__int128 *)(a2 + 40);
      v9 = (uint64_t *)(a3 + 16);
      v10 = v7 - 1;
      do
      {
        v11 = *v9++;
        v14 = *v8;
        v15 = *((_QWORD *)v8 + 2);
        v16 = v11;
        result = sub_22EFF36F8(a1, &v14);
        v13 = v10-- != 0;
        if (!(_DWORD)result)
          break;
        v8 = (__int128 *)((char *)v8 + 24);
      }
      while (v13);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3BFDC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  __int128 v7;
  int v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a3 + 16);
  v5 = *v4++;
  *(_QWORD *)&v7 = v5;
  *((_QWORD *)&v7 + 1) = v4;
  v8 = sub_22F37A024(&v7);
  v9 = v7;
  return sub_22F3BEEB4(a1, v5, v4, &v8, a1, &v7, *a1 + 24);
}

uint64_t sub_22F3BFE64(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 32));
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (!v5)
      return 1;
    result = sub_22EFEF038(a1, v5);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22F3BFEAC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 24));
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(a2 + 16);
    v6 = (unsigned __int16)(v5 >> 38);
    if ((unsigned __int16)(v5 >> 38))
    {
      v7 = 8 * v6;
      v8 = (_QWORD *)(a2 + 40);
      while ((sub_22EFF335C(a1, *v8) & 1) != 0)
      {
        ++v8;
        v7 -= 8;
        if (!v7)
        {
          v5 = *(_QWORD *)(a2 + 16);
          v6 = (unsigned __int16)(v5 >> 38);
          goto LABEL_7;
        }
      }
      return 0;
    }
LABEL_7:
    if ((v5 & 0x3C0000000000000) == 0x80000000000000)
    {
      v9 = (_DWORD *)((a2 + 40 + 8 * v6 + 4 * ((v5 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
      v12 = *v9;
      v11 = v9 + 2;
      v10 = v12;
      if (v12)
      {
        v13 = 8 * v10;
        while ((sub_22EFF335C(a1, *v11) & 1) != 0)
        {
          ++v11;
          v13 -= 8;
          if (!v13)
            goto LABEL_12;
        }
        return 0;
      }
    }
LABEL_12:
    v14 = sub_22F257D3C(a2);
    if (!v14)
      return 1;
    result = sub_22EFEF038(a1, v14);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22F3BFF9C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[6];
  if (v4 && !sub_22EFEF038(a1, v4))
    return 0;
  v5 = a2[7];
  if (v5 && !sub_22EFEF038(a1, v5))
    return 0;
  else
    return sub_22EFF335C(a1, a2[4]);
}

uint64_t sub_22F3C0004(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  v4 = a2[3];
  if (*(_QWORD **)(v4 & 0xFFFFFFFFFFFFFFF0) == a2 || (result = sub_22EFF335C(a1, v4), (_DWORD)result))
  {
    v6 = (a2[2] >> 19) & 0x7FLL;
    if (v6)
    {
      v7 = a2 + 6;
      v8 = 8 * v6 - 8;
      do
      {
        v9 = *v7++;
        result = sub_22EFF335C(a1, v9);
        if ((_DWORD)result)
          v10 = v8 == 0;
        else
          v10 = 1;
        v8 -= 8;
      }
      while (!v10);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3C0088(uint64_t a1, uint64_t a2)
{
  int v4;

  if ((*(_BYTE *)(a2 + 18) & 0x10) != 0)
  {
    do
    {
      a2 = *(_QWORD *)(*(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (a2)
      {
        v4 = *(_DWORD *)(a2 + 16);
        if ((v4 & 0xFE) == 0x28)
          continue;
      }
      a2 = sub_22F10CF48(a2);
      v4 = *(_DWORD *)(a2 + 16);
    }
    while ((v4 & 0x100000) != 0);
  }
  return sub_22EFF335C(a1, *(_QWORD *)(a2 + 32));
}

uint64_t sub_22F3C00F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22F3C01BC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 8));
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22F3C00F0(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22F3C01BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v6 = a2;
  v3 = sub_22F0F09E0(&v6);
  if (v3)
    return (sub_22F3C0234(a1, *(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF8) & 1) != 0;
  v4 = sub_22F0F0964(&v6);
  if (!v4)
    return 1;
  result = sub_22F3C0234(a1, *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22F3C0234(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unsigned int v5;
  char v6;
  uint64_t result;
  unint64_t v8;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22F3C0234(a1, v4), (_DWORD)result))
  {
    v5 = sub_22F0AAB60(a2);
    if (v5 > 6)
      return 1;
    v6 = v5;
    result = 1;
    if (((1 << v6) & 0x67) == 0)
    {
      v8 = (*(_BYTE *)(a2 + 8) & 4) != 0 ? *(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFFF0 : 0;
      result = sub_22EFF335C(a1, v8);
      if ((_DWORD)result)
        return 1;
    }
  }
  return result;
}

__n128 sub_22F3C02D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)a1;
  v14 = 1071;
  v15 = a2;
  v16 = a3;
  sub_22F3BE924(a1, (uint64_t)&v14, v6 + 24);
  v11 = 1071;
  v12 = a2;
  v13 = a3;
  v7 = sub_22EC51434(a1 + 8, (unint64_t)&v11);
  v8 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v9 = *(_QWORD *)(v7 + 32);
  result = *(__n128 *)(v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  *(_QWORD *)(v8 + 32) = v9;
  return result;
}

uint64_t sub_22F3C0380(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v4 = (uint64_t *)(a2 + 24);
  result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)));
  if ((_DWORD)result)
  {
    v6 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v6)
    {
      v7 = 8 * v6 - 8;
      do
      {
        v8 = *v4++;
        result = sub_22EFEF038(a1, v8);
        if ((_DWORD)result)
          v9 = v7 == 0;
        else
          v9 = 1;
        v7 -= 8;
      }
      while (!v9);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3C03F8(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v8;

  if (sub_22F3C6428(a2, a3))
  {
    v8 = *a3 & 0xFFFFFFFFFFFFFFF8;
    if ((sub_22F3BAC7C(a1, v8, v8, a1, &v8, *a1) & 1) == 0)
      return 0;
  }
  else
  {
    result = sub_22EFEF038(a1, a4);
    if (!(_DWORD)result)
      return result;
  }
  return 1;
}

uint64_t sub_22F3C0484(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = (uint64_t *)(a2 + 16);
    while (1)
    {
      v10 = *v7;
      if ((sub_22F3BAC7C(a1, v10, v10, a1, &v10, *a1) & 1) == 0)
        return 0;
      ++v7;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v9 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v9)
      return 1;
    result = sub_22EFEF038((uint64_t)a1, v9, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22F3C0544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (!a2)
    return 1;
  sub_22F3BAD64(a1, a3, a6);
  v15 = sub_22EF9568C(a2);
  v16 = a2;
  v11 = sub_22EC51434(a1 + 8, (unint64_t)&v15);
  v12 = *(_QWORD *)(a1 + 8) + 40 * *(unsigned int *)(a1 + 16);
  v13 = *(_QWORD *)(v11 + 32);
  v14 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v11;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = v13;
  ++*(_DWORD *)(a1 + 16);
  result = sub_22EFF4BD0(a4, *a5);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t sub_22F3C062C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = *(uint64_t **)(a2 + 40);
  if (*(_BYTE *)(a2 + 35))
    return (sub_22EFEF038(a1, *(_QWORD *)(a2 + 40)) & 1) != 0;
  if (!v3)
    return 1;
  v6 = *v3;
  v5 = (uint64_t)(v3 + 1);
  *(_QWORD *)&v7 = v6;
  *((_QWORD *)&v7 + 1) = v5;
  v8 = sub_22F37A024(&v7);
  v9 = v7;
  result = sub_22F3BEEB4((uint64_t)a1, v6, v5, (uint64_t)&v8, a1, (uint64_t)&v7, *a1 + 24);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22F3C06FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  BOOL v12;

  v4 = *(unsigned int *)(a2 + 48);
  if ((_DWORD)v4)
  {
    v5 = *(_QWORD **)(a2 + 56);
    v6 = 8 * v4;
    while ((sub_22EFEF038(a1, *v5) & 1) != 0)
    {
      ++v5;
      v6 -= 8;
      if (!v6)
        goto LABEL_5;
    }
    return 0;
  }
  else
  {
LABEL_5:
    v7 = *(unsigned int *)(a2 + 64);
    if ((_DWORD)v7)
    {
      v8 = *(uint64_t **)(a2 + 72);
      v9 = 8 * v7 - 8;
      do
      {
        v10 = *v8++;
        result = sub_22EFEF038(a1, v10);
        if ((_DWORD)result)
          v12 = v9 == 0;
        else
          v12 = 1;
        v9 -= 8;
      }
      while (!v12);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3C0798(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 40));
  if ((_DWORD)result)
  {
    v5 = *(unsigned int *)(a2 + 48);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(a2 + 56);
      v7 = 8 * v5 - 8;
      do
      {
        v8 = *v6++;
        result = sub_22EFEF038(a1, v8);
        if ((_DWORD)result)
          v9 = v7 == 0;
        else
          v9 = 1;
        v7 -= 8;
      }
      while (!v9);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3C080C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;

  result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 40));
  if ((_DWORD)result)
  {
    v5 = *(unsigned int *)(a2 + 48);
    if ((_DWORD)v5)
    {
      v6 = *(_QWORD **)(a2 + 56);
      v7 = 8 * v5;
      while ((sub_22EFEF038(a1, *v6) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_6;
      }
      return 0;
    }
LABEL_6:
    v8 = *(unsigned int *)(a2 + 64);
    if ((_DWORD)v8)
    {
      v9 = *(_QWORD **)(a2 + 72);
      v10 = 8 * v8;
      while ((sub_22EFEF038(a1, *v9) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_10;
      }
      return 0;
    }
LABEL_10:
    v11 = *(unsigned int *)(a2 + 80);
    if ((_DWORD)v11)
    {
      v12 = *(_QWORD **)(a2 + 88);
      v13 = 8 * v11;
      while ((sub_22EFEF038(a1, *v12) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_14;
      }
      return 0;
    }
LABEL_14:
    v14 = *(unsigned int *)(a2 + 96);
    if ((_DWORD)v14)
    {
      v15 = *(_QWORD **)(a2 + 104);
      v16 = 8 * v14;
      while ((sub_22EFEF038(a1, *v15) & 1) != 0)
      {
        ++v15;
        v16 -= 8;
        if (!v16)
          goto LABEL_18;
      }
      return 0;
    }
LABEL_18:
    v17 = *(unsigned int *)(a2 + 128);
    if ((_DWORD)v17)
    {
      v18 = *(uint64_t **)(a2 + 136);
      v19 = 8 * v17 - 8;
      do
      {
        v20 = *v18++;
        result = sub_22EFEF038(a1, v20);
        if ((_DWORD)result)
          v21 = v19 == 0;
        else
          v21 = 1;
        v19 -= 8;
      }
      while (!v21);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3C0948(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  result = sub_22EFEF038(a1, *(_QWORD *)(a2 + 40));
  if ((_DWORD)result)
  {
    v5 = *(unsigned int *)(a2 + 56);
    if ((_DWORD)v5)
    {
      v6 = *(_QWORD **)(a2 + 64);
      v7 = 8 * v5;
      while ((sub_22EFEF038(a1, *v6) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_6;
      }
      return 0;
    }
    else
    {
LABEL_6:
      v8 = *(unsigned int *)(a2 + 72);
      if ((_DWORD)v8)
      {
        v9 = *(uint64_t **)(a2 + 80);
        v10 = 8 * v8 - 8;
        do
        {
          v11 = *v9++;
          result = sub_22EFEF038(a1, v11);
          if ((_DWORD)result)
            v12 = v10 == 0;
          else
            v12 = 1;
          v10 -= 8;
        }
        while (!v12);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22F3C09F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  unint64_t v9;
  __int128 v10;
  int v11;
  __int128 v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v8 = 0;
    while (1)
    {
      v9 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v8 >= *(unsigned int *)(v9 + 16))
        break;
      sub_22F3C0484(a1, *(_QWORD *)(*(_QWORD *)(v9 + 24) + 8 * v8++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_2;
    }
    v4 = *(_QWORD *)v9;
    v5 = *(_QWORD *)(v9 + 8);
  }
  else
  {
LABEL_2:
    v4 = 0;
    v5 = 0;
  }
  *(_QWORD *)&v10 = v4;
  *((_QWORD *)&v10 + 1) = v5;
  v11 = 5;
  v12 = v10;
  return sub_22F3BE830((uint64_t)a1, v4, v5, (uint64_t)&v11, a1, (uint64_t *)&v10, *a1 + 24);
}

uint64_t sub_22F3C0ACC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  __int128 v12;
  int v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  result = sub_22F3C09F4(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        v9 = *(uint64_t **)(v8 - 8);
        v10 = *v9++;
        *(_QWORD *)&v12 = v10;
        *((_QWORD *)&v12 + 1) = v9;
        v13 = sub_22F37A024(&v12);
        v14 = v12;
        result = sub_22F3BEEB4((uint64_t)a1, v10, (uint64_t)v9, (uint64_t)&v13, a1, (uint64_t)&v12, *a1 + 24);
        if ((_DWORD)result)
          v11 = v8 == v7;
        else
          v11 = 1;
        v8 += 24;
      }
      while (!v11);
    }
  }
  return result;
}

uint64_t sub_22F3C0BBC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  int v15;
  __int128 v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v10 = 0;
    while (1)
    {
      v11 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v10 >= *(unsigned int *)(v11 + 16))
        break;
      sub_22F3C0484(a1, *(_QWORD *)(*(_QWORD *)(v11 + 24) + 8 * v10++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_2;
    }
    v5 = *(_QWORD *)v11;
    v6 = *(_QWORD *)(v11 + 8);
  }
  else
  {
LABEL_2:
    v5 = 0;
    v6 = 0;
  }
  *(_QWORD *)&v14 = v5;
  *((_QWORD *)&v14 + 1) = v6;
  v15 = 5;
  v16 = v14;
  result = sub_22F3BE830((uint64_t)a1, v5, v6, (uint64_t)&v15, a1, (uint64_t *)&v14, *a1 + 24);
  if ((_DWORD)result)
  {
    v8 = *(_QWORD *)(a2 + 56);
    if ((v8 & 4) != 0)
    {
      v9 = *(uint64_t **)((v8 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v9)
      {
LABEL_16:
        v13 = *v9;
        v12 = (uint64_t)(v9 + 1);
        *(_QWORD *)&v14 = v13;
        *((_QWORD *)&v14 + 1) = v12;
        v15 = sub_22F37A024(&v14);
        v16 = v14;
        return (sub_22F3BEEB4((uint64_t)a1, v13, v12, (uint64_t)&v15, a1, (uint64_t)&v14, *a1 + 24) & 1) != 0;
      }
    }
    else if (v8 >= 8)
    {
      v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_16;
    }
    result = sub_22EFF335C(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22F3C0D1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t *)(*a2 & 0xFFFFFFFFFFFFFFF8);
  if ((*a2 & 6) != 0 || v4 == 0)
    return sub_22EFEF038((uint64_t)a1, a2[1], 0);
  v7 = *v4;
  v6 = (uint64_t)(v4 + 1);
  *(_QWORD *)&v9 = v7;
  *((_QWORD *)&v9 + 1) = v6;
  v10 = sub_22F37A024(&v9);
  v11 = v9;
  result = sub_22F3BEEB4((uint64_t)a1, v7, v6, (uint64_t)&v10, a1, (uint64_t)&v9, *a1 + 24);
  if ((_DWORD)result)
    return sub_22EFEF038((uint64_t)a1, a2[1], 0);
  return result;
}

uint64_t sub_22F3C0DE8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22F3C0BBC(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22EFEF038((uint64_t)a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22F3C0E40(unsigned __int8 *a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)sub_22EFF5860(a1) + 1) & 0xFFFFFFFFFFFFFFF0;
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)v1 && *(_BYTE *)(v2 + 16) == 39
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39 && (v2 = sub_22F10CF48(v2)) != 0)
  {
    v1 = *(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0;
  }
  if ((*(_BYTE *)(*(_QWORD *)v1 + 17) & 4) != 0)
    return 0;
  else
    return sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 24));
}

unint64_t sub_22F3C0ED0(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unsigned int v3;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v5 = 0;
  v6 = 0;
  LODWORD(v7) = 0;
  v2 = 0;
  if (!sub_22F006900(a1, (uint64_t)&v5, a2, 0))
    goto LABEL_5;
  v3 = v7;
  if ((_DWORD)v7 == 7)
  {
    if (*(_QWORD *)sub_22EF55B70((uint64_t)&v7))
    {
      v2 = 0;
    }
    else if ((v8 & 3) != 0)
    {
      v2 = 0;
    }
    else
    {
      v2 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    }
    goto LABEL_5;
  }
  if ((_DWORD)v7 == 12)
  {
    v2 = sub_22F3645B0((uint64_t)&v7);
LABEL_5:
    v3 = v7;
    goto LABEL_6;
  }
  v2 = 0;
LABEL_6:
  if (v3 >= 2)
    sub_22EF53BC0(&v7);
  return v2;
}

uint64_t sub_22F3C0FB4(uint64_t a1, uint64_t a2)
{
  if (sub_22E9D848C(a1) && (unint64_t)sub_22EF5CDF0(a2, a1) < 0x41)
    return 1;
  else
    return 2;
}

uint64_t sub_22F3C0FFC(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  char *v12;

  *(_BYTE *)a1 = -36;
  if (byte_255E04EB3)
  {
    v12 = sub_22F0D3748(220);
    ++*((_DWORD *)v12 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 16) = a2;
  *(_DWORD *)(a1 + 20) = a3;
  *(_DWORD *)(a1 + 24) = a4;
  *(_QWORD *)(a1 + 32) = a6;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AAF58(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C109C(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;

  v10 = sub_22EF5B848(a1, *(_QWORD *)(a1 + 16408) | 1, 0);
  v11 = sub_22E3CD3D4(a1 + 2032, 40, 3);
  return sub_22F3C0FFC(v11, a2, a3, a4, v10, a5);
}

uint64_t sub_22F3C1110(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;

  v2 = sub_22EF5B848(a1, *(_QWORD *)(a1 + 16408) | 1, 0);
  v3 = sub_22E3CD3D4(a1 + 2032, 40, 3);
  *(_BYTE *)v3 = -36;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(220);
    ++*((_DWORD *)v4 + 2);
  }
  *(_DWORD *)v3 &= 0xFFFC00FF;
  *(_QWORD *)(v3 + 8) = v2;
  *(_QWORD *)(v3 + 16) = 0;
  *(_DWORD *)(v3 + 24) = 0;
  return v3;
}

uint64_t sub_22F3C1198(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  char *v10;
  int v11;

  *(_BYTE *)a1 = -40;
  if (byte_255E04EB3)
  {
    v10 = sub_22F0D3748(216);
    ++*((_DWORD *)v10 + 2);
  }
  v11 = *(_DWORD *)a1;
  *(_QWORD *)(a1 + 8) = a3;
  *(_DWORD *)a1 = ((a5 != 0) << 22) | ((a4 & 0xF) << 18) | v11 & 0xFF8000FF | 0x100;
  *(_DWORD *)(a1 + 4) = a2;
  if (a5)
    *(_QWORD *)(a1 + 16) = a5;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AAF84(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C1248(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  if (a5)
    v9 = 24;
  else
    v9 = 16;
  v10 = sub_22E3CD3D4(a1 + 2032, v9, 3);
  return sub_22F3C1198(v10, a2, a3, a4, a5);
}

uint64_t sub_22F3C12A4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;

  if (a2)
    v3 = 24;
  else
    v3 = 16;
  v4 = sub_22E3CD3D4(a1 + 2032, v3, 3);
  *(_BYTE *)v4 = -40;
  if (byte_255E04EB3)
  {
    v5 = sub_22F0D3748(216);
    ++*((_DWORD *)v5 + 2);
  }
  *(_QWORD *)(v4 + 8) = 0;
  if (a2)
    v6 = 0x400000;
  else
    v6 = 0;
  *(_DWORD *)v4 = *(_DWORD *)v4 & 0xFFBFFFFF | v6;
  return v4;
}

char *sub_22F3C1330(int a1)
{
  return off_24FAC54F0[a1];
}

uint64_t sub_22F3C134C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_22EFF8F1C(a1, a2, a3, a4, a5);
}

uint64_t sub_22F3C1354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  char *v12;

  *(_BYTE *)a1 = -87;
  if (byte_255E04EB3)
  {
    v12 = sub_22F0D3748(169);
    ++*((_DWORD *)v12 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a4;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = a5;
  *(_DWORD *)(a1 + 32) = a6;
  sub_22EFF8E88((_QWORD *)(a1 + 16), a2, a3);
  *(_DWORD *)a1 &= 0xFFFC1FFF;
  return a1;
}

uint64_t sub_22F3C13FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v10;

  v10 = sub_22E3CD3D4(a1 + 2032, 40, 3);
  return sub_22F3C1354(v10, a1, a2, a3, a4, a5);
}

uint64_t sub_22F3C145C(uint64_t a1)
{
  uint64_t v1;
  char *v2;

  v1 = sub_22E3CD3D4(a1 + 2032, 40, 3);
  *(_BYTE *)v1 = -87;
  if (byte_255E04EB3)
  {
    v2 = sub_22F0D3748(169);
    ++*((_DWORD *)v2 + 2);
  }
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  return v1;
}

void sub_22F3C14C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  void *v10;
  __int128 v11;
  _QWORD v12[9];

  v12[8] = *MEMORY[0x24BDAC8D0];
  v10 = v12;
  v11 = xmmword_22F44E300;
  sub_22F257F94(a1 + 16, (llvm::APInt *)&v5);
  if (v6 >= 0x41)
    v3 = v5;
  else
    v3 = (uint64_t *)&v5;
  v4 = *v3;
  v8 = 64;
  v7 = v4;
  v9 = 1;
  sub_22F40AE68((uint64_t)&v10, (const llvm::APInt *)&v7);
  if (v8 >= 0x41 && v7)
    MEMORY[0x2348A0E84](v7, 0x1000C8000313F17);
  if (v6 >= 0x41 && v5)
    MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  std::string::__init(a2, (const std::string::value_type *)v10, v11);
  if (v10 != v12)
    free(v10);
}

const char *sub_22F3C15E8(int a1)
{
  const char *result;
  const char *v2;

  switch(a1)
  {
    case 7:
      result = "\\a";
      break;
    case 8:
      result = "\\b";
      break;
    case 9:
      result = "\\t";
      break;
    case 10:
      result = "\\n";
      break;
    case 11:
      result = "\\v";
      break;
    case 12:
      result = "\\f";
      break;
    case 13:
      result = "\\r";
      break;
    default:
      v2 = "\\\\";
      if (a1 != 92)
        v2 = 0;
      if (a1 == 39)
        result = "\\'";
      else
        result = v2;
      break;
  }
  return result;
}

uint64_t sub_22F3C1698(uint64_t a1)
{
  uint64_t result;
  char *v2;
  uint64_t v3;

  result = sub_22E3CD3D4(a1 + 2032, 32, 3);
  *(_BYTE *)result = -86;
  if (byte_255E04EB3)
  {
    v3 = result;
    v2 = sub_22F0D3748(170);
    result = v3;
    ++*((_DWORD *)v2 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)result &= 0xFF83FFFF;
  return result;
}

double sub_22F3C1710(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  llvm::APFloatBase *v3;
  double v4;
  double v5;
  _BYTE v7[8];
  uint64_t v8[4];

  v8[3] = *MEMORY[0x24BDAC8D0];
  v1 = a1 + 16;
  v2 = llvm::APFloatBase::EnumToSemantics();
  v3 = (llvm::APFloatBase *)sub_22E4F00CC(v1, v2, (uint64_t)v7);
  llvm::APFloatBase::IEEEdouble(v3);
  llvm::APFloat::convert();
  llvm::APFloat::convertToDouble((llvm::APFloat *)v7);
  v5 = v4;
  sub_22E4EEC9C(v8);
  return v5;
}

uint64_t sub_22F3C17BC(uint64_t a1, unsigned int a2, int a3, int a4)
{
  char v4;
  uint64_t result;
  char *v8;
  uint64_t v9;

  v4 = a4;
  result = sub_22E3CD3D4(a1 + 2032, (a4 * a3) + 4 * a2 + 20, 3);
  *(_BYTE *)result = -31;
  if (byte_255E04EB3)
  {
    v9 = result;
    v8 = sub_22F0D3748(225);
    result = v9;
    ++*((_DWORD *)v8 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)result = *(_DWORD *)result & 0xFF1FFFFF | ((v4 & 7) << 21);
  *(_DWORD *)(result + 4) = a2;
  *(_DWORD *)(result + 16) = a3;
  return result;
}

const char *sub_22F3C1858(int a1)
{
  const char *result;
  const char *v2;

  switch(a1)
  {
    case 7:
      result = "\\a";
      break;
    case 8:
      result = "\\b";
      break;
    case 9:
      result = "\\t";
      break;
    case 10:
      result = "\\n";
      break;
    case 11:
      result = "\\v";
      break;
    case 12:
      result = "\\f";
      break;
    case 13:
      result = "\\r";
      break;
    default:
      v2 = "\\\\";
      if (a1 != 92)
        v2 = 0;
      if (a1 == 34)
        result = "\\\"";
      else
        result = v2;
      break;
  }
  return result;
}

uint64_t sub_22F3C1908(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = sub_22E3CD3D4(a1 + 2032, 16 * a6 + 8 * a8 + 40, 3);
  return sub_22F3C1A18(v16, v17, a2, a3, a4, a5, a6, v18, a7, a8, a9);
}

uint64_t sub_22F3C1998(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  char *v6;

  v5 = sub_22E3CD3D4(a1 + 2032, 16 * a2 + 8 * a3 + 40, 3);
  *(_BYTE *)v5 = -47;
  if (byte_255E04EB3)
  {
    v6 = sub_22F0D3748(209);
    ++*((_DWORD *)v6 + 2);
  }
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_DWORD *)(v5 + 32) = a2;
  *(_DWORD *)(v5 + 36) = a3;
  return v5;
}

uint64_t sub_22F3C1A18(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = -47;
  if (byte_255E04EB3)
  {
    v17 = sub_22F0D3748(209);
    ++*((_DWORD *)v17 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 20) = a11;
  *(_QWORD *)(a1 + 24) = a5;
  *(_DWORD *)(a1 + 32) = a7;
  *(_DWORD *)(a1 + 36) = a10;
  if (a7)
  {
    v18 = 0;
    do
    {
      *(_OWORD *)(a1 + 40 + 16 * v18) = *(_OWORD *)(a6 + 16 * v18);
      ++v18;
    }
    while (a7 != v18);
  }
  if (a10)
  {
    v19 = 0;
    do
    {
      *(_QWORD *)(a1 + 16 * a7 + 40 + 8 * v19) = *(_QWORD *)(a9 + 8 * v19);
      ++v19;
    }
    while (a10 != v19);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AAFAC(a1) & 0x1F) << 13);
  return a1;
}

unint64_t sub_22F3C1B10(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 8);
  result = v1 & 0xFFFFFFFFFFFFFFFCLL;
  if ((v1 & 3) == 1)
  {
    v3 = *(_QWORD *)(result + 40);
    if ((v3 & 7) != 0)
      return 0;
    else
      return v3 & 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_22F3C1B38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v7;
  char *v9;
  char v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = -24;
  if (byte_255E04EB3)
  {
    v14 = a4;
    v11 = a3;
    v12 = a5;
    v13 = a6;
    v10 = a2;
    v9 = sub_22F0D3748(232);
    a5 = v12;
    a6 = v13;
    a2 = v10;
    a3 = v11;
    a4 = v14;
    ++*((_DWORD *)v9 + 2);
  }
  v7 = *(_DWORD *)a1;
  *(_DWORD *)(a1 + 24) = a5;
  *(_DWORD *)(a1 + 28) = a6;
  *(_DWORD *)a1 = v7 & 0xFF8000FF | ((a2 & 0xF) << 18);
  *(_QWORD *)(a1 + 8) = a4;
  *(_QWORD *)(a1 + 16) = a3;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22EFB23D4(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C1BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  *(_QWORD *)(a1 + 24) = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v5 = sub_22F110500((uint64_t)&v7, v4);
  if (v5 && *(_QWORD *)(v5 + 24) <= 0xFuLL && (*(_BYTE *)(v5 + 17) & 4) == 0)
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 48);
  result = sub_22EFB2ABC(a1);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((result & 0x1F) << 13);
  return result;
}

char *sub_22F3C1C54(int a1)
{
  return off_24FAC5598[a1];
}

unint64_t sub_22F3C1C64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 24));
  return sub_22EFFB594(v3, a2);
}

uint64_t sub_22F3C1CA0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t result;
  int v6;
  char *v7;
  uint64_t v8;

  result = sub_22E3CD3D4(a1 + 2032, 8 * (a3 + (unint64_t)a2) + 40, 3);
  *(_BYTE *)result = -112;
  if (byte_255E04EB3)
  {
    v8 = result;
    v7 = sub_22F0D3748(144);
    result = v8;
    ++*((_DWORD *)v7 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  if (a3)
    v6 = 0x4000000;
  else
    v6 = 0;
  *(_DWORD *)result = *(_DWORD *)result & 0xF9FFFFFF | v6;
  *(_DWORD *)(result + 4) = a2;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_22F3C1D44(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *((_QWORD *)a2 + 1);
  v9 = *a2;
  *(_BYTE *)a1 = 110;
  if (byte_255E04EB3)
  {
    v10 = sub_22F0D3748(110);
    ++*((_DWORD *)v10 + 2);
  }
  *(_DWORD *)a1 = v9 & 0x1F00 | (((_DWORD)a4 << 18) + 0x40000) & 0x3C0000 | *(_DWORD *)a1 & 0xFFC000FF;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = a2;
  if (a4)
  {
    v11 = (_QWORD *)(a1 + 24);
    v12 = 8 * a4;
    do
    {
      v13 = *a3++;
      *v11++ = v13;
      v12 -= 8;
    }
    while (v12);
  }
  return a1;
}

uint64_t sub_22F3C1DF8(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_22E3CD3D4(a1 + 2032, ((8 * a4 + 8) & 0x7FFFFFFF8) + 16, 3);
  return sub_22F3C1D44(v7, a2, a3, a4);
}

uint64_t sub_22F3C1E4C(uint64_t a1, unsigned int a2)
{
  char v2;
  uint64_t v3;
  char *v4;

  v2 = a2;
  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 16, 3);
  *(_BYTE *)v3 = 110;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(110);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)v3 = *(_DWORD *)v3 & 0xFFC3FFFF | ((v2 & 0xF) << 18);
  return v3;
}

uint64_t sub_22F3C1EC0(uint64_t a1)
{
  return a1 + 16;
}

uint64_t sub_22F3C1EC8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v2 || *(_BYTE *)(v2 + 16) != 39)
    v2 = sub_22F10CF48(v2);
  if ((*(_DWORD *)(v2 + 40) & 7) == 2)
    return a1 + 32;
  else
    return 0;
}

uint64_t sub_22F3C1F18(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  char *v3;

  v2 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 16, 3);
  *(_BYTE *)v2 = -88;
  if (byte_255E04EB3)
  {
    v3 = sub_22F0D3748(168);
    ++*((_DWORD *)v3 + 2);
  }
  *(_QWORD *)(v2 + 8) = 0;
  return v2;
}

uint64_t sub_22F3C1F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (!v10 || *(_BYTE *)(v10 + 16) != 39)
    v10 = sub_22F10CF48(v10);
  v11 = *(_BYTE *)(v10 + 40);
  v12 = 1;
  if ((v11 & 7) == 2)
    v12 = 2;
  if ((v11 & 6) == 2)
    v13 = v12 + 1;
  else
    v13 = v12;
  v14 = sub_22E3CD3D4(a1 + 2032, 8 * v13 + 16, 3);
  return sub_22F3C3A70(v14, a2, a3, a4, a5);
}

uint64_t sub_22F3C2018(uint64_t a1, int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, (8 * a2) + 16, 3);
  *(_BYTE *)v3 = 115;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(115);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 4) = *(_DWORD *)(v3 + 4) & 0x80000000 | a2 & 0x7FFFFFFF;
  return v3;
}

uint64_t sub_22F3C208C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 16, 3);
  *(_BYTE *)v3 = -71;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(185);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 4) = *(_DWORD *)(v3 + 4) & 0x80000000 | a2 & 0x7FFFFFFF;
  return v3;
}

uint64_t sub_22F3C2100(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4, int a5)
{
  uint64_t v9;

  v9 = sub_22E3CD3D4(a1 + 2032, ((8 * a4 + 8) & 0x7FFFFFFF8) + 16, 3);
  return sub_22F3C3B20(v9, a2, a3, a4, a5);
}

unsigned int *sub_22F3C215C(unsigned int *a1, uint64_t a2, char a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7)
{
  char *v13;
  unsigned int v14;

  *(_BYTE *)a1 = -33;
  if (byte_255E04EB3)
  {
    v13 = sub_22F0D3748(223);
    ++*((_DWORD *)v13 + 2);
  }
  v14 = *a1;
  *((_QWORD *)a1 + 1) = a4;
  a1[4] = a5;
  a1[5] = a6;
  *((_QWORD *)a1 + 3) = a7;
  *a1 = v14 & 0xFFE000FF | ((a3 & 7) << 18);
  return a1;
}

_QWORD *sub_22F3C21E8(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;

  result[7] = a2 & 0xFFFFFFFFFFFFFFFDLL;
  v2 = (_QWORD *)result[2];
  v3 = result[3] - (_QWORD)v2;
  if ((v3 & 0x7FFFFFFF8) != 0)
  {
    v4 = (v3 >> 3);
    do
    {
      if (!*v2)
        *v2 = a2;
      ++v2;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_22F3C2220(_QWORD *a1)
{
  uint64_t result;
  int v3;

  if (((a1[3] - a1[2]) & 0x7FFFFFFF8) != 8)
    return 0;
  result = sub_22EFFD7A4(*(_QWORD *)(a1[1] & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    result = sub_22E479BE0(*(_QWORD *)(*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0));
    if ((_DWORD)result)
    {
      result = *(_QWORD *)a1[2];
      if (result)
      {
        v3 = *sub_22EFFA6B0((unsigned __int8 *)result);
        return v3 == 225 || v3 == 196;
      }
    }
  }
  return result;
}

uint64_t sub_22F3C22A4(uint64_t a1)
{
  uint64_t result;
  BOOL v2;

  result = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 32) & 0xFFFFFFFFFFFFFFF0);
  if (result)
    v2 = *(_BYTE *)(result + 16) == 26;
  else
    v2 = 0;
  if (!v2)
    return sub_22F10CF48(result);
  return result;
}

unsigned __int8 *sub_22F3C22D4(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  _BYTE v8[64];

  v4 = v8;
  v5 = v8;
  v6 = 8;
  v7 = 0;
  if (!a1)
    return 0;
  do
  {
    v1 = a1;
    v2 = sub_22EFFECB4(a1);
    a1 = (unsigned __int8 *)sub_22F003A9C((char *)v2, (llvm::SmallPtrSetImplBase *)&v4);
  }
  while (a1 != v1);
  if (v5 != v4)
    free(v5);
  return v1;
}

uint64_t sub_22F3C2348(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, int a7)
{
  char *v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = -35;
  if (byte_255E04EB3)
  {
    v14 = sub_22F0D3748(221);
    ++*((_DWORD *)v14 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 16) = a6;
  *(_DWORD *)(a1 + 20) = a7;
  *(_DWORD *)(a1 + 32) = a4;
  if (a4 >> 61)
    v15 = -1;
  else
    v15 = 8 * a4;
  *(_QWORD *)(a1 + 24) = sub_22E3CD3D4(a2 + 2032, v15, 3);
  if (a4)
  {
    v16 = 0;
    do
    {
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8 * v16) = *(_QWORD *)(a3 + 8 * v16);
      ++v16;
    }
    while (a4 != v16);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB008(a1) & 0x1F) << 13);
  return a1;
}

void *sub_22F3C2430(uint64_t a1, uint64_t a2, const void *a3, uint64_t a4)
{
  size_t v6;
  void *v7;

  *(_DWORD *)(a1 + 32) = a4;
  v6 = 8 * a4;
  v7 = (void *)sub_22E3CD3D4(a2 + 2032, (8 * a4) & 0x7FFFFFFF8, 3);
  *(_QWORD *)(a1 + 24) = v7;
  return memcpy(v7, a3, v6);
}

uint64_t sub_22F3C2480(uint64_t a1, int a2, int a3, uint64_t a4, void *__src, uint64_t a6, uint64_t *a7, uint64_t a8, int a9, int a10, int a11, int a12, unsigned __int8 a13, unsigned int a14)
{
  uint64_t *v15;
  unsigned int v19;
  int *v20;
  uint64_t v21;
  int v22;
  void *v23;
  char *v24;
  unsigned int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v15 = a7;
  v19 = a14;
  v20 = (int *)a7[a14];
  v21 = *((_QWORD *)v20 + 1);
  v22 = *v20;
  *(_BYTE *)a1 = -80;
  if (byte_255E04EB3)
  {
    v23 = __src;
    v30 = a4;
    v24 = sub_22F0D3748(176);
    a4 = v30;
    v19 = a14;
    __src = v23;
    ++*((_DWORD *)v24 + 2);
  }
  v25 = *(_DWORD *)a1 & 0xFFFC00FF | v22 & 0x1F00;
  *(_QWORD *)(a1 + 8) = v21;
  *(_DWORD *)(a1 + 16) = a8;
  *(_DWORD *)(a1 + 20) = v19;
  *(_DWORD *)(a1 + 24) = a9;
  *(_DWORD *)(a1 + 28) = a11;
  *(_DWORD *)a1 = v25;
  *(_DWORD *)(a1 + 4) = a3;
  *(_QWORD *)(a1 + 32) = a4;
  if (a8)
  {
    v26 = (_QWORD *)(a1 + 40);
    v27 = 8 * a8;
    do
    {
      v28 = *v15++;
      *v26++ = v28;
      v27 -= 8;
    }
    while (v27);
  }
  if (a6)
    memmove((void *)(a1 + 32 + 8 * (a8 + 1)), __src, 8 * a6);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB05C(a1, a13) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C25A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *__src, uint64_t a6, uint64_t *a7, uint64_t a8, int a9, int a10, int a11, int a12, unsigned __int8 a13)
{
  uint64_t v19;
  void *v20;
  char *v21;
  unsigned int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v19 = *(_QWORD *)(a2 + 16832);
  *(_BYTE *)a1 = -80;
  if (byte_255E04EB3)
  {
    v20 = __src;
    v21 = sub_22F0D3748(176);
    __src = v20;
    ++*((_DWORD *)v21 + 2);
  }
  v22 = *(_DWORD *)a1 & 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = v19;
  *(_DWORD *)(a1 + 16) = a8;
  *(_DWORD *)(a1 + 20) = -1;
  *(_DWORD *)(a1 + 24) = a9;
  *(_DWORD *)(a1 + 28) = a11;
  *(_DWORD *)a1 = v22;
  *(_DWORD *)(a1 + 4) = a3;
  *(_QWORD *)(a1 + 32) = a4;
  if (a8)
  {
    v23 = (_QWORD *)(a1 + 40);
    v24 = 8 * a8;
    do
    {
      v25 = *a7++;
      *v23++ = v25;
      v24 -= 8;
    }
    while (v24);
  }
  if (a6)
    memmove((void *)(a1 + 32 + 8 * (a8 + 1)), __src, 8 * a6);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB05C(a1, a13) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C26AC(uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6, uint64_t a7, int a8, int a9, int a10, unsigned __int8 a11, unsigned int a12)
{
  uint64_t v19;
  int v20;

  v19 = sub_22E3CD3D4(a1 + 2032, 8 * ((a7 + 1) + (unint64_t)a7) + 32, 3);
  return sub_22F3C2480(v19, v20, a2, a3, a4, a5, a6, a7, a8, 0, a9, 0, a11, a12);
}

uint64_t sub_22F3C275C(uint64_t a1, int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6, uint64_t a7, int a8, int a9, int a10, unsigned __int8 a11)
{
  uint64_t v19;

  v19 = sub_22E3CD3D4(a1 + 2032, 8 * ((a7 + 1) + (unint64_t)a7) + 32, 3);
  return sub_22F3C25A4(v19, a1, a2, a3, a4, a5, a6, a7, a8, 0, a9, 0, a11);
}

uint64_t sub_22F3C280C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1 + (unint64_t)a2) + 32, 3);
  *(_BYTE *)v3 = -80;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(176);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  return v3;
}

uint64_t sub_22F3C2884(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, int a6, int a7, int *a8)
{
  int v11;
  uint64_t v16;
  uint64_t v17;

  v11 = a5;
  v16 = sub_22E3CD3D4(a1 + 2032, 8 * a5 + 40, 3);
  return sub_22F002ACC(v16, a1, *(_QWORD *)(a1 + 16392), a2, a3, a6, a7, v17, a4, v11, a8);
}

uint64_t sub_22F3C2914(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  char *v4;
  int v5;

  v2 = a2 + 1;
  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1) + 32, 3);
  *(_BYTE *)v3 = -92;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(164);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  v5 = *(_DWORD *)(v3 + 20) & 1 | (v2 << 16);
  *(_DWORD *)(v3 + 16) = 0;
  *(_DWORD *)(v3 + 20) = v5;
  *(_QWORD *)(v3 + 24) = 0;
  return v3;
}

__n128 sub_22F3C2990(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  __n128 result;
  uint64_t v8;
  __n128 *v9;

  *(_QWORD *)(a1 + 24) = sub_22E3CD3D4(a2 + 2032, 24 * a4, 3);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 20) & 0xFFFF0001 | (2 * (a4 & 0x7FFF));
  if (a4)
  {
    v8 = 0;
    do
    {
      v9 = (__n128 *)(*(_QWORD *)(a1 + 24) + v8);
      result = *(__n128 *)(a3 + v8);
      v9[1].n128_u64[0] = *(_QWORD *)(a3 + v8 + 16);
      *v9 = result;
      v8 += 24;
    }
    while (24 * a4 != v8);
  }
  return result;
}

unint64_t sub_22F3C2A24(uint64_t a1)
{
  int v1;
  int *v2;
  int v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;

  v1 = *(_DWORD *)(a1 + 20);
  v2 = *(int **)(a1 + 24);
  v3 = *v2;
  if ((v1 & 0xFFFE) != 2)
  {
    if (v3)
    {
      v7 = (unsigned int *)(v2 + 3);
    }
    else
    {
      v6 = v2[4];
      if (v6)
        goto LABEL_8;
      v7 = (unsigned int *)(v2 + 5);
    }
    v6 = *v7;
LABEL_8:
    v5 = ((unsigned __int16)v1 >> 1) - 1;
    return v6 | ((unint64_t)v2[6 * v5 + 5] << 32);
  }
  if (v3)
  {
    v4 = (unsigned int *)(v2 + 3);
  }
  else
  {
    v6 = v2[4];
    if (v6)
    {
      v5 = 0;
      return v6 | ((unint64_t)v2[6 * v5 + 5] << 32);
    }
    v4 = (unsigned int *)(v2 + 5);
  }
  v5 = 0;
  v6 = *v4;
  return v6 | ((unint64_t)v2[6 * v5 + 5] << 32);
}

uint64_t sub_22F3C2AA4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8 * (*(_DWORD *)(a2 + 8) + 1) + 32);
}

uint64_t sub_22F3C2AB8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 8 * (*(_DWORD *)(a2 + 8) + 2) + 32);
}

_QWORD *sub_22F3C2ACC(_QWORD *result, uint64_t a2, unsigned int a3, _QWORD *a4, _BYTE *a5)
{
  _QWORD *v7;
  size_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE *v20;
  int v21;
  _BYTE *v22;

  v7 = result;
  v8 = a5 - (_BYTE *)a4;
  v9 = -1431655765 * ((a5 - (_BYTE *)a4) >> 3);
  if (v9 == 1)
  {
    v13 = result[3] + 24 * a3;
    v14 = *(_OWORD *)a4;
    *(_QWORD *)(v13 + 16) = a4[2];
    *(_OWORD *)v13 = v14;
  }
  else if (v9)
  {
    result = (_QWORD *)sub_22E3CD3D4(a2 + 2032, 24 * (v9 + ((unsigned __int16)*((_DWORD *)result + 5) >> 1) - 1), 3);
    v16 = result;
    v17 = a3;
    if (a3)
      result = memmove(result, (const void *)v7[3], 24 * a3);
    v18 = &v16[3 * a3];
    if (a5 != (_BYTE *)a4)
      result = memmove(&v16[3 * v17], a4, v8);
    v19 = v7[3];
    v20 = (_BYTE *)(v19 + 24 * v17 + 24);
    v21 = *((_DWORD *)v7 + 5);
    v22 = (_BYTE *)(v19 + 24 * ((unsigned __int16)v21 >> 1));
    if (v22 != v20)
    {
      result = memmove(&v18[3 * v9], v20, v22 - v20);
      v21 = *((_DWORD *)v7 + 5);
    }
    v7[3] = v16;
    *((_DWORD *)v7 + 5) = v21 & 0xFFFF0001 | (2 * (((v21 + 2 * v9 + 65534) >> 1) & 0x7FFF));
  }
  else
  {
    v10 = result[3];
    v11 = v10 + 24 * a3;
    v12 = v10 + 24 * ((unsigned __int16)*((_DWORD *)result + 5) >> 1);
    if (v12 != v11 + 24)
      return memmove((void *)(v11 - (v12 - (v11 + 24))), (const void *)(v11 + 24), v12 - (v11 + 24));
  }
  return result;
}

uint64_t sub_22F3C2C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *(_QWORD *)(a4 + 8);
  *(_BYTE *)a1 = -91;
  if (byte_255E04EB3)
  {
    v11 = sub_22F0D3748(165);
    ++*((_DWORD *)v11 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = a4;
  v12 = sub_22E3CD3D4(a2 + 2032, 64, 3);
  v13 = sub_22EFFD1B0(v12, a2, a3, 0, 0, a5);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(a1 + 24) = v13;
  *(_DWORD *)a1 &= 0xFFFC1FFF;
  return a1;
}

uint64_t sub_22F3C2D08(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;

  result = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 24, 3);
  *(_BYTE *)result = -41;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(215);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 4) = a2;
  return result;
}

uint64_t sub_22F3C2D84(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;

  if (a2)
    v2 = 56;
  else
    v2 = 48;
  result = sub_22E3CD3D4(a1 + 2032, v2, 3);
  *(_BYTE *)result = 113;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(113);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)result = *(_DWORD *)result & 0xFF03FFFF | 0x580000;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_22F3C2E0C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;

  if (a2)
    v3 = 56;
  else
    v3 = 48;
  v4 = sub_22E3CD3D4(a1 + 2032, v3, 3);
  *(_BYTE *)v4 = 103;
  if (byte_255E04EB3)
  {
    v5 = sub_22F0D3748(103);
    ++*((_DWORD *)v5 + 2);
  }
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  if (a2)
    v6 = 0x40000;
  else
    v6 = 0;
  *(_DWORD *)v4 = *(_DWORD *)v4 & 0xFFFBFFFF | v6;
  return v4;
}

uint64_t sub_22F3C2E98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 24, 3);
  sub_22EFF605C(a2);
  return sub_22E5BBE34(v3, v4, *(_QWORD *)(a2 + 8), BYTE1(*(_DWORD *)a2) & 3, (*(_DWORD *)a2 >> 10) & 7, a2);
}

uint64_t sub_22F3C2EEC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v6;
  uint64_t v7;

  v3 = (uint64_t)a2;
  if (*a2 != 210)
  {
    v3 = sub_22F3C2E98(a1, (uint64_t)a2);
    v6 = *(_DWORD *)(a3 + 8);
    if (v6 >= *(_DWORD *)(a3 + 12))
    {
      v7 = v3;
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v3 = v7;
      v6 = *(_DWORD *)(a3 + 8);
    }
    *(_QWORD *)(*(_QWORD *)a3 + 8 * v6) = v3;
    ++*(_DWORD *)(a3 + 8);
  }
  return v3;
}

uint64_t sub_22F3C2F78(uint64_t a1, int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1) + 16, 3);
  *(_BYTE *)v3 = -39;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(217);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)v3 = *(_DWORD *)v3 & 0xFC03FFFF | ((((a2 << 18) + 0x40000) >> 18) << 18);
  return v3;
}

unsigned __int8 *sub_22F3C2FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v6;
  int v9;
  uint64_t *v10;
  _DWORD *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;

  v6 = a4;
  if (a5 == -1)
  {
    LOBYTE(v9) = 0;
    v10 = (uint64_t *)(a1 + 16392);
  }
  else
  {
    v11 = *(_DWORD **)(a3 + 8 * a5);
    v12 = *v11;
    v10 = (uint64_t *)(v11 + 2);
    v9 = (v12 >> 8) & 3;
  }
  v13 = *v10;
  v14 = (unsigned __int8 *)sub_22E3CD3D4(a1 + 2032, 8 * a4 + 24, 3);
  return sub_22F3C3088(v14, v13, v9, a2, a3, v6, a5);
}

unsigned __int8 *sub_22F3C3088(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7)
{
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = -39;
  if (byte_255E04EB3)
  {
    v14 = sub_22F0D3748(217);
    ++*((_DWORD *)v14 + 2);
  }
  v15 = *a1;
  *((_QWORD *)a1 + 1) = a2;
  *(_DWORD *)a1 = (((a3 & 3) << 8) | (a7 << 26) | ((a6 << 18) + 0x40000) & 0x3FC0000 | v15) + 0x4000000;
  if (a6 != -1)
  {
    v16 = 0;
    do
    {
      v17 = a4;
      if (v16)
        v17 = *(_QWORD *)(a5 - 8 + v16);
      *(_QWORD *)&a1[v16 + 16] = v17;
      v16 += 8;
    }
    while (8 * a6 + 8 != v16);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB0D0((unsigned int *)a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C3184(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  char *v14;
  uint64_t v15;

  *(_BYTE *)a1 = 111;
  if (byte_255E04EB3)
  {
    v14 = sub_22F0D3748(111);
    ++*((_DWORD *)v14 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a5;
  *(_DWORD *)(a1 + 72) = a4;
  *(_DWORD *)(a1 + 76) = a2;
  *(_DWORD *)(a1 + 80) = a7;
  *(_DWORD *)(a1 + 84) = a6;
  if (a4)
  {
    v15 = 0;
    do
    {
      *(_QWORD *)(a1 + 16 + 8 * v15) = *(_QWORD *)(a3 + 8 * v15);
      ++v15;
    }
    while (a4 != v15);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB114(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C324C(int a1)
{
  return dword_22F4A2ED8[a1];
}

uint64_t sub_22F3C325C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v1 || *(_BYTE *)(v1 + 16) != 39)
    v1 = sub_22F10CF48(v1);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF0);
  if (v3)
    v4 = *(_BYTE *)(v3 + 16) == 6;
  else
    v4 = 0;
  if (v4)
    return *(_QWORD *)(v3 + 32);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6)
  {
    v3 = sub_22F10CF48(v3);
    if (v3)
      return *(_QWORD *)(v3 + 32);
  }
  return v2;
}

uint64_t sub_22F3C32DC(uint64_t a1, uint64_t a2, int a3, int a4, const void *a5, uint64_t a6)
{
  uint64_t v11;
  int v12;
  char *v13;
  uint64_t v15;

  v15 = a2;
  v11 = sub_22E4D27F8(&v15);
  if ((*(_BYTE *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    v12 = 256;
  else
    v12 = (sub_22E8BBBD0(v15) & 3) << 8;
  *(_BYTE *)a1 = -38;
  if (byte_255E04EB3)
  {
    v13 = sub_22F0D3748(218);
    ++*((_DWORD *)v13 + 2);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | v12;
  *(_QWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 20) = a4;
  *(_DWORD *)(a1 + 24) = a6;
  if (a6)
    memmove((void *)(a1 + 32), a5, 8 * a6);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AAF0C(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C33D0(uint64_t a1, uint64_t a2, int a3, int a4, const void *a5, uint64_t a6)
{
  uint64_t v11;

  v11 = sub_22E3CD3D4(a1 + 2032, 8 * a6 + 32, 3);
  return sub_22F3C32DC(v11, a2, a3, a4, a5, a6);
}

uint64_t sub_22F3C3434(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 32, 3);
  *(_BYTE *)v3 = -38;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(218);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_DWORD *)(v3 + 24) = a2;
  return v3;
}

char *sub_22F3C34A0(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(result + 32, a2, 8 * a3);
  return result;
}

_DWORD *sub_22F3C34B4(_DWORD *result, const void *a2, uint64_t a3)
{
  if (a3)
    return memmove(&result[2 * (result[6] + 1) + 8], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3C34D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, void *__src, uint64_t a7)
{
  char *v14;

  *(_BYTE *)a1 = -64;
  if (byte_255E04EB3)
  {
    v14 = sub_22F0D3748(192);
    ++*((_DWORD *)v14 + 2);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | 0x100;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 20) = a5;
  *(_DWORD *)(a1 + 24) = a7;
  *(_QWORD *)(a1 + 32 + 8 * a7) = a3;
  if (a7)
    memmove((void *)(a1 + 32), __src, 8 * a7);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AADB0(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C3598(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, void *a6, uint64_t a7, int a8, void *__src, uint64_t a10)
{
  uint64_t v16;

  v16 = sub_22E3CD3D4(a1 + 2032, 16 * a7 + 40, 3);
  sub_22F3C34D4(v16, a2, a3, a4, a5, a6, a7);
  if (a10)
    memmove((void *)(v16 + 8 * (*(_DWORD *)(v16 + 24) + 1) + 32), __src, 8 * a10);
  return v16;
}

uint64_t sub_22F3C363C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1 + (unint64_t)a2) + 32, 3);
  *(_BYTE *)v3 = -64;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(192);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_DWORD *)(v3 + 24) = a2;
  return v3;
}

uint64_t sub_22F3C36B0(uint64_t result, unsigned int a2, uint64_t a3)
{
  *(_QWORD *)(result + 8 * a2 + 32) = a3;
  return result;
}

uint64_t sub_22F3C36BC(uint64_t result, int a2, int a3)
{
  *(_DWORD *)(result
            + 8 * *(unsigned int *)(result + 28)
            + 8 * (3 * *(_DWORD *)(result + 28))
            + 4 * (3 * a2)
            + 32) = a3;
  return result;
}

uint64_t sub_22F3C36DC(uint64_t result, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;

  v7 = *(unsigned int *)(result + 28);
  v8 = result + 8 * v7 + 32;
  *(_QWORD *)(v8 + 8 * (3 * a2)) = a3;
  v9 = 3 * a2 + 1;
  *(_QWORD *)(v8 + 8 * v9) = a5;
  v10 = 3 * a2 + 2;
  *(_QWORD *)(v8 + 8 * v10) = a7;
  v11 = v8 + 8 * (3 * v7);
  *(_DWORD *)(v11 + 4 * v9) = a4;
  *(_DWORD *)(v11 + 4 * v10) = a6;
  return result;
}

uint64_t sub_22F3C3714(uint64_t a1, unsigned int a2)
{
  return *(_QWORD *)(a1 + 8 * a2 + 32);
}

uint64_t sub_22F3C3720@<X0>(uint64_t result@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = result + 8 * *(unsigned int *)(result + 28) + 32;
  v4 = *(_QWORD *)(v3 + 8 * (3 * a2 + 1));
  *a3 = *(_QWORD *)(v3 + 8 * (3 * a2));
  a3[1] = v4;
  a3[2] = *(_QWORD *)(v3 + 8 * (3 * a2 + 2));
  return result;
}

uint64_t sub_22F3C3750(uint64_t a1, int a2)
{
  return *(unsigned int *)(a1
                         + 8 * *(unsigned int *)(a1 + 28)
                         + 8 * (3 * *(_DWORD *)(a1 + 28))
                         + 4 * (3 * a2)
                         + 32);
}

uint64_t sub_22F3C3770(uint64_t a1, int a2)
{
  return *(unsigned int *)(a1
                         + 8 * *(unsigned int *)(a1 + 28)
                         + 8 * (3 * *(_DWORD *)(a1 + 28))
                         + 4 * (3 * a2 + 1)
                         + 32);
}

uint64_t sub_22F3C3794(uint64_t a1, int a2)
{
  return *(unsigned int *)(a1
                         + 8 * *(unsigned int *)(a1 + 28)
                         + 8 * (3 * *(_DWORD *)(a1 + 28))
                         + 4 * (3 * a2 + 2)
                         + 32);
}

__n128 sub_22F3C37B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  _OWORD *v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  v5 = (_OWORD *)(((a1
                  + 8 * *(unsigned int *)(a1 + 28)
                  + 8 * (3 * *(_DWORD *)(a1 + 28))
                  + 4 * (3 * *(_DWORD *)(a1 + 28))
                  + 39) & 0xFFFFFFFFFFFFFFF8)
                + 32 * a2);
  *v5 = *(_OWORD *)a3;
  v5[1] = v4;
  return result;
}

unint64_t sub_22F3C37E8(uint64_t a1, unsigned int a2)
{
  return ((a1
         + 8 * *(unsigned int *)(a1 + 28)
         + 8 * (3 * *(_DWORD *)(a1 + 28))
         + 4 * (3 * *(_DWORD *)(a1 + 28))
         + 39) & 0xFFFFFFFFFFFFFFF8)
       + 32 * a2;
}

uint64_t sub_22F3C3810(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;

  *(_BYTE *)a1 = -63;
  if (byte_255E04EB3)
  {
    v16 = sub_22F0D3748(193);
    ++*((_DWORD *)v16 + 2);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | 0x100;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 20) = a4;
  *(_DWORD *)(a1 + 24) = a5;
  *(_DWORD *)(a1 + 28) = a7;
  if (a7)
  {
    v17 = 0;
    v18 = 0;
    v19 = (uint64_t *)(a6 + 24);
    v20 = (_QWORD *)(a1 + 32);
    do
    {
      *v20++ = *(v19 - 3);
      v21 = *(unsigned int *)(a1 + 28);
      v22 = a1 + 32 + 8 * v21;
      LODWORD(v21) = 3 * v21;
      v23 = v22 + 8 * v21;
      *(_DWORD *)(v23 + 4 * v18) = *((_DWORD *)v19 + 2);
      v24 = *(v19 - 1);
      v25 = *v19;
      *(_QWORD *)(v22 + 8 * v18) = *(v19 - 2);
      *(_QWORD *)(v22 + 8 * (v18 + 1)) = v24;
      LODWORD(v24) = v18 + 2;
      *(_QWORD *)(v22 + 8 * v24) = v25;
      LODWORD(v25) = *((_DWORD *)v19 + 4);
      *(_DWORD *)(v23 + 4 * (v18 + 1)) = *((_DWORD *)v19 + 3);
      *(_DWORD *)(v23 + 4 * v24) = v25;
      v26 = (_OWORD *)(((v23 + 4 * v21 + 7) & 0xFFFFFFFFFFFFFFF8) + v17);
      v27 = *(_OWORD *)(a9 + v17 + 16);
      *v26 = *(_OWORD *)(a9 + v17);
      v26[1] = v27;
      v18 += 3;
      v17 += 32;
      v19 += 6;
    }
    while (3 * a7 != v18);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AAE00(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C395C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v10;
  uint64_t v16;
  uint64_t v17;

  v10 = a7;
  v16 = sub_22E3CD3D4(a1 + 2032, ((44 * a7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32 * a10 + 32, 3);
  return sub_22F3C3810(v16, a2, a3, a4, a5, a6, v10, v17, a9);
}

uint64_t sub_22F3C39E8(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, ((8 * (3 * a2 + (unint64_t)a2) + 12 * a2 + 7) & 0x1FFFFFFFF8) + 32 * a2 + 32, 3);
  *(_BYTE *)v3 = -63;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(193);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_DWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 28) = a2;
  return v3;
}

uint64_t sub_22F3C3A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v10;
  uint64_t v11;

  *(_BYTE *)a1 = -88;
  if (byte_255E04EB3)
  {
    v10 = sub_22F0D3748(168);
    ++*((_DWORD *)v10 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  v11 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (!v11 || *(_BYTE *)(v11 + 16) != 39)
    v11 = sub_22F10CF48(v11);
  if ((*(_DWORD *)(v11 + 40) & 7) == 2)
    *(_QWORD *)(a1 + 32) = a5;
  *(_QWORD *)(a1 + 24) = a4;
  return a1;
}

uint64_t sub_22F3C3B20(uint64_t a1, int *a2, uint64_t *a3, uint64_t a4, int a5)
{
  uint64_t v10;
  int v11;
  char *v12;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v10 = *((_QWORD *)a2 + 1);
  v11 = *a2;
  *(_BYTE *)a1 = -71;
  if (byte_255E04EB3)
  {
    v12 = sub_22F0D3748(185);
    ++*((_DWORD *)v12 + 2);
  }
  if (a5)
    v13 = 0x80000000;
  else
    v13 = 0;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | v11 & 0x1F00;
  *(_DWORD *)(a1 + 4) = v13 & 0x80000000 | (a4 + 1) & 0x7FFFFFFF;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = a2;
  if (a4)
  {
    v14 = (_QWORD *)(a1 + 24);
    v15 = 8 * a4;
    do
    {
      v16 = *a3++;
      *v14++ = v16;
      v15 -= 8;
    }
    while (v15);
  }
  return a1;
}

void sub_22F3C3BE4(unsigned int *a1)
{
  if (sub_22F3C5DF4((uint64_t)a1) != 1)
    sub_22F0D5A50(*(_QWORD *)((char *)&a1[2 * (((unint64_t)*a1 >> 18) & 1) + 2] + ((unint64_t)*a1 >> 24)));
}

char *sub_22F3C3C30(char *result, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v5;
  char *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (a4 != a3)
  {
    v5 = a3;
    v6 = result;
    v7 = a4 - a3;
    v8 = (_QWORD *)*((_QWORD *)result + 1);
    if (v7 > (uint64_t)((*((_QWORD *)result + 2) & 0xFFFFFFFFFFFFFFF8) - (_QWORD)v8) >> 3)
    {
      result = sub_22F003A00((uint64_t)result, a2, v7 + (((uint64_t)v8 - *(_QWORD *)result) >> 3));
      v8 = (_QWORD *)*((_QWORD *)v6 + 1);
    }
    do
    {
      v9 = *v5++;
      *v8++ = v9;
    }
    while (v5 != a4);
    *((_QWORD *)v6 + 1) += 8 * v7;
  }
  return result;
}

uint64_t sub_22F3C3CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, __int128 *a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v19 = a9;
  v21 = a11;
  v20 = a12;
  v22 = *(_QWORD *)(a2 + 16400);
  *(_BYTE *)a1 = -99;
  if (byte_255E04EB3)
  {
    v23 = a7;
    v24 = sub_22F0D3748(157);
    v19 = a9;
    a7 = v23;
    v20 = a12;
    v21 = a11;
    ++*((_DWORD *)v24 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = v22;
  v25 = *a6;
  v26 = *((_QWORD *)a6 + 2);
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 32) = a5;
  *(_OWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 56) = v26;
  *(_QWORD *)(a1 + 64) = a7;
  *(_QWORD *)(a1 + 72) = a8;
  *(_QWORD *)(a1 + 80) = v19;
  *(_DWORD *)(a1 + 88) = v21;
  if (v20)
    v27 = sub_22F3650F8(a2, v20);
  else
    v27 = 0;
  *(_QWORD *)(a1 + 96) = v27;
  if (v21)
  {
    v29 = a1 + 104;
    v30 = 24 * v21;
    do
    {
      v31 = *a10;
      *(_QWORD *)(v29 + 16) = *((_QWORD *)a10 + 2);
      *(_OWORD *)v29 = v31;
      v29 += 24;
      a10 = (__int128 *)((char *)a10 + 24);
      v30 -= 24;
    }
    while (v30);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB2BC(a1, v20 == 0) & 0x1F) << 13);
  return a1;
}

__n128 sub_22F3C3E00(uint64_t a1, __n128 *a2, uint64_t a3)
{
  __n128 *v3;
  uint64_t v4;
  __n128 result;

  if (a3)
  {
    v3 = (__n128 *)(a1 + 104);
    v4 = 24 * a3;
    do
    {
      result = *a2;
      v3[1].n128_u64[0] = a2[1].n128_u64[0];
      *v3 = result;
      v3 = (__n128 *)((char *)v3 + 24);
      a2 = (__n128 *)((char *)a2 + 24);
      v4 -= 24;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_22F3C3E30(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  __int128 v21;
  uint64_t v22;

  v18 = sub_22E3CD3D4(a1 + 2032, 24 * a10 + 104, 3);
  v21 = *(_OWORD *)a5;
  v22 = *(_QWORD *)(a5 + 16);
  return sub_22F3C3CB0(v18, a1, a2, a3, a4, &v21, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_22F3C3EE8(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v16 = *(_QWORD *)(a2 + 16400);
  *(_BYTE *)a1 = -99;
  if (byte_255E04EB3)
  {
    v17 = sub_22F0D3748(157);
    ++*((_DWORD *)v17 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_DWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = a3;
  *(_QWORD *)(a1 + 72) = a3;
  *(_QWORD *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = a5;
  if (a6)
  {
    *(_QWORD *)(a1 + 96) = sub_22F3650F8(a2, a6);
    if (a5)
    {
      v18 = a1 + 104;
      v19 = 24 * a5;
      do
      {
        v20 = *a4;
        *(_QWORD *)(v18 + 16) = *((_QWORD *)a4 + 2);
        *(_OWORD *)v18 = v20;
        v18 += 24;
        a4 = (__int128 *)((char *)a4 + 24);
        v19 -= 24;
      }
      while (v19);
    }
    v21 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = 0;
    if (a5)
    {
      v23 = a1 + 104;
      v24 = 24 * a5;
      do
      {
        v25 = *a4;
        *(_QWORD *)(v23 + 16) = *((_QWORD *)a4 + 2);
        *(_OWORD *)v23 = v25;
        v23 += 24;
        a4 = (__int128 *)((char *)a4 + 24);
        v24 -= 24;
      }
      while (v24);
    }
    v21 = 8;
  }
  if (a7)
    v21 |= 2u;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((v21 | a8) << 13);
  return a1;
}

uint64_t sub_22F3C4038(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v14;

  v14 = sub_22E3CD3D4(a1 + 2032, 24 * a4 + 104, 3);
  return sub_22F3C3EE8(v14, a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_22F3C40B8(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 24 * a2 + 104, 3);
  *(_BYTE *)v3 = -99;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(157);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(_DWORD *)(v3 + 88) = a2;
  return v3;
}

unsigned int *sub_22F3C4144(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t *a4, uint64_t a5, char *a6, uint64_t a7, int a8)
{
  unsigned int *v16;

  v16 = (unsigned int *)sub_22E3CD3D4(a1 + 2032, 8 * (a7 + a5) + 40, 3);
  return sub_22F004F54(v16, a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22F3C41DC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  char *v6;

  v5 = sub_22E3CD3D4(a1 + 2032, 8 * (a3 + (unint64_t)a2) + 40, 3);
  *(_BYTE *)v5 = -37;
  if (byte_255E04EB3)
  {
    v6 = sub_22F0D3748(219);
    ++*((_DWORD *)v6 + 2);
  }
  *(_QWORD *)(v5 + 8) = 0;
  *(_DWORD *)(v5 + 16) = a2;
  *(_DWORD *)(v5 + 20) = a3;
  *(_DWORD *)(v5 + 32) = 0;
  return v5;
}

void sub_22F3C4260(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  unsigned int v7;
  _QWORD v8[5];
  int v9;
  char v10;
  _QWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  _DWORD v20[4];
  __int128 v21;
  int v22;
  _OWORD *v23;
  uint64_t v24;
  _OWORD v25[33];
  int v26;
  __int128 v27;
  uint64_t v28;
  int v29;
  __int128 *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  int v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v37 = 0;
  LODWORD(v39) = 0;
  v38 = a3;
  v8[0] = &off_24FAC58D8;
  v8[1] = a2;
  v5 = *(_QWORD *)(a2 + 2000);
  v6 = *(_BYTE *)(v5 + 180);
  v9 = *(_DWORD *)(v5 + 176);
  v10 = v6 & 1;
  v11[0] = &off_24FAC5960;
  v11[1] = v8;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v16 = 0u;
  v15 = &v16;
  v17 = 0x100000000;
  v18 = v20;
  v19 = 0x200000001;
  v20[0] = 1;
  v20[2] = 1;
  v22 = 0;
  v21 = 0u;
  v8[2] = &v37;
  v8[3] = v11;
  v8[4] = 0x200000001;
  v23 = v25;
  v24 = 0x1000000000;
  v27 = 0u;
  v28 = 0;
  v29 = 0;
  v31 = 0u;
  v26 = 0;
  v25[32] = 0u;
  v30 = &v31;
  v32 = 0;
  v33 = -1;
  v34 = 0x10000;
  v36 = 3;
  v35 = 1;
  sub_22F007F4C((uint64_t)v8, a1, &v39);
  v7 = v41;
  *(_DWORD *)(a4 + 8) = v41;
  if (v7 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)a4, (const llvm::APInt *)&v40);
  else
    *(_QWORD *)a4 = v40;
  *(_BYTE *)(a4 + 12) = v42;
  sub_22F0052A4((uint64_t)v8);
  if (v39 >= 2)
    sub_22EF53BC0(&v39);
}

uint64_t sub_22F3C4410(uint64_t a1, _QWORD *a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int16 v12;
  uint64_t v13;
  _QWORD v14[5];
  int v15;
  char v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  _DWORD v26[4];
  __int128 v27;
  int v28;
  _OWORD *v29;
  uint64_t v30;
  _OWORD v31[33];
  int v32;
  __int128 v33;
  uint64_t v34;
  int v35;
  __int128 *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  int v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                + 16) != 39)
    return 0;
  v12 = 0;
  v13 = 0;
  v14[0] = &off_24FAC58D8;
  v14[1] = a3;
  v8 = *(_QWORD *)(a3 + 2000);
  v9 = *(_BYTE *)(v8 + 180);
  v15 = *(_DWORD *)(v8 + 176);
  v16 = v9 & 1;
  v17[0] = &off_24FAC5960;
  v17[1] = v14;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v22 = 0u;
  v21 = &v22;
  v23 = 0x100000000;
  v24 = v26;
  v25 = 0x200000001;
  v26[0] = 1;
  v26[2] = 1;
  v28 = 0;
  v27 = 0u;
  v14[2] = &v12;
  v14[3] = v17;
  v14[4] = 0x200000001;
  v29 = v31;
  v30 = 0x1000000000;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v37 = 0u;
  v32 = 0;
  v31[32] = 0u;
  v36 = &v37;
  v38 = 0;
  v39 = -1;
  v40 = 0;
  v41 = 0;
  v42 = 2;
  v10 = sub_22F00BAC0(a1, a4, (uint64_t)v14, a2, a5, a6, a7, a8);
  sub_22F0052A4((uint64_t)v14);
  return v10;
}

uint64_t sub_22F3C45A4(uint64_t a1, unint64_t *a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  __int16 v12;
  uint64_t v13;
  uint64_t v14[5];
  int v15;
  char v16;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  _DWORD *v24;
  uint64_t v25;
  _DWORD v26[4];
  __int128 v27;
  int v28;
  _OWORD *v29;
  uint64_t v30;
  _OWORD v31[33];
  int v32;
  __int128 v33;
  uint64_t v34;
  int v35;
  __int128 *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  int v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v12 = 0;
  v13 = 0;
  v14[0] = (uint64_t)&off_24FAC58D8;
  v14[1] = a3;
  v8 = *(_QWORD *)(a3 + 2000);
  v9 = *(_BYTE *)(v8 + 180);
  v15 = *(_DWORD *)(v8 + 176);
  v16 = v9 & 1;
  v17[0] = &off_24FAC5960;
  v17[1] = v14;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v22 = 0u;
  v21 = &v22;
  v23 = 0x100000000;
  v24 = v26;
  v25 = 0x200000001;
  v26[0] = 1;
  v26[2] = 1;
  v28 = 0;
  v27 = 0u;
  v14[2] = (uint64_t)&v12;
  v14[3] = (uint64_t)v17;
  v14[4] = 0x200000001;
  v29 = v31;
  v30 = 0x1000000000;
  v33 = 0u;
  v34 = 0;
  v35 = 0;
  v37 = 0u;
  v32 = 0;
  v31[32] = 0u;
  v36 = &v37;
  v38 = 0;
  v39 = -1;
  v40 = 0;
  v41 = 0;
  v42 = 2;
  v10 = sub_22F00FCFC(a1, a2, v14, a4, a5, a6, a7, a8);
  sub_22F0052A4((uint64_t)v14);
  return v10;
}

unsigned __int8 ***sub_22F3C4700(unsigned __int8 ***a1)
{
  _QWORD v3[5];

  v3[4] = *MEMORY[0x24BDAC8D0];
  if (*a1)
  {
    llvm::APInt::toString();
    sub_22E3B89A8(*a1, v3, 0);
  }
  return a1;
}

uint64_t sub_22F3C47B4(uint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;

  v2 = a2;
  v3 = result;
  v4 = 0;
  if (a2)
  {
    v5 = a2;
LABEL_3:
    ++v4;
    while (1)
    {
      v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v5)
        break;
      if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  v6 = *(unsigned int *)(result + 8);
  if (v4 + v6 > (unint64_t)*(unsigned int *)(result + 12))
  {
    result = llvm::SmallVectorBase<unsigned int>::grow_pod();
    v6 = *(unsigned int *)(v3 + 8);
  }
  if (v2)
  {
    v7 = (unint64_t *)(*(_QWORD *)v3 + 8 * v6);
LABEL_11:
    *v7 = v2;
    while (1)
    {
      v2 = *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v2)
        break;
      if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 49 <= 2)
      {
        ++v7;
        goto LABEL_11;
      }
    }
  }
  *(_DWORD *)(v3 + 8) = v6 + v4;
  return result;
}

unint64_t *sub_22F3C4874(unint64_t *a1)
{
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = *a1;
  if ((*a1 & 1) != 0)
  {
    *a1 = v2 & 0xFC00000000000000 | (2 * ~(-1 << (v2 >> 58))) | 1;
  }
  else
  {
    v3 = *(_QWORD **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
      memset(*(void **)v2, 255, 8 * v4);
    if ((*(_DWORD *)(v2 + 64) & 0x3F) != 0)
      v3[v4 - 1] &= ~(-1 << (*(_DWORD *)(v2 + 64) & 0x3F));
  }
  return a1;
}

uint64_t sub_22F3C4908(llvm::APFloatBase *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  llvm::APFloatBase *v6;
  int v7;
  uint64_t v8;

  v4 = *((_QWORD *)a1 + 1);
  result = llvm::APFloatBase::PPCDoubleDouble(a1);
  v6 = a1;
  if (result == v4)
    v6 = (llvm::APFloatBase *)*((_QWORD *)a1 + 2);
  v7 = (*((unsigned __int8 *)v6 + 28) >> 3) & 1;
  if (result == *(_QWORD *)(a2 + 8))
    v8 = *(_QWORD *)(a2 + 16);
  else
    v8 = a2;
  if (v7 != (*(_BYTE *)(v8 + 28) & 8) >> 3)
    return sub_22E4DFCA0(a1);
  return result;
}

uint64_t sub_22F3C4984(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v6;
  unsigned int v7;

  sub_22E49FA8C((llvm::APInt *)&v6, (unsigned __int16)*a3, a2);
  sub_22F3C4A00(a1, (const llvm::APInt *)&v6, a3);
  if (v7 >= 0x41 && v6)
    MEMORY[0x2348A0E84](v6, 0x1000C8000313F17);
  return a1;
}

uint64_t sub_22F3C4A00(uint64_t a1, const llvm::APInt *a2, _DWORD *a3)
{
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v9;
  unsigned int v10;

  v5 = *((_DWORD *)a2 + 2);
  v10 = v5;
  if (v5 >= 0x41)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v9, a2);
    v5 = v10;
    a2 = (const llvm::APInt *)&v9;
  }
  v6 = *(_QWORD *)a2;
  v7 = (*a3 & 0x20000000) == 0;
  *(_DWORD *)(a1 + 8) = v5;
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 12) = v7;
  *(_DWORD *)(a1 + 16) = *a3;
  return a1;
}

uint64_t sub_22F3C4A70(uint64_t a1, llvm::APInt *a2, int a3, _BYTE *a4)
{
  uint64_t result;
  uint64_t v7;
  unsigned int v8;

  if (a4)
    *a4 = 0;
  sub_22F3C4AE8(a2, a3, (uint64_t)&v7);
  result = sub_22F3C4A00(a1, (const llvm::APInt *)&v7, (_DWORD *)a2 + 4);
  if (v8 >= 0x41)
  {
    result = v7;
    if (v7)
      return MEMORY[0x2348A0E84](v7, 0x1000C8000313F17);
  }
  return result;
}

const llvm::APInt *sub_22F3C4AE8@<X0>(llvm::APInt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  const llvm::APInt *result;
  char v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  _BYTE v10[16];

  if (*((_BYTE *)a1 + 12))
  {
    v4 = (uint64_t *)v10;
    result = sub_22F038D64(a1, a2, (llvm::APInt *)v10);
    v6 = 1;
  }
  else
  {
    v9 = *((_DWORD *)a1 + 2);
    if (v9 > 0x40)
    {
      v7 = a2;
      llvm::APInt::initSlowCase((llvm::APInt *)&v8, a1);
      a2 = v7;
    }
    else
    {
      v8 = *(_QWORD *)a1;
    }
    v4 = &v8;
    result = sub_22E99E710((llvm::APInt *)&v8, a2);
    v6 = 0;
  }
  *(_DWORD *)(a3 + 8) = *((_DWORD *)v4 + 2);
  *(_QWORD *)a3 = *v4;
  *(_BYTE *)(a3 + 12) = v6;
  return result;
}

unsigned __int8 ***sub_22F3C4B84(unsigned __int8 ***a1)
{
  _QWORD v3[5];

  v3[4] = *MEMORY[0x24BDAC8D0];
  if (*a1)
  {
    llvm::APFixedPoint::toString();
    sub_22E3B89A8(*a1, v3, 0);
  }
  return a1;
}

uint64_t sub_22F3C4C24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  llvm::detail::DoubleAPFloat::DoubleAPFloat();
  llvm::detail::DoubleAPFloat::DoubleAPFloat();
  if (v5)
  {
    v2 = *(_QWORD *)(v5 - 8);
    if (v2)
    {
      v3 = 32 * v2;
      do
      {
        sub_22E4EEC9C((uint64_t *)(v5 - 24 + v3));
        v3 -= 32;
      }
      while (v3);
    }
    MEMORY[0x2348A0E84](v5 - 16, 0x1072C801E5F02E8);
  }
  return a1;
}

unsigned __int8 ***sub_22F3C4CB4(unsigned __int8 ***result, llvm::APFloatBase *a2)
{
  unsigned __int8 ***v2;
  _QWORD v4[5];

  v4[4] = *MEMORY[0x24BDAC8D0];
  if (*result)
  {
    v2 = result;
    llvm::APFloatBase::semanticsPrecision();
    sub_22E99A6BC(a2);
    sub_22E3B89A8(*v2, v4, 0);
    return v2;
  }
  return result;
}

_DWORD *sub_22F3C4D94@<X0>(_DWORD *result@<X0>, const llvm::APInt *a2@<X1>, uint64_t a3@<X8>)
{
  _DWORD *v4;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;

  v4 = result;
  v6 = result[2];
  v11 = v6;
  v7 = (uint64_t *)result;
  if (v6 >= 0x41
    && (v7 = &v10,
        result = (_DWORD *)llvm::APInt::initSlowCase((llvm::APInt *)&v10, (const llvm::APInt *)result),
        v6 = v11,
        v11 > 0x40))
  {
    result = (_DWORD *)llvm::APInt::andAssignSlowCase((llvm::APInt *)&v10, a2);
    v6 = v11;
    v8 = v10;
  }
  else
  {
    v8 = *(_QWORD *)a2 & *v7;
  }
  v9 = *((_BYTE *)v4 + 12);
  *(_DWORD *)(a3 + 8) = v6;
  *(_QWORD *)a3 = v8;
  *(_BYTE *)(a3 + 12) = v9;
  return result;
}

_DWORD *sub_22F3C4E2C@<X0>(_DWORD *result@<X0>, const llvm::APInt *a2@<X1>, uint64_t a3@<X8>)
{
  _DWORD *v4;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned int v11;

  v4 = result;
  v6 = result[2];
  v11 = v6;
  v7 = (uint64_t *)result;
  if (v6 >= 0x41
    && (v7 = &v10,
        result = (_DWORD *)llvm::APInt::initSlowCase((llvm::APInt *)&v10, (const llvm::APInt *)result),
        v6 = v11,
        v11 > 0x40))
  {
    result = (_DWORD *)llvm::APInt::xorAssignSlowCase((llvm::APInt *)&v10, a2);
    v6 = v11;
    v8 = v10;
  }
  else
  {
    v8 = *(_QWORD *)a2 ^ *v7;
  }
  v9 = *((_BYTE *)v4 + 12);
  *(_DWORD *)(a3 + 8) = v6;
  *(_QWORD *)a3 = v8;
  *(_BYTE *)(a3 + 12) = v9;
  return result;
}

_DWORD *sub_22F3C4EC4@<X0>(_DWORD *result@<X0>, llvm::APInt *a2@<X1>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  unsigned int v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  _DWORD *v8;
  uint64_t v9;
  llvm::APInt *v10;
  uint64_t v11;
  unsigned int v12;

  v3 = result;
  v4 = result[2];
  v12 = v4;
  v5 = (uint64_t *)result;
  if (v4 >= 0x41)
  {
    v9 = a3;
    v10 = a2;
    v8 = result;
    result = (_DWORD *)llvm::APInt::initSlowCase((llvm::APInt *)&v11, (const llvm::APInt *)result);
    v4 = v12;
    if (v12 > 0x40)
    {
      result = (_DWORD *)llvm::APInt::orAssignSlowCase((llvm::APInt *)&v11, v10);
      v4 = v12;
      v6 = v11;
      v3 = v8;
      a3 = v9;
      goto LABEL_3;
    }
    v3 = v8;
    a3 = v9;
    a2 = v10;
    v5 = &v11;
  }
  v6 = *(_QWORD *)a2 | *v5;
LABEL_3:
  v7 = *((_BYTE *)v3 + 12);
  *(_DWORD *)(a3 + 8) = v4;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 12) = v7;
  return result;
}

uint64_t sub_22F3C4F5C@<X0>(llvm::APInt *a1@<X0>, const llvm::APInt *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (*((_BYTE *)a1 + 12))
  {
    v4 = (uint64_t *)&v9;
    result = llvm::APInt::urem(a1, a2);
    v6 = 1;
  }
  else
  {
    v4 = &v8;
    result = llvm::APInt::srem(a1, a2);
    v6 = 0;
  }
  v7 = *v4;
  *(_DWORD *)(a3 + 8) = *((_DWORD *)v4 + 2);
  *(_QWORD *)a3 = v7;
  *(_BYTE *)(a3 + 12) = v6;
  return result;
}

uint64_t *sub_22F3C4FC0(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  _DWORD *v4;
  uint64_t *result;
  _BYTE v6[8];
  uint64_t v7[4];

  v7[3] = *MEMORY[0x24BDAC8D0];
  v3 = *(_DWORD *)(a1 + 8);
  if (v3 >= *(_DWORD *)(a1 + 12))
    return (uint64_t *)sub_22F3C5094(a1, a2);
  v4 = (_DWORD *)(*(_QWORD *)a1 + 72 * v3);
  sub_22E582758((llvm::detail::IEEEFloat *)v7, (const llvm::detail::IEEEFloat *)(a2 + 8));
  sub_22E7B656C(v4, (uint64_t)v6);
  result = sub_22E4EEC9C(v7);
  ++*(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_22F3C5094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  unsigned int v6;
  _BYTE v8[8];
  uint64_t v9[4];

  v9[3] = *MEMORY[0x24BDAC8D0];
  v4 = llvm::SmallVectorBase<unsigned int>::mallocForGrow();
  v5 = (_DWORD *)(v4 + 72 * *(unsigned int *)(a1 + 8));
  sub_22E582758((llvm::detail::IEEEFloat *)v9, (const llvm::detail::IEEEFloat *)(a2 + 8));
  sub_22E7B656C(v5, (uint64_t)v8);
  sub_22E4EEC9C(v9);
  sub_22F2C464C(a1, v4);
  if (*(_QWORD *)a1 != a1 + 16)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  v6 = *(_DWORD *)(a1 + 8) + 1;
  *(_DWORD *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = 0;
  return v4 + 72 * v6 - 72;
}

uint64_t sub_22F3C5180(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2)
  {
    v2 = 24 * a2;
    v3 = result + 8;
    do
    {
      if ((*(_QWORD *)(v3 - 8) | 0x1000) != 0xFFFFFFFFFFFFF000 && *(_DWORD *)(v3 + 8) >= 0x41u)
      {
        result = *(_QWORD *)v3;
        if (*(_QWORD *)v3)
          result = MEMORY[0x2348A0E84](result, 0x1000C8000313F17);
      }
      v3 += 24;
      v2 -= 24;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_22F3C51F4(uint64_t a1, uint64_t *a2)
{
  char v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;

  v8 = 0;
  v4 = sub_22F28501C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v8);
  v5 = v8;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22F3C5268(a1, a2, v8);
    v7 = *a2;
    *((_DWORD *)v5 + 4) = 1;
    *v5 = v7;
    v5[1] = 0;
    *((_BYTE *)v5 + 20) = 0;
  }
  return v5;
}

_QWORD *sub_22F3C5268(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  int v5;
  unsigned int v6;
  _QWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
  }
  else if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
  {
    goto LABEL_3;
  }
  sub_22F05FC90(a1, v6);
  v8 = 0;
  sub_22F28501C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v8);
  a3 = v8;
LABEL_3:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -4096)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

uint64_t sub_22F3C5318(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD **)result;
    v8 = 24 * v6;
    do
    {
      *v7 = -4096;
      v7 += 3;
      v8 -= 24;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    v9 = *(_QWORD *)a2;
    if ((*(_QWORD *)a2 | 0x1000) != 0xFFFFFFFFFFFFF000)
    {
      v11 = 0;
      result = sub_22F28501C(*(_QWORD *)v5, *(_DWORD *)(v5 + 16), v9, &v11);
      v10 = v11;
      *v11 = *(_QWORD *)a2;
      *((_DWORD *)v10 + 4) = *(_DWORD *)(a2 + 16);
      v10[1] = *(_QWORD *)(a2 + 8);
      *(_DWORD *)(a2 + 16) = 0;
      *((_BYTE *)v10 + 20) = *(_BYTE *)(a2 + 20);
      ++*(_DWORD *)(v5 + 8);
    }
    a2 += 24;
  }
  return result;
}

BOOL sub_22F3C53E4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL8 result;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  result = 0;
  if ((v1 & 4) == 0)
  {
    v2 = v1 & 0xFFFFFFFFFFFFFFF8;
    v3 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFFFFFFFFFF0));
    if (v3)
    {
      v5 = v3;
      if ((*(_DWORD *)(v3 + 28) & 0x7Fu) - 35 <= 2)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v3 + 104) + 96), *(_QWORD *)(v3 + 104));
        if ((**(_QWORD **)(v5 + 128) & 0x400) != 0 && (*(_BYTE *)(v2 + 1) & 3) != 0)
          return 1;
      }
    }
  }
  return result;
}

unint64_t sub_22F3C5464(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v6 = 0;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFFFF8);
  v3 = sub_22E4D27F8(&v5);
  return sub_22EF67F34(a2, v3, &v6);
}

uint64_t sub_22F3C54B4(uint64_t a1, int a2, int a3, int a4)
{
  char *v8;
  int v9;
  int v10;

  *(_BYTE *)a1 = 126;
  if (byte_255E04EB3)
  {
    v8 = sub_22F0D3748(126);
    ++*((_DWORD *)v8 + 2);
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  if (a2)
    v9 = 0x80000;
  else
    v9 = 0;
  if (a4)
    v10 = 0x2000000;
  else
    v10 = 0;
  *(_DWORD *)a1 = v10 | v9 | *(_DWORD *)a1 & 0xFDD7FFFF;
  *(_DWORD *)(a1 + 4) = a3;
  return a1;
}

unsigned int *sub_22F3C554C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, char a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20)
{
  uint64_t v20;
  BOOL v21;
  unsigned int *v22;
  uint64_t v23;

  if (a16)
    LODWORD(v20) = a10 + 1;
  else
    LODWORD(v20) = a10;
  if (a13)
    v20 = (v20 + 1);
  else
    v20 = v20;
  if (HIDWORD(a11))
    v21 = (_DWORD)a11 == 0;
  else
    v21 = 1;
  if (!v21)
    ++v20;
  v22 = (unsigned int *)sub_22E3CD3D4(a1 + 2032, 8 * v20 + 56, 3);
  return sub_22F06003C(v22, a2, a3, a4, a5, a6, a7, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_22F3C5620(uint64_t a1, int a2, int a3, int a4, unsigned int a5)
{
  uint64_t v8;

  v8 = sub_22E3CD3D4(a1 + 2032, 8 * ((a3 + a2 + a4) + (unint64_t)a5) + 56, 3);
  return sub_22F3C54B4(v8, a2, a4, a5);
}

uint64_t sub_22F3C5678(uint64_t a1, uint64_t *a2)
{
  *(_QWORD *)a1 = (unint64_t)a2 & 0xFFFFFFFFFFFFFFFELL;
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 8) = sub_22F115668(*a2);
  return a1;
}

uint64_t sub_22F3C56B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, uint64_t a12, uint64_t a13)
{
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;

  v20 = a11;
  v21 = *(_QWORD *)(a2 + 16848);
  *(_BYTE *)a1 = -127;
  if (byte_255E04EB3)
  {
    v24 = v21;
    v22 = sub_22F0D3748(129);
    v21 = v24;
    v20 = a11;
    ++*((_DWORD *)v22 + 2);
  }
  *(_DWORD *)a1 &= 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = v21;
  *(_QWORD *)(a1 + 16) = a3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a1 + 24) & 0xFE | a4;
  *(_DWORD *)(a1 + 28) = a5;
  *(_QWORD *)(a1 + 32) = a6;
  *(_QWORD *)(a1 + 40) = a7;
  *(_QWORD *)(a1 + 48) = a8;
  *(_DWORD *)(a1 + 56) = a9;
  *(_DWORD *)(a1 + 60) = v20;
  *(_QWORD *)(a1 + 64) = a12;
  *(_QWORD *)(a1 + 72) = a13;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB150(a1) & 0x1F) << 13);
  return a1;
}

unint64_t sub_22F3C5798(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = *(unsigned int *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 64);
  if ((v3 & 1) == 0 && (v3 & 0xFFFFFFFFFFFFFFFELL) != 0)
    return (unint64_t)sub_22F115668(*(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFFELL)) >> 32;
  return result;
}

void sub_22F3C57CC(unsigned __int8 *a1)
{
  int v1;
  int v2;
  unsigned __int8 *v3;
  int v4;
  BOOL v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;

  if (!*((_DWORD *)a1 + 7))
  {
    v1 = *((_DWORD *)a1 + 8);
    if (v1)
    {
      v2 = v1 - 1;
      v3 = a1 + 40;
      v4 = *a1;
      v5 = v4 == 119;
      if (v4 == 119)
        v6 = a1;
      else
        v6 = 0;
      v7 = v6 + 48;
      if (v5)
        v3 = v7;
      sub_22F0D60E4(*(_QWORD *)&v3[8 * v2]);
    }
  }
}

uint64_t sub_22F3C5808(uint64_t a1, int a2, int a3)
{
  int v5;
  uint64_t v6;

  if (a3)
    v5 = 8;
  else
    v5 = 0;
  v6 = sub_22E3CD3D4(a1 + 2032, (v5 + 8 * a2 + 8) + 24, 3);
  return sub_22EFFA3DC(v6, 140, 0, a2, a3);
}

uint64_t sub_22F3C585C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(sub_22F060ED0(a1) + 8);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                + 16) == 39)
    return sub_22F10ACF8(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0));
  return result;
}

uint64_t sub_22F3C58A0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;

  v5 = sub_22E3CD3D4(a1 + 2032, 8 * (a3 + (unint64_t)a2) + 48, 3);
  return sub_22F3C6E70(v5, a2, a3);
}

uint64_t sub_22F3C58E4(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9, uint64_t a10)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;

  if (a6)
    v17 = *(_DWORD *)(a6 + 8);
  else
    v17 = 0;
  v18 = sub_22E3CD3D4(a1 + 2032, 8 * v17 + 48, 3);
  result = sub_22F0627A0(v18, a2, a3, a4, a5, v17, a7, a8, a9, a10);
  if (v17)
  {
    v20 = *(unsigned int *)(a6 + 8);
    if ((_DWORD)v20)
    {
      v21 = (_QWORD *)(result + 48);
      v22 = *(uint64_t **)a6;
      do
      {
        v23 = *v22++;
        *v21++ = v23;
        --v20;
      }
      while (v20);
    }
  }
  return result;
}

uint64_t sub_22F3C59B4(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 48, 3);
  *(_BYTE *)v3 = -108;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(148);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)v3 &= 0xF9FFFFFF;
  *(_DWORD *)(v3 + 4) = a2;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  return v3;
}

uint64_t sub_22F3C5A2C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9, uint64_t a10)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;

  if (a6)
    v17 = *(_DWORD *)(a6 + 8);
  else
    v17 = 0;
  v18 = sub_22E3CD3D4(a1 + 2032, 8 * v17 + 48, 3);
  result = sub_22F062864(v18, a2, a3, a4, a5, v17, a7, a8, a9, a10);
  if (v17)
  {
    v20 = *(unsigned int *)(a6 + 8);
    if ((_DWORD)v20)
    {
      v21 = (_QWORD *)(result + 48);
      v22 = *(uint64_t **)a6;
      do
      {
        v23 = *v22++;
        *v21++ = v23;
        --v20;
      }
      while (v20);
    }
  }
  return result;
}

uint64_t sub_22F3C5B00(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;

  result = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 48, 3);
  *(_BYTE *)result = -107;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(149);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)result &= 0xF9FFFFFF;
  *(_DWORD *)(result + 4) = a2;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_22F3C5B88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  uint64_t v15;

  v15 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  return sub_22F3C6EF0(v15, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_22F3C5C00(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  return sub_22F3C6FB4(v1);
}

uint64_t sub_22F3C5C20(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9)
{
  uint64_t v16;

  v16 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  return sub_22F062928(v16, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_22F3C5CA0(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  return sub_22F3C7014(v1);
}

uint64_t sub_22F3C5CC0(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_22E3CD3D4(a1 + 2032, 48, 3);
  return sub_22F3C7074(v1);
}

unsigned int *sub_22F3C5CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, unsigned int a7, unsigned int a8, unint64_t a9)
{
  unsigned int *v16;
  unsigned int *result;
  int v18;

  v16 = (unsigned int *)sub_22E3CD3D4(a1 + 2032, 8 * (_DWORD)a4 + 8 * (HIDWORD(a9) != 0) + 8 + 32, 3);
  result = sub_22EFFA1EC(v16, 142, a2, 0, 0, a3, a4, a5, a6, v18, a7, a9, 0, 0);
  result[6] = a8;
  return result;
}

uint64_t sub_22F3C5D98(uint64_t a1, int a2, int a3)
{
  int v5;
  uint64_t v6;
  uint64_t result;

  if (a3)
    v5 = 8;
  else
    v5 = 0;
  v6 = sub_22E3CD3D4(a1 + 2032, (v5 + 8 * a2 + 8) + 32, 3);
  result = sub_22EFFA3DC(v6, 142, 0, a2, a3);
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_22F3C5DF4(uint64_t a1)
{
  int v1;
  uint64_t *v3;

  v1 = *(_DWORD *)(a1 + 16);
  if (!v1)
    return 1;
  if (v1 == 2)
    return 4;
  v3 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(sub_22EFFA604(*(unsigned __int8 **)(a1 + *(unsigned __int8 *)(a1 + 3)))
                                           + 120)
                             + 48) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    return 0;
  if ((sub_22F1108E8(*v3) & 1) != 0)
    return 5;
  if (sub_22E479BE0(*v3))
    return 2;
  sub_22F10E0EC(*v3);
  return 3;
}

uint64_t sub_22F3C5E9C(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_22EFFA604(*(unsigned __int8 **)(a1 + *(unsigned __int8 *)(a1 + 3)));
  return sub_22EFC182C(v1);
}

uint64_t sub_22F3C5EB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  char *v15;
  unint64_t v16;
  int v17;
  uint64_t v18;

  v18 = a5;
  v10 = sub_22F1133DC(&v18, a2);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  *(_BYTE *)a1 = 121;
  if (byte_255E04EB3)
  {
    v16 = v10;
    v17 = v11;
    v15 = sub_22F0D3748(121);
    v10 = v16;
    ++*((_DWORD *)v15 + 2);
    v11 = v17;
  }
  if (v11 == 40)
    v12 = 256;
  else
    v12 = (v11 == 41) << 9;
  v13 = *(_DWORD *)a1 & 0xFFFC00FF;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = a6;
  *(_DWORD *)a1 = v13 | v12;
  *(_DWORD *)(a1 + 4) = a3;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22EFB3234(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C5FA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_22F3C5EB8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_22F3C5FAC(uint64_t a1, int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, (8 * a2) + 48, 3);
  *(_BYTE *)v3 = 119;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(119);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = a2;
  return v3;
}

uint64_t sub_22F3C601C(uint64_t a1, int a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;

  result = sub_22E3CD3D4(a1 + 2032, (8 * a2) + 40, 3);
  *(_BYTE *)result = 118;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(118);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_22F3C609C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, int a6, int a7, uint64_t a8, uint64_t *a9, unsigned int a10, int a11, int a12, int a13, unsigned __int8 a14)
{
  char *v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  *(_BYTE *)a1 = -74;
  if (byte_255E04EB3)
  {
    v21 = sub_22F0D3748(182);
    ++*((_DWORD *)v21 + 2);
  }
  v22 = *(_DWORD *)a1;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 24) = a5;
  *(_DWORD *)(a1 + 28) = a12;
  *(_WORD *)(a1 + 4) = a10;
  v23 = v22 & 0xFFC000FF;
  if (a6)
    v24 = 0x100000;
  else
    v24 = 0;
  if (a7)
    v25 = 0x200000;
  else
    v25 = 0;
  *(_DWORD *)a1 = v24 & 0xFFF3FFFF | ((a4 & 3) << 18) | v25 | v23;
  sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  v26 = (_QWORD *)(a1 + 32);
  v27 = a10;
  if (a10)
  {
    do
    {
      v29 = *a9++;
      *v26++ = v29;
      --v27;
    }
    while (v27);
  }
  v30 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v30 && (*(_DWORD *)(v30 + 28) & 0x7Fu) - 35 >= 3)
    v30 = 0;
  v31 = sub_22EFD4788(v30);
  *v26 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v31 + 64))(v31);
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB200(a1, a14) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C61E8(uint64_t a1)
{
  uint64_t result;

  result = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    if ((*(_DWORD *)(result + 28) & 0x7Fu) - 35 >= 3)
      return 0;
  }
  return result;
}

unint64_t sub_22F3C6220(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v1 && (*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v1 = 0;
  return sub_22EFD4788(v1);
}

uint64_t sub_22F3C6258(uint64_t a1, unint64_t a2, uint64_t a3, char a4, int a5, int a6, int a7, uint64_t a8, uint64_t *a9, unsigned int a10, int a11, int a12, int a13, unsigned __int8 a14)
{
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = *(_QWORD *)(a2 + 48);
  if (v19)
    v20 = v19 & 0xFFFFFFFFFFFFFFF0;
  else
    v20 = sub_22EF6462C(a1, a2);
  v21 = sub_22E3CD3D4(a1 + 2032, 8 * a10 + 40, 3);
  return sub_22F3C609C(v21, v20, a3, a4, a5, a6, a7, v22, a9, a10, a11, a12, 0, a14);
}

uint64_t sub_22F3C6314(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  char *v4;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 40, 3);
  *(_BYTE *)v3 = -74;
  if (byte_255E04EB3)
  {
    v4 = sub_22F0D3748(182);
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 4) = a2;
  *(_QWORD *)(v3 + 8 * a2 + 32) = 0;
  return v3;
}

uint64_t sub_22F3C638C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = result + 32;
  if (!*(_QWORD *)(result + 32 + 8 * *(unsigned __int16 *)(result + 4)))
  {
    v2 = result;
    v3 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0));
    if (v3)
    {
      if ((*(_DWORD *)(v3 + 28) & 0x7Fu) - 35 >= 3)
        v3 = 0;
    }
    v4 = sub_22EFD4788(v3);
    result = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v4 + 64))(v4);
    *(_QWORD *)(v1 + 8 * *(unsigned __int16 *)(v2 + 4)) = result;
  }
  return result;
}

uint64_t sub_22F3C63FC(uint64_t a1)
{
  sub_22F3C638C(a1);
  return *(_QWORD *)(a1 + 8 * *(unsigned __int16 *)(a1 + 4) + 32);
}

BOOL sub_22F3C6428(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *a2 & 0xFFFFFFFFFFFFFFF8;
  if (!v2)
    return 0;
  v3 = (*(_DWORD *)(v2 + 28) & 0x7F) != 0x40 && (*(_DWORD *)(v2 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9;
  if (!v3 || (*(_BYTE *)(v2 + 98) & 1) == 0)
    return 0;
  v6 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v6 && (*(_DWORD *)(v6 + 28) & 0x7Fu) - 35 >= 3)
    v6 = 0;
  v7 = sub_22EFD4788(v6);
  v8 = (_QWORD *)(v7 + 72);
  if (!v7)
    v8 = 0;
  v9 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
    v10 = (_QWORD *)*v10;
  return v8 == v10;
}

uint64_t sub_22F3C64D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v2 = 0;
  else
    v2 = v1;
  return *(_QWORD *)(*(_QWORD *)(v2 + 128) + 128);
}

uint64_t sub_22F3C650C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
    v3 = 0;
  else
    v3 = v2;
  return *(_QWORD *)(*(_QWORD *)(v3 + 128) + 128) + 16 * *(unsigned __int16 *)(a1 + 4);
}

uint64_t sub_22F3C655C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
    v3 = 0;
  else
    v3 = v2;
  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 128) + 128);
  sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  return v4;
}

uint64_t sub_22F3C65DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v2 = 0;
  else
    v2 = v1;
  return *(_QWORD *)(*(_QWORD *)(v2 + 128) + 128) + 16 * (*(_WORD *)(*(_QWORD *)(v2 + 128) + 108) & 0x1FFF);
}

uint64_t sub_22F3C6624(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v1 && (*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v1 = 0;
  return sub_22EFD4B08(v1);
}

uint64_t sub_22F3C665C(uint64_t a1)
{
  unint64_t v1;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v1 && (*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v1 = 0;
  return sub_22F3B1C84(v1);
}

uint64_t sub_22F3C6694(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v1 && (*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v1 = 0;
  v2 = *(_QWORD *)(sub_22EFD4788(v1) + 56);
  if ((v2 & 4) != 0)
    return *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFF8) + 40);
  else
    return 0;
}

uint64_t sub_22F3C66E8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v1 && (*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 >= 3)
    v1 = 0;
  v2 = sub_22EFD4788(v1);
  return sub_22E8FB7BC(v2) ^ 1;
}

uint64_t sub_22F3C672C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_22F3C638C(a1);
  v5 = a1 + 32 + 8 * *(unsigned __int16 *)(a1 + 4) + 8;
  *a2 = a1 + 32;
  a2[1] = 0;
  a2[3] = v5;
  a2[4] = 0;
  return result;
}

uint64_t sub_22F3C6768(uint64_t a1, unsigned int a2)
{
  unsigned __int16 v2;
  uint64_t result;
  char *v4;
  uint64_t v5;

  v2 = a2;
  result = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 24, 3);
  *(_BYTE *)result = -83;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(173);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)result = *(_DWORD *)result & 0x7FFFF | (v2 << 19);
  return result;
}

uint64_t sub_22F3C67EC(uint64_t result, int a2, int a3)
{
  int v3;
  int v4;
  char *v5;
  char *v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)result = 123;
  if (byte_255E04EB3)
  {
    v9 = result;
    v7 = a2;
    v8 = a3;
    v5 = sub_22F0D3748(123);
    a2 = v7;
    a3 = v8;
    v6 = v5;
    result = v9;
    ++*((_DWORD *)v6 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_OWORD *)(result + 24) = 0u;
  *(_OWORD *)(result + 40) = 0u;
  *(_DWORD *)(result + 56) = 0;
  if (a2)
    v3 = 0x80000;
  else
    v3 = 0;
  if (a3)
    v4 = 0x100000;
  else
    v4 = 0;
  *(_DWORD *)result = v4 | v3 | *(_DWORD *)result & 0xFFE7FFFF;
  return result;
}

uint64_t sub_22F3C688C(uint64_t a1, int a2, int a3, int a4)
{
  int v6;
  int v7;
  uint64_t v8;

  if (a2)
    v6 = 88;
  else
    v6 = 72;
  if (a4)
    v7 = 8;
  else
    v7 = 0;
  v8 = sub_22E3CD3D4(a1 + 2032, (v7 + v6 + 32 * a3), 3);
  return sub_22F3C67EC(v8, a2, a4);
}

unsigned int *sub_22F3C68E4(unsigned int *a1, unsigned int a2, int a3)
{
  char *v6;
  unsigned int v7;
  int v8;

  *(_BYTE *)a1 = -44;
  if (byte_255E04EB3)
  {
    v6 = sub_22F0D3748(212);
    ++*((_DWORD *)v6 + 2);
  }
  v7 = *a1;
  if (a3)
    v8 = 0x40000;
  else
    v8 = 0;
  *((_QWORD *)a1 + 1) = 0;
  *((_QWORD *)a1 + 2) = 0;
  a1[6] = 0;
  *((_QWORD *)a1 + 5) = 0;
  *((_QWORD *)a1 + 6) = 0;
  *((_QWORD *)a1 + 4) = 0;
  *a1 = v7 & 0xFFFBFFFF | v8;
  a1[1] = a2;
  *((_QWORD *)a1 + 8) = 0;
  a1[18] = 0;
  return a1;
}

unsigned int *sub_22F3C6974(uint64_t a1, unsigned int a2, int a3, int a4)
{
  int v6;
  unsigned int *v7;

  if (a3)
    v6 = 16;
  else
    v6 = 0;
  v7 = (unsigned int *)sub_22E3CD3D4(a1 + 2032, v6 + 8 * a2 + 32 * a4 + 80, 3);
  return sub_22F3C68E4(v7, a2, a3);
}

uint64_t sub_22F3C69C0(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;

  result = sub_22E3CD3D4(a1 + 2032, 24 * a2 + 40, 3);
  *(_BYTE *)result = -34;
  if (byte_255E04EB3)
  {
    v5 = result;
    v4 = sub_22F0D3748(222);
    result = v5;
    ++*((_DWORD *)v4 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 28) = a2;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_22F3C6A44(uint64_t result, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6)
{
  unsigned int v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)result = -29;
  if (byte_255E04EB3)
  {
    v13 = a5;
    v14 = result;
    v9 = a2;
    v10 = a6;
    v12 = a4;
    v11 = a3;
    v7 = sub_22F0D3748(227);
    a3 = v11;
    a2 = v9;
    a6 = v10;
    a4 = v12;
    v8 = v7;
    a5 = v13;
    result = v14;
    ++*((_DWORD *)v8 + 2);
  }
  v6 = *(_DWORD *)result & 0xFFFC00FF | ((a3 & 3) << 8);
  *(_DWORD *)result = v6;
  *(_QWORD *)(result + 8) = a2;
  *(_QWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = *(_QWORD *)(a6 + 8);
  *(_DWORD *)(result + 32) = *(_DWORD *)(a6 + 4);
  *(_DWORD *)(result + 36) = a5;
  *(_DWORD *)result = v6 | 0x1E000;
  return result;
}

uint64_t sub_22F3C6ADC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)(result + 32);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(result + 24);
  *(_DWORD *)a2 = 8;
  *(_DWORD *)(a2 + 4) = v2;
  return result;
}

uint64_t sub_22F3C6AF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5, uint64_t a6)
{
  char *v12;
  unsigned int v13;
  uint64_t v14;

  *(_BYTE *)a1 = -82;
  if (byte_255E04EB3)
  {
    v12 = sub_22F0D3748(174);
    ++*((_DWORD *)v12 + 2);
  }
  v13 = *(_DWORD *)a1 & 0xFFFC00FF | 0x100;
  *(_DWORD *)a1 = v13;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 28) = a5;
  if (a6 && a5)
  {
    v14 = 0;
    do
    {
      *(_QWORD *)(a1 + v14 + 32) = *(_QWORD *)(a6 + v14);
      v14 += 8;
    }
    while (8 * a5 != v14);
    v13 = *(_DWORD *)a1 & 0xFFFC1FFF;
  }
  *(_DWORD *)a1 = v13 | 0x1E000;
  return a1;
}

uint64_t sub_22F3C6BB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  uint64_t v11;

  v6 = a6;
  v11 = sub_22E3CD3D4(a1 + 2032, 8 * a6 + 32, 3);
  return sub_22F3C6AF4(v11, a2, a3, a4, v6, a5);
}

uint64_t sub_22F3C6C1C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  char *v3;
  unsigned int v4;

  v2 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 32, 3);
  *(_BYTE *)v2 = -82;
  if (byte_255E04EB3)
  {
    v3 = sub_22F0D3748(174);
    ++*((_DWORD *)v3 + 2);
  }
  v4 = *(_DWORD *)v2 & 0xFFFC00FF | 0x1E100;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_DWORD *)v2 = v4;
  return v2;
}

uint64_t sub_22F3C6C94(uint64_t result, unint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (a2)
  {
    v5 = result;
    v6 = *(_QWORD *)(result + 16);
    if ((v6 & 4) == 0)
    {
      result = sub_22F3C6CF4(v6 & 0xFFFFFFFFFFFFFFF8, a2, a3);
      v6 = result | 4;
      *(_QWORD *)(v5 + 16) = result | 4;
    }
    v7 = v6 & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v7 + 48) = a2;
    *(_DWORD *)(v7 + 56) = a3;
  }
  return result;
}

uint64_t sub_22F3C6CF4(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v6 = sub_22EFC72E8(a2);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  if ((v7 & 4) != 0)
    v8 = (_QWORD *)*v8;
  v9 = sub_22EFC7430(72, v6, (uint64_t)v8, 0);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  if ((v10 & 4) != 0)
    v11 = (_QWORD *)*v11;
  result = sub_22EA41AB8(v9, 11, (uint64_t)v11, *(_DWORD *)(a2 + 24));
  *(_QWORD *)result = &unk_24FAC3DB8;
  *(_QWORD *)(result + 40) = a1;
  *(_QWORD *)(result + 48) = a2;
  *(_DWORD *)(result + 56) = a3;
  *(_QWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_22F3C6D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 4) != 0
    && (v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFF8) + 48)) != 0
    && (*(_DWORD *)(v4 + 28) & 0x7Fu) - 60 <= 6
    && sub_22F10AFE4(*(_QWORD *)(a1 + 8), a2)
    && (v7 = *(_QWORD *)(a1 + 8), (v7 & 4) == 0)
    && (v8 = v7 & 0xFFFFFFFFFFFFFFF0, (*(_BYTE *)(v8 + 8) & 4) == 0)
    && sub_22F111D3C(*(_QWORD *)v8, a2))
  {
    return sub_22EFBCBC4(v4, a2);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22F3C6E1C(uint64_t a1, int a2, int a3)
{
  int v5;
  uint64_t v6;

  if (a3)
    v5 = 8;
  else
    v5 = 0;
  v6 = sub_22E3CD3D4(a1 + 2032, (v5 + 8 * a2 + 16) + 24, 3);
  return sub_22EFFA3DC(v6, 139, 1, a2, a3);
}

uint64_t sub_22F3C6E70(uint64_t result, int a2, int a3)
{
  int v3;
  char *v4;
  char *v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)result = -106;
  if (byte_255E04EB3)
  {
    v8 = result;
    v6 = a3;
    v7 = a2;
    v4 = sub_22F0D3748(150);
    a3 = v6;
    a2 = v7;
    v5 = v4;
    result = v8;
    ++*((_DWORD *)v5 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  if (a3)
    v3 = 0x4000000;
  else
    v3 = 0;
  *(_DWORD *)result = *(_DWORD *)result & 0xF9FFFFFF | v3;
  *(_DWORD *)(result + 4) = a2;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_22F3C6EF0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  unsigned int v12;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = -109;
  if (byte_255E04EB3)
  {
    v17 = a4;
    v18 = a5;
    v16 = a3;
    v15 = a2;
    v14 = sub_22F0D3748(147);
    a2 = v15;
    a4 = v17;
    a5 = v18;
    a3 = v16;
    ++*((_DWORD *)v14 + 2);
  }
  v12 = *(_DWORD *)a1 & 0xF80000FF;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)a1 = v12 & 0xFFFFFCFF | ((a3 & 3) << 8) | 0x140000;
  *(_QWORD *)(a1 + 24) = a5;
  *(_DWORD *)a1 = v12 & 0xFFFC1CFF | ((a3 & 3) << 8) & 0x1FFF | 0x140000 | ((sub_22EFB2630(a1) & 0x1F) << 13);
  *(_DWORD *)(a1 + 32) = a6;
  *(_DWORD *)(a1 + 36) = a7;
  *(_QWORD *)(a1 + 40) = a8;
  return a1;
}

uint64_t sub_22F3C6FB4(uint64_t a1)
{
  char *v2;

  *(_BYTE *)a1 = -109;
  if (byte_255E04EB3)
  {
    v2 = sub_22F0D3748(147);
    ++*((_DWORD *)v2 + 2);
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)a1 = *(_DWORD *)a1 & 0xF9FFFFFF;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

uint64_t sub_22F3C7014(uint64_t a1)
{
  char *v2;

  *(_BYTE *)a1 = -110;
  if (byte_255E04EB3)
  {
    v2 = sub_22F0D3748(146);
    ++*((_DWORD *)v2 + 2);
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)a1 = *(_DWORD *)a1 & 0xF9FFFFFF;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return a1;
}

uint64_t sub_22F3C7074(uint64_t result)
{
  char *v1;
  uint64_t v2;

  *(_BYTE *)result = -105;
  if (byte_255E04EB3)
  {
    v2 = result;
    v1 = sub_22F0D3748(151);
    result = v2;
    ++*((_DWORD *)v1 + 2);
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)result = *(_DWORD *)result & 0xF9FFFFFF;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_22F3C70DC(uint64_t a1, uint64_t *a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  int v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = -55;
  if (byte_255E04EB3)
    sub_22F3F189C(201);
  v14 = *(_DWORD *)a1;
  *(_QWORD *)(a1 + 8) = a4;
  if (a6)
    v15 = 0x40000;
  else
    v15 = 0;
  *(_DWORD *)a1 = v14 & 0xFFF800FF | v15;
  *(_DWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 20) = a7;
  *(_QWORD *)(a1 + 32) = a5;
  if (a3)
  {
    v16 = (_QWORD *)(a1 + 40);
    v17 = a3;
    do
    {
      v18 = *a2++;
      *v16++ = v18;
      --v17;
    }
    while (v17);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB340(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C71A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  unsigned int v11;
  uint64_t v13;

  v11 = a3;
  v13 = sub_22E3CD3D4(a1 + 2032, 8 * a3 + 40, 3);
  return sub_22F3C70DC(v13, a2, v11, a4, a5, a6, a7);
}

uint64_t sub_22F3C7214(uint64_t a1, unsigned int a2)
{
  uint64_t v3;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 40, 3);
  *(_BYTE *)v3 = -55;
  if (byte_255E04EB3)
    sub_22F3F189C(201);
  *(_QWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 16) = a2;
  *(_DWORD *)v3 = *(_DWORD *)v3 & 0xFFFBFFFF | ((a2 == 0) << 18);
  return v3;
}

uint64_t sub_22F3C728C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v16;
  int v17;
  unsigned int v18;
  _OWORD *v19;
  uint64_t v20;
  _BYTE *v21;
  int *v22;
  int v23;

  *(_BYTE *)a1 = -53;
  if (byte_255E04EB3)
    sub_22F3F189C(203);
  v16 = *(_DWORD *)a1;
  *(_QWORD *)(a1 + 8) = a5;
  if (a7)
    v17 = 0x40000;
  else
    v17 = 0;
  *(_DWORD *)a1 = v16 & 0xFFF800FF | v17;
  if (a4)
    v18 = 0x80000000;
  else
    v18 = 0;
  *(_DWORD *)(a1 + 16) = v18 & 0x80000000 | a3 & 0x7FFFFFFF;
  *(_QWORD *)(a1 + 20) = a8;
  *(_QWORD *)(a1 + 32) = a6;
  if ((a3 & 0x7FFFFFFF) != 0)
  {
    v19 = (_OWORD *)(a1 + 40);
    v20 = a3 & 0x7FFFFFFF;
    v21 = (_BYTE *)(a2 + 24);
    v22 = (int *)(a1 + 16 * v20 + 44);
    do
    {
      *v19 = *(_OWORD *)(v21 - 24);
      if (a4)
      {
        *(v22 - 1) = *((_DWORD *)v21 - 2);
        v23 = *v21;
        if (*v21)
          v23 = *((_DWORD *)v21 - 1) + 1;
        *v22 = v23;
      }
      v21 += 32;
      ++v19;
      v22 += 2;
      --v20;
    }
    while (v20);
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22EFB33E0(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C73A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v13;
  uint64_t v15;
  uint64_t v16;

  v13 = a3;
  v15 = 8 * a3;
  if (!a4)
    v15 = 0;
  v16 = sub_22E3CD3D4(a1 + 2032, v15 + 16 * a3 + 40, 3);
  return sub_22F3C728C(v16, a2, v13, a4, a5, a6, a7, a8);
}

uint64_t sub_22F3C7430(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v5 = 8 * a2;
  if (!a3)
    v5 = 0;
  v6 = sub_22E3CD3D4(a1 + 2032, v5 + 16 * a2 + 40, 3);
  *(_BYTE *)v6 = -53;
  if (byte_255E04EB3)
    sub_22F3F189C(203);
  *(_QWORD *)(v6 + 8) = 0;
  if (a3)
    v7 = 0x80000000;
  else
    v7 = 0;
  *(_DWORD *)(v6 + 20) = 0;
  *(_DWORD *)(v6 + 24) = 0;
  *(_DWORD *)(v6 + 16) = v7 & 0x80000000 | a2 & 0x7FFFFFFF;
  *(_DWORD *)v6 = *(_DWORD *)v6 & 0xFFFBFFFF | ((a2 == 0) << 18);
  return v6;
}

unint64_t sub_22F3C74D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  v2 = *(_QWORD *)(a1 + 40);
  if ((v2 & 6) == 2)
    return v2 & 0xFFFFFFFFFFFFFFF0;
  v3 = (uint64_t *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if ((*(_QWORD *)(a1 + 40) & 6) == 4)
    return sub_22F36D148(a2, v3, 0);
  else
    return v3[1];
}

uint64_t sub_22F3C750C(uint64_t a1, uint64_t a2, char a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  int v17;
  int v18;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v29;

  v17 = a6;
  v18 = a5;
  v23 = a16;
  v24 = a13;
  *(_BYTE *)a1 = -56;
  if (byte_255E04EB3)
  {
    v29 = a2;
    sub_22F3F189C(200);
    v23 = a16;
    v24 = a13;
    a2 = v29;
    v17 = a6;
    v18 = a5;
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | ((a3 & 3) << 8);
  if (a12)
    v25 = a12;
  else
    v25 = a8;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = v25;
  if (v17)
    v26 = 196608;
  else
    v26 = 0x20000;
  if (v23)
    v27 = 0x4000000;
  else
    v27 = 0;
  *(_DWORD *)(a1 + 24) = v26 | ((a12 != 0) << 24) | v27 | *(_DWORD *)(a1 + 24) & 0xF800FFFF;
  *(_DWORD *)(a1 + 28) = v18;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = a15;
  sub_22F062CBC((_DWORD *)a1, v24, a14, a9, a10, a11);
  *(_QWORD *)(a1 + 40) = a7;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB37C(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C7650(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, uint64_t a6, void *__src, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v19;
  int v21;
  int v22;
  uint64_t v23;
  int v24;

  v19 = a2;
  v21 = a14;
  v22 = a13;
  *(_BYTE *)a1 = -56;
  if (byte_255E04EB3)
  {
    sub_22F3F189C(200);
    v21 = a14;
    v22 = a13;
    v19 = a2;
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | ((a3 & 3) << 8);
  if (a10)
    v23 = a10;
  else
    v23 = a6;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v23;
  if (v21)
    v24 = 0x4000000;
  else
    v24 = 0;
  *(_QWORD *)(a1 + 24) = v24 | ((a10 != 0) << 24) | *(_DWORD *)(a1 + 24) & 0xF800FFFF;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = v22;
  sub_22F062CBC((_DWORD *)a1, a11, a12, __src, a8, a9);
  *(_QWORD *)(a1 + 40) = a5;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB37C(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C7770(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, uint64_t a6, void *__src, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v19;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;

  v19 = a2;
  v21 = a14;
  v22 = a13;
  *(_BYTE *)a1 = -56;
  if (byte_255E04EB3)
  {
    sub_22F3F189C(200);
    v21 = a14;
    v22 = a13;
    v19 = a2;
  }
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC00FF | ((a3 & 3) << 8);
  if (v21)
    v23 = 0x4000000;
  else
    v23 = 0;
  if (a10)
    v24 = a10;
  else
    v24 = a6;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v24;
  if (a10)
    v25 = 16842752;
  else
    v25 = 0x10000;
  *(_QWORD *)(a1 + 24) = v23 | v25 | *(_DWORD *)(a1 + 24) & 0xF800FFFF;
  *(_DWORD *)(a1 + 32) = a4;
  *(_DWORD *)(a1 + 36) = v22;
  sub_22F062CBC((_DWORD *)a1, a11, a12, __src, a8, a9);
  *(_QWORD *)(a1 + 40) = a5;
  *(_DWORD *)a1 = *(_DWORD *)a1 & 0xFFFC1FFF | ((sub_22F3AB37C(a1) & 0x1F) << 13);
  return a1;
}

uint64_t sub_22F3C7898(uint64_t a1, int a2, unsigned int a3)
{
  unsigned __int16 v3;
  uint64_t v4;

  v3 = a2;
  v4 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1) + 4 * a3 + 40, 3);
  return sub_22F3C7B08(v4, v3);
}

uint64_t sub_22F3C78D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v5;
  unsigned int i;
  int v7;
  unint64_t v8;

  result = sub_22E80459C(a1);
  if ((_DWORD)result)
  {
    v5 = result;
    for (i = 0; i != v5; ++i)
    {
      result = sub_22F30C460(a1, i);
      v7 = result;
      v8 = *(unsigned int *)(a2 + 8);
      if (v8 >= *(unsigned int *)(a2 + 12))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v8 = *(unsigned int *)(a2 + 8);
      }
      *(_DWORD *)(*(_QWORD *)a2 + 4 * v8) = v7;
      ++*(_DWORD *)(a2 + 8);
    }
  }
  return result;
}

unint64_t sub_22F3C796C(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if ((*(_BYTE *)(a1 + 27) & 1) == 0)
    return sub_22EF67758(a2, a1);
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return sub_22EF67758(a2, a1);
  v6 = *(_QWORD *)(v5 + 80);
  v7 = sub_22F36E044(a2);
  v8 = *(_QWORD *)(v7 + 48);
  if (v8)
    v9 = v8 & 0xFFFFFFFFFFFFFFF0;
  else
    v9 = sub_22EF6462C(a2, v7);
  if (v6 == v9)
    return *(_QWORD *)(a1 + 8);
  return v6;
}

uint64_t sub_22F3C79F4(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 16;
  if ((*(_BYTE *)(a1 + 27) & 1) != 0)
    v1 = *(_QWORD *)v1 + 40;
  return *(_QWORD *)v1;
}

uint64_t sub_22F3C7A10(uint64_t a1)
{
  int v1;
  uint64_t v3;

  v1 = *(_DWORD *)(a1 + 24);
  if (BYTE2(v1) - 2 < 2)
  {
    if ((v1 & 0xFE0000) == 0x20000)
      return *(_QWORD *)(a1 + 40);
    return 0;
  }
  if (BYTE2(v1))
    return *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  if ((v1 & 0xFF0000) != 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 40);
  if (!v3)
    return 0;
  return *(_QWORD *)v3;
}

uint64_t sub_22F3C7A68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v1 = (uint64_t *)(sub_22F3C7A10(a1) & 0xFFFFFFFFFFFFFFF0);
  v2 = *v1;
  if (*v1 && *(_BYTE *)(v2 + 16) == 32)
    return sub_22F31179C(v2);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
    goto LABEL_6;
  v2 = sub_22F10CF48(v2);
  if (v2)
    return sub_22F31179C(v2);
  v2 = *v1;
LABEL_6:
  result = sub_22E4EBB74(v2);
  if (result)
    return sub_22F272660(result);
  return result;
}

uint64_t sub_22F3C7AE0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  int v2;
  uint64_t v3;

  v2 = *(_DWORD *)(result + 24);
  if ((v2 & 0xFF0000) == 0x10000)
    v3 = result + 40;
  else
    v3 = result + 48;
  *a2 = v3;
  a2[1] = 0;
  a2[3] = result + 48 + 8 * (unsigned __int16)v2;
  a2[4] = 0;
  return result;
}

uint64_t sub_22F3C7B08(uint64_t a1, unsigned __int16 a2)
{
  int v4;

  *(_BYTE *)a1 = -56;
  if (byte_255E04EB3)
    sub_22F3F189C(200);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v4 = *(_DWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 24) = v4 & 0xE0000000 | a2;
  return a1;
}

void sub_22F3C7B64(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[80] = 0;
}

uint64_t sub_22F3C7B70()
{
  return 2;
}

uint64_t sub_22F3C7B9C()
{
  return 0;
}

uint64_t sub_22F3C7BA4()
{
  return 0;
}

uint64_t sub_22F3C7BAC()
{
  return 0;
}

uint64_t sub_22F3C7BB4()
{
  return 0;
}

uint64_t sub_22F3C7BBC()
{
  return 0;
}

uint64_t sub_22F3C7BC4()
{
  return 0;
}

uint64_t sub_22F3C7BCC()
{
  return 0;
}

void sub_22F3C7BE4()
{
  JUMPOUT(0x2348A0E9CLL);
}

unsigned __int8 **sub_22F3C7BF8@<X0>(unsigned __int8 **result@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, _DWORD *a4@<X2>)
{
  unsigned __int8 *v4;
  int v5;

  if (**result != 42)
    return sub_22F0630C8(result, a2, a3);
  v4 = *result + 1;
  *result = v4;
  v5 = (*a4)++;
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = 0x200000000;
  *(_DWORD *)(a3 + 16) = v5;
  *(_WORD *)(a3 + 20) = *(_BYTE *)(a3 + 20) & 0xFE;
  return result;
}

unint64_t sub_22F3C7C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5;
  unint64_t result;
  uint64_t v7;
  int v8;

  v5 = *(_QWORD *)(a1 + 8);
  if (v5 >= 0x10)
  {
    result = sub_22EF63724(a2, v5, a3, 0);
    v7 = *(_QWORD *)(a1 + 16);
    v8 = 2;
  }
  else
  {
    result = 0;
    v7 = 0;
    v8 = 1;
  }
  *(_DWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = result;
  *(_QWORD *)(a4 + 16) = v7;
  *(_BYTE *)(a4 + 24) = 0;
  *(_DWORD *)(a4 + 28) = 0;
  return result;
}

unint64_t sub_22F3C7CAC(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;

  switch(*(_DWORD *)a1)
  {
    case 2:
      v4 = *(_QWORD *)(a1 + 8);
      break;
    case 3:
      v4 = a2[2111];
      break;
    case 4:
      v4 = a2[2102];
      break;
    case 5:
      v4 = a2[2051];
      break;
    case 6:
      v5 = a2[2051];
      goto LABEL_9;
    case 7:
      v5 = a2[2053];
LABEL_9:
      v4 = sub_22EF5B848((uint64_t)a2, v5, 0);
      break;
    case 8:
      v4 = a2[2054];
      break;
    default:
      v4 = 0;
      break;
  }
  if (*(_BYTE *)(a1 + 24))
    return sub_22EF5B848((uint64_t)a2, v4, 0);
  else
    return v4;
}

uint64_t sub_22F3C7D60(uint64_t a1)
{
  uint64_t v1;

  v1 = *(int *)(a1 + 8);
  if (v1 > 0x10)
    return 0;
  else
    return (uint64_t)*(&off_24FAC5A68 + v1);
}

uint64_t sub_22F3C7D84(uint64_t a1)
{
  uint64_t v1;

  v1 = *(int *)(a1 + 24);
  if (v1 > 0x21)
    return 0;
  else
    return qword_24FAC5AF0[v1];
}

llvm::raw_ostream *sub_22F3C7DA8(llvm::raw_ostream *result, llvm::raw_ostream *a2)
{
  llvm::raw_ostream *v3;
  int v4;
  char v5;
  llvm::raw_ostream *v6;

  v3 = result;
  v4 = *((_DWORD *)result + 3);
  if (v4 == 1)
  {
    if (*((_BYTE *)result + 21))
      sub_22E47DAC0(a2, ".");
    return (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  }
  else if (v4 == 2)
  {
    if (*((_BYTE *)result + 21))
      sub_22E47DAC0(a2, ".");
    v5 = *((_BYTE *)v3 + 20);
    result = sub_22E47DAC0(a2, "*");
    if ((v5 & 1) != 0)
    {
      v6 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
      return sub_22E47DAC0(v6, "$");
    }
  }
  return result;
}

uint64_t sub_22F3C7E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v10;
  int v11;
  uint64_t v14;
  int v15;
  int v18;

  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  while (2)
  {
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(_QWORD *)(v3 + 40);
    if ((v4 & 7) != 0)
      v5 = 0;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFFF8;
    v6 = *(_QWORD *)(v5 + 16);
    switch(*(_DWORD *)v6)
    {
      case 6:
        v7 = *(_DWORD *)(v6 + 16);
        v8 = *(unsigned __int16 *)(v6 + 20);
        if (v7 == 1702521203 && v8 == 29791)
          goto LABEL_30;
        goto LABEL_28;
      case 7:
        v10 = *(_DWORD *)(v6 + 16);
        v11 = *(_DWORD *)(v6 + 19);
        if (v10 != 2053731187 || v11 != 1952408954)
          goto LABEL_28;
LABEL_30:
        v18 = 8;
        goto LABEL_32;
      case 8:
        if (*(_QWORD *)(v6 + 16) == 0x745F78616D746E69)
          goto LABEL_31;
        goto LABEL_28;
      case 9:
        if (*(_QWORD *)(v6 + 16) == 0x5F78616D746E6975 && *(_BYTE *)(v6 + 24) == 116)
        {
LABEL_31:
          v18 = 7;
          goto LABEL_32;
        }
        v14 = *(_QWORD *)(v6 + 16);
        v15 = *(unsigned __int8 *)(v6 + 24);
        if (v14 != 0x5F66666964727470 || v15 != 116)
        {
LABEL_28:
          v2 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v3 + 80) & 0xFFFFFFFFFFFFFFF8)
                                     + ((2 * *(_QWORD *)(v3 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(v2 + 16) != 50)
            return 0;
          continue;
        }
        v18 = 9;
LABEL_32:
        *(_DWORD *)(a2 + 8) = v18;
        return 1;
      default:
        goto LABEL_28;
    }
  }
}

uint64_t sub_22F3C7FB8(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  v10 = operator new();
  v11 = sub_22F3DC384(v10, a1, a2, *a3, a4, a5);
  v16 = a2;
  v17 = v11;
  sub_22F3C94A8((uint64_t)v15, a1 + 8, &v16, &v17);
  v12 = v17;
  v17 = 0;
  if (v12)
  {
    v14 = sub_22F3C96C4(v12);
    MEMORY[0x2348A0E9C](v14, 0x10F0C4041095D91);
  }
  return v10;
}

_QWORD *sub_22F3C8078(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  _QWORD *result;

  v3 = *(_DWORD *)(a1 + 8);
  if (v3 >= *(_DWORD *)(a1 + 12))
    return (_QWORD *)sub_22F3C9790(a1, a2);
  result = (_QWORD *)(*(_QWORD *)a1 + 144 * v3);
  *result = result + 2;
  result[1] = 0x800000000;
  if (*(_DWORD *)(a2 + 8))
    result = (_QWORD *)sub_22F2528D0((uint64_t)result, a2);
  ++*(_DWORD *)(a1 + 8);
  return result;
}

int32x2_t sub_22F3C80EC(int32x2_t *a1, int a2)
{
  int v4;
  int32x2_t result;
  int32x2_t v6;
  unsigned __int32 v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  int v19;

  v4 = a1[53].i32[0] - a1[52].i32[0];
  v18 = a2;
  v19 = v4;
  sub_22EFB5B48((uint64_t)&v17, (uint64_t)&a1[46], &v18, &v19);
  v6 = a1[49];
  v7 = a1[51].u32[0];
  if (v7)
  {
    v8 = (v7 - 1) & (37 * a2);
    v9 = *(_QWORD *)&v6 + 48 * v8;
    v10 = *(_DWORD *)v9;
    if (*(_DWORD *)v9 == a2)
      goto LABEL_3;
    v15 = 1;
    while (v10 != -1)
    {
      v16 = v8 + v15++;
      v8 = v16 & (v7 - 1);
      v9 = *(_QWORD *)&v6 + 48 * v8;
      v10 = *(_DWORD *)v9;
      if (*(_DWORD *)v9 == a2)
        goto LABEL_3;
    }
  }
  v9 = *(_QWORD *)&v6 + 48 * v7;
LABEL_3:
  if (v9 != *(_QWORD *)&v6 + 48 * v7)
  {
    v11 = *(unsigned int **)(v9 + 8);
    v12 = *(unsigned int *)(v9 + 16);
    if ((_DWORD)v12)
    {
      v13 = 4 * v12;
      do
      {
        v14 = *v11++;
        *(_DWORD *)(*(_QWORD *)&a1[52] + v14 - 4) = v4 - v14;
        v13 -= 4;
      }
      while (v13);
      v11 = *(unsigned int **)(v9 + 8);
    }
    if (v11 != (unsigned int *)(v9 + 24))
      free(v11);
    *(_DWORD *)v9 = -2;
    result = vadd_s32(a1[50], (int32x2_t)0x1FFFFFFFFLL);
    a1[50] = result;
  }
  return result;
}

uint64_t sub_22F3C821C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _DWORD *v9;
  unsigned int v10;
  _DWORD *v11;
  int v12;

  v12 = a2;
  v3 = *(_QWORD *)(a1 + 424) - *(_QWORD *)(a1 + 416) + 8;
  v4 = *(_QWORD *)(a1 + 368);
  v5 = *(unsigned int *)(a1 + 384);
  v6 = sub_22F0648F0(v4, v5, a2);
  if ((int *)(v4 + 8 * v5) != v6)
    return (v6[1] - v3);
  v9 = sub_22F3C98E4(a1 + 392, &v12);
  v10 = v9[4];
  if (v10 >= v9[5])
  {
    v11 = v9;
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v9 = v11;
    v10 = v11[4];
  }
  v7 = 0;
  *(_DWORD *)(*((_QWORD *)v9 + 1) + 4 * v10) = v3;
  ++v9[4];
  return v7;
}

uint64_t sub_22F3C82E4(uint64_t a1, _DWORD *a2)
{
  if (!*(_BYTE *)(a1 + 364))
  {
    *(_DWORD *)(a1 + 360) = *a2;
    *(_BYTE *)(a1 + 364) = 1;
  }
  return 0;
}

uint64_t sub_22F3C8304(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int __src;

  v3 = sub_22F3C821C(a1, *a2);
  v5 = 0;
  __src = v3;
  return sub_22F3C861C(a1, 238, (char *)&__src, &v5);
}

uint64_t sub_22F3C834C(uint64_t a1, int *a2)
{
  int v3;
  uint64_t v5;
  int __src;

  v3 = sub_22F3C821C(a1, *a2);
  v5 = 0;
  __src = v3;
  return sub_22F3C861C(a1, 239, (char *)&__src, &v5);
}

uint64_t sub_22F3C8398(uint64_t a1, char a2, uint64_t *a3)
{
  char __src;

  __src = a2;
  return sub_22F3C83BC(a1, &__src, a3);
}

uint64_t sub_22F3C83BC(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 18;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 0xFFFFFFFFLL] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 1, 1);
  return v9;
}

uint64_t sub_22F3C84C4(uint64_t a1, __int16 a2, uint64_t *a3)
{
  __int16 __src;

  __src = a2;
  return sub_22F3C84E8(a1, (char *)&__src, a3);
}

uint64_t sub_22F3C84E8(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 19;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 4294967294] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 2, 2);
  return v9;
}

uint64_t sub_22F3C85F0(uint64_t a1, int a2, uint64_t *a3)
{
  int __src;

  __src = a2;
  return sub_22F3C861C(a1, 20, (char *)&__src, a3);
}

uint64_t sub_22F3C861C(uint64_t a1, int a2, char *__src, uint64_t *a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  char *v13;
  int __srca;
  uint64_t v16;

  __srca = a2;
  v7 = a1 + 416;
  v9 = *(_QWORD *)(a1 + 416);
  v8 = *(char **)(a1 + 424);
  if ((unint64_t)&v8[-v9 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v8, (char *)&__srca, (char *)&v16, 4);
    v9 = *(_QWORD *)(a1 + 416);
    v8 = *(char **)(a1 + 424);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  if ((unint64_t)*a4 >= 8)
  {
    v11 = (_DWORD)v8 - v9;
    v12 = *(_QWORD *)(a1 + 448);
    if (v12 >= *(_QWORD *)(a1 + 456))
    {
      v13 = sub_22F064F00((char **)(a1 + 440), v11, *a4);
    }
    else
    {
      *(_DWORD *)v12 = v11;
      *(_QWORD *)(v12 + 8) = *a4;
      v13 = (char *)(v12 + 16);
    }
    *(_QWORD *)(a1 + 448) = v13;
    v9 = *(_QWORD *)(a1 + 416);
    v8 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v8[-v9 - 4294967292] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v7, v8, __src, __src + 4, 4);
  return v10;
}

uint64_t sub_22F3C871C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t __src;

  __src = a2;
  return sub_22F3C8740(a1, (char *)&__src, a3);
}

uint64_t sub_22F3C8740(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 21;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 4294967288] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 8, 8);
  return v9;
}

uint64_t sub_22F3C8848(uint64_t a1, char a2, uint64_t *a3)
{
  char __src;

  __src = a2;
  return sub_22F3C886C(a1, &__src, a3);
}

uint64_t sub_22F3C886C(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 22;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 0xFFFFFFFFLL] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 1, 1);
  return v9;
}

uint64_t sub_22F3C8974(uint64_t a1, __int16 a2, uint64_t *a3)
{
  __int16 __src;

  __src = a2;
  return sub_22F3C8998(a1, (char *)&__src, a3);
}

uint64_t sub_22F3C8998(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 23;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 4294967294] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 2, 2);
  return v9;
}

uint64_t sub_22F3C8AA0(uint64_t a1, int a2, uint64_t *a3)
{
  int __src;

  __src = a2;
  return sub_22F3C861C(a1, 24, (char *)&__src, a3);
}

uint64_t sub_22F3C8ACC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t __src;

  __src = a2;
  return sub_22F3C8AF0(a1, (char *)&__src, a3);
}

uint64_t sub_22F3C8AF0(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 25;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 4294967288] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 8, 8);
  return v9;
}

uint64_t sub_22F3C8BF8(uint64_t a1, char a2, uint64_t *a3)
{
  char __src;

  __src = a2;
  return sub_22F3C8C1C(a1, &__src, a3);
}

uint64_t sub_22F3C8C1C(uint64_t a1, char *__src, uint64_t *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char *v12;
  int __srca;
  uint64_t v15;

  __srca = 26;
  v6 = a1 + 416;
  v8 = *(_QWORD *)(a1 + 416);
  v7 = *(char **)(a1 + 424);
  if ((unint64_t)&v7[-v8 - 4294967292] >= 0xFFFFFFFF00000000)
  {
    sub_22F064D04(a1 + 416, v7, (char *)&__srca, (char *)&v15, 4);
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  if ((unint64_t)*a3 >= 8)
  {
    v10 = (_DWORD)v7 - v8;
    v11 = *(_QWORD *)(a1 + 448);
    if (v11 >= *(_QWORD *)(a1 + 456))
    {
      v12 = sub_22F064F00((char **)(a1 + 440), v10, *a3);
    }
    else
    {
      *(_DWORD *)v11 = v10;
      *(_QWORD *)(v11 + 8) = *a3;
      v12 = (char *)(v11 + 16);
    }
    *(_QWORD *)(a1 + 448) = v12;
    v8 = *(_QWORD *)(a1 + 416);
    v7 = *(char **)(a1 + 424);
  }
  if ((unint64_t)&v7[-v8 - 0xFFFFFFFFLL] < 0xFFFFFFFF00000000)
    return 0;
  sub_22F064D04(v6, v7, __src, __src + 1, 1);
  return v9;
}

uint64_t sub_22F3C8D24(uint64_t a1, int a2, uint64_t *a3)
{
  int __src;

  __src = a2;
  return sub_22F3C861C(a1, 27, (char *)&__src, a3);
}

BOOL sub_22F3C8D50(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 28, a3);
}

BOOL sub_22F3C8D58(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 38, a3);
}

BOOL sub_22F3C8D60(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 49, a3);
}

BOOL sub_22F3C8D68(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 59, a3);
}

void sub_22F3C8D70(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C8D98(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 4) = a3;
  return sub_22F3C861C(a1, 89, (char *)(v4 - 4), a4);
}

void sub_22F3C8E44(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C8E6C(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 4) = a3;
  return sub_22F3C861C(a1, 99, (char *)(v4 - 4), a4);
}

void sub_22F3C8F18(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C8F40(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 4) = a3;
  return sub_22F3C861C(a1, 109, (char *)(v4 - 4), a4);
}

uint64_t sub_22F3C8FEC(uint64_t a1, int a2, uint64_t *a3)
{
  int __src;

  __src = a2;
  return sub_22F3C861C(a1, 118, (char *)&__src, a3);
}

void sub_22F3C9018(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C9040(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 4) = a3;
  return sub_22F3C861C(a1, 189, (char *)(v4 - 4), a4);
}

BOOL sub_22F3C90EC(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 241, a3);
}

BOOL sub_22F3C90F4(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 251, a3);
}

BOOL sub_22F3C90FC(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 271, a3);
}

BOOL sub_22F3C9104(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 281, a3);
}

BOOL sub_22F3C910C(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 290, a3);
}

BOOL sub_22F3C9114(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 303, a3);
}

BOOL sub_22F3C911C(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 313, a3);
}

BOOL sub_22F3C9124(_QWORD *a1, uint64_t *a2)
{
  return sub_22F064954(a1, 323, a2);
}

void sub_22F3C9130(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C9158(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v4;

  *(_DWORD *)(v4 - 4) = a3;
  return sub_22F3C861C(a1, 345, (char *)(v4 - 4), a4);
}

BOOL sub_22F3C9204(_QWORD *a1, int a2, uint64_t *a3)
{
  return sub_22F064954(a1, a2 + 413, a3);
}

uint64_t sub_22F3C920C(uint64_t a1, uint64_t a2, int *a3, _OWORD *a4)
{
  uint64_t result;
  _DWORD *v9;
  char v10;
  uint64_t v11;
  _DWORD *v12;

  v12 = 0;
  result = sub_22F3C92A8(*(_QWORD *)a2, *(_DWORD *)(a2 + 16), *a3, &v12);
  v9 = v12;
  if ((result & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    result = (uint64_t)sub_22F3C9344(a2, a3, v12);
    v9 = (_DWORD *)result;
    *(_DWORD *)result = *a3;
    *(_OWORD *)(result + 8) = *a4;
    v10 = 1;
  }
  v11 = *(_QWORD *)a2 + 24 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v10;
  return result;
}

uint64_t sub_22F3C92A8(uint64_t a1, int a2, int a3, _QWORD *a4)
{
  int v4;
  unsigned int v5;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  _DWORD *v10;
  int v11;
  BOOL v12;
  unsigned int v13;

  if (a2)
  {
    v4 = a2 - 1;
    v5 = (37 * a3) & (a2 - 1);
    v6 = (_DWORD *)(a1 + 24 * v5);
    v7 = *v6;
    if (*v6 == a3)
    {
      v8 = 1;
    }
    else
    {
      v10 = 0;
      v11 = 1;
      while (v7 != -1)
      {
        if (v10)
          v12 = 0;
        else
          v12 = v7 == -2;
        if (v12)
          v10 = v6;
        v13 = v5 + v11++;
        v5 = v13 & v4;
        v6 = (_DWORD *)(a1 + 24 * (v13 & v4));
        v7 = *v6;
        v8 = 1;
        if (*v6 == a3)
          goto LABEL_4;
      }
      v8 = 0;
      if (v10)
        v6 = v10;
    }
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
LABEL_4:
  *a4 = v6;
  return v8;
}

_DWORD *sub_22F3C9344(uint64_t a1, int *a2, _DWORD *a3)
{
  int v5;
  unsigned int v6;
  _DWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
  }
  else if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
  {
    goto LABEL_3;
  }
  sub_22F064AAC(a1, v6);
  v8 = 0;
  sub_22F3C92A8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v8);
  a3 = v8;
LABEL_3:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -1)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

uint64_t sub_22F3C93F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  _DWORD *v10;
  _DWORD *v11;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_DWORD **)result;
    v8 = 24 * v6;
    do
    {
      *v7 = -1;
      v7 += 6;
      v8 -= 24;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    v9 = *(_DWORD *)a2;
    if (*(_DWORD *)a2 <= 0xFFFFFFFD)
    {
      v11 = 0;
      result = sub_22F3C92A8(*(_QWORD *)v5, *(_DWORD *)(v5 + 16), v9, &v11);
      v10 = v11;
      *v11 = *(_DWORD *)a2;
      *(_OWORD *)(v10 + 2) = *(_OWORD *)(a2 + 8);
      ++*(_DWORD *)(v5 + 8);
    }
    a2 += 24;
  }
  return result;
}

uint64_t sub_22F3C94A8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t result;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v13 = 0;
  result = sub_22F246C54((uint64_t *)a2, a3, &v13);
  v9 = v13;
  if ((result & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    result = (uint64_t)sub_22F3C9540(a2, a3, v13);
    v9 = (_QWORD *)result;
    *(_QWORD *)result = *a3;
    v12 = *a4;
    *a4 = 0;
    *(_QWORD *)(result + 8) = v12;
    v10 = 1;
  }
  v11 = *(_QWORD *)a2 + 16 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v10;
  return result;
}

_QWORD *sub_22F3C9540(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  int v5;
  unsigned int v6;
  _QWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
  }
  else if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
  {
    goto LABEL_3;
  }
  sub_22F064B78(a1, v6);
  v8 = 0;
  sub_22F246C54((uint64_t *)a1, a2, &v8);
  a3 = v8;
LABEL_3:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -4096)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

uint64_t sub_22F3C95EC(uint64_t result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD **)result;
    v8 = 16 * v6;
    do
    {
      *v7 = -4096;
      v7 += 2;
      v8 -= 16;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    if ((*a2 | 0x1000) != 0xFFFFFFFFFFFFF000)
    {
      v12 = 0;
      sub_22F246C54((uint64_t *)v5, a2, &v12);
      v9 = v12;
      *v12 = *a2;
      v10 = a2[1];
      a2[1] = 0;
      v9[1] = v10;
      ++*(_DWORD *)(v5 + 8);
      result = a2[1];
      a2[1] = 0;
      if (result)
      {
        v11 = sub_22F3C96C4(result);
        result = MEMORY[0x2348A0E9C](v11, 0x10F0C4041095D91);
      }
    }
    a2 += 2;
  }
  return result;
}

uint64_t sub_22F3C96C4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  llvm::deallocate_buffer(*(llvm **)(a1 + 432), (void *)(24 * *(unsigned int *)(a1 + 448)));
  v2 = *(void **)(a1 + 384);
  if (v2 != (void *)(a1 + 400))
    free(v2);
  sub_22F340364((char **)(a1 + 80));
  v3 = *(void **)(a1 + 56);
  if (v3)
  {
    *(_QWORD *)(a1 + 64) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 32);
  if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_22F3C973C()
{
  JUMPOUT(0x2348A0E9CLL);
}

llvm::raw_ostream *sub_22F3C9750(int a1, llvm::raw_ostream *a2)
{
  return sub_22E47DAC0(a2, "unimplemented feature");
}

void *sub_22F3C9764()
{
  return &unk_255E04EB2;
}

BOOL sub_22F3C9770(uint64_t a1, void *a2)
{
  return a2 == &unk_255E04EB2 || a2 == (void *)MEMORY[0x24BED5A38];
}

uint64_t sub_22F3C9790(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;

  v4 = (_QWORD *)llvm::SmallVectorBase<unsigned int>::mallocForGrow();
  v5 = &v4[18 * *(unsigned int *)(a1 + 8)];
  *v5 = v5 + 2;
  v5[1] = 0x800000000;
  if (*(_DWORD *)(a2 + 8))
    sub_22F2528D0((uint64_t)v5, a2);
  sub_22F34187C(a1, v4);
  if (*(_QWORD *)a1 != a1 + 16)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  v6 = *(_DWORD *)(a1 + 8) + 1;
  *(_DWORD *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = 0;
  return (uint64_t)&v4[18 * v6 - 18];
}

uint64_t sub_22F3C9848(uint64_t a1, int a2, int a3, _QWORD *a4)
{
  int v4;
  unsigned int v5;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  _DWORD *v10;
  int v11;
  BOOL v12;
  unsigned int v13;

  if (a2)
  {
    v4 = a2 - 1;
    v5 = (37 * a3) & (a2 - 1);
    v6 = (_DWORD *)(a1 + 48 * v5);
    v7 = *v6;
    if (*v6 == a3)
    {
      v8 = 1;
    }
    else
    {
      v10 = 0;
      v11 = 1;
      while (v7 != -1)
      {
        if (v10)
          v12 = 0;
        else
          v12 = v7 == -2;
        if (v12)
          v10 = v6;
        v13 = v5 + v11++;
        v5 = v13 & v4;
        v6 = (_DWORD *)(a1 + 48 * (v13 & v4));
        v7 = *v6;
        v8 = 1;
        if (*v6 == a3)
          goto LABEL_4;
      }
      v8 = 0;
      if (v10)
        v6 = v10;
    }
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
LABEL_4:
  *a4 = v6;
  return v8;
}

_DWORD *sub_22F3C98E4(uint64_t a1, int *a2)
{
  char v4;
  _DWORD *v5;
  _DWORD *v7;

  v7 = 0;
  v4 = sub_22F3C9848(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22F3C9960(a1, a2, v7);
    *v5 = *a2;
    *((_QWORD *)v5 + 1) = v5 + 6;
    *((_QWORD *)v5 + 2) = 0x500000000;
  }
  return v5;
}

_DWORD *sub_22F3C9960(uint64_t a1, int *a2, _DWORD *a3)
{
  int v5;
  unsigned int v6;
  _DWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
  }
  else if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
  {
    goto LABEL_3;
  }
  sub_22F064C38(a1, v6);
  v8 = 0;
  sub_22F3C9848(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v8);
  a3 = v8;
LABEL_3:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -1)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

void sub_22F3C9A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  void *v12;
  _DWORD *v13;

  v4 = a2;
  *(_QWORD *)(a1 + 8) = 0;
  v6 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_DWORD **)a1;
    v8 = 48 * v6;
    do
    {
      *v7 = -1;
      v7 += 12;
      v8 -= 48;
    }
    while (v8);
  }
  if (a2 != a3)
  {
    do
    {
      v9 = *(_DWORD *)v4;
      if (*(_DWORD *)v4 <= 0xFFFFFFFD)
      {
        v13 = 0;
        sub_22F3C9848(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), v9, &v13);
        v10 = v13;
        *v13 = *(_DWORD *)v4;
        *((_QWORD *)v10 + 2) = 0x500000000;
        *((_QWORD *)v10 + 1) = v10 + 6;
        v11 = (uint64_t)(v10 + 2);
        if (*(_DWORD *)(v4 + 16))
          sub_22E78FCDC(v11, v4 + 8);
        ++*(_DWORD *)(a1 + 8);
        v12 = *(void **)(v4 + 8);
        if ((void *)(v4 + 24) != v12)
          free(v12);
      }
      v4 += 48;
    }
    while (v4 != a3);
  }
}

uint64_t sub_22F3C9B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9[8];

  v9[7] = *MEMORY[0x24BDAC8D0];
  v3 = (*(_DWORD *)a2 >> 18) & 0x7F;
  if (v3 > 0x3E)
  {
LABEL_7:
    sub_22F0D5A50(a2);
    LODWORD(v9[0]) = v7;
    return sub_22F3C82E4(a1, v9);
  }
  v4 = *(_DWORD **)(a2 + 16);
  if (((1 << ((*(_DWORD *)a2 >> 18) & 0x7F)) & 0x6000000000303020) != 0)
    return sub_22F0653E4(a1, *(_DWORD **)(a2 + 16));
  if (v3 != 4)
  {
    if (v3 == 25)
    {
      sub_22F3CC0B8((uint64_t)v9, a1, 1);
      v8 = sub_22F0653E4(a1, v4);
      sub_22F3CC2F0(v9);
      return v8;
    }
    goto LABEL_7;
  }
  v9[0] = a1;
  v9[1] = a2;
  sub_22F064FEC(a1, (uint64_t)v4, (void (*)(uint64_t, uint64_t))sub_22F3CBF84, (uint64_t)v9);
  return v6;
}

uint64_t sub_22F3C9C2C(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v6[8];

  v6[7] = *MEMORY[0x24BDAC8D0];
  sub_22F3CC0B8((uint64_t)v6, a1, 1);
  v4 = sub_22F0653E4(a1, a2);
  sub_22F3CC2F0(v6);
  return v4;
}

uint64_t sub_22F3C9CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;

  if (*(_BYTE *)(a1 + 552))
    return 1;
  v6 = a2 + 16;
  sub_22F257F94(a2 + 16, (llvm::APInt *)&v14);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = sub_22F0665E4(*(uint64_t **)(a1 + 464), v7);
  if ((v8 & 0xFF00000000) != 0)
  {
    v10 = v8;
    sub_22EF6A330(**(_QWORD **)(a1 + 464), v7);
    sub_22F257F94(v6, (llvm::APInt *)&v12);
    sub_22F3C9DC8(a1, v10);
    v2 = v11;
    if (v13 >= 0x41 && v12)
      MEMORY[0x2348A0E84](v12, 0x1000C8000313F17);
  }
  else
  {
    sub_22F0D5A50(a2);
    LODWORD(v12) = v9;
    v2 = sub_22F3C82E4(a1, &v12);
  }
  if (v15 >= 0x41 && v14)
    MEMORY[0x2348A0E84](v14, 0x1000C8000313F17);
  return v2;
}

void sub_22F3C9DC8(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3C9E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(_DWORD *)(a3 + 8);
  if (v5 > 0x40)
    v6 = **(_QWORD **)a3;
  else
    v6 = (uint64_t)(*(_QWORD *)a3 << -(char)v5) >> -(char)v5;
  v8 = v4 | 4;
  return sub_22F3C8848(v3, v6, &v8);
}

uint64_t sub_22F3CA00C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[8];

  v19[7] = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  if ((*(_DWORD *)a2 & 0xFC0000) == 0x800000)
  {
    sub_22F3CC0B8((uint64_t)v19, a1, 1);
    v12 = sub_22F0653E4(a1, v4);
    sub_22F3CC2F0(v19);
    if (v12)
      return sub_22F0653E4(a1, v3);
    else
      return 0;
  }
  else
  {
    v6 = sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(v4 + 8));
    v7 = sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(v3 + 8)) & 0xFF00000000;
    v8 = (v6 & 0xFF00000000) == 0 || v7 == 0;
    if (!v8 && (v9 = sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(a2 + 8)), (v9 & 0xFF00000000) != 0))
    {
      v13 = v9;
      sub_22F3CC0B8((uint64_t)v19, a1, 0);
      v14 = sub_22F0653E4(a1, v4);
      sub_22F3CC2F0(v19);
      result = 0;
      if (v14)
      {
        sub_22F3CC0B8((uint64_t)v19, a1, 0);
        v15 = sub_22F0653E4(a1, v3);
        sub_22F3CC2F0(v19);
        result = 0;
        if (v15)
        {
          switch((*(_DWORD *)a2 >> 18) & 0x3F)
          {
            case 2:
              v16 = a2 | 4;
              v18 = a2 | 4;
              result = sub_22F3C9104((_QWORD *)a1, v13, &v18);
              if ((_DWORD)result)
                goto LABEL_20;
              return result;
            case 5:
              v16 = a2 | 4;
              v18 = a2 | 4;
              result = sub_22F3C8394((_QWORD *)a1, v13, &v18);
              if ((_DWORD)result)
                goto LABEL_20;
              return result;
            case 6:
              v16 = a2 | 4;
              v18 = a2 | 4;
              result = sub_22F3C9204((_QWORD *)a1, v13, &v18);
              if (!(_DWORD)result)
                return result;
LABEL_20:
              if (!*(_BYTE *)(a1 + 552))
                goto LABEL_34;
              v19[0] = v16;
              goto LABEL_36;
            case 0xA:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C90F4((_QWORD *)a1, v6, &v18);
              if ((_DWORD)result)
                goto LABEL_33;
              return result;
            case 0xB:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C8D68((_QWORD *)a1, v6, &v18);
              if ((_DWORD)result)
                goto LABEL_33;
              return result;
            case 0xC:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C90EC((_QWORD *)a1, v6, &v18);
              if ((_DWORD)result)
                goto LABEL_33;
              return result;
            case 0xD:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C8D60((_QWORD *)a1, v6, &v18);
              if ((_DWORD)result)
                goto LABEL_33;
              return result;
            case 0xE:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C8D58((_QWORD *)a1, v6, &v18);
              if ((_DWORD)result)
                goto LABEL_33;
              return result;
            case 0xF:
              v17 = a2 | 4;
              v18 = v17;
              result = sub_22F3C910C((_QWORD *)a1, v6, &v18);
              if (!(_DWORD)result)
                return result;
LABEL_33:
              if (*(_BYTE *)(a1 + 552))
              {
                v19[0] = v17;
LABEL_36:
                result = sub_22F3C9114((_QWORD *)a1, v13, v19);
              }
              else
              {
LABEL_34:
                result = 1;
              }
              break;
            default:
              goto LABEL_7;
          }
        }
      }
    }
    else
    {
LABEL_7:
      sub_22F0D5A50(a2);
      LODWORD(v19[0]) = v10;
      return sub_22F3C82E4(a1, v19);
    }
  }
  return result;
}

uint64_t sub_22F3CA304(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v6[8];

  v6[7] = *MEMORY[0x24BDAC8D0];
  sub_22F3CC0B8((uint64_t)v6, a1, 0);
  v4 = sub_22F0653E4(a1, a2);
  sub_22F3CC2F0(v6);
  return v4;
}

BOOL sub_22F3CA384(uint64_t a1, uint64_t a2)
{
  int v4;
  _BOOL8 v5;
  int v6;
  _BOOL8 v7;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15[8];

  v15[7] = *MEMORY[0x24BDAC8D0];
  v12 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = &v10;
  LOBYTE(v13) = 0;
  v14 = 0;
  v10 = &unk_24FAC5D40;
  v11 = a1;
  sub_22F3CC0B8((uint64_t)v15, a1, 0);
  v4 = sub_22F0653E4(a1, (_DWORD *)a2);
  sub_22F3CC2F0(v15);
  v5 = 0;
  if (v4)
  {
    if ((*(_BYTE *)(a2 + 1) & 3) != 0)
    {
      v6 = 9;
    }
    else
    {
      v9 = sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(a2 + 8));
      v6 = v9;
      if ((v9 & 0xFF00000000) == 0)
      {
        v15[0] = a2 | 4;
        v7 = sub_22F3C9124((_QWORD *)a1, v15);
        goto LABEL_5;
      }
    }
    v15[0] = a2 | 4;
    v7 = sub_22F3C911C((_QWORD *)a1, v6, v15);
LABEL_5:
    v5 = v7;
  }
  v10 = &unk_24FAC5C60;
  if (v14)
  {
    v15[0] = 0;
    sub_22F3C8D24(v11, v13, v15);
  }
  *(_QWORD *)(v11 + 528) = v12;
  return v5;
}

uint64_t sub_22F3CA4CC(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return a1;
}

void sub_22F3CA538(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t (**v17)();
  int v18;
  uint64_t (**v19)();
  uint64_t (**__src)();
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  uint64_t (**v26)();
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v4 = (_DWORD *)sub_22EFBC5B4(a2);
  v5 = sub_22F071CDC(*(_QWORD *)(a1 + 472), a2);
  if ((v5 & 0xFF00000000) != 0)
  {
    v6 = v5;
    v7 = sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(a2 + 48));
    if ((v7 & 0xFF00000000) != 0)
    {
      v12 = v7;
      v13 = *(_QWORD *)(a1 + 528);
      v21 = a1;
      v22 = v13;
      *(_QWORD *)(a1 + 528) = &__src;
      LOBYTE(v23) = 0;
      v24 = 0;
      __src = &off_24FAC5D78;
      v14 = *(_QWORD *)(a1 + 472);
      v25 = v14;
      v15 = *(_DWORD *)(v14 + 320) + 1;
      *(_DWORD *)(v14 + 320) = v15;
      *(_DWORD *)(v14 + 324) = v15;
      sub_22F3CC0B8((uint64_t)&v26, a1, 0);
      v16 = sub_22F0653E4(a1, v4);
      sub_22F3CC2F0((uint64_t *)&v26);
      *(_DWORD *)(v25 + 324) = -1;
      __src = (uint64_t (**)())&unk_24FAC5C60;
      if (v24)
      {
        v26 = 0;
        sub_22F3C8D24(v21, v23, (uint64_t *)&v26);
      }
      *(_QWORD *)(v21 + 528) = v22;
      if (v16)
      {
        v17 = (uint64_t (**)())(a2 & 0xFFFFFFFFFFFFFFFBLL);
        v26 = v17;
        if (sub_22F3C8D50((_QWORD *)a1, v12, (uint64_t *)&v26))
        {
          v26 = v17;
          sub_22F3C9018(a1, v12);
          if (v18)
          {
            v26 = v17;
            sub_22F3C911C((_QWORD *)a1, v12, (uint64_t *)&v26);
          }
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 528);
      v27 = a1;
      v28 = v8;
      *(_QWORD *)(a1 + 528) = &v26;
      LOBYTE(v29) = 0;
      v30 = 0;
      v26 = &off_24FAC5D78;
      v9 = *(_QWORD *)(a1 + 472);
      v31 = v9;
      v10 = *(_DWORD *)(v9 + 320) + 1;
      *(_DWORD *)(v9 + 320) = v10;
      *(_DWORD *)(v9 + 324) = v10;
      v11 = sub_22F3CA7C8(a1, v4, v6);
      *(_DWORD *)(v31 + 324) = -1;
      v26 = (uint64_t (**)())&unk_24FAC5C60;
      if (v30)
      {
        __src = 0;
        sub_22F3C8D24(v27, v29, (uint64_t *)&__src);
      }
      *(_QWORD *)(v27 + 528) = v28;
      if (v11)
      {
        v19 = (uint64_t (**)())(a2 & 0xFFFFFFFFFFFFFFFBLL);
        v26 = v19;
        LODWORD(__src) = v6;
        if (sub_22F3C861C(a1, 123, (char *)&__src, (uint64_t *)&v26))
        {
          v26 = v19;
          sub_22F3C9124((_QWORD *)a1, (uint64_t *)&v26);
        }
      }
    }
  }
  else
  {
    LODWORD(v26) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_22F3C82E4(a1, &v26);
  }
}

uint64_t sub_22F3CA7C8(uint64_t a1, _DWORD *a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  void (**v8)(void);
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = operator new(0x20uLL);
  *v6 = &off_24FAC5DF8;
  v6[1] = a1;
  *((_DWORD *)v6 + 4) = a3;
  v6[3] = a2;
  v11 = v6;
  v7 = sub_22F3CA8CC(a1, a2, v10);
  if (v11 == v10)
  {
    v8 = (void (**)(void))(v10[0] + 32);
    goto LABEL_4;
  }
  if (v11)
  {
    v8 = (void (**)(void))(*v11 + 40);
LABEL_4:
    (*v8)();
  }
  return v7;
}

uint64_t sub_22F3CA894(uint64_t result)
{
  _QWORD *i;

  for (i = *(_QWORD **)(result + 528); i; i = (_QWORD *)i[2])
    result = (*(uint64_t (**)(_QWORD *))(*i + 32))(i);
  return result;
}

uint64_t sub_22F3CA8CC(uint64_t a1, _DWORD *a2, _QWORD *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  void (**v7)(_QWORD *);
  uint64_t v8;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12[8];

  v12[7] = *MEMORY[0x24BDAC8D0];
  v5 = (_QWORD *)a3[3];
  if (v5)
  {
    if (v5 == a3)
    {
      v11 = v10;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v10);
    }
    else
    {
      v11 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v5 + 16))(v5);
    }
  }
  else
  {
    v11 = 0;
  }
  sub_22F3CC364((uint64_t)v12, a1, v10);
  v6 = v11;
  if (v11 == v10)
  {
    v7 = (void (**)(_QWORD *))(v10[0] + 32);
    v6 = v10;
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v7 = (void (**)(_QWORD *))(*v11 + 40);
  }
  (*v7)(v6);
LABEL_6:
  v8 = sub_22F0653E4(a1, a2);
  sub_22F3CC2F0(v12);
  return v8;
}

uint64_t sub_22F3CA9D0(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v7[8];

  v7[7] = *MEMORY[0x24BDAC8D0];
  if ((sub_22F0665E4(*(uint64_t **)(a1 + 464), *(_QWORD *)(a2 + 8)) & 0xFF00000000) != 0)
  {
    sub_22F3CC0B8((uint64_t)v7, a1, 0);
    v5 = sub_22F0653E4(a1, (_DWORD *)a2);
    sub_22F3CC2F0(v7);
  }
  else
  {
    sub_22F0D5A50(a2);
    LODWORD(v7[0]) = v4;
    return sub_22F3C82E4(a1, v7);
  }
  return v5;
}

uint64_t sub_22F3CAA84(uint64_t a1, _DWORD *a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  void (**v8)(void);
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = operator new(0x20uLL);
  *v6 = &unk_24FAC5DB0;
  v6[1] = a1;
  *((_DWORD *)v6 + 4) = a3;
  v6[3] = a2;
  v11 = v6;
  v7 = sub_22F3CA8CC(a1, a2, v10);
  if (v11 == v10)
  {
    v8 = (void (**)(void))(v10[0] + 32);
    goto LABEL_4;
  }
  if (v11)
  {
    v8 = (void (**)(void))(*v11 + 40);
LABEL_4:
    (*v8)();
  }
  return v7;
}

uint64_t sub_22F3CAB54(uint64_t a1, _QWORD *a2, int a3, char a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;

  v10 = (*a2 >> 1) & 1;
  v11 = sub_22E3CD3D4(*(_QWORD *)(a1 + 472) + 128, 72, 3);
  v12 = sub_22F3CD8AC(v11, a2, a3, a4, v10, 0);
  v13 = (*(_DWORD *)(a1 + 356) + 32);
  *(_DWORD *)(a1 + 356) = ((*(_DWORD *)(v12 + 16) + 7) & 0xFFFFFFF8) + v13;
  *(_QWORD *)&v20 = v13;
  *((_QWORD *)&v20 + 1) = v12;
  if ((*a2 & 2) == 0)
  {
    v14 = *a2 & 0xFFFFFFFFFFFFFFFCLL;
    if (v14)
    {
      if ((*(_DWORD *)(v14 + 28) & 0x7Fu) - 48 <= 0x1A)
      {
        v18 = *a2 & 0xFFFFFFFFFFFFFFFCLL;
        v19 = v20;
        sub_22F3CC5E0((uint64_t)&v17, a1 + 480, (uint64_t *)&v18, &v19);
      }
    }
  }
  v15 = 16;
  if (a5)
    v15 = 24;
  (*(void (**)(void))(**(_QWORD **)(a1 + 528) + v15))();
  return v20;
}

void sub_22F3CAC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *v4;
  int v5;
  uint64_t v6[8];

  v6[7] = *MEMORY[0x24BDAC8D0];
  v3 = (*(_DWORD *)a2 >> 18) & 0x7F;
  if (v3 > 0x3E)
    goto LABEL_7;
  v4 = *(_DWORD **)(a2 + 16);
  if (((1 << ((*(_DWORD *)a2 >> 18) & 0x7F)) & 0x6000000000303020) != 0)
  {
    sub_22F0659AC(a1, *(_DWORD **)(a2 + 16));
    return;
  }
  if (v3 == 4)
  {
    v6[0] = a1;
    v6[1] = a2;
    sub_22F0655AC(a1, (uint64_t)v4, (void (*)(uint64_t, uint64_t))sub_22F3CC67C, (uint64_t)v6);
    return;
  }
  if (v3 == 25)
  {
    sub_22F3CC7A8((uint64_t)v6, a1, 1);
    sub_22F0659AC(a1, v4);
    sub_22F3CC88C(v6);
  }
  else
  {
LABEL_7:
    sub_22F0D5A50(a2);
    LODWORD(v6[0]) = v5;
    sub_22F3CDD98(a1, v6);
  }
}

uint64_t sub_22F3CAD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;

  if (*(_BYTE *)(a1 + 592))
    return 1;
  v6 = a2 + 16;
  sub_22F257F94(a2 + 16, (llvm::APInt *)&v14);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = sub_22F0665E4(*(uint64_t **)(a1 + 504), v7);
  if ((v8 & 0xFF00000000) != 0)
  {
    v10 = v8;
    sub_22EF6A330(**(_QWORD **)(a1 + 504), v7);
    sub_22F257F94(v6, (llvm::APInt *)&v12);
    sub_22F3CAEA8(a1, v10);
    v2 = v11;
    if (v13 >= 0x41 && v12)
      MEMORY[0x2348A0E84](v12, 0x1000C8000313F17);
  }
  else
  {
    sub_22F0D5A50(a2);
    LODWORD(v12) = v9;
    v2 = sub_22F3CDD98(a1, &v12);
  }
  if (v15 >= 0x41 && v14)
    MEMORY[0x2348A0E84](v14, 0x1000C8000313F17);
  return v2;
}

void sub_22F3CAEA8(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CAEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(_DWORD *)(a3 + 8);
  if (v5 > 0x40)
    v6 = **(_QWORD **)a3;
  else
    v6 = (uint64_t)(*(_QWORD *)a3 << -(char)v5) >> -(char)v5;
  v8 = v4 | 4;
  return sub_22F3CE8EC(v3, v6, &v8);
}

void sub_22F3CB0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23[8];

  v23[7] = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  if ((*(_DWORD *)a2 & 0xFC0000) == 0x800000)
  {
    sub_22F3CC7A8((uint64_t)v23, a1, 1);
    v11 = sub_22F0659AC(a1, v4);
    sub_22F3CC88C(v23);
    if (v11)
      sub_22F0659AC(a1, v3);
  }
  else
  {
    v6 = sub_22F0665E4(*(uint64_t **)(a1 + 504), *(_QWORD *)(v4 + 8));
    v7 = sub_22F0665E4(*(uint64_t **)(a1 + 504), *(_QWORD *)(v3 + 8)) & 0xFF00000000;
    v8 = (v6 & 0xFF00000000) == 0 || v7 == 0;
    if (!v8 && (v9 = sub_22F0665E4(*(uint64_t **)(a1 + 504), *(_QWORD *)(a2 + 8)), (v9 & 0xFF00000000) != 0))
    {
      v12 = v9;
      sub_22F3CC7A8((uint64_t)v23, a1, 0);
      v13 = sub_22F0659AC(a1, v4);
      sub_22F3CC88C(v23);
      if (v13)
      {
        sub_22F3CC7A8((uint64_t)v23, a1, 0);
        v14 = sub_22F0659AC(a1, v3);
        sub_22F3CC88C(v23);
        if (v14)
        {
          switch((*(_DWORD *)a2 >> 18) & 0x3F)
          {
            case 2:
              v15 = a2 | 4;
              if (sub_22F3D52A8(a1, v12))
                goto LABEL_20;
              return;
            case 5:
              v15 = a2 | 4;
              if (sub_22F3CDF74(a1, v12))
                goto LABEL_20;
              return;
            case 6:
              v15 = a2 | 4;
              if (!sub_22F3D8758(a1, v12))
                return;
LABEL_20:
              if (!*(_BYTE *)(a1 + 592))
                return;
              v23[0] = v15;
              goto LABEL_36;
            case 0xA:
              v16 = a2 | 4;
              sub_22F3D490C(a1, v6);
              if (v17)
                goto LABEL_33;
              return;
            case 0xB:
              v16 = a2 | 4;
              sub_22F3CF27C(a1, v6);
              if (v18)
                goto LABEL_33;
              return;
            case 0xC:
              v16 = a2 | 4;
              sub_22F3D46A4(a1, v6);
              if (v19)
                goto LABEL_33;
              return;
            case 0xD:
              v16 = a2 | 4;
              sub_22F3CF014(a1, v6);
              if (v20)
                goto LABEL_33;
              return;
            case 0xE:
              v16 = a2 | 4;
              sub_22F3CED44(a1, v6);
              if (v21)
                goto LABEL_33;
              return;
            case 0xF:
              v16 = a2 | 4;
              sub_22F3D5C20(a1, v6);
              if (!v22)
                return;
LABEL_33:
              if (!*(_BYTE *)(a1 + 592))
                return;
              v23[0] = v16;
LABEL_36:
              sub_22F3D5EF0(a1, v12);
              break;
            default:
              goto LABEL_7;
          }
        }
      }
    }
    else
    {
LABEL_7:
      sub_22F0D5A50(a2);
      LODWORD(v23[0]) = v10;
      sub_22F3CDD98(a1, v23);
    }
  }
}

uint64_t sub_22F3CB3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  uint64_t v17[8];

  v17[7] = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a1 + 568);
  v13 = a1;
  v14 = v4;
  *(_QWORD *)(a1 + 568) = &v12;
  LOBYTE(v15) = 0;
  v16 = 0;
  v12 = off_24FAC5E40;
  sub_22F3CC7A8((uint64_t)v17, a1, 0);
  sub_22F0659AC(a1, (_DWORD *)a2);
  v6 = v5;
  sub_22F3CC88C(v17);
  v7 = 0;
  if (v6)
  {
    if ((*(_BYTE *)(a2 + 1) & 3) != 0)
    {
      v8 = 9;
    }
    else
    {
      v11 = sub_22F0665E4(*(uint64_t **)(a1 + 504), *(_QWORD *)(a2 + 8));
      v8 = v11;
      if ((v11 & 0xFF00000000) == 0)
      {
        v17[0] = a2 | 4;
        v9 = sub_22F3CDDB8(a1);
        goto LABEL_5;
      }
    }
    v17[0] = a2 | 4;
    v9 = sub_22F3D5FA0(a1, v8);
LABEL_5:
    v7 = v9;
  }
  v12 = off_24FAC5CD0;
  if (v16)
  {
    v17[0] = 0;
    sub_22F067078(v13, v15);
  }
  *(_QWORD *)(v13 + 568) = v14;
  return v7;
}

uint64_t sub_22F3CB524(uint64_t a1)
{
  *(_QWORD *)a1 = off_24FAC5CD0;
  if (*(_BYTE *)(a1 + 28))
    sub_22F067078(*(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 24));
  *(_QWORD *)a1 = &off_24FAC5D08;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 568) = *(_QWORD *)(a1 + 16);
  return a1;
}

void sub_22F3CB588(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t (**v12)();
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t (**v19)();
  int v20;
  int v21;
  uint64_t (**v22)();
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t (**v28)();
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v4 = (_DWORD *)sub_22EFBC5B4(a2);
  v5 = sub_22F071CDC(*(_QWORD *)(a1 + 512), a2);
  if ((v5 & 0xFF00000000) != 0)
  {
    v6 = v5;
    v7 = sub_22F0665E4(*(uint64_t **)(a1 + 504), *(_QWORD *)(a2 + 48));
    if ((v7 & 0xFF00000000) != 0)
    {
      v13 = v7;
      v14 = *(_QWORD *)(a1 + 568);
      v23 = a1;
      v24 = v14;
      *(_QWORD *)(a1 + 568) = &v22;
      LOBYTE(v25) = 0;
      v26 = 0;
      v22 = &off_24FAC5E78;
      v15 = *(_QWORD *)(a1 + 512);
      v27 = v15;
      v16 = *(_DWORD *)(v15 + 320) + 1;
      *(_DWORD *)(v15 + 320) = v16;
      *(_DWORD *)(v15 + 324) = v16;
      sub_22F3CC7A8((uint64_t)&v28, a1, 0);
      sub_22F0659AC(a1, v4);
      v18 = v17;
      sub_22F3CC88C((uint64_t *)&v28);
      *(_DWORD *)(v27 + 324) = -1;
      v22 = off_24FAC5CD0;
      if (v26)
      {
        v28 = 0;
        sub_22F067078(v23, v25);
      }
      *(_QWORD *)(v23 + 568) = v24;
      if (v18)
      {
        v19 = (uint64_t (**)())(a2 & 0xFFFFFFFFFFFFFFFBLL);
        v28 = v19;
        sub_22F3CEA1C(a1, v13);
        if (v20)
        {
          v28 = v19;
          sub_22F3D2A8C(a1, v13);
          if (v21)
          {
            v28 = v19;
            sub_22F3D5FA0(a1, v13);
          }
        }
      }
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 568);
      v29 = a1;
      v30 = v8;
      *(_QWORD *)(a1 + 568) = &v28;
      LOBYTE(v31) = 0;
      v32 = 0;
      v28 = &off_24FAC5E78;
      v9 = *(_QWORD *)(a1 + 512);
      v33 = v9;
      v10 = *(_DWORD *)(v9 + 320) + 1;
      *(_DWORD *)(v9 + 320) = v10;
      *(_DWORD *)(v9 + 324) = v10;
      v11 = sub_22F3CB81C(a1, v4, v6);
      *(_DWORD *)(v33 + 324) = -1;
      v28 = off_24FAC5CD0;
      if (v32)
      {
        v22 = 0;
        sub_22F067078(v29, v31);
      }
      *(_QWORD *)(v29 + 568) = v30;
      if (v11)
      {
        v12 = (uint64_t (**)())(a2 & 0xFFFFFFFFFFFFFFFBLL);
        if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496)
          || (*(_QWORD *)(a1 + 480) = v12, sub_22F3D0844(a1 + 352, *(_QWORD *)(a1 + 464), v6)))
        {
          v28 = v12;
          sub_22F3CDDB8(a1);
        }
      }
    }
  }
  else
  {
    LODWORD(v28) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_22F3CDD98(a1, &v28);
  }
}

uint64_t sub_22F3CB81C(uint64_t a1, _DWORD *a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  void (**v8)(void);
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = operator new(0x20uLL);
  *v6 = &off_24FAC5EB0;
  v6[1] = a1;
  *((_DWORD *)v6 + 4) = a3;
  v6[3] = a2;
  v11 = v6;
  v7 = sub_22F3CB8E8(a1, a2, v10);
  if (v11 == v10)
  {
    v8 = (void (**)(void))(v10[0] + 32);
    goto LABEL_4;
  }
  if (v11)
  {
    v8 = (void (**)(void))(*v11 + 40);
LABEL_4:
    (*v8)();
  }
  return v7;
}

uint64_t sub_22F3CB8E8(uint64_t a1, _DWORD *a2, _QWORD *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  void (**v7)(_QWORD *);
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  _QWORD *v12;
  uint64_t v13[8];

  v13[7] = *MEMORY[0x24BDAC8D0];
  v5 = (_QWORD *)a3[3];
  if (v5)
  {
    if (v5 == a3)
    {
      v12 = v11;
      (*(void (**)(_QWORD *, _QWORD *))(*a3 + 24))(a3, v11);
    }
    else
    {
      v12 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v5 + 16))(v5);
    }
  }
  else
  {
    v12 = 0;
  }
  sub_22F3CC900((uint64_t)v13, a1, v11);
  v6 = v12;
  if (v12 == v11)
  {
    v7 = (void (**)(_QWORD *))(v11[0] + 32);
    v6 = v11;
  }
  else
  {
    if (!v12)
      goto LABEL_6;
    v7 = (void (**)(_QWORD *))(*v12 + 40);
  }
  (*v7)(v6);
LABEL_6:
  sub_22F0659AC(a1, a2);
  v9 = v8;
  sub_22F3CC88C(v13);
  return v9;
}

void sub_22F3CB9F8(uint64_t a1)
{
  sub_22F3CBEE4(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CBA1C(uint64_t a1, uint64_t a2, int a3)
{
  if (a2)
    return sub_22F3DC404(a2, a3);
  else
    return *(_QWORD *)(a1 + 480);
}

uint64_t sub_22F3CBA34(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return a1;
}

uint64_t sub_22F3CBAA0(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return MEMORY[0x2348A0E9C](a1, 0x10A1C401D7E7872);
}

uint64_t sub_22F3CBB20(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_22F3CBB38(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  if (*(_BYTE *)(result + 28))
  {
    v1 = *(_QWORD *)(result + 8);
    v2 = *(_DWORD *)(result + 24);
    v3 = 0;
    return sub_22F3C8D24(v1, v2, &v3);
  }
  return result;
}

_QWORD *sub_22F3CBB70(_QWORD *result)
{
  *result = &unk_24FAC5C98;
  *(_QWORD *)(result[1] + 528) = result[2];
  return result;
}

void sub_22F3CBB8C(_QWORD *a1)
{
  *a1 = &unk_24FAC5C98;
  *(_QWORD *)(a1[1] + 528) = a1[2];
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CBBB8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t sub_22F3CBBD4(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  unsigned int v4;

  v2 = (_QWORD *)llvm::SmallVectorBase<unsigned int>::mallocForGrow();
  v3 = &v2[18 * *(unsigned int *)(a1 + 8)];
  *v3 = v3 + 2;
  v3[1] = 0x800000000;
  sub_22F34187C(a1, v2);
  if (*(_QWORD *)a1 != a1 + 16)
    free(*(void **)a1);
  *(_QWORD *)a1 = v2;
  v4 = *(_DWORD *)(a1 + 8) + 1;
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = 0;
  return (uint64_t)&v2[18 * v4 - 18];
}

uint64_t sub_22F3CBC74(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 324) = -1;
  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return a1;
}

uint64_t sub_22F3CBCEC(uint64_t a1)
{
  *(_QWORD *)a1 = off_24FAC5CD0;
  if (*(_BYTE *)(a1 + 28))
    sub_22F067078(*(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 24));
  *(_QWORD *)a1 = &off_24FAC5D08;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 568) = *(_QWORD *)(a1 + 16);
  return a1;
}

uint64_t sub_22F3CBD50(uint64_t a1)
{
  *(_QWORD *)a1 = off_24FAC5CD0;
  if (*(_BYTE *)(a1 + 28))
    sub_22F067078(*(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 24));
  *(_QWORD *)a1 = &off_24FAC5D08;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 568) = *(_QWORD *)(a1 + 16);
  return MEMORY[0x2348A0E9C](a1, 0x10A1C401D7E7872);
}

uint64_t sub_22F3CBDC8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

uint64_t sub_22F3CBDE0(uint64_t result)
{
  if (*(_BYTE *)(result + 28))
    return sub_22F067078(*(_QWORD *)(result + 8), *(_DWORD *)(result + 24));
  return result;
}

_QWORD *sub_22F3CBE18(_QWORD *result)
{
  *result = &off_24FAC5D08;
  *(_QWORD *)(result[1] + 568) = result[2];
  return result;
}

void sub_22F3CBE30(_QWORD *a1)
{
  *a1 = &off_24FAC5D08;
  *(_QWORD *)(a1[1] + 568) = a1[2];
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CBE58(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  return result;
}

uint64_t sub_22F3CBE74(uint64_t a1)
{
  *(_DWORD *)(*(_QWORD *)(a1 + 32) + 324) = -1;
  *(_QWORD *)a1 = off_24FAC5CD0;
  if (*(_BYTE *)(a1 + 28))
    sub_22F067078(*(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 24));
  *(_QWORD *)a1 = &off_24FAC5D08;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 568) = *(_QWORD *)(a1 + 16);
  return a1;
}

uint64_t sub_22F3CBEE4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)a1 = &unk_24FAC5EF8;
  if (*(_BYTE *)(a1 + 632))
  {
    v2 = *(_QWORD **)(a1 + 624);
    if (v2 == (_QWORD *)(a1 + 600))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 600);
    }
    else
    {
      if (!v2)
      {
LABEL_7:
        *(_BYTE *)(a1 + 632) = 0;
        goto LABEL_8;
      }
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
    goto LABEL_7;
  }
LABEL_8:
  llvm::deallocate_buffer(*(llvm **)(a1 + 544), (void *)(16 * *(unsigned int *)(a1 + 560)));
  llvm::deallocate_buffer(*(llvm **)(a1 + 520), (void *)(24 * *(unsigned int *)(a1 + 536)));
  return sub_22F065C50(a1);
}

uint64_t sub_22F3CBF88(uint64_t *a1, int a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1;
  v6 = a1[1] | 4;
  result = sub_22F3C90FC((_QWORD *)v4, a2, &v6);
  if ((_DWORD)result)
  {
    if (*(_BYTE *)(v4 + 552))
    {
      v6 = a1[1] | 4;
      return sub_22F3C9114((_QWORD *)v4, a2, &v6);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22F3CC000(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return MEMORY[0x2348A0E9C](a1, 0x10A1C401D7E7872);
}

uint64_t sub_22F3CC080(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16));
}

void sub_22F3CC090(uint64_t a1)
{
  sub_22F3CBC74(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CC0B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  void (**v8)(void);
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 552);
  *(_BYTE *)(a1 + 16) = 0;
  v6 = a1 + 16;
  v7 = a2 + 560;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 592))
    sub_22F3CC19C(v6, a2 + 560);
  *(_BYTE *)(a2 + 552) = a3;
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  sub_22F3CC238(v7, (uint64_t)&v10);
  if ((_BYTE)v12)
  {
    if (*((__int128 **)&v11 + 1) == &v10)
    {
      v8 = (void (**)(void))(v10 + 32);
      goto LABEL_7;
    }
    if (*((_QWORD *)&v11 + 1))
    {
      v8 = (void (**)(void))(**((_QWORD **)&v11 + 1) + 40);
LABEL_7:
      (*v8)();
    }
  }
  return a1;
}

uint64_t sub_22F3CC19C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = result;
  if (!*(_BYTE *)(result + 32))
    goto LABEL_8;
  result = *(_QWORD *)(result + 24);
  if (result == v3)
  {
    v4 = 4;
    result = v3;
    goto LABEL_6;
  }
  if (result)
  {
    v4 = 5;
LABEL_6:
    result = (*(uint64_t (**)(void))(*(_QWORD *)result + 8 * v4))();
  }
  *(_BYTE *)(v3 + 32) = 0;
LABEL_8:
  v5 = *(_QWORD *)(a2 + 24);
  if (v5)
  {
    if (v5 == a2)
    {
      *(_QWORD *)(v3 + 24) = v3;
      result = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), v3);
    }
    else
    {
      *(_QWORD *)(v3 + 24) = v5;
      *(_QWORD *)(a2 + 24) = 0;
    }
  }
  else
  {
    *(_QWORD *)(v3 + 24) = 0;
  }
  *(_BYTE *)(v3 + 32) = 1;
  return result;
}

uint64_t sub_22F3CC238(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (!*(_BYTE *)(a2 + 32))
  {
    if (!*(_BYTE *)(a1 + 32))
      return a1;
    v4 = *(_QWORD **)(a1 + 24);
    if (v4 == (_QWORD *)a1)
    {
      v5 = 4;
      v4 = (_QWORD *)a1;
    }
    else
    {
      if (!v4)
      {
LABEL_14:
        *(_BYTE *)(a1 + 32) = 0;
        return a1;
      }
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
    goto LABEL_14;
  }
  if (*(_BYTE *)(a1 + 32))
  {
    sub_22EC72658((_QWORD *)a1, a2);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    if (v6)
    {
      if (v6 == a2)
      {
        *(_QWORD *)(a1 + 24) = a1;
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
      }
      else
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a2 + 24) = 0;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 24) = 0;
    }
    *(_BYTE *)(a1 + 32) = 1;
  }
  return a1;
}

uint64_t *sub_22F3CC2F0(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = *a1;
  *(_BYTE *)(v2 + 552) = *((_BYTE *)a1 + 8);
  v3 = a1 + 2;
  sub_22F3CC238(v2 + 560, (uint64_t)(a1 + 2));
  if (*((_BYTE *)a1 + 48))
  {
    v4 = (_QWORD *)a1[5];
    if (v4 == v3)
    {
      v5 = 4;
      v4 = v3;
    }
    else
    {
      if (!v4)
      {
LABEL_7:
        *((_BYTE *)a1 + 48) = 0;
        return a1;
      }
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_22F3CC364(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 552);
  *(_BYTE *)(a1 + 16) = 0;
  v6 = a1 + 16;
  v7 = a2 + 560;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 592))
    sub_22F3CC19C(v6, a2 + 560);
  *(_BYTE *)(a2 + 552) = 1;
  sub_22F3CC3D0(v7, a3);
  return a1;
}

uint64_t sub_22F3CC3D0(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;

  if (*(_BYTE *)(a1 + 32))
  {
    sub_22F2A59EC((_QWORD *)a1, a2);
  }
  else
  {
    v3 = (_QWORD *)a2[3];
    if (v3)
    {
      if (v3 == a2)
      {
        *(_QWORD *)(a1 + 24) = a1;
        (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)a2[3] + 24))(a2[3], a1);
      }
      else
      {
        *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
      }
    }
    else
    {
      *(_QWORD *)(a1 + 24) = 0;
    }
    *(_BYTE *)(a1 + 32) = 1;
  }
  return a1;
}

void sub_22F3CC454()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22F3CC468(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &unk_24FAC5DB0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_22F3CC4AC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &unk_24FAC5DB0;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_22F3CC4D8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  int __src;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24) | 4;
  __src = v2;
  return sub_22F3C861C(v1, 124, (char *)&__src, &v4);
}

void sub_22F3CC520()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22F3CC534(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_24FAC5DF8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_22F3CC574(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAC5DF8;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_22F3CC59C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  int __src;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24) | 4;
  __src = v2;
  return sub_22F3C861C(v1, 123, (char *)&__src, &v4);
}

uint64_t sub_22F3CC5E0(uint64_t a1, uint64_t a2, uint64_t *a3, _OWORD *a4)
{
  uint64_t result;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;

  v12 = 0;
  result = sub_22F28501C(*(_QWORD *)a2, *(_DWORD *)(a2 + 16), *a3, &v12);
  v9 = v12;
  if ((result & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    result = (uint64_t)sub_22F2850B8(a2, a3, v12);
    v9 = (_QWORD *)result;
    *(_QWORD *)result = *a3;
    *(_OWORD *)(result + 8) = *a4;
    v10 = 1;
  }
  v11 = *(_QWORD *)a2 + 24 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v10;
  return result;
}

void sub_22F3CC680(uint64_t *a1, int a2)
{
  uint64_t v3;

  v3 = *a1;
  if (sub_22F3D4E98(*a1, a2))
  {
    if (*(_BYTE *)(v3 + 592))
      sub_22F3D5EF0(v3, a2);
  }
}

uint64_t sub_22F3CC6F8(uint64_t a1)
{
  *(_QWORD *)a1 = off_24FAC5CD0;
  if (*(_BYTE *)(a1 + 28))
    sub_22F067078(*(_QWORD *)(a1 + 8), *(_DWORD *)(a1 + 24));
  *(_QWORD *)a1 = &off_24FAC5D08;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 568) = *(_QWORD *)(a1 + 16);
  return MEMORY[0x2348A0E9C](a1, 0x10A1C401D7E7872);
}

uint64_t sub_22F3CC770(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16));
}

void sub_22F3CC780(uint64_t a1)
{
  sub_22F3CBE74(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CC7A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  void (**v8)(void);
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 16) = 0;
  v6 = a1 + 16;
  v7 = a2 + 600;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 632))
    sub_22F3CC19C(v6, a2 + 600);
  *(_BYTE *)(a2 + 592) = a3;
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  sub_22F3CC238(v7, (uint64_t)&v10);
  if ((_BYTE)v12)
  {
    if (*((__int128 **)&v11 + 1) == &v10)
    {
      v8 = (void (**)(void))(v10 + 32);
      goto LABEL_7;
    }
    if (*((_QWORD *)&v11 + 1))
    {
      v8 = (void (**)(void))(**((_QWORD **)&v11 + 1) + 40);
LABEL_7:
      (*v8)();
    }
  }
  return a1;
}

uint64_t *sub_22F3CC88C(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = *a1;
  *(_BYTE *)(v2 + 592) = *((_BYTE *)a1 + 8);
  v3 = a1 + 2;
  sub_22F3CC238(v2 + 600, (uint64_t)(a1 + 2));
  if (*((_BYTE *)a1 + 48))
  {
    v4 = (_QWORD *)a1[5];
    if (v4 == v3)
    {
      v5 = 4;
      v4 = v3;
    }
    else
    {
      if (!v4)
      {
LABEL_7:
        *((_BYTE *)a1 + 48) = 0;
        return a1;
      }
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
    goto LABEL_7;
  }
  return a1;
}

uint64_t sub_22F3CC900(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 16) = 0;
  v6 = a1 + 16;
  v7 = a2 + 600;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 632))
    sub_22F3CC19C(v6, a2 + 600);
  *(_BYTE *)(a2 + 592) = 1;
  sub_22F3CC3D0(v7, a3);
  return a1;
}

void sub_22F3CC970()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22F3CC984(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &off_24FAC5EB0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 sub_22F3CC9C4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAC5EB0;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_22F3CC9EC(uint64_t a1)
{
  uint64_t v1;
  unsigned int v3;

  v1 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v1 + 492) != *(_DWORD *)(v1 + 496))
    return 1;
  v3 = *(_DWORD *)(a1 + 16);
  *(_QWORD *)(v1 + 480) = *(_QWORD *)(a1 + 24) | 4;
  return sub_22F3D0844(v1 + 352, *(_QWORD *)(v1 + 464), v3);
}

uint64_t sub_22F3CCA24(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t (**v12)();
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 528);
  v13 = a1;
  v14 = v3;
  *(_QWORD *)(a1 + 528) = &v12;
  LOBYTE(v15) = 0;
  v16 = 0;
  v12 = off_24FAC5FA0;
  v5 = (uint64_t *)(a2 + 4);
  v4 = *a2;
  if (v4 >= 0x100)
  {
    v8 = 8 * (v4 >> 8) - 8;
    do
    {
      v9 = *v5++;
      v10 = sub_22F065E8C(v2, v9);
      if ((_DWORD)v10)
        v11 = v8 == 0;
      else
        v11 = 1;
      v8 -= 8;
    }
    while (!v11);
    v6 = v10;
    v2 = v13;
    v12 = (uint64_t (**)())&unk_24FAC5C60;
    if (v16)
    {
      v17 = 0;
      sub_22F3C8D24(v13, v15, &v17);
      v2 = v13;
    }
  }
  else
  {
    v6 = 1;
  }
  *(_QWORD *)(v2 + 528) = v14;
  return v6;
}

BOOL sub_22F3CCAF8(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  int v5;
  _BOOL8 v6;
  _BOOL8 v7;
  int v8;
  _QWORD *v9;
  void (**v10)(_QWORD *);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)(a2 + 8);
  if (!v4)
  {
    sub_22F3CA894(a1);
    v12 = (void *)(a2 | 4);
    return sub_22F064954((_QWORD *)a1, 324, (uint64_t *)&v12);
  }
  v14 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = &v12;
  LOBYTE(v15) = 0;
  v16 = 0;
  v12 = &unk_24FAC5D40;
  v13 = a1;
  if (!*(_BYTE *)(a1 + 604))
  {
    v18[0] = &off_24FAC5FD8;
    v18[1] = a1;
    v18[2] = v4;
    v19 = v18;
    v8 = sub_22F3CA8CC(a1, v4, v18);
    v9 = v19;
    if (v19 == v18)
    {
      v10 = (void (**)(_QWORD *))(v18[0] + 32);
      v9 = v18;
    }
    else
    {
      if (!v19)
        goto LABEL_11;
      v10 = (void (**)(_QWORD *))(*v19 + 40);
    }
    (*v10)(v9);
LABEL_11:
    if (v8)
    {
      sub_22F3CA894(a1);
      v17 = a2 | 4;
      v6 = sub_22F064954((_QWORD *)a1, 324, &v17);
      goto LABEL_5;
    }
LABEL_13:
    v7 = 0;
    goto LABEL_14;
  }
  if (!sub_22F3CA304(a1, v4))
    goto LABEL_13;
  sub_22F3CA894(a1);
  v5 = *(_DWORD *)(a1 + 600);
  v17 = a2 | 4;
  v6 = sub_22F3C911C((_QWORD *)a1, v5, &v17);
LABEL_5:
  v7 = v6;
LABEL_14:
  v12 = &unk_24FAC5C60;
  if (v16)
  {
    v17 = 0;
    sub_22F3C8D24(v13, v15, &v17);
  }
  *(_QWORD *)(v13 + 528) = v14;
  return v7;
}

uint64_t sub_22F3CCCA0(int32x2_t *a1, unsigned __int16 *a2)
{
  int32x2_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t (**v19)();
  int32x2_t *v20;
  int32x2_t v21;
  int v22;
  char v23;
  uint64_t v24;

  v4 = a1[66];
  v20 = a1;
  v21 = v4;
  a1[66] = (int32x2_t)&v19;
  LOBYTE(v22) = 0;
  v23 = 0;
  v19 = off_24FAC5FA0;
  v5 = *a2;
  if ((v5 & 0x700) == 0x300)
  {
    if ((v5 & 0x800) != 0)
    {
      v6 = *(_QWORD *)&a2[4 * ((v5 >> 13) & 1) + 16 + 4 * ((v5 >> 12) & 1)];
      if (v6)
        goto LABEL_4;
    }
    goto LABEL_9;
  }
  if ((v5 & 0x700) == 0x200)
  {
    v6 = *(_QWORD *)&a2[4 * ((v5 >> 12) & 1) + 12 + 4 * ((v5 >> 13) & 1)];
LABEL_4:
    v7 = sub_22F065E8C(a1, v6);
    goto LABEL_5;
  }
  if ((v5 & 0x2000) != 0)
  {
    v14 = *((_QWORD *)a2 + 2);
    if (v14)
    {
      if (!sub_22F065E8C(a1, v14))
        goto LABEL_32;
      v5 = *a2;
    }
  }
  if ((v5 & 0x1000) != 0)
  {
    v15 = *(_QWORD *)&a2[4 * ((v5 >> 13) & 1) + 8];
    if (v15)
    {
      if (!sub_22F065F70((uint64_t)a1, v15))
        goto LABEL_32;
      v5 = *a2;
    }
  }
  v10 = a2 + 8;
  if (sub_22F3CA9D0((uint64_t)a1, *(_QWORD *)&a2[4 * ((v5 >> 13) & 1) + 8 + 4 * ((v5 >> 12) & 1)]))
  {
    v11 = *a2;
    if ((v11 & 0x800) != 0 && (v16 = *(_QWORD *)&v10[4 * ((v11 >> 13) & 1) + 8 + 4 * ((v11 >> 12) & 1)]) != 0)
    {
      v17 = a1[44].i32[0];
      LODWORD(v24) = v17 + 1;
      v17 += 2;
      a1[44].i32[0] = v17;
      v18 = v17;
      if (sub_22F3C8304((uint64_t)a1, (int *)&v24))
      {
        if (sub_22F065E8C(a1, *(_QWORD *)&v10[4 * ((*a2 >> 12) & 1) + 4 + 4 * ((*a2 >> 13) & 1)]))
        {
          if (sub_22F3C834C((uint64_t)a1, &v18))
          {
            sub_22F3C80EC(a1, v24);
            if (sub_22F065E8C(a1, v16))
            {
              v13 = v18;
              goto LABEL_17;
            }
          }
        }
      }
    }
    else
    {
      v12 = a1[44].i32[0] + 1;
      a1[44].i32[0] = v12;
      LODWORD(v24) = v12;
      if (sub_22F3C8304((uint64_t)a1, (int *)&v24)
        && sub_22F065E8C(a1, *(_QWORD *)&v10[4 * ((*a2 >> 12) & 1) + 4 + 4 * ((*a2 >> 13) & 1)]))
      {
        v13 = v24;
LABEL_17:
        sub_22F3C80EC(a1, v13);
LABEL_9:
        v7 = 1;
        goto LABEL_5;
      }
    }
  }
LABEL_32:
  v7 = 0;
LABEL_5:
  v19 = (uint64_t (**)())&unk_24FAC5C60;
  v8 = (uint64_t)v20;
  if (v23)
  {
    v24 = 0;
    sub_22F3C8D24((uint64_t)v20, v22, &v24);
    v8 = (uint64_t)v20;
  }
  *(int32x2_t *)(v8 + 528) = v21;
  return v7;
}

uint64_t sub_22F3CCEFC(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return a1;
}

void sub_22F3CCF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  int v11;
  _DWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 48);
  if (sub_22E3CB5E0(a2))
  {
    v5 = sub_22F0665E4(*(uint64_t **)(a1 + 464), v4);
    if ((v5 & 0xFF00000000) != 0)
    {
      v6 = v5;
      v13 = (void *)(a2 & 0xFFFFFFFFFFFFFFFDLL);
      if ((v4 & 1) != 0)
        v7 = 1;
      else
        v7 = *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 1;
      sub_22F3CAB54(a1, &v13, v5, v7, 0);
      v15 = *(_QWORD *)(a1 + 528);
      *(_QWORD *)(a1 + 528) = &v13;
      LOBYTE(v16) = 0;
      v17 = 0;
      v13 = &unk_24FAC5D40;
      v14 = a1;
      v9 = (_DWORD *)sub_22EFBC5B4(a2);
      v10 = sub_22F3CA304(a1, v9);
      v13 = &unk_24FAC5C60;
      if (v17)
      {
        v18 = 0;
        sub_22F3C8D24(v14, v16, &v18);
      }
      *(_QWORD *)(v14 + 528) = v15;
      if (v10)
      {
        v13 = (void *)(a2 & 0xFFFFFFFFFFFFFFFBLL);
        sub_22F3C9130(a1, v6);
      }
    }
    else
    {
      v13 = (void *)(a2 & 0xFFFFFFFFFFFFFFFDLL);
      v8 = sub_22F065480(a1, &v13, 0);
      if ((v8 & 0xFF00000000) != 0)
      {
        v11 = v8;
        v12 = (_DWORD *)sub_22EFBC5B4(a2);
        sub_22F3CAA84(a1, v12, v11);
      }
      else if (!*(_BYTE *)(a1 + 364))
      {
        *(_DWORD *)(a1 + 360) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
        *(_BYTE *)(a1 + 364) = 1;
      }
    }
  }
}

void sub_22F3CD114(uint64_t a1)
{
  sub_22F3CD138(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3CD138(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_24FAC6020;
  llvm::deallocate_buffer(*(llvm **)(a1 + 608), (void *)(16 * *(unsigned int *)(a1 + 624)));
  return sub_22F3CD17C(a1);
}

uint64_t sub_22F3CD17C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)a1 = &unk_24FAC5F68;
  if (*(_BYTE *)(a1 + 592))
  {
    v2 = *(_QWORD **)(a1 + 584);
    if (v2 == (_QWORD *)(a1 + 560))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 560);
    }
    else
    {
      if (!v2)
      {
LABEL_7:
        *(_BYTE *)(a1 + 592) = 0;
        goto LABEL_8;
      }
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
    goto LABEL_7;
  }
LABEL_8:
  llvm::deallocate_buffer(*(llvm **)(a1 + 504), (void *)(16 * *(unsigned int *)(a1 + 520)));
  llvm::deallocate_buffer(*(llvm **)(a1 + 480), (void *)(24 * *(unsigned int *)(a1 + 496)));
  return sub_22F066044(a1);
}

uint64_t sub_22F3CD21C(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  *(_QWORD *)a1 = &unk_24FAC5C60;
  if (*(_BYTE *)(a1 + 28))
  {
    v2 = *(_QWORD *)(a1 + 8);
    v3 = *(_DWORD *)(a1 + 24);
    v5 = 0;
    sub_22F3C8D24(v2, v3, &v5);
  }
  *(_QWORD *)a1 = &unk_24FAC5C98;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 528) = *(_QWORD *)(a1 + 16);
  return MEMORY[0x2348A0E9C](a1, 0x10A1C401D7E7872);
}

void sub_22F3CD2A4()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22F3CD2B8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24FAC5FD8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_22F3CD2F0(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAC5FD8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_22F3CD310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16) | 4;
  return sub_22F3C8FEC(v1, 0, &v3);
}

_QWORD *sub_22F3CD344(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = a2;
  v3 = operator new();
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = a1;
  *(_DWORD *)(v3 + 24) = 0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 60) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 108) = 0u;
  *(_QWORD *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = v3 + 160;
  *(_QWORD *)(v3 + 208) = 0;
  *(_QWORD *)(v3 + 152) = 0x400000000;
  *(_QWORD *)(v3 + 192) = v3 + 208;
  *(_QWORD *)(v3 + 200) = 0;
  *(_QWORD *)(v3 + 216) = 1;
  *(_OWORD *)(v3 + 252) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_QWORD *)(v3 + 272) = 0;
  *(_QWORD *)(v3 + 280) = 0;
  *(_DWORD *)(v3 + 288) = 0;
  *(_QWORD *)(v3 + 296) = 0;
  *(_QWORD *)(v3 + 304) = 0;
  *(_DWORD *)(v3 + 312) = 0;
  *(_QWORD *)(v3 + 320) = 0xFFFFFFFF00000000;
  a1[3] = v3;
  return a1;
}

uint64_t sub_22F3CD3F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v2)
  {
    v4 = sub_22F3CD74C(v2);
    MEMORY[0x2348A0E9C](v4, 0x10B0C403E931045);
  }
  sub_22F3E03D4(a1 + 8);
  return a1;
}

uint64_t sub_22F3CD444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  _BYTE v10[64];
  uint64_t v11;

  v4 = a1 + 8;
  sub_22F3E0558((uint64_t)v10, a2, *(_QWORD *)(a1 + 24), a1 + 8, a1, 0);
  v5 = operator new();
  memset(v9, 0, sizeof(v9));
  v11 = sub_22F3E00EC(v5, v10, a3, 0, 0, v9);
  sub_22F3E08B8((_QWORD **)v9);
  sub_22F3DC6EC((uint64_t)v10);
  v7 = v6;
  if ((v6 & 1) == 0)
    sub_22F3E0390(v4);
  sub_22F3E05B0((uint64_t)v10);
  return v7;
}

BOOL sub_22F3CD4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _QWORD v13[65];
  __int128 v14;
  int v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 24);
  sub_22F3CDB5C((uint64_t)v13, a1, v6, a2, a1 + 8, a4);
  v13[0] = &unk_24FAC5EF8;
  v13[63] = a1;
  v13[64] = v6;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v14 = 0u;
  v15 = 0;
  v16 = 0u;
  v17 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  v7 = sub_22F3CDC50((uint64_t)v13, &v11);
  v8 = sub_22F06646C(v7, a2, &v11);
  if ((v12 & 1) != 0)
  {
    v9 = v11;
    v11 = 0;
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  sub_22F3CBEE4((uint64_t)v13);
  return v8;
}

BOOL sub_22F3CD624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _QWORD v13[65];
  __int128 v14;
  int v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 24);
  sub_22F3CDB5C((uint64_t)v13, a1, v6, a2, a1 + 8, a4);
  v13[0] = &unk_24FAC5EF8;
  v13[63] = a1;
  v13[64] = v6;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v14 = 0u;
  v15 = 0;
  v16 = 0u;
  v17 = 0;
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  v7 = sub_22F3CDCF4((uint64_t)v13, &v11);
  v8 = sub_22F06646C(v7, a2, &v11);
  if ((v12 & 1) != 0)
  {
    v9 = v11;
    v11 = 0;
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  sub_22F3CBEE4((uint64_t)v13);
  return v8;
}

uint64_t sub_22F3CD74C(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD *v4;

  llvm::deallocate_buffer(*(llvm **)(a1 + 296), (void *)(16 * *(unsigned int *)(a1 + 312)));
  llvm::deallocate_buffer(*(llvm **)(a1 + 272), (void *)(16 * *(unsigned int *)(a1 + 288)));
  llvm::deallocate_buffer(*(llvm **)(a1 + 248), (void *)(16 * *(unsigned int *)(a1 + 264)));
  v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(_QWORD *)(a1 + 232) = v2;
    operator delete(v2);
  }
  sub_22E3B4EF4(a1 + 128);
  llvm::deallocate_buffer(*(llvm **)(a1 + 104), (void *)(16 * *(unsigned int *)(a1 + 120)));
  v3 = *(void **)(a1 + 80);
  if (v3)
  {
    *(_QWORD *)(a1 + 88) = v3;
    operator delete(v3);
  }
  sub_22F25805C((unsigned int *)(a1 + 56));
  llvm::deallocate_buffer(*(llvm **)(a1 + 56), (void *)(32 * *(unsigned int *)(a1 + 72)));
  v4 = *(_QWORD **)(a1 + 32);
  if (v4)
  {
    sub_22F066774(a1 + 32, v4);
    operator delete(*(void **)(a1 + 32));
  }
  sub_22F3CD838(a1 + 8);
  llvm::deallocate_buffer(*(llvm **)(a1 + 8), (void *)(16 * *(unsigned int *)(a1 + 24)));
  return a1;
}

uint64_t sub_22F3CD838(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = *(unsigned int *)(result + 16);
  if ((_DWORD)v1)
  {
    v2 = 16 * v1;
    v3 = (uint64_t *)(*(_QWORD *)result + 8);
    do
    {
      if ((*(v3 - 1) | 0x1000) != 0xFFFFFFFFFFFFF000)
      {
        result = *v3;
        *v3 = 0;
        if (result)
        {
          v4 = sub_22F3C96C4(result);
          result = MEMORY[0x2348A0E9C](v4, 0x10F0C4041095D91);
        }
      }
      v3 += 2;
      v2 -= 16;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_22F3CD8AC(uint64_t a1, _QWORD *a2, int a3, char a4, char a5, char a6)
{
  int v11;
  double (*v12)(uint64_t, _OWORD *);
  _QWORD **(*v13)(uint64_t, _QWORD **);
  uint64_t *(*v14)(uint64_t, uint64_t *, uint64_t *);

  *(_QWORD *)a1 = *a2;
  v11 = sub_22F3E0BD0(a3);
  *(_DWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 12) = v11;
  *(_DWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = a4;
  *(_BYTE *)(a1 + 41) = a6;
  *(_BYTE *)(a1 + 42) = a5;
  v12 = sub_22F066F1C;
  *(_BYTE *)(a1 + 43) = 0;
  if (a3 != 9)
    v12 = 0;
  v13 = sub_22F066F28;
  if (a3 != 9)
    v13 = 0;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  v14 = sub_22F066F30;
  if (a3 != 9)
    v14 = 0;
  *(_QWORD *)(a1 + 64) = v14;
  return a1;
}

uint64_t sub_22F3CD948(uint64_t a1, _QWORD *a2, int a3, int a4, char a5, char a6, char a7)
{
  int v13;
  void (*v14)(int, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v15)(uint64_t, _QWORD **, uint64_t);
  void (*v16)(uint64_t, uint64_t *, uint64_t *, uint64_t);

  *(_QWORD *)a1 = *a2;
  v13 = sub_22F3E0BD0(a3);
  *(_DWORD *)(a1 + 8) = v13;
  *(_DWORD *)(a1 + 12) = v13 * a4;
  *(_DWORD *)(a1 + 16) = ((v13 * a4 + 7) & 0xFFFFFFF8) + 8;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = a5;
  *(_BYTE *)(a1 + 41) = a7;
  *(_BYTE *)(a1 + 42) = a6;
  *(_BYTE *)(a1 + 43) = 1;
  v14 = sub_22F066F38;
  if (a3 != 9)
    v14 = 0;
  v15 = sub_22F066F68;
  if (a3 != 9)
    v15 = 0;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  v16 = sub_22F066FB0;
  if (a3 != 9)
    v16 = 0;
  *(_QWORD *)(a1 + 64) = v16;
  return a1;
}

uint64_t sub_22F3CD9FC(uint64_t a1, _QWORD *a2, int a3, char a4)
{
  void (*v7)(int, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v8)(uint64_t, _QWORD **, uint64_t);
  void (*v9)(uint64_t, uint64_t *, uint64_t *, uint64_t);

  *(_QWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 8) = sub_22F3E0BD0(a3);
  *(_QWORD *)(a1 + 12) = 0x8FFFFFFFFLL;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 42) = a4;
  *(_BYTE *)(a1 + 43) = 1;
  v7 = sub_22F066F38;
  if (a3 != 9)
    v7 = 0;
  v8 = sub_22F066F68;
  if (a3 != 9)
    v8 = 0;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  v9 = sub_22F066FB0;
  if (a3 != 9)
    v9 = 0;
  *(_QWORD *)(a1 + 64) = v9;
  return a1;
}

BOOL sub_22F3CDA90(int *a1, unsigned int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a2 >> 6;
  v3 = *a1;
  v4 = *(_QWORD *)&a1[2 * v2 + 2];
  v5 = (1 << a2);
  if ((v4 & v5) == 0)
  {
    *(_QWORD *)&a1[2 * v2 + 2] = v4 | v5;
    *a1 = --v3;
  }
  return v3 == 0;
}

BOOL sub_22F3CDAD0(uint64_t a1, unsigned int a2)
{
  return ((1 << a2) & *(_DWORD *)(a1 + 8 * (a2 >> 6) + 8)) != 0;
}

_DWORD *sub_22F3CDAF0(unsigned int a1)
{
  unint64_t v2;
  _DWORD *v3;
  _DWORD *v4;
  void *v5;
  uint64_t v6;

  v2 = a1;
  v3 = malloc_type_malloc((a1 + 63) & 0x1FFFFFFC0 | 8, 0x1796CED3uLL);
  v4 = v3;
  *v3 = a1;
  if (a1 >= 0x40)
  {
    v5 = v3 + 2;
    v6 = v2 >> 6;
    if (v2 >> 6 <= 1)
      v6 = 1;
    bzero(v5, 8 * v6);
  }
  return v4;
}

uint64_t sub_22F3CDB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = &unk_24FAC5F30;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = a1 + 48;
  *(_QWORD *)(a1 + 40) = 0x200000000;
  *(_QWORD *)(a1 + 336) = a2;
  *(_QWORD *)(a1 + 344) = a3;
  v8 = a1 + 352;
  sub_22F3E0558(a1 + 352, a4, a3, a5, a2, a1);
  *(_QWORD *)(a1 + 464) = 0;
  *(_BYTE *)(a1 + 472) = 0;
  *(_BYTE *)(a1 + 476) = 0;
  *(_QWORD *)(a1 + 480) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 432) = a6;
  *(_DWORD *)(a1 + 456) = 0;
  *(_QWORD *)(a1 + 488) = 1;
  *(_DWORD *)(a1 + 496) = 0;
  v9 = operator new();
  memset(v11, 0, sizeof(v11));
  *(_QWORD *)(a1 + 416) = sub_22F3E00EC(v9, v8, 0, 0, 0, v11);
  sub_22F3E08B8((_QWORD **)v11);
  return a1;
}

uint64_t sub_22F3CDC50@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  int v5;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  if ((_DWORD)result)
  {
    a2[8] &= ~1u;
    *a2 = 1;
  }
  else if (*(_BYTE *)(a1 + 476))
  {
    result = operator new();
    v5 = *(_DWORD *)(a1 + 472);
    *(_QWORD *)result = &unk_24FAC5C10;
    *(_DWORD *)(result + 8) = v5;
    a2[8] |= 1u;
    *(_QWORD *)a2 = result;
  }
  else
  {
    a2[8] &= ~1u;
    *a2 = 0;
  }
  return result;
}

uint64_t sub_22F3CDCF4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  int v5;

  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
  if ((_DWORD)result)
  {
    a2[8] &= ~1u;
    *a2 = 1;
  }
  else if (*(_BYTE *)(a1 + 476))
  {
    result = operator new();
    v5 = *(_DWORD *)(a1 + 472);
    *(_QWORD *)result = &unk_24FAC5C10;
    *(_DWORD *)(result + 8) = v5;
    a2[8] |= 1u;
    *(_QWORD *)a2 = result;
  }
  else
  {
    a2[8] &= ~1u;
    *a2 = 0;
  }
  return result;
}

uint64_t sub_22F3CDD98(uint64_t a1, _DWORD *a2)
{
  if (!*(_BYTE *)(a1 + 476))
  {
    *(_DWORD *)(a1 + 472) = *a2;
    *(_BYTE *)(a1 + 476) = 1;
  }
  return 0;
}

uint64_t sub_22F3CDDB8(uint64_t a1)
{
  uint64_t (***v2)();
  void (**v3)(uint64_t (***)());
  uint64_t (**v4)();
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (**v9)(_QWORD *);
  _QWORD *v11;
  _QWORD v12[3];
  _QWORD *v13;
  uint64_t (**v14)();
  uint64_t v15;
  _QWORD *v16;
  uint64_t (***v17)();
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v13 = 0;
  v14 = &off_24FAC6090;
  v15 = a1;
  v16 = v12;
  v17 = &v14;
  sub_22E63BEA4(&v14, v12);
  v2 = v17;
  if (v17 == &v14)
  {
    v3 = (void (**)(uint64_t (***)()))(v14 + 4);
    v2 = &v14;
LABEL_3:
    (*v3)(v2);
    goto LABEL_4;
  }
  if (v17)
  {
    v3 = (void (**)(uint64_t (***)()))(*v17 + 5);
    goto LABEL_3;
  }
LABEL_4:
  sub_22F3CDF00(*(_QWORD **)(a1 + 400), (uint64_t *)&v14);
  if ((v15 + 1) > 1)
    v4 = (uint64_t (**)())((char *)v14 + v15);
  else
    v4 = v14;
  v5 = sub_22F066EB0(v4[3]);
  v6 = *(_QWORD *)(a1 + 432);
  v11 = v5;
  if (!v13)
    sub_22E4A06C4();
  v7 = (*(uint64_t (**)(_QWORD *, _QWORD **, uint64_t (***)(), uint64_t))(*v13 + 48))(v13, &v11, &v14, v6);
  sub_22F3E08B8(&v14);
  v8 = v13;
  if (v13 == v12)
  {
    v9 = (void (**)(_QWORD *))(v12[0] + 32);
    v8 = v12;
    goto LABEL_10;
  }
  if (v13)
  {
    v9 = (void (**)(_QWORD *))(*v13 + 40);
LABEL_10:
    (*v9)(v8);
  }
  return v7;
}

void sub_22F3CDF00(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD **v8;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 16);
  v6 = v5 - *a1 - 24;
  v7 = 32;
  if (v6 <= 0x1F)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = (_QWORD **)(v5 - v7);
  sub_22F3E0878(a2, (uint64_t *)(v5 - v7));
  sub_22F3E08B8(v8);
  sub_22F3E04C8(a1, 0x20uLL);
}

uint64_t sub_22F3CDF74(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3CDF90 + 4 * byte_22F4A5570[a2]))();
}

uint64_t sub_22F3CDF90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3CE100(a1 + 352, *(_QWORD *)(a1 + 464));
}

uint64_t sub_22F3CE100(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_BYTE *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F069350(a1, a2, 9, &v17, &v18);
}

uint64_t sub_22F3CE1EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 + v7;
  return 1;
}

uint64_t sub_22F3CE2C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 v17;
  unsigned __int16 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_WORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F069654(a1, a2, 17, &v17, &v18);
}

uint64_t sub_22F3CE3B0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_WORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_WORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_WORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 + v7;
  return 1;
}

uint64_t sub_22F3CE488(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v17;
  unsigned int v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_DWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F069958(a1, a2, 33, &v17, &v18);
}

uint64_t sub_22F3CE574(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_DWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_DWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_DWORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 + v7;
  return 1;
}

uint64_t sub_22F3CE64C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_QWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F069C60(a1, a2, 65, &v17, &v18);
}

uint64_t sub_22F3CE738(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_QWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_QWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 + v7;
  return 1;
}

uint64_t sub_22F3CE810(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = (v13 | v7) & 1;
  return 1;
}

uint64_t sub_22F3CE8EC(uint64_t a1, char a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 400), 8) = a2;
  }
  return 1;
}

uint64_t sub_22F3CE938(uint64_t a1, __int16 a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    *(_WORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 400), 8) = a2;
  }
  return 1;
}

uint64_t sub_22F3CE984(uint64_t a1, int a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    *(_DWORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 400), 8) = a2;
  }
  return 1;
}

uint64_t sub_22F3CE9D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    *sub_22F3E03F8(*(_QWORD *)(a1 + 400), 8) = a2;
  }
  return 1;
}

void sub_22F3CEA1C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CEA40(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  sub_22F3CEAC0(a1, *a3);
  return 1;
}

_QWORD *sub_22F3CEAC0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    result[60] = a2;
    v2 = result[50];
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v5 = v4 - *(_QWORD *)v2 - 24;
    v6 = 8;
    if (v5 <= 7)
    {
      do
      {
        v6 -= v5;
        v3 = *(_QWORD *)(v3 + 8);
        v4 = *(_QWORD *)(v3 + 16);
        v5 = v4 - v3 - 24;
      }
      while (v6 > v5);
    }
    v7 = (_BYTE *)(v4 - v6);
    result = sub_22F3E03F8(v2, 8);
    *(_BYTE *)result = *v7;
  }
  return result;
}

_QWORD *sub_22F3CEB40(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _WORD *v7;

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    result[60] = a2;
    v2 = result[50];
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v5 = v4 - *(_QWORD *)v2 - 24;
    v6 = 8;
    if (v5 <= 7)
    {
      do
      {
        v6 -= v5;
        v3 = *(_QWORD *)(v3 + 8);
        v4 = *(_QWORD *)(v3 + 16);
        v5 = v4 - v3 - 24;
      }
      while (v6 > v5);
    }
    v7 = (_WORD *)(v4 - v6);
    result = sub_22F3E03F8(v2, 8);
    *(_WORD *)result = *v7;
  }
  return result;
}

_QWORD *sub_22F3CEBC0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _DWORD *v7;

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    result[60] = a2;
    v2 = result[50];
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v5 = v4 - *(_QWORD *)v2 - 24;
    v6 = 8;
    if (v5 <= 7)
    {
      do
      {
        v6 -= v5;
        v3 = *(_QWORD *)(v3 + 8);
        v4 = *(_QWORD *)(v3 + 16);
        v5 = v4 - v3 - 24;
      }
      while (v6 > v5);
    }
    v7 = (_DWORD *)(v4 - v6);
    result = sub_22F3E03F8(v2, 8);
    *(_DWORD *)result = *v7;
  }
  return result;
}

_QWORD *sub_22F3CEC40(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    result[60] = a2;
    v2 = result[50];
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v5 = v4 - *(_QWORD *)v2 - 24;
    v6 = 8;
    if (v5 <= 7)
    {
      do
      {
        v6 -= v5;
        v3 = *(_QWORD *)(v3 + 8);
        v4 = *(_QWORD *)(v3 + 16);
        v5 = v4 - v3 - 24;
      }
      while (v6 > v5);
    }
    v7 = (_QWORD *)(v4 - v6);
    result = sub_22F3E03F8(v2, 8);
    *result = *v7;
  }
  return result;
}

uint64_t **sub_22F3CECC0(uint64_t **result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t **v7;
  uint64_t **v8;

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    result[60] = a2;
    v2 = (uint64_t)result[50];
    v3 = *(_QWORD *)v2;
    v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    v5 = v4 - *(_QWORD *)v2 - 24;
    v6 = 32;
    if (v5 <= 0x1F)
    {
      do
      {
        v6 -= v5;
        v3 = *(_QWORD *)(v3 + 8);
        v4 = *(_QWORD *)(v3 + 16);
        v5 = v4 - v3 - 24;
      }
      while (v6 > v5);
    }
    v7 = (uint64_t **)(v4 - v6);
    v8 = (uint64_t **)sub_22F3E03F8(v2, 32);
    return sub_22F3E083C(v8, v7);
  }
  return result;
}

void sub_22F3CED44(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CED6C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DABB0, (uint64_t)&v4);
}

void sub_22F3CEF4C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    sub_22F06C058(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB354, v3 - 1);
    JUMPOUT(0x22F3CEF40);
  }
  JUMPOUT(0x22F3CEF3CLL);
}

uint64_t sub_22F3CEFAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v5[4];
  uint64_t v6[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v6);
  v2 = *(_QWORD *)(a1 + 48);
  sub_22F3D9148((uint64_t)v6, (uint64_t)v5);
  v3 = sub_22F3E03F8(v2, 32);
  sub_22F3E0878(v3, (uint64_t *)v5);
  sub_22F3E08B8(v5);
  sub_22F3E08B8((_QWORD **)v6);
  return 1;
}

void sub_22F3CF014(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CF03C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB360, (uint64_t)&v4);
}

void sub_22F3CF27C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CF2A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB4E8, (uint64_t)&v4);
}

BOOL sub_22F3CF4E4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) || !sub_22F070058(a1, a2, v10, 2))
    return 0;
  v13 = *(_DWORD *)(v10 + 12) + a3;
  v14 = *(_QWORD **)v10;
  v17 = v14;
  v18 = v13;
  v19 = v13;
  v20 = 0;
  v21 = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)&v17);
  v11 = sub_22F070108(a1, a2, (unsigned int *)&v17);
  if (v11)
  {
    v15 = *(_QWORD *)(a1 + 48);
    v16 = (char *)v17 + v19;
    *(_BYTE *)sub_22F3E03F8(v15, 8) = v16[32];
  }
  sub_22F3E08B8(&v17);
  return v11;
}

BOOL sub_22F3CF5F8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) || !sub_22F070058(a1, a2, v10, 2))
    return 0;
  v13 = *(_DWORD *)(v10 + 12) + a3;
  v14 = *(_QWORD **)v10;
  v17 = v14;
  v18 = v13;
  v19 = v13;
  v20 = 0;
  v21 = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)&v17);
  v11 = sub_22F070108(a1, a2, (unsigned int *)&v17);
  if (v11)
  {
    v15 = *(_QWORD *)(a1 + 48);
    v16 = (char *)v17 + v19;
    *(_WORD *)sub_22F3E03F8(v15, 8) = *((_WORD *)v16 + 16);
  }
  sub_22F3E08B8(&v17);
  return v11;
}

BOOL sub_22F3CF70C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) || !sub_22F070058(a1, a2, v10, 2))
    return 0;
  v13 = *(_DWORD *)(v10 + 12) + a3;
  v14 = *(_QWORD **)v10;
  v17 = v14;
  v18 = v13;
  v19 = v13;
  v20 = 0;
  v21 = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)&v17);
  v11 = sub_22F070108(a1, a2, (unsigned int *)&v17);
  if (v11)
  {
    v15 = *(_QWORD *)(a1 + 48);
    v16 = (char *)v17 + v19;
    *(_DWORD *)sub_22F3E03F8(v15, 8) = *((_DWORD *)v16 + 8);
  }
  sub_22F3E08B8(&v17);
  return v11;
}

BOOL sub_22F3CF820(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) || !sub_22F070058(a1, a2, v10, 2))
    return 0;
  v13 = *(_DWORD *)(v10 + 12) + a3;
  v14 = *(_QWORD **)v10;
  v17 = v14;
  v18 = v13;
  v19 = v13;
  v20 = 0;
  v21 = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)&v17);
  v11 = sub_22F070108(a1, a2, (unsigned int *)&v17);
  if (v11)
  {
    v15 = *(_QWORD *)(a1 + 48);
    v16 = (char *)v17 + v19;
    *sub_22F3E03F8(v15, 8) = *((_QWORD *)v16 + 4);
  }
  sub_22F3E08B8(&v17);
  return v11;
}

BOOL sub_22F3CF934(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t **v16;
  uint64_t **v17;
  _QWORD *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;

  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) || !sub_22F070058(a1, a2, v10, 2))
    return 0;
  v13 = *(_DWORD *)(v10 + 12) + a3;
  v14 = *(_QWORD **)v10;
  v18 = v14;
  v19 = v13;
  v20 = v13;
  v21 = 0;
  v22 = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)&v18);
  v11 = sub_22F070108(a1, a2, (unsigned int *)&v18);
  if (v11)
  {
    v15 = *(_QWORD *)(a1 + 48);
    v16 = (uint64_t **)((char *)v18 + v20 + 32);
    v17 = (uint64_t **)sub_22F3E03F8(v15, 32);
    sub_22F3E083C(v17, v16);
  }
  sub_22F3E08B8(&v18);
  return v11;
}

BOOL sub_22F3CFA4C(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  char *v8;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 2) && sub_22F070058(a1, a2, (uint64_t)&v15, 2))
  {
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v6 = sub_22F070108(a1, a2, (unsigned int *)&v10);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (char *)v10 + v12;
      *(_BYTE *)sub_22F3E03F8(v7, 8) = v8[32];
    }
    sub_22F3E08B8(&v10);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8(&v15);
  return v6;
}

BOOL sub_22F3CFB34(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  char *v8;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 2) && sub_22F070058(a1, a2, (uint64_t)&v15, 2))
  {
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v6 = sub_22F070108(a1, a2, (unsigned int *)&v10);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (char *)v10 + v12;
      *(_WORD *)sub_22F3E03F8(v7, 8) = *((_WORD *)v8 + 16);
    }
    sub_22F3E08B8(&v10);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8(&v15);
  return v6;
}

BOOL sub_22F3CFC1C(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  char *v8;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 2) && sub_22F070058(a1, a2, (uint64_t)&v15, 2))
  {
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v6 = sub_22F070108(a1, a2, (unsigned int *)&v10);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (char *)v10 + v12;
      *(_DWORD *)sub_22F3E03F8(v7, 8) = *((_DWORD *)v8 + 8);
    }
    sub_22F3E08B8(&v10);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8(&v15);
  return v6;
}

BOOL sub_22F3CFD04(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  char *v8;
  _QWORD *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 2) && sub_22F070058(a1, a2, (uint64_t)&v15, 2))
  {
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v6 = sub_22F070108(a1, a2, (unsigned int *)&v10);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (char *)v10 + v12;
      *sub_22F3E03F8(v7, 8) = *((_QWORD *)v8 + 4);
    }
    sub_22F3E08B8(&v10);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8(&v15);
  return v6;
}

BOOL sub_22F3CFDEC(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t **v9;
  _QWORD *v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v16);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v16, 2) && sub_22F070058(a1, a2, (uint64_t)&v16, 2))
  {
    v11 = v16;
    v12 = v17 + a3;
    v13 = v17 + a3;
    v14 = 0;
    v15 = 0;
    if (v16)
      sub_22F3DFDF8(v16, (uint64_t)&v11);
    v6 = sub_22F070108(a1, a2, (unsigned int *)&v11);
    if (v6)
    {
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (uint64_t **)((char *)v11 + v13 + 32);
      v9 = (uint64_t **)sub_22F3E03F8(v7, 32);
      sub_22F3E083C(v9, v8);
    }
    sub_22F3E08B8(&v11);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8(&v16);
  return v6;
}

void sub_22F3CFED8(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3CFF00(uint64_t a1, uint64_t a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a4;
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a3);
    if (*(_BYTE *)(v4 + 17))
      return 0;
    *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 400), 8) = *(_BYTE *)(v4 + 32);
  }
  return 1;
}

uint64_t sub_22F3D0024(uint64_t a1, uint64_t a2, unsigned int a3, _QWORD *a4)
{
  return sub_22F3D0038(a1, a3, a4);
}

uint64_t sub_22F3D0038(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t **v5;
  uint64_t **v6;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a2);
    if (*(_BYTE *)(v3 + 17))
      return 0;
    v5 = (uint64_t **)(v3 + 32);
    v6 = (uint64_t **)sub_22F3E03F8(*(_QWORD *)(a1 + 400), 32);
    sub_22F3E083C(v6, v5);
  }
  return 1;
}

uint64_t sub_22F3D00A0(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3D00BC + 4 * byte_22F4A55AB[a2]))();
}

uint64_t sub_22F3D00BC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F0670F4(a1, a3);
}

uint64_t sub_22F3D00C8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F0670F4(a1, a3);
}

uint64_t sub_22F3D00D4(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F067158(a1, a3);
}

uint64_t sub_22F3D00E0(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F067158(a1, a3);
}

uint64_t sub_22F3D00EC(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F0671BC(a1, a3);
}

uint64_t sub_22F3D00F8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F0671BC(a1, a3);
}

uint64_t sub_22F3D0104(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F067220(a1, a3);
}

uint64_t sub_22F3D0110(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F067220(a1, a3);
}

uint64_t sub_22F3D011C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F0670F4(a1, a3);
}

uint64_t sub_22F3D0128(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F067284(a1, a3);
}

uint64_t sub_22F3D0134(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3D0150 + 4 * byte_22F4A55B5[a2]))();
}

uint64_t sub_22F3D0150(uint64_t a1, uint64_t a2, unsigned int a3, _QWORD *a4)
{
  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a4;
  return sub_22F3D02E8(a1 + 352, *(_QWORD *)(a1 + 464), a3);
}

uint64_t sub_22F3D02E8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  _BYTE *v8;

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (_BYTE *)sub_22F06C11C(*(_QWORD *)(a1 + 64), a3);
    *(_BYTE *)sub_22F3E03F8(v7, 8) = *v8;
  }
  return v5 ^ 1u;
}

uint64_t sub_22F3D0358(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  _WORD *v8;

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (_WORD *)sub_22F06C11C(*(_QWORD *)(a1 + 64), a3);
    *(_WORD *)sub_22F3E03F8(v7, 8) = *v8;
  }
  return v5 ^ 1u;
}

uint64_t sub_22F3D03C8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  _DWORD *v8;

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (_DWORD *)sub_22F06C11C(*(_QWORD *)(a1 + 64), a3);
    *(_DWORD *)sub_22F3E03F8(v7, 8) = *v8;
  }
  return v5 ^ 1u;
}

uint64_t sub_22F3D0438(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  _QWORD *v8;

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (_QWORD *)sub_22F06C11C(*(_QWORD *)(a1 + 64), a3);
    *sub_22F3E03F8(v7, 8) = *v8;
  }
  return v5 ^ 1u;
}

uint64_t sub_22F3D04A8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  uint64_t **v8;
  uint64_t **v9;

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v8 = (uint64_t **)sub_22F06C11C(*(_QWORD *)(a1 + 64), a3);
    v9 = (uint64_t **)sub_22F3E03F8(v7, 32);
    sub_22F3E083C(v9, v8);
  }
  return v5 ^ 1u;
}

uint64_t sub_22F3D0518(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v14);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v14, 2) && sub_22F070058(a1, a2, (uint64_t)&v14, 2))
  {
    v9 = v14;
    v10 = v15 + a3;
    v11 = v15 + a3;
    v12 = 0;
    v13 = 0;
    if (v14)
      sub_22F3DFDF8(v14, (uint64_t)&v9);
    nullsub_910(&v14);
    sub_22F3E0BB4((uint64_t)&v9);
    v6 = sub_22F3E03F8(*(_QWORD *)(a1 + 48), 32);
    sub_22F3E0878(v6, (uint64_t *)&v9);
    sub_22F3E08B8(&v9);
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  sub_22F3E08B8(&v14);
  return v7;
}

BOOL sub_22F3D05F0(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t *v10;
  _QWORD *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v11 = v9;
    v12 = v8;
    v13 = v8;
    v14 = 0;
    v15 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v11);
    nullsub_910(v7 + 32);
    sub_22F3E0BB4((uint64_t)&v11);
    v10 = sub_22F3E03F8(*(_QWORD *)(a1 + 48), 32);
    sub_22F3E0878(v10, (uint64_t *)&v11);
    sub_22F3E08B8(&v11);
    return 1;
  }
  return result;
}

BOOL sub_22F3D06B8(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  v6 = sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 0);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 48);
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v8 = sub_22F3E03F8(v7, 32);
    sub_22F3E0878(v8, (uint64_t *)&v10);
    sub_22F3E08B8(&v10);
  }
  sub_22F3E08B8(&v15);
  return v6;
}

uint64_t sub_22F3D0764(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v15, 2)
    && sub_22F3DC47C(a1, a2, (uint64_t)&v15)
    && sub_22F070058(a1, a2, (uint64_t)&v15, 2))
  {
    v6 = *(_QWORD *)(a1 + 48);
    v10 = v15;
    v11 = v16 + a3;
    v12 = v16 + a3;
    v13 = 0;
    v14 = 0;
    if (v15)
      sub_22F3DFDF8(v15, (uint64_t)&v10);
    v7 = sub_22F3E03F8(v6, 32);
    sub_22F3E0878(v7, (uint64_t *)&v10);
    sub_22F3E08B8(&v10);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  sub_22F3E08B8(&v15);
  return v8;
}

uint64_t sub_22F3D0844(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v6[4];

  v3 = *(_QWORD *)(a1 + 48);
  sub_22F3E0BEC(*(_QWORD *)(a1 + 40), a3, v6);
  v4 = sub_22F3E03F8(v3, 32);
  sub_22F3E0878(v4, (uint64_t *)v6);
  sub_22F3E08B8(v6);
  return 1;
}

uint64_t sub_22F3D0894(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9[4];

  v5 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
  if ((v5 & 1) == 0)
  {
    v7 = *(_QWORD *)(a1 + 48);
    sub_22F071598(*(_QWORD *)(a1 + 64), a3, (uint64_t ***)v9);
    v8 = sub_22F3E03F8(v7, 32);
    sub_22F3E0878(v8, (uint64_t *)v9);
    sub_22F3E08B8(v9);
  }
  return v5 ^ 1u;
}

BOOL sub_22F3D0914(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t *v11;
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_QWORD *)(a1 + 48);
    v9 = *(_DWORD *)(v7 + 44) + a3;
    v10 = *(_QWORD **)(v7 + 32);
    v12 = v10;
    v13 = v9;
    v14 = v9;
    v15 = 0;
    v16 = 0;
    if (v10)
      sub_22F3DFDF8(v10, (uint64_t)&v12);
    v11 = sub_22F3E03F8(v8, 32);
    sub_22F3E0878(v11, (uint64_t *)&v12);
    sub_22F3E08B8(&v12);
    return 1;
  }
  return result;
}

uint64_t sub_22F3D09C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) == 0
    && sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(*(_QWORD *)(a1 + 64) + 32)))
  {
    return sub_22F3D9254(a1, a2, a3, (uint64_t **)(*(_QWORD *)(a1 + 64) + 32));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22F3D0A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v8[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v8);
  v6 = 0;
  if (sub_22F06FEF4(a1, a2, (uint64_t *)v8, 0))
    v6 = sub_22F3D9254(a1, a2, a3, v8);
  sub_22F3E08B8(v8);
  return v6;
}

BOOL sub_22F3D0AC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  _BOOL8 v7;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v6 + 32)))
    return 0;
  v9 = *(_DWORD *)(v6 + 44) + a3;
  v10 = *(_QWORD **)(v6 + 32);
  v13 = v10;
  v14 = v9;
  v15 = v9;
  v16 = 0;
  v17 = 0;
  if (v10)
    sub_22F3DFDF8(v10, (uint64_t)&v13);
  v7 = sub_22F070108(a1, a2, (unsigned int *)&v13);
  if (v7)
  {
    v11 = *(_QWORD *)(a1 + 48);
    v12 = (char *)v13 + v15;
    *(_BYTE *)sub_22F3E03F8(v11, 8) = v12[32];
  }
  sub_22F3E08B8(&v13);
  return v7;
}

BOOL sub_22F3D0B94(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  _BOOL8 v7;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v6 + 32)))
    return 0;
  v9 = *(_DWORD *)(v6 + 44) + a3;
  v10 = *(_QWORD **)(v6 + 32);
  v13 = v10;
  v14 = v9;
  v15 = v9;
  v16 = 0;
  v17 = 0;
  if (v10)
    sub_22F3DFDF8(v10, (uint64_t)&v13);
  v7 = sub_22F070108(a1, a2, (unsigned int *)&v13);
  if (v7)
  {
    v11 = *(_QWORD *)(a1 + 48);
    v12 = (char *)v13 + v15;
    *(_WORD *)sub_22F3E03F8(v11, 8) = *((_WORD *)v12 + 16);
  }
  sub_22F3E08B8(&v13);
  return v7;
}

BOOL sub_22F3D0C64(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  _BOOL8 v7;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v6 + 32)))
    return 0;
  v9 = *(_DWORD *)(v6 + 44) + a3;
  v10 = *(_QWORD **)(v6 + 32);
  v13 = v10;
  v14 = v9;
  v15 = v9;
  v16 = 0;
  v17 = 0;
  if (v10)
    sub_22F3DFDF8(v10, (uint64_t)&v13);
  v7 = sub_22F070108(a1, a2, (unsigned int *)&v13);
  if (v7)
  {
    v11 = *(_QWORD *)(a1 + 48);
    v12 = (char *)v13 + v15;
    *(_DWORD *)sub_22F3E03F8(v11, 8) = *((_DWORD *)v12 + 8);
  }
  sub_22F3E08B8(&v13);
  return v7;
}

BOOL sub_22F3D0D34(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  _BOOL8 v7;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v6 + 32)))
    return 0;
  v9 = *(_DWORD *)(v6 + 44) + a3;
  v10 = *(_QWORD **)(v6 + 32);
  v13 = v10;
  v14 = v9;
  v15 = v9;
  v16 = 0;
  v17 = 0;
  if (v10)
    sub_22F3DFDF8(v10, (uint64_t)&v13);
  v7 = sub_22F070108(a1, a2, (unsigned int *)&v13);
  if (v7)
  {
    v11 = *(_QWORD *)(a1 + 48);
    v12 = (char *)v13 + v15;
    *sub_22F3E03F8(v11, 8) = *((_QWORD *)v12 + 4);
  }
  sub_22F3E08B8(&v13);
  return v7;
}

BOOL sub_22F3D0E04(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  _BOOL8 v7;
  unsigned int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t **v13;
  _QWORD *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v6 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v6 + 32)))
    return 0;
  v9 = *(_DWORD *)(v6 + 44) + a3;
  v10 = *(_QWORD **)(v6 + 32);
  v14 = v10;
  v15 = v9;
  v16 = v9;
  v17 = 0;
  v18 = 0;
  if (v10)
    sub_22F3DFDF8(v10, (uint64_t)&v14);
  v7 = sub_22F070108(a1, a2, (unsigned int *)&v14);
  if (v7)
  {
    v11 = *(_QWORD *)(a1 + 48);
    v12 = (uint64_t **)((char *)v14 + v16 + 32);
    v13 = (uint64_t **)sub_22F3E03F8(v11, 32);
    sub_22F3E083C(v13, v12);
  }
  sub_22F3E08B8(&v14);
  return v7;
}

uint64_t sub_22F3D0ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  _QWORD *v18;
  int v19;
  _QWORD *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(unsigned __int8 *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v18);
  v11 = v19 + *(_DWORD *)(a3 + 8);
  v20 = v18;
  v21 = v11;
  v22 = v11;
  v23 = 0;
  v24 = 0;
  if (v18)
    sub_22F3DFDF8(v18, (uint64_t)&v20);
  sub_22F3E08B8(&v18);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  if ((v10 & ((0x800000 << v14) >> 24)) != 0)
    v15 = 255 << v14;
  else
    v15 = 0;
  v16 = v15 | v10 & ~(-1 << v14);
  if (v14 > 7)
    LOBYTE(v16) = v10;
  *((_BYTE *)v20 + v22 + 32) = v16;
  sub_22F3E0BB4((uint64_t)&v20);
  sub_22F3E0AD4((unsigned int *)&v20);
  sub_22F3E08B8(&v20);
  return 1;
}

uint64_t sub_22F3D100C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_BYTE *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  if (v14 <= 7)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  *((_BYTE *)v19 + v21 + 32) = v15 & v10;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D1124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  _QWORD *v18;
  int v19;
  _QWORD *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(unsigned __int16 *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v18);
  v11 = v19 + *(_DWORD *)(a3 + 8);
  v20 = v18;
  v21 = v11;
  v22 = v11;
  v23 = 0;
  v24 = 0;
  if (v18)
    sub_22F3DFDF8(v18, (uint64_t)&v20);
  sub_22F3E08B8(&v18);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  if ((v10 & ((0x8000 << v14) >> 16)) != 0)
    v15 = 0xFFFF << v14;
  else
    v15 = 0;
  v16 = v15 | v10 & ~(-1 << v14);
  if (v14 > 0xF)
    LOWORD(v16) = v10;
  *(_WORD *)((char *)v20 + v22 + 32) = v16;
  sub_22F3E0BB4((uint64_t)&v20);
  sub_22F3E0AD4((unsigned int *)&v20);
  sub_22F3E08B8(&v20);
  return 1;
}

uint64_t sub_22F3D1258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  __int16 v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_WORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  if (v14 <= 0xF)
    v15 = ~(unsigned __int16)(-1 << v14);
  else
    v15 = -1;
  *(_WORD *)((char *)v19 + v21 + 32) = v15 & v10;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D1370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_DWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  v15 = ((int)(v10 >> (v14 - 1) << 31) >> 31) & (-1 << v14) | v10 & ~(-1 << v14);
  if (v14 > 0x1F)
    v15 = v10;
  *(_DWORD *)((char *)v19 + v21 + 32) = v15;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D149C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_DWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  if (v14 <= 0x1F)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  *(_DWORD *)((char *)v19 + v21 + 32) = v15 & v10;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D15B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_QWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  v15 = ((uint64_t)(v10 >> (v14 - 1) << 63) >> 63) & (-1 << v14) | v10 & ~(-1 << v14);
  if (v14 > 0x3F)
    v15 = v10;
  *(_QWORD *)((char *)v19 + v21 + 32) = v15;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D16E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  _QWORD *v17;
  int v18;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_QWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v11 = v18 + *(_DWORD *)(a3 + 8);
  v19 = v17;
  v20 = v11;
  v21 = v11;
  v22 = 0;
  v23 = 0;
  if (v17)
    sub_22F3DFDF8(v17, (uint64_t)&v19);
  sub_22F3E08B8(&v17);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  v14 = sub_22EFC2EF4(v12, v13);
  v15 = -1;
  if (v14 <= 0x3F)
    v15 = ~(-1 << v14);
  *(_QWORD *)((char *)v19 + v21 + 32) = v15 & v10;
  sub_22F3E0BB4((uint64_t)&v19);
  sub_22F3E0AD4((unsigned int *)&v19);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t sub_22F3D17F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;
  int v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_BYTE *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v15);
  v11 = v16 + *(_DWORD *)(a3 + 8);
  v17 = v15;
  v18 = v11;
  v19 = v11;
  v20 = 0;
  v21 = 0;
  if (v15)
    sub_22F3DFDF8(v15, (uint64_t)&v17);
  sub_22F3E08B8(&v15);
  v12 = *(_QWORD *)a3;
  v13 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
  sub_22EFC2EF4(v12, v13);
  *((_BYTE *)v17 + v19 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v17);
  sub_22F3E0AD4((unsigned int *)&v17);
  sub_22F3E08B8(&v17);
  return 1;
}

uint64_t sub_22F3D18FC(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v18[3];
  unsigned int v19;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_BYTE *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  sub_22F3D9BC0(v13 - v15, a3, (uint64_t)v18);
  v16 = sub_22F3DC694(a1, a2, v18);
  if ((_DWORD)v16)
  {
    sub_22F3E0AD4(v18);
    *(_BYTE *)(*(_QWORD *)v18 + v19 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v18);
  return v16;
}

uint64_t sub_22F3D1A04(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v18[3];
  unsigned int v19;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_WORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  sub_22F3D9BC0(v13 - v15, a3, (uint64_t)v18);
  v16 = sub_22F3DC694(a1, a2, v18);
  if ((_DWORD)v16)
  {
    sub_22F3E0AD4(v18);
    *(_WORD *)(*(_QWORD *)v18 + v19 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v18);
  return v16;
}

uint64_t sub_22F3D1B0C(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v18[3];
  unsigned int v19;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_DWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  sub_22F3D9BC0(v13 - v15, a3, (uint64_t)v18);
  v16 = sub_22F3DC694(a1, a2, v18);
  if ((_DWORD)v16)
  {
    sub_22F3E0AD4(v18);
    *(_DWORD *)(*(_QWORD *)v18 + v19 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v18);
  return v16;
}

uint64_t sub_22F3D1C14(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v18[3];
  unsigned int v19;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_QWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  sub_22F3D9BC0(v13 - v15, a3, (uint64_t)v18);
  v16 = sub_22F3DC694(a1, a2, v18);
  if ((_DWORD)v16)
  {
    sub_22F3E0AD4(v18);
    *(_QWORD *)(*(_QWORD *)v18 + v19 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v18);
  return v16;
}

uint64_t sub_22F3D1D1C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  unsigned int v15[3];
  unsigned int v16;
  _QWORD *v17[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v17);
  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  sub_22F3D9BC0(v7 - v9, a3, (uint64_t)v15);
  v10 = sub_22F3DC694((uint64_t *)a1, a2, v15);
  if ((_DWORD)v10)
  {
    sub_22F3E0AD4(v15);
    v11 = (char *)(*(_QWORD *)v15 + v16);
    v12 = v17[0];
    *((_QWORD **)v11 + 4) = v17[0];
    v13 = (uint64_t)(v11 + 32);
    *(_QWORD **)(v13 + 8) = v17[1];
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    if (v12)
      sub_22F3DFDF8(v12, v13);
  }
  sub_22F3E08B8((_QWORD **)v15);
  sub_22F3E08B8(v17);
  return v10;
}

uint64_t sub_22F3D1E04(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v14[4];
  unsigned int v15[3];
  unsigned int v16;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_BYTE *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], (uint64_t *)v14);
  sub_22F3D9BC0((uint64_t)v14, a3, (uint64_t)v15);
  sub_22F3E08B8(v14);
  v12 = sub_22F3DC694(a1, a2, v15);
  if ((_DWORD)v12)
  {
    sub_22F3E0AD4(v15);
    *(_BYTE *)(*(_QWORD *)v15 + v16 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v15);
  return v12;
}

uint64_t sub_22F3D1EE4(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int16 v11;
  uint64_t v12;
  _QWORD *v14[4];
  unsigned int v15[3];
  unsigned int v16;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_WORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], (uint64_t *)v14);
  sub_22F3D9BC0((uint64_t)v14, a3, (uint64_t)v15);
  sub_22F3E08B8(v14);
  v12 = sub_22F3DC694(a1, a2, v15);
  if ((_DWORD)v12)
  {
    sub_22F3E0AD4(v15);
    *(_WORD *)(*(_QWORD *)v15 + v16 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v15);
  return v12;
}

uint64_t sub_22F3D1FC4(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD *v14[4];
  unsigned int v15[3];
  unsigned int v16;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_DWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], (uint64_t *)v14);
  sub_22F3D9BC0((uint64_t)v14, a3, (uint64_t)v15);
  sub_22F3E08B8(v14);
  v12 = sub_22F3DC694(a1, a2, v15);
  if ((_DWORD)v12)
  {
    sub_22F3E0AD4(v15);
    *(_DWORD *)(*(_QWORD *)v15 + v16 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v15);
  return v12;
}

uint64_t sub_22F3D20A4(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v14[4];
  unsigned int v15[3];
  unsigned int v16;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_QWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], (uint64_t *)v14);
  sub_22F3D9BC0((uint64_t)v14, a3, (uint64_t)v15);
  sub_22F3E08B8(v14);
  v12 = sub_22F3DC694(a1, a2, v15);
  if ((_DWORD)v12)
  {
    sub_22F3E0AD4(v15);
    *(_QWORD *)(*(_QWORD *)v15 + v16 + 32) = v11;
  }
  sub_22F3E08B8((_QWORD **)v15);
  return v12;
}

uint64_t sub_22F3D2184(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v11[4];
  unsigned int v12[3];
  unsigned int v13;
  _QWORD *v14[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v14);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v11);
  sub_22F3D9BC0((uint64_t)v11, a3, (uint64_t)v12);
  sub_22F3E08B8(v11);
  v6 = sub_22F3DC694((uint64_t *)a1, a2, v12);
  if ((_DWORD)v6)
  {
    sub_22F3E0AD4(v12);
    v7 = (char *)(*(_QWORD *)v12 + v13);
    v8 = v14[0];
    *((_QWORD **)v7 + 4) = v14[0];
    v9 = (uint64_t)(v7 + 32);
    *(_QWORD **)(v9 + 8) = v14[1];
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    if (v8)
      sub_22F3DFDF8(v8, v9);
  }
  sub_22F3E08B8((_QWORD **)v12);
  sub_22F3E08B8(v14);
  return v6;
}

uint64_t sub_22F3D2244(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_BYTE *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v12);
  v14 = v12;
  v15 = v13 + a3;
  v16 = v13 + a3;
  v17 = 0;
  v18 = 0;
  if (v12)
    sub_22F3DFDF8(v12, (uint64_t)&v14);
  sub_22F3E08B8(&v12);
  *((_BYTE *)v14 + v16 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v14);
  sub_22F3E0AD4((unsigned int *)&v14);
  sub_22F3E08B8(&v14);
  return 1;
}

uint64_t sub_22F3D2324(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v10;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_WORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v12);
  v14 = v12;
  v15 = v13 + a3;
  v16 = v13 + a3;
  v17 = 0;
  v18 = 0;
  if (v12)
    sub_22F3DFDF8(v12, (uint64_t)&v14);
  sub_22F3E08B8(&v12);
  *(_WORD *)((char *)v14 + v16 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v14);
  sub_22F3E0AD4((unsigned int *)&v14);
  sub_22F3E08B8(&v14);
  return 1;
}

uint64_t sub_22F3D2404(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_DWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v12);
  v14 = v12;
  v15 = v13 + a3;
  v16 = v13 + a3;
  v17 = 0;
  v18 = 0;
  if (v12)
    sub_22F3DFDF8(v12, (uint64_t)&v14);
  sub_22F3E08B8(&v12);
  *(_DWORD *)((char *)v14 + v16 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v14);
  sub_22F3E0AD4((unsigned int *)&v14);
  sub_22F3E08B8(&v14);
  return 1;
}

uint64_t sub_22F3D24E4(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  int v13;
  _QWORD *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_QWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v12);
  v14 = v12;
  v15 = v13 + a3;
  v16 = v13 + a3;
  v17 = 0;
  v18 = 0;
  if (v12)
    sub_22F3DFDF8(v12, (uint64_t)&v14);
  sub_22F3E08B8(&v12);
  *(_QWORD *)((char *)v14 + v16 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v14);
  sub_22F3E0AD4((unsigned int *)&v14);
  sub_22F3E08B8(&v14);
  return 1;
}

uint64_t sub_22F3D25C4(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  int v7;
  _QWORD *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v13);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v6);
  v8 = v6;
  v9 = v7 + a3;
  v10 = v7 + a3;
  v11 = 0;
  v12 = 0;
  if (v6)
    sub_22F3DFDF8(v6, (uint64_t)&v8);
  sub_22F3E08B8(&v6);
  sub_22F3E0908((_QWORD *)((char *)v8 + v10 + 32), v13);
  sub_22F3E0BB4((uint64_t)&v8);
  sub_22F3E0AD4((unsigned int *)&v8);
  sub_22F3E08B8(&v8);
  sub_22F3E08B8((_QWORD **)v13);
  return 1;
}

uint64_t sub_22F3D266C(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_BYTE *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v12 = v17;
  v13 = v18 + a3;
  v14 = v18 + a3;
  v15 = 0;
  v16 = 0;
  sub_22F3DFDF8(v17, (uint64_t)&v12);
  *((_BYTE *)v12 + v14 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v12);
  sub_22F3E0AD4((unsigned int *)&v12);
  sub_22F3E08B8(&v12);
  sub_22F3E08B8(&v17);
  return 1;
}

uint64_t sub_22F3D2748(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v10;
  _QWORD *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_WORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v12 = v17;
  v13 = v18 + a3;
  v14 = v18 + a3;
  v15 = 0;
  v16 = 0;
  sub_22F3DFDF8(v17, (uint64_t)&v12);
  *(_WORD *)((char *)v12 + v14 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v12);
  sub_22F3E0AD4((unsigned int *)&v12);
  sub_22F3E08B8(&v12);
  sub_22F3E08B8(&v17);
  return 1;
}

uint64_t sub_22F3D2824(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _QWORD *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_DWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v12 = v17;
  v13 = v18 + a3;
  v14 = v18 + a3;
  v15 = 0;
  v16 = 0;
  sub_22F3DFDF8(v17, (uint64_t)&v12);
  *(_DWORD *)((char *)v12 + v14 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v12);
  sub_22F3E0AD4((unsigned int *)&v12);
  sub_22F3E08B8(&v12);
  sub_22F3E08B8(&v17);
  return 1;
}

uint64_t sub_22F3D2900(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;

  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_QWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v12 = v17;
  v13 = v18 + a3;
  v14 = v18 + a3;
  v15 = 0;
  v16 = 0;
  sub_22F3DFDF8(v17, (uint64_t)&v12);
  *(_QWORD *)((char *)v12 + v14 + 32) = v10;
  sub_22F3E0BB4((uint64_t)&v12);
  sub_22F3E0AD4((unsigned int *)&v12);
  sub_22F3E08B8(&v12);
  sub_22F3E08B8(&v17);
  return 1;
}

uint64_t sub_22F3D29DC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v5;
  _QWORD *v6;
  _QWORD *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  uint64_t v15[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v15);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v13);
  v5 = v14 + a3;
  v8 = v13;
  v9 = v14 + a3;
  v10 = v14 + a3;
  v11 = 0;
  v12 = 0;
  if (v13)
  {
    sub_22F3DFDF8(v13, (uint64_t)&v8);
    v6 = v8;
    v5 = v10;
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E0908((_QWORD *)((char *)v6 + v5 + 32), v15);
  sub_22F3E0BB4((uint64_t)&v8);
  sub_22F3E0AD4((unsigned int *)&v8);
  sub_22F3E08B8(&v8);
  sub_22F3E08B8(&v13);
  sub_22F3E08B8((_QWORD **)v15);
  return 1;
}

void sub_22F3D2A8C(uint64_t a1, int a2)
{
  __asm { BR              X11 }
}

uint64_t sub_22F3D2AB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, unsigned int a3@<W8>)
{
  sub_22F3D2B5C(a1, a3, *a2);
  return 1;
}

void sub_22F3D2B5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = a3;
    v5 = *(_QWORD **)(a1 + 400);
    v6 = *v5;
    v7 = *(_QWORD *)(*v5 + 16);
    v8 = v7 - *v5 - 24;
    v9 = 8;
    if (v8 <= 7)
    {
      do
      {
        v9 -= v8;
        v6 = *(_QWORD *)(v6 + 8);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v7 - v6 - 24;
      }
      while (v9 > v8);
    }
    v10 = *(_BYTE *)(v7 - v9);
    sub_22F3E04C8(v5, 8uLL);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a2) + 32) = v10;
  }
}

void sub_22F3D2BF8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v10;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = a3;
    v5 = *(_QWORD **)(a1 + 400);
    v6 = *v5;
    v7 = *(_QWORD *)(*v5 + 16);
    v8 = v7 - *v5 - 24;
    v9 = 8;
    if (v8 <= 7)
    {
      do
      {
        v9 -= v8;
        v6 = *(_QWORD *)(v6 + 8);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v7 - v6 - 24;
      }
      while (v9 > v8);
    }
    v10 = *(_WORD *)(v7 - v9);
    sub_22F3E04C8(v5, 8uLL);
    *(_WORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a2) + 32) = v10;
  }
}

void sub_22F3D2C94(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = a3;
    v5 = *(_QWORD **)(a1 + 400);
    v6 = *v5;
    v7 = *(_QWORD *)(*v5 + 16);
    v8 = v7 - *v5 - 24;
    v9 = 8;
    if (v8 <= 7)
    {
      do
      {
        v9 -= v8;
        v6 = *(_QWORD *)(v6 + 8);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v7 - v6 - 24;
      }
      while (v9 > v8);
    }
    v10 = *(_DWORD *)(v7 - v9);
    sub_22F3E04C8(v5, 8uLL);
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a2) + 32) = v10;
  }
}

void sub_22F3D2D30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = a3;
    v5 = *(_QWORD **)(a1 + 400);
    v6 = *v5;
    v7 = *(_QWORD *)(*v5 + 16);
    v8 = v7 - *v5 - 24;
    v9 = 8;
    if (v8 <= 7)
    {
      do
      {
        v9 -= v8;
        v6 = *(_QWORD *)(v6 + 8);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v7 - v6 - 24;
      }
      while (v9 > v8);
    }
    v10 = *(_QWORD *)(v7 - v9);
    sub_22F3E04C8(v5, 8uLL);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 224) + 8 * a2) + 32) = v10;
  }
}

_QWORD **sub_22F3D2DCC(_QWORD **result, unsigned int a2, _QWORD *a3)
{
  _QWORD **v4;
  _QWORD *v5[4];

  if (*((_DWORD *)result + 123) == *((_DWORD *)result + 124))
  {
    v4 = result;
    result[60] = a3;
    sub_22F3CDF00(result[50], (uint64_t *)v5);
    sub_22F3E09A4((uint64_t *)(*(_QWORD *)(v4[49][28] + 8 * a2) + 32), (uint64_t *)v5);
    return sub_22F3E08B8(v5);
  }
  return result;
}

uint64_t sub_22F3D2E38(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F3DC694(a1, a2, (unsigned int *)&v12);
  if ((_DWORD)v10)
  {
    sub_22F3E0AD4((unsigned int *)&v12);
    *(_BYTE *)(v12 + v13 + 32) = v9;
  }
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

uint64_t sub_22F3D2EFC(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F3DC694(a1, a2, (unsigned int *)&v12);
  if ((_DWORD)v10)
  {
    sub_22F3E0AD4((unsigned int *)&v12);
    *(_WORD *)(v12 + v13 + 32) = v9;
  }
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

uint64_t sub_22F3D2FC0(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F3DC694(a1, a2, (unsigned int *)&v12);
  if ((_DWORD)v10)
  {
    sub_22F3E0AD4((unsigned int *)&v12);
    *(_DWORD *)(v12 + v13 + 32) = v9;
  }
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

uint64_t sub_22F3D3084(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F3DC694(a1, a2, (unsigned int *)&v12);
  if ((_DWORD)v10)
  {
    sub_22F3E0AD4((unsigned int *)&v12);
    *(_QWORD *)(v12 + v13 + 32) = v9;
  }
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

uint64_t sub_22F3D3148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;
  unsigned int v10;
  _QWORD *v11[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v11);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v9);
  v4 = sub_22F3DC694((uint64_t *)a1, a2, (unsigned int *)&v9);
  if ((_DWORD)v4)
  {
    sub_22F3E0AD4((unsigned int *)&v9);
    v5 = (char *)(v9 + v10);
    v6 = v11[0];
    *((_QWORD **)v5 + 4) = v11[0];
    v7 = (uint64_t)(v5 + 32);
    *(_QWORD **)(v7 + 8) = v11[1];
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    if (v6)
      sub_22F3DFDF8(v6, v7);
  }
  sub_22F3E08B8((_QWORD **)&v9);
  sub_22F3E08B8(v11);
  return v4;
}

BOOL sub_22F3D31E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  _QWORD *v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v21 = v9;
    v22 = v8;
    v23 = v8;
    v24 = 0;
    v25 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v21);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(unsigned __int8 *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    if ((v15 & ((0x800000 << v18) >> 24)) != 0)
      v19 = 255 << v18;
    else
      v19 = 0;
    v20 = v19 | v15 & ~(-1 << v18);
    if (v18 > 7)
      LOBYTE(v20) = v15;
    *((_BYTE *)v21 + v23 + 32) = v20;
    sub_22F3E0AD4((unsigned int *)&v21);
    sub_22F3E08B8(&v21);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_BYTE *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    if (v18 <= 7)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    *((_BYTE *)v20 + v22 + 32) = v19 & v15;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  int v20;
  _QWORD *v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v21 = v9;
    v22 = v8;
    v23 = v8;
    v24 = 0;
    v25 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v21);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(unsigned __int16 *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    if ((v15 & ((0x8000 << v18) >> 16)) != 0)
      v19 = 0xFFFF << v18;
    else
      v19 = 0;
    v20 = v19 | v15 & ~(-1 << v18);
    if (v18 > 0xF)
      LOWORD(v20) = v15;
    *(_WORD *)((char *)v21 + v23 + 32) = v20;
    sub_22F3E0AD4((unsigned int *)&v21);
    sub_22F3E08B8(&v21);
    return 1;
  }
  return result;
}

BOOL sub_22F3D35B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  __int16 v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_WORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    if (v18 <= 0xF)
      v19 = ~(unsigned __int16)(-1 << v18);
    else
      v19 = -1;
    *(_WORD *)((char *)v20 + v22 + 32) = v19 & v15;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D36EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_DWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    v19 = ((int)(v15 >> (v18 - 1) << 31) >> 31) & (-1 << v18) | v15 & ~(-1 << v18);
    if (v18 > 0x1F)
      v19 = v15;
    *(_DWORD *)((char *)v20 + v22 + 32) = v19;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_DWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    if (v18 <= 0x1F)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    *(_DWORD *)((char *)v20 + v22 + 32) = v19 & v15;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_QWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    v19 = ((uint64_t)(v15 >> (v18 - 1) << 63) >> 63) & (-1 << v18) | v15 & ~(-1 << v18);
    if (v18 > 0x3F)
      v19 = v15;
    *(_QWORD *)((char *)v20 + v22 + 32) = v19;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v20 = v9;
    v21 = v8;
    v22 = v8;
    v23 = 0;
    v24 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v20);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_QWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    v18 = sub_22EFC2EF4(v16, v17);
    v19 = -1;
    if (v18 <= 0x3F)
      v19 = ~(-1 << v18);
    *(_QWORD *)((char *)v20 + v22 + 32) = v19 & v15;
    sub_22F3E0AD4((unsigned int *)&v20);
    sub_22F3E08B8(&v20);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 result;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + *(_DWORD *)(a3 + 8);
    v9 = *(_QWORD **)(v7 + 32);
    v18 = v9;
    v19 = v8;
    v20 = v8;
    v21 = 0;
    v22 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v18);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_BYTE *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    v16 = *(_QWORD *)a3;
    v17 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
    sub_22EFC2EF4(v16, v17);
    *((_BYTE *)v18 + v20 + 32) = v15;
    sub_22F3E0AD4((unsigned int *)&v18);
    sub_22F3E08B8(&v18);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3D04(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_BYTE *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *((_BYTE *)v16 + v18 + 32) = v15;
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3E00(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_WORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_WORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3EFC(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_DWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_DWORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D3FF8(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_QWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_QWORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D40F4(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10[4];
  _QWORD *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v11 = v9;
    v12 = v8;
    v13 = v8;
    v14 = 0;
    v15 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v11);
    sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v10);
    sub_22F3E09A4((_QWORD *)((char *)v11 + v13 + 32), (uint64_t *)v10);
    sub_22F3E08B8(v10);
    sub_22F3E0AD4((unsigned int *)&v11);
    sub_22F3E08B8(&v11);
    return 1;
  }
  return result;
}

BOOL sub_22F3D41C0(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_BYTE *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *((_BYTE *)v16 + v18 + 32) = v15;
    sub_22F3E0BB4((uint64_t)&v16);
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D42C4(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int16 v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_WORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_WORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0BB4((uint64_t)&v16);
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D43C8(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_DWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_DWORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0BB4((uint64_t)&v16);
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D44CC(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v16 = v9;
    v17 = v8;
    v18 = v8;
    v19 = 0;
    v20 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v16);
    v10 = *(_QWORD **)(a1 + 48);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = v12 - *v10 - 24;
    v14 = 8;
    if (v13 <= 7)
    {
      do
      {
        v14 -= v13;
        v11 = *(_QWORD *)(v11 + 8);
        v12 = *(_QWORD *)(v11 + 16);
        v13 = v12 - v11 - 24;
      }
      while (v14 > v13);
    }
    v15 = *(_QWORD *)(v12 - v14);
    sub_22F3E04C8(v10, 8uLL);
    *(_QWORD *)((char *)v16 + v18 + 32) = v15;
    sub_22F3E0BB4((uint64_t)&v16);
    sub_22F3E0AD4((unsigned int *)&v16);
    sub_22F3E08B8(&v16);
    return 1;
  }
  return result;
}

BOOL sub_22F3D45D0(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 result;
  uint64_t v7;
  unsigned int v8;
  _QWORD *v9;
  _QWORD *v10[4];
  _QWORD *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 64);
  result = sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v7 + 32));
  if (result)
  {
    v8 = *(_DWORD *)(v7 + 44) + a3;
    v9 = *(_QWORD **)(v7 + 32);
    v11 = v9;
    v12 = v8;
    v13 = v8;
    v14 = 0;
    v15 = 0;
    if (v9)
      sub_22F3DFDF8(v9, (uint64_t)&v11);
    sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v10);
    sub_22F3E09A4((_QWORD *)((char *)v11 + v13 + 32), (uint64_t *)v10);
    sub_22F3E08B8(v10);
    sub_22F3E0BB4((uint64_t)&v11);
    sub_22F3E0AD4((unsigned int *)&v11);
    sub_22F3E08B8(&v11);
    return 1;
  }
  return result;
}

void sub_22F3D46A4(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3D46CC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB560, (uint64_t)&v4);
}

void sub_22F3D490C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3D4934(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB600, (uint64_t)&v4);
}

BOOL sub_22F3D4B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(a1 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v4 - v3 - 24;
  v6 = 32;
  if (v5 <= 0x1F)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = v4 - v6;
  v8 = sub_22F070108(a1, a2, (unsigned int *)(v4 - v6));
  if (v8)
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)v7 + *(unsigned int *)(v7 + 12);
    *(_BYTE *)sub_22F3E03F8(v10, 8) = *(_BYTE *)(v11 + 32);
  }
  return v8;
}

BOOL sub_22F3D4C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(a1 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v4 - v3 - 24;
  v6 = 32;
  if (v5 <= 0x1F)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = v4 - v6;
  v8 = sub_22F070108(a1, a2, (unsigned int *)(v4 - v6));
  if (v8)
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)v7 + *(unsigned int *)(v7 + 12);
    *(_WORD *)sub_22F3E03F8(v10, 8) = *(_WORD *)(v11 + 32);
  }
  return v8;
}

BOOL sub_22F3D4CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(a1 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v4 - v3 - 24;
  v6 = 32;
  if (v5 <= 0x1F)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = v4 - v6;
  v8 = sub_22F070108(a1, a2, (unsigned int *)(v4 - v6));
  if (v8)
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)v7 + *(unsigned int *)(v7 + 12);
    *(_DWORD *)sub_22F3E03F8(v10, 8) = *(_DWORD *)(v11 + 32);
  }
  return v8;
}

BOOL sub_22F3D4D54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;
  uint64_t v11;

  v3 = **(_QWORD **)(a1 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v4 - v3 - 24;
  v6 = 32;
  if (v5 <= 0x1F)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = v4 - v6;
  v8 = sub_22F070108(a1, a2, (unsigned int *)(v4 - v6));
  if (v8)
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)v7 + *(unsigned int *)(v7 + 12);
    *sub_22F3E03F8(v10, 8) = *(_QWORD *)(v11 + 32);
  }
  return v8;
}

BOOL sub_22F3D4DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;
  uint64_t **v11;
  uint64_t **v12;

  v3 = **(_QWORD **)(a1 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = v4 - v3 - 24;
  v6 = 32;
  if (v5 <= 0x1F)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = v4 - v6;
  v8 = sub_22F070108(a1, a2, (unsigned int *)(v4 - v6));
  if (v8)
  {
    v10 = *(_QWORD *)(a1 + 48);
    v11 = (uint64_t **)(*(_QWORD *)v7 + *(unsigned int *)(v7 + 12) + 32);
    v12 = (uint64_t **)sub_22F3E03F8(v10, 32);
    sub_22F3E083C(v12, v11);
  }
  return v8;
}

uint64_t sub_22F3D4E98(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3D4EB4 + 4 * byte_22F4A55DD[a2]))();
}

BOOL sub_22F3D4EB4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3D504C(a1 + 352, *(_QWORD *)(a1 + 464));
}

BOOL sub_22F3D504C(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unsigned int v9;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v8);
  v4 = sub_22F070108(a1, a2, (unsigned int *)&v8);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = (char *)(v8 + v9);
    *(_BYTE *)sub_22F3E03F8(v5, 8) = v6[32];
  }
  sub_22F3E08B8((_QWORD **)&v8);
  return v4;
}

BOOL sub_22F3D50C4(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unsigned int v9;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v8);
  v4 = sub_22F070108(a1, a2, (unsigned int *)&v8);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = (char *)(v8 + v9);
    *(_WORD *)sub_22F3E03F8(v5, 8) = *((_WORD *)v6 + 16);
  }
  sub_22F3E08B8((_QWORD **)&v8);
  return v4;
}

BOOL sub_22F3D513C(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unsigned int v9;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v8);
  v4 = sub_22F070108(a1, a2, (unsigned int *)&v8);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = (char *)(v8 + v9);
    *(_DWORD *)sub_22F3E03F8(v5, 8) = *((_DWORD *)v6 + 8);
  }
  sub_22F3E08B8((_QWORD **)&v8);
  return v4;
}

BOOL sub_22F3D51B4(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unsigned int v9;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v8);
  v4 = sub_22F070108(a1, a2, (unsigned int *)&v8);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = (char *)(v8 + v9);
    *sub_22F3E03F8(v5, 8) = *((_QWORD *)v6 + 4);
  }
  sub_22F3E08B8((_QWORD **)&v8);
  return v4;
}

BOOL sub_22F3D522C(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v5;
  uint64_t **v6;
  uint64_t **v7;
  uint64_t v9;
  unsigned int v10;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v9);
  v4 = sub_22F070108(a1, a2, (unsigned int *)&v9);
  if (v4)
  {
    v5 = *(_QWORD *)(a1 + 48);
    v6 = (uint64_t **)(v9 + v10 + 32);
    v7 = (uint64_t **)sub_22F3E03F8(v5, 32);
    sub_22F3E083C(v7, v6);
  }
  sub_22F3E08B8((_QWORD **)&v9);
  return v4;
}

uint64_t sub_22F3D52A8(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3D52C4 + 4 * byte_22F4A55E7[a2]))();
}

uint64_t sub_22F3D52C4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3D5434(a1 + 352, *(_QWORD *)(a1 + 464));
}

uint64_t sub_22F3D5434(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_BYTE *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06C1BC(a1, a2, 16, &v17, &v18);
}

uint64_t sub_22F3D5520(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 * v7;
  return 1;
}

uint64_t sub_22F3D55F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 v17;
  unsigned __int16 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_WORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06C534(a1, a2, 32, &v17, &v18);
}

uint64_t sub_22F3D56E4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_WORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_WORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_WORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 * v7;
  return 1;
}

uint64_t sub_22F3D57BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v17;
  unsigned int v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_DWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06C8AC(a1, a2, 64, &v17, &v18);
}

uint64_t sub_22F3D58A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_DWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_DWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_DWORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 * v7;
  return 1;
}

uint64_t sub_22F3D5980(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_QWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06CC0C(a1, a2, 128, &v17, &v18);
}

uint64_t sub_22F3D5A6C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_QWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_QWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 * v7;
  return 1;
}

uint64_t sub_22F3D5B44(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 & v7 & 1;
  return 1;
}

void sub_22F3D5C20(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3D5C48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  __int16 v4;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3DAAA8(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB678, (uint64_t)&v4);
}

void sub_22F3D5E28(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    sub_22F06C058(a1 + 352, *(_QWORD *)(a1 + 464), (uint64_t (*)(uint64_t, uint64_t))sub_22F3DB6E4, v3 - 1);
    JUMPOUT(0x22F3D5E1CLL);
  }
  JUMPOUT(0x22F3D5E18);
}

uint64_t sub_22F3D5E88(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v5[4];
  uint64_t v6[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v6);
  v2 = *(_QWORD *)(a1 + 48);
  sub_22F3D93BC((uint64_t)v6, (uint64_t)v5);
  v3 = sub_22F3E03F8(v2, 32);
  sub_22F3E0878(v3, (uint64_t *)v5);
  sub_22F3E08B8(v5);
  sub_22F3E08B8((_QWORD **)v6);
  return 1;
}

void sub_22F3D5EF0(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22F3D5F14(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a3;
    sub_22F3E04C8(*(_QWORD **)(a1 + 400), 8uLL);
  }
  return 1;
}

void sub_22F3D5F48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_22F3D5F54(a1, a3);
  JUMPOUT(0x22F3D5F24);
}

uint64_t sub_22F3D5F54(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3[4];

  if (*(_DWORD *)(a1 + 492) == *(_DWORD *)(a1 + 496))
  {
    *(_QWORD *)(a1 + 480) = *a2;
    sub_22F3CDF00(*(_QWORD **)(a1 + 400), (uint64_t *)v3);
    sub_22F3E08B8(v3);
  }
  return 1;
}

uint64_t sub_22F3D5FA0(uint64_t a1, int a2)
{
  return ((uint64_t (*)())((char *)sub_22F3D5FBC + 4 * byte_22F4A5604[a2]))();
}

uint64_t sub_22F3D5FE4(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_BYTE *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D95A8(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D607C(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_BYTE *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D9644(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D6114(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int16 v8;
  unsigned __int16 v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_WORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D96E0(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D61AC(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int16 v8;
  unsigned __int16 v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_WORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D977C(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D6244(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_DWORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D9818(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D62DC(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_DWORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D98B4(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D6374(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_QWORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D9950(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D640C(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_QWORD *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D99EC(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D64A4(uint64_t a1)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  v3 = *(_QWORD **)(a1 + 400);
  v4 = *v3;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = v5 - *v3 - 24;
  v7 = 8;
  if (v6 <= 7)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = *(_BYTE *)(v5 - v7);
  sub_22F3E04C8(v3, 8uLL);
  v9 = v8;
  return sub_22F3D9A88(&v9, *(_QWORD *)(a1 + 432));
}

uint64_t sub_22F3D653C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v4[4];

  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  sub_22F3CDF00(*(_QWORD **)(a1 + 400), (uint64_t *)v4);
  v1 = sub_22F3D9B24((unsigned int *)v4, *(_QWORD *)(a1 + 432));
  sub_22F3E08B8(v4);
  return v1;
}

BOOL sub_22F3D65A0(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_BYTE *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  v16 = v13 - v15;
  if (!sub_22F06FEF4((uint64_t)a1, a2, (uint64_t *)(v13 - v15), 2) || !sub_22F070058((uint64_t)a1, a2, v16, 2))
    return 0;
  v19 = *(_DWORD *)(v16 + 12) + a3;
  v20 = *(_QWORD **)v16;
  v21 = v20;
  v22 = v19;
  v23 = v19;
  v24 = 0;
  v25 = 0;
  if (v20)
    sub_22F3DFDF8(v20, (uint64_t)&v21);
  v17 = sub_22F07070C(a1, a2, (unsigned int *)&v21);
  if (v17)
    *((_BYTE *)v21 + v23 + 32) = v11;
  sub_22F3E08B8(&v21);
  return v17;
}

BOOL sub_22F3D66F8(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_WORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  v16 = v13 - v15;
  if (!sub_22F06FEF4((uint64_t)a1, a2, (uint64_t *)(v13 - v15), 2) || !sub_22F070058((uint64_t)a1, a2, v16, 2))
    return 0;
  v19 = *(_DWORD *)(v16 + 12) + a3;
  v20 = *(_QWORD **)v16;
  v21 = v20;
  v22 = v19;
  v23 = v19;
  v24 = 0;
  v25 = 0;
  if (v20)
    sub_22F3DFDF8(v20, (uint64_t)&v21);
  v17 = sub_22F07070C(a1, a2, (unsigned int *)&v21);
  if (v17)
    *(_WORD *)((char *)v21 + v23 + 32) = v11;
  sub_22F3E08B8(&v21);
  return v17;
}

BOOL sub_22F3D6850(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_DWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  v16 = v13 - v15;
  if (!sub_22F06FEF4((uint64_t)a1, a2, (uint64_t *)(v13 - v15), 2) || !sub_22F070058((uint64_t)a1, a2, v16, 2))
    return 0;
  v19 = *(_DWORD *)(v16 + 12) + a3;
  v20 = *(_QWORD **)v16;
  v21 = v20;
  v22 = v19;
  v23 = v19;
  v24 = 0;
  v25 = 0;
  if (v20)
    sub_22F3DFDF8(v20, (uint64_t)&v21);
  v17 = sub_22F07070C(a1, a2, (unsigned int *)&v21);
  if (v17)
    *(_DWORD *)((char *)v21 + v23 + 32) = v11;
  sub_22F3E08B8(&v21);
  return v17;
}

BOOL sub_22F3D69A8(uint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = (_QWORD *)a1[6];
  v7 = *v6;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = v8 - *v6 - 24;
  v10 = 8;
  if (v9 <= 7)
  {
    do
    {
      v10 -= v9;
      v7 = *(_QWORD *)(v7 + 8);
      v8 = *(_QWORD *)(v7 + 16);
      v9 = v8 - v7 - 24;
    }
    while (v10 > v9);
  }
  v11 = *(_QWORD *)(v8 - v10);
  sub_22F3E04C8(v6, 8uLL);
  v12 = *(_QWORD *)a1[6];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v13 - v12 - 24;
  v15 = 32;
  if (v14 <= 0x1F)
  {
    do
    {
      v15 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v15 > v14);
  }
  v16 = v13 - v15;
  if (!sub_22F06FEF4((uint64_t)a1, a2, (uint64_t *)(v13 - v15), 2) || !sub_22F070058((uint64_t)a1, a2, v16, 2))
    return 0;
  v19 = *(_DWORD *)(v16 + 12) + a3;
  v20 = *(_QWORD **)v16;
  v21 = v20;
  v22 = v19;
  v23 = v19;
  v24 = 0;
  v25 = 0;
  if (v20)
    sub_22F3DFDF8(v20, (uint64_t)&v21);
  v17 = sub_22F07070C(a1, a2, (unsigned int *)&v21);
  if (v17)
    *(_QWORD *)((char *)v21 + v23 + 32) = v11;
  sub_22F3E08B8(&v21);
  return v17;
}

BOOL sub_22F3D6B00(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD *v12;
  _BOOL8 v13;
  _QWORD *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v20);
  v6 = **(_QWORD **)(a1 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = v7 - v6 - 24;
  v9 = 32;
  if (v8 <= 0x1F)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = v7 - v9;
  if (sub_22F06FEF4(a1, a2, (uint64_t *)(v7 - v9), 2) && sub_22F070058(a1, a2, v10, 2))
  {
    v11 = *(_DWORD *)(v10 + 12) + a3;
    v12 = *(_QWORD **)v10;
    v15 = v12;
    v16 = v11;
    v17 = v11;
    v18 = 0;
    v19 = 0;
    if (v12)
      sub_22F3DFDF8(v12, (uint64_t)&v15);
    v13 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v15);
    if (v13)
      sub_22F3E0908((_QWORD *)((char *)v15 + v17 + 32), v20);
    sub_22F3E08B8(&v15);
  }
  else
  {
    v13 = 0;
  }
  sub_22F3E08B8((_QWORD **)v20);
  return v13;
}

uint64_t sub_22F3D6C20(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v12;
  unsigned int v13;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_BYTE *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F071598(v4, a3, (uint64_t ***)&v12);
  *((_BYTE *)v12 + v13 + 32) = v10;
  sub_22F3E08B8(&v12);
  return 1;
}

uint64_t sub_22F3D6CC8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v10;
  _QWORD *v12;
  unsigned int v13;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_WORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F071598(v4, a3, (uint64_t ***)&v12);
  *(_WORD *)((char *)v12 + v13 + 32) = v10;
  sub_22F3E08B8(&v12);
  return 1;
}

uint64_t sub_22F3D6D70(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  _QWORD *v12;
  unsigned int v13;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_DWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F071598(v4, a3, (uint64_t ***)&v12);
  *(_DWORD *)((char *)v12 + v13 + 32) = v10;
  sub_22F3E08B8(&v12);
  return 1;
}

uint64_t sub_22F3D6E18(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  unsigned int v13;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD **)(a1 + 48);
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 16);
  v8 = v7 - *v5 - 24;
  v9 = 8;
  if (v8 <= 7)
  {
    do
    {
      v9 -= v8;
      v6 = *(_QWORD *)(v6 + 8);
      v7 = *(_QWORD *)(v6 + 16);
      v8 = v7 - v6 - 24;
    }
    while (v9 > v8);
  }
  v10 = *(_QWORD *)(v7 - v9);
  sub_22F3E04C8(v5, 8uLL);
  sub_22F071598(v4, a3, (uint64_t ***)&v12);
  *(_QWORD *)((char *)v12 + v13 + 32) = v10;
  sub_22F3E08B8(&v12);
  return 1;
}

uint64_t sub_22F3D6EC0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD *v6[4];
  _QWORD *v7;
  unsigned int v8;

  v4 = *(_QWORD *)(a1 + 64);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v6);
  sub_22F071598(v4, a3, (uint64_t ***)&v7);
  sub_22F3E0908((_QWORD *)((char *)v7 + v8 + 32), (uint64_t *)v6);
  sub_22F3E08B8(&v7);
  sub_22F3E08B8(v6);
  return 1;
}

BOOL sub_22F3D6F30(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v8 = *(_QWORD **)(a1 + 48);
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  v11 = v10 - *v8 - 24;
  v12 = 8;
  if (v11 <= 7)
  {
    do
    {
      v12 -= v11;
      v9 = *(_QWORD *)(v9 + 8);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = v10 - v9 - 24;
    }
    while (v12 > v11);
  }
  v13 = *(_BYTE *)(v10 - v12);
  sub_22F3E04C8(v8, 8uLL);
  v14 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v14 + 32)))
    return 0;
  v15 = *(_DWORD *)(v14 + 44) + a3;
  v16 = *(_QWORD **)(v14 + 32);
  v17 = v16;
  v18 = v15;
  v19 = v15;
  v20 = 0;
  v21 = 0;
  if (v16)
    sub_22F3DFDF8(v16, (uint64_t)&v17);
  v6 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v17);
  if (v6)
    *((_BYTE *)v17 + v19 + 32) = v13;
  sub_22F3E08B8(&v17);
  return v6;
}

BOOL sub_22F3D7044(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int16 v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v8 = *(_QWORD **)(a1 + 48);
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  v11 = v10 - *v8 - 24;
  v12 = 8;
  if (v11 <= 7)
  {
    do
    {
      v12 -= v11;
      v9 = *(_QWORD *)(v9 + 8);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = v10 - v9 - 24;
    }
    while (v12 > v11);
  }
  v13 = *(_WORD *)(v10 - v12);
  sub_22F3E04C8(v8, 8uLL);
  v14 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v14 + 32)))
    return 0;
  v15 = *(_DWORD *)(v14 + 44) + a3;
  v16 = *(_QWORD **)(v14 + 32);
  v17 = v16;
  v18 = v15;
  v19 = v15;
  v20 = 0;
  v21 = 0;
  if (v16)
    sub_22F3DFDF8(v16, (uint64_t)&v17);
  v6 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v17);
  if (v6)
    *(_WORD *)((char *)v17 + v19 + 32) = v13;
  sub_22F3E08B8(&v17);
  return v6;
}

BOOL sub_22F3D7158(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v8 = *(_QWORD **)(a1 + 48);
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  v11 = v10 - *v8 - 24;
  v12 = 8;
  if (v11 <= 7)
  {
    do
    {
      v12 -= v11;
      v9 = *(_QWORD *)(v9 + 8);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = v10 - v9 - 24;
    }
    while (v12 > v11);
  }
  v13 = *(_DWORD *)(v10 - v12);
  sub_22F3E04C8(v8, 8uLL);
  v14 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v14 + 32)))
    return 0;
  v15 = *(_DWORD *)(v14 + 44) + a3;
  v16 = *(_QWORD **)(v14 + 32);
  v17 = v16;
  v18 = v15;
  v19 = v15;
  v20 = 0;
  v21 = 0;
  if (v16)
    sub_22F3DFDF8(v16, (uint64_t)&v17);
  v6 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v17);
  if (v6)
    *(_DWORD *)((char *)v17 + v19 + 32) = v13;
  sub_22F3E08B8(&v17);
  return v6;
}

BOOL sub_22F3D726C(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v8 = *(_QWORD **)(a1 + 48);
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 16);
  v11 = v10 - *v8 - 24;
  v12 = 8;
  if (v11 <= 7)
  {
    do
    {
      v12 -= v11;
      v9 = *(_QWORD *)(v9 + 8);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = v10 - v9 - 24;
    }
    while (v12 > v11);
  }
  v13 = *(_QWORD *)(v10 - v12);
  sub_22F3E04C8(v8, 8uLL);
  v14 = *(_QWORD *)(a1 + 64);
  if (!sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v14 + 32)))
    return 0;
  v15 = *(_DWORD *)(v14 + 44) + a3;
  v16 = *(_QWORD **)(v14 + 32);
  v17 = v16;
  v18 = v15;
  v19 = v15;
  v20 = 0;
  v21 = 0;
  if (v16)
    sub_22F3DFDF8(v16, (uint64_t)&v17);
  v6 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v17);
  if (v6)
    *(_QWORD *)((char *)v17 + v19 + 32) = v13;
  sub_22F3E08B8(&v17);
  return v6;
}

BOOL sub_22F3D7380(uint64_t a1, uint64_t a2, int a3)
{
  _BOOL8 v6;
  uint64_t v8;
  unsigned int v9;
  _QWORD *v10;
  _QWORD *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[4];

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v16);
  v8 = *(_QWORD *)(a1 + 64);
  if (sub_22F0707F4((uint64_t *)a1, a2, (uint64_t *)(v8 + 32)))
  {
    v9 = *(_DWORD *)(v8 + 44) + a3;
    v10 = *(_QWORD **)(v8 + 32);
    v11 = v10;
    v12 = v9;
    v13 = v9;
    v14 = 0;
    v15 = 0;
    if (v10)
      sub_22F3DFDF8(v10, (uint64_t)&v11);
    v6 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v11);
    if (v6)
      sub_22F3E0908((_QWORD *)((char *)v11 + v13 + 32), v16);
    sub_22F3E08B8(&v11);
  }
  else
  {
    v6 = 0;
  }
  sub_22F3E08B8((_QWORD **)v16);
  return v6;
}

BOOL sub_22F3D7464(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 result;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v10 = *(_QWORD *)a1[6];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v11 - v10 - 24;
  v13 = 32;
  if (v12 <= 0x1F)
  {
    do
    {
      v13 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v13 > v12);
  }
  v14 = v11 - v13;
  result = sub_22F07070C(a1, a2, (unsigned int *)(v11 - v13));
  if (result)
    *(_BYTE *)(*(_QWORD *)v14 + *(unsigned int *)(v14 + 12) + 32) = v9;
  return result;
}

BOOL sub_22F3D753C(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 result;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v10 = *(_QWORD *)a1[6];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v11 - v10 - 24;
  v13 = 32;
  if (v12 <= 0x1F)
  {
    do
    {
      v13 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v13 > v12);
  }
  v14 = v11 - v13;
  result = sub_22F07070C(a1, a2, (unsigned int *)(v11 - v13));
  if (result)
    *(_WORD *)(*(_QWORD *)v14 + *(unsigned int *)(v14 + 12) + 32) = v9;
  return result;
}

BOOL sub_22F3D7614(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 result;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v10 = *(_QWORD *)a1[6];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v11 - v10 - 24;
  v13 = 32;
  if (v12 <= 0x1F)
  {
    do
    {
      v13 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v13 > v12);
  }
  v14 = v11 - v13;
  result = sub_22F07070C(a1, a2, (unsigned int *)(v11 - v13));
  if (result)
    *(_DWORD *)(*(_QWORD *)v14 + *(unsigned int *)(v14 + 12) + 32) = v9;
  return result;
}

BOOL sub_22F3D76EC(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 result;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v10 = *(_QWORD *)a1[6];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v11 - v10 - 24;
  v13 = 32;
  if (v12 <= 0x1F)
  {
    do
    {
      v13 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v13 > v12);
  }
  v14 = v11 - v13;
  result = sub_22F07070C(a1, a2, (unsigned int *)(v11 - v13));
  if (result)
    *(_QWORD *)(*(_QWORD *)v14 + *(unsigned int *)(v14 + 12) + 32) = v9;
  return result;
}

BOOL sub_22F3D77C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  _QWORD *v11[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)v11);
  v4 = **(_QWORD **)(a1 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = v5 - v4 - 24;
  v7 = 32;
  if (v6 <= 0x1F)
  {
    do
    {
      v7 -= v6;
      v4 = *(_QWORD *)(v4 + 8);
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v7 > v6);
  }
  v8 = v5 - v7;
  v9 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)(v5 - v7));
  if (v9)
    sub_22F3E0908((uint64_t *)(*(_QWORD *)v8 + *(unsigned int *)(v8 + 12) + 32), (uint64_t *)v11);
  sub_22F3E08B8(v11);
  return v9;
}

BOOL sub_22F3D787C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if ((*(_DWORD *)&v9 & ((0x800000 << v16) >> 24)) != 0)
          v17 = 255 << v16;
        else
          LOBYTE(v17) = 0;
        if (v16 <= 7)
          v9 = v17 | v9 & ~(-1 << v16);
        v11 = v19;
      }
    }
    *((_BYTE *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D79D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if (v16 <= 7)
          v17 = ~(-1 << v16);
        else
          LOBYTE(v17) = -1;
        v9 &= v17;
        v11 = v19;
      }
    }
    *((_BYTE *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D7B10(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int16 v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if ((*(_DWORD *)&v9 & ((0x8000 << v16) >> 16)) != 0)
          v17 = 0xFFFF << v16;
        else
          LOWORD(v17) = 0;
        if (v16 <= 0xF)
          v9 = v17 | v9 & ~(-1 << v16);
        v11 = v19;
      }
    }
    *(_WORD *)((char *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D7C68(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int16 v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if (v16 <= 0xF)
          v17 = ~(-1 << v16);
        else
          LOWORD(v17) = -1;
        v9 &= v17;
        v11 = v19;
      }
    }
    *(_WORD *)((char *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D7DA4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _QWORD *v18;
  unsigned int v19;
  unsigned int v20;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v18);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v18);
  if (v10)
  {
    v11 = v18;
    if (v19 + 1 > 1)
      v12 = (uint64_t **)((char *)v18 + v19 + 24);
    else
      v12 = (uint64_t **)(v18 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if (v16 <= 0x1F)
          v9 = ((int)(v9 >> (v16 - 1) << 31) >> 31) & (-1 << v16) | v9 & ~(-1 << v16);
        v11 = v18;
      }
    }
    *(_DWORD *)((char *)v11 + v20 + 32) = v9;
  }
  sub_22F3E08B8(&v18);
  return v10;
}

BOOL sub_22F3D7EF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if (v16 <= 0x1F)
          v17 = ~(-1 << v16);
        else
          v17 = -1;
        v9 &= v17;
        v11 = v19;
      }
    }
    *(_DWORD *)((char *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D8030(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _QWORD *v18;
  unsigned int v19;
  unsigned int v20;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v18);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v18);
  if (v10)
  {
    v11 = v18;
    if (v19 + 1 > 1)
      v12 = (uint64_t **)((char *)v18 + v19 + 24);
    else
      v12 = (uint64_t **)(v18 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        if (v16 <= 0x3F)
          v9 = ((uint64_t)(v9 >> (v16 - 1) << 63) >> 63) & (-1 << v16) | v9 & ~(-1 << v16);
        v11 = v18;
      }
    }
    *(_QWORD *)((char *)v11 + v20 + 32) = v9;
  }
  sub_22F3E08B8(&v18);
  return v10;
}

BOOL sub_22F3D8180(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  _QWORD *v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v19);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v19);
  if (v10)
  {
    v11 = v19;
    if (v20 + 1 > 1)
      v12 = (uint64_t **)((char *)v19 + v20 + 24);
    else
      v12 = (uint64_t **)(v19 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        v16 = sub_22EFC2EF4(v14, v15);
        v17 = -1;
        if (v16 <= 0x3F)
          v17 = ~(-1 << v16);
        v9 &= v17;
        v11 = v19;
      }
    }
    *(_QWORD *)((char *)v11 + v21 + 32) = v9;
  }
  sub_22F3E08B8(&v19);
  return v10;
}

BOOL sub_22F3D82BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  _BOOL8 v10;
  _QWORD *v11;
  uint64_t **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  unsigned int v18;
  unsigned int v19;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v17);
  v10 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v17);
  if (v10)
  {
    v11 = v17;
    if (v18 + 1 > 1)
      v12 = (uint64_t **)((char *)v17 + v18 + 24);
    else
      v12 = (uint64_t **)(v17 + 3);
    v13 = **v12;
    if ((v13 & 2) == 0)
    {
      v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v13 & 0xFFFFFFFFFFFFFFFCLL) != 0 && (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 <= 2)
      {
        v15 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
        sub_22EFC2EF4(v14, v15);
        v11 = v17;
      }
    }
    *((_BYTE *)v11 + v19 + 32) = v9;
  }
  sub_22F3E08B8(&v17);
  return v10;
}

BOOL sub_22F3D83E4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  _BOOL8 v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F07070C(a1, a2, (unsigned int *)&v12);
  if (v10)
    *(_BYTE *)(v12 + v13 + 32) = v9;
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

BOOL sub_22F3D84A0(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int16 v9;
  _BOOL8 v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F07070C(a1, a2, (unsigned int *)&v12);
  if (v10)
    *(_WORD *)(v12 + v13 + 32) = v9;
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

BOOL sub_22F3D855C(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F07070C(a1, a2, (unsigned int *)&v12);
  if (v10)
    *(_DWORD *)(v12 + v13 + 32) = v9;
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

BOOL sub_22F3D8618(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v12;
  unsigned int v13;

  v4 = (_QWORD *)a1[6];
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  sub_22F3CDF00((_QWORD *)a1[6], &v12);
  v10 = sub_22F07070C(a1, a2, (unsigned int *)&v12);
  if (v10)
    *(_QWORD *)(v12 + v13 + 32) = v9;
  sub_22F3E08B8((_QWORD **)&v12);
  return v10;
}

BOOL sub_22F3D86D4(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8[4];

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), v8);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), &v6);
  v4 = sub_22F07070C((uint64_t *)a1, a2, (unsigned int *)&v6);
  if (v4)
    sub_22F3E0908((uint64_t *)(v6 + v7 + 32), v8);
  sub_22F3E08B8((_QWORD **)&v6);
  sub_22F3E08B8((_QWORD **)v8);
  return v4;
}

uint64_t sub_22F3D8758(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))((char *)sub_22F3D8774 + 4 * byte_22F4A560E[a2]))();
}

uint64_t sub_22F3D8774(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  if (*(_DWORD *)(a1 + 492) != *(_DWORD *)(a1 + 496))
    return 1;
  *(_QWORD *)(a1 + 480) = *a3;
  return sub_22F3D88E4(a1 + 352, *(_QWORD *)(a1 + 464));
}

uint64_t sub_22F3D88E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v17;
  unsigned __int8 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_BYTE *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_BYTE *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06CF6C(a1, a2, 9, &v17, &v18);
}

uint64_t sub_22F3D89D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 - v7;
  return 1;
}

uint64_t sub_22F3D8AA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int16 v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int16 v15;
  unsigned __int16 v17;
  unsigned __int16 v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_WORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_WORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06D270(a1, a2, 17, &v17, &v18);
}

uint64_t sub_22F3D8B94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_WORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_WORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_WORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 - v7;
  return 1;
}

uint64_t sub_22F3D8C6C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v17;
  unsigned int v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_DWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06D574(a1, a2, 33, &v17, &v18);
}

uint64_t sub_22F3D8D58(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_DWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_DWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_DWORD *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 - v7;
  return 1;
}

uint64_t sub_22F3D8E30(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  v10 = 8;
  sub_22F3E04C8(v4, 8uLL);
  v18 = v9;
  v11 = *(_QWORD **)(a1 + 48);
  v12 = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  v14 = v13 - *v11 - 24;
  if (v14 <= 7)
  {
    v10 = 8;
    do
    {
      v10 -= v14;
      v12 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)(v12 + 16);
      v14 = v13 - v12 - 24;
    }
    while (v10 > v14);
  }
  v15 = *(_QWORD *)(v13 - v10);
  sub_22F3E04C8(v11, 8uLL);
  v17 = v15;
  return sub_22F06D87C(a1, a2, 65, &v17, &v18);
}

uint64_t sub_22F3D8F1C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_QWORD *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_QWORD *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = v13 - v7;
  return 1;
}

uint64_t sub_22F3D8FF4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD **)(a1 + 48);
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = v4 - *v2 - 24;
  v6 = 8;
  if (v5 <= 7)
  {
    do
    {
      v6 -= v5;
      v3 = *(_QWORD *)(v3 + 8);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = v4 - v3 - 24;
    }
    while (v6 > v5);
  }
  v7 = *(_BYTE *)(v4 - v6);
  v8 = 8;
  sub_22F3E04C8(v2, 8uLL);
  v9 = *(_QWORD **)(a1 + 48);
  v10 = *v9;
  v11 = *(_QWORD *)(*v9 + 16);
  v12 = v11 - *v9 - 24;
  if (v12 <= 7)
  {
    v8 = 8;
    do
    {
      v8 -= v12;
      v10 = *(_QWORD *)(v10 + 8);
      v11 = *(_QWORD *)(v10 + 16);
      v12 = v11 - v10 - 24;
    }
    while (v8 > v12);
  }
  v13 = *(_BYTE *)(v11 - v8);
  sub_22F3E04C8(v9, 8uLL);
  *(_BYTE *)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 8) = (v13 ^ v7) & 1;
  return 1;
}

BOOL sub_22F3D90D0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t *v5;
  uint64_t **v6;

  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) != 0)
    return 0;
  v5 = (uint64_t *)(*(_QWORD *)(a1 + 64) + 32);
  result = sub_22F0707F4((uint64_t *)a1, a2, v5);
  if (result)
  {
    v6 = (uint64_t **)sub_22F3E03F8(*(_QWORD *)(a1 + 48), 32);
    sub_22F3E083C(v6, (uint64_t **)v5);
    return 1;
  }
  return result;
}

uint64_t *sub_22F3D9148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *result;
  int v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;

  v3 = *(unsigned int *)(a1 + 8);
  v4 = *(unsigned int *)(a1 + 12);
  if ((_DWORD)v4 == -1)
  {
    result = *(uint64_t **)a1;
    if ((v3 + 1) > 1)
      v11 = *(_QWORD *)a1 + v3 + 24;
    else
      v11 = *(_QWORD *)a1 + 24;
    v12 = *(_QWORD *)v11;
    v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 43);
    v14 = 16;
    if (v13)
    {
      if (*(_QWORD *)(v12 + 32))
        v14 = 16;
      else
        v14 = 8;
    }
    v15 = (uint64_t)result + v3 + 24;
    if ((v3 + 1) <= 1)
      v15 = (uint64_t)(result + 3);
    v16 = *(_DWORD *)(*(_QWORD *)v15 + 12);
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v3;
    *(_DWORD *)(a2 + 12) = v14 + v3 + v16;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    if (result)
      return sub_22F3DFDF8(result, a2);
  }
  else
  {
    if ((_DWORD)v3 != (_DWORD)v4)
      return (uint64_t *)sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
    result = *(uint64_t **)a1;
    if ((_DWORD)v4)
    {
      v6 = *(_DWORD *)((char *)result + v4 + 16);
      v7 = (uint64_t)result + (v4 - v6) + 24;
      v9 = v4 - v6;
      v8 = (_DWORD)v4 == v6;
      v10 = result + 3;
      if (!v8)
        v10 = (uint64_t *)v7;
      if (*(_BYTE *)(*v10 + 43))
      {
        *(_QWORD *)a2 = result;
        *(_DWORD *)(a2 + 8) = v9;
        *(_DWORD *)(a2 + 12) = v4;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        return sub_22F3DFDF8(result, a2);
      }
      return (uint64_t *)sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
    }
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = -1;
    *(_QWORD *)(a2 + 20) = 0;
    *(_QWORD *)(a2 + 12) = 0;
    *(_DWORD *)(a2 + 28) = 0;
    if (result)
      return sub_22F3DFDF8(result, a2);
  }
  return result;
}

uint64_t sub_22F3D9254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t *v13;
  _QWORD *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unsigned int v20;
  int v21;

  sub_22F3E083C(&v19, a4);
  v6 = v20;
  if ((unint64_t)v20 - 1 <= 0xFFFFFFFD)
  {
    do
    {
      if ((*((_BYTE *)v19 + v6 + 20) & 4) == 0)
        break;
      sub_22F3D9370((uint64_t)&v19, (uint64_t)&v14);
      sub_22F3E09A4((uint64_t *)&v19, (uint64_t *)&v14);
      sub_22F3E08B8(&v14);
      v6 = v20;
    }
    while ((unint64_t)v20 - 1 < 0xFFFFFFFE);
  }
  if (v6 == 0xFFFFFFFFLL || v6 == 0)
    v13 = v19;
  else
    v13 = (uint64_t *)((char *)v19 + v6);
  v8 = sub_22F3E11A8(*(_QWORD *)(v13[3] + 24), a3);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = v21 + *(_DWORD *)(v8 + 8);
  v14 = v19;
  v15 = v10;
  v16 = v10;
  v17 = 0;
  v18 = 0;
  if (v19)
    sub_22F3DFDF8(v19, (uint64_t)&v14);
  v11 = sub_22F3E03F8(v9, 32);
  sub_22F3E0878(v11, (uint64_t *)&v14);
  sub_22F3E08B8(&v14);
  sub_22F3E08B8(&v19);
  return 1;
}

uint64_t *sub_22F3D9370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *result;
  int v4;

  v2 = *(unsigned int *)(a1 + 8);
  result = *(uint64_t **)a1;
  if ((_DWORD)v2 != -1)
  {
    v4 = v2 - *(_DWORD *)((char *)result + v2 + 16);
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 12) = v4;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    return sub_22F3DFDF8(result, a2);
  }
  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = -1;
  *(_QWORD *)(a2 + 20) = 0;
  *(_QWORD *)(a2 + 12) = 0;
  *(_DWORD *)(a2 + 28) = 0;
  if (result)
    return sub_22F3DFDF8(result, a2);
  return result;
}

uint64_t **sub_22F3D93BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t **result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  result = *(uint64_t ***)a1;
  if (!result)
    return sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
  v5 = *(unsigned int *)(a1 + 8);
  v6 = (uint64_t)result + v5 + 24;
  if ((v5 + 1) <= 1)
    v6 = (uint64_t)(result + 3);
  if (*(_DWORD *)(*(_QWORD *)v6 + 12) == -1)
    return sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
  if ((_DWORD)v5 == -1)
  {
    if (*(_DWORD *)(a1 + 12))
      v7 = -1;
    else
      v7 = 0;
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 12) = v7;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    return (uint64_t **)sub_22F3DFDF8((uint64_t *)result, a2);
  }
  if (sub_22F3D9524((unsigned int *)a1))
  {
    result = *(uint64_t ***)a1;
    v8 = *(_DWORD *)(a1 + 8);
    *(_QWORD *)a2 = *(_QWORD *)a1;
    v9 = -1;
    *(_DWORD *)(a2 + 8) = v8;
LABEL_13:
    *(_DWORD *)(a2 + 12) = v9;
    goto LABEL_14;
  }
  v10 = *(unsigned int *)(a1 + 8);
  result = *(uint64_t ***)a1;
  if ((v10 + 1) > 1)
    v11 = (uint64_t *)(*(_QWORD *)a1 + v10 + 24);
  else
    v11 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v12 = *v11;
  if (*(_BYTE *)(v12 + 43) && !*(_QWORD *)(v12 + 32))
  {
    if (*(_DWORD *)(a1 + 12) == (_DWORD)v10)
    {
      v9 = v10 + 8;
      *(_QWORD *)a2 = result;
      *(_DWORD *)(a2 + 8) = v10;
      goto LABEL_13;
    }
    return sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
  }
  v9 = *(_DWORD *)(a1 + 12);
  if (v9 != (_DWORD)v10)
  {
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v9;
    goto LABEL_13;
  }
  v13 = (uint64_t)result + v10 + 24;
  if ((v10 + 1) <= 1)
    v13 = (uint64_t)(result + 3);
  if (!*(_BYTE *)(*(_QWORD *)v13 + 43))
    return sub_22F3E083C((uint64_t **)a2, (uint64_t **)a1);
  v14 = v10 + 16;
  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = v14;
  *(_DWORD *)(a2 + 12) = v14;
LABEL_14:
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  if (result)
    return (uint64_t **)sub_22F3DFDF8((uint64_t *)result, a2);
  return result;
}

BOOL sub_22F3D9524(unsigned int *a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v6;

  v1 = a1[3];
  if (v1 == -1)
    return 1;
  v2 = a1[2];
  if ((v2 + 1) > 1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)a1 + v2 + 24);
    v4 = *(_DWORD *)(v3 + 12);
    goto LABEL_7;
  }
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_DWORD *)(v3 + 12);
  if ((_DWORD)v2 != -1)
  {
LABEL_7:
    if (v1 == (_DWORD)v2)
    {
      v6 = 0;
    }
    else if (*(_QWORD *)(v3 + 32))
    {
      v6 = -16;
    }
    else
    {
      v6 = -8;
    }
    v1 = v1 - v2 + v6;
  }
  return v4 == v1;
}

uint64_t sub_22F3D95A8(unsigned __int8 *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F068FE0(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D9644(unsigned __int8 *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F069040(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D96E0(unsigned __int16 *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0690A4(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D977C(unsigned __int16 *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F069104(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D9818(unsigned int *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F069168(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D98B4(unsigned int *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0691C8(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D9950(uint64_t *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F06922C(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D99EC(uint64_t *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F06928C(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D9A88(unsigned __int8 *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0692F0(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t sub_22F3D9B24(unsigned int *a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0717A4(a1, (uint64_t)&v4);
  if (*(_DWORD *)a2 >= 2u)
    sub_22EF53BC0((uint64_t *)a2);
  *(_DWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v5;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  return 1;
}

uint64_t *sub_22F3D9BC0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *result;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;

  v3 = *(unsigned int *)(a1 + 8);
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 == -1)
    {
      result = *(uint64_t **)a1;
      v5 = *(_DWORD *)(result[3] + 12);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = -1;
      *(_DWORD *)(a3 + 12) = v5;
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(a3 + 24) = 0;
      return sub_22F3DFDF8(result, a3);
    }
    result = *(uint64_t **)a1;
    v6 = (uint64_t *)((char *)result + v3 + 24);
  }
  else
  {
    result = *(uint64_t **)a1;
    v6 = result + 3;
  }
  v7 = *v6;
  v8 = *(_DWORD *)(v7 + 8);
  if (*(_QWORD *)(v7 + 32))
    v9 = 16;
  else
    v9 = 8;
  *(_QWORD *)a3 = result;
  *(_DWORD *)(a3 + 8) = v3;
  *(_DWORD *)(a3 + 12) = v3 + v8 * a2 + v9;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  if (result)
    return sub_22F3DFDF8(result, a3);
  return result;
}

uint64_t sub_22F3D9C48@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  int v9;

  v3 = *a1;
  v6 = 8;
  v5 = v3;
  v7 = 0;
  result = llvm::APInt::sextOrTrunc((llvm::APInt *)&v5);
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)a2 = v8;
  v9 = 0;
  *(_BYTE *)(a2 + 12) = 0;
  if (v6 >= 0x41)
  {
    result = v5;
    if (v5)
      return MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_22F3D9CCC@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  int v9;

  v3 = *a1;
  v6 = 16;
  v5 = v3;
  v7 = 0;
  result = llvm::APInt::sextOrTrunc((llvm::APInt *)&v5);
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)a2 = v8;
  v9 = 0;
  *(_BYTE *)(a2 + 12) = 0;
  if (v6 >= 0x41)
  {
    result = v5;
    if (v5)
      return MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_22F3D9D50@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  int v9;

  v3 = *a1;
  v6 = 32;
  v5 = v3;
  v7 = 0;
  result = llvm::APInt::sextOrTrunc((llvm::APInt *)&v5);
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)a2 = v8;
  v9 = 0;
  *(_BYTE *)(a2 + 12) = 0;
  if (v6 >= 0x41)
  {
    result = v5;
    if (v5)
      return MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_22F3D9DD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  int v9;

  v3 = *a1;
  v6 = 64;
  v5 = v3;
  v7 = 0;
  result = llvm::APInt::sextOrTrunc((llvm::APInt *)&v5);
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)a2 = v8;
  v9 = 0;
  *(_BYTE *)(a2 + 12) = 0;
  if (v6 >= 0x41)
  {
    result = v5;
    if (v5)
      return MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_22F3D9E58(unsigned int *a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;

  v1 = a1[3];
  if (v1 == -1)
    return 1;
  v2 = a1[2];
  if ((_DWORD)v2 == -1)
  {
    v4 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + 12);
    if (v4)
      return v1 / v4;
  }
  else if ((_DWORD)v2)
  {
    v3 = *(_QWORD *)(*(_QWORD *)a1 + v2 + 24);
    v4 = *(_DWORD *)(v3 + 8);
    if (v4)
    {
      if (v1 != (_DWORD)v2)
      {
LABEL_6:
        if (*(_QWORD *)(v3 + 32))
          v5 = -16;
        else
          v5 = -8;
        goto LABEL_15;
      }
LABEL_14:
      v5 = 0;
LABEL_15:
      v1 = v1 - v2 + v5;
      return v1 / v4;
    }
  }
  else
  {
    v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
    v4 = *(_DWORD *)(v3 + 8);
    if (v4)
    {
      if (v1)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  return 0;
}

uint64_t sub_22F3D9EF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unsigned __int8 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  _DWORD *v18;
  unsigned __int8 *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25[4];
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned __int8 **v30;
  int *v31;
  int v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 v36;
  uint64_t v37;

  v37 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int8 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v36 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v34);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v34, 4) || !sub_22F070058(a1, a2, (uint64_t)&v34, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v34);
  v33 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v34))
    {
      if (((_DWORD)v35 + 1) > 1)
        v16 = &v34[v35 + 24];
      else
        v16 = v34 + 24;
      v17 = *(_DWORD *)(*(_QWORD *)v16 + 12);
      if ((_DWORD)v35)
      {
        if ((_DWORD)v35 == -1)
        {
          v18 = (_DWORD *)(*((_QWORD *)v34 + 3) + 12);
LABEL_26:
          v32 = v17 / *v18;
          v21 = v32;
          v26 = &v36;
          v27 = &v33;
          v28 = a1;
          v29 = &v37;
          v30 = &v34;
          v31 = &v32;
          v22 = sub_22F3D9E58((unsigned int *)&v34);
          if (v21 - v22 < v36)
          {
            v15 = sub_22F06A46C(&v26);
            goto LABEL_19;
          }
          v23 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v34, v33 + v36, (uint64_t)v25);
          v24 = sub_22F3E03F8(v23, 32);
          sub_22F3E0878(v24, v25);
          v14 = v25;
          goto LABEL_11;
        }
        v20 = &v34[v35 + 24];
      }
      else
      {
        v20 = v34 + 24;
      }
      v18 = (_DWORD *)(*(_QWORD *)v20 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v26 = v34;
    v27 = v35;
    v28 = 0;
    v29 = 0;
    if (v34)
      sub_22F3DFDF8((uint64_t *)v34, (uint64_t)&v26);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v34, 0, (uint64_t)&v26);
  }
  v12 = sub_22F3E03F8(v11, 32);
  v13 = (uint64_t *)v26;
  *v12 = v26;
  v12[1] = v27;
  v12[2] = 0;
  v12[3] = 0;
  if (v13)
    sub_22F3DFDF8(v13, (uint64_t)v12);
  v14 = (uint64_t *)&v26;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v14);
  v15 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v34);
  return v15;
}

uint64_t sub_22F3DA14C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unsigned __int16 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  _DWORD *v18;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25[4];
  unsigned __int16 *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned __int16 **v30;
  int *v31;
  int v32;
  unsigned __int16 v33;
  unsigned __int16 *v34;
  unsigned __int16 *v35;
  unsigned __int16 v36;
  uint64_t v37;

  v37 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int16 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v36 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v34);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v34, 4) || !sub_22F070058(a1, a2, (uint64_t)&v34, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v34);
  v33 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v34))
    {
      if (((_DWORD)v35 + 1) > 1)
        v16 = (_QWORD *)((char *)v34 + v35 + 24);
      else
        v16 = v34 + 12;
      v17 = *(_DWORD *)(*v16 + 12);
      if ((_DWORD)v35)
      {
        if ((_DWORD)v35 == -1)
        {
          v18 = (_DWORD *)(*((_QWORD *)v34 + 3) + 12);
LABEL_26:
          v32 = v17 / *v18;
          v21 = v32;
          v26 = &v36;
          v27 = &v33;
          v28 = a1;
          v29 = &v37;
          v30 = &v34;
          v31 = &v32;
          v22 = sub_22F3D9E58((unsigned int *)&v34);
          if (v21 - v22 < v36)
          {
            v15 = sub_22F06AC04(&v26);
            goto LABEL_19;
          }
          v23 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v34, v33 + v36, (uint64_t)v25);
          v24 = sub_22F3E03F8(v23, 32);
          sub_22F3E0878(v24, v25);
          v14 = v25;
          goto LABEL_11;
        }
        v20 = (_QWORD *)((char *)v34 + v35 + 24);
      }
      else
      {
        v20 = v34 + 12;
      }
      v18 = (_DWORD *)(*v20 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v26 = v34;
    v27 = v35;
    v28 = 0;
    v29 = 0;
    if (v34)
      sub_22F3DFDF8((uint64_t *)v34, (uint64_t)&v26);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v34, 0, (uint64_t)&v26);
  }
  v12 = sub_22F3E03F8(v11, 32);
  v13 = (uint64_t *)v26;
  *v12 = v26;
  v12[1] = v27;
  v12[2] = 0;
  v12[3] = 0;
  if (v13)
    sub_22F3DFDF8(v13, (uint64_t)v12);
  v14 = (uint64_t *)&v26;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v14);
  v15 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v34);
  return v15;
}

uint64_t sub_22F3DA3A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  _DWORD *v18;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25[4];
  unsigned int *v26;
  int *v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned int **v30;
  int *v31;
  int v32;
  int v33;
  unsigned int *v34;
  int *v35;
  unsigned int v36;
  uint64_t v37;

  v37 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v36 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v34);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v34, 4) || !sub_22F070058(a1, a2, (uint64_t)&v34, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v34);
  v33 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v34))
    {
      if (((_DWORD)v35 + 1) > 1)
        v16 = (_QWORD *)((char *)v34 + v35 + 24);
      else
        v16 = v34 + 6;
      v17 = *(_DWORD *)(*v16 + 12);
      if ((_DWORD)v35)
      {
        if ((_DWORD)v35 == -1)
        {
          v18 = (_DWORD *)(*((_QWORD *)v34 + 3) + 12);
LABEL_26:
          v32 = v17 / *v18;
          v21 = v32;
          v26 = &v36;
          v27 = &v33;
          v28 = a1;
          v29 = &v37;
          v30 = &v34;
          v31 = &v32;
          v22 = sub_22F3D9E58((unsigned int *)&v34);
          if (v36 > v21 - v22)
          {
            v15 = sub_22F06B39C(&v26);
            goto LABEL_19;
          }
          v23 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v34, v33 + v36, (uint64_t)v25);
          v24 = sub_22F3E03F8(v23, 32);
          sub_22F3E0878(v24, v25);
          v14 = v25;
          goto LABEL_11;
        }
        v20 = (_QWORD *)((char *)v34 + v35 + 24);
      }
      else
      {
        v20 = v34 + 6;
      }
      v18 = (_DWORD *)(*v20 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v26 = v34;
    v27 = v35;
    v28 = 0;
    v29 = 0;
    if (v34)
      sub_22F3DFDF8((uint64_t *)v34, (uint64_t)&v26);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v34, 0, (uint64_t)&v26);
  }
  v12 = sub_22F3E03F8(v11, 32);
  v13 = (uint64_t *)v26;
  *v12 = v26;
  v12[1] = v27;
  v12[2] = 0;
  v12[3] = 0;
  if (v13)
    sub_22F3DFDF8(v13, (uint64_t)v12);
  v14 = (uint64_t *)&v26;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v14);
  v15 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v34);
  return v15;
}

uint64_t sub_22F3DA5F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  _DWORD *v18;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25[4];
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t **v30;
  int *v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v36 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v34);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v34, 4) || !sub_22F070058(a1, a2, (uint64_t)&v34, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v34);
  v33 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v34))
    {
      if (((_DWORD)v35 + 1) > 1)
        v16 = (uint64_t *)((char *)v34 + v35 + 24);
      else
        v16 = v34 + 3;
      v17 = *(_DWORD *)(*v16 + 12);
      if ((_DWORD)v35)
      {
        if ((_DWORD)v35 == -1)
        {
          v18 = (_DWORD *)(v34[3] + 12);
LABEL_26:
          v32 = v17 / *v18;
          v21 = v32;
          v26 = &v36;
          v27 = &v33;
          v28 = a1;
          v29 = &v37;
          v30 = &v34;
          v31 = &v32;
          v22 = sub_22F3D9E58((unsigned int *)&v34);
          if (v21 - v22 < v36)
          {
            v15 = sub_22F06BB34(&v26);
            goto LABEL_19;
          }
          v23 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v34, v33 + v36, (uint64_t)v25);
          v24 = sub_22F3E03F8(v23, 32);
          sub_22F3E0878(v24, v25);
          v14 = v25;
          goto LABEL_11;
        }
        v20 = (uint64_t *)((char *)v34 + v35 + 24);
      }
      else
      {
        v20 = v34 + 3;
      }
      v18 = (_DWORD *)(*v20 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v26 = v34;
    v27 = v35;
    v28 = 0;
    v29 = 0;
    if (v34)
      sub_22F3DFDF8(v34, (uint64_t)&v26);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v34, 0, (uint64_t)&v26);
  }
  v12 = sub_22F3E03F8(v11, 32);
  v13 = v26;
  *v12 = v26;
  v12[1] = v27;
  v12[2] = 0;
  v12[3] = 0;
  if (v13)
    sub_22F3DFDF8(v13, (uint64_t)v12);
  v14 = (uint64_t *)&v26;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v14);
  v15 = 1;
LABEL_19:
  sub_22F3E08B8(&v34);
  return v15;
}

uint64_t sub_22F3DA84C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  _DWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t *v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25[4];
  unsigned __int8 *v26;
  BOOL *v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned __int8 **v30;
  int *v31;
  int v32;
  BOOL v33;
  unsigned __int8 *v34;
  BOOL *v35;
  unsigned __int8 v36;
  uint64_t v37;

  v37 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int8 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v36 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v34);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v34, 4) && sub_22F070058(a1, a2, (uint64_t)&v34, 3))
  {
    v10 = sub_22F3D9E58((unsigned int *)&v34);
    v33 = v10 != 0;
    if (!v9)
    {
      v11 = *(_QWORD *)(a1 + 48);
      if (v10)
      {
        v26 = v34;
        v27 = v35;
        v28 = 0;
        v29 = 0;
        if (v34)
          sub_22F3DFDF8((uint64_t *)v34, (uint64_t)&v26);
      }
      else
      {
        sub_22F3D9BC0((uint64_t)&v34, 0, (uint64_t)&v26);
      }
      v17 = sub_22F3E03F8(v11, 32);
      v18 = (uint64_t *)v26;
      *v17 = v26;
      v17[1] = v27;
      v17[2] = 0;
      v17[3] = 0;
      if (v18)
        sub_22F3DFDF8(v18, (uint64_t)v17);
      v19 = (uint64_t *)&v26;
LABEL_21:
      sub_22F3E08B8((_QWORD **)v19);
      v15 = 1;
      goto LABEL_16;
    }
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v34))
    {
      if (((_DWORD)v35 + 1) > 1)
        v12 = &v34[v35 + 24];
      else
        v12 = v34 + 24;
      v13 = *(_DWORD *)(*(_QWORD *)v12 + 12);
      if ((_DWORD)v35)
      {
        if ((_DWORD)v35 == -1)
        {
          v14 = (_DWORD *)(*((_QWORD *)v34 + 3) + 12);
LABEL_26:
          v32 = v13 / *v14;
          v21 = v32;
          v26 = &v36;
          v27 = &v33;
          v28 = a1;
          v29 = &v37;
          v30 = &v34;
          v31 = &v32;
          v22 = sub_22F3D9E58((unsigned int *)&v34);
          if (v21 - v22 < v36)
          {
            v15 = sub_22F06BDC8(&v26);
            goto LABEL_16;
          }
          v23 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v34, v33 + v36, (uint64_t)v25);
          v24 = sub_22F3E03F8(v23, 32);
          sub_22F3E0878(v24, v25);
          v19 = v25;
          goto LABEL_21;
        }
        v20 = &v34[v35 + 24];
      }
      else
      {
        v20 = v34 + 24;
      }
      v14 = (_DWORD *)(*(_QWORD *)v20 + 8);
      goto LABEL_26;
    }
  }
  v15 = 0;
LABEL_16:
  sub_22F3E08B8((_QWORD **)&v34);
  return v15;
}

uint64_t sub_22F3DAAA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(char *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(char *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DABB0(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DABBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(unsigned __int8 *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(unsigned __int8 *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DACC4(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DACD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(__int16 *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(__int16 *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DADD8(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DADE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(unsigned __int16 *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(unsigned __int16 *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DAEEC(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DAEF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(_DWORD *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(_DWORD *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DB000(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DB00C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(_DWORD *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(_DWORD *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DB114(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DB120(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(_QWORD *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(_QWORD *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DB228(uint64_t a1, int a2)
{
  return a2 == 0;
}

uint64_t sub_22F3DB234(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;

  v7 = *(_QWORD **)(a1 + 48);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  v10 = v9 - *v7 - 24;
  v11 = 8;
  if (v10 <= 7)
  {
    do
    {
      v11 -= v10;
      v8 = *(_QWORD *)(v8 + 8);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = v9 - v8 - 24;
    }
    while (v11 > v10);
  }
  v12 = *(_QWORD *)(v9 - v11);
  v13 = 8;
  sub_22F3E04C8(v7, 8uLL);
  v14 = *(_QWORD **)(a1 + 48);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 16);
  v17 = v16 - *v14 - 24;
  if (v17 <= 7)
  {
    v13 = 8;
    do
    {
      v13 -= v17;
      v15 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v16 - v15 - 24;
    }
    while (v13 > v17);
  }
  v18 = *(_QWORD *)(v16 - v13);
  sub_22F3E04C8(v14, 8uLL);
  v19 = *(_QWORD *)(a1 + 48);
  if (v18 <= v12)
    v20 = 0;
  else
    v20 = 3;
  if (v18 >= v12)
    v21 = v20;
  else
    v21 = 2;
  v22 = a3(a4, v21);
  *(_BYTE *)sub_22F3E03F8(v19, 8) = v22;
  return 1;
}

BOOL sub_22F3DB33C(uint64_t a1, int a2)
{
  return a2 == 0;
}

BOOL sub_22F3DB348(uint64_t a1, int a2)
{
  return a2 == 0;
}

BOOL sub_22F3DB354(uint64_t a1, int a2)
{
  return a2 == 0;
}

BOOL sub_22F3DB360(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB370(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB380(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB390(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3A0(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3B0(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3C0(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3D0(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3E0(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB3F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  _QWORD *v16;
  unsigned int v17;
  _QWORD *v18;
  unsigned int v19;

  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v18);
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v16);
  v8 = v16;
  v9 = v18;
  if (v16 == v18)
  {
    v10 = *(_QWORD *)(a1 + 48);
    if (v17 <= v19)
      v11 = 0;
    else
      v11 = 3;
    if (v17 >= v19)
      v12 = v11;
    else
      v12 = 2;
    v13 = a3(a4, v12);
    *(_BYTE *)sub_22F3E03F8(v10, 8) = v13;
  }
  else
  {
    v15 = sub_22F3E0284(*(_QWORD *)(a1 + 64), a2);
    sub_22F3E138C(a1, &v15, 103, 0);
  }
  sub_22F3E08B8(&v16);
  sub_22F3E08B8(&v18);
  return v8 == v9;
}

BOOL sub_22F3DB4D8(uint64_t a1, int a2)
{
  return a2 == 3 || a2 == 0;
}

BOOL sub_22F3DB4E8(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB4F4(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB500(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB50C(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB518(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB524(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB530(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB53C(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB548(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB554(uint64_t a1, int a2)
{
  return a2 == 3;
}

BOOL sub_22F3DB560(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB570(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB580(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB590(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5A0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5B0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5C0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5D0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5E0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB5F0(uint64_t a1, char a2)
{
  return (a2 & 0xFD) == 0;
}

BOOL sub_22F3DB600(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB60C(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB618(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB624(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB630(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB63C(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB648(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB654(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB660(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB66C(uint64_t a1, int a2)
{
  return a2 == 2;
}

BOOL sub_22F3DB678(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB684(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB690(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB69C(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6A8(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6B4(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6C0(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6CC(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6D8(uint64_t a1, int a2)
{
  return a2 != 0;
}

BOOL sub_22F3DB6E4(uint64_t a1, int a2)
{
  return a2 != 0;
}

uint64_t sub_22F3DB6F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  _DWORD *v19;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24[4];
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int8 **v29;
  int *v30;
  int v31;
  unsigned __int8 v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  unsigned __int8 v35;
  uint64_t v36;

  v36 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int8 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v35 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v33);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v33, 4) || !sub_22F070058(a1, a2, (uint64_t)&v33, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v33);
  v11 = v10;
  v32 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v33))
    {
      if (((_DWORD)v34 + 1) > 1)
        v17 = &v33[v34 + 24];
      else
        v17 = v33 + 24;
      v18 = *(_DWORD *)(*(_QWORD *)v17 + 12);
      if ((_DWORD)v34)
      {
        if ((_DWORD)v34 == -1)
        {
          v19 = (_DWORD *)(*((_QWORD *)v33 + 3) + 12);
LABEL_26:
          v31 = v18 / *v19;
          v25 = &v35;
          v26 = &v32;
          v27 = a1;
          v28 = &v36;
          v29 = &v33;
          v30 = &v31;
          if (v9 > v11)
          {
            v16 = sub_22F06E088(&v25);
            goto LABEL_19;
          }
          sub_22F3D9E58((unsigned int *)&v33);
          v22 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v33, v32 - v35, (uint64_t)v24);
          v23 = sub_22F3E03F8(v22, 32);
          sub_22F3E0878(v23, v24);
          v15 = v24;
          goto LABEL_11;
        }
        v21 = &v33[v34 + 24];
      }
      else
      {
        v21 = v33 + 24;
      }
      v19 = (_DWORD *)(*(_QWORD *)v21 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v16 = 0;
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v25 = v33;
    v26 = v34;
    v27 = 0;
    v28 = 0;
    if (v33)
      sub_22F3DFDF8((uint64_t *)v33, (uint64_t)&v25);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v33, 0, (uint64_t)&v25);
  }
  v13 = sub_22F3E03F8(v12, 32);
  v14 = (uint64_t *)v25;
  *v13 = v25;
  v13[1] = v26;
  v13[2] = 0;
  v13[3] = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)v13);
  v15 = (uint64_t *)&v25;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v15);
  v16 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v33);
  return v16;
}

uint64_t sub_22F3DB944(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned __int16 v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int v18;
  _DWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24[4];
  unsigned __int16 *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int16 **v29;
  int *v30;
  int v31;
  unsigned __int16 v32;
  unsigned __int16 *v33;
  unsigned __int16 *v34;
  unsigned __int16 v35;
  uint64_t v36;

  v36 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int16 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v35 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v33);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v33, 4) || !sub_22F070058(a1, a2, (uint64_t)&v33, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v33);
  v11 = v10;
  v32 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v33))
    {
      if (((_DWORD)v34 + 1) > 1)
        v17 = (_QWORD *)((char *)v33 + v34 + 24);
      else
        v17 = v33 + 12;
      v18 = *(_DWORD *)(*v17 + 12);
      if ((_DWORD)v34)
      {
        if ((_DWORD)v34 == -1)
        {
          v19 = (_DWORD *)(*((_QWORD *)v33 + 3) + 12);
LABEL_26:
          v31 = v18 / *v19;
          v25 = &v35;
          v26 = &v32;
          v27 = a1;
          v28 = &v36;
          v29 = &v33;
          v30 = &v31;
          if (v9 > v11)
          {
            v16 = sub_22F06E820(&v25);
            goto LABEL_19;
          }
          sub_22F3D9E58((unsigned int *)&v33);
          v22 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v33, v32 - v35, (uint64_t)v24);
          v23 = sub_22F3E03F8(v22, 32);
          sub_22F3E0878(v23, v24);
          v15 = v24;
          goto LABEL_11;
        }
        v21 = (_QWORD *)((char *)v33 + v34 + 24);
      }
      else
      {
        v21 = v33 + 12;
      }
      v19 = (_DWORD *)(*v21 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v16 = 0;
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v25 = v33;
    v26 = v34;
    v27 = 0;
    v28 = 0;
    if (v33)
      sub_22F3DFDF8((uint64_t *)v33, (uint64_t)&v25);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v33, 0, (uint64_t)&v25);
  }
  v13 = sub_22F3E03F8(v12, 32);
  v14 = (uint64_t *)v25;
  *v13 = v25;
  v13[1] = v26;
  v13[2] = 0;
  v13[3] = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)v13);
  v15 = (uint64_t *)&v25;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v15);
  v16 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v33);
  return v16;
}

uint64_t sub_22F3DBB98(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int v18;
  _DWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24[4];
  unsigned int *v25;
  int *v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned int **v29;
  int *v30;
  int v31;
  unsigned int v32;
  unsigned int *v33;
  int *v34;
  unsigned int v35;
  uint64_t v36;

  v36 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_DWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v35 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v33);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v33, 4) || !sub_22F070058(a1, a2, (uint64_t)&v33, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v33);
  v11 = v10;
  v32 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v33))
    {
      if (((_DWORD)v34 + 1) > 1)
        v17 = (_QWORD *)((char *)v33 + v34 + 24);
      else
        v17 = v33 + 6;
      v18 = *(_DWORD *)(*v17 + 12);
      if ((_DWORD)v34)
      {
        if ((_DWORD)v34 == -1)
        {
          v19 = (_DWORD *)(*((_QWORD *)v33 + 3) + 12);
LABEL_26:
          v31 = v18 / *v19;
          v25 = &v35;
          v26 = (int *)&v32;
          v27 = a1;
          v28 = &v36;
          v29 = &v33;
          v30 = &v31;
          if (v9 > v11)
          {
            v16 = sub_22F06EFBC(&v25);
            goto LABEL_19;
          }
          sub_22F3D9E58((unsigned int *)&v33);
          v22 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v33, v32 - v35, (uint64_t)v24);
          v23 = sub_22F3E03F8(v22, 32);
          sub_22F3E0878(v23, v24);
          v15 = v24;
          goto LABEL_11;
        }
        v21 = (_QWORD *)((char *)v33 + v34 + 24);
      }
      else
      {
        v21 = v33 + 6;
      }
      v19 = (_DWORD *)(*v21 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v16 = 0;
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v25 = v33;
    v26 = v34;
    v27 = 0;
    v28 = 0;
    if (v33)
      sub_22F3DFDF8((uint64_t *)v33, (uint64_t)&v25);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v33, 0, (uint64_t)&v25);
  }
  v13 = sub_22F3E03F8(v12, 32);
  v14 = (uint64_t *)v25;
  *v13 = v25;
  v13[1] = v26;
  v13[2] = 0;
  v13[3] = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)v13);
  v15 = (uint64_t *)&v25;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v15);
  v16 = 1;
LABEL_19:
  sub_22F3E08B8((_QWORD **)&v33);
  return v16;
}

uint64_t sub_22F3DBDEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int v18;
  _DWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24[4];
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t **v29;
  int *v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;

  v36 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(_QWORD *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v35 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v33);
  if (!sub_22F06FEF4(a1, a2, (uint64_t *)&v33, 4) || !sub_22F070058(a1, a2, (uint64_t)&v33, 3))
    goto LABEL_18;
  v10 = sub_22F3D9E58((unsigned int *)&v33);
  v11 = v10;
  v32 = v10;
  if (v9)
  {
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v33))
    {
      if (((_DWORD)v34 + 1) > 1)
        v17 = (uint64_t *)((char *)v33 + v34 + 24);
      else
        v17 = v33 + 3;
      v18 = *(_DWORD *)(*v17 + 12);
      if ((_DWORD)v34)
      {
        if ((_DWORD)v34 == -1)
        {
          v19 = (_DWORD *)(v33[3] + 12);
LABEL_26:
          v31 = v18 / *v19;
          v25 = (uint64_t *)&v35;
          v26 = &v32;
          v27 = a1;
          v28 = &v36;
          v29 = &v33;
          v30 = &v31;
          if (v11 < v9)
          {
            v16 = sub_22F06F758(&v25);
            goto LABEL_19;
          }
          sub_22F3D9E58((unsigned int *)&v33);
          v22 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v33, v32 - v35, (uint64_t)v24);
          v23 = sub_22F3E03F8(v22, 32);
          sub_22F3E0878(v23, v24);
          v15 = v24;
          goto LABEL_11;
        }
        v21 = (uint64_t *)((char *)v33 + v34 + 24);
      }
      else
      {
        v21 = v33 + 3;
      }
      v19 = (_DWORD *)(*v21 + 8);
      goto LABEL_26;
    }
LABEL_18:
    v16 = 0;
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(a1 + 48);
  if (v10)
  {
    v25 = v33;
    v26 = v34;
    v27 = 0;
    v28 = 0;
    if (v33)
      sub_22F3DFDF8(v33, (uint64_t)&v25);
  }
  else
  {
    sub_22F3D9BC0((uint64_t)&v33, 0, (uint64_t)&v25);
  }
  v13 = sub_22F3E03F8(v12, 32);
  v14 = v25;
  *v13 = v25;
  v13[1] = v26;
  v13[2] = 0;
  v13[3] = 0;
  if (v14)
    sub_22F3DFDF8(v14, (uint64_t)v13);
  v15 = (uint64_t *)&v25;
LABEL_11:
  sub_22F3E08B8((_QWORD **)v15);
  v16 = 1;
LABEL_19:
  sub_22F3E08B8(&v33);
  return v16;
}

uint64_t sub_22F3DC040(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  _DWORD *v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24[4];
  unsigned __int8 *v25;
  BOOL *v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int8 **v29;
  int *v30;
  int v31;
  BOOL v32;
  unsigned __int8 *v33;
  BOOL *v34;
  unsigned __int8 v35;
  uint64_t v36;

  v36 = a2;
  v4 = *(_QWORD **)(a1 + 48);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  v7 = v6 - *v4 - 24;
  v8 = 8;
  if (v7 <= 7)
  {
    do
    {
      v8 -= v7;
      v5 = *(_QWORD *)(v5 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = v6 - v5 - 24;
    }
    while (v8 > v7);
  }
  v9 = *(unsigned __int8 *)(v6 - v8);
  sub_22F3E04C8(v4, 8uLL);
  v35 = v9;
  sub_22F3CDF00(*(_QWORD **)(a1 + 48), (uint64_t *)&v33);
  if (sub_22F06FEF4(a1, a2, (uint64_t *)&v33, 4) && sub_22F070058(a1, a2, (uint64_t)&v33, 3))
  {
    v10 = sub_22F3D9E58((unsigned int *)&v33);
    v11 = v10 != 0;
    v32 = v10 != 0;
    if (!v9)
    {
      v12 = *(_QWORD *)(a1 + 48);
      if (v10)
      {
        v25 = v33;
        v26 = v34;
        v27 = 0;
        v28 = 0;
        if (v33)
          sub_22F3DFDF8((uint64_t *)v33, (uint64_t)&v25);
      }
      else
      {
        sub_22F3D9BC0((uint64_t)&v33, 0, (uint64_t)&v25);
      }
      v18 = sub_22F3E03F8(v12, 32);
      v19 = (uint64_t *)v25;
      *v18 = v25;
      v18[1] = v26;
      v18[2] = 0;
      v18[3] = 0;
      if (v19)
        sub_22F3DFDF8(v19, (uint64_t)v18);
      v20 = (uint64_t *)&v25;
LABEL_21:
      sub_22F3E08B8((_QWORD **)v20);
      v16 = 1;
      goto LABEL_16;
    }
    if (sub_22F06FC7C(a1, a2, (uint64_t *)&v33))
    {
      if (((_DWORD)v34 + 1) > 1)
        v13 = &v33[v34 + 24];
      else
        v13 = v33 + 24;
      v14 = *(_DWORD *)(*(_QWORD *)v13 + 12);
      if ((_DWORD)v34)
      {
        if ((_DWORD)v34 == -1)
        {
          v15 = (_DWORD *)(*((_QWORD *)v33 + 3) + 12);
LABEL_26:
          v31 = v14 / *v15;
          v25 = &v35;
          v26 = &v32;
          v27 = a1;
          v28 = &v36;
          v29 = &v33;
          v30 = &v31;
          if ((v9 & 1u) > v11)
          {
            v16 = sub_22F06F9EC(&v25);
            goto LABEL_16;
          }
          sub_22F3D9E58((unsigned int *)&v33);
          v22 = *(_QWORD *)(a1 + 48);
          sub_22F3D9BC0((uint64_t)&v33, v32 - v35, (uint64_t)v24);
          v23 = sub_22F3E03F8(v22, 32);
          sub_22F3E0878(v23, v24);
          v20 = v24;
          goto LABEL_21;
        }
        v21 = &v33[v34 + 24];
      }
      else
      {
        v21 = v33 + 24;
      }
      v15 = (_DWORD *)(*(_QWORD *)v21 + 8);
      goto LABEL_26;
    }
  }
  v16 = 0;
LABEL_16:
  sub_22F3E08B8((_QWORD **)&v33);
  return v16;
}

uint64_t sub_22F3DC29C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  int v11;
  int v12;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = sub_22EFBB464(a3);
  *(_QWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 28) = a4;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 80) = a1 + 96;
  *(_QWORD *)(a1 + 88) = 0x200000000;
  *(_QWORD *)(a1 + 384) = a1 + 400;
  *(_QWORD *)(a1 + 392) = 0x800000000;
  if (*(_DWORD *)(a5 + 8))
    sub_22F28CB40(a1 + 384, a5);
  *(_QWORD *)(a1 + 432) = 0;
  *(_QWORD *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)a6;
  *(_QWORD *)a6 = 0;
  *(_DWORD *)(a1 + 440) = *(_DWORD *)(a6 + 8);
  *(_DWORD *)(a6 + 8) = 0;
  v11 = *(_DWORD *)(a1 + 444);
  *(_DWORD *)(a1 + 444) = *(_DWORD *)(a6 + 12);
  *(_DWORD *)(a6 + 12) = v11;
  v12 = *(_DWORD *)(a1 + 448);
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a6 + 16);
  *(_DWORD *)(a6 + 16) = v12;
  *(_BYTE *)(a1 + 456) = 0;
  return a1;
}

uint64_t sub_22F3DC388(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t sub_22F3DC390(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int *v5;
  int v6;
  int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 432);
  v3 = *(_DWORD *)(a1 + 448);
  if (!v3)
  {
LABEL_6:
    v5 = (int *)(v2 + 24 * v3);
    return *((_QWORD *)v5 + 1);
  }
  v4 = (v3 - 1) & (37 * a2);
  v5 = (int *)(v2 + 24 * v4);
  v6 = *v5;
  if (*v5 != a2)
  {
    v8 = 1;
    while (v6 != -1)
    {
      v9 = v4 + v8++;
      v4 = v9 & (v3 - 1);
      v5 = (int *)(v2 + 24 * v4);
      v6 = *v5;
      if (*v5 == a2)
        return *((_QWORD *)v5 + 1);
    }
    goto LABEL_6;
  }
  return *((_QWORD *)v5 + 1);
}

uint64_t sub_22F3DC404(uint64_t a1, int a2)
{
  unsigned int v2;
  char *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  unsigned int *v7;
  char *v8;
  unsigned int v9;
  uint64_t v11;

  v2 = a2 - *(_DWORD *)(a1 + 32);
  v3 = *(char **)(a1 + 56);
  v4 = *(char **)(a1 + 64);
  if (v4 != v3)
  {
    v5 = (v4 - v3) >> 4;
    do
    {
      v6 = v5 >> 1;
      v7 = (unsigned int *)&v3[16 * (v5 >> 1)];
      v9 = *v7;
      v8 = (char *)(v7 + 4);
      v5 += ~(v5 >> 1);
      if (v9 < v2)
        v3 = v8;
      else
        v5 = v6;
    }
    while (v5);
  }
  if (v3 != v4 && *(_DWORD *)v3 == v2)
    return *((_QWORD *)v3 + 1);
  v11 = llvm::report_fatal_error((llvm *)"missing source location", (const char *)1);
  return sub_22F3DC47C(v11);
}

BOOL sub_22F3DC47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 **v11;
  unsigned __int8 **v12;
  unsigned __int8 *v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v3 = *(unsigned __int8 *)(*(_QWORD *)a3 + 17);
  if (*(_BYTE *)(*(_QWORD *)a3 + 17)
    && ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16)) & 1) == 0)
  {
    v8 = 0;
    v9 = **(_QWORD **)(*(_QWORD *)a3 + 24);
    if ((v9 & 2) == 0)
    {
      v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
      if (v10)
      {
        if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 48 >= 0x1B)
          v8 = 0;
        else
          v8 = v10;
      }
    }
    v17 = sub_22F3E0284(*(_QWORD *)(a1 + 64), a2);
    v11 = (unsigned __int8 **)sub_22F3E138C(a1, &v17, 2226, 1);
    if (v11)
    {
      v12 = v11;
      v13 = *v11;
      if (!v13)
      {
        v13 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v12[1]);
        *v12 = v13;
      }
      v13[*v13 + 1] = 11;
      v14 = *v12;
      v15 = **v12;
      *v14 = v15 + 1;
      *(_QWORD *)&v14[8 * v15 + 16] = v8;
    }
    v16 = *(_DWORD *)(v8 + 24);
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 64))(a1))
      sub_22F072E10(a1, v16, 100);
  }
  return v3 == 0;
}

BOOL sub_22F3DC5A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v9;
  _QWORD **v10;
  _QWORD **v11;
  _QWORD *v12;
  unsigned __int8 **v13;
  unsigned __int8 **v14;
  unsigned __int8 *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *((unsigned int *)a3 + 2);
  v6 = *a3;
  if ((_DWORD)v5)
    v7 = *(_BYTE *)(v6 + v5 + 20) & 1;
  else
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 24) + 40);
  if (v7)
  {
    v9 = v5 + 1;
    v10 = (_QWORD **)(v6 + v5 + 24);
    v11 = (_QWORD **)(v6 + 24);
    if (v9 <= 1)
      v10 = v11;
    v12 = sub_22F066EB0(*v10);
    v18 = sub_22F3E0284(*(_QWORD *)(a1 + 64), a2);
    v13 = (unsigned __int8 **)sub_22F3E138C(a1, &v18, 2237, 0);
    if (v13)
    {
      v14 = v13;
      v15 = *v13;
      if (!v15)
      {
        v15 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v14[1]);
        *v14 = v15;
      }
      v15[*v15 + 1] = 9;
      v16 = *v14;
      v17 = **v14;
      *v16 = v17 + 1;
      *(_QWORD *)&v16[8 * v17 + 16] = v12;
    }
  }
  return v7 == 0;
}

uint64_t sub_22F3DC694(uint64_t *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t result;

  result = sub_22F06FD00(a1, a2, a3, 2);
  if ((_DWORD)result)
    return sub_22F06FFA0((uint64_t)a1, a2, a3, 2);
  return result;
}

void sub_22F3DC6EC(uint64_t a1)
{
  unsigned int *v1;
  uint64_t v2;
  unsigned int v3;

  v1 = (unsigned int *)sub_22F3DC388(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 24));
  do
  {
    v3 = *v1++;
    v2 = v3;
  }
  while (v3 > 0x1B8);
  __asm { BR              X9 }
}

_QWORD **sub_22F3DFDA8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v4;
  uint64_t *v6[4];

  sub_22F3E0268(a2, a3, v6);
  v4 = sub_22F3E03F8(a1, 32);
  sub_22F3E0878(v4, (uint64_t *)v6);
  return sub_22F3E08B8(v6);
}

uint64_t *sub_22F3DFDF8(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  if (!*((_BYTE *)result + 16))
  {
    v2 = *result;
    if (*result)
      *(_QWORD *)(v2 + 16) = a2;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = v2;
    *result = a2;
  }
  return result;
}

uint64_t sub_22F3DFE1C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (!*(_BYTE *)(result + 16))
  {
    if (*(_QWORD *)result == a2)
      *(_QWORD *)result = *(_QWORD *)(a2 + 24);
    v2 = *(_QWORD *)(a2 + 16);
    if (v2)
      *(_QWORD *)(v2 + 24) = *(_QWORD *)(a2 + 24);
    v3 = *(_QWORD *)(a2 + 24);
    if (v3)
      *(_QWORD *)(v3 + 16) = v2;
  }
  return result;
}

void sub_22F3DFE5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)a1 + 1);
  if (v1)
    *(_QWORD *)(v1 + 16) = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 2);
  if (v2)
    *(_QWORD *)(v2 + 8) = v1;
  if (**(void ***)a1 == a1)
    **(_QWORD **)a1 = v2;
  free(a1);
}

uint64_t sub_22F3DFE94(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (!*(_BYTE *)(result + 16))
  {
    v3 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a3 + 16) = v3;
    if (v3)
      *(_QWORD *)(v3 + 24) = a3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a3 + 24) = v4;
    if (v4)
      *(_QWORD *)(v4 + 16) = a3;
    if (*(_QWORD *)result == a2)
      *(_QWORD *)result = a3;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
  }
  return result;
}

uint64_t sub_22F3DFEDC(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)result = a2;
  v3 = *(_QWORD *)(a3 + 24);
  v4 = *(_BYTE *)(a3 + 16);
  v5 = *(_BYTE *)(a3 + 17);
  *(_BYTE *)(result + 32) = 0;
  *(_BYTE *)(result + 36) = 0;
  *(_BYTE *)(result + 40) = v5;
  *(_BYTE *)(result + 41) = v4;
  *(_BYTE *)(result + 42) = 1;
  *(_QWORD *)(result + 48) = v3;
  v6 = *a2;
  if (*a2)
  {
    *(_QWORD *)(v6 + 8) = result;
    v6 = *a2;
  }
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = v6;
  *a2 = result;
  *(_QWORD *)(result + 24) = *(_QWORD *)a3;
  v7 = *(_QWORD **)a3;
  if (*(_QWORD *)a3)
  {
    do
    {
      *v7 = result + 24;
      v7 = (_QWORD *)v7[3];
    }
    while (v7);
  }
  return result;
}

uint64_t sub_22F3DFF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int **v18;
  unsigned int **v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t);

  *(_QWORD *)a1 = &off_24FAC60D8;
  *(_QWORD *)(a1 + 8) = a4;
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = a3;
  sub_22F3E0878((uint64_t *)(a1 + 32), a6);
  *(_QWORD *)(a1 + 64) = a5;
  if (a3)
    v10 = *(_DWORD *)(a3 + 28);
  else
    v10 = 0;
  *(_DWORD *)(a1 + 72) = v10;
  v11 = *(uint64_t **)(a2 + 48);
  v12 = *v11;
  if (*v11)
  {
    v12 = sub_22F3E048C(v11, 0);
    v11 = *(uint64_t **)(a2 + 48);
  }
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = 0;
  v13 = v11[1];
  *(_DWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  if (a3)
  {
    v14 = *(unsigned int *)(a3 + 24);
    if ((_DWORD)v14)
    {
      v15 = (void *)operator new[]();
      bzero(v15, v14);
      v16 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v15;
      if (v16)
        MEMORY[0x2348A0E84](v16, 0x1000C8077774924);
      v17 = *(_DWORD *)(a3 + 88);
      if (v17)
      {
        v18 = *(unsigned int ***)(a3 + 80);
        v19 = &v18[18 * v17];
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20)
          {
            v21 = *v18;
            v22 = (uint64_t)&(*v18)[4 * v20];
            do
            {
              v23 = (_QWORD *)(*(_QWORD *)(a1 + 88) + *v21);
              *(v23 - 4) = 0;
              v24 = *((_QWORD *)v21 + 1);
              *((_DWORD *)v23 - 6) = -1;
              *((_BYTE *)v23 - 20) = 1;
              *((_WORD *)v23 - 8) = 0;
              *((_BYTE *)v23 - 14) = 0;
              *(v23 - 1) = v24;
              bzero(v23, *(unsigned int *)(v24 + 16));
              v25 = *(void (**)(_QWORD *, _QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(v24 + 48);
              if (v25)
                v25(v23 - 4, v23, *(unsigned __int8 *)(v24 + 40), *(unsigned __int8 *)(v24 + 41), 1, v24);
              v21 += 4;
            }
            while (v21 != (unsigned int *)v22);
          }
          v18 += 18;
        }
        while (v18 != v19);
      }
    }
  }
  return a1;
}

void sub_22F3E00F4(uint64_t a1)
{
  sub_22F0708F8(a1);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3E0118(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  unsigned int v7;

  v2 = *(_QWORD *)(*(_QWORD *)(result + 24) + 80) + 144 * a2;
  v3 = *(unsigned int *)(v2 + 8);
  if ((_DWORD)v3)
  {
    v4 = result;
    v5 = *(unsigned int **)v2;
    v6 = 16 * v3;
    do
    {
      v7 = *v5;
      v5 += 4;
      result = sub_22F3E0684(*(_QWORD *)(v4 + 16), (_QWORD *)(*(_QWORD *)(v4 + 88) + v7 - 32));
      v6 -= 16;
    }
    while (v6);
  }
  return result;
}

void sub_22F3E017C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD **v10;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(unsigned int *)(v1 + 392);
  if ((_DWORD)v2)
  {
    v4 = 4 * v2;
    v5 = *(_QWORD *)(v1 + 384) - 4;
    do
    {
      switch(*(_DWORD *)(v5 + v4))
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          v6 = *(uint64_t **)(*(_QWORD *)(a1 + 16) + 48);
          sub_22F3E048C(v6, 8uLL);
          v7 = v6;
          v8 = 8;
          goto LABEL_5;
        case 9:
          v9 = *(uint64_t **)(*(_QWORD *)(a1 + 16) + 48);
          v10 = (_QWORD **)sub_22F3E048C(v9, 0x20uLL);
          sub_22F3E08B8(v10);
          v7 = v9;
          v8 = 32;
LABEL_5:
          sub_22F3E04C8(v7, v8);
          break;
        default:
          break;
      }
      v4 -= 4;
    }
    while (v4);
  }
}

uint64_t sub_22F3E0234(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 24) + 16);
}

void sub_22F3E0240(uint64_t a1)
{
  sub_22F3E135C(*(_QWORD *)(a1 + 16) + 8);
}

uint64_t *sub_22F3E0268@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t **a3@<X8>)
{
  uint64_t *v3;

  v3 = (uint64_t *)(*(_QWORD *)(a1 + 88) + a2 - 32);
  *a3 = v3;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = 0;
  return sub_22F3DFDF8(v3, (uint64_t)a3);
}

uint64_t sub_22F3E0284(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v4 + 16))(v4, v3, a2);
  else
    return sub_22F3DC404(v3, a2);
}

void sub_22F3E02AC(uint64_t a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)llvm::SmallVectorBase<unsigned int>::mallocForGrow();
  sub_22F3E0318((uint64_t **)a1, v2);
  if (*(_QWORD *)a1 != a1 + 16)
    free(*(void **)a1);
  *(_QWORD *)a1 = v2;
  *(_DWORD *)(a1 + 12) = 0;
}

uint64_t **sub_22F3E0318(uint64_t **result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;

  v2 = *((unsigned int *)result + 2);
  if ((_DWORD)v2)
  {
    v4 = result;
    v5 = *result;
    v6 = 32 * v2;
    do
    {
      result = (uint64_t **)sub_22F3E0878(a2, v5);
      v5 += 4;
      a2 += 4;
      v6 -= 32;
    }
    while (v6);
    v7 = *((unsigned int *)v4 + 2);
    if ((_DWORD)v7)
    {
      v8 = *v4;
      v9 = 4 * v7;
      v10 = v8 - 4;
      do
      {
        result = sub_22F3E08B8((_QWORD **)&v10[v9]);
        v9 -= 4;
      }
      while (v9 * 8);
    }
  }
  return result;
}

void sub_22F3E0390(uint64_t a1)
{
  void **v2;

  v2 = *(void ***)a1;
  if (v2)
  {
    if (!*v2 || (free(*v2), (v2 = *(void ***)a1) != 0))
      free(v2);
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
}

uint64_t sub_22F3E03D4(uint64_t a1)
{
  sub_22F3E0390(a1);
  return a1;
}

_QWORD *sub_22F3E03F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = *(_QWORD **)a1;
  if (v4)
  {
    v5 = (_QWORD *)v4[2];
    if ((unint64_t)v5 + a2 - (_QWORD)v4 <= 0x100000)
      goto LABEL_8;
    v4 = (_QWORD *)*v4;
    if (v4)
    {
      *(_QWORD *)a1 = v4;
      v5 = (_QWORD *)v4[2];
      goto LABEL_8;
    }
  }
  v4 = malloc_type_malloc(0x100000uLL, 0xB3A78F25uLL);
  v6 = *(_QWORD **)a1;
  *v4 = 0;
  v4[1] = v6;
  v5 = v4 + 3;
  v4[2] = v4 + 3;
  if (v6)
    *v6 = v4;
  *(_QWORD *)a1 = v4;
LABEL_8:
  v4[2] = (char *)v5 + a2;
  *(_QWORD *)(a1 + 8) += a2;
  return v5;
}

uint64_t sub_22F3E048C(uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t i;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  for (i = v3 - *a1 - 24; a2 > i; i = v3 - v2 - 24)
  {
    a2 -= i;
    v2 = *(_QWORD *)(v2 + 8);
    v3 = *(_QWORD *)(v2 + 16);
  }
  return v3 - a2;
}

void sub_22F3E04C8(_QWORD *a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = a2;
  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 16);
  v6 = v5 - *a1 - 24;
  if (v6 < a2)
  {
    do
    {
      if (*(_QWORD *)v4)
      {
        free(*(void **)v4);
        v4 = *a1;
        *(_QWORD *)*a1 = 0;
      }
      v2 -= v6;
      *(_QWORD *)(v4 + 16) = v4 + 24;
      v4 = *(_QWORD *)(v4 + 8);
      *a1 = v4;
      v5 = *(_QWORD *)(v4 + 16);
      v6 = v5 - v4 - 24;
    }
    while (v2 > v6);
  }
  *(_QWORD *)(v4 + 16) = v5 - v2;
  a1[1] -= v2;
}

uint64_t sub_22F3E0558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_QWORD *)a1 = &off_24FAC6120;
  *(_QWORD *)(a1 + 8) = &unk_24FAC61B0;
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = a6;
  *(_QWORD *)(a1 + 40) = a3;
  *(_QWORD *)(a1 + 48) = a4;
  *(_QWORD *)(a1 + 56) = a5;
  *(_QWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 112))(a2) + 1;
  return a1;
}

uint64_t sub_22F3E05B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    do
    {
      v3 = *(_QWORD *)(v2 + 8);
      v4 = sub_22F3E00F0();
      MEMORY[0x2348A0E9C](v4, 0x10F1C404FF6CEB9);
      *(_QWORD *)(a1 + 64) = v3;
      v2 = v3;
    }
    while (v3);
  }
  v5 = *(_QWORD **)(a1 + 24);
  if (v5)
  {
    do
    {
      v6 = (_QWORD *)v5[2];
      free(v5);
      *(_QWORD *)(a1 + 24) = v6;
      v5 = v6;
    }
    while (v6);
  }
  return nullsub_910(a1);
}

uint64_t sub_22F3E0620(uint64_t a1)
{
  return sub_22F3E05B0(a1 - 8);
}

void sub_22F3E0628(uint64_t a1)
{
  sub_22F3E05B0(a1);
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22F3E064C(uint64_t a1)
{
  sub_22F3E05B0(a1 - 8);
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22F3E0674(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0684(uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  uint64_t (*v7)(_QWORD *, _QWORD *, uint64_t);

  v3 = a2[3];
  if (*a2)
  {
    v4 = result;
    v5 = malloc_type_malloc(*(unsigned int *)(v3 + 16) + 56, 0x18A7B2D1uLL);
    result = sub_22F3DFF48((uint64_t)v5, (uint64_t *)(v4 + 24), (uint64_t)a2);
    v6 = *(uint64_t (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v3 + 64);
    if (v6)
      return v6(a2, a2 + 4, result + 56, v3);
  }
  else
  {
    v7 = *(uint64_t (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 56);
    if (v7)
      return v7(a2, a2 + 4, v3);
  }
  return result;
}

uint64_t sub_22F3E0724(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0734(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 24))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0744(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 40))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0754(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 56))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0764(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 64))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0774(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 72))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0784(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 80))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E0794(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 88))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E07A4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 96))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E07B4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 104))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_22F3E07C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_22F3E07CC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  else
    return sub_22F3DC404(a2, a3);
}

uint64_t sub_22F3E07EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
  else
    return sub_22F3DC404(a2, a3);
}

_QWORD *sub_22F3E080C(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  *result = a2;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  if (a2 && !*((_BYTE *)a2 + 16))
  {
    v2 = *a2;
    if (*a2)
      *(_QWORD *)(v2 + 16) = result;
    result[2] = 0;
    result[3] = v2;
    *a2 = (uint64_t)result;
  }
  return result;
}

uint64_t **sub_22F3E083C(uint64_t **result, uint64_t **a2)
{
  uint64_t **v2;
  uint64_t *v3;

  v2 = (uint64_t **)*a2;
  *result = *a2;
  result[1] = a2[1];
  result[2] = 0;
  result[3] = 0;
  if (v2 && !*((_BYTE *)v2 + 16))
  {
    v3 = *v2;
    if (*v2)
      v3[2] = (uint64_t)result;
    result[2] = 0;
    result[3] = v3;
    *v2 = (uint64_t *)result;
  }
  return result;
}

uint64_t *sub_22F3E0878(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = 0;
  a1[3] = 0;
  if (v3)
    sub_22F3DFE94(v3, (uint64_t)a2, (uint64_t)a1);
  return a1;
}

_QWORD **sub_22F3E08B8(_QWORD **a1)
{
  _QWORD *v2;
  _QWORD *v4;

  v2 = *a1;
  if (v2)
  {
    sub_22F3DFE1C((uint64_t)v2, (uint64_t)a1);
    v4 = *a1;
    if (!**a1)
    {
      if (*((_BYTE *)v4 + 18))
        sub_22F3DFE5C(v4 - 3);
    }
  }
  return a1;
}

void sub_22F3E0908(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  if (*a1)
    sub_22F3DFE1C(*a1, (uint64_t)a1);
  a1[1] = a2[1];
  v5 = *a2;
  *a1 = *a2;
  if (v5 && !*(_BYTE *)(v5 + 16))
  {
    v6 = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      *(_QWORD *)(v6 + 16) = a1;
    a1[2] = 0;
    a1[3] = v6;
    *(_QWORD *)v5 = a1;
  }
  if (v4 && !*(_QWORD *)v4)
  {
    if (*(_BYTE *)(v4 + 18))
      sub_22F3DFE5C((void *)(v4 - 24));
  }
}

void sub_22F3E09A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  if (*a1)
    sub_22F3DFE1C(*a1, (uint64_t)a1);
  a1[1] = a2[1];
  v5 = *a2;
  *a1 = *a2;
  if (v5)
    sub_22F3DFE94(v5, (uint64_t)a2, (uint64_t)a1);
  if (v4 && !*(_QWORD *)v4)
  {
    if (*(_BYTE *)(v4 + 18))
      sub_22F3DFE5C((void *)(v4 - 24));
  }
}

BOOL sub_22F3E0A2C(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  unsigned int v7;

  v1 = a1[2];
  v2 = *(_QWORD *)a1;
  if ((v1 + 1) > 1)
    v3 = (uint64_t *)(*(_QWORD *)a1 + v1 + 24);
  else
    v3 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v4 = *v3;
  if (!*(_BYTE *)(v4 + 43) || *(_QWORD *)(v4 + 32))
  {
    if ((_DWORD)v1)
      return (*(unsigned __int8 *)(v2 + v1 + 20) >> 1) & 1;
    return 1;
  }
  if (*(_BYTE *)(v2 + 16))
    return 1;
  v6 = *(_QWORD *)(v2 + v1 + 32);
  if (!v6)
    return 0;
  if (v6 == -1)
    return 1;
  v7 = sub_22F3D9E58(a1);
  return sub_22F3CDAD0(v6, v7);
}

void sub_22F3E0AD4(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v2 = a1[2];
  v3 = *(_QWORD *)a1;
  if ((v2 + 1) > 1)
    v4 = (uint64_t *)(*(_QWORD *)a1 + v2 + 24);
  else
    v4 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v5 = *v4;
  if (*(_BYTE *)(v5 + 43) && !*(_QWORD *)(v5 + 32))
  {
    if (!*(_BYTE *)(v3 + 16))
    {
      v6 = v3 + 32;
      v7 = *(int **)(v3 + 32 + v2);
      if (v7 != (int *)-1)
      {
        if (!v7)
        {
          v8 = *(_DWORD *)(v5 + 12);
          if (v8 == -1)
            v9 = 0;
          else
            v9 = v8 / *(_DWORD *)(v5 + 8);
          v7 = sub_22F3CDAF0(v9);
          *(_QWORD *)(v6 + v2) = v7;
        }
        v10 = sub_22F3D9E58(a1);
        if (sub_22F3CDA90(v7, v10))
        {
          free(*(void **)(v6 + v2));
          *(_QWORD *)(v6 + v2) = -1;
        }
      }
    }
  }
  else
  {
    *(_BYTE *)(v3 + v2 + 20) |= 2u;
  }
}

uint64_t sub_22F3E0BB4(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(unsigned int *)(result + 8);
  *(_BYTE *)(v1 + 20) |= 8u;
  return result;
}

uint64_t sub_22F3E0BD0(int a1)
{
  return qword_22F4A59C8[a1];
}

uint64_t sub_22F3E0BE0(uint64_t a1, unsigned int a2)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8 * a2);
}

_QWORD *sub_22F3E0BEC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X8>)
{
  return sub_22F3E080C(a3, *(uint64_t **)(*(_QWORD *)(a1 + 224) + 8 * a2));
}

uint64_t sub_22F3E0BFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v10;

  v4 = sub_22F071BC8(a1, a2);
  if (HIDWORD(v4))
  {
    v8 = v4;
    v7 = v4 & 0xFFFFFF00;
    v6 = v4 & 0x100000000;
  }
  else
  {
    v5 = sub_22F071CDC(a1, a2);
    v6 = HIDWORD(v5);
    if (HIDWORD(v5))
    {
      v8 = v5;
      v7 = v5 & 0xFFFFFF00;
      v10 = a2;
      *((_DWORD *)sub_22F283EC0((uint64_t *)(a1 + 248), &v10) + 2) = v5;
      v6 = 0x100000000;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
  }
  return v8 | v7 | v6;
}

uint64_t sub_22F3E0C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v13 = a2;
  v4 = **(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v5 || *(_BYTE *)(v5 + 16) != 39)
    v5 = sub_22F10CF48(v5);
  v6 = sub_22EF6096C(v4, *(_QWORD *)(v5 + 32), 0, 0, 0, 0, 0);
  v7 = (uint64_t *)(a1 + 296);
  v14 = a2;
  v15 = 0;
  if (!sub_22F246C54((uint64_t *)(a1 + 296), &v14, &v15)
    || v15 == *(_QWORD *)(a1 + 296) + 16 * *(unsigned int *)(a1 + 312))
  {
    v15 = a2 & 0xFFFFFFFFFFFFFFFDLL;
    v12 = sub_22F3E0DB4(a1, &v15, v6, 1, 1);
    if ((v12 & 0x100000000) != 0)
    {
      LOBYTE(v8) = v12;
      v10 = v12 & 0x100000000;
      v9 = v12 & 0xFFFFFF00;
      *((_DWORD *)sub_22F283EC0(v7, &v13) + 2) = v12;
    }
    else
    {
      v10 = 0;
      LOBYTE(v8) = 0;
      v9 = 0;
    }
  }
  else
  {
    v8 = *(_DWORD *)(v15 + 8);
    v9 = v8 & 0xFFFFFF00;
    v10 = 0x100000000;
  }
  return v10 | v9 | v8;
}

uint64_t sub_22F3E0DB4(uint64_t a1, _QWORD *a2, uint64_t a3, char a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t *v21;
  _QWORD *v22;
  int v23;

  if ((a3 & 1) != 0)
    v10 = 1;
  else
    v10 = *(_BYTE *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 1;
  if (*a2 > 3uLL)
    v11 = (*a2 >> 1) & 1;
  else
    v11 = 0;
  v12 = sub_22F0665E4(*(uint64_t **)a1, a3);
  if ((v12 & 0xFF00000000) != 0)
  {
    v23 = v12;
    v14 = sub_22E3CD3D4(a1 + 128, 72, 3);
    sub_22F3CD8AC(v14, a2, v23, v10, v11, 0);
  }
  else
  {
    result = sub_22F071DF4((uint64_t **)a1, a2, *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0), v10, v11, 0);
    v14 = result;
    if (!result)
      return result;
  }
  v15 = *(_QWORD *)(a1 + 224);
  v16 = *(_QWORD *)(a1 + 232);
  v17 = sub_22E3CD3D4(a1 + 128, *(unsigned int *)(v14 + 16) + 32, 3);
  v18 = v17;
  if (*(_DWORD *)(a1 + 324) == -1)
    v19 = 0;
  else
    v19 = *(unsigned int *)(a1 + 320) | 0x100000000;
  *(_QWORD *)v17 = 0;
  *(_QWORD *)(v17 + 8) = v19;
  *(_BYTE *)(v17 + 16) = a4;
  *(_BYTE *)(v17 + 17) = a5;
  *(_BYTE *)(v17 + 18) = 0;
  *(_QWORD *)(v17 + 24) = v14;
  bzero((void *)(v17 + 32), *(unsigned int *)(v14 + 16));
  v20 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 48);
  if (v20)
    v20(v18, v18 + 32, *(unsigned __int8 *)(v14 + 40), *(unsigned __int8 *)(v14 + 41), 1, v14);
  v21 = *(uint64_t **)(a1 + 232);
  if ((unint64_t)v21 >= *(_QWORD *)(a1 + 240))
  {
    v22 = sub_22E566A8C((void **)(a1 + 224), v18);
  }
  else
  {
    *v21 = v18;
    v22 = v21 + 1;
  }
  *(_QWORD *)(a1 + 232) = v22;
  return ((unint64_t)(v16 - v15) >> 3) | 0x100000000;
}

uint64_t sub_22F3E0F44(uint64_t a1, uint64_t a2)
{
  int v3;
  unint64_t v4;
  int v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  v8 = 0;
  v3 = sub_22EFBF86C(a2, &v8, 0);
  v4 = v8;
  if (!v3)
    v4 = 0;
  v7 = v4;
  v8 = 0;
  v5 = sub_22F246C54((uint64_t *)(a1 + 8), &v7, &v8);
  result = 0;
  if (v5)
  {
    if (v8 != *(_QWORD *)(a1 + 8) + 16 * *(unsigned int *)(a1 + 24))
      return *(_QWORD *)(v8 + 8);
  }
  return result;
}

uint64_t sub_22F3E0FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t **a5, int a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  __int128 v31;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a1 + 24;
  v12 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0x800000000;
  if (*(_DWORD *)(a3 + 8))
    sub_22F3E1200(v12, a3);
  *(_QWORD *)(a1 + 280) = a1 + 296;
  *(_QWORD *)(a1 + 288) = 0x800000000;
  if (*(_DWORD *)(a4 + 8))
    sub_22F2A39AC(a1 + 280, a4);
  *(_QWORD *)(a1 + 488) = a1 + 504;
  *(_QWORD *)(a1 + 496) = 0x200000000;
  *(_DWORD *)(a1 + 584) = 0;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_DWORD *)(a1 + 608) = 0;
  *(_DWORD *)(a1 + 632) = 0;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_DWORD *)(a1 + 640) = a7;
  *(_DWORD *)(a1 + 644) = a6;
  v13 = *((unsigned int *)a5 + 2);
  if ((_DWORD)v13)
  {
    v14 = *a5;
    v15 = &v14[4 * v13];
    do
    {
      v29 = *v14;
      v30 = *((_DWORD *)v14 + 2) + a7;
      v31 = *((_OWORD *)v14 + 1);
      v16 = (_OWORD *)sub_22E78DF7C(a1 + 488, (unint64_t)&v29, 1);
      v17 = (_OWORD *)(*(_QWORD *)(a1 + 488) + 32 * *(unsigned int *)(a1 + 496));
      v18 = v16[1];
      *v17 = *v16;
      v17[1] = v18;
      ++*(_DWORD *)(a1 + 496);
      v14 += 4;
    }
    while (v14 != v15);
  }
  v19 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v19)
  {
    v20 = *(uint64_t **)(a1 + 8);
    v21 = 32 * v19;
    do
    {
      sub_22F24C2B0(a1 + 568, v20)[1] = v20;
      v20 += 4;
      v21 -= 32;
    }
    while (v21);
  }
  v22 = *(unsigned int *)(a1 + 288);
  if ((_DWORD)v22)
  {
    v23 = *(uint64_t **)(a1 + 280);
    v24 = 24 * v22;
    do
    {
      sub_22F24C2B0(a1 + 592, v23)[1] = v23;
      v23 += 3;
      v24 -= 24;
    }
    while (v24);
  }
  v25 = *(unsigned int *)(a1 + 496);
  if ((_DWORD)v25)
  {
    v26 = *(uint64_t **)(a1 + 488);
    v27 = 32 * v25;
    do
    {
      sub_22F24C2B0(a1 + 616, v26)[1] = v26;
      v26 += 4;
      v27 -= 32;
    }
    while (v27);
  }
  return a1;
}

uint64_t sub_22F3E11A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;

  v5 = 0;
  if (sub_22F24C318(*(_QWORD *)(a1 + 616), *(_DWORD *)(a1 + 632), a2, &v5))
    v3 = v5;
  else
    v3 = *(_QWORD *)(a1 + 616) + 16 * *(unsigned int *)(a1 + 632);
  return *(_QWORD *)(v3 + 8);
}

uint64_t sub_22F3E1200(uint64_t a1, uint64_t a2)
{
  const void *v4;
  const void *v5;
  void *v6;
  _DWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = (const void *)(a2 + 16);
    v4 = *(const void **)a2;
    if (v4 != v5)
    {
      v6 = *(void **)a1;
      if (*(_QWORD *)a1 != a1 + 16)
      {
        free(v6);
        v4 = *(const void **)a2;
      }
      *(_QWORD *)a1 = v4;
      v7 = (_DWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a2 = v5;
      *(_DWORD *)(a2 + 12) = 0;
      goto LABEL_6;
    }
    v7 = (_DWORD *)(a2 + 8);
    v9 = *(unsigned int *)(a2 + 8);
    v10 = *(unsigned int *)(a1 + 8);
    if (v10 >= v9)
    {
      if ((_DWORD)v9)
        memmove(*(void **)a1, v4, 32 * v9);
      goto LABEL_16;
    }
    if (*(_DWORD *)(a1 + 12) >= v9)
    {
      if ((_DWORD)v10)
      {
        memmove(*(void **)a1, v4, 32 * v10);
LABEL_12:
        v11 = *v7;
        if (v10 != v11)
          memcpy((void *)(*(_QWORD *)a1 + 32 * v10), (const void *)(*(_QWORD *)a2 + 32 * v10), *(_QWORD *)a2 + 32 * v11 - (*(_QWORD *)a2 + 32 * v10));
LABEL_16:
        *(_DWORD *)(a1 + 8) = v9;
LABEL_6:
        *v7 = 0;
        return a1;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 8) = 0;
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    v10 = 0;
    goto LABEL_12;
  }
  return a1;
}

void sub_22F3E1314(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;

  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  if ((v1 & 4) == 0 || (v2 = (unsigned __int8 *)(v1 & 0xFFFFFFFFFFFFFFF8)) == 0 || *v2 - 102 >= 0x85)
  {
    v3 = llvm::report_fatal_error((llvm *)"missing source expression", (const char *)1);
    sub_22F3E135C(v3);
  }
}

void sub_22F3E135C(uint64_t a1)
{
  uint64_t v1;

  v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  sub_22F0727C8(&v1);
}

uint64_t sub_22F3E138C(uint64_t a1, uint64_t *a2, int a3, int a4)
{
  int v8;

  if (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 88))(a1) + 8))
  {
    sub_22F0727C8(a2);
    return sub_22F072828(a1, v8, a3, a4, 0);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(a1, 0);
    return 0;
  }
}

uint64_t sub_22F3E1414@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;

  v7 = *(_QWORD *)(*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) + 1992) + 8);
  *(_DWORD *)(v7 + 312) = a2;
  *(_DWORD *)(v7 + 316) = a3;
  if (*(char *)(v7 + 311) < 0)
  {
    **(_BYTE **)(v7 + 288) = 0;
    *(_QWORD *)(v7 + 296) = 0;
  }
  else
  {
    *(_BYTE *)(v7 + 288) = 0;
    *(_BYTE *)(v7 + 311) = 0;
  }
  return sub_22E78E558(a4, v7);
}

_QWORD *sub_22F3E1480(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)operator new();
  *v2 = &off_24FAC61D8;
  v2[1] = sub_22F368DF4(a1, 0);
  v2[2] = a1;
  return v2;
}

uint64_t sub_22F3E14D8()
{
  return 0;
}

uint64_t sub_22F3E14E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = a1;
  *(_QWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  *(_QWORD *)result = off_24FAC62E8;
  *(_QWORD *)(result + 104) = 0;
  *(_QWORD *)(result + 112) = 0;
  *(_DWORD *)(result + 120) = 0;
  *(_DWORD *)(result + 144) = 0;
  *(_QWORD *)(result + 128) = 0;
  *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 152) = sub_22F073F0C;
  *(_QWORD *)(result + 160) = 0;
  *(_BYTE *)(result + 168) = 0;
  return result;
}

uint64_t sub_22F3E1564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = a1;
  *(_QWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 80) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  *(_QWORD *)result = off_24FAC62E8;
  *(_QWORD *)(result + 104) = 0;
  *(_QWORD *)(result + 112) = 0;
  *(_DWORD *)(result + 120) = 0;
  *(_DWORD *)(result + 144) = 0;
  *(_QWORD *)(result + 128) = 0;
  *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 152) = a3;
  *(_QWORD *)(result + 160) = 0;
  *(_BYTE *)(result + 168) = 0;
  return result;
}

unsigned int *sub_22F3E15EC(unsigned int *result, uint64_t a2, _BYTE *a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _BYTE *v12;
  unint64_t v13;
  unsigned int v14;
  _OWORD *__src;

  v4 = *(_QWORD *)result;
  v5 = result[2];
  if (*(_QWORD *)result + 16 * v5 == a2)
    return (unsigned int *)sub_22E501850((uint64_t)result, a3, a4);
  v6 = (a2 - v4) >> 4;
  __src = a3;
  v8 = a4 - a3;
  v9 = (a4 - a3) >> 4;
  v10 = (uint64_t)result;
  if (v5 + v9 > result[3])
  {
    result = (unsigned int *)llvm::SmallVectorBase<unsigned int>::grow_pod();
    v4 = *(_QWORD *)v10;
    v5 = *(unsigned int *)(v10 + 8);
  }
  v11 = (_OWORD *)(v4 + 16 * v6);
  v12 = (_BYTE *)(v4 + 16 * v5);
  v13 = (v12 - (_BYTE *)v11) >> 4;
  if (v13 >= v9)
  {
    result = (unsigned int *)sub_22F2625F8(v10, &v12[-16 * v9], (char *)(v4 + 16 * v5));
    if (&v12[-16 * v9] != (_BYTE *)v11)
      result = (unsigned int *)memmove(&v11[v9], v11, &v12[-16 * v9] - (_BYTE *)v11);
    if (__src != (_OWORD *)a4)
      return (unsigned int *)memmove(v11, __src, v8);
  }
  else
  {
    v14 = v5 + (v8 >> 4);
    *(_DWORD *)(v10 + 8) = v14;
    if (v6 != v5)
    {
      result = (unsigned int *)memcpy((void *)(v4 + 16 * v14 - 16 * v13), v11, v12 - (_BYTE *)v11);
      do
      {
        *v11++ = *__src++;
        --v13;
      }
      while (v13);
    }
    if (__src != (_OWORD *)a4)
      return (unsigned int *)memcpy(v12, __src, a4 - (_BYTE *)__src);
  }
  return result;
}

unsigned int *sub_22F3E1788(unsigned int *result, uint64_t a2, __int128 *__src, __int128 *a4)
{
  __int128 *v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  _BYTE *v13;
  unint64_t v14;
  unsigned int v15;
  __int128 v16;

  v5 = __src;
  v6 = result;
  v7 = *(_QWORD *)result;
  v8 = result[2];
  if (*(_QWORD *)result + 16 * v8 == a2)
    return (unsigned int *)sub_22F29D690((uint64_t)result, __src, a4);
  v9 = (a2 - v7) >> 4;
  v10 = (char *)a4 - (char *)__src;
  v11 = a4 - __src;
  if (v8 + v11 > result[3])
  {
    result = (unsigned int *)llvm::SmallVectorBase<unsigned int>::grow_pod();
    v7 = *(_QWORD *)v6;
    v8 = v6[2];
  }
  v12 = (_OWORD *)(v7 + 16 * v9);
  v13 = (_BYTE *)(v7 + 16 * v8);
  v14 = (v13 - (_BYTE *)v12) >> 4;
  if (v14 >= v11)
  {
    result = (unsigned int *)sub_22F2625F8((uint64_t)v6, &v13[-16 * v11], (char *)(v7 + 16 * v8));
    if (&v13[-16 * v11] != (_BYTE *)v12)
      result = (unsigned int *)memmove(&v12[v11], v12, &v13[-16 * v11] - (_BYTE *)v12);
    if (v5 != a4)
      return (unsigned int *)memmove(v12, v5, (char *)a4 - (char *)v5);
  }
  else
  {
    v15 = v8 + (v10 >> 4);
    v6[2] = v15;
    if (v9 != v8)
    {
      result = (unsigned int *)memcpy((void *)(v7 + 16 * v15 - 16 * v14), v12, v13 - (_BYTE *)v12);
      do
      {
        v16 = *v5++;
        *v12++ = v16;
        --v14;
      }
      while (v14);
    }
    if (v5 != a4)
      return (unsigned int *)memcpy(v13, v5, (char *)a4 - (char *)v5);
  }
  return result;
}

_QWORD *sub_22F3E1914(uint64_t *a1, _QWORD *a2)
{
  char v4;
  _QWORD *v5;
  _QWORD *v7;

  v7 = 0;
  v4 = sub_22EF7922C(a1, a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22F37238C((uint64_t)a1, (uint64_t)a2, a2, v7);
    *v5 = *a2;
    *((_DWORD *)v5 + 2) = 0;
  }
  return v5;
}

_QWORD *sub_22F3E1974(uint64_t *a1, _QWORD *a2)
{
  char v4;
  _QWORD *v5;
  _QWORD *v7;

  v7 = 0;
  v4 = sub_22F3E19DC(a1, a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22F3E1AD4((uint64_t)a1, (uint64_t)a2, a2, v7);
    *v5 = *a2;
    v5[1] = a2[1];
    *((_DWORD *)v5 + 4) = 0;
  }
  return v5;
}

uint64_t sub_22F3E19DC(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  int v17;
  uint64_t result;
  BOOL v19;
  unsigned int v21;

  v3 = *((_DWORD *)a1 + 4);
  if (v3)
  {
    v4 = *a1;
    v5 = a2[1];
    v6 = ((v5 >> 4) ^ (v5 >> 9) | ((unint64_t)((*a2 >> 4) ^ (*a2 >> 9)) << 32))
       + ~((unint64_t)((v5 >> 4) ^ (v5 >> 9)) << 32);
    v7 = (v6 ^ (v6 >> 22)) + ~((v6 ^ (v6 >> 22)) << 13);
    v8 = (9 * (v7 ^ (v7 >> 8))) ^ ((9 * (v7 ^ (v7 >> 8))) >> 15);
    v9 = ((v8 + ~(v8 << 27)) >> 31) ^ (v8 + ~((_DWORD)v8 << 27));
    v10 = v3 - 1;
    v11 = (v3 - 1) & v9;
    v12 = (_QWORD *)(*a1 + 24 * v11);
    v13 = *v12;
    v14 = v12[1];
    if (*a2 == *v12 && v5 == v14)
    {
      result = 1;
    }
    else
    {
      v16 = 0;
      v17 = 1;
      while (v13 != -4096 || v14 != -4096)
      {
        if (v16)
          v19 = 0;
        else
          v19 = v14 == -8192;
        if (v19 && v13 == -8192)
          v16 = v12;
        v21 = v11 + v17++;
        v11 = v21 & v10;
        v12 = (_QWORD *)(v4 + 24 * (v21 & v10));
        v13 = *v12;
        v14 = v12[1];
        result = 1;
        if (*a2 == *v12 && v5 == v14)
          goto LABEL_11;
      }
      result = 0;
      if (v16)
        v12 = v16;
    }
  }
  else
  {
    v12 = 0;
    result = 0;
  }
LABEL_11:
  *a3 = v12;
  return result;
}

_QWORD *sub_22F3E1AD4(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  int v6;
  unsigned int v7;
  _QWORD *v9;

  v6 = *(_DWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 16);
  if (4 * v6 + 4 >= 3 * v7)
  {
    v7 *= 2;
LABEL_5:
    sub_22F089C30(a1, v7);
    v9 = 0;
    sub_22F3E19DC((uint64_t *)a1, a3, &v9);
    a4 = v9;
    goto LABEL_6;
  }
  if (v7 + ~v6 - *(_DWORD *)(a1 + 12) <= v7 >> 3)
    goto LABEL_5;
LABEL_6:
  ++*(_DWORD *)(a1 + 8);
  if (*a4 != -4096 || a4[1] != -4096)
    --*(_DWORD *)(a1 + 12);
  return a4;
}

uint64_t sub_22F3E1B90(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  int64x2_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(int64x2_t **)result;
    v8 = 24 * v6;
    v9 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
    do
    {
      *v7 = v9;
      v7 = (int64x2_t *)((char *)v7 + 24);
      v8 -= 24;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    v10 = *(_QWORD *)(a2 + 8);
    if ((*(_QWORD *)a2 != -4096 || v10 != -4096) && (*(_QWORD *)a2 != -8192 || v10 != -8192))
    {
      v12 = 0;
      result = sub_22F3E19DC((uint64_t *)v5, (_QWORD *)a2, &v12);
      v11 = v12;
      *v12 = *(_QWORD *)a2;
      v11[1] = *(_QWORD *)(a2 + 8);
      *((_DWORD *)v11 + 4) = *(_DWORD *)(a2 + 16);
      ++*(_DWORD *)(v5 + 8);
    }
    a2 += 24;
  }
  return result;
}

uint64_t sub_22F3E1C68(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)())((char *)nullsub_1103 + 4 * byte_22F4A6048[*(_DWORD *)(a2 + 28) & 0x7F]))();
}

void sub_22F3E1C8C(uint64_t a1, uint64_t a2)
{
  sub_22F08A8A4(a1, (uint64_t *)(a2 + 72));
}

void sub_22F3E1C94(uint64_t a1, uint64_t a2)
{
  sub_22F08A7D4(a1, (uint64_t *)(a2 + 104));
}

void sub_22F3E1C9C(uint64_t a1, uint64_t a2)
{
  sub_22F08A704(a1, (uint64_t *)(a2 + 96));
}

void sub_22F3E1CA4(uint64_t a1, uint64_t a2)
{
  sub_22F08A634(a1, (uint64_t *)(a2 + 64));
}

void sub_22F3E1CAC(uint64_t a1, uint64_t a2)
{
  sub_22F08A634(a1, (uint64_t *)(a2 + 64));
}

void sub_22F3E1CB8(uint64_t a1, uint64_t a2)
{
  sub_22F08A494(a1, (uint64_t *)(a2 + 48));
}

void sub_22F3E1CCC(uint64_t a1, uint64_t a2)
{
  sub_22F08A3C4(a1, (uint64_t *)(a2 + 80));
}

void sub_22F3E1CD4(uint64_t a1, uint64_t a2)
{
  sub_22F08A494(a1, (uint64_t *)(a2 + 48));
}

void sub_22F3E1CDC(uint64_t a1, uint64_t a2)
{
  sub_22F08A564(a1, (uint64_t *)(a2 + 88));
}

void sub_22F3E1CE4(uint64_t a1, uint64_t a2)
{
  sub_22F08A564(a1, (uint64_t *)(a2 + 88));
}

void sub_22F3E1CEC(uint64_t a1, uint64_t a2)
{
  sub_22F08A564(a1, (uint64_t *)(a2 + 88));
}

void sub_22F3E1D18(uint64_t a1, uint64_t a2)
{
  sub_22F08A8A4(a1, (uint64_t *)(a2 + 72));
}

uint64_t sub_22F3E1D20(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  llvm::json::OStream *v4;
  __int16 v5;
  char v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (a4)
  {
    v4 = (llvm::json::OStream *)(result + 1048);
    v5 = 1;
    v6 = 1;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v5);
    llvm::json::OStream::attributeEnd(v4);
    return llvm::json::Value::destroy((llvm::json::Value *)&v5);
  }
  return result;
}

uint64_t sub_22F3E1DA4(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)())((char *)nullsub_1104 + 4 * byte_22F4A668C[*(_DWORD *)(a2 + 16)]))();
}

uint64_t sub_22F3E1DD8(uint64_t a1, uint64_t a2)
{
  return sub_22F3E2D88(a1, *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1DEC(uint64_t a1, uint64_t a2)
{
  return sub_22F3E28FC(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_22F3E1DF8(uint64_t a1, uint64_t a2)
{
  return sub_22F3E33E4(a1, *(unsigned int **)(*(_QWORD *)(a2 + 32) + 16));
}

uint64_t sub_22F3E1E0C(uint64_t a1, uint64_t a2)
{
  return sub_22F3E3350(a1, *(_DWORD *)(a2 + 20));
}

uint64_t sub_22F3E1E14@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  return sub_22F3E1D20(a1, (uint64_t)"spelledAsLValue", 15, (a2 >> 19) & 1);
}

uint64_t sub_22F3E1E2C(uint64_t a1, uint64_t a2)
{
  return sub_22F3E2824(a1, *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1E34(uint64_t a1, uint64_t a2)
{
  return sub_22F3E2CF0(a1, *(_DWORD *)(a2 + 40));
}

uint64_t sub_22F3E1E3C(uint64_t a1, uint64_t a2)
{
  return sub_22F3E2824(a1, *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1E48(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)())((char *)sub_22F3E1E68 + 4 * byte_22F4A66C5[*(_DWORD *)(a2 + 28) & 0x7FLL]))();
}

void sub_22F3E1E70(uint64_t a1@<X0>, int a2@<W8>)
{
  sub_22F093648(a1, a2);
}

uint64_t sub_22F3E1E98(uint64_t a1, uint64_t a2)
{
  return sub_22F3E38B8(a1, *(_QWORD *)(a2 + 64));
}

uint64_t sub_22F3E1EA4(uint64_t a1, uint64_t a2)
{
  return sub_22F3E4AE4(a1, *(_QWORD *)(a2 + 40));
}

uint64_t sub_22F3E1EB0(uint64_t a1, uint64_t a2)
{
  return sub_22F3E38B8(a1, *(_QWORD *)(a2 + 64));
}

uint64_t sub_22F3E1F04(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)())((char *)nullsub_1105 + 4 * byte_22F4A6719[*(unsigned __int8 *)(a2 + 12) - 1]))();
}

uint64_t sub_22F3E1F40(uint64_t a1, uint64_t a2)
{
  return sub_22F3E7D94(a1, *(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48));
}

uint64_t sub_22F3E1F4C(uint64_t a1, uint64_t a2)
{
  return sub_22F3E7E1C(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1F58(uint64_t a1, uint64_t a2)
{
  return sub_22F3E7D94(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1F64(uint64_t a1, uint64_t a2)
{
  return sub_22F3E7D94(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_22F3E1F70(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  if ((v2 - 5) >= 2)
    return ((uint64_t (*)())((char *)sub_22F3E1F9C + 4 * byte_22F4A6725[v2]))();
  return result;
}

uint64_t sub_22F3E1FA4(uint64_t a1, uint64_t a2)
{
  return sub_22F3E2824(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_22F3E1FAC(uint64_t a1, uint64_t a2)
{
  return sub_22F3E7A2C(a1, *(_QWORD *)(a2 + 8));
}

uint64_t sub_22F3E1FC4(uint64_t a1, _QWORD *a2)
{
  llvm::json::OStream *v4;
  uint64_t result;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E732740((llvm::json::Value *)&v9, (uint64_t)"Capture", 7);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F3E1D20(a1, (uint64_t)"byref", 5, (*a2 >> 1) & 1);
  result = sub_22F3E1D20(a1, (uint64_t)"nested", 6, (*a2 >> 2) & 1);
  if (*a2 >= 8uLL)
  {
    sub_22F08F470((uint64_t)&v6, a1, *a2 & 0xFFFFFFFFFFFFFFF8);
    v9 = 7;
    v10 = v6;
    v11 = v7;
    v6 = 0;
    v7 = 0;
    v12 = v8;
    v8 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v9);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v9);
    sub_22F095054((uint64_t *)&v6);
    return llvm::deallocate_buffer(v6, (void *)(56 * v8));
  }
  return result;
}

uint64_t sub_22F3E2134(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  _BYTE v9[32];
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  v5 = *(_QWORD *)(a2 + 8);
  if (v5)
    v6 = "case";
  else
    v6 = "default";
  if (v5)
    v7 = 4;
  else
    v7 = 7;
  sub_22E732740((llvm::json::Value *)v9, (uint64_t)v6, v7);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)v9);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)v9);
  return sub_22F3E1D20(a1, (uint64_t)"selected", 8, *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_22F3E220C(uint64_t result, const char **a2)
{
  llvm::json::OStream *v3;
  const char *v4;
  size_t v5;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  if (*a2)
  {
    v3 = (llvm::json::OStream *)(result + 1048);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::objectBegin(v3);
    v4 = *a2;
    if (v4)
      v5 = strlen(v4);
    else
      v5 = 0;
    sub_22E732740((llvm::json::Value *)v6, (uint64_t)v4, v5);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v3, (const llvm::json::Value *)v6);
    llvm::json::OStream::attributeEnd(v3);
    llvm::json::Value::destroy((llvm::json::Value *)v6);
    llvm::json::OStream::objectEnd(v3);
    return llvm::json::OStream::attributeEnd(v3);
  }
  return result;
}

const char *sub_22F3E22EC(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  const char *result;
  size_t v10;
  const char *v11;
  size_t v12;
  unint64_t v13;
  char *v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  const char *v18[3];
  char *__s;
  unsigned int v20;
  unsigned int v21;
  int v22;
  __int16 v23;
  unint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  sub_22F1E2F68(*(_QWORD *)(a1 + 1232), a2, 1, (uint64_t)&__s);
  v6 = *(_QWORD *)(a1 + 1232);
  if (a3)
    v7 = sub_22F423C68(v6, a2, 0);
  else
    v7 = sub_22F423CC4(v6, a2, 0);
  v8 = v7;
  result = sub_22F1E3690(*(_QWORD **)(a1 + 1232), a2, 0);
  if (!__s)
    return result;
  v11 = result;
  v12 = v10;
  v13 = sub_22E677168(*(_QWORD *)(a1 + 1232), a2);
  v23 = 3;
  v24 = HIDWORD(v13);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v23);
  if (*(_QWORD *)(a1 + 1288) != v12 || v12 && memcmp(*(const void **)(a1 + 1280), v11, v12))
  {
    sub_22E732740((llvm::json::Value *)&v23, (uint64_t)v11, v12);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v23);
    v23 = 3;
    goto LABEL_11;
  }
  if (*(_DWORD *)(a1 + 1312) != v8)
  {
    v23 = 3;
LABEL_11:
    v24 = v8;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v23);
  }
  v14 = __s;
  if (__s)
    v15 = strlen(__s);
  else
    v15 = 0;
  if ((v15 != v12 || v12 && memcmp(__s, v11, v12))
    && (*(_QWORD *)(a1 + 1304) != v15 || v15 && memcmp(*(const void **)(a1 + 1296), v14, v15)))
  {
    sub_22E732740((llvm::json::Value *)&v23, (uint64_t)v14, v15);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v23);
  }
  v16 = v20;
  if (v8 != v20 && *(_DWORD *)(a1 + 1316) != v20)
  {
    v23 = 3;
    v24 = v20;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v23);
  }
  v23 = 3;
  v24 = v21;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v23);
  v17 = sub_22F410BE8(a2, *(_QWORD **)(a1 + 1232), *(_DWORD **)(*(_QWORD *)(a1 + 1240) + 2000));
  v23 = 3;
  v24 = v17;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v23);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v23);
  *(_QWORD *)(a1 + 1280) = v11;
  *(_QWORD *)(a1 + 1288) = v12;
  *(_QWORD *)(a1 + 1296) = v14;
  *(_QWORD *)(a1 + 1304) = v15;
  *(_DWORD *)(a1 + 1316) = v16;
  *(_DWORD *)(a1 + 1312) = v8;
  sub_22F1E2F68(*(_QWORD *)(a1 + 1232), v22, 1, (uint64_t)v18);
  return (const char *)sub_22F3E220C(a1, v18);
}

const char *sub_22F3E2680(uint64_t a1, int a2)
{
  int v4;
  int v6;
  int v7;
  _DWORD v8[2];
  uint64_t v9;

  if ((a2 & 0x80000000) == 0)
  {
    v4 = a2;
    return sub_22F3E22EC(a1, v4, 1);
  }
  v4 = sub_22F1E238C(*(_QWORD **)(a1 + 1232), a2);
  v6 = sub_22F1E22F0(*(_QWORD **)(a1 + 1232), a2);
  if (v6 == v4)
    return sub_22F3E22EC(a1, v4, 1);
  v7 = v6;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(a1 + 1048));
  sub_22F3E22EC(a1, v4, 1);
  llvm::json::OStream::objectEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  v8[0] = v7;
  v8[1] = a2;
  v9 = a1;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::objectBegin((llvm::json::OStream *)(a1 + 1048));
  sub_22F0959D8((uint64_t)v8);
  llvm::json::OStream::objectEnd((llvm::json::OStream *)(a1 + 1048));
  return (const char *)llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
}

uint64_t sub_22F3E278C(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;

  v4 = (llvm::json::OStream *)(a1 + 1048);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::objectBegin(v4);
  sub_22F3E2680(a1, a2);
  llvm::json::OStream::objectEnd(v4);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::objectBegin(v4);
  sub_22F3E2680(a1, SHIDWORD(a2));
  llvm::json::OStream::objectEnd(v4);
  return llvm::json::OStream::attributeEnd(v4);
}

uint64_t sub_22F3E2824(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08F470((uint64_t)&v4, a1, a2);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E28FC(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  uint64_t v5;
  llvm::json::OStream *v6;
  char *v7;
  uint64_t v8;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = a2 >> 19;
  sub_22F3E1D20(a1, (uint64_t)"noreturn", 8, HIBYTE(a2) & 1);
  sub_22F3E1D20(a1, (uint64_t)"producesResult", 14, (a2 >> 25) & 1);
  if ((v4 & 0x700) != 0)
  {
    v10 = 3;
    if (((v4 >> 8) & 7) != 0)
      v5 = ((v4 >> 8) & 7) - 1;
    else
      v5 = 0;
    v11 = v5;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v10);
  }
  v6 = (llvm::json::OStream *)(a1 + 1048);
  v7 = sub_22F40A550((a2 >> 19) & 0x1F);
  sub_22E732740((llvm::json::Value *)&v10, (uint64_t)v7, v8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v6, (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd(v6);
  return llvm::json::Value::destroy((llvm::json::Value *)&v10);
}

void sub_22F3E2A38(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)(a2 + 48);
  if (v4 > 0x40)
    v5 = **(_QWORD **)(a2 + 40);
  else
    v5 = (uint64_t)(*(_QWORD *)(a2 + 40) << -(char)v4) >> -(char)v4;
  v6 = 3;
  v7 = v5;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v6);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v6);
  sub_22F092D04(a1, a2);
}

uint64_t sub_22F3E2B08(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;

  v4 = (llvm::json::OStream *)(a1 + 1048);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::objectBegin(v4);
  sub_22F3E2680(a1, *(_DWORD *)(a2 + 60));
  llvm::json::OStream::objectEnd(v4);
  return llvm::json::OStream::attributeEnd(v4);
}

uint64_t sub_22F3E2B68(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  uint64_t v4;
  uint64_t result;
  const char *v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = *(unsigned int *)(a2 + 20);
  v8 = 3;
  v9 = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd(v3);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v8);
  switch((*(_DWORD *)(a2 + 16) >> 19) & 0xF)
  {
    case 1:
      v6 = "packed vector";
      goto LABEL_5;
    case 2:
      v6 = "altivec";
      v7 = 7;
      goto LABEL_6;
    case 3:
      v6 = "altivec pixel";
LABEL_5:
      v7 = 13;
      goto LABEL_6;
    case 4:
      v6 = "altivec BOOL";
      v7 = 12;
      goto LABEL_6;
    case 5:
      v6 = "neon";
      v7 = 4;
      goto LABEL_6;
    case 6:
      v6 = "neon poly";
      v7 = 9;
      goto LABEL_6;
    case 7:
      v6 = "fixed-length sve data vector";
      v7 = 28;
      goto LABEL_6;
    case 8:
      v6 = "fixed-length sve predicate vector";
      v7 = 33;
LABEL_6:
      sub_22E732740((llvm::json::Value *)&v8, (uint64_t)v6, v7);
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value(v3, (const llvm::json::Value *)&v8);
      llvm::json::OStream::attributeEnd(v3);
      result = llvm::json::Value::destroy((llvm::json::Value *)&v8);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22F3E2CF0(uint64_t result, int a2)
{
  llvm::json::OStream *v2;
  _BYTE v3[32];
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (!a2)
  {
    v2 = (llvm::json::OStream *)(result + 1048);
    sub_22E732740((llvm::json::Value *)v3, (uint64_t)"underlying_type", 15);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v2, (const llvm::json::Value *)v3);
    llvm::json::OStream::attributeEnd(v2);
    return llvm::json::Value::destroy((llvm::json::Value *)v3);
  }
  return result;
}

uint64_t sub_22F3E2D88(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = sub_22F114198(a2);
  sub_22F08F470((uint64_t)&v6, a1, v4);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  return llvm::deallocate_buffer(v6, (void *)(56 * v8));
}

uint64_t sub_22F3E2E6C(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  llvm *v5;
  llvm *v6;
  unint64_t v7;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  __int16 v12;
  llvm *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  v5 = (llvm *)(*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 32) & 0x7FFF);
  v12 = 3;
  v13 = v5;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v12);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v12);
  v6 = (llvm *)*(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                           + 8) & 0xFFFFFFFFFFFFFFF0)
                                   + 34);
  v12 = 3;
  v13 = v6;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v12);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v12);
  sub_22F3E1D20(a1, (uint64_t)"isPack", 6, (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)+ 32) >> 15) & 1);
  if (*(_QWORD *)(a2 + 8) == (a2 & 0xFFFFFFFFFFFFFFF0))
    v7 = 0;
  else
    v7 = *(_QWORD *)(a2 + 32);
  sub_22F08F470((uint64_t)&v9, a1, v7);
  v12 = 7;
  v13 = v9;
  v14 = v10;
  v9 = 0;
  v10 = 0;
  v15 = v11;
  v11 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v12);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v12);
  sub_22F095054((uint64_t *)&v9);
  return llvm::deallocate_buffer(v9, (void *)(56 * v11));
}

uint64_t sub_22F3E3050(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  BOOL v4;
  uint64_t result;
  int v6;
  const char *v7;
  uint64_t v8;
  __int16 v9;
  BOOL v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = *(_QWORD *)(a2 + 24) <= 0xFuLL && (*(_BYTE *)(a2 + 17) & 4) == 0;
  v9 = 1;
  v10 = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v9);
  v6 = (*(_DWORD *)(a2 + 16) >> 19) & 3;
  if (v6 == 2)
  {
    v7 = "__auto_type";
    v8 = 11;
  }
  else if (v6 == 1)
  {
    v7 = "decltype(auto)";
    v8 = 14;
  }
  else
  {
    if (v6)
      return result;
    v7 = "auto";
    v8 = 4;
  }
  sub_22E732740((llvm::json::Value *)&v9, (uint64_t)v7, v8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  return llvm::json::Value::destroy((llvm::json::Value *)&v9);
}

uint64_t sub_22F3E3188(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = sub_22F1104D0(a2);
  sub_22F08F470((uint64_t)&v6, a1, v4);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  return llvm::deallocate_buffer(v6, (void *)(56 * v8));
}

uint64_t sub_22F3E326C(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = sub_22F409D88(a2);
  sub_22F08F470((uint64_t)&v6, a1, v4);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  return llvm::deallocate_buffer(v6, (void *)(56 * v8));
}

uint64_t sub_22F3E3350(uint64_t result, int a2)
{
  llvm::json::OStream *v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    v2 = (llvm::json::OStream *)(result + 1048);
    v3 = 3;
    v4 = (a2 - 1);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v2, (const llvm::json::Value *)&v3);
    llvm::json::OStream::attributeEnd(v2);
    return llvm::json::Value::destroy((llvm::json::Value *)&v3);
  }
  return result;
}

uint64_t sub_22F3E33E4(uint64_t a1, unsigned int *a2)
{
  llvm::json::OStream *v2;
  _BYTE v4[32];
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E732740((llvm::json::Value *)v4, (uint64_t)(a2 + 4), *a2);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)v4);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)v4);
}

uint64_t sub_22F3E3470(uint64_t a1, uint64_t a2)
{
  _BOOL4 v4;
  _BOOL4 v5;

  v4 = sub_22F2559E0(a2);
  sub_22F3E1D20(a1, (uint64_t)"isData", 6, v4);
  v5 = sub_22F28C8B4(a2);
  return sub_22F3E1D20(a1, (uint64_t)"isFunction", 10, v5);
}

uint64_t sub_22F3E34CC(uint64_t a1, unint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v5, a1, *(_QWORD *)((*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(a2 + 80)) & 8)), 1);
  v8 = 7;
  v9 = v5;
  v10 = v6;
  v5 = 0;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E35CC(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F3E1D20(a1, (uint64_t)"isInline", 8, (*(_QWORD *)(a2 + 104) >> 2) & 1);
  result = sub_22F3B25B0(a2);
  if ((result & 1) == 0)
  {
    v5 = sub_22EFD8C88(a2);
    sub_22F08F470((uint64_t)&v6, a1, v5);
    v9 = 7;
    v10 = v6;
    v11 = v7;
    v6 = 0;
    v7 = 0;
    v12 = v8;
    v8 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v9);
    sub_22F095054((uint64_t *)&v6);
    return llvm::deallocate_buffer(v6, (void *)(56 * v8));
  }
  return result;
}

uint64_t sub_22F3E36E8(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = sub_22EFD8BB4(a2);
  sub_22F08F470((uint64_t)&v6, a1, v4);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  return llvm::deallocate_buffer(v6, (void *)(56 * v8));
}

uint64_t sub_22F3E37CC(uint64_t a1, unint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08F470((uint64_t)&v5, a1, *(_QWORD *)(a2 + 88));
  v8 = 7;
  v9 = v5;
  v10 = v6;
  v5 = 0;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E38B8(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08F470((uint64_t)&v4, a1, a2);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E3990(uint64_t a1, unint64_t a2)
{
  char *v4;
  uint64_t v5;
  size_t v6;
  int v7;
  const char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  const char *v14;
  uint64_t v15;
  _BOOL4 v16;
  llvm *v18;
  uint64_t v19;
  unsigned int v20;
  __int16 v21;
  llvm *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v18, a1, *(_QWORD *)(a2 + 48), 1);
  v21 = 7;
  v22 = v18;
  v23 = v19;
  v18 = 0;
  v19 = 0;
  v24 = v20;
  v20 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v21);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v21);
  sub_22F095054((uint64_t *)&v18);
  llvm::deallocate_buffer(v18, (void *)(56 * v20));
  if ((*(_BYTE *)(a2 + 96) & 7) != 0)
  {
    v4 = sub_22F3AC0F4(*(_BYTE *)(a2 + 96) & 7);
    v5 = (uint64_t)v4;
    if (v4)
      v6 = strlen(v4);
    else
      v6 = 0;
    sub_22E732740((llvm::json::Value *)&v21, v5, v6);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v21);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v21);
  }
  sub_22EFBB794(a2);
  if (v7 == 1)
  {
    v8 = "static";
    v9 = 6;
  }
  else
  {
    if (v7 != 2)
      goto LABEL_11;
    v8 = "dynamic";
    v9 = 7;
  }
  sub_22E732740((llvm::json::Value *)&v21, (uint64_t)v8, v9);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v21);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v21);
LABEL_11:
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
    v10 = 0;
  else
    v10 = (*(unsigned __int8 *)(a2 + 97) >> 2) & 1;
  sub_22F3E1D20(a1, (uint64_t)"nrvo", 4, v10);
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
    v11 = 0;
  else
    v11 = (*(unsigned __int8 *)(a2 + 97) >> 5) & 1;
  sub_22F3E1D20(a1, (uint64_t)"inline", 6, v11);
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
    v12 = 0;
  else
    v12 = *(unsigned __int8 *)(a2 + 97) >> 7;
  sub_22F3E1D20(a1, (uint64_t)"constexpr", 9, v12);
  sub_22F3E1D20(a1, (uint64_t)"modulePrivate", 13, (~*(_DWORD *)(a2 + 8) & 6) == 0);
  if (!sub_22EFBC270(a2))
    goto LABEL_29;
  v13 = (*(unsigned __int8 *)(a2 + 96) >> 5) & 3;
  switch(v13)
  {
    case 2:
      v14 = "list";
LABEL_27:
      v15 = 4;
      goto LABEL_28;
    case 1:
      v14 = "call";
      goto LABEL_27;
    case 0:
      v14 = "c";
      v15 = 1;
LABEL_28:
      sub_22E732740((llvm::json::Value *)&v21, (uint64_t)v14, v15);
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v21);
      llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
      llvm::json::Value::destroy((llvm::json::Value *)&v21);
      break;
  }
LABEL_29:
  v16 = sub_22EFBD290(a2);
  return sub_22F3E1D20(a1, (uint64_t)"isParameterPack", 15, v16);
}

uint64_t sub_22F3E3CC4(uint64_t a1, unint64_t a2)
{
  int v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v6, a1, *(_QWORD *)(a2 + 48), 1);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  llvm::deallocate_buffer(v6, (void *)(56 * v8));
  sub_22F3E1D20(a1, (uint64_t)"mutable", 7, (*(_DWORD *)(a2 + 68) >> 1) & 1);
  sub_22F3E1D20(a1, (uint64_t)"modulePrivate", 13, (~*(_DWORD *)(a2 + 8) & 6) == 0);
  sub_22F3E1D20(a1, (uint64_t)"isBitfield", 10, *(_DWORD *)(a2 + 68) & 1);
  v4 = (*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3;
  return sub_22F3E1D20(a1, (uint64_t)"hasInClassInitializer", 21, v4);
}

uint64_t sub_22F3E3E3C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  size_t v7;
  int v8;
  uint64_t result;
  const char *v10;
  llvm *v11;
  uint64_t v12;
  unsigned int v13;
  __int16 v14;
  llvm *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v11, a1, *(_QWORD *)(a2 + 48), 1);
  v14 = 7;
  v15 = v11;
  v16 = v12;
  v11 = 0;
  v12 = 0;
  v17 = v13;
  v13 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v14);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v14);
  sub_22F095054((uint64_t *)&v11);
  llvm::deallocate_buffer(v11, (void *)(56 * v13));
  v4 = *(_QWORD *)(a2 + 80);
  if ((unsigned __int16)v4 >> 13)
  {
    v5 = sub_22F3AC0F4((unsigned __int16)v4 >> 13);
    v6 = (uint64_t)v5;
    if (v5)
      v7 = strlen(v5);
    else
      v7 = 0;
    sub_22E732740((llvm::json::Value *)&v14, v6, v7);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v14);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v14);
    v4 = *(_QWORD *)(a2 + 80);
  }
  sub_22F3E1D20(a1, (uint64_t)"inline", 6, (v4 >> 17) & 1);
  sub_22F3E1D20(a1, (uint64_t)"virtual", 7, (*(_QWORD *)(a2 + 80) >> 18) & 1);
  sub_22F3E1D20(a1, (uint64_t)"pure", 4, (*(_QWORD *)(a2 + 80) >> 19) & 1);
  sub_22F3E1D20(a1, (uint64_t)"explicitlyDeleted", 17, (*(_QWORD *)(a2 + 80) & 0x2400000) == 0x400000);
  sub_22F3E1D20(a1, (uint64_t)"constexpr", 9, (*(_QWORD *)(a2 + 80) & 0xC0000000) != 0);
  v8 = sub_22EFBF68C(a2);
  result = sub_22F3E1D20(a1, (uint64_t)"variadic", 8, v8);
  if ((*(_BYTE *)(a2 + 83) & 2) != 0)
  {
    if ((*(_QWORD *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0x400000) != 0)
      v10 = "deleted";
    else
      v10 = "default";
    sub_22E732740((llvm::json::Value *)&v14, (uint64_t)v10, 7);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v14);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    return llvm::json::Value::destroy((llvm::json::Value *)&v14);
  }
  return result;
}

void sub_22F3E40C0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  llvm::json::OStream *v6;
  uint64_t v7;
  const char *v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  __int16 v12;
  llvm *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  v4 = *(_QWORD *)(a2 + 72);
  if ((v4 & 0x20000000000) != 0)
  {
    v5 = sub_22E496830(a2);
    sub_22F08CDA0((uint64_t)&v9, a1, v5, 1);
    v12 = 7;
    v13 = v9;
    v14 = v10;
    v9 = 0;
    v10 = 0;
    v15 = v11;
    v11 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v12);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v12);
    sub_22F095054((uint64_t *)&v9);
    llvm::deallocate_buffer(v9, (void *)(56 * v11));
    v4 = *(_QWORD *)(a2 + 72);
  }
  if ((v4 & 0x8000000000) != 0)
  {
    v6 = (llvm::json::OStream *)(a1 + 1048);
    if ((v4 & 0x10000000000) != 0)
      v7 = 5;
    else
      v7 = 6;
    if ((v4 & 0x10000000000) != 0)
      v8 = "class";
    else
      v8 = "struct";
    sub_22E732740((llvm::json::Value *)&v12, (uint64_t)v8, v7);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v6, (const llvm::json::Value *)&v12);
    llvm::json::OStream::attributeEnd(v6);
    llvm::json::Value::destroy((llvm::json::Value *)&v12);
  }
}

uint64_t sub_22F3E4224(uint64_t a1, unint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v5, a1, *(_QWORD *)(a2 + 48), 1);
  v8 = 7;
  v9 = v5;
  v10 = v6;
  v5 = 0;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E4314(uint64_t a1, unint64_t a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  _BYTE v8[32];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  v4 = nullsub_910((unsigned __int16)*(_DWORD *)(a2 + 72) >> 13);
  v5 = sub_22F112570(v4);
  sub_22E732740((llvm::json::Value *)v8, (uint64_t)v5, v6);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)v8);
  return sub_22F3E1D20(a1, (uint64_t)"completeDefinition", 18, HIWORD(*(_DWORD *)(a2 + 72)) & 1);
}

uint64_t sub_22F3E43EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  result = sub_22F3E4314(a1, a2);
  if ((*(_BYTE *)(a2 + 74) & 1) != 0)
  {
    sub_22F08FF58((uint64_t)&v5, a2);
    LOWORD(v8) = 7;
    v9 = v5;
    v10 = v6;
    v5 = 0;
    v6 = 0;
    v11 = v7;
    v7 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v8);
    sub_22F095054((uint64_t *)&v5);
    llvm::deallocate_buffer(v5, (void *)(56 * v7));
    result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if (*(_DWORD *)(*(_QWORD *)(a2 + 128) + 16))
    {
      v8 = a1;
      v9 = (llvm *)a2;
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::arrayBegin((llvm::json::OStream *)(a1 + 1048));
      sub_22F095A90(&v8);
      llvm::json::OStream::arrayEnd((llvm::json::OStream *)(a1 + 1048));
      return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    }
  }
  return result;
}

uint64_t sub_22F3E452C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  const char *v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  if ((*(_BYTE *)(a2 + 60) & 3) == 1)
    v4 = 8;
  else
    v4 = 5;
  if ((*(_BYTE *)(a2 + 60) & 3) == 1)
    v5 = "typename";
  else
    v5 = "class";
  sub_22E732740((llvm::json::Value *)&v10, (uint64_t)v5, v4);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  v6 = sub_22EFE9130(a2);
  LOWORD(v10) = 3;
  v11 = v6;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  v7 = sub_22EFEB210(a2);
  LOWORD(v10) = 3;
  v11 = v7;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  v8 = sub_22EFEB240(a2);
  result = sub_22F3E1D20(a1, (uint64_t)"isParameterPack", 15, v8);
  if (*(_QWORD *)(a2 + 72) >= 8uLL)
  {
    v10 = a1;
    v11 = a2;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::objectBegin((llvm::json::OStream *)(a1 + 1048));
    sub_22F095F9C(&v10);
    llvm::json::OStream::objectEnd((llvm::json::OStream *)(a1 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  }
  return result;
}

uint64_t sub_22F3E46E4(uint64_t a1, unint64_t a2)
{
  llvm *v4;
  unint64_t v5;
  uint64_t result;
  llvm *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  llvm *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v7, a1, *(_QWORD *)(a2 + 48), 1);
  LOWORD(v10) = 7;
  v11 = v7;
  v12 = v8;
  v7 = 0;
  v8 = 0;
  v13 = v9;
  v9 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  sub_22F095054((uint64_t *)&v7);
  llvm::deallocate_buffer(v7, (void *)(56 * v9));
  v4 = (llvm *)(*(_DWORD *)(a2 + 68) & 0xFFFFF);
  LOWORD(v10) = 3;
  v11 = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  v5 = (unint64_t)*(unsigned int *)(a2 + 68) >> 20;
  LOWORD(v10) = 3;
  v11 = (llvm *)v5;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  result = sub_22F3E1D20(a1, (uint64_t)"isParameterPack", 15, *(unsigned __int8 *)(a2 + 80));
  if (*(_QWORD *)(a2 + 72) >= 4uLL)
  {
    v10 = a1;
    v11 = (llvm *)a2;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::objectBegin((llvm::json::OStream *)(a1 + 1048));
    sub_22F09605C(&v10);
    llvm::json::OStream::objectEnd((llvm::json::OStream *)(a1 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  }
  return result;
}

uint64_t sub_22F3E48B4(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  v4 = *(_DWORD *)(a2 + 64) & 0xFFFFF;
  LOWORD(v7) = 3;
  v8 = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  v5 = (unint64_t)*(unsigned int *)(a2 + 64) >> 20;
  LOWORD(v7) = 3;
  v8 = v5;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  result = sub_22F3E1D20(a1, (uint64_t)"isParameterPack", 15, *(unsigned __int8 *)(a2 + 80));
  if (*(_QWORD *)(a2 + 72) >= 8uLL)
  {
    v7 = a2;
    v8 = a1;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::objectBegin((llvm::json::OStream *)(a1 + 1048));
    sub_22F096118((uint64_t *)&v7);
    llvm::json::OStream::objectEnd((llvm::json::OStream *)(a1 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  }
  return result;
}

uint64_t sub_22F3E49F8(uint64_t a1, uint64_t a2)
{
  int v4;
  const char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  llvm::json::OStream *v9;
  _BYTE v11[32];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = (unsigned __int16)*(_DWORD *)(a2 + 48) >> 13;
  v5 = "C";
  v6 = 1;
  if (v4 != 1)
  {
    v5 = 0;
    v6 = 0;
  }
  if (v4 == 2)
    v7 = "C++";
  else
    v7 = v5;
  if (v4 == 2)
    v8 = 3;
  else
    v8 = v6;
  v9 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E732740((llvm::json::Value *)v11, (uint64_t)v7, v8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v9, (const llvm::json::Value *)v11);
  llvm::json::OStream::attributeEnd(v9);
  llvm::json::Value::destroy((llvm::json::Value *)v11);
  return sub_22F3E1D20(a1, (uint64_t)"hasBraces", 9, HIWORD(*(_DWORD *)(a2 + 48)) & 1);
}

uint64_t sub_22F3E4AE4(uint64_t result, uint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v3;
  uint64_t v4;
  unsigned int v5;
  __int16 v6;
  llvm *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 4) != 0 && (a2 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    v2 = (llvm::json::OStream *)(result + 1048);
    sub_22F08CDA0((uint64_t)&v3, result, *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF8), 1);
    v6 = 7;
    v7 = v3;
    v8 = v4;
    v3 = 0;
    v4 = 0;
    v9 = v5;
    v5 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v2, (const llvm::json::Value *)&v6);
    llvm::json::OStream::attributeEnd(v2);
    llvm::json::Value::destroy((llvm::json::Value *)&v6);
    sub_22F095054((uint64_t *)&v3);
    return llvm::deallocate_buffer(v3, (void *)(56 * v5));
  }
  return result;
}

uint64_t sub_22F3E4BD0(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  const char *v5;
  uint64_t v6;
  llvm *v7;
  uint64_t v8;
  unsigned int v9;
  __int16 v10;
  llvm *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v7, a1, *(_QWORD *)(a2 + 48), 1);
  v10 = 7;
  v11 = v7;
  v12 = v8;
  v7 = 0;
  v8 = 0;
  v13 = v9;
  v9 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  sub_22F095054((uint64_t *)&v7);
  llvm::deallocate_buffer(v7, (void *)(56 * v9));
  result = sub_22F3E1D20(a1, (uint64_t)"synthesized", 11, (*(unsigned __int8 *)(a2 + 88) >> 3) & 1);
  switch(*(_BYTE *)(a2 + 88) & 7)
  {
    case 0:
      v5 = "none";
      v6 = 4;
      goto LABEL_8;
    case 1:
      v5 = "private";
      goto LABEL_7;
    case 2:
      v5 = "protected";
      v6 = 9;
      goto LABEL_8;
    case 3:
      v5 = "public";
      v6 = 6;
      goto LABEL_8;
    case 4:
      v5 = "package";
LABEL_7:
      v6 = 7;
LABEL_8:
      sub_22E732740((llvm::json::Value *)&v10, (uint64_t)v5, v6);
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v10);
      llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
      result = llvm::json::Value::destroy((llvm::json::Value *)&v10);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22F3E4D90(uint64_t a1, unint64_t a2)
{
  int v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v6, a1, *(_QWORD *)(a2 + 80), 1);
  v9 = 7;
  v10 = v6;
  v11 = v7;
  v6 = 0;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  llvm::deallocate_buffer(v6, (void *)(56 * v8));
  v4 = (*(_DWORD *)(a2 + 56) >> 17) & 1;
  v9 = 1;
  LOBYTE(v10) = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  return sub_22F3E1D20(a1, (uint64_t)"variadic", 8, (*(_QWORD *)(a2 + 56) >> 18) & 1);
}

uint64_t sub_22F3E4EE0(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  int v5;
  const char *v6;
  uint64_t v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  __int16 v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v8, a1, *(_QWORD *)((*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(a2 + 80)) & 8)), 1);
  v11 = 7;
  v12 = v8;
  v13 = v9;
  v8 = 0;
  v9 = 0;
  v14 = v10;
  v10 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F095054((uint64_t *)&v8);
  llvm::deallocate_buffer(v8, (void *)(56 * v10));
  result = sub_22F3E1D20(a1, (uint64_t)"bounded", 7, *(_DWORD *)(a2 + 96) != 0);
  v5 = *(unsigned __int16 *)(a2 + 88) >> 14;
  if (v5 == 2)
  {
    v6 = "contravariant";
    v7 = 13;
  }
  else
  {
    if (v5 != 1)
      return result;
    v6 = "covariant";
    v7 = 9;
  }
  sub_22E732740((llvm::json::Value *)&v11, (uint64_t)v6, v7);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  return llvm::json::Value::destroy((llvm::json::Value *)&v11);
}

uint64_t sub_22F3E5070(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08F470((uint64_t)&v6, a1, *(_QWORD *)(a2 + 88));
  v9 = 7;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  llvm::deallocate_buffer(v6, (void *)(56 * v8));
  v4 = sub_22F3B55B8(a2);
  sub_22F08F470((uint64_t)&v6, a1, v4);
  v9 = 7;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  v12 = v8;
  v8 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v9);
  sub_22F095054((uint64_t *)&v6);
  return llvm::deallocate_buffer(v6, (void *)(56 * v8));
}

uint64_t sub_22F3E51F8(uint64_t a1, unint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08F470((uint64_t)&v5, a1, *(_QWORD *)(a2 + 96));
  v8 = 7;
  v9 = v5;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  llvm::deallocate_buffer(v5, (void *)(56 * v7));
  sub_22F08F470((uint64_t)&v5, a1, *(_QWORD *)(a2 + 88));
  v8 = 7;
  v9 = v5;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E5378(uint64_t a1, unint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08F470((uint64_t)&v5, a1, *(_QWORD *)(a2 + 48));
  v8 = 7;
  v9 = v5;
  v10 = v6;
  v5 = 0;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E5464(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  int v5;
  const char *v6;
  unsigned int v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  __int16 v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, a2);
  sub_22F08CDA0((uint64_t)&v8, a1, *(_QWORD *)(a2 + 56), 1);
  v11 = 7;
  v12 = v8;
  v13 = v9;
  v8 = 0;
  v9 = 0;
  v14 = v10;
  v10 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F095054((uint64_t *)&v8);
  result = llvm::deallocate_buffer(v8, (void *)(56 * v10));
  v5 = (*(_DWORD *)(a2 + 76) >> 17) & 3;
  if (v5 == 2)
  {
    v6 = "optional";
  }
  else
  {
    if (v5 != 1)
      goto LABEL_6;
    v6 = "required";
  }
  sub_22E732740((llvm::json::Value *)&v11, (uint64_t)v6, 8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  result = llvm::json::Value::destroy((llvm::json::Value *)&v11);
LABEL_6:
  v7 = *(_DWORD *)(a2 + 72);
  if ((v7 & 0x1FFFF) != 0)
  {
    if ((v7 & 2) != 0)
    {
      sub_22F08F470((uint64_t)&v8, a1, *(_QWORD *)(a2 + 104));
      v11 = 7;
      v12 = v8;
      v13 = v9;
      v8 = 0;
      v9 = 0;
      v14 = v10;
      v10 = 0;
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
      llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
      llvm::json::Value::destroy((llvm::json::Value *)&v11);
      sub_22F095054((uint64_t *)&v8);
      llvm::deallocate_buffer(v8, (void *)(56 * v10));
    }
    if ((v7 & 0x80) != 0)
    {
      sub_22F08F470((uint64_t)&v8, a1, *(_QWORD *)(a2 + 112));
      v11 = 7;
      v12 = v8;
      v13 = v9;
      v8 = 0;
      v9 = 0;
      v14 = v10;
      v10 = 0;
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
      llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
      llvm::json::Value::destroy((llvm::json::Value *)&v11);
      sub_22F095054((uint64_t *)&v8);
      llvm::deallocate_buffer(v8, (void *)(56 * v10));
    }
    sub_22F3E1D20(a1, (uint64_t)"readonly", 8, v7 & 1);
    sub_22F3E1D20(a1, (uint64_t)"assign", 6, (v7 >> 2) & 1);
    sub_22F3E1D20(a1, (uint64_t)"readwrite", 9, (v7 >> 3) & 1);
    sub_22F3E1D20(a1, (uint64_t)"retain", 6, (v7 >> 4) & 1);
    sub_22F3E1D20(a1, (uint64_t)"copy", 4, (v7 >> 5) & 1);
    sub_22F3E1D20(a1, (uint64_t)"nonatomic", 9, (v7 >> 6) & 1);
    sub_22F3E1D20(a1, (uint64_t)"atomic", 6, (v7 >> 8) & 1);
    sub_22F3E1D20(a1, (uint64_t)"weak", 4, (v7 >> 9) & 1);
    sub_22F3E1D20(a1, (uint64_t)"strong", 6, (v7 >> 10) & 1);
    sub_22F3E1D20(a1, (uint64_t)"unsafe_unretained", 17, (v7 >> 11) & 1);
    sub_22F3E1D20(a1, (uint64_t)"class", 5, (v7 >> 14) & 1);
    sub_22F3E1D20(a1, (uint64_t)"direct", 6, (v7 >> 15) & 1);
    sub_22F3E1D20(a1, (uint64_t)"suppress_direct", 15, HIWORD(v7) & 1);
    sub_22F3E1D20(a1, (uint64_t)"nullability", 11, (v7 >> 12) & 1);
    return sub_22F3E1D20(a1, (uint64_t)"null_resettable", 15, (v7 >> 13) & 1);
  }
  return result;
}

uint64_t sub_22F3E584C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  __int16 v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  sub_22F0931F0(a1, *(_QWORD *)(a2 + 48));
  v4 = *(_QWORD *)(a2 + 56);
  if (v4)
    v5 = "synthesize";
  else
    v5 = "dynamic";
  if (v4)
    v6 = 10;
  else
    v6 = 7;
  sub_22E732740((llvm::json::Value *)&v11, (uint64_t)v5, v6);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F08F470((uint64_t)&v8, a1, *(_QWORD *)(a2 + 48));
  v11 = 7;
  v12 = v8;
  v8 = 0;
  v13 = v9;
  v9 = 0;
  v14 = v10;
  v10 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F095054((uint64_t *)&v8);
  llvm::deallocate_buffer(v8, (void *)(56 * v10));
  sub_22F08F470((uint64_t)&v8, a1, *(_QWORD *)(a2 + 56));
  v11 = 7;
  v12 = v8;
  v8 = 0;
  v13 = v9;
  v9 = 0;
  v14 = v10;
  v10 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F095054((uint64_t *)&v8);
  return llvm::deallocate_buffer(v8, (void *)(56 * v10));
}

uint64_t sub_22F3E5A2C(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08CDA0((uint64_t)&v4, a1, a2, 1);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E5B08(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08F470((uint64_t)&v4, a1, a2);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E5BE0(uint64_t a1, _QWORD *a2)
{
  llvm::json::OStream *v4;
  unint64_t v6;
  unint64_t v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  __int16 v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  if ((a2[2] & 4) == 0)
  {
    sub_22E732740((llvm::json::Value *)&v11, (uint64_t)"explicit", 8);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v11);
    sub_22F08F470((uint64_t)&v8, a1, a2[2] & 0xFFFFFFFFFFFFFFF8);
    v11 = 7;
    v12 = v8;
    v13 = v9;
    v8 = 0;
    v9 = 0;
    v14 = v10;
    v10 = 0;
LABEL_3:
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v11);
    sub_22F095054((uint64_t *)&v8);
    llvm::deallocate_buffer(v8, (void *)(56 * v10));
    goto LABEL_4;
  }
  sub_22E732740((llvm::json::Value *)&v11, (uint64_t)"implicit", 8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  v6 = a2[2] & 0xFFFFFFFFFFFFFFF8;
  if (v6)
  {
    sub_22F08F470((uint64_t)&v8, a1, v6);
    v11 = 7;
    v12 = v8;
    v13 = v9;
    v8 = 0;
    v9 = 0;
    v14 = v10;
    v10 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v11);
    sub_22F095054((uint64_t *)&v8);
    llvm::deallocate_buffer(v8, (void *)(56 * v10));
  }
  v7 = a2[3] & 0xFFFFFFFFFFFFFFF8;
  if (v7)
  {
    sub_22F08F470((uint64_t)&v8, a1, v7);
    v11 = 7;
    v12 = v8;
    v13 = v9;
    v8 = 0;
    v9 = 0;
    v14 = v10;
    v10 = 0;
    goto LABEL_3;
  }
LABEL_4:
  sub_22F3E1D20(a1, (uint64_t)"isSuperReceiver", 15, (a2[5] & 6) == 2);
  sub_22F3E1D20(a1, (uint64_t)"isMessagingGetter", 17, (a2[3] >> 1) & 1);
  return sub_22F3E1D20(a1, (uint64_t)"isMessagingSetter", 17, (a2[3] >> 2) & 1);
}

uint64_t sub_22F3E5E9C(uint64_t a1, _QWORD *a2)
{
  llvm::json::OStream *v4;
  _BOOL4 v5;
  uint64_t v6;
  const char *v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  llvm *v11;
  uint64_t v12;
  unsigned int v13;
  __int16 v14;
  llvm *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  v5 = sub_22E9D848C(*(_QWORD *)(*(_QWORD *)(a2[4] + 8) & 0xFFFFFFFFFFFFFFF0));
  if (v5)
    v6 = 5;
  else
    v6 = 10;
  if (v5)
    v7 = "array";
  else
    v7 = "dictionary";
  sub_22E732740((llvm::json::Value *)&v14, (uint64_t)v7, v6);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v14);
  llvm::json::OStream::attributeEnd(v4);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v14);
  v9 = a2[5];
  if (v9)
  {
    sub_22F08F470((uint64_t)&v11, a1, v9);
    v14 = 7;
    v15 = v11;
    v16 = v12;
    v11 = 0;
    v12 = 0;
    v17 = v13;
    v13 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v14);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v14);
    sub_22F095054((uint64_t *)&v11);
    result = llvm::deallocate_buffer(v11, (void *)(56 * v13));
  }
  v10 = a2[6];
  if (v10)
  {
    sub_22F08F470((uint64_t)&v11, a1, v10);
    v14 = 7;
    v15 = v11;
    v16 = v12;
    v11 = 0;
    v12 = 0;
    v17 = v13;
    v13 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v14);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v14);
    sub_22F095054((uint64_t *)&v11);
    return llvm::deallocate_buffer(v11, (void *)(56 * v13));
  }
  return result;
}

uint64_t sub_22F3E6084(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  char v5;
  llvm *v7;
  uint64_t v8;
  unsigned int v9;
  __int16 v10;
  llvm *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08F470((uint64_t)&v7, a1, *(_QWORD *)(a2 + 16));
  v10 = 7;
  v11 = v7;
  v12 = v8;
  v7 = 0;
  v8 = 0;
  v13 = v9;
  v9 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v10);
  sub_22F095054((uint64_t *)&v7);
  llvm::deallocate_buffer(v7, (void *)(56 * v9));
  sub_22F3E1D20(a1, (uint64_t)"isFreeIvar", 10, (*(unsigned __int8 *)(a2 + 40) >> 1) & 1);
  v5 = *(_BYTE *)(a2 + 40) & 1;
  v10 = 1;
  LOBYTE(v11) = v5;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v10);
  llvm::json::OStream::attributeEnd(v4);
  return llvm::json::Value::destroy((llvm::json::Value *)&v10);
}

uint64_t sub_22F3E61CC(uint64_t a1, char a2)
{
  llvm::json::OStream *v2;
  uint64_t v3;
  const char *v4;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  if (a2)
    v3 = 10;
  else
    v3 = 9;
  if (a2)
    v4 = "__objc_yes";
  else
    v4 = "__objc_no";
  sub_22E732740((llvm::json::Value *)v6, (uint64_t)v4, v3);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)v6);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)v6);
}

uint64_t sub_22F3E6274(uint64_t a1, unsigned int *a2)
{
  llvm::json::OStream *v4;
  unint64_t *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t *v8;
  unsigned int v9;
  const char *v10;
  uint64_t v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  __int16 v15;
  llvm *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  v5 = (unint64_t *)(a2 + 4);
  sub_22F08F470((uint64_t)&v12, a1, *((_QWORD *)a2 + 2));
  v15 = 7;
  v16 = v12;
  v17 = v13;
  v12 = 0;
  v13 = 0;
  v18 = v14;
  v14 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v15);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v15);
  sub_22F095054((uint64_t *)&v12);
  result = llvm::deallocate_buffer(v12, (void *)(56 * v14));
  v7 = *a2;
  v8 = (unint64_t *)&a2[4 * ((v7 >> 18) & 1) + 8];
  if ((v7 & 0x100000) == 0)
    v8 = v5;
  if (*v5 != *v8)
  {
    sub_22F08F470((uint64_t)&v12, a1, *v8);
    v15 = 7;
    v16 = v12;
    v17 = v13;
    v12 = 0;
    v13 = 0;
    v18 = v14;
    v14 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v15);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v15);
    sub_22F095054((uint64_t *)&v12);
    result = llvm::deallocate_buffer(v12, (void *)(56 * v14));
    LODWORD(v7) = *a2;
  }
  v9 = (v7 >> 23) & 3;
  switch(v9)
  {
    case 3u:
      v10 = "discarded";
      v11 = 9;
      break;
    case 2u:
      v10 = "constant";
      v11 = 8;
      break;
    case 1u:
      v10 = "unevaluated";
      v11 = 11;
      break;
    default:
      return result;
  }
  sub_22E732740((llvm::json::Value *)&v15, (uint64_t)v10, v11);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v15);
  llvm::json::OStream::attributeEnd(v4);
  return llvm::json::Value::destroy((llvm::json::Value *)&v15);
}

uint64_t sub_22F3E649C(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08CDA0((uint64_t)&v4, a1, a2, 1);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E6578(uint64_t a1, unsigned int a2)
{
  llvm::json::OStream *v2;
  char *v3;
  uint64_t v4;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  v3 = sub_22F3C1330((a2 >> 18) & 0xF);
  sub_22E732740((llvm::json::Value *)v6, (uint64_t)v3, v4);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)v6);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)v6);
}

uint64_t sub_22F3E6618(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  BOOL v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  __int16 v8;
  BOOL v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = (*(_DWORD *)a2 & 0x780000) == 0;
  v8 = 1;
  v9 = v4;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  v5 = sub_22EFFA120((*(_DWORD *)a2 >> 18) & 0x1F);
  sub_22E732740((llvm::json::Value *)&v8, (uint64_t)v5, v6);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd(v3);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v8);
  if ((*(_BYTE *)(a2 + 2) & 0x80) == 0)
  {
    v8 = 1;
    v9 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v3, (const llvm::json::Value *)&v8);
    llvm::json::OStream::attributeEnd(v3);
    return llvm::json::Value::destroy((llvm::json::Value *)&v8);
  }
  return result;
}

uint64_t sub_22F3E6750(uint64_t a1, unsigned int a2)
{
  llvm::json::OStream *v2;
  char *v3;
  uint64_t v4;
  _BYTE v6[32];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  v3 = sub_22EFFBA38((a2 >> 18) & 0x3F);
  sub_22E732740((llvm::json::Value *)v6, (uint64_t)v3, v4);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)v6);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)v6);
}

uint64_t sub_22F3E67F0(uint64_t a1, uint64_t a2)
{
  llvm *v5;
  uint64_t v6;
  unsigned int v7;
  __int16 v8;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  sub_22F3E6750(a1, *(_DWORD *)a2);
  sub_22F08CDA0((uint64_t)&v5, a1, *(_QWORD *)(a2 + 32), 1);
  v8 = 7;
  v9 = v5;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  llvm::deallocate_buffer(v5, (void *)(56 * v7));
  sub_22F08CDA0((uint64_t)&v5, a1, *(_QWORD *)(a2 + 40), 1);
  v8 = 7;
  v9 = v5;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  v11 = v7;
  v7 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v8);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v8);
  sub_22F095054((uint64_t *)&v5);
  return llvm::deallocate_buffer(v5, (void *)(56 * v7));
}

uint64_t sub_22F3E697C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  sub_22F3E1D20(a1, (uint64_t)"isGlobal", 8, (*(_DWORD *)a2 >> 18) & 1);
  sub_22F3E1D20(a1, (uint64_t)"isArray", 7, (*(_DWORD *)a2 >> 19) & 1);
  result = sub_22F3E1D20(a1, (uint64_t)"isArrayAsWritten", 16, (*(_DWORD *)a2 >> 20) & 1);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    sub_22F08F470((uint64_t)&v6, a1, v5);
    v9 = 7;
    v10 = v6;
    v11 = v7;
    v6 = 0;
    v7 = 0;
    v12 = v8;
    v8 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v9);
    sub_22F095054((uint64_t *)&v6);
    return llvm::deallocate_buffer(v6, (void *)(56 * v8));
  }
  return result;
}

uint64_t sub_22F3E6AB8(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  char *v5;
  uint64_t v6;
  size_t v7;
  uint64_t result;
  llvm *v9;
  uint64_t v10;
  unsigned int v11;
  __int16 v12;
  llvm *v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  v5 = sub_22F20D5C0((*(_DWORD *)a2 >> 18) & 0xF);
  v6 = (uint64_t)v5;
  if (v5)
    v7 = strlen(v5);
  else
    v7 = 0;
  sub_22E732740((llvm::json::Value *)&v12, v6, v7);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v12);
  llvm::json::OStream::attributeEnd(v4);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v12);
  if ((*(_BYTE *)(a2 + 2) & 0x40) != 0)
  {
    sub_22F08CDA0((uint64_t)&v9, a1, **(_QWORD **)(a2 + 16), 1);
    v12 = 7;
    v13 = v9;
    v14 = v10;
    v9 = 0;
    v10 = 0;
    v15 = v11;
    v11 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v4, (const llvm::json::Value *)&v12);
    llvm::json::OStream::attributeEnd(v4);
    llvm::json::Value::destroy((llvm::json::Value *)&v12);
    sub_22F095054((uint64_t *)&v9);
    return llvm::deallocate_buffer(v9, (void *)(56 * v11));
  }
  return result;
}

uint64_t sub_22F3E6C14(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 16) & 4) != 0)
  {
    v3 = result;
    v4 = sub_22F3C5464(a2, *(_QWORD *)(result + 1240));
    v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFFF8);
    sub_22F08CDA0((uint64_t)&v6, v3, v5, 1);
    v9 = 7;
    v10 = v6;
    v11 = v7;
    v6 = 0;
    v7 = 0;
    v12 = v8;
    v8 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(v3 + 1048), (const llvm::json::Value *)&v9);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v3 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v9);
    sub_22F095054((uint64_t *)&v6);
    result = llvm::deallocate_buffer(v6, (void *)(56 * v8));
    if (v4 != v5)
    {
      sub_22F08CDA0((uint64_t)&v6, v3, v4, 1);
      v9 = 7;
      v10 = v6;
      v11 = v7;
      v6 = 0;
      v7 = 0;
      v12 = v8;
      v8 = 0;
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value((llvm::json::OStream *)(v3 + 1048), (const llvm::json::Value *)&v9);
      llvm::json::OStream::attributeEnd((llvm::json::OStream *)(v3 + 1048));
      llvm::json::Value::destroy((llvm::json::Value *)&v9);
      sub_22F095054((uint64_t *)&v6);
      return llvm::deallocate_buffer(v6, (void *)(56 * v8));
    }
  }
  return result;
}

void sub_22F3E6DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4[10];

  v4[9] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 2) & 0xF0) != 0)
  {
    sub_22EFF68AC((uint64_t *)a2, v4);
    sub_22F08FB94(a1, (uint64_t)v4, *(_QWORD *)(a2 + 8));
    if (LODWORD(v4[0]) >= 2)
      sub_22EF53BC0(v4);
  }
}

uint64_t sub_22F3E6E4C(uint64_t result, uint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v3;
  uint64_t v4;
  unsigned int v5;
  __int16 v6;
  llvm *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 2) != 0 && (a2 & 0xFFFFFFFFFFFFFFFCLL) != 0)
  {
    v2 = (llvm::json::OStream *)(result + 1048);
    sub_22F08F470((uint64_t)&v3, result, a2 & 0xFFFFFFFFFFFFFFFCLL);
    v6 = 7;
    v7 = v3;
    v8 = v4;
    v3 = 0;
    v4 = 0;
    v9 = v5;
    v5 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v2, (const llvm::json::Value *)&v6);
    llvm::json::OStream::attributeEnd(v2);
    llvm::json::Value::destroy((llvm::json::Value *)&v6);
    sub_22F095054((uint64_t *)&v3);
    return llvm::deallocate_buffer(v3, (void *)(56 * v5));
  }
  return result;
}

uint64_t sub_22F3E6F30(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  llvm *v6;
  uint64_t v7;
  unsigned int v8;
  __int16 v9;
  llvm *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = **(_QWORD **)(a2 + 16);
  if (*(_QWORD *)(a2 + 8) != v4)
  {
    sub_22F08CDA0((uint64_t)&v6, a1, v4, 1);
    v9 = 7;
    v10 = v6;
    v11 = v7;
    v6 = 0;
    v7 = 0;
    v12 = v8;
    v8 = 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v9);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    llvm::json::Value::destroy((llvm::json::Value *)&v9);
    sub_22F095054((uint64_t *)&v6);
    llvm::deallocate_buffer(v6, (void *)(56 * v8));
  }
  return sub_22F3E1D20(a1, (uint64_t)"list", 4, *(_DWORD *)(a2 + 24) == 0);
}

uint64_t sub_22F3E7048(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  uint64_t result;
  const char *v6;
  uint64_t v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  __int16 v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08CDA0((uint64_t)&v8, a1, *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48), 1);
  v11 = 7;
  v12 = v8;
  v13 = v9;
  v8 = 0;
  v9 = 0;
  v14 = v10;
  v10 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v11);
  sub_22F095054((uint64_t *)&v8);
  llvm::deallocate_buffer(v8, (void *)(56 * v10));
  sub_22F3E1D20(a1, (uint64_t)"elidable", 8, (*(_DWORD *)a2 >> 18) & 1);
  sub_22F3E1D20(a1, (uint64_t)"list", 4, (*(_DWORD *)a2 >> 20) & 1);
  sub_22F3E1D20(a1, (uint64_t)"initializer_list", 16, (*(_DWORD *)a2 >> 21) & 1);
  sub_22F3E1D20(a1, (uint64_t)"zeroing", 7, (*(_DWORD *)a2 >> 22) & 1);
  result = sub_22F3E1D20(a1, (uint64_t)"hadMultipleCandidates", 21, (*(_DWORD *)a2 >> 19) & 1);
  switch((*(_DWORD *)a2 >> 23) & 7)
  {
    case 0:
      v6 = "complete";
      v7 = 8;
      goto LABEL_6;
    case 1:
      v6 = "non-virtual base";
      v7 = 16;
      goto LABEL_6;
    case 2:
      v6 = "virtual base";
      v7 = 12;
      goto LABEL_6;
    case 3:
      v6 = "delegating";
      v7 = 10;
LABEL_6:
      sub_22E732740((llvm::json::Value *)&v11, (uint64_t)v6, v7);
      llvm::json::OStream::attributeBegin();
      llvm::json::OStream::value(v4, (const llvm::json::Value *)&v11);
      llvm::json::OStream::attributeEnd(v4);
      result = llvm::json::Value::destroy((llvm::json::Value *)&v11);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22F3E726C(uint64_t a1, _DWORD *a2)
{
  uint64_t result;
  uint64_t v5[2];

  result = sub_22F3E1D20(a1, (uint64_t)"cleanupsHaveSideEffects", 23, (*a2 >> 18) & 1);
  if (*a2 >= 0x80000u)
  {
    v5[0] = a1;
    v5[1] = (uint64_t)a2;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::arrayBegin((llvm::json::OStream *)(a1 + 1048));
    sub_22F0961DC(v5);
    llvm::json::OStream::arrayEnd((llvm::json::OStream *)(a1 + 1048));
    return llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  }
  return result;
}

uint64_t sub_22F3E72FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  llvm::json::OStream *v5;
  const char *v6;
  uint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  llvm *v12;
  uint64_t v13;
  unsigned int v14;
  __int16 v15;
  llvm *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 16);
  if ((v4 & 4) == 0)
    goto LABEL_2;
  v9 = v4 & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48);
  if (!v10)
  {
LABEL_6:
    switch(sub_22F3B2674(v9))
    {
      case 0u:
        goto LABEL_2;
      case 1u:
        v5 = (llvm::json::OStream *)(a1 + 1048);
        v6 = "automatic";
        v7 = 9;
        goto LABEL_3;
      case 2u:
        v5 = (llvm::json::OStream *)(a1 + 1048);
        v6 = "thread";
        goto LABEL_13;
      case 3u:
        v5 = (llvm::json::OStream *)(a1 + 1048);
        v6 = "static";
LABEL_13:
        v7 = 6;
        goto LABEL_3;
      case 4u:
        v5 = (llvm::json::OStream *)(a1 + 1048);
        v6 = "dynamic";
        v7 = 7;
        goto LABEL_3;
      default:
        return sub_22F3E1D20(a1, (uint64_t)"boundToLValueRef", 16, (*(_DWORD *)a2 & 0x300) == 256);
    }
  }
  sub_22F08F470((uint64_t)&v12, a1, v10);
  v15 = 7;
  v16 = v12;
  v17 = v13;
  v12 = 0;
  v13 = 0;
  v18 = v14;
  v14 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v15);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v15);
  sub_22F095054((uint64_t *)&v12);
  llvm::deallocate_buffer(v12, (void *)(56 * v14));
  v11 = *(_QWORD *)(a2 + 16);
  if ((v11 & 4) != 0)
  {
    v9 = v11 & 0xFFFFFFFFFFFFFFF8;
    goto LABEL_6;
  }
LABEL_2:
  v5 = (llvm::json::OStream *)(a1 + 1048);
  v6 = "full expression";
  v7 = 15;
LABEL_3:
  sub_22E732740((llvm::json::Value *)&v15, (uint64_t)v6, v7);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v5, (const llvm::json::Value *)&v15);
  llvm::json::OStream::attributeEnd(v5);
  llvm::json::Value::destroy((llvm::json::Value *)&v15);
  return sub_22F3E1D20(a1, (uint64_t)"boundToLValueRef", 16, (*(_DWORD *)a2 & 0x300) == 256);
}

uint64_t sub_22F3E74F0(uint64_t result, int a2)
{
  llvm::json::OStream *v2;
  __int16 v3;
  BOOL v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 0x10000) == 0)
  {
    v2 = (llvm::json::OStream *)(result + 1048);
    v3 = 1;
    v4 = (a2 & 0x40000) != 0;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v2, (const llvm::json::Value *)&v3);
    llvm::json::OStream::attributeEnd(v2);
    return llvm::json::Value::destroy((llvm::json::Value *)&v3);
  }
  return result;
}

void sub_22F3E7584(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v4;
  uint64_t v5;
  unsigned int v6;
  void *v7;
  __int128 v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  v7 = v9;
  v8 = xmmword_22F44E350;
  sub_22F257F94(a2 + 16, (llvm::APInt *)&v5);
  sub_22F110930(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0));
  llvm::APInt::toString();
  if (v6 >= 0x41 && v5)
    MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  v4 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F094398((uint64_t)&v5, (char *)v7, v8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v4, (const llvm::json::Value *)&v5);
  llvm::json::OStream::attributeEnd(v4);
  llvm::json::Value::destroy((llvm::json::Value *)&v5);
  if (v7 != v9)
    free(v7);
}

uint64_t sub_22F3E76A4(uint64_t a1, unsigned int a2)
{
  llvm::json::OStream *v2;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  v4 = 3;
  v5 = a2;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v4);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)&v4);
}

void sub_22F3E7734(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[3];
  void *v7;
  __int128 v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  v7 = v9;
  v8 = xmmword_22F44E350;
  v3 = a2 + 16;
  v4 = llvm::APFloatBase::EnumToSemantics();
  sub_22E4F00CC(v3, v4, (uint64_t)&v5);
  sub_22E99A6BC((llvm::APFloatBase *)&v5);
  sub_22E4EEC9C(v6);
  sub_22F094398((uint64_t)&v5, (char *)v7, v8);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v5);
  llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
  llvm::json::Value::destroy((llvm::json::Value *)&v5);
  if (v7 != v9)
    free(v7);
}

uint64_t sub_22F3E7838(uint64_t a1, int a2)
{
  llvm::json::OStream *v2;
  __int16 v4;
  BOOL v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  v4 = 1;
  v5 = (a2 & 0x40000) != 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v4);
  llvm::json::OStream::attributeEnd(v2);
  return llvm::json::Value::destroy((llvm::json::Value *)&v4);
}

uint64_t sub_22F3E78C8(uint64_t a1, _WORD *a2)
{
  sub_22F3E1D20(a1, (uint64_t)"hasInit", 7, ((unsigned __int16)*a2 >> 13) & 1);
  sub_22F3E1D20(a1, (uint64_t)"hasVar", 6, ((unsigned __int16)*a2 >> 12) & 1);
  sub_22F3E1D20(a1, (uint64_t)"hasElse", 7, ((unsigned __int16)*a2 >> 11) & 1);
  sub_22F3E1D20(a1, (uint64_t)"isConstexpr", 11, (*a2 & 0x700) == 256);
  sub_22F3E1D20(a1, (uint64_t)"isConsteval", 11, (*a2 & 0x600) == 512);
  return sub_22F3E1D20(a1, (uint64_t)"constevalIsNegated", 18, (*a2 & 0x700) == 768);
}

uint64_t sub_22F3E79A0(uint64_t a1)
{
  llvm::json::OStream *v1;
  __int16 v3;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = (llvm::json::OStream *)(a1 + 1048);
  v3 = 1;
  v4 = 1;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v1, (const llvm::json::Value *)&v3);
  llvm::json::OStream::attributeEnd(v1);
  return llvm::json::Value::destroy((llvm::json::Value *)&v3);
}

uint64_t sub_22F3E7A2C(uint64_t a1, unint64_t a2)
{
  llvm::json::OStream *v2;
  llvm *v4;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  llvm *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22F08CDA0((uint64_t)&v4, a1, a2, 1);
  v7 = 7;
  v8 = v4;
  v9 = v5;
  v4 = 0;
  v5 = 0;
  v10 = v6;
  v6 = 0;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  llvm::json::Value::destroy((llvm::json::Value *)&v7);
  sub_22F095054((uint64_t *)&v4);
  return llvm::deallocate_buffer(v4, (void *)(56 * v6));
}

uint64_t sub_22F3E7B08(uint64_t a1)
{
  llvm::json::OStream *v1;
  __int16 v3;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = (llvm::json::OStream *)(a1 + 1048);
  v3 = 1;
  v4 = 1;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v1, (const llvm::json::Value *)&v3);
  llvm::json::OStream::attributeEnd(v1);
  return llvm::json::Value::destroy((llvm::json::Value *)&v3);
}

uint64_t sub_22F3E7B94(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v2 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E466FDC(a2, (uint64_t)&v5);
  if (v6 > 0x40)
    v3 = *(_QWORD *)v5;
  else
    v3 = v5 << -(uint64_t)v6 >> -(uint64_t)v6;
  v7 = 3;
  v8 = v3;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v2, (const llvm::json::Value *)&v7);
  llvm::json::OStream::attributeEnd(v2);
  result = llvm::json::Value::destroy((llvm::json::Value *)&v7);
  if (v6 >= 0x41)
  {
    result = v5;
    if (v5)
      return MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_22F3E7C7C(uint64_t a1)
{
  llvm::json::OStream *v1;
  __int16 v3;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = (llvm::json::OStream *)(a1 + 1048);
  v3 = 1;
  v4 = 1;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v1, (const llvm::json::Value *)&v3);
  llvm::json::OStream::attributeEnd(v1);
  return llvm::json::Value::destroy((llvm::json::Value *)&v3);
}

uint64_t sub_22F3E7D08(uint64_t a1)
{
  llvm::json::OStream *v1;
  __int16 v3;
  char v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = (llvm::json::OStream *)(a1 + 1048);
  v3 = 1;
  v4 = 1;
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v1, (const llvm::json::Value *)&v3);
  llvm::json::OStream::attributeEnd(v1);
  return llvm::json::Value::destroy((llvm::json::Value *)&v3);
}

uint64_t sub_22F3E7D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  llvm::json::OStream *v3;
  _BYTE v5[32];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E732740((llvm::json::Value *)v5, a2, a3);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)v5);
  llvm::json::OStream::attributeEnd(v3);
  return llvm::json::Value::destroy((llvm::json::Value *)v5);
}

uint64_t sub_22F3E7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  llvm::json::OStream *v3;
  _BYTE v5[32];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  sub_22E732740((llvm::json::Value *)v5, a2, a3);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)v5);
  llvm::json::OStream::attributeEnd(v3);
  return llvm::json::Value::destroy((llvm::json::Value *)v5);
}

uint64_t sub_22F3E7EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  llvm::json::OStream *v7;
  const char *v8;
  uint64_t v9;
  uint64_t result;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  llvm::json::OStream *v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v6 = (*(_DWORD *)(a2 + 12) >> 29) & 3;
  if (v6 == 2)
  {
    v7 = (llvm::json::OStream *)(a1 + 1048);
    v8 = "in,out";
    v9 = 6;
  }
  else if (v6 == 1)
  {
    v7 = (llvm::json::OStream *)(a1 + 1048);
    v8 = "out";
    v9 = 3;
  }
  else
  {
    if (v6)
      goto LABEL_8;
    v7 = (llvm::json::OStream *)(a1 + 1048);
    v8 = "in";
    v9 = 2;
  }
  sub_22E732740((llvm::json::Value *)&v17, (uint64_t)v8, v9);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v7, (const llvm::json::Value *)&v17);
  llvm::json::OStream::attributeEnd(v7);
  llvm::json::Value::destroy((llvm::json::Value *)&v17);
LABEL_8:
  result = sub_22F3E1D20(a1, (uint64_t)"explicit", 8, *(_DWORD *)(a2 + 12) >> 31);
  if (*(_DWORD *)(a2 + 24))
  {
    if (*(_DWORD *)(a2 + 40) == -1)
    {
      v16 = *(_QWORD *)(a2 + 16);
      v11 = *(const char **)(v16 + 8);
      v13 = *(_QWORD *)(v16 + 16);
    }
    else
    {
      v11 = sub_22F3A7E64(a2, a3);
      v13 = v12;
    }
    sub_22E732740((llvm::json::Value *)&v17, (uint64_t)v11, v13);
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value((llvm::json::OStream *)(a1 + 1048), (const llvm::json::Value *)&v17);
    llvm::json::OStream::attributeEnd((llvm::json::OStream *)(a1 + 1048));
    result = llvm::json::Value::destroy((llvm::json::Value *)&v17);
  }
  v14 = *(unsigned int *)(a2 + 40);
  if (v14 <= 0xFFFFFFFD)
  {
    v15 = (llvm::json::OStream *)(a1 + 1048);
    v17 = 3;
    v18 = v14;
    llvm::json::OStream::attributeBegin();
    llvm::json::OStream::value(v15, (const llvm::json::Value *)&v17);
    llvm::json::OStream::attributeEnd(v15);
    return llvm::json::Value::destroy((llvm::json::Value *)&v17);
  }
  return result;
}

uint64_t sub_22F3E8074(uint64_t a1, uint64_t a2)
{
  llvm::json::OStream *v3;
  const char *v4;
  uint64_t v5;
  _BYTE v7[32];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v3 = (llvm::json::OStream *)(a1 + 1048);
  v4 = sub_22F0943EC(*(_QWORD *)(a1 + 1272), (*(_DWORD *)(a2 + 12) >> 8) & 0xFFFFF);
  sub_22E732740((llvm::json::Value *)v7, (uint64_t)v4, v5);
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)v7);
  llvm::json::OStream::attributeEnd(v3);
  llvm::json::Value::destroy((llvm::json::Value *)v7);
  sub_22E732740((llvm::json::Value *)v7, *(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48));
  llvm::json::OStream::attributeBegin();
  llvm::json::OStream::value(v3, (const llvm::json::Value *)v7);
  llvm::json::OStream::attributeEnd(v3);
  return llvm::json::Value::destroy((llvm::json::Value *)v7);
}

uint64_t sub_22F3E815C(uint64_t a1, __int128 **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  char v8;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  if (a3)
  {
    v5 = 56 * a3;
    do
    {
      sub_22F3E81D8((uint64_t)&v7, a1, a2);
      if (v8)
        llvm::json::Value::moveFrom();
      a2 += 7;
      v5 -= 56;
    }
    while (v5);
  }
  return a1;
}

uint64_t sub_22F3E81D8(uint64_t a1, uint64_t a2, __int128 **a3)
{
  uint64_t result;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;

  v10 = 0;
  result = sub_22F0951E4(*(_QWORD *)a2, *(_DWORD *)(a2 + 16), (uint64_t)a3, &v10);
  v7 = v10;
  if ((result & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v7 = (uint64_t *)sub_22F0954A8(a2, (uint64_t)a3, (uint64_t)v10);
    result = (uint64_t)sub_22F094F9C(v7, a3);
    *(_WORD *)(result + 24) = 0;
    v8 = 1;
  }
  v9 = *(_QWORD *)a2 + 56 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v8;
  return result;
}

void sub_22F3E8270(uint64_t a1, uint64_t a2)
{
  llvm::raw_ostream *v4;
  const void *v5;
  unint64_t v6;
  void *v7;
  _BYTE v8[64];
  uint64_t v9;
  void *v10;
  __int128 v11;
  _QWORD v12[9];

  v12[8] = *MEMORY[0x24BDAC8D0];
  v10 = v12;
  v11 = xmmword_22F44E300;
  sub_22F242C48((uint64_t)v8, (uint64_t)&v10);
  sub_22F0972FC(a1, a2, (llvm::raw_ostream *)v8, 0, 1);
  v4 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
  v5 = *(const void **)v9;
  v6 = *(_QWORD *)(v9 + 8);
  v7 = (void *)*((_QWORD *)v4 + 4);
  if (v6 <= *((_QWORD *)v4 + 3) - (_QWORD)v7)
  {
    if (v6)
    {
      memcpy(v7, v5, *(_QWORD *)(v9 + 8));
      *((_QWORD *)v4 + 4) += v6;
    }
  }
  else
  {
    llvm::raw_ostream::write(v4, (const char *)v5);
  }
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v8);
  if (v10 != v12)
    free(v10);
}

uint64_t sub_22F3E8378(uint64_t a1, uint64_t a2, llvm::raw_ostream *a3)
{
  uint64_t i;
  uint64_t result;

  llvm::raw_ostream::operator<<();
  for (i = 0; i != 8; ++i)
  {
    result = llvm::raw_ostream::operator<<();
    if ((_DWORD)i == 1)
      result = (uint64_t)sub_22E47DAC0(a3, "_");
  }
  return result;
}

llvm::raw_ostream *sub_22F3E8468(uint64_t a1, uint64_t a2, unint64_t a3, llvm::raw_ostream *a4)
{
  uint64_t v7;
  int v8;
  uint64_t v10;
  unint64_t v11;
  unsigned int *v12;
  const void *v13;
  size_t v14;
  unsigned int v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];

  v7 = *(unsigned int *)(a1 + 40);
  v17 = a2;
  v18 = v7;
  sub_22F2611B4(a1 + 32, &v17, &v18, (uint64_t)v19);
  v8 = *(_DWORD *)(v19[0] + 8);
  if (a3)
  {
    if (sub_22F096440((uint64_t *)a1, a3))
    {
      sub_22F0966E8((_QWORD *)a1, a3, 0, a4);
    }
    else
    {
      v10 = *(_QWORD *)(a3 + 40);
      if ((v10 & 7) != 0)
        v11 = 0;
      else
        v11 = v10 & 0xFFFFFFFFFFFFFFF8;
      v12 = *(unsigned int **)(v11 + 16);
      v15 = *v12;
      v13 = v12 + 4;
      v14 = v15;
      v16 = (void *)*((_QWORD *)a4 + 4);
      if ((unint64_t)v15 <= *((_QWORD *)a4 + 3) - (_QWORD)v16)
      {
        if (v14)
        {
          memcpy(v16, v13, v14);
          *((_QWORD *)a4 + 4) += v14;
        }
      }
      else
      {
        llvm::raw_ostream::write(a4, (const char *)v13);
      }
    }
  }
  if (!v8)
    return sub_22E47DAC0(a4, "_block_invoke");
  sub_22E47DAC0(a4, "_block_invoke_");
  return (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
}

void sub_22F3E8570(_QWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4, llvm::raw_ostream *a5)
{
  _BYTE v10[72];
  void *v11;
  __int128 v12;
  _QWORD v13[9];

  v13[8] = *MEMORY[0x24BDAC8D0];
  v11 = v13;
  v12 = xmmword_22F44E300;
  sub_22F242C48((uint64_t)v10, (uint64_t)&v11);
  sub_22F0966E8(a1, a2 & 0xFFFFFFFFFFFFFFF8 | a3, 0, (llvm::raw_ostream *)v10);
  sub_22F096D68((uint64_t)a1, v11, v12, a4, a5);
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v10);
  if (v11 != v13)
    free(v11);
}

void sub_22F3E864C(uint64_t ***a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t **v4;
  _BYTE v5[72];

  v4 = *a1;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  sub_22F097B20((uint64_t)v5, (uint64_t)a3);
  sub_22F09789C(v4, a2, (llvm::raw_ostream *)v5);
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v5);
}

uint64_t sub_22F3E86A8()
{
  return 0;
}

void *sub_22F3E86C8(unint64_t a1, llvm::raw_ostream *a2)
{
  unsigned int v4;
  size_t v5;
  const char *v6;
  void *v7;
  size_t v8;
  const char *v9;
  size_t v10;
  void *result;

  v4 = *(_DWORD *)(*(_QWORD *)(sub_22EFC72E8(a1) + 2000) + 400);
  if (v4 > 4)
    v5 = 12;
  else
    v5 = 13;
  if (v4 <= 4)
    v6 = "OBJC_CLASS_$_";
  else
    v6 = "_OBJC_CLASS_";
  v7 = (void *)*((_QWORD *)a2 + 4);
  if (v5 <= *((_QWORD *)a2 + 3) - (_QWORD)v7)
  {
    memcpy(v7, v6, v5);
    *((_QWORD *)a2 + 4) += v5;
  }
  else
  {
    llvm::raw_ostream::write(a2, v6);
  }
  v9 = (const char *)sub_22F3B5E40(a1);
  v10 = v8;
  result = (void *)*((_QWORD *)a2 + 4);
  if (v8 > *((_QWORD *)a2 + 3) - (_QWORD)result)
    return (void *)llvm::raw_ostream::write(a2, v9);
  if (v8)
  {
    result = memcpy(result, v9, v8);
    *((_QWORD *)a2 + 4) += v10;
  }
  return result;
}

uint64_t sub_22F3E87A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return sub_22EF9665C(0);
  sub_22EFC8E88(a1);
  v3 = sub_22F0986A0(v2);
  return sub_22EF9665C(v3);
}

uint64_t sub_22F3E87D0(uint64_t a1)
{
  if ((int)sub_22F3E87A8(a1) > 1)
    return 1;
  if (!*(_QWORD *)(a1 + 128))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    if (!*(_QWORD *)(a1 + 128))
      return 0;
  }
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return (**(_QWORD **)(a1 + 128) >> 10) & 1;
}

uint64_t sub_22F3E883C(unint64_t a1)
{
  uint64_t v3;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0 && (sub_22EFC8E88(a1), (v4 = sub_22F098700(v3)) != 0))
    return *(unsigned int *)(v4 + 36);
  else
    return *(unsigned __int16 *)(*(_QWORD *)(sub_22EFC72E8(a1) + 2000) + 248) >> 14;
}

_QWORD *sub_22F3E888C(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = (_QWORD *)operator new();
  v3 = v2;
  *v2 = off_24FAC65B8;
  v2[1] = a1;
  v2[2] = 1;
  for (i = 3; i != 11; i += 2)
    v2[i] = -4096;
  v2[11] = 1;
  for (j = 12; j != 20; j += 2)
    v2[j] = -4096;
  v2[20] = 1;
  for (k = 21; k != 29; k += 2)
    v2[k] = -4096;
  v2[29] = 0;
  v7 = v2[1];
  v8 = *(_QWORD *)(v7 + 2000);
  if ((*(_BYTE *)(v8 + 68) & 0x20) != 0 && (v14 = *(_QWORD *)(v7 + 15096)) != 0)
  {
    v10 = sub_22F368DF4(v2[1], v14);
  }
  else
  {
    if ((*(_BYTE *)(v8 + 104) & 0xC) == 0)
      return v3;
    v9 = sub_22EF5B130(v2[1]);
    v10 = sub_22F3E14E0(v7, v9);
  }
  v11 = v10;
  v12 = v3[29];
  v3[29] = v11;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  return v3;
}

uint64_t sub_22F3E8994(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = a1[8];
  result = (*(uint64_t (**)(_QWORD *))(*a1 + 80))(a1);
  if (*(_QWORD *)(v4 + 16) < (unint64_t)(result + a2 + a1[4] - a1[2]))
    return llvm::SmallVectorBase<unsigned long long>::grow_pod();
  return result;
}

uint64_t sub_22F3E8A08()
{
  return 0;
}

uint64_t sub_22F3E8A10(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 48))(a1);
}

uint64_t sub_22F3E8A1C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

uint64_t *sub_22F3E8A24(uint64_t a1, int a2, unsigned __int8 a3, uint64_t *a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v6 = sub_22F0A9A6C(a1, &v13, a2, a3);
  v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    v9 = v6;
    v7 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v7 + 28) = *a4;
    v10 = v13;
    *v7 = 0;
    v7[1] = 0;
    v7[2] = v10;
    *v9 = (uint64_t)v7;
    v11 = **(_QWORD **)a1;
    v12 = v7;
    if (v11)
    {
      *(_QWORD *)a1 = v11;
      v12 = (uint64_t *)*v9;
    }
    sub_22E49FD00(*(uint64_t **)(a1 + 8), v12);
    ++*(_QWORD *)(a1 + 16);
  }
  return v7;
}

_QWORD *sub_22F3E8AC8(uint64_t *a1, _QWORD *a2)
{
  char v4;
  _QWORD *v5;
  _QWORD *v7;

  v7 = 0;
  v4 = sub_22F251EFC(a1, a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22F3E8B2C((uint64_t)a1, (uint64_t)a2, a2, v7);
    *v5 = *a2;
    v5[1] = 0;
    v5[2] = 0;
  }
  return v5;
}

_QWORD *sub_22F3E8B2C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  int v6;
  unsigned int v7;
  _QWORD *v9;

  v6 = *(_DWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 16);
  if (4 * v6 + 4 >= 3 * v7)
  {
    v7 *= 2;
LABEL_3:
    sub_22E486BE8(a1, v7);
    v9 = 0;
    sub_22F251EFC((uint64_t *)a1, a3, &v9);
    a4 = v9;
    goto LABEL_4;
  }
  if (v7 + ~v6 - *(_DWORD *)(a1 + 12) <= v7 >> 3)
    goto LABEL_3;
LABEL_4:
  ++*(_DWORD *)(a1 + 8);
  if (*a4 != -4096)
    --*(_DWORD *)(a1 + 12);
  return a4;
}

uint64_t sub_22F3E8BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[3];

  v4[0] = 0;
  v4[1] = a2 & 0xFFFFFFFFFFFFFFF9;
  v4[2] = a3;
  return sub_22F0AA9D0(a1, (uint64_t)v4);
}

uint64_t sub_22F3E8C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[3];

  v4[0] = 0;
  v4[1] = a2 & 0xFFFFFFFFFFFFFFF9 | 2;
  v4[2] = a3;
  return sub_22F0AA9D0(a1, (uint64_t)v4);
}

uint64_t sub_22F3E8C38(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 8) & 6) != 2)
    return 0;
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 16) + 28) & 0x7F) == 0x11)
    return *(_QWORD *)(a1 + 16);
  return 0;
}

void *sub_22F3E8C68(llvm *a1, unsigned int *a2)
{
  llvm::raw_ostream *v4;

  v4 = (llvm::raw_ostream *)llvm::errs(a1);
  return sub_22F3E8C98((uint64_t)a1, v4, a2);
}

void *sub_22F3E8C98(uint64_t a1, llvm::raw_ostream *a2, unsigned int *a3)
{
  __int128 v6;

  sub_22E462F04((unint64_t *)&v6, a3);
  return sub_22F0AAD88(a1, a2, &v6, 0);
}

uint64_t sub_22F3E8CE0(llvm *a1)
{
  llvm::raw_ostream *v2;

  v2 = (llvm::raw_ostream *)llvm::errs(a1);
  return sub_22F3E8D08((uint64_t)a1, v2);
}

uint64_t sub_22F3E8D08(uint64_t a1, llvm::raw_ostream *a2)
{
  unsigned int v5[216];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  sub_22F1D4454((uint64_t)v5);
  sub_22F3E8C98(a1, a2, v5);
  return sub_22E54B4D4((uint64_t)v5);
}

_BYTE *sub_22F3E8D84(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t *v7;
  _DWORD *v8;
  unint64_t v9;
  void **v10;
  _QWORD __src[3];

  v7 = a1;
  v8 = a1 + 2;
  v9 = *a1 & 0xFFFFFFFFFFFFFFF9;
  __src[0] = 0;
  __src[1] = v9;
  __src[2] = a3;
  v10 = (void **)(a1 + 1);
  *a1 = sub_22F0AA9D0(a2, (uint64_t)__src);
  v7 = (uint64_t *)((char *)v7 + 20);
  LODWORD(__src[0]) = a4;
  sub_22F0AB5D4(__src, (_BYTE *)__src + 4, v10, v8, v7);
  LODWORD(__src[0]) = a5;
  return sub_22F0AB5D4(__src, (_BYTE *)__src + 4, v10, v8, v7);
}

_BYTE *sub_22F3E8E2C(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t *v7;
  _DWORD *v8;
  void **v9;
  __int128 v11;
  uint64_t v12;

  v7 = a1;
  v11 = xmmword_22F45EEF0;
  v12 = a3;
  *a1 = sub_22F0AA9D0(a2, (uint64_t)&v11);
  v8 = (_DWORD *)v7 + 5;
  v9 = (void **)(v7 + 1);
  v7 += 2;
  LODWORD(v11) = a4;
  sub_22F0AB5D4(&v11, (_BYTE *)&v11 + 4, v9, v7, v8);
  LODWORD(v11) = a5;
  return sub_22F0AB5D4(&v11, (_BYTE *)&v11 + 4, v9, v7, v8);
}

uint64_t sub_22F3E8ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22E3CF554(a3, *(_QWORD *)(a2 + 8));
  return sub_22E3CF554(a3, *(_QWORD *)(a2 + 16));
}

uint64_t sub_22F3E8F0C(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  llvm::StringMapImpl *v6;
  const char *v7;
  size_t v8;

  v2 = a1 + 8 * a2;
  v5 = *(_QWORD *)(v2 + 8);
  v4 = (uint64_t *)(v2 + 8);
  v3 = v5;
  if (!v5)
  {
    v6 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
    v7 = off_24FAC68F8[a2];
    v8 = strlen(v7);
    v3 = sub_22E3CB704(v6, v7, v8);
    *v4 = v3;
  }
  return v3;
}

uint64_t sub_22F3E8F74(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  llvm::StringMapImpl *v7;
  const char *v8;
  size_t v9;
  llvm::StringMapImpl *v10;
  const char *v11;
  size_t v12;
  uint64_t v13[3];

  v13[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 8 * a2;
  v6 = *(_QWORD *)(v3 + 136);
  v5 = (uint64_t *)(v3 + 136);
  result = v6;
  if (!v6)
  {
    switch(a2)
    {
      case 0u:
        result = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "array", 5uLL) | 1;
        break;
      case 1u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "arrayWithArray";
        v9 = 14;
        goto LABEL_14;
      case 2u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "arrayWithObject";
        goto LABEL_11;
      case 3u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "arrayWithObjects";
        v9 = 16;
        goto LABEL_14;
      case 4u:
        v13[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "arrayWithObjects", 0x10uLL);
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "count";
        v12 = 5;
        goto LABEL_20;
      case 5u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "initWithArray";
        goto LABEL_13;
      case 6u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "initWithObjects";
LABEL_11:
        v9 = 15;
        goto LABEL_14;
      case 7u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "objectAtIndex";
LABEL_13:
        v9 = 13;
        goto LABEL_14;
      case 8u:
        v13[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "replaceObjectAtIndex", 0x14uLL);
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "withObject";
        v12 = 10;
        goto LABEL_20;
      case 9u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "addObject";
        v9 = 9;
LABEL_14:
        result = sub_22E3CB704(v7, v8, v9) | 2;
        break;
      case 0xAu:
        v13[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "insertObject", 0xCuLL);
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "atIndex";
        v12 = 7;
        goto LABEL_20;
      case 0xBu:
        v13[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "setObject", 9uLL);
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "atIndexedSubscript";
        v12 = 18;
LABEL_20:
        v13[1] = sub_22E3CB704(v10, v11, v12);
        result = sub_22F1D3E5C(*(uint64_t **)(*(_QWORD *)a1 + 15200), 2u, v13);
        break;
      default:
        result = 0;
        break;
    }
    *v5 = result;
  }
  return result;
}

uint64_t sub_22F3E91B4(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  llvm::StringMapImpl *v7;
  const char *v8;
  size_t v9;
  llvm::StringMapImpl *v10;
  const char *v11;
  size_t v12;
  llvm::StringMapImpl *v13;
  const char *v14;
  size_t v15;
  uint64_t *v16;
  unsigned int v17;
  llvm::StringMapImpl *v18;
  const char *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 8 * a2;
  v6 = *(_QWORD *)(v3 + 232);
  v5 = (uint64_t *)(v3 + 232);
  result = v6;
  if (!v6)
  {
    switch(a2)
    {
      case 0u:
        result = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "dictionary", 0xAuLL) | 1;
        break;
      case 1u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "dictionaryWithDictionary";
        v9 = 24;
        goto LABEL_15;
      case 2u:
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "dictionaryWithObject";
        v12 = 20;
        goto LABEL_19;
      case 3u:
        v13 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v14 = "dictionaryWithObjects";
        v15 = 21;
        goto LABEL_13;
      case 4u:
        v21 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "dictionaryWithObjects", 0x15uLL);
        v22 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "forKeys", 7uLL);
        v23 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "count", 5uLL);
        v16 = *(uint64_t **)(*(_QWORD *)a1 + 15200);
        v17 = 3;
        goto LABEL_21;
      case 5u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "dictionaryWithObjectsAndKeys";
        v9 = 28;
        goto LABEL_15;
      case 6u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "initWithDictionary";
        v9 = 18;
        goto LABEL_15;
      case 7u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "initWithObjectsAndKeys";
        v9 = 22;
        goto LABEL_15;
      case 8u:
        v13 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v14 = "initWithObjects";
        v15 = 15;
LABEL_13:
        v21 = sub_22E3CB704(v13, v14, v15);
        v18 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v19 = "forKeys";
        v20 = 7;
        goto LABEL_20;
      case 9u:
        v7 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v8 = "objectForKey";
        v9 = 12;
LABEL_15:
        result = sub_22E3CB704(v7, v8, v9) | 2;
        break;
      case 0xAu:
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "setObject";
        v12 = 9;
        goto LABEL_19;
      case 0xBu:
        v21 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "setObject", 9uLL);
        v18 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v19 = "forKeyedSubscript";
        v20 = 17;
        goto LABEL_20;
      case 0xCu:
        v10 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v11 = "setValue";
        v12 = 8;
LABEL_19:
        v21 = sub_22E3CB704(v10, v11, v12);
        v18 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v19 = "forKey";
        v20 = 6;
LABEL_20:
        v22 = sub_22E3CB704(v18, v19, v20);
        v16 = *(uint64_t **)(*(_QWORD *)a1 + 15200);
        v17 = 2;
LABEL_21:
        result = sub_22F1D3E5C(v16, v17, &v21);
        break;
      default:
        result = 0;
        break;
    }
    *v5 = result;
  }
  return result;
}

uint64_t sub_22F3E9448(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  llvm::StringMapImpl *v6;
  const char *v7;
  size_t v8;
  llvm::StringMapImpl *v9;
  const char *v10;
  size_t v11;
  uint64_t v12[3];

  v12[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1 + 8 * a2;
  result = *(_QWORD *)(v3 + 336);
  if (!result)
  {
    v5 = (uint64_t *)(v3 + 336);
    switch(a2)
    {
      case 0u:
        result = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "addObject", 9uLL) | 2;
        break;
      case 1u:
        v6 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v7 = "insertObject";
        v8 = 12;
        goto LABEL_8;
      case 2u:
        v6 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v7 = "setObject";
        v8 = 9;
LABEL_8:
        v12[0] = sub_22E3CB704(v6, v7, v8);
        v9 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v10 = "atIndex";
        v11 = 7;
        goto LABEL_9;
      case 3u:
        v12[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "setObject", 9uLL);
        v9 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v10 = "atIndexedSubscript";
        v11 = 18;
        goto LABEL_9;
      case 4u:
        v12[0] = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), "replaceObjectAtIndex", 0x14uLL);
        v9 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
        v10 = "withObject";
        v11 = 10;
LABEL_9:
        v12[1] = sub_22E3CB704(v9, v10, v11);
        result = sub_22F1D3E5C(*(uint64_t **)(*(_QWORD *)a1 + 15200), 2u, v12);
        break;
      default:
        result = 0;
        break;
    }
    *v5 = result;
  }
  return result;
}

uint64_t sub_22F3E95C8(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char **v8;
  llvm::StringMapImpl *v9;
  char *v10;
  size_t v11;

  v3 = 376;
  if (a3)
    v3 = 496;
  v4 = a1 + v3;
  v5 = *(_QWORD *)(a1 + v3 + 8 * a2);
  if (!v5)
  {
    v7 = a2;
    v8 = off_24FAC6948;
    if (a3)
      v8 = off_24FAC69C0;
    v9 = *(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192);
    v10 = v8[a2];
    if (v10)
      v11 = strlen(v8[a2]);
    else
      v11 = 0;
    v5 = sub_22E3CB704(v9, v10, v11) | 2;
    *(_QWORD *)(v4 + 8 * v7) = v5;
  }
  return v5;
}

BOOL sub_22F3E9660(uint64_t a1, unint64_t a2, const void *a3, size_t a4, uint64_t *a5)
{
  _BOOL8 v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 2000) + 1) & 0x40) != 0 && a2 >= 0x10)
  {
    if (!*a5)
      *a5 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), a3, a4);
    v8 = sub_22F10D4DC(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
    if (v8)
    {
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(v8 + 24) + 40);
        if ((v9 & 7) != 0)
          v10 = 0;
        else
          v10 = v9 & 0xFFFFFFFFFFFFFFF8;
        v5 = v10 == *a5;
        if (v10 == *a5)
          break;
        v11 = sub_22F10D2A0(v8);
        v8 = sub_22F10D4DC(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0));
      }
      while (v8);
    }
    else
    {
      return 0;
    }
  }
  return v5;
}

BOOL sub_22F3E9714(uint64_t a1, unint64_t a2, unsigned int a3)
{
  _BOOL8 v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  if (!a2)
    return 0;
  v5 = a2;
  v6 = sub_22F3E8F0C(a1, a3);
  do
  {
    v7 = *(_QWORD *)(v5 + 40);
    if ((v7 & 7) != 0)
      v8 = 0;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFFF8;
    v3 = v6 == v8;
    if (v6 == v8)
      break;
    v5 = sub_22F3B46CC(v5);
  }
  while (v5);
  return v3;
}

uint64_t sub_22F3E9780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13[5];

  v13[4] = *MEMORY[0x24BDAC8D0];
  result = *a4;
  if (!*a4)
  {
    v12 = 0;
    if (a3)
    {
      v7 = a2;
      v8 = a2 + 16 * a3;
      do
      {
        v9 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), *(const void **)v7, *(_QWORD *)(v7 + 8));
        v10 = v12;
        if (v12 >= 4uLL)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v10 = v12;
        }
        v13[v10] = v9;
        v11 = ++v12;
        v7 += 16;
      }
      while (v7 != v8);
    }
    else
    {
      v11 = 0;
    }
    result = sub_22F1D3E5C(*(uint64_t **)(*(_QWORD *)a1 + 15200), v11, v13);
    *a4 = result;
  }
  return result;
}

uint64_t sub_22F3E98A8(uint64_t a1, const void *a2, size_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a4;
  if (!*a4)
  {
    v7 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)a1 + 15192), a2, a3);
    result = sub_22F1D3E5C(*(uint64_t **)(*(_QWORD *)a1 + 15200), 0, &v7);
    *a4 = result;
  }
  return result;
}

_QWORD *sub_22F3E9900(_QWORD *result, uint64_t a2, unsigned int a3, uint64_t *a4, unsigned int a5)
{
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  v5 = result;
  *result = 0;
  result[1] = 0;
  result[2] = 0xF0000000FLL;
  v6 = a4;
  if (a3)
  {
    v7 = 16 * a5;
    v8 = 16 * a3;
    v6 = a4;
    v9 = (uint64_t *)(a2 + v7);
    while (1)
    {
      if (!v7)
      {
        v6 = &a4[2 * a5];
        goto LABEL_10;
      }
      if (*(_DWORD *)(a2 + 8) != *((_DWORD *)v6 + 2))
        break;
      a2 += 16;
      v6 += 2;
      v7 -= 16;
      v8 -= 16;
      if (!v8)
        goto LABEL_6;
    }
    v9 = (uint64_t *)a2;
LABEL_10:
    v10 = *v9;
  }
  else
  {
LABEL_6:
    if (v6 == &a4[2 * a5])
      return result;
    v10 = 0;
  }
  *result = v10;
  if (v6 == &a4[2 * a5])
    v11 = 0;
  else
    v11 = *v6;
  result[1] = v11;
  if (v10)
    v12 = sub_22F0ADD64(*(_DWORD *)(v10 + 28));
  else
    v12 = 0;
  *((_DWORD *)v5 + 4) = v12;
  if (v11)
    result = (_QWORD *)sub_22F0ADD64(*(_DWORD *)(v11 + 28));
  else
    result = 0;
  *((_DWORD *)v5 + 5) = (_DWORD)result;
  return result;
}

int64x2_t sub_22F3E99E8(int64x2_t *a1, _OWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int64x2_t result;

  v4 = a1[2].u64[0];
  if (!v4)
  {
    sub_22F3E9A68((uint64_t)a1);
    v4 = a1[2].u64[0];
  }
  v5 = a1->i64[1];
  v6 = (_QWORD *)(v5 + 8 * (v4 >> 8));
  v7 = *v6 + 16 * v4;
  if (a1[1].i64[0] == v5)
    v7 = 0;
  if (v7 == *v6)
    v7 = *(v6 - 1) + 4096;
  *(_OWORD *)(v7 - 16) = *a2;
  result = vaddq_s64(a1[2], (int64x2_t)xmmword_22F463B30);
  a1[2] = result;
  return result;
}

void sub_22F3E9A68(uint64_t a1)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *i;
  _BYTE *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_BYTE **)(a1 + 8);
  v3 = *(_BYTE **)(a1 + 16);
  if (v3 == v2)
    v4 = 0;
  else
    v4 = 32 * (v3 - v2) - 1;
  v5 = *(_QWORD *)(a1 + 32);
  if ((unint64_t)(v4 - (*(_QWORD *)(a1 + 40) + v5)) < 0x100)
  {
    v6 = *(_BYTE **)(a1 + 24);
    v7 = *(_BYTE **)a1;
    v8 = (uint64_t)&v6[-*(_QWORD *)a1];
    if (v3 - v2 >= (unint64_t)v8)
    {
      if (v6 == v7)
        v10 = 1;
      else
        v10 = v8 >> 2;
      v21 = a1 + 24;
      if (v10 >> 61)
        sub_22E3B3F8C();
      v18 = (char *)operator new(8 * v10);
      v19 = v18;
      *(_QWORD *)&v20 = v18;
      *((_QWORD *)&v20 + 1) = &v18[8 * v10];
      v17 = operator new(0x1000uLL);
      sub_22F2D2D80((uint64_t)&v18, &v17);
      for (i = *(_QWORD **)(a1 + 8); i != *(_QWORD **)(a1 + 16); ++i)
        sub_22F0BACE0((uint64_t)&v18, i);
      v12 = *(_BYTE **)a1;
      v13 = v19;
      *(_QWORD *)a1 = v18;
      *(_QWORD *)(a1 + 8) = v13;
      v14 = v20;
      *(_OWORD *)(a1 + 16) = v20;
      if (v14 - (_QWORD)v13 == 8)
        v15 = 128;
      else
        v15 = *(_QWORD *)(a1 + 32) + 256;
      *(_QWORD *)(a1 + 32) = v15;
      if (v12)
        operator delete(v12);
    }
    else
    {
      if (v2 == v7)
      {
        v18 = (char *)operator new(0x1000uLL);
        sub_22F2D2D80(a1, &v18);
        v9 = *(_QWORD *)(a1 + 16);
        v18 = *(char **)(v9 - 8);
        *(_QWORD *)(a1 + 16) = v9 - 8;
      }
      else
      {
        v18 = (char *)operator new(0x1000uLL);
      }
      sub_22F2D2EA4((void **)a1, &v18);
      if (*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8) == 8)
        v16 = 128;
      else
        v16 = *(_QWORD *)(a1 + 32) + 256;
      *(_QWORD *)(a1 + 32) = v16;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v5 + 256;
    v18 = (char *)*((_QWORD *)v3 - 1);
    *(_QWORD *)(a1 + 16) = v3 - 8;
    sub_22F2D2EA4((void **)a1, &v18);
  }
}

uint64_t sub_22F3E9C1C(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = *(unsigned __int16 *)(a2 + 32);
  v5 = *(_DWORD *)(a1 + 184);
  if (v5 >= *(_DWORD *)(a1 + 188))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v5 = *(_DWORD *)(a1 + 184);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 176) + 4 * v5) = v4;
  ++*(_DWORD *)(a1 + 184);
  result = a1 + 24;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if ((unint64_t)(v7 + 1) > *(_QWORD *)(a1 + 40))
  {
    result = llvm::SmallVectorBase<unsigned long long>::grow_pod();
    v7 = *(_QWORD *)(a1 + 32);
  }
  *(_BYTE *)(*(_QWORD *)(a1 + 24) + v7) = v8 != 0;
  ++*(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(a2 + 40))
    return llvm::FoldingSetNodeID::AddString();
  return result;
}

void sub_22F3E9CFC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17[2];
  void *v18;
  uint64_t v19;
  _QWORD v20[17];

  v20[16] = *MEMORY[0x24BDAC8D0];
  sub_22F0BBDE0((uint64_t)a1, a2[5]);
  v4 = a2[9];
  v5 = a1[4];
  if ((unint64_t)(v5 + 1) > a1[5])
  {
    llvm::SmallVectorBase<unsigned long long>::grow_pod();
    v5 = a1[4];
  }
  *(_BYTE *)(a1[3] + v5) = (v4 & 0x8000000000) != 0;
  v6 = a1[4];
  v7 = v6 + 1;
  a1[4] = v6 + 1;
  v8 = a2[9];
  if ((v8 & 0x8000000000) != 0)
  {
    if ((unint64_t)(v6 + 2) > a1[5])
    {
      llvm::SmallVectorBase<unsigned long long>::grow_pod();
      v7 = a1[4];
    }
    *(_BYTE *)(a1[3] + v7) = BYTE5(v8) & 1;
    ++a1[4];
  }
  v9 = a2[16];
  if (v9 >= 8 && (v9 & 4) != 0)
  {
    v16 = sub_22E496830((uint64_t)a2);
    sub_22F0BC29C((uint64_t)a1, v16);
  }
  v18 = v20;
  v19 = 0x1000000000;
  v10 = (uint64_t)(a2 + 8);
  if ((a2[9] & 0x80) != 0)
    sub_22EFCC320((uint64_t)(a2 + 8));
  for (i = a2[10]; i; i = *(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8)
  {
    if (sub_22F0BCB54(i, v10))
    {
      v12 = v19;
      if (v19 >= (unint64_t)HIDWORD(v19))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v12 = v19;
      }
      *((_QWORD *)v18 + v12) = i;
      LODWORD(v19) = v19 + 1;
    }
  }
  sub_22E3CF554((uint64_t)(a1 + 22), v19);
  v13 = (uint64_t *)v18;
  if ((_DWORD)v19)
  {
    v14 = 8 * v19;
    do
    {
      v15 = *v13++;
      v17[0] = (uint64_t)(a1 + 22);
      v17[1] = (uint64_t)a1;
      sub_22F0BCCF4(v17, v15);
      v14 -= 8;
    }
    while (v14);
    v13 = (uint64_t *)v18;
  }
  if (v13 != v20)
    free(v13);
}

uint64_t sub_22F3E9EFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_QWORD **)result;
    v8 = 16 * v6;
    do
    {
      *v7 = -1;
      v7 += 2;
      v8 -= 16;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    if (*(_QWORD *)a2 <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v10 = 0;
      result = sub_22F0C1380((uint64_t *)v5, (_QWORD *)a2, &v10);
      v9 = v10;
      *v10 = *(_QWORD *)a2;
      *((_DWORD *)v9 + 2) = *(_DWORD *)(a2 + 8);
      ++*(_DWORD *)(v5 + 8);
    }
    a2 += 16;
  }
  return result;
}

uint64_t sub_22F3E9FA4(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_22F3E9FC0 + 4 * byte_22F4A6CAC[*(unsigned int *)(a1 + 8)]))();
}

double sub_22F3E9FC0@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_22F3E9FD0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result + 32;
  a2[1] = 0;
  a2[3] = result + 40;
  a2[4] = 0;
  return result;
}

void sub_22F3EA004()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA00C()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA014()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA01C()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA024()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA02C()
{
  JUMPOUT(0x22F3E9FF4);
}

void sub_22F3EA038()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA040()
{
  JUMPOUT(0x22F3E9FF4);
}

void sub_22F3EA04C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v2;

  v2 = 2 * *(_DWORD *)(a1 + 16);
  *a2 = a1 + 24;
  a2[1] = 0;
  a2[3] = a1 + 24 + 8 * v2;
  JUMPOUT(0x22F3E9FFCLL);
}

double sub_22F3EA08C@<D0>(_OWORD *a1@<X8>, uint64_t a2@<X0>)
{
  if (*(_QWORD *)(a2 + 24))
    JUMPOUT(0x22F3EA030);
  return sub_22F3E9FC0(a1);
}

void sub_22F3EA09C()
{
  JUMPOUT(0x22F3E9FF4);
}

void sub_22F3EA0A8()
{
  JUMPOUT(0x22F3E9FECLL);
}

void sub_22F3EA0B0()
{
  JUMPOUT(0x22F3E9FF4);
}

uint64_t sub_22F3EA0C0(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)sub_22F3EA0E0
                                                   + 4 * byte_22F4A6D0A[*(unsigned int *)(a1 + 8)]))(a1, a1);
}

double sub_22F3EA0E0@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

unint64_t *sub_22F3EA0F0@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

unint64_t *sub_22F3EA0F8@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

unint64_t *sub_22F3EA100@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

void sub_22F3EA108(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1 + 40 + 8 * *(unsigned int *)(a1 + 16);
  *a2 = a1 + 40;
  a2[1] = 0;
  a2[3] = v2;
  a2[4] = 0;
}

unint64_t *sub_22F3EA140@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

unint64_t *sub_22F3EA148@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

unint64_t *sub_22F3EA150@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

void sub_22F3EA158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned int *)(a2 + 16);
  v3 = a2 + 8 * v2 + 8 * v2 + 8 * v2 + 8 * v2 + 8 * v2 + 80;
  if ((_DWORD)v2 != -1)
  {
    v4 = 8 * (v2 + 1);
    v5 = (_QWORD *)v3;
    do
    {
      if (!*v5)
        break;
      ++v5;
      v4 -= 8;
    }
    while (v4);
  }
  JUMPOUT(0x22F3EA134);
}

unint64_t *sub_22F3EA1A8@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  return sub_22F0C1EF4(a2, a1);
}

uint64_t sub_22F3EA1B4(uint64_t a1)
{
  uint64_t result;
  int v3;
  uint64_t v4;
  uint64_t v5;

  result = 0;
  v3 = *(_DWORD *)(a1 + 8);
  if (v3 > 51)
  {
    switch(v3)
    {
      case '4':
      case '7':
      case '8':
      case '9':
      case ':':
      case '>':
      case 'G':
LABEL_5:
        result = a1 + 16;
        break;
      case '5':
      case '6':
      case ';':
      case '<':
      case '=':
      case '?':
      case '@':
      case 'A':
      case 'C':
      case 'D':
      case 'E':
      case 'F':
        return result;
      case 'B':
LABEL_3:
        result = a1 + 24;
        break;
      default:
        v4 = a1 + 24;
        v5 = a1 + 16;
        if (v3 != 78)
          v5 = 0;
        if (v3 == 77)
          result = v4;
        else
          result = v5;
        break;
    }
  }
  else
  {
    switch(v3)
    {
      case 22:
      case 24:
      case 27:
      case 28:
      case 33:
      case 36:
        goto LABEL_5;
      case 29:
      case 37:
      case 43:
      case 44:
        goto LABEL_3;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_22F3EA23C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  result = sub_22E3CD3D4(a1 + 2032, 8 * (2 * a3) + 32, 3);
  *(_DWORD *)result = a4;
  *(_DWORD *)(result + 4) = a6;
  *(_DWORD *)(result + 8) = 60;
  *(_DWORD *)(result + 12) = a5;
  *(_QWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 24) = a3;
  if (a3)
  {
    v12 = 0;
    v13 = result + 32;
    do
    {
      *(_QWORD *)(v13 + 8 * v12) = 0;
      *(_QWORD *)(v13 + 8 * (a3 + v12++)) = 0;
    }
    while (a3 != v12);
  }
  return result;
}

uint64_t sub_22F3EA2CC(uint64_t result, int a2, uint64_t a3)
{
  *(_QWORD *)(result + 8 * (*(_DWORD *)(result + 24) + a2) + 32) = a3;
  return result;
}

uint64_t sub_22F3EA2E0(uint64_t a1, int a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_22E3CD3D4(a1 + 2032, 8 * (2 * a2) + 32, 3);
  *(_OWORD *)result = xmmword_22F4A6DB0;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = a2;
  if (a2)
  {
    v4 = 0;
    v5 = result + 32;
    do
    {
      *(_QWORD *)(v5 + 8 * v4) = 0;
      *(_QWORD *)(v5 + 8 * (a2 + v4++)) = 0;
    }
    while (a2 != v4);
  }
  return result;
}

uint64_t sub_22F3EA350(uint64_t a1, int a2, int a3)
{
  uint64_t result;

  result = sub_22E3CD3D4(a1 + 2032, 16, 3);
  *(_DWORD *)result = a2;
  *(_DWORD *)(result + 4) = a3;
  *(_DWORD *)(result + 8) = 87;
  *(_BYTE *)(result + 12) = 0;
  return result;
}

uint64_t sub_22F3EA390(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = a1 + 2032;
  if ((a2 & 1) != 0)
  {
    result = sub_22E3CD3D4(v2, 28, 2);
    v4 = 1;
  }
  else
  {
    result = sub_22E3CD3D4(v2, 16, 3);
    v4 = 0;
  }
  *(_QWORD *)result = 0;
  *(_DWORD *)(result + 8) = 87;
  *(_BYTE *)(result + 12) = v4;
  return result;
}

char *sub_22F3EA3DC(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 24], a2, 8 * a3);
  return result;
}

_DWORD *sub_22F3EA3F8(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8)
{
  _DWORD *v15;
  _DWORD *v16;

  v15 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 16 * a6 + 24, 3);
  v16 = v15;
  *v15 = a2;
  v15[1] = a4;
  v15[2] = 63;
  v15[3] = a3;
  v15[4] = a6;
  if (a6)
    memmove(v15 + 6, a5, 8 * a6);
  if (a8)
    memmove(&v16[2 * a6 + 6], a7, 8 * a8);
  return v16;
}

double sub_22F3EA49C(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (2 * a2) + 24, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6DC0;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

char *sub_22F3EA4E0(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 40], a2, 8 * a3);
  return result;
}

char *sub_22F3EA4FC(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 40 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3EA51C(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8, void *__src, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;

  v18 = sub_22E3CD3D4(a1 + 2032, 24 * a6 + 40, 3);
  v19 = v18;
  *(_DWORD *)v18 = a2;
  *(_DWORD *)(v18 + 4) = a4;
  *(_DWORD *)(v18 + 8) = 29;
  *(_DWORD *)(v18 + 12) = a3;
  *(_DWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = 0;
  *(_DWORD *)(v18 + 32) = 89;
  if (a6)
    memmove((void *)(v18 + 40), a5, 8 * a6);
  if (a8)
    memmove((void *)(v19 + 8 * a6 + 40), a7, 8 * a8);
  if (a10)
    memmove((void *)(v19 + 8 * *(unsigned int *)(v19 + 16) + 8 * *(unsigned int *)(v19 + 16) + 40), __src, 8 * a10);
  *(_QWORD *)(v19 + 24) = a11;
  *(_DWORD *)(v19 + 32) = 89;
  return v19;
}

double sub_22F3EA604(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (3 * a2) + 40, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6DD0;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 89;
  return result;
}

char *sub_22F3EA654(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 64], a2, 8 * a3);
  return result;
}

char *sub_22F3EA670(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 64 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EA690(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 64+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EA6B4(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 64+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3EA6DC(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v23;
  uint64_t v24;

  v23 = sub_22E3CD3D4(a1 + 2032, 40 * a6 + 64, 3);
  v24 = v23;
  *(_DWORD *)v23 = a2;
  *(_DWORD *)(v23 + 4) = a4;
  *(_DWORD *)(v23 + 8) = 43;
  *(_DWORD *)(v23 + 12) = a3;
  *(_DWORD *)(v23 + 16) = a6;
  *(_QWORD *)(v23 + 24) = 0;
  *(_DWORD *)(v23 + 32) = 89;
  *(_QWORD *)(v23 + 40) = 0;
  *(_DWORD *)(v23 + 48) = a13;
  *(_DWORD *)(v23 + 52) = a14;
  *(_DWORD *)(v23 + 56) = a15;
  if (a6)
    memmove((void *)(v23 + 64), a5, 8 * a6);
  if (a8)
    memmove((void *)(v24 + 16 * a6 + 64), a7, 8 * a8);
  if (a10)
    memmove((void *)(v24+ 8 * *(unsigned int *)(v24 + 16)+ 8 * *(unsigned int *)(v24 + 16)+ 8 * *(unsigned int *)(v24 + 16)+ 64), a9, 8 * a10);
  if (a12)
    memmove((void *)(v24+ 8 * *(unsigned int *)(v24 + 16)+ 8 * *(unsigned int *)(v24 + 16)+ 8 * *(unsigned int *)(v24 + 16)+ 8 * *(unsigned int *)(v24 + 16)+ 64), a11, 8 * a12);
  *(_QWORD *)(v24 + 24) = a16;
  *(_DWORD *)(v24 + 32) = 89;
  *(_QWORD *)(v24 + 40) = a17;
  return v24;
}

double sub_22F3EA824(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (5 * a2) + 64, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A5A40;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 89;
  *(_QWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 52) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  return result;
}

_DWORD *sub_22F3EA87C(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6)
{
  size_t v11;
  _DWORD *v12;
  _DWORD *v13;

  v11 = 8 * a6;
  v12 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a6 + 24, 3);
  v13 = v12;
  *v12 = a2;
  v12[1] = a4;
  v12[2] = 73;
  v12[3] = a3;
  v12[4] = a6;
  if (a6)
    memmove(v12 + 6, a5, v11);
  return v13;
}

double sub_22F3EA900(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 24, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6DE0;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

char *sub_22F3EA940(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 80+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3EA96C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__src, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v24 = sub_22E3CD3D4(a1 + 2032, 48 * a10 + 88, 3);
  v25 = v24;
  v26 = a10;
  *(_DWORD *)v24 = a2;
  *(_DWORD *)(v24 + 4) = a7;
  *(_DWORD *)(v24 + 8) = 44;
  *(_DWORD *)(v24 + 12) = a3;
  *(_DWORD *)(v24 + 16) = a10;
  *(_QWORD *)(v24 + 24) = 0;
  *(_DWORD *)(v24 + 32) = 89;
  *(_QWORD *)(v24 + 40) = 0;
  *(_DWORD *)(v24 + 48) = a4;
  *(_DWORD *)(v24 + 52) = a5;
  *(_DWORD *)(v24 + 56) = a6;
  if (a10)
    memmove((void *)(v24 + 64), __src, 8 * a10);
  if (a12)
  {
    memmove((void *)(v25 + 8 * a10 + 64), a11, 8 * a12);
    v26 = *(_DWORD *)(v25 + 16);
  }
  if (a14)
  {
    memmove((void *)(v25 + 8 * v26 + 8 * v26 + 64), a13, 8 * a14);
    v26 = *(_DWORD *)(v25 + 16);
  }
  v27 = v25 + 8 * v26 + 8 * v26 + 8 * v26;
  v28 = v27 + 64;
  if (a10 >= 1)
  {
    bzero((void *)(v27 + 64), 8 * a10);
    bzero((void *)(v28 + 8 * v26), 8 * a10);
  }
  v29 = (_QWORD *)(v28 + 8 * v26 + 8 * v26);
  if (v26 != -1)
    bzero(v29 + 2, 8 * (v26 + 1));
  *v29 = a15;
  v29[1] = a16;
  *(_QWORD *)(v25 + 24) = a17;
  *(_DWORD *)(v25 + 32) = 89;
  *(_QWORD *)(v25 + 40) = a18;
  return v25;
}

double sub_22F3EAAD4(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (6 * a2 + 3) + 64, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6DF0;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 89;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  return result;
}

_DWORD *sub_22F3EAB34(uint64_t a1, int a2, int a3, int a4, int a5, const void *a6, uint64_t a7, uint64_t a8)
{
  size_t v15;
  _DWORD *v16;
  _DWORD *v17;

  v15 = 8 * a7;
  v16 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a7 + 32, 3);
  v17 = v16;
  *v16 = a2;
  v16[1] = a5;
  v16[2] = 5;
  v16[3] = a3;
  v16[4] = a7;
  v16[5] = a4;
  if (a7)
    memmove(v16 + 6, a6, v15);
  *(_QWORD *)&v17[2 * a7 + 6] = a8;
  return v17;
}

double sub_22F3EABD0(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + 1) + 24, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F481F50;
  *(_DWORD *)(v3 + 16) = a2;
  *(_DWORD *)(v3 + 20) = 0;
  return result;
}

uint64_t sub_22F3EAC14(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t result;

  result = sub_22E3CD3D4(a1 + 2032, 24, 3);
  *(_DWORD *)result = a3;
  *(_DWORD *)(result + 4) = a5;
  *(_DWORD *)(result + 8) = 4;
  *(_DWORD *)(result + 12) = a4;
  *(_QWORD *)(result + 16) = a2;
  return result;
}

char *sub_22F3EAC64(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 24 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EAC84(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 24+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

_DWORD *sub_22F3EACA8(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8, void *__src, uint64_t a10, void *a11, uint64_t a12)
{
  _DWORD *v19;
  _DWORD *v20;

  v19 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, (32 * a6) | 0x18, 3);
  v20 = v19;
  *v19 = a2;
  v19[1] = a4;
  v19[2] = 15;
  v19[3] = a3;
  v19[4] = a6;
  if (a6)
    memmove(v19 + 6, a5, 8 * a6);
  if (a8)
    memmove(&v20[2 * a6 + 6], a7, 8 * a8);
  if (a10)
    memmove(&v20[2 * v20[4] + 6 + 2 * v20[4]], __src, 8 * a10);
  if (a12)
    memmove(&v20[2 * v20[4] + 6 + 2 * v20[4] + 2 * v20[4]], a11, 8 * a12);
  return v20;
}

double sub_22F3EAD98(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, (32 * (((unint64_t)(4 * a2) >> 2) & 0x3FFFFFFF)) | 0x18, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4658C0;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

_DWORD *sub_22F3EADE0(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8, void *__src, uint64_t a10, void *a11, uint64_t a12)
{
  _DWORD *v19;
  _DWORD *v20;

  v19 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, (32 * a6) | 0x18, 3);
  v20 = v19;
  *v19 = a2;
  v19[1] = a4;
  v19[2] = 14;
  v19[3] = a3;
  v19[4] = a6;
  if (a6)
    memmove(v19 + 6, a5, 8 * a6);
  if (a8)
    memmove(&v20[2 * a6 + 6], a7, 8 * a8);
  if (a10)
    memmove(&v20[2 * v20[4] + 6 + 2 * v20[4]], __src, 8 * a10);
  if (a12)
    memmove(&v20[2 * v20[4] + 6 + 2 * v20[4] + 2 * v20[4]], a11, 8 * a12);
  return v20;
}

double sub_22F3EAED0(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, (32 * (((unint64_t)(4 * a2) >> 2) & 0x3FFFFFFF)) | 0x18, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F495C90;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

char *sub_22F3EAF18(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 104], a2, 8 * a3);
  return result;
}

char *sub_22F3EAF34(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 104 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EAF54(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 104+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EAF78(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 104+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EAFA0(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 104+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

unsigned int *sub_22F3EAFCC(unsigned int *result, const void *a2, uint64_t a3)
{
  uint64_t v3;

  if (a3)
  {
    v3 = result[4];
    return (unsigned int *)memmove(&result[2 * v3 + 26 + 2 * v3 + 2 * v3 + 2 * v3 + 2 * v3 + 2 * v3], a2, 8 * a3);
  }
  return result;
}

unsigned int *sub_22F3EAFFC(unsigned int *result, const void *a2, uint64_t a3)
{
  uint64_t v3;

  if (a3)
  {
    v3 = result[4];
    return (unsigned int *)memmove(&result[2 * v3 + 26 + 2 * v3 + 2 * v3 + 2 * v3 + 2 * v3 + 2 * v3 + 2 * v3], a2, 8 * a3);
  }
  return result;
}

uint64_t sub_22F3EB030(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__src, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, uint64_t a19, void *a20,uint64_t a21,void *a22,uint64_t a23,void *a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = 5;
  if (a7 == 1)
    v34 = 8;
  v35 = sub_22E3CD3D4(a1 + 2032, 8 * a10 * v34 + 104, 3);
  v36 = v35;
  *(_DWORD *)v35 = a2;
  *(_DWORD *)(v35 + 4) = a6;
  *(_DWORD *)(v35 + 8) = 66;
  *(_DWORD *)(v35 + 12) = a3;
  *(_DWORD *)(v35 + 16) = a10;
  *(_QWORD *)(v35 + 24) = 0;
  *(_DWORD *)(v35 + 32) = 89;
  *(_QWORD *)(v35 + 40) = 0;
  *(_DWORD *)(v35 + 48) = a7;
  *(_DWORD *)(v35 + 52) = a4;
  *(_DWORD *)(v35 + 56) = a5;
  *(_QWORD *)(v35 + 64) = a11;
  *(_QWORD *)(v35 + 72) = a12;
  v37 = *(_QWORD *)(a13 + 16);
  *(_OWORD *)(v35 + 80) = *(_OWORD *)a13;
  *(_QWORD *)(v35 + 96) = v37;
  if (a10)
    memmove((void *)(v35 + 104), __src, 8 * a10);
  if (a15)
    memmove((void *)(v36 + 8 * a10 + 104), a14, 8 * a15);
  if (a17)
    memmove((void *)(v36 + 8 * *(unsigned int *)(v36 + 16) + 8 * *(unsigned int *)(v36 + 16) + 104), a16, 8 * a17);
  if (a19)
    memmove((void *)(v36+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 104), a18, 8 * a19);
  if (a21)
    memmove((void *)(v36+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 104), a20, 8 * a21);
  *(_QWORD *)(v36 + 24) = a28;
  *(_DWORD *)(v36 + 32) = 89;
  *(_QWORD *)(v36 + 40) = a29;
  if (a7 == 1)
  {
    if (a23)
      memmove((void *)(v36+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 8 * *(unsigned int *)(v36 + 16)+ 104), a22, 8 * a23);
    if (a25)
    {
      v38 = *(unsigned int *)(v36 + 16);
      memmove((void *)(v36 + 8 * v38 + 8 * v38 + 8 * v38 + 8 * v38 + 8 * v38 + 8 * v38 + 104), a24, 8 * a25);
    }
    if (a27)
    {
      v39 = *(unsigned int *)(v36 + 16);
      memmove((void *)(v36 + 8 * v39 + 8 * v39 + 8 * v39 + 8 * v39 + 8 * v39 + 8 * v39 + 8 * v39 + 104), a26, 8 * a27);
    }
  }
  return v36;
}

double sub_22F3EB26C(uint64_t a1, int a2, int a3)
{
  int v5;
  uint64_t v6;
  double result;

  if (a3 == 1)
    v5 = 8;
  else
    v5 = 5;
  v6 = sub_22E3CD3D4(a1 + 2032, 8 * (v5 * a2) + 104, 3);
  result = 0.0;
  *(_OWORD *)v6 = xmmword_22F4A6E00;
  *(_DWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = 0;
  *(_DWORD *)(v6 + 32) = 89;
  *(_QWORD *)(v6 + 40) = 0;
  *(_DWORD *)(v6 + 52) = 0;
  *(_DWORD *)(v6 + 56) = 0;
  *(_QWORD *)(v6 + 96) = 0;
  *(_QWORD *)(v6 + 72) = 0;
  *(_QWORD *)(v6 + 80) = 0;
  *(_QWORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 88) = 0;
  *(_DWORD *)(v6 + 48) = a3;
  return result;
}

char *sub_22F3EB2EC(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 96], a2, 8 * a3);
  return result;
}

char *sub_22F3EB308(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 96 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EB328(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 96+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

char *sub_22F3EB34C(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 96+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3EB374(uint64_t a1, int a2, int a3, int a4, int a5, const void *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = sub_22E3CD3D4(a1 + 2032, 40 * a7 + 96, 3);
  v27 = v26;
  *(_DWORD *)v26 = a2;
  *(_DWORD *)(v26 + 4) = a5;
  *(_DWORD *)(v26 + 8) = 77;
  *(_DWORD *)(v26 + 12) = a3;
  *(_DWORD *)(v26 + 16) = a7;
  *(_QWORD *)(v26 + 24) = 0;
  *(_DWORD *)(v26 + 32) = 89;
  *(_QWORD *)(v26 + 40) = 0;
  *(_DWORD *)(v26 + 48) = a4;
  *(_QWORD *)(v26 + 56) = a9;
  *(_QWORD *)(v26 + 64) = a10;
  v28 = *(_QWORD *)(a11 + 16);
  *(_OWORD *)(v26 + 72) = *(_OWORD *)a11;
  *(_QWORD *)(v26 + 88) = v28;
  if (a7)
    memmove((void *)(v26 + 96), a6, 8 * a7);
  if (a13)
    memmove((void *)(v27 + 8 * a7 + 96), a12, 8 * a13);
  if (a15)
    memmove((void *)(v27 + 8 * *(unsigned int *)(v27 + 16) + 8 * *(unsigned int *)(v27 + 16) + 96), a14, 8 * a15);
  if (a17)
    memmove((void *)(v27+ 8 * *(unsigned int *)(v27 + 16)+ 8 * *(unsigned int *)(v27 + 16)+ 8 * *(unsigned int *)(v27 + 16)+ 96), a16, 8 * a17);
  if (a19)
    memmove((void *)(v27+ 8 * *(unsigned int *)(v27 + 16)+ 8 * *(unsigned int *)(v27 + 16)+ 8 * *(unsigned int *)(v27 + 16)+ 8 * *(unsigned int *)(v27 + 16)+ 96), a18, 8 * a19);
  *(_QWORD *)(v27 + 24) = a20;
  *(_DWORD *)(v27 + 32) = 89;
  *(_QWORD *)(v27 + 40) = a21;
  return v27;
}

double sub_22F3EB4E8(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (5 * a2) + 96, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6E10;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 89;
  *(_QWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 80) = 0;
  return result;
}

char *sub_22F3EB550(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4)+ 96+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)+ 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

uint64_t sub_22F3EB57C(uint64_t a1, int a2, int a3, int a4, int a5, const void *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, void *a16, uint64_t a17, void *a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = sub_22E3CD3D4(a1 + 2032, 48 * a7 + 96, 3);
  v29 = v28;
  *(_DWORD *)v28 = a2;
  *(_DWORD *)(v28 + 4) = a5;
  *(_DWORD *)(v28 + 8) = 37;
  *(_DWORD *)(v28 + 12) = a3;
  *(_DWORD *)(v28 + 16) = a7;
  *(_QWORD *)(v28 + 24) = 0;
  *(_DWORD *)(v28 + 32) = 89;
  *(_QWORD *)(v28 + 40) = 0;
  *(_DWORD *)(v28 + 48) = a4;
  *(_QWORD *)(v28 + 56) = a9;
  *(_QWORD *)(v28 + 64) = a10;
  v30 = *(_QWORD *)(a11 + 16);
  *(_OWORD *)(v28 + 72) = *(_OWORD *)a11;
  *(_QWORD *)(v28 + 88) = v30;
  if (a7)
    memmove((void *)(v28 + 96), a6, 8 * a7);
  if (a13)
    memmove((void *)(v29 + 8 * a7 + 96), a12, 8 * a13);
  if (a15)
    memmove((void *)(v29 + 8 * *(unsigned int *)(v29 + 16) + 8 * *(unsigned int *)(v29 + 16) + 96), a14, 8 * a15);
  if (a17)
    memmove((void *)(v29+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 96), a16, 8 * a17);
  if (a19)
    memmove((void *)(v29+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 96), a18, 8 * a19);
  if (a21)
    memmove((void *)(v29+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 8 * *(unsigned int *)(v29 + 16)+ 96), a20, 8 * a21);
  *(_QWORD *)(v29 + 24) = a22;
  *(_DWORD *)(v29 + 32) = 89;
  *(_QWORD *)(v29 + 40) = a23;
  return v29;
}

double sub_22F3EB720(uint64_t a1, int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * (6 * a2) + 96, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6E20;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 89;
  *(_QWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 80) = 0;
  return result;
}

_DWORD *sub_22F3EB78C(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6)
{
  _DWORD *v11;
  _DWORD *v12;

  v11 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a6 + 24, 3);
  v12 = v11;
  v11[3] = a3;
  v11[4] = a6;
  v11[1] = a4;
  v11[2] = 76;
  *v11 = a2;
  if (a6)
    memmove(v11 + 6, a5, 8 * a6);
  return v12;
}

double sub_22F3EB808(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 24, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4A6E30;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

uint64_t sub_22F3EB848(uint64_t a1)
{
  uint64_t result;

  result = sub_22E3CD3D4(a1 + 2032, 12, 3);
  *(_QWORD *)result = 0;
  *(_DWORD *)(result + 8) = 32;
  return result;
}

uint64_t sub_22F3EB874(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  uint64_t result;

  result = sub_22E3CD3D4(a1 + 2032, 24, 3);
  *(_DWORD *)(result + 8) = 61;
  *(_DWORD *)(result + 12) = a3;
  *(_DWORD *)result = a2;
  *(_DWORD *)(result + 4) = a4;
  *(_QWORD *)(result + 16) = a5;
  return result;
}

double sub_22F3EB8C4(uint64_t a1)
{
  _OWORD *v1;
  double result;

  v1 = (_OWORD *)sub_22E3CD3D4(a1 + 2032, 24, 3);
  result = 0.0;
  *v1 = xmmword_22F4A6E40;
  return result;
}

uint64_t sub_22F3EB8F0(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int a6, const void *a7, uint64_t a8)
{
  size_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = 8 * a8;
  v16 = sub_22E3CD3D4(a1 + 2032, 8 * a8 + 40, 3);
  v17 = v16;
  *(_DWORD *)v16 = a2;
  *(_DWORD *)(v16 + 4) = a6;
  *(_DWORD *)(v16 + 8) = 6;
  *(_DWORD *)(v16 + 12) = a3;
  *(_DWORD *)(v16 + 16) = a8;
  *(_QWORD *)(v16 + 24) = a4;
  *(_DWORD *)(v16 + 32) = a5;
  if (a8)
    memmove((void *)(v16 + 40), a7, v15);
  return v17;
}

double sub_22F3EB98C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 40, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F4605B0;
  *(_DWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  return result;
}

_DWORD *sub_22F3EB9D4(uint64_t a1, int a2, int a3, int a4, const void *a5, uint64_t a6)
{
  size_t v11;
  _DWORD *v12;
  _DWORD *v13;

  v11 = 8 * a6;
  v12 = (_DWORD *)sub_22E3CD3D4(a1 + 2032, 8 * a6 + 32, 3);
  v13 = v12;
  *v12 = a2;
  v12[1] = a4;
  v12[2] = 30;
  v12[3] = a3;
  v12[4] = a6;
  if (a6)
    memmove(v12 + 6, a5, v11);
  return v13;
}

double sub_22F3EBA58(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  double result;

  v3 = sub_22E3CD3D4(a1 + 2032, 8 * a2 + 24, 3);
  result = 0.0;
  *(_OWORD *)v3 = xmmword_22F455CE0;
  *(_DWORD *)(v3 + 16) = a2;
  return result;
}

double sub_22F3EBA98(uint64_t a1)
{
  uint64_t v1;
  double result;

  v1 = sub_22E3CD3D4(a1 + 2032, 24, 3);
  result = 0.0;
  *(_OWORD *)v1 = xmmword_22F4A6E50;
  *(_QWORD *)(v1 + 16) = 0;
  return result;
}

_DWORD *sub_22F3EBAC8(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, int a8, void *__src, uint64_t a10, unsigned int a11)
{
  uint64_t v18;
  _DWORD *v19;

  v18 = sub_22E3CD3D4(a1 + 2032, 8 * (a10 + a11) + 48, 3);
  v19 = (_DWORD *)v18;
  *(_DWORD *)v18 = a2;
  *(_DWORD *)(v18 + 4) = a4;
  *(_DWORD *)(v18 + 8) = 18;
  *(_DWORD *)(v18 + 12) = a3;
  *(_DWORD *)(v18 + 16) = a10;
  *(_QWORD *)(v18 + 20) = 8;
  *(_DWORD *)(v18 + 28) = 0;
  *(_DWORD *)(v18 + 32) = a11;
  if (a10)
    memmove((void *)(v18 + 40), __src, 8 * a10);
  v19[5] = a6;
  v19[6] = a7;
  v19[7] = a8;
  *(_QWORD *)&v19[2 * a10 + 10] = a5;
  if (a11)
    bzero(&v19[2 * a10 + 12], 8 * a11);
  return v19;
}

uint64_t sub_22F3EBBA0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8 * *(unsigned int *)(result + 16) + 40) = a2;
  return result;
}

uint64_t sub_22F3EBBB0(uint64_t result, int a2, uint64_t a3)
{
  *(_QWORD *)(result + 8 * *(unsigned int *)(result + 16) + 8 * (a2 + 1) + 40) = a3;
  return result;
}

double sub_22F3EBBC8(uint64_t a1, int a2, int a3)
{
  uint64_t v5;
  double result;

  v5 = sub_22E3CD3D4(a1 + 2032, 8 * (a2 + a3 + 1) + 40, 3);
  *(_OWORD *)v5 = xmmword_22F4A6E60;
  *(_DWORD *)(v5 + 16) = a2;
  *(_QWORD *)&result = 8;
  *(_QWORD *)(v5 + 20) = 8;
  *(_DWORD *)(v5 + 28) = 0;
  *(_DWORD *)(v5 + 32) = a3;
  return result;
}

uint64_t sub_22F3EBC24(uint64_t a1, int a2)
{
  return *(_QWORD *)(a1 + 8 * *(unsigned int *)(a1 + 16) + 8 * (a2 + 1) + 40);
}

uint64_t sub_22F3EBC3C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8 * *(unsigned int *)(a1 + 16) + 40);
}

double sub_22F3EBC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_22E3CD3D4(a1 + 2032, ((8 * ((2 * *(_DWORD *)a2) + (unint64_t)*(unsigned int *)(a2 + 4))+ 4 * (*(_DWORD *)(a2 + 8) + *(_DWORD *)(a2 + 4))+ 4) & 0x1FFFFFFFF8)+ 16 * *(unsigned int *)(a2 + 12)+ 136, 3);
  return sub_22F3EF0C8(v3, (__int128 *)a2);
}

double sub_22F3EBCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_22E3CD3D4(a1 + 2032, ((8 * ((2 * *(_DWORD *)a2) + (unint64_t)*(unsigned int *)(a2 + 4))+ 4 * (*(_DWORD *)(a2 + 8) + *(_DWORD *)(a2 + 4))+ 4) & 0x1FFFFFFFF8)+ 16 * *(unsigned int *)(a2 + 12)+ 104, 3);
  return sub_22F3EF134(v3, (__int128 *)a2);
}

double sub_22F3EBCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_22E3CD3D4(a1 + 2032, ((8 * ((2 * *(_DWORD *)a2) + (unint64_t)*(unsigned int *)(a2 + 4))+ 4 * (*(_DWORD *)(a2 + 8) + *(_DWORD *)(a2 + 4))+ 4) & 0x1FFFFFFFF8)+ 16 * *(unsigned int *)(a2 + 12)+ 104, 3);
  return sub_22F3EF184(v3, (__int128 *)a2);
}

char *sub_22F3EBD54(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 80], a2, 8 * a3);
  return result;
}

char *sub_22F3EBD70(char *result, const void *a2, uint64_t a3)
{
  if (a3)
    return (char *)memmove(&result[8 * *((unsigned int *)result + 4) + 80 + 8 * *((unsigned int *)result + 4)], a2, 8 * a3);
  return result;
}

_DWORD *sub_22F3EBD90(uint64_t a1, _DWORD *a2, const void *a3, uint64_t a4, const void *a5, uint64_t a6, const void *a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t *v20;
  int *v21;
  int v22;
  uint64_t v23;
  _DWORD *v24;
  int v25;
  int v26;

  v16 = sub_22F0C1F54(a9, a10);
  v17 = v16;
  if (a12)
  {
    v18 = 0;
    v19 = 144 * a12;
    v20 = (uint64_t *)a11;
    v21 = (int *)(a11 + 8);
    do
    {
      v22 = *v21;
      v21 += 36;
      v18 += v22;
      v19 -= 144;
    }
    while (v19);
  }
  else
  {
    v20 = (uint64_t *)a11;
    v18 = 0;
  }
  v23 = sub_22E3CD3D4(a1 + 2032, ((8 * ((3 * a4) + (unint64_t)v16) + 4 * (v16 + a12) + 4) & 0x1FFFFFFFF8)+ 16 * v18+ 80, 3);
  v24 = (_DWORD *)v23;
  v25 = a2[1];
  v26 = a2[2];
  *(_DWORD *)v23 = *a2;
  *(_DWORD *)(v23 + 4) = v26;
  *(_DWORD *)(v23 + 8) = 90;
  *(_DWORD *)(v23 + 12) = v25;
  *(_DWORD *)(v23 + 16) = a4;
  *(_DWORD *)(v23 + 20) = v17;
  *(_DWORD *)(v23 + 24) = a12;
  *(_DWORD *)(v23 + 28) = v18;
  *(_BYTE *)(v23 + 32) = 0;
  *(_QWORD *)(v23 + 72) = 0;
  *(_DWORD *)(v23 + 64) = 0;
  *(_QWORD *)(v23 + 48) = 0;
  *(_QWORD *)(v23 + 56) = 0;
  *(_QWORD *)(v23 + 40) = 0;
  if (a4)
    memmove((void *)(v23 + 80), a3, 8 * a4);
  if (a6)
    memmove(&v24[2 * a4 + 20], a5, 8 * a6);
  if (a8)
    memmove(&v24[2 * v24[4] + 20 + 2 * v24[4]], a7, 8 * a8);
  sub_22F0C28D4(v24, a9, a10, v20);
  return v24;
}

__n128 sub_22F3EBF04(uint64_t a1, _DWORD *a2)
{
  unsigned __int32 *v3;
  uint64_t v4;
  __n128 result;

  v3 = a2 + 1;
  v4 = sub_22E3CD3D4(a1 + 2032, ((8 * ((3 * *a2) + (unint64_t)a2[1])+ 4 * (a2[2] + a2[1])+ 4) & 0x1FFFFFFFF8)+ 16 * a2[3]+ 80, 3);
  result = *(__n128 *)a2;
  *(_OWORD *)v4 = xmmword_22F4A6E70;
  result.n128_u32[1] = *v3;
  result.n128_u64[1] = *((_QWORD *)a2 + 1);
  *(__n128 *)(v4 + 16) = result;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 64) = 0;
  return result;
}

unsigned int *sub_22F3EBF90(uint64_t a1, _DWORD *a2, const void *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  unsigned int *v23;
  int v24;
  int v25;

  v16 = sub_22F0C1F54(a5, a6);
  v17 = v16;
  v18 = 0;
  if (a8)
  {
    v19 = 144 * a8;
    v20 = (int *)(a7 + 1);
    do
    {
      v21 = *v20;
      v20 += 36;
      v18 += v21;
      v19 -= 144;
    }
    while (v19);
  }
  v22 = sub_22E3CD3D4(a1 + 2032, ((8 * (a4 + (unint64_t)v16) + 4 * (v16 + a8) + 4) & 0x1FFFFFFFF8)+ 16 * v18+ 80, 3);
  v23 = (unsigned int *)v22;
  v24 = a2[1];
  v25 = a2[2];
  *(_DWORD *)v22 = *a2;
  *(_DWORD *)(v22 + 4) = v25;
  *(_DWORD *)(v22 + 8) = 89;
  *(_DWORD *)(v22 + 12) = v24;
  *(_DWORD *)(v22 + 16) = a4;
  *(_DWORD *)(v22 + 20) = v17;
  *(_DWORD *)(v22 + 24) = a8;
  *(_DWORD *)(v22 + 28) = v18;
  *(_BYTE *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  *(_DWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 48) = 0;
  *(_QWORD *)(v22 + 56) = 0;
  *(_QWORD *)(v22 + 40) = 0;
  if (a4)
    memmove((void *)(v22 + 80), a3, 8 * a4);
  sub_22F0C2AD0(v23, a5, a6, a7);
  return v23;
}

__n128 sub_22F3EC0B0(uint64_t a1, __n128 *a2)
{
  unsigned __int32 *v3;
  uint64_t v4;
  __n128 result;

  v3 = &a2->n128_u32[1];
  v4 = sub_22E3CD3D4(a1 + 2032, ((8 * (a2->n128_u32[1] + (unint64_t)a2->n128_u32[0]) + 4 * (a2->n128_u32[2] + a2->n128_u32[1]) + 4) & 0x1FFFFFFFF8)+ 16 * a2->n128_u32[3]+ 80, 3);
  result = *a2;
  *(_OWORD *)v4 = xmmword_22F4A6E80;
  result.n128_u32[1] = *v3;
  result.n128_u64[1] = a2->n128_u64[1];
  *(__n128 *)(v4 + 16) = result;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 64) = 0;
  return result;
}

unsigned int *sub_22F3EC138(uint64_t a1, _DWORD *a2, const void *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  unsigned int *v23;
  int v24;
  int v25;

  v16 = sub_22F0C1F54(a5, a6);
  v17 = v16;
  v18 = 0;
  if (a8)
  {
    v19 = 144 * a8;
    v20 = (int *)(a7 + 1);
    do
    {
      v21 = *v20;
      v20 += 36;
      v18 += v21;
      v19 -= 144;
    }
    while (v19);
  }
  v22 = sub_22E3CD3D4(a1 + 2032, ((8 * (a4 + (unint64_t)v16) + 4 * (v16 + a8) + 4) & 0x1FFFFFFFF8)+ 16 * v18+ 80, 3);
  v23 = (unsigned int *)v22;
  v24 = a2[1];
  v25 = a2[2];
  *(_DWORD *)v22 = *a2;
  *(_DWORD *)(v22 + 4) = v25;
  *(_DWORD *)(v22 + 8) = 42;
  *(_DWORD *)(v22 + 12) = v24;
  *(_DWORD *)(v22 + 16) = a4;
  *(_DWORD *)(v22 + 20) = v17;
  *(_DWORD *)(v22 + 24) = a8;
  *(_DWORD *)(v22 + 28) = v18;
  *(_BYTE *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  *(_DWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 48) = 0;
  *(_QWORD *)(v22 + 56) = 0;
  *(_QWORD *)(v22 + 40) = 0;
  if (a4)
    memmove((void *)(v22 + 80), a3, 8 * a4);
  sub_22F0C2AD0(v23, a5, a6, a7);
  return v23;
}

__n128 sub_22F3EC258(uint64_t a1, __n128 *a2)
{
  unsigned __int32 *v3;
  uint64_t v4;
  __n128 result;

  v3 = &a2->n128_u32[1];
  v4 = sub_22E3CD3D4(a1 + 2032, ((8 * (a2->n128_u32[1] + (unint64_t)a2->n128_u32[0]) + 4 * (a2->n128_u32[2] + a2->n128_u32[1]) + 4) & 0x1FFFFFFFF8)+ 16 * a2->n128_u32[3]+ 80, 3);
  result = *a2;
  *(_OWORD *)v4 = xmmword_22F4A6E90;
  result.n128_u32[1] = *v3;
  result.n128_u64[1] = a2->n128_u64[1];
  *(__n128 *)(v4 + 16) = result;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 64) = 0;
  return result;
}

unsigned int *sub_22F3EC2E0(uint64_t a1, _DWORD *a2, const void *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  unsigned int *v23;
  int v24;
  int v25;

  v16 = sub_22F0C1F54(a5, a6);
  v17 = v16;
  v18 = 0;
  if (a8)
  {
    v19 = 144 * a8;
    v20 = (int *)(a7 + 1);
    do
    {
      v21 = *v20;
      v20 += 36;
      v18 += v21;
      v19 -= 144;
    }
    while (v19);
  }
  v22 = sub_22E3CD3D4(a1 + 2032, ((8 * (a4 + (unint64_t)v16) + 4 * (v16 + a8) + 4) & 0x1FFFFFFFF8)+ 16 * v18+ 80, 3);
  v23 = (unsigned int *)v22;
  v24 = a2[1];
  v25 = a2[2];
  *(_DWORD *)v22 = *a2;
  *(_DWORD *)(v22 + 4) = v25;
  *(_DWORD *)(v22 + 8) = 34;
  *(_DWORD *)(v22 + 12) = v24;
  *(_DWORD *)(v22 + 16) = a4;
  *(_DWORD *)(v22 + 20) = v17;
  *(_DWORD *)(v22 + 24) = a8;
  *(_DWORD *)(v22 + 28) = v18;
  *(_BYTE *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 72) = 0;
  *(_DWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 48) = 0;
  *(_QWORD *)(v22 + 56) = 0;
  *(_QWORD *)(v22 + 40) = 0;
  if (a4)
    memmove((void *)(v22 + 80), a3, 8 * a4);
  sub_22F0C2AD0(v23, a5, a6, a7);
  return v23;
}

