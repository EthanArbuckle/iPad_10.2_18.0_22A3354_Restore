BOOL static EditorialFilterKind.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C27C684()
{
  return 0;
}

uint64_t sub_23C27C690()
{
  return 0;
}

void sub_23C27C69C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23C27C6A8()
{
  sub_23C27D350();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C6D0()
{
  sub_23C27D350();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C6F8(char a1)
{
  return *(_QWORD *)&aBodyfocudurati[8 * a1];
}

BOOL sub_23C27C718(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23C27C730()
{
  return sub_23C34EC88();
}

uint64_t sub_23C27C75C()
{
  char *v0;

  return sub_23C27C6F8(*v0);
}

uint64_t sub_23C27C764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C27D4D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C27C788(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23C27C794()
{
  sub_23C27D0EC();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C7BC()
{
  sub_23C27D0EC();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C7E4()
{
  sub_23C27D30C();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C80C()
{
  sub_23C27D30C();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C834()
{
  sub_23C27D2C8();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C85C()
{
  sub_23C27D2C8();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C884()
{
  sub_23C27D284();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C8AC()
{
  sub_23C27D284();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C8D4()
{
  sub_23C27D240();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C8FC()
{
  sub_23C27D240();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C924()
{
  sub_23C27D1FC();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C94C()
{
  sub_23C27D1FC();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C974@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23C27C9A0()
{
  sub_23C27D1B8();
  return sub_23C34ECD0();
}

uint64_t sub_23C27C9C8()
{
  sub_23C27D1B8();
  return sub_23C34ECDC();
}

uint64_t sub_23C27C9F0()
{
  sub_23C27D174();
  return sub_23C34ECD0();
}

uint64_t sub_23C27CA18()
{
  sub_23C27D174();
  return sub_23C34ECDC();
}

uint64_t sub_23C27CA40()
{
  sub_23C27D130();
  return sub_23C34ECD0();
}

uint64_t sub_23C27CA68()
{
  sub_23C27D130();
  return sub_23C34ECDC();
}

void *static EditorialFilterKind.allCases.getter()
{
  return &unk_250D19A38;
}

void sub_23C27CA9C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250D19A38;
}

void EditorialFilterKind.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57500);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v34 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57508);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v31 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57510);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v28 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57518);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v25 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57520);
  v23 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v22 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57528);
  v20 = *(_QWORD *)(v21 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v19 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57530);
  v17[2] = *(_QWORD *)(v18 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v17[1] = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57538);
  MEMORY[0x24BDAC7A8](v17[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57540);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57548);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C27D0EC();
  sub_23C34ECC4();
  __asm { BR              X10 }
}

uint64_t sub_23C27CDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 89) = 0;
  sub_23C27D350();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23C34EBD4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v2, v5);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24261C654]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23C27D0EC()
{
  unint64_t result;

  result = qword_256B57550;
  if (!qword_256B57550)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F96C, &type metadata for EditorialFilterKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57550);
  }
  return result;
}

unint64_t sub_23C27D130()
{
  unint64_t result;

  result = qword_256B57558;
  if (!qword_256B57558)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F91C, &type metadata for EditorialFilterKind.TraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57558);
  }
  return result;
}

unint64_t sub_23C27D174()
{
  unint64_t result;

  result = qword_256B57560;
  if (!qword_256B57560)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F8CC, &type metadata for EditorialFilterKind.TrainerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57560);
  }
  return result;
}

unint64_t sub_23C27D1B8()
{
  unint64_t result;

  result = qword_256B57568;
  if (!qword_256B57568)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F87C, &type metadata for EditorialFilterKind.ThemeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57568);
  }
  return result;
}

unint64_t sub_23C27D1FC()
{
  unint64_t result;

  result = qword_256B57570;
  if (!qword_256B57570)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F82C, &type metadata for EditorialFilterKind.SkillLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57570);
  }
  return result;
}

unint64_t sub_23C27D240()
{
  unint64_t result;

  result = qword_256B57578;
  if (!qword_256B57578)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F7DC, &type metadata for EditorialFilterKind.MusicGenreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57578);
  }
  return result;
}

unint64_t sub_23C27D284()
{
  unint64_t result;

  result = qword_256B57580;
  if (!qword_256B57580)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F78C, &type metadata for EditorialFilterKind.ModalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57580);
  }
  return result;
}

unint64_t sub_23C27D2C8()
{
  unint64_t result;

  result = qword_256B57588;
  if (!qword_256B57588)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F73C, &type metadata for EditorialFilterKind.EquipmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57588);
  }
  return result;
}

unint64_t sub_23C27D30C()
{
  unint64_t result;

  result = qword_256B57590;
  if (!qword_256B57590)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F6EC, &type metadata for EditorialFilterKind.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57590);
  }
  return result;
}

unint64_t sub_23C27D350()
{
  unint64_t result;

  result = qword_256B57598;
  if (!qword_256B57598)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F69C, &type metadata for EditorialFilterKind.BodyFocusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57598);
  }
  return result;
}

uint64_t EditorialFilterKind.init(from:)(_QWORD *a1)
{
  return sub_23C27D840(a1);
}

uint64_t sub_23C27D3A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C27D840(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23C27D3D0(_QWORD *a1)
{
  unsigned __int8 *v1;

  EditorialFilterKind.encode(to:)(a1, *v1);
}

uint64_t EditorialFilterKind.hash(into:)()
{
  return sub_23C34EC88();
}

uint64_t EditorialFilterKind.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C27D450()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C27D494()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C27D4D4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x75636F4679646F62 && a2 == 0xE900000000000073;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656D7069757165 && a2 == 0xE900000000000074 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6547636973756DLL && a2 == 0xEA00000000006572 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x76654C6C6C696B73 && a2 == 0xEA00000000006C65 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D656874 && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72656E69617274 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7469617274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_23C27D840(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[7];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57660);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8]();
  v54 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57668);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8]();
  v53 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57670);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8]();
  v52 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57678);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8]();
  v50 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57680);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8]();
  v51 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57688);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8]();
  v49 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57690);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8]();
  v48 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57698);
  v31[6] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8]();
  v47 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576A0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8]();
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576A8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8]();
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23C27D0EC();
  v23 = v56;
  sub_23C34ECB8();
  if (!v23)
  {
    v31[4] = v17;
    v31[2] = v15;
    v31[3] = v14;
    v56 = v19;
    v31[5] = 0;
    v24 = v21;
    v25 = sub_23C34EBBC();
    if (*(_QWORD *)(v25 + 16) == 1)
    {
      v26 = (char *)&loc_23C27DBCC + 4 * byte_23C34F0D9[*(unsigned __int8 *)(v25 + 32)];
      v31[1] = *(unsigned __int8 *)(v25 + 32);
      __asm { BR              X9 }
    }
    v27 = sub_23C34EAC0();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v29 = &type metadata for EditorialFilterKind;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

unint64_t sub_23C27DFE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B575A0;
  if (!qword_256B575A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B575A8);
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256B575A0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24261C660](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23C27E074()
{
  unint64_t result;

  result = qword_256B575B0;
  if (!qword_256B575B0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for EditorialFilterKind, &type metadata for EditorialFilterKind);
    atomic_store(result, (unint64_t *)&qword_256B575B0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for EditorialFilterKind()
{
  return &type metadata for EditorialFilterKind;
}

uint64_t _s20FitnessProductDetail19EditorialFilterKindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20FitnessProductDetail19EditorialFilterKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23C27E1C0 + 4 * byte_23C34F0E7[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23C27E1F4 + 4 * byte_23C34F0E2[v4]))();
}

uint64_t sub_23C27E1F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C27E1FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C27E204);
  return result;
}

uint64_t sub_23C27E210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C27E218);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23C27E21C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C27E224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C27E230(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23C27E238(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.CodingKeys()
{
  return &type metadata for EditorialFilterKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.BodyFocusCodingKeys()
{
  return &type metadata for EditorialFilterKind.BodyFocusCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.DurationCodingKeys()
{
  return &type metadata for EditorialFilterKind.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.EquipmentCodingKeys()
{
  return &type metadata for EditorialFilterKind.EquipmentCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.ModalityCodingKeys()
{
  return &type metadata for EditorialFilterKind.ModalityCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.MusicGenreCodingKeys()
{
  return &type metadata for EditorialFilterKind.MusicGenreCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.SkillLevelCodingKeys()
{
  return &type metadata for EditorialFilterKind.SkillLevelCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.ThemeCodingKeys()
{
  return &type metadata for EditorialFilterKind.ThemeCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.TrainerCodingKeys()
{
  return &type metadata for EditorialFilterKind.TrainerCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialFilterKind.TraitCodingKeys()
{
  return &type metadata for EditorialFilterKind.TraitCodingKeys;
}

unint64_t sub_23C27E2E4()
{
  unint64_t result;

  result = qword_256B575B8;
  if (!qword_256B575B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F674, &type metadata for EditorialFilterKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575B8);
  }
  return result;
}

unint64_t sub_23C27E32C()
{
  unint64_t result;

  result = qword_256B575C0;
  if (!qword_256B575C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F594, &type metadata for EditorialFilterKind.BodyFocusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575C0);
  }
  return result;
}

unint64_t sub_23C27E374()
{
  unint64_t result;

  result = qword_256B575C8;
  if (!qword_256B575C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F5BC, &type metadata for EditorialFilterKind.BodyFocusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575C8);
  }
  return result;
}

unint64_t sub_23C27E3BC()
{
  unint64_t result;

  result = qword_256B575D0;
  if (!qword_256B575D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F544, &type metadata for EditorialFilterKind.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575D0);
  }
  return result;
}

unint64_t sub_23C27E404()
{
  unint64_t result;

  result = qword_256B575D8;
  if (!qword_256B575D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F56C, &type metadata for EditorialFilterKind.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575D8);
  }
  return result;
}

unint64_t sub_23C27E44C()
{
  unint64_t result;

  result = qword_256B575E0;
  if (!qword_256B575E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F4F4, &type metadata for EditorialFilterKind.EquipmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575E0);
  }
  return result;
}

unint64_t sub_23C27E494()
{
  unint64_t result;

  result = qword_256B575E8;
  if (!qword_256B575E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F51C, &type metadata for EditorialFilterKind.EquipmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575E8);
  }
  return result;
}

unint64_t sub_23C27E4DC()
{
  unint64_t result;

  result = qword_256B575F0;
  if (!qword_256B575F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F4A4, &type metadata for EditorialFilterKind.ModalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575F0);
  }
  return result;
}

unint64_t sub_23C27E524()
{
  unint64_t result;

  result = qword_256B575F8;
  if (!qword_256B575F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F4CC, &type metadata for EditorialFilterKind.ModalityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B575F8);
  }
  return result;
}

unint64_t sub_23C27E56C()
{
  unint64_t result;

  result = qword_256B57600;
  if (!qword_256B57600)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F454, &type metadata for EditorialFilterKind.MusicGenreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57600);
  }
  return result;
}

unint64_t sub_23C27E5B4()
{
  unint64_t result;

  result = qword_256B57608;
  if (!qword_256B57608)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F47C, &type metadata for EditorialFilterKind.MusicGenreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57608);
  }
  return result;
}

unint64_t sub_23C27E5FC()
{
  unint64_t result;

  result = qword_256B57610;
  if (!qword_256B57610)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F404, &type metadata for EditorialFilterKind.SkillLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57610);
  }
  return result;
}

unint64_t sub_23C27E644()
{
  unint64_t result;

  result = qword_256B57618;
  if (!qword_256B57618)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F42C, &type metadata for EditorialFilterKind.SkillLevelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57618);
  }
  return result;
}

unint64_t sub_23C27E68C()
{
  unint64_t result;

  result = qword_256B57620;
  if (!qword_256B57620)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F3B4, &type metadata for EditorialFilterKind.ThemeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57620);
  }
  return result;
}

unint64_t sub_23C27E6D4()
{
  unint64_t result;

  result = qword_256B57628;
  if (!qword_256B57628)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F3DC, &type metadata for EditorialFilterKind.ThemeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57628);
  }
  return result;
}

unint64_t sub_23C27E71C()
{
  unint64_t result;

  result = qword_256B57630;
  if (!qword_256B57630)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F364, &type metadata for EditorialFilterKind.TrainerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57630);
  }
  return result;
}

unint64_t sub_23C27E764()
{
  unint64_t result;

  result = qword_256B57638;
  if (!qword_256B57638)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F38C, &type metadata for EditorialFilterKind.TrainerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57638);
  }
  return result;
}

unint64_t sub_23C27E7AC()
{
  unint64_t result;

  result = qword_256B57640;
  if (!qword_256B57640)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F314, &type metadata for EditorialFilterKind.TraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57640);
  }
  return result;
}

unint64_t sub_23C27E7F4()
{
  unint64_t result;

  result = qword_256B57648;
  if (!qword_256B57648)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F33C, &type metadata for EditorialFilterKind.TraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57648);
  }
  return result;
}

unint64_t sub_23C27E83C()
{
  unint64_t result;

  result = qword_256B57650;
  if (!qword_256B57650)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F5E4, &type metadata for EditorialFilterKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57650);
  }
  return result;
}

unint64_t sub_23C27E884()
{
  unint64_t result;

  result = qword_256B57658;
  if (!qword_256B57658)
  {
    result = MEMORY[0x24261C66C](&unk_23C34F60C, &type metadata for EditorialFilterKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57658);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_23C27E8F4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23C27E914(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_256B576B8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_256B576B8);
  }
}

double WorkoutDetailState.layout.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  char v9;
  __int128 v10;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetailState() + 28);
  v4 = *(_BYTE *)(v3 + 32);
  v5 = *(_BYTE *)(v3 + 33);
  v6 = *(_QWORD *)(v3 + 40);
  result = *(double *)(v3 + 48);
  v8 = *(_QWORD *)(v3 + 56);
  v9 = *(_BYTE *)(v3 + 64);
  v10 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 33) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(double *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  return result;
}

uint64_t type metadata accessor for WorkoutDetailState()
{
  uint64_t result;

  result = qword_256B57778;
  if (!qword_256B57778)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutDetailState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetailState() + 32);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetailState.loadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetailState() + 32);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WorkoutDetailState.loadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WorkoutDetailState();
  return nullsub_1;
}

uint64_t WorkoutDetailState.init(workoutIdentifier:locale:isOffline:layout:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, __int128 *a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v23;
  __int128 v24;

  v24 = *a5;
  v9 = *((_QWORD *)a5 + 2);
  v10 = *((_QWORD *)a5 + 3);
  v11 = *((_BYTE *)a5 + 32);
  v12 = *((_BYTE *)a5 + 33);
  v13 = *((_QWORD *)a5 + 5);
  v14 = *((_QWORD *)a5 + 6);
  v15 = *((_QWORD *)a5 + 7);
  v23 = *((_BYTE *)a5 + 64);
  *a7 = a1;
  a7[1] = a2;
  v16 = (int *)type metadata accessor for WorkoutDetailState();
  v17 = (char *)a7 + v16[5];
  v18 = sub_23C34DA34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  *((_BYTE *)a7 + v16[6]) = a4;
  v19 = (char *)a7 + v16[7];
  *(_OWORD *)v19 = v24;
  *((_QWORD *)v19 + 2) = v9;
  *((_QWORD *)v19 + 3) = v10;
  v19[32] = v11;
  v19[33] = v12;
  *((_QWORD *)v19 + 5) = v13;
  *((_QWORD *)v19 + 6) = v14;
  *((_QWORD *)v19 + 7) = v15;
  v19[64] = v23;
  v20 = (char *)a7 + v16[8];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a6, v21);
}

uint64_t sub_23C27EC20(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C27EC58 + 4 * byte_23C34FA60[a1]))(0xD000000000000011, 0x800000023C361570);
}

uint64_t sub_23C27EC58()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23C27EC6C()
{
  return 0x6E696C66664F7369;
}

uint64_t sub_23C27ECB0()
{
  unsigned __int8 *v0;

  return sub_23C27EC20(*v0);
}

uint64_t sub_23C27ECB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C280158(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C27ECDC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23C27ECE8()
{
  sub_23C27EF90();
  return sub_23C34ECD0();
}

uint64_t sub_23C27ED10()
{
  sub_23C27EF90();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  _BYTE v19[16];
  __int128 v20;
  __int128 v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C27EF90();
  sub_23C34ECC4();
  LOBYTE(v20) = 0;
  sub_23C34EC10();
  if (!v2)
  {
    v9 = type metadata accessor for WorkoutDetailState();
    LOBYTE(v20) = 1;
    sub_23C34DA34();
    sub_23C27FEE4(&qword_256B576D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C34EC40();
    LOBYTE(v20) = 2;
    sub_23C34EC1C();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_BYTE *)v10 + 32);
    v12 = *((_BYTE *)v10 + 33);
    v13 = *((_QWORD *)v10 + 5);
    v14 = *((_QWORD *)v10 + 6);
    v15 = *((_QWORD *)v10 + 7);
    v16 = *((_BYTE *)v10 + 64);
    v17 = v10[1];
    v20 = *v10;
    v21 = v17;
    v22 = v11;
    v23 = v12;
    v24 = v13;
    v25 = v14;
    v26 = v15;
    v27 = v16;
    v19[15] = 3;
    sub_23C27EFD4();
    sub_23C34EC40();
    LOBYTE(v20) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
    sub_23C27F494(&qword_256B576E8, MEMORY[0x24BE2B3F8]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C27EF90()
{
  unint64_t result;

  result = qword_256B576D0;
  if (!qword_256B576D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FC24, &type metadata for WorkoutDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B576D0);
  }
  return result;
}

unint64_t sub_23C27EFD4()
{
  unint64_t result;

  result = qword_256B576E0;
  if (!qword_256B576E0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailLayout, &type metadata for WorkoutDetailLayout);
    atomic_store(result, (unint64_t *)&qword_256B576E0);
  }
  return result;
}

uint64_t WorkoutDetailState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  v32 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23C34DA34();
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57700);
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for WorkoutDetailState();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23C27EF90();
  v37 = v9;
  v14 = v39;
  sub_23C34ECB8();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v15 = v6;
  v39 = v7;
  v16 = v35;
  LOBYTE(v40) = 0;
  *v12 = sub_23C34EB80();
  v12[1] = v17;
  LOBYTE(v40) = 1;
  sub_23C27FEE4(&qword_256B57708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  sub_23C34EBB0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))((char *)v12 + v10[5], v15, v16);
  LOBYTE(v40) = 2;
  *((_BYTE *)v12 + v10[6]) = sub_23C34EB8C() & 1;
  v48 = 3;
  sub_23C27F450();
  sub_23C34EBB0();
  v18 = (uint64_t)v12;
  v19 = v42;
  v20 = v43;
  v21 = v44;
  v22 = v45;
  v23 = v46;
  v24 = v47;
  v25 = (char *)v12 + v10[7];
  v26 = v41;
  *(_OWORD *)v25 = v40;
  *((_OWORD *)v25 + 1) = v26;
  v25[32] = v19;
  v25[33] = v20;
  *((_QWORD *)v25 + 5) = v21;
  *((_QWORD *)v25 + 6) = v22;
  *((_QWORD *)v25 + 7) = v23;
  v25[64] = v24;
  LOBYTE(v40) = 4;
  sub_23C27F494(&qword_256B57718, MEMORY[0x24BE2B410]);
  v27 = v33;
  v30 = v10;
  v28 = v34;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v18 + v30[8], v27, v28);
  sub_23C27F538(v18, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_23C27F57C(v18);
}

unint64_t sub_23C27F450()
{
  unint64_t result;

  result = qword_256B57710;
  if (!qword_256B57710)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailLayout, &type metadata for WorkoutDetailLayout);
    atomic_store(result, (unint64_t *)&qword_256B57710);
  }
  return result;
}

uint64_t sub_23C27F494(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B576C0);
    v6[0] = sub_23C27FEE4(&qword_256B576F0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetail, (uint64_t)&protocol conformance descriptor for WorkoutDetail);
    v6[1] = sub_23C27FEE4(&qword_256B576F8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetail, (uint64_t)&protocol conformance descriptor for WorkoutDetail);
    result = MEMORY[0x24261C66C](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C27F538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutDetailState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C27F57C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutDetailState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C27F5B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetailState.init(from:)(a1, a2);
}

uint64_t sub_23C27F5CC(_QWORD *a1)
{
  return WorkoutDetailState.encode(to:)(a1);
}

uint64_t _s20FitnessProductDetail07WorkoutC5StateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  int *v5;
  char *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  _OWORD v23[2];
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _OWORD v30[2];
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_23C34EC64() & 1) == 0)
    return 0;
  v5 = (int *)type metadata accessor for WorkoutDetailState();
  if ((MEMORY[0x24261B124]((char *)a1 + v5[5], (char *)a2 + v5[5]) & 1) == 0)
    return 0;
  if (*((unsigned __int8 *)a1 + v5[6]) != *((unsigned __int8 *)a2 + v5[6]))
    return 0;
  v6 = (char *)a1 + v5[7];
  v7 = v6[32];
  v8 = v6[33];
  v9 = *((_QWORD *)v6 + 5);
  v10 = *((_QWORD *)v6 + 6);
  v11 = *((_QWORD *)v6 + 7);
  v12 = v6[64];
  v13 = *((_OWORD *)v6 + 1);
  v30[0] = *(_OWORD *)v6;
  v30[1] = v13;
  v31 = v7;
  v32 = v8;
  v33 = v9;
  v34 = v10;
  v35 = v11;
  v36 = v12;
  v14 = (char *)a2 + v5[7];
  v15 = v14[32];
  v16 = v14[33];
  v17 = *((_QWORD *)v14 + 5);
  v18 = *((_QWORD *)v14 + 6);
  v19 = *((_QWORD *)v14 + 7);
  v20 = v14[64];
  v21 = *((_OWORD *)v14 + 1);
  v23[0] = *(_OWORD *)v14;
  v23[1] = v21;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v27 = v18;
  v28 = v19;
  v29 = v20;
  if (!_s20FitnessProductDetail07WorkoutC6LayoutV2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v23))
    return 0;
  type metadata accessor for WorkoutDetail();
  sub_23C27FEE4(qword_256B57790, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetail, (uint64_t)&protocol conformance descriptor for WorkoutDetail);
  return sub_23C34E73C();
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34DA34();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_OWORD *)v15 + 3);
    *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    *((_OWORD *)v14 + 3) = v16;
    v14[64] = v15[64];
    v17 = *((_OWORD *)v15 + 1);
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v17;
    v18 = a3[8];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for WorkoutDetailState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for WorkoutDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DA34();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  v13[64] = v14[64];
  v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for WorkoutDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = v12[32];
  v14 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v14;
  v11[32] = v13;
  v11[33] = v12[33];
  *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
  *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
  *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
  v11[64] = v12[64];
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for WorkoutDetailState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *((_OWORD *)v12 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_OWORD *)v11 + 3) = v13;
  v11[64] = v12[64];
  v14 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v14;
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for WorkoutDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *((_WORD *)v12 + 16) = *((_WORD *)v13 + 16);
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
  *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
  *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
  v12[64] = v13[64];
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C27FC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23C34DA34();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C27FD28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23C34DA34();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23C27FDC8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23C34DA34();
  if (v0 <= 0x3F)
  {
    sub_23C27FE6C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23C27FE6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B57788)
  {
    type metadata accessor for WorkoutDetail();
    sub_23C27FEE4(qword_256B57790, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetail, (uint64_t)&protocol conformance descriptor for WorkoutDetail);
    v0 = sub_23C34E754();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B57788);
  }
}

uint64_t sub_23C27FEE4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24261C66C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C280000 + 4 * byte_23C34FA6A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C280034 + 4 * byte_23C34FA65[v4]))();
}

uint64_t sub_23C280034(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28003C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C280044);
  return result;
}

uint64_t sub_23C280050(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C280058);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C28005C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C280064(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailState.CodingKeys()
{
  return &type metadata for WorkoutDetailState.CodingKeys;
}

unint64_t sub_23C280084()
{
  unint64_t result;

  result = qword_256B577D0;
  if (!qword_256B577D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FBFC, &type metadata for WorkoutDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B577D0);
  }
  return result;
}

unint64_t sub_23C2800CC()
{
  unint64_t result;

  result = qword_256B577D8;
  if (!qword_256B577D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FB6C, &type metadata for WorkoutDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B577D8);
  }
  return result;
}

unint64_t sub_23C280114()
{
  unint64_t result;

  result = qword_256B577E0;
  if (!qword_256B577E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FB94, &type metadata for WorkoutDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B577E0);
  }
  return result;
}

uint64_t sub_23C280158(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C361570 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696C66664F7369 && a2 == 0xE900000000000065 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23C280358(char a1)
{
  return *(_QWORD *)&aIdle_10[8 * a1];
}

uint64_t sub_23C280378()
{
  char *v0;

  return sub_23C280358(*v0);
}

uint64_t sub_23C280380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2815A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C2803A4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23C2803B0()
{
  sub_23C28086C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2803D8()
{
  sub_23C28086C();
  return sub_23C34ECDC();
}

uint64_t sub_23C280400()
{
  return 1;
}

uint64_t sub_23C280408()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C280448()
{
  return sub_23C34EC88();
}

uint64_t sub_23C28046C()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C2804AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2816D8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C2804D4()
{
  sub_23C2808B0();
  return sub_23C34ECD0();
}

uint64_t sub_23C2804FC()
{
  sub_23C2808B0();
  return sub_23C34ECDC();
}

uint64_t sub_23C280524()
{
  sub_23C2808F4();
  return sub_23C34ECD0();
}

uint64_t sub_23C28054C()
{
  sub_23C2808F4();
  return sub_23C34ECDC();
}

uint64_t sub_23C280574()
{
  sub_23C280938();
  return sub_23C34ECD0();
}

uint64_t sub_23C28059C()
{
  sub_23C280938();
  return sub_23C34ECDC();
}

uint64_t AssetBundleLoadState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B577E8);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B577F0);
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B577F8);
  v9 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57800);
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28086C();
  sub_23C34ECC4();
  if (v15 == 2)
  {
    v26 = 0;
    sub_23C280938();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  }
  if (v15 == 3)
  {
    v27 = 1;
    sub_23C2808F4();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  }
  v28 = 2;
  sub_23C2808B0();
  v17 = v22;
  sub_23C34EBD4();
  v18 = v24;
  sub_23C34EC1C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
}

unint64_t sub_23C28086C()
{
  unint64_t result;

  result = qword_256B57808;
  if (!qword_256B57808)
  {
    result = MEMORY[0x24261C66C](&unk_23C350094, &type metadata for AssetBundleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57808);
  }
  return result;
}

unint64_t sub_23C2808B0()
{
  unint64_t result;

  result = qword_256B57810;
  if (!qword_256B57810)
  {
    result = MEMORY[0x24261C66C](&unk_23C350044, &type metadata for AssetBundleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57810);
  }
  return result;
}

unint64_t sub_23C2808F4()
{
  unint64_t result;

  result = qword_256B57818;
  if (!qword_256B57818)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FFF4, &type metadata for AssetBundleLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57818);
  }
  return result;
}

unint64_t sub_23C280938()
{
  unint64_t result;

  result = qword_256B57820;
  if (!qword_256B57820)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FFA4, &type metadata for AssetBundleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57820);
  }
  return result;
}

uint64_t AssetBundleLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v34 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57828);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57830);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57838);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57840);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23C28086C();
  v14 = v38;
  sub_23C34ECB8();
  if (v14)
    goto LABEL_9;
  v29 = v5;
  v15 = v35;
  v16 = v36;
  v38 = v10;
  v17 = sub_23C34EBBC();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v19 = sub_23C34EAC0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v21 = &type metadata for AssetBundleLoadState;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
LABEL_9:
    v28 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if (!*(_BYTE *)(v17 + 32))
  {
    v39 = 0;
    sub_23C280938();
    sub_23C34EB38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    v18 = 2;
    goto LABEL_11;
  }
  if (*(_BYTE *)(v17 + 32) == 1)
  {
    v40 = 1;
    sub_23C2808F4();
    sub_23C34EB38();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    v18 = 3;
LABEL_11:
    v28 = (uint64_t)v37;
    *v34 = v18;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v35 = (char *)v17;
  v41 = 2;
  sub_23C2808B0();
  v22 = v16;
  v23 = v9;
  sub_23C34EB38();
  v24 = v34;
  v26 = v31;
  v27 = sub_23C34EB8C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v23);
  v28 = (uint64_t)v37;
  *v24 = v27 & 1;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_23C280DC8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return AssetBundleLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C280DDC(_QWORD *a1)
{
  return AssetBundleLoadState.encode(to:)(a1);
}

BOOL static AssetBundleLoadState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

BOOL sub_23C280E50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t getEnumTagSinglePayload for AssetBundleLoadState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 1;
      if (v7 > 1)
        return result;
    }
    return 0;
  }
  v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23C280F00 + 4 * byte_23C34FC80[v4]))();
}

uint64_t storeEnumTagSinglePayload for AssetBundleLoadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C280FAC + 4 * byte_23C34FC8A[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C280FE0 + 4 * byte_23C34FC85[v5]))();
}

uint64_t sub_23C280FE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C280FE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C280FF0);
  return result;
}

uint64_t sub_23C280FFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C281004);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C281008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C281010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28101C(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_23C281038(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for AssetBundleLoadState()
{
  return &type metadata for AssetBundleLoadState;
}

uint64_t getEnumTagSinglePayload for AssetBundleLoadState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetBundleLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C28113C + 4 * byte_23C34FC94[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C281170 + 4 * byte_23C34FC8F[v4]))();
}

uint64_t sub_23C281170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C281178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C281180);
  return result;
}

uint64_t sub_23C28118C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C281194);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C281198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2811A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetBundleLoadState.CodingKeys()
{
  return &type metadata for AssetBundleLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetBundleLoadState.IdleCodingKeys()
{
  return &type metadata for AssetBundleLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AssetBundleLoadState.FetchingCodingKeys()
{
  return &type metadata for AssetBundleLoadState.FetchingCodingKeys;
}

uint64_t getEnumTagSinglePayload for AssetBundleLoadState.FetchedCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AssetBundleLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C281270 + 4 * byte_23C34FC99[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C281290 + 4 * byte_23C34FC9E[v4]))();
}

_BYTE *sub_23C281270(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C281290(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C281298(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2812A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2812A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2812B0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23C2812BC()
{
  return 0;
}

ValueMetadata *type metadata accessor for AssetBundleLoadState.FetchedCodingKeys()
{
  return &type metadata for AssetBundleLoadState.FetchedCodingKeys;
}

unint64_t sub_23C2812D8()
{
  unint64_t result;

  result = qword_256B57848;
  if (!qword_256B57848)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FE24, &type metadata for AssetBundleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57848);
  }
  return result;
}

unint64_t sub_23C281320()
{
  unint64_t result;

  result = qword_256B57850;
  if (!qword_256B57850)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FF7C, &type metadata for AssetBundleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57850);
  }
  return result;
}

unint64_t sub_23C281368()
{
  unint64_t result;

  result = qword_256B57858;
  if (!qword_256B57858)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FE9C, &type metadata for AssetBundleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57858);
  }
  return result;
}

unint64_t sub_23C2813B0()
{
  unint64_t result;

  result = qword_256B57860;
  if (!qword_256B57860)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FEC4, &type metadata for AssetBundleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57860);
  }
  return result;
}

unint64_t sub_23C2813F8()
{
  unint64_t result;

  result = qword_256B57868;
  if (!qword_256B57868)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FE4C, &type metadata for AssetBundleLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57868);
  }
  return result;
}

unint64_t sub_23C281440()
{
  unint64_t result;

  result = qword_256B57870;
  if (!qword_256B57870)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FE74, &type metadata for AssetBundleLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57870);
  }
  return result;
}

unint64_t sub_23C281488()
{
  unint64_t result;

  result = qword_256B57878;
  if (!qword_256B57878)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FD94, &type metadata for AssetBundleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57878);
  }
  return result;
}

unint64_t sub_23C2814D0()
{
  unint64_t result;

  result = qword_256B57880;
  if (!qword_256B57880)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FDBC, &type metadata for AssetBundleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57880);
  }
  return result;
}

unint64_t sub_23C281518()
{
  unint64_t result;

  result = qword_256B57888;
  if (!qword_256B57888)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FEEC, &type metadata for AssetBundleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57888);
  }
  return result;
}

unint64_t sub_23C281560()
{
  unint64_t result;

  result = qword_256B57890;
  if (!qword_256B57890)
  {
    result = MEMORY[0x24261C66C](&unk_23C34FF14, &type metadata for AssetBundleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57890);
  }
  return result;
}

uint64_t sub_23C2815A4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C2816D8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F6C6E776F447369 && a2 == 0xEC00000064656461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C28176C()
{
  return 0x6F6C6E776F447369;
}

uint64_t sub_23C28178C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64656863746566;
  else
    return 1701602409;
}

BOOL sub_23C2817BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23C2817D4()
{
  char *v0;

  return sub_23C28178C(*v0);
}

uint64_t sub_23C2817DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C284E4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C281800(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23C28180C()
{
  sub_23C281C44();
  return sub_23C34ECD0();
}

uint64_t sub_23C281834()
{
  sub_23C281C44();
  return sub_23C34ECDC();
}

uint64_t sub_23C281860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C284F24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C281888()
{
  sub_23C281CD0();
  return sub_23C34ECD0();
}

uint64_t sub_23C2818B0()
{
  sub_23C281CD0();
  return sub_23C34ECDC();
}

uint64_t sub_23C2818D8()
{
  sub_23C281D14();
  return sub_23C34ECD0();
}

uint64_t sub_23C281900()
{
  sub_23C281D14();
  return sub_23C34ECDC();
}

uint64_t WorkoutScheduleLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t State;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57898);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A8);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutScheduleLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578B0);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C281C44();
  sub_23C34ECC4();
  sub_23C282F90(v27, (uint64_t)v12, type metadata accessor for WorkoutScheduleLoadState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v29 = 0;
    sub_23C281D14();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {
    v17 = v23;
    sub_23C281C88((uint64_t)v12, v23);
    v30 = 1;
    sub_23C281CD0();
    v18 = v24;
    sub_23C34EBD4();
    type metadata accessor for WorkoutSchedule();
    sub_23C27FEE4(&qword_256B578C8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSchedule, (uint64_t)&protocol conformance descriptor for WorkoutSchedule);
    v19 = v26;
    sub_23C34EC04();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_23C285184(v17, &qword_256B578A0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t type metadata accessor for WorkoutScheduleLoadState(uint64_t a1)
{
  return sub_23C282F18(a1, (uint64_t *)&unk_256B579A0);
}

unint64_t sub_23C281C44()
{
  unint64_t result;

  result = qword_256B578B8;
  if (!qword_256B578B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35065C, &type metadata for WorkoutScheduleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B578B8);
  }
  return result;
}

uint64_t sub_23C281C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C281CD0()
{
  unint64_t result;

  result = qword_256B578C0;
  if (!qword_256B578C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35060C, &type metadata for WorkoutScheduleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B578C0);
  }
  return result;
}

unint64_t sub_23C281D14()
{
  unint64_t result;

  result = qword_256B578D0;
  if (!qword_256B578D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3505BC, &type metadata for WorkoutScheduleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B578D0);
  }
  return result;
}

uint64_t WorkoutScheduleLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;

  v38 = a1;
  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578D8);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578E0);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578E8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutScheduleLoadState(0);
  v13 = MEMORY[0x24BDAC7A8](State);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C281C44();
  v18 = v37;
  sub_23C34ECB8();
  if (!v18)
  {
    v29 = State;
    v19 = v35;
    v20 = v36;
    v37 = v9;
    v21 = sub_23C34EBBC();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      if ((*(_BYTE *)(v21 + 32) & 1) != 0)
      {
        v35 = (char *)v21;
        v40 = 1;
        sub_23C281CD0();
        sub_23C34EB38();
        type metadata accessor for WorkoutSchedule();
        sub_23C27FEE4(&qword_256B578F0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutSchedule, (uint64_t)&protocol conformance descriptor for WorkoutSchedule);
        v26 = v32;
        sub_23C34EB74();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 0, 1, v27);
        sub_23C2851C0((uint64_t)v15, (uint64_t)v17, type metadata accessor for WorkoutScheduleLoadState);
      }
      else
      {
        v39 = 0;
        sub_23C281D14();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 1, 1, v28);
      }
      sub_23C2851C0((uint64_t)v17, v34, type metadata accessor for WorkoutScheduleLoadState);
    }
    else
    {
      v22 = sub_23C34EAC0();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
      *v24 = v29;
      sub_23C34EB44();
      sub_23C34EAB4();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_23C2821A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutScheduleLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C2821BC(_QWORD *a1)
{
  return WorkoutScheduleLoadState.encode(to:)(a1);
}

uint64_t WorkoutScheduleState.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C34DA70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WorkoutScheduleState.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutScheduleState(0) + 20);
  v4 = sub_23C34DA34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutScheduleState.workoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutScheduleState(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutScheduleState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutScheduleState(0);
  return sub_23C282F90(v1 + *(int *)(v3 + 28), a1, type metadata accessor for WorkoutScheduleLoadState);
}

uint64_t WorkoutScheduleState.init(calendar:loadState:locale:workoutIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  v12 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  v13 = (int *)type metadata accessor for WorkoutScheduleState(0);
  sub_23C2851C0(a2, a6 + v13[7], type metadata accessor for WorkoutScheduleLoadState);
  v14 = a6 + v13[5];
  v15 = sub_23C34DA34();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a3, v15);
  v17 = (_QWORD *)(a6 + v13[6]);
  *v17 = a4;
  v17[1] = a5;
  return result;
}

uint64_t sub_23C282388(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2823C0 + 4 * byte_23C350120[a1]))(0xD000000000000011, 0x800000023C361570);
}

uint64_t sub_23C2823C0()
{
  return 0x7261646E656C6163;
}

uint64_t sub_23C2823D8()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_23C2823F4()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23C282408()
{
  unsigned __int8 *v0;

  return sub_23C282388(*v0);
}

uint64_t sub_23C282410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C284F9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C282434(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23C282440()
{
  sub_23C282F4C();
  return sub_23C34ECD0();
}

uint64_t sub_23C282468()
{
  sub_23C282F4C();
  return sub_23C34ECDC();
}

uint64_t WorkoutScheduleState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C282F4C();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34DA70();
  sub_23C27FEE4(&qword_256B57908, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF2F8]);
  sub_23C34EC40();
  if (!v1)
  {
    type metadata accessor for WorkoutScheduleState(0);
    v8[14] = 1;
    sub_23C34DA34();
    sub_23C27FEE4(&qword_256B576D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C34EC40();
    v8[13] = 2;
    sub_23C34EC10();
    v8[12] = 3;
    type metadata accessor for WorkoutScheduleLoadState(0);
    sub_23C27FEE4(&qword_256B57910, type metadata accessor for WorkoutScheduleLoadState, (uint64_t)&protocol conformance descriptor for WorkoutScheduleLoadState);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WorkoutScheduleState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t State;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v31 = a2;
  State = type metadata accessor for WorkoutScheduleLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v33 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C34DA34();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23C34DA70();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57918);
  v8 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutScheduleState(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C282F4C();
  v39 = v10;
  v14 = (uint64_t)v41;
  sub_23C34ECB8();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v8;
  v15 = v11;
  v41 = a1;
  v16 = v13;
  v17 = v34;
  v18 = v35;
  v19 = v36;
  v45 = 0;
  sub_23C27FEE4(&qword_256B57920, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], MEMORY[0x24BDCF310]);
  v20 = v37;
  sub_23C34EBB0();
  v29[1] = v6;
  v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v22 = (uint64_t)v16;
  v21(v16, v38, v20);
  v44 = 1;
  sub_23C27FEE4(&qword_256B57708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  sub_23C34EBB0();
  v23 = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v22 + *(int *)(v15 + 20), v17, v19);
  v43 = 2;
  v24 = sub_23C34EB80();
  v25 = (uint64_t *)(v22 + *(int *)(v15 + 24));
  *v25 = v24;
  v25[1] = v26;
  v42 = 3;
  sub_23C27FEE4(&qword_256B57928, type metadata accessor for WorkoutScheduleLoadState, (uint64_t)&protocol conformance descriptor for WorkoutScheduleLoadState);
  v27 = (uint64_t)v33;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v40);
  sub_23C2851C0(v27, v22 + *(int *)(v23 + 28), type metadata accessor for WorkoutScheduleLoadState);
  sub_23C282F90(v22, v31, type metadata accessor for WorkoutScheduleState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_23C283550(v22, type metadata accessor for WorkoutScheduleState);
}

uint64_t sub_23C282AD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutScheduleState.init(from:)(a1, a2);
}

uint64_t sub_23C282AEC(_QWORD *a1)
{
  return WorkoutScheduleState.encode(to:)(a1);
}

uint64_t _s20FitnessProductDetail24WorkoutScheduleLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t State;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for WorkoutSchedule();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AA8);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - v12;
  State = type metadata accessor for WorkoutScheduleLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AB0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_23C282F90(a1, (uint64_t)v20, type metadata accessor for WorkoutScheduleLoadState);
  sub_23C282F90(a2, v21, type metadata accessor for WorkoutScheduleLoadState);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v22((uint64_t)v20, 1, v8) == 1)
  {
    if (v22(v21, 1, v8) == 1)
      goto LABEL_15;
    goto LABEL_6;
  }
  sub_23C282F90((uint64_t)v20, (uint64_t)v16, type metadata accessor for WorkoutScheduleLoadState);
  if (v22(v21, 1, v8) != 1)
  {
    sub_23C281C88(v21, (uint64_t)v13);
    v23 = *(int *)(v6 + 48);
    v24 = v40;
    v25 = v40 + v23;
    sub_23C281C88((uint64_t)v16, v40);
    sub_23C28513C((uint64_t)v13, v25);
    v26 = v39;
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v27(v24, 1, v39) == 1)
    {
      sub_23C285184((uint64_t)v13, &qword_256B578A0);
      if (v27(v25, 1, v26) == 1)
      {
        sub_23C285184(v24, &qword_256B578A0);
LABEL_15:
        sub_23C283550((uint64_t)v20, type metadata accessor for WorkoutScheduleLoadState);
        return 1;
      }
      v29 = &qword_256B57AA8;
    }
    else
    {
      v28 = v37;
      sub_23C28513C(v24, v37);
      if (v27(v25, 1, v26) == 1)
      {
        v29 = &qword_256B57AA8;
      }
      else
      {
        v30 = v36;
        sub_23C2851C0(v25, v36, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
        if ((sub_23C34D9D4() & 1) != 0)
        {
          v31 = *(int *)(v26 + 20);
          v32 = *(_QWORD *)(v28 + v31);
          v33 = *(_QWORD *)(v30 + v31);
          sub_23C283550(v30, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
          sub_23C285184((uint64_t)v13, &qword_256B578A0);
          sub_23C283550(v28, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
          sub_23C285184(v24, &qword_256B578A0);
          if (v32 == v33)
            goto LABEL_15;
LABEL_19:
          sub_23C283550((uint64_t)v20, type metadata accessor for WorkoutScheduleLoadState);
          return 0;
        }
        sub_23C283550(v30, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
        v29 = &qword_256B578A0;
      }
      sub_23C285184((uint64_t)v13, &qword_256B578A0);
      sub_23C283550(v28, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
    }
    sub_23C285184(v24, v29);
    goto LABEL_19;
  }
  sub_23C285184((uint64_t)v16, &qword_256B578A0);
LABEL_6:
  sub_23C285184((uint64_t)v20, &qword_256B57AB0);
  return 0;
}

uint64_t type metadata accessor for WorkoutScheduleState(uint64_t a1)
{
  return sub_23C282F18(a1, qword_256B57A10);
}

uint64_t sub_23C282F18(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C282F4C()
{
  unint64_t result;

  result = qword_256B57900;
  if (!qword_256B57900)
  {
    result = MEMORY[0x24261C66C](&unk_23C35056C, &type metadata for WorkoutScheduleState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57900);
  }
  return result;
}

uint64_t sub_23C282F90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s20FitnessProductDetail20WorkoutScheduleStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((MEMORY[0x24261B160]() & 1) != 0
    && (v4 = (int *)type metadata accessor for WorkoutScheduleState(0),
        (MEMORY[0x24261B124](a1 + v4[5], a2 + v4[5]) & 1) != 0)
    && ((v5 = v4[6], v6 = *(_QWORD *)(a1 + v5), v7 = *(_QWORD *)(a1 + v5 + 8), v8 = (_QWORD *)(a2 + v5), v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9 || (sub_23C34EC64() & 1) != 0))
  {
    return _s20FitnessProductDetail24WorkoutScheduleLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v4[7], a2 + v4[7]);
  }
  else
  {
    return 0;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutScheduleLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for WorkoutSchedule();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v12 = sub_23C34D9EC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutScheduleLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for WorkoutSchedule();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      v5 = sub_23C34D9EC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
  }
  return result;
}

char *initializeWithCopy for WorkoutScheduleLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for WorkoutSchedule();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = sub_23C34D9EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutScheduleLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for WorkoutSchedule();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          v19 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          v22 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(a1, a2, v22);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          return a1;
        }
        sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)a1, &qword_256B578A0);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for WorkoutSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v20 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23C283550(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for WorkoutScheduleLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for WorkoutSchedule();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = sub_23C34D9EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutScheduleLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for WorkoutSchedule();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          v19 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          v22 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(a1, a2, v22);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          return a1;
        }
        sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)a1, &qword_256B578A0);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for WorkoutSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v20 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2838B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C283910(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C283964(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23C2839A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_23C2839E4()
{
  unint64_t v0;

  sub_23C283A38();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_23C283A38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B579B0)
  {
    type metadata accessor for WorkoutSchedule();
    v0 = sub_23C34EA48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B579B0);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutScheduleState(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t State;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DA70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34DA34();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      State = type metadata accessor for WorkoutScheduleLoadState(0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      v23 = type metadata accessor for WorkoutSchedule();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v23))
      {
        memcpy(v17, v18, *(_QWORD *)(v20 + 64));
      }
      else
      {
        v25 = sub_23C34D9EC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v17, v18, v25);
        *(_QWORD *)&v17[*(int *)(v23 + 20)] = *(_QWORD *)&v18[*(int *)(v23 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v23);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutScheduleState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 28);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {
    v10 = type metadata accessor for WorkoutSchedule();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10);
    if (!(_DWORD)result)
    {
      v11 = sub_23C34D9EC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v7, v11);
    }
  }
  return result;
}

uint64_t initializeWithCopy for WorkoutScheduleState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t State;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (char *)(a1 + v12);
  v17 = (char *)(a2 + v12);
  swift_bridgeObjectRetain();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    State = type metadata accessor for WorkoutScheduleLoadState(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for WorkoutSchedule();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      memcpy(v16, v17, *(_QWORD *)(v19 + 64));
    }
    else
    {
      v23 = sub_23C34D9EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, v17, v23);
      *(_QWORD *)&v16[*(int *)(v21 + 20)] = *(_QWORD *)&v17[*(int *)(v21 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithCopy for WorkoutScheduleState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v6 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v9) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v9)
  {
    if (!v20)
    {
      v24 = type metadata accessor for WorkoutSchedule();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v26(v15, 1, v24);
      v28 = v26(v16, 1, v24);
      if (v27)
      {
        if (!v28)
        {
          v29 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v15, v16, v29);
          *(_QWORD *)&v15[*(int *)(v24 + 20)] = *(_QWORD *)&v16[*(int *)(v24 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v24);
          return a1;
        }
      }
      else
      {
        if (!v28)
        {
          v32 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v15, v16, v32);
          *(_QWORD *)&v15[*(int *)(v24 + 20)] = *(_QWORD *)&v16[*(int *)(v24 + 20)];
          return a1;
        }
        sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
      }
      v23 = *(_QWORD *)(v18 + 64);
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)v15, &qword_256B578A0);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutScheduleLoadState(0) - 8) + 64);
LABEL_8:
    memcpy(v15, v16, v23);
    return a1;
  }
  if (v20)
    goto LABEL_7;
  v21 = type metadata accessor for WorkoutSchedule();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21))
  {
    memcpy(v15, v16, *(_QWORD *)(v18 + 64));
  }
  else
  {
    v30 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v15, v16, v30);
    *(_QWORD *)&v15[*(int *)(v21 + 20)] = *(_QWORD *)&v16[*(int *)(v21 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v15, 0, 1, v21);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t initializeWithTake for WorkoutScheduleState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t State;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    State = type metadata accessor for WorkoutScheduleLoadState(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for WorkoutSchedule();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
    {
      memcpy(v12, v13, *(_QWORD *)(v15 + 64));
    }
    else
    {
      v19 = sub_23C34D9EC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v12, v13, v19);
      *(_QWORD *)&v12[*(int *)(v17 + 20)] = *(_QWORD *)&v13[*(int *)(v17 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for WorkoutScheduleState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v6 = sub_23C34DA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v9) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v9)
  {
    if (!v22)
    {
      v26 = type metadata accessor for WorkoutSchedule();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v29 = v28(v17, 1, v26);
      v30 = v28(v18, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          v31 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v17, v18, v31);
          *(_QWORD *)&v17[*(int *)(v26 + 20)] = *(_QWORD *)&v18[*(int *)(v26 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v26);
          return a1;
        }
      }
      else
      {
        if (!v30)
        {
          v34 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v17, v18, v34);
          *(_QWORD *)&v17[*(int *)(v26 + 20)] = *(_QWORD *)&v18[*(int *)(v26 + 20)];
          return a1;
        }
        sub_23C283550((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
      }
      v25 = *(_QWORD *)(v20 + 64);
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)v17, &qword_256B578A0);
LABEL_7:
    v25 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutScheduleLoadState(0) - 8) + 64);
LABEL_8:
    memcpy(v17, v18, v25);
    return a1;
  }
  if (v22)
    goto LABEL_7;
  v23 = type metadata accessor for WorkoutSchedule();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v23))
  {
    memcpy(v17, v18, *(_QWORD *)(v20 + 64));
  }
  else
  {
    v32 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v17, v18, v32);
    *(_QWORD *)&v17[*(int *)(v23 + 20)] = *(_QWORD *)&v18[*(int *)(v23 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v17, 0, 1, v23);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C284574(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t State;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23C34DA70();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    State = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, State);
  }
  v11 = sub_23C34DA34();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    State = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, State);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    State = type metadata accessor for WorkoutScheduleLoadState(0);
    v12 = *(_QWORD *)(State - 8);
    v13 = a3[7];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C284650(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t State;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23C34DA70();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    State = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23C34DA34();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      State = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return result;
      }
      State = type metadata accessor for WorkoutScheduleLoadState(0);
      v14 = *(_QWORD *)(State - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, State);
}

uint64_t sub_23C28471C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23C34DA70();
  if (v1 <= 0x3F)
  {
    result = sub_23C34DA34();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for WorkoutScheduleLoadState(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2848A0 + 4 * byte_23C350129[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2848D4 + 4 * byte_23C350124[v4]))();
}

uint64_t sub_23C2848D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2848DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2848E4);
  return result;
}

uint64_t sub_23C2848F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2848F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2848FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C284904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleState.CodingKeys()
{
  return &type metadata for WorkoutScheduleState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleLoadState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2849FC + 4 * byte_23C350133[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C284A30 + 4 * byte_23C35012E[v4]))();
}

uint64_t sub_23C284A30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C284A38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C284A40);
  return result;
}

uint64_t sub_23C284A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C284A54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C284A58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C284A60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23C284A6C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleLoadState.CodingKeys()
{
  return &type metadata for WorkoutScheduleLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutScheduleLoadState.IdleCodingKeys()
{
  return &type metadata for WorkoutScheduleLoadState.IdleCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C284AD8 + 4 * byte_23C350138[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C284AF8 + 4 * byte_23C35013D[v4]))();
}

_BYTE *sub_23C284AD8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C284AF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C284B00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C284B08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C284B10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C284B18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleLoadState.FetchedCodingKeys()
{
  return &type metadata for WorkoutScheduleLoadState.FetchedCodingKeys;
}

unint64_t sub_23C284B38()
{
  unint64_t result;

  result = qword_256B57A50;
  if (!qword_256B57A50)
  {
    result = MEMORY[0x24261C66C](&unk_23C350384, &type metadata for WorkoutScheduleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A50);
  }
  return result;
}

unint64_t sub_23C284B80()
{
  unint64_t result;

  result = qword_256B57A58;
  if (!qword_256B57A58)
  {
    result = MEMORY[0x24261C66C](&unk_23C35048C, &type metadata for WorkoutScheduleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A58);
  }
  return result;
}

unint64_t sub_23C284BC8()
{
  unint64_t result;

  result = qword_256B57A60;
  if (!qword_256B57A60)
  {
    result = MEMORY[0x24261C66C](&unk_23C350544, &type metadata for WorkoutScheduleState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A60);
  }
  return result;
}

unint64_t sub_23C284C10()
{
  unint64_t result;

  result = qword_256B57A68;
  if (!qword_256B57A68)
  {
    result = MEMORY[0x24261C66C](&unk_23C3504B4, &type metadata for WorkoutScheduleState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A68);
  }
  return result;
}

unint64_t sub_23C284C58()
{
  unint64_t result;

  result = qword_256B57A70;
  if (!qword_256B57A70)
  {
    result = MEMORY[0x24261C66C](&unk_23C3504DC, &type metadata for WorkoutScheduleState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A70);
  }
  return result;
}

unint64_t sub_23C284CA0()
{
  unint64_t result;

  result = qword_256B57A78;
  if (!qword_256B57A78)
  {
    result = MEMORY[0x24261C66C](&unk_23C3503AC, &type metadata for WorkoutScheduleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A78);
  }
  return result;
}

unint64_t sub_23C284CE8()
{
  unint64_t result;

  result = qword_256B57A80;
  if (!qword_256B57A80)
  {
    result = MEMORY[0x24261C66C](&unk_23C3503D4, &type metadata for WorkoutScheduleLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A80);
  }
  return result;
}

unint64_t sub_23C284D30()
{
  unint64_t result;

  result = qword_256B57A88;
  if (!qword_256B57A88)
  {
    result = MEMORY[0x24261C66C](&unk_23C3502F4, &type metadata for WorkoutScheduleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A88);
  }
  return result;
}

unint64_t sub_23C284D78()
{
  unint64_t result;

  result = qword_256B57A90;
  if (!qword_256B57A90)
  {
    result = MEMORY[0x24261C66C](&unk_23C35031C, &type metadata for WorkoutScheduleLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A90);
  }
  return result;
}

unint64_t sub_23C284DC0()
{
  unint64_t result;

  result = qword_256B57A98;
  if (!qword_256B57A98)
  {
    result = MEMORY[0x24261C66C](&unk_23C3503FC, &type metadata for WorkoutScheduleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57A98);
  }
  return result;
}

unint64_t sub_23C284E08()
{
  unint64_t result;

  result = qword_256B57AA0;
  if (!qword_256B57AA0)
  {
    result = MEMORY[0x24261C66C](&unk_23C350424, &type metadata for WorkoutScheduleLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57AA0);
  }
  return result;
}

uint64_t sub_23C284E4C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C284F24(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C284F90()
{
  return 12383;
}

uint64_t sub_23C284F9C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023C361570 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C28513C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C285184(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23C2851C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t TrainerTipGalleryList.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C34DA1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TrainerTipGalleryList.placeholders.getter()
{
  type metadata accessor for TrainerTipGalleryList();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for TrainerTipGalleryList()
{
  uint64_t result;

  result = qword_256B57B60;
  if (!qword_256B57B60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainerTipGalleryList.init(identifier:placeholders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for TrainerTipGalleryList();
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_23C2852F4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C6F686563616C70;
  else
    return 0x696669746E656469;
}

uint64_t sub_23C285338()
{
  char *v0;

  return sub_23C2852F4(*v0);
}

uint64_t sub_23C285340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C286AF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C285364()
{
  sub_23C285540();
  return sub_23C34ECD0();
}

uint64_t sub_23C28538C()
{
  sub_23C285540();
  return sub_23C34ECDC();
}

uint64_t TrainerTipGalleryList.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C285540();
  sub_23C34ECC4();
  v12 = 0;
  sub_23C34DA1C();
  sub_23C27FEE4(&qword_256B57AC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23C34EC40();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for TrainerTipGalleryList() + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AD0);
    sub_23C28587C(&qword_256B57AD8, (uint64_t (*)(void))sub_23C285584, MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C285540()
{
  unint64_t result;

  result = qword_256B57AC0;
  if (!qword_256B57AC0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35082C, &type metadata for TrainerTipGalleryList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57AC0);
  }
  return result;
}

unint64_t sub_23C285584()
{
  unint64_t result;

  result = qword_256B57AE0;
  if (!qword_256B57AE0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for TrainerTipPlaceholder, &type metadata for TrainerTipPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B57AE0);
  }
  return result;
}

uint64_t TrainerTipGalleryList.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v19 = a2;
  v23 = sub_23C34DA1C();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AE8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TrainerTipGalleryList();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C285540();
  v21 = v7;
  v11 = v24;
  sub_23C34ECB8();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a1;
  v24 = v5;
  v12 = (uint64_t)v10;
  v27 = 0;
  sub_23C27FEE4(&qword_256B57AF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v20;
  v13 = v21;
  v15 = v22;
  v16 = v23;
  sub_23C34EBB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v14, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B57AD0);
  v26 = 1;
  sub_23C28587C(&qword_256B57AF8, (uint64_t (*)(void))sub_23C2858E4, MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v15);
  *(_QWORD *)(v12 + *(int *)(v8 + 20)) = v25;
  sub_23C282F90(v12, v19, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_23C283550(v12, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
}

uint64_t sub_23C28587C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57AD0);
    v8 = a2();
    result = MEMORY[0x24261C66C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2858E4()
{
  unint64_t result;

  result = qword_256B57B00;
  if (!qword_256B57B00)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for TrainerTipPlaceholder, &type metadata for TrainerTipPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B57B00);
  }
  return result;
}

uint64_t sub_23C285928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryList.init(from:)(a1, a2);
}

uint64_t sub_23C28593C(_QWORD *a1)
{
  return TrainerTipGalleryList.encode(to:)(a1);
}

uint64_t static TrainerTipGalleryList.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_23C34DA04() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for TrainerTipGalleryList() + 20);
  return sub_23C28599C(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t sub_23C28599C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 1);
      v6 = *i;
      v7 = *(v3 - 1);
      v8 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_23C34EC64() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_23C34EC64() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_23C285A60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_23C285ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 40);
    for (i = (_QWORD *)(a1 + 40); ; i += 6)
    {
      v5 = i[1];
      v7 = i[2];
      v6 = i[3];
      v8 = i[4];
      v9 = *v3;
      v10 = v3[1];
      v12 = v3[2];
      v11 = v3[3];
      v13 = v3[4];
      if (*i)
      {
        if (!v9)
          return 0;
        if (*(i - 1) != *(v3 - 1) || *i != v9)
        {
          v20 = i[4];
          v14 = v3[4];
          v15 = sub_23C34EC64();
          v13 = v14;
          v8 = v20;
          if ((v15 & 1) == 0)
            return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      if (v5 != v10 || v7 != v12)
      {
        v16 = v8;
        v17 = v13;
        v18 = sub_23C34EC64();
        v13 = v17;
        v8 = v16;
        if ((v18 & 1) == 0)
          break;
      }
      if ((v6 != v11 || v8 != v13) && (sub_23C34EC64() & 1) == 0)
        break;
      v3 += 6;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_23C285C18(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for WorkoutDetailMusicTrack();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v25 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v27 = *(_QWORD *)(v8 + 72);
    v28 = a2;
    v26 = a1;
    while (1)
    {
      sub_23C282F90(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      sub_23C282F90(a2 + v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      v14 = *v10 == *v6 && v10[1] == v6[1];
      if (!v14 && (sub_23C34EC64() & 1) == 0)
        break;
      if ((static WorkoutDetailArtwork.== infix(_:_:)((char *)v10 + v4[5], (char *)v6 + v4[5]) & 1) == 0)
        break;
      sub_23C34DAC4();
      v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE35120];
      sub_23C27FEE4(&qword_256B57BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35140]);
      sub_23C27FEE4(&qword_256B57BC8, v15, MEMORY[0x24BE35148]);
      if ((sub_23C34DCA4() & 1) == 0 || *((unsigned __int8 *)v10 + v4[7]) != *((unsigned __int8 *)v6 + v4[7]))
        break;
      v16 = v4[8];
      v17 = *(_QWORD *)((char *)v10 + v16);
      v18 = *(_QWORD *)((char *)v10 + v16 + 8);
      v19 = (_QWORD *)((char *)v6 + v16);
      if ((v17 != *v19 || v18 != v19[1]) && (sub_23C34EC64() & 1) == 0)
        break;
      v20 = v4[9];
      v21 = *(_QWORD *)((char *)v10 + v20);
      v22 = *(_QWORD *)((char *)v10 + v20 + 8);
      v23 = (_QWORD *)((char *)v6 + v20);
      if (v21 == *v23 && v22 == v23[1])
      {
        sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
        sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      }
      else
      {
        v13 = sub_23C34EC64();
        sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
        sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
        if ((v13 & 1) == 0)
          return 0;
      }
      a2 = v28;
      v12 += v27;
      --v11;
      a1 = v26;
      if (!v11)
        return 1;
    }
    sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
    sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
  }
  return 0;
}

uint64_t sub_23C285EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;

  v59 = type metadata accessor for WorkoutDetailArtwork();
  v4 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutDetailTrainer();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v52 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  if (v21 != *(_QWORD *)(a2 + 16))
    return 0;
  v58 = v17;
  v53 = v9;
  v54 = v10;
  if (!v21 || a1 == a2)
    return 1;
  v22 = v12;
  v52 = v6;
  v56 = a2;
  v57 = v4;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v55 = *(_QWORD *)(v18 + 72);
  v24 = v59;
  v25 = v54;
  v26 = (uint64_t)v22;
  while (1)
  {
    v28 = a1;
    sub_23C282F90(a1 + v23, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
    sub_23C282F90(a2 + v23, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
    v29 = v26 + *(int *)(v25 + 48);
    sub_23C286BF4((uint64_t)v20, v26);
    sub_23C286BF4((uint64_t)v15, v29);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    if (v30(v26, 1, v24) != 1)
      break;
    if (v30(v29, 1, v24) != 1)
      goto LABEL_31;
    sub_23C285184(v26, &qword_256B57BB0);
    a1 = v28;
    v31 = v58;
LABEL_12:
    v36 = v31[5];
    v37 = &v20[v36];
    v38 = *(_QWORD *)&v20[v36 + 8];
    v39 = &v15[v36];
    v40 = *((_QWORD *)v39 + 1);
    if (v38)
    {
      if (!v40)
        goto LABEL_32;
      v41 = *(_QWORD *)v37 == *(_QWORD *)v39 && v38 == v40;
      if (!v41 && (sub_23C34EC64() & 1) == 0)
        goto LABEL_32;
    }
    else if (v40)
    {
      goto LABEL_32;
    }
    v42 = v31[6];
    v43 = *(_QWORD *)&v20[v42];
    v44 = *(_QWORD *)&v20[v42 + 8];
    v45 = &v15[v42];
    v46 = v43 == *(_QWORD *)v45 && v44 == *((_QWORD *)v45 + 1);
    if (!v46 && (sub_23C34EC64() & 1) == 0)
      goto LABEL_32;
    v47 = v31[7];
    v48 = *(_QWORD *)&v20[v47];
    v49 = *(_QWORD *)&v20[v47 + 8];
    v50 = &v15[v47];
    if (v48 == *(_QWORD *)v50 && v49 == *((_QWORD *)v50 + 1))
    {
      sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
      sub_23C283550((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
    }
    else
    {
      v27 = sub_23C34EC64();
      sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
      sub_23C283550((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
      if ((v27 & 1) == 0)
        return 0;
    }
    a2 = v56;
    v23 += v55;
    if (!--v21)
      return 1;
  }
  v32 = v24;
  v33 = (uint64_t)v53;
  sub_23C286BF4(v26, (uint64_t)v53);
  if (v30(v29, 1, v32) != 1)
  {
    v34 = (uint64_t)v52;
    sub_23C286C3C(v29, (uint64_t)v52);
    v35 = static WorkoutDetailArtwork.== infix(_:_:)(v33, v34);
    sub_23C283550(v34, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
    sub_23C283550(v33, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
    sub_23C285184(v26, &qword_256B57BB0);
    a1 = v28;
    v31 = v58;
    v24 = v59;
    v25 = v54;
    if ((v35 & 1) == 0)
      goto LABEL_32;
    goto LABEL_12;
  }
  sub_23C283550(v33, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
LABEL_31:
  sub_23C285184(v26, &qword_256B57BB8);
LABEL_32:
  sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
  sub_23C283550((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
  return 0;
}

uint64_t sub_23C2862C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for WorkoutProgramLinkAnnotation();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (unsigned __int8 *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (unsigned __int8 *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_19:
    v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_23C282F90(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
      sub_23C282F90(a2 + v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
      if (*v10 != *v6)
        break;
      v15 = *((_QWORD *)v10 + 1) == *((_QWORD *)v6 + 1) && *((_QWORD *)v10 + 2) == *((_QWORD *)v6 + 2);
      if (!v15 && (sub_23C34EC64() & 1) == 0)
        break;
      v16 = MEMORY[0x24261B040](&v10[*(int *)(v4 + 24)], &v6[*(int *)(v4 + 24)]);
      sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
      sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
      v18 = v14-- != 0;
      if ((v16 & 1) != 0)
      {
        v12 += v13;
        if (v18)
          continue;
      }
      return v16 & 1;
    }
    sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
    sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramLinkAnnotation);
    goto LABEL_19;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_23C28645C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23C34EC64(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_23C34EC64() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23C286520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_23C34DA04() & 1) != 0)
    return sub_23C28599C(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
  else
    return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryList(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DA1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryList(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrainerTipGalleryList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrainerTipGalleryList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TrainerTipGalleryList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TrainerTipGalleryList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23C34DA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryList()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2867DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23C34DA1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryList()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C286864(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C34DA1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23C2868DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C34DA1C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryList.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C28699C + 4 * byte_23C3506B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2869D0 + 4 * byte_23C3506B0[v4]))();
}

uint64_t sub_23C2869D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2869D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2869E0);
  return result;
}

uint64_t sub_23C2869EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2869F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2869F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C286A00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryList.CodingKeys()
{
  return &type metadata for TrainerTipGalleryList.CodingKeys;
}

unint64_t sub_23C286A20()
{
  unint64_t result;

  result = qword_256B57B98;
  if (!qword_256B57B98)
  {
    result = MEMORY[0x24261C66C](&unk_23C350804, &type metadata for TrainerTipGalleryList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57B98);
  }
  return result;
}

unint64_t sub_23C286A68()
{
  unint64_t result;

  result = qword_256B57BA0;
  if (!qword_256B57BA0)
  {
    result = MEMORY[0x24261C66C](&unk_23C350774, &type metadata for TrainerTipGalleryList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57BA0);
  }
  return result;
}

unint64_t sub_23C286AB0()
{
  unint64_t result;

  result = qword_256B57BA8;
  if (!qword_256B57BA8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35079C, &type metadata for TrainerTipGalleryList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57BA8);
  }
  return result;
}

uint64_t sub_23C286AF4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F686563616C70 && a2 == 0xEC00000073726564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C286BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C286C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutDetailArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C286C80()
{
  return swift_deallocClassInstance();
}

id static NSBundle.localization.getter()
{
  uint64_t ObjCClassFromMetadata;

  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  return objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return objc_opt_self();
}

uint64_t sub_23C286CF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D10);
  sub_23C28943C(&qword_256B57D18, &qword_256B57D10, MEMORY[0x24BE2B5E8]);
  return sub_23C34DD58();
}

uint64_t TrainerTipGalleryView.init(store:trainerTipListViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C286DF0;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C286DCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C286DF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t TrainerTipGalleryView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  _QWORD v40[2];
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C68);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C70);
  v4 = *(_QWORD *)(a1 + 16);
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v5 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v5);
  v6 = sub_23C34E64C();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v6);
  v7 = sub_23C34DD34();
  v33 = sub_23C34E010();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C78);
  v8 = sub_23C34E010();
  v9 = sub_23C34E58C();
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_23C34DE30();
  v34 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v18 = v2[1];
  v44 = *v2;
  v45 = v18;
  v46 = *((_QWORD *)v2 + 4);
  v19 = *(_QWORD *)(a1 + 24);
  v37 = v4;
  v38 = v19;
  v39 = &v44;
  v20 = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
  v21 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v7);
  v43[0] = v20;
  v43[1] = v21;
  v22 = MEMORY[0x24BDEF3E0];
  v23 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v33, v43);
  v24 = sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
  v42[0] = v23;
  v42[1] = v24;
  v25 = MEMORY[0x24261C66C](v22, v8, v42);
  sub_23C34E580();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v4;
  *(_QWORD *)(v26 + 24) = v19;
  v27 = v45;
  *(_OWORD *)(v26 + 32) = v44;
  *(_OWORD *)(v26 + 48) = v27;
  *(_QWORD *)(v26 + 64) = v46;
  sub_23C287FE0((uint64_t)&v44);
  v41 = v25;
  v28 = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v9, &v41);
  sub_23C34E4E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
  v40[0] = v28;
  v40[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v40);
  v29 = v34;
  v30 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v30(v17, v15, v12);
  v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v15, v12);
  v30(v36, v17, v12);
  return ((uint64_t (*)(char *, uint64_t))v31)(v17, v12);
}

uint64_t sub_23C28719C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t State;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v95 = a3;
  v92 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57C78);
  v78 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v81 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C70);
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v8 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v8);
  v9 = sub_23C34E64C();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v9);
  v10 = sub_23C34DD34();
  v76 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v76 - v13;
  v14 = type metadata accessor for TrainerTipGalleryDetail();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v79 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C68);
  v91 = v10;
  v18 = sub_23C34E010();
  v87 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v86 = (char *)&v76 - v20;
  v85 = v17;
  v84 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v83 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D20);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for TrainerTipGalleryListLoadState();
  MEMORY[0x24BDAC7A8](State);
  v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TrainerTipGalleryDetailLoadState();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v18;
  v94 = v6;
  v89 = sub_23C34E010();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v93 = (char *)&v76 - v31;
  v32 = a1[1];
  v101 = *a1;
  v102 = v32;
  v103 = *((_QWORD *)a1 + 4);
  v82 = a2;
  v34 = type metadata accessor for TrainerTipGalleryView(0, a2, v95, v33);
  sub_23C286CF4();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v35 = a1[1];
  v101 = *a1;
  v102 = v35;
  v103 = *((_QWORD *)a1 + 4);
  sub_23C286CF4();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v36 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_23C2851C0((uint64_t)v30, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
  sub_23C2851C0((uint64_t)v27, v36, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v24, 3, v14);
  if (v37 != 2)
  {
    v42 = v37;
    v43 = v80;
    v44 = (uint64_t)v79;
    v45 = v81;
    v46 = type metadata accessor for TrainerTipGalleryList();
    v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v36, 3, v46);
    if (v47)
    {
      v41 = v90;
      v40 = v91;
      if (v47 == 2)
      {
        sub_23C283550(v36, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
        v38 = sub_23C283550((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
        v39 = v92;
        goto LABEL_6;
      }
    }
    else
    {
      v41 = v90;
      v40 = v91;
      if (!v42)
      {
        v61 = v44;
        sub_23C2851C0((uint64_t)v24, v44, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
        v62 = a1[1];
        v101 = *a1;
        v102 = v62;
        v103 = *((_QWORD *)a1 + 4);
        sub_23C287B5C(v44, v34, v43);
        v63 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v40);
        v64 = v76;
        v65 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
        v66 = v77;
        v65(v77, v43, v40);
        v67 = *(void (**)(char *, uint64_t))(v64 + 8);
        v67(v43, v40);
        v65(v43, v66, v40);
        v68 = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
        v69 = (uint64_t)v86;
        sub_23C328C04((uint64_t)v43, v85, v40);
        v67(v43, v40);
        v97[0] = v68;
        v97[1] = v63;
        MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v41, v97);
        sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
        v56 = v93;
        sub_23C328CC8(v69, v41);
        (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v69, v41);
        v67(v66, v40);
        sub_23C283550(v61, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
        sub_23C283550(v36, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
        goto LABEL_10;
      }
    }
    v57 = (uint64_t)v45;
    sub_23C34DD7C();
    v58 = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
    v59 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v40);
    v100[0] = v58;
    v100[1] = v59;
    MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v41, v100);
    sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
    v56 = v93;
    v60 = v94;
    sub_23C328C04(v57, v41, v94);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v57, v60);
    sub_23C285184((uint64_t)v24, &qword_256B57D20);
LABEL_10:
    v39 = v92;
    v48 = v89;
    v49 = v88;
    goto LABEL_11;
  }
  v38 = sub_23C283550(v36, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
  v40 = v91;
  v39 = v92;
  v41 = v90;
LABEL_6:
  v48 = v89;
  v49 = v88;
  v50 = MEMORY[0x24BDAC7A8](v38);
  MEMORY[0x24BDAC7A8](v50);
  v51 = (uint64_t)v83;
  sub_23C34E058();
  v52 = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
  v53 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v40);
  v54 = (uint64_t)v86;
  v55 = v85;
  sub_23C328CC8(v51, v85);
  v96[0] = v52;
  v96[1] = v53;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v41, v96);
  sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
  v56 = v93;
  sub_23C328CC8(v54, v41);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v54, v41);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v51, v55);
LABEL_11:
  v70 = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
  v71 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v40);
  v99[0] = v70;
  v99[1] = v71;
  v72 = MEMORY[0x24BDEF3E0];
  v73 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v41, v99);
  v74 = sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
  v98[0] = v73;
  v98[1] = v74;
  MEMORY[0x24261C66C](v72, v48, v98);
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v39, v56, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v56, v48);
}

uint64_t sub_23C287B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28719C(*(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C287B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD v27[2];
  uint64_t v28;

  v22 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C70);
  v6 = *(_QWORD *)(a2 + 16);
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v7 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v7);
  v8 = sub_23C34E64C();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v8);
  v9 = sub_23C34DD34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  v16 = *(_OWORD *)(v3 + 16);
  v27[0] = *(_OWORD *)v3;
  v27[1] = v16;
  v28 = *(_QWORD *)(v3 + 32);
  v17 = *(_QWORD *)(a2 + 24);
  v23 = v6;
  v24 = v17;
  v25 = a1;
  v26 = v27;
  sub_23C34E160();
  sub_23C328F40();
  MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v9);
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v18(v15, v13, v9);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  v18(v22, v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
}

uint64_t sub_23C287D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23C287D48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v6 = sub_23C34DA34();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23C34E868();
  MEMORY[0x24BDAC7A8](v7);
  sub_23C34E85C();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for TrainerTipGalleryView(0, a1, a2, v10);
  sub_23C286CF4();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  result = sub_23C34E310();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13 & 1;
  *(_QWORD *)(a3 + 24) = v14;
  return result;
}

uint64_t sub_23C287EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;

  v6 = type metadata accessor for TrainerTipGalleryAction();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v9;
  v13 = *(_QWORD *)(a1 + 32);
  type metadata accessor for TrainerTipGalleryView(0, a2, a3, v10);
  sub_23C286CF4();
  swift_storeEnumTagMultiPayload();
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
}

uint64_t sub_23C287F9C()
{
  sub_23C287FCC();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C287FCC()
{
  return swift_release();
}

uint64_t sub_23C287FD4()
{
  uint64_t v0;

  return sub_23C287EC8(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23C287FE0(uint64_t a1)
{
  sub_23C28801C();
  swift_retain();
  return a1;
}

uint64_t sub_23C28801C()
{
  return swift_retain();
}

uint64_t sub_23C288024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C288058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C70);
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v9 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v9);
  v10 = sub_23C34E64C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  sub_23C34DFEC();
  v22 = a3;
  v23 = a4;
  v24 = a1;
  v25 = a2;
  sub_23C34E640();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v10);
  v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v17(v16, v14, v10);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v17(v21, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
}

uint64_t sub_23C2881FC@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v70;
  void (*v71)(_BYTE *, uint64_t);
  _BYTE v73[12];
  int v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  __int128 v94;
  __int128 v95;
  uint64_t v96;

  v78 = a4;
  v88 = a5;
  v84 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v80 = &v73[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = v10;
  v11 = sub_23C34DE30();
  v87 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v79 = &v73[-v12];
  v13 = sub_23C34DE30();
  v14 = *(_QWORD *)(v13 - 8);
  v85 = v13;
  v86 = v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v81 = &v73[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v83 = &v73[-v17];
  v18 = type metadata accessor for TrainerTipGalleryLayout();
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v73[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D28);
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v73[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D30);
  MEMORY[0x24BDAC7A8](v24);
  v26 = &v73[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57C70);
  v27 = MEMORY[0x24BDAC7A8](v76);
  v29 = &v73[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v75 = &v73[-v30];
  sub_23C28880C(a1, (uint64_t)v23);
  v74 = sub_23C34E19C();
  v31 = a2[1];
  v94 = *a2;
  v95 = v31;
  v96 = *((_QWORD *)a2 + 4);
  type metadata accessor for TrainerTipGalleryView(0, a3, a4, v32);
  sub_23C286CF4();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34DC20();
  v33 = sub_23C34DC38();
  v34 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 8);
  v34(v20, v33);
  sub_23C34DD28();
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;
  sub_23C28950C((uint64_t)v23, (uint64_t)v26, &qword_256B57D28);
  v43 = &v26[*(int *)(v24 + 36)];
  *v43 = v74;
  *((_QWORD *)v43 + 1) = v36;
  *((_QWORD *)v43 + 2) = v38;
  *((_QWORD *)v43 + 3) = v40;
  *((_QWORD *)v43 + 4) = v42;
  v43[40] = 0;
  sub_23C285184((uint64_t)v23, &qword_256B57D28);
  LOBYTE(v23) = sub_23C34E1B4();
  v44 = a2[1];
  v94 = *a2;
  v95 = v44;
  v96 = *((_QWORD *)a2 + 4);
  sub_23C286CF4();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34DC2C();
  v34(v20, v33);
  sub_23C34DD28();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_23C28950C((uint64_t)v26, (uint64_t)v29, &qword_256B57D30);
  v53 = v76;
  v54 = &v29[*(int *)(v76 + 36)];
  *v54 = (_BYTE)v23;
  *((_QWORD *)v54 + 1) = v46;
  *((_QWORD *)v54 + 2) = v48;
  *((_QWORD *)v54 + 3) = v50;
  *((_QWORD *)v54 + 4) = v52;
  v54[40] = 0;
  sub_23C285184((uint64_t)v26, &qword_256B57D30);
  v55 = v75;
  v56 = sub_23C2894C8((uint64_t)v29, (uint64_t)v75, &qword_256B57C70);
  v57 = v80;
  (*((void (**)(uint64_t))a2 + 3))(v56);
  sub_23C34E184();
  v58 = v79;
  v59 = v77;
  v60 = v78;
  sub_23C34E4B4();
  (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v57, v59);
  sub_23C34E190();
  v61 = MEMORY[0x24BDECC60];
  v93[0] = v60;
  v93[1] = MEMORY[0x24BDECC60];
  v62 = MEMORY[0x24BDED308];
  v63 = v82;
  v64 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v82, v93);
  v65 = v81;
  sub_23C34E4B4();
  (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v58, v63);
  v92[0] = v64;
  v92[1] = v61;
  v66 = v85;
  v67 = MEMORY[0x24261C66C](v62, v85, v92);
  v68 = v86;
  v69 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v86 + 16);
  v70 = v83;
  v69(v83, v65, v66);
  v71 = *(void (**)(_BYTE *, uint64_t))(v68 + 8);
  v71(v65, v66);
  sub_23C28950C((uint64_t)v55, (uint64_t)v29, &qword_256B57C70);
  *(_QWORD *)&v94 = v29;
  v69(v65, v70, v66);
  *((_QWORD *)&v94 + 1) = v65;
  v91[0] = v53;
  v91[1] = v66;
  v89 = sub_23C289258(&qword_256B57D38, &qword_256B57C70, sub_23C28923C);
  v90 = v67;
  sub_23C328D8C((uint64_t *)&v94, 2uLL, (uint64_t)v91);
  v71(v70, v66);
  sub_23C285184((uint64_t)v55, &qword_256B57C70);
  v71(v65, v66);
  return sub_23C285184((uint64_t)v29, &qword_256B57C70);
}

uint64_t sub_23C28880C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[2];
  char v85;
  _BYTE v86[7];
  _BYTE v87[7];
  char v88;
  _BYTE v89[7];
  _BYTE v90[7];
  _BYTE v91[7];
  char v92;
  _OWORD v93[7];
  _OWORD v94[3];

  v2 = a1;
  v66 = a1;
  v74 = a2;
  v3 = sub_23C34E25C();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v71 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23C34DFC8();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34D86C();
  v8 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D60);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v76 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v75 = (uint64_t)&v63 - v14;
  v67 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v67(v10, v2, v7);
  v15 = sub_23C34E34C();
  v17 = v16;
  v19 = v18 & 1;
  sub_23C34E1CC();
  sub_23C34E1F0();
  swift_release();
  v20 = sub_23C34E334();
  v22 = v21;
  LOBYTE(v2) = v23;
  v25 = v24;
  swift_release();
  sub_23C289340(v15, v17, v19);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v27 = sub_23C34E184();
  sub_23C34DD28();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  LOBYTE(v15) = sub_23C34E190();
  sub_23C34DD28();
  v92 = v2 & 1;
  v88 = 0;
  v85 = 0;
  *(_QWORD *)&v77 = v20;
  *((_QWORD *)&v77 + 1) = v22;
  LOBYTE(v78) = v2 & 1;
  *(_DWORD *)((char *)&v78 + 1) = *(_DWORD *)v91;
  DWORD1(v78) = *(_DWORD *)&v91[3];
  *((_QWORD *)&v78 + 1) = v25;
  *(_QWORD *)&v79 = KeyPath;
  BYTE8(v79) = 0;
  *(_DWORD *)((char *)&v79 + 9) = *(_DWORD *)v90;
  HIDWORD(v79) = *(_DWORD *)&v90[3];
  LOBYTE(v80) = v27;
  DWORD1(v80) = *(_DWORD *)&v89[3];
  *(_DWORD *)((char *)&v80 + 1) = *(_DWORD *)v89;
  *((_QWORD *)&v80 + 1) = v29;
  *(_QWORD *)&v81 = v31;
  *((_QWORD *)&v81 + 1) = v33;
  *(_QWORD *)&v82 = v35;
  BYTE8(v82) = 0;
  HIDWORD(v82) = *(_DWORD *)&v87[3];
  *(_DWORD *)((char *)&v82 + 9) = *(_DWORD *)v87;
  LOBYTE(v83) = v15;
  DWORD1(v83) = *(_DWORD *)&v86[3];
  *(_DWORD *)((char *)&v83 + 1) = *(_DWORD *)v86;
  *((_QWORD *)&v83 + 1) = v36;
  *(_QWORD *)&v84[0] = v37;
  *((_QWORD *)&v84[0] + 1) = v38;
  *(_QWORD *)&v84[1] = v39;
  BYTE8(v84[1]) = 0;
  v40 = v64;
  sub_23C34DFBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B57D68);
  sub_23C289258(&qword_256B57D70, &qword_256B57D68, sub_23C28939C);
  v41 = v76;
  sub_23C34E460();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v70);
  v93[6] = v83;
  v94[0] = v84[0];
  *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((char *)v84 + 9);
  v93[2] = v79;
  v93[3] = v80;
  v93[4] = v81;
  v93[5] = v82;
  v93[0] = v77;
  v93[1] = v78;
  sub_23C28947C((uint64_t)v93);
  sub_23C2894C8(v41, v75, &qword_256B57D60);
  v42 = type metadata accessor for TrainerTipGalleryDetail();
  v67(v65, v66 + *(int *)(v42 + 20), v68);
  v43 = sub_23C34E34C();
  v45 = v44;
  LOBYTE(v22) = v46 & 1;
  sub_23C34E1E4();
  v48 = v71;
  v47 = v72;
  v49 = v73;
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, *MEMORY[0x24BDF17C8], v73);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  v50 = sub_23C34E334();
  v52 = v51;
  LOBYTE(v48) = v53;
  v55 = v54;
  swift_release();
  LOBYTE(v15) = v48 & 1;
  sub_23C289340(v43, v45, v22);
  swift_bridgeObjectRelease();
  v56 = swift_getKeyPath();
  LODWORD(v43) = sub_23C34E064();
  v58 = v75;
  v57 = v76;
  sub_23C28950C(v75, v76, &qword_256B57D60);
  v59 = v57;
  v60 = v74;
  sub_23C28950C(v59, v74, &qword_256B57D60);
  v61 = v60 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57DA8) + 48);
  *(_QWORD *)v61 = v50;
  *(_QWORD *)(v61 + 8) = v52;
  *(_BYTE *)(v61 + 16) = v15;
  *(_QWORD *)(v61 + 24) = v55;
  *(_QWORD *)(v61 + 32) = v56;
  *(_BYTE *)(v61 + 40) = 0;
  *(_DWORD *)(v61 + 44) = v43;
  sub_23C289550(v50, v52, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23C285184(v58, &qword_256B57D60);
  sub_23C289340(v50, v52, v15);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23C285184(v76, &qword_256B57D60);
}

uint64_t sub_23C288D54()
{
  return sub_23C34E40C();
}

uint64_t sub_23C288D70()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutDetailContentMargins(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for WorkoutScheduleView()
{
  sub_23C287FCC();
  return swift_release();
}

uint64_t initializeWithCopy for WorkoutScheduleView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WorkoutScheduleView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C287FCC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WorkoutScheduleView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C287FCC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for TrainerTipGalleryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrainerTipGalleryView);
}

uint64_t sub_23C288FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  _QWORD v11[2];
  _QWORD v12[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C68);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C70);
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v0 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v0);
  v1 = sub_23C34E64C();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v1);
  v2 = sub_23C34DD34();
  v3 = sub_23C34E010();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57C78);
  v4 = sub_23C34E010();
  v5 = sub_23C34E58C();
  v6 = sub_23C34DE30();
  v12[0] = sub_23C28943C(&qword_256B57C80, &qword_256B57C68, MEMORY[0x24BDEFC28]);
  v12[1] = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v2);
  v7 = MEMORY[0x24BDEF3E0];
  v11[0] = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v3, v12);
  v11[1] = sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
  v10 = MEMORY[0x24261C66C](v7, v4, v11);
  v9[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v5, &v10);
  v9[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24261C66C](MEMORY[0x24BDED308], v6, v9);
}

uint64_t sub_23C2891BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C287D48(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C2891F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C287D48(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C289224@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_23C288058(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_23C289230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2881FC(*(_QWORD *)(v1 + 32), *(__int128 **)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C28923C()
{
  return sub_23C289258(&qword_256B57D40, &qword_256B57D30, (uint64_t (*)(void))sub_23C2892C4);
}

uint64_t sub_23C289258(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2892C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256B57D48;
  if (!qword_256B57D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57D28);
    v2 = sub_23C28943C(&qword_256B57D50, &qword_256B57D58, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B57D48);
  }
  return result;
}

uint64_t sub_23C289340(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_23C289350@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DEFC();
  *a1 = result;
  return result;
}

uint64_t sub_23C289378()
{
  return sub_23C34DF08();
}

uint64_t sub_23C28939C()
{
  return sub_23C289258(&qword_256B57D78, &qword_256B57D80, (uint64_t (*)(void))sub_23C2893B8);
}

unint64_t sub_23C2893B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B57D88;
  if (!qword_256B57D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B57D90);
    v2 = sub_23C28943C(&qword_256B57D98, &qword_256B57DA0, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B57D88);
  }
  return result;
}

uint64_t sub_23C28943C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24261C66C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C28947C(uint64_t a1)
{
  sub_23C289340(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C2894C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C28950C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C289550(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24261C5D0](a1, v6, a5);
}

void sub_23C289590()
{
  qword_256B57DB0 = 0x6867696C68676968;
  qword_256B57DB8 = 0xE900000000000074;
}

uint64_t static HighlightAttribute.name.getter()
{
  uint64_t v0;

  if (qword_256B574E0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_256B57DB0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static HighlightAttribute.name.setter(uint64_t a1, uint64_t a2)
{
  if (qword_256B574E0 != -1)
    swift_once();
  swift_beginAccess();
  qword_256B57DB0 = a1;
  qword_256B57DB8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HighlightAttribute.name.modify())()
{
  if (qword_256B574E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23C289720()
{
  return sub_23C34D914();
}

uint64_t sub_23C28973C()
{
  return sub_23C34D920();
}

uint64_t sub_23C289758()
{
  sub_23C289A0C();
  return sub_23C34D92C();
}

uint64_t sub_23C2897B8()
{
  uint64_t v0;

  if (qword_256B574E0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_256B57DB0;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_23C289850()
{
  sub_23C2899C8();
  JUMPOUT(0x24261AE90);
}

void sub_23C289888()
{
  sub_23C2899C8();
  JUMPOUT(0x24261AE9CLL);
}

unint64_t sub_23C2898C8()
{
  unint64_t result;

  result = qword_256B57DC0;
  if (!qword_256B57DC0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for HighlightAttribute, &type metadata for HighlightAttribute);
    atomic_store(result, (unint64_t *)&qword_256B57DC0);
  }
  return result;
}

uint64_t sub_23C28990C()
{
  return MEMORY[0x24BEE1338];
}

unint64_t sub_23C28991C()
{
  unint64_t result;

  result = qword_256B57DC8;
  if (!qword_256B57DC8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for AttributeScopes.WorkoutScheduleAttributes, &type metadata for AttributeScopes.WorkoutScheduleAttributes);
    atomic_store(result, (unint64_t *)&qword_256B57DC8);
  }
  return result;
}

unint64_t sub_23C289964()
{
  unint64_t result;

  result = qword_256B57DD0;
  if (!qword_256B57DD0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for AttributeScopes.WorkoutScheduleAttributes, &type metadata for AttributeScopes.WorkoutScheduleAttributes);
    atomic_store(result, (unint64_t *)&qword_256B57DD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightAttribute()
{
  return &type metadata for HighlightAttribute;
}

ValueMetadata *type metadata accessor for AttributeScopes.WorkoutScheduleAttributes()
{
  return &type metadata for AttributeScopes.WorkoutScheduleAttributes;
}

unint64_t sub_23C2899C8()
{
  unint64_t result;

  result = qword_256B57DD8;
  if (!qword_256B57DD8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for AttributeScopes.WorkoutScheduleAttributes, &type metadata for AttributeScopes.WorkoutScheduleAttributes);
    atomic_store(result, (unint64_t *)&qword_256B57DD8);
  }
  return result;
}

unint64_t sub_23C289A0C()
{
  unint64_t result;

  result = qword_256B57DE0;
  if (!qword_256B57DE0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for HighlightAttribute, &type metadata for HighlightAttribute);
    atomic_store(result, (unint64_t *)&qword_256B57DE0);
  }
  return result;
}

uint64_t WorkoutDetailTrainer.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57BB0);
}

uint64_t WorkoutDetailTrainer.bio.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for WorkoutDetailTrainer()
{
  uint64_t result;

  result = qword_256B57E80;
  if (!qword_256B57E80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutDetailTrainer.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailTrainer.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *WorkoutDetailTrainer.init(artwork:bio:identifier:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *result;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;

  sub_23C2894C8(a1, a8, &qword_256B57BB0);
  result = (int *)type metadata accessor for WorkoutDetailTrainer();
  v16 = (_QWORD *)(a8 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = (_QWORD *)(a8 + result[6]);
  *v17 = a4;
  v17[1] = a5;
  v18 = (_QWORD *)(a8 + result[7]);
  *v18 = a6;
  v18[1] = a7;
  return result;
}

uint64_t sub_23C289BEC(char a1)
{
  return *(_QWORD *)&aArtwork_3[8 * a1];
}

uint64_t sub_23C289C0C()
{
  char *v0;

  return sub_23C289BEC(*v0);
}

uint64_t sub_23C289C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C28BFCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C289C38()
{
  sub_23C289E40();
  return sub_23C34ECD0();
}

uint64_t sub_23C289C60()
{
  sub_23C289E40();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailTrainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57DE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C289E40();
  sub_23C34ECC4();
  v8[15] = 0;
  type metadata accessor for WorkoutDetailArtwork();
  sub_23C27FEE4(&qword_256B57DF8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
  sub_23C34EC04();
  if (!v1)
  {
    type metadata accessor for WorkoutDetailTrainer();
    v8[14] = 1;
    sub_23C34EBE0();
    v8[13] = 2;
    sub_23C34EC10();
    v8[12] = 3;
    sub_23C34EC10();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C289E40()
{
  unint64_t result;

  result = qword_256B57DF0;
  if (!qword_256B57DF0)
  {
    result = MEMORY[0x24261C66C](&unk_23C350DBC, &type metadata for WorkoutDetailTrainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57DF0);
  }
  return result;
}

uint64_t WorkoutDetailTrainer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v26 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  MEMORY[0x24BDAC7A8](v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E00);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for WorkoutDetailTrainer();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C289E40();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = a1;
  v12 = v6;
  type metadata accessor for WorkoutDetailArtwork();
  v32 = 0;
  sub_23C27FEE4(&qword_256B57E08, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
  v13 = (uint64_t)v27;
  sub_23C34EB74();
  sub_23C2894C8(v13, (uint64_t)v11, &qword_256B57BB0);
  v31 = 1;
  v14 = sub_23C34EB50();
  v15 = (uint64_t *)&v11[v9[5]];
  *v15 = v14;
  v15[1] = v16;
  v30 = 2;
  v17 = sub_23C34EB80();
  v18 = (uint64_t *)&v11[v9[6]];
  *v18 = v17;
  v18[1] = v19;
  v29 = 3;
  v20 = sub_23C34EB80();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v28);
  v23 = (uint64_t *)&v11[v9[7]];
  *v23 = v20;
  v23[1] = v22;
  sub_23C28A1BC((uint64_t)v11, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_23C283550((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
}

uint64_t sub_23C28A1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutDetailTrainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C28A200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetailTrainer.init(from:)(a1, a2);
}

uint64_t sub_23C28A214(_QWORD *a1)
{
  return WorkoutDetailTrainer.encode(to:)(a1);
}

uint64_t WorkoutDetailTrainer.hash(into:)(uint64_t a1)
{
  uint64_t v1;

  sub_23C28A518(a1);
  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 20) + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutDetailTrainer.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_23C34EC7C();
  sub_23C28A518((uint64_t)v2);
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 20) + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C28A41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_23C34EC7C();
  sub_23C28A518((uint64_t)v5);
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C28A518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v2 = sub_23C34D950();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutDetailArtwork();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C28950C(v1, (uint64_t)v19, &qword_256B57BB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
    return sub_23C34EC94();
  sub_23C286C3C((uint64_t)v19, (uint64_t)v16);
  sub_23C34EC94();
  sub_23C28950C((uint64_t)v16, (uint64_t)v12, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v21 = v27;
  v22 = v28;
  sub_23C28950C((uint64_t)&v16[*(int *)(v13 + 20)], v27, &qword_256B57E20);
  v23 = v29;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v29) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v24 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v26, v21, v23);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
  }
  sub_23C34E8B0();
  return sub_23C283550((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
}

uint64_t sub_23C28A884()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[40];

  sub_23C2894C8(v0, (uint64_t)&v2, &qword_256B57EE0);
  sub_23C2894C8(v0, (uint64_t)v3, &qword_256B57EE0);
  if (v3[32] == 1)
    return sub_23C34EC94();
  sub_23C34EC94();
  sub_23C34ECA0();
  sub_23C34ECA0();
  sub_23C34ECA0();
  return sub_23C34ECA0();
}

uint64_t _s20FitnessProductDetail07WorkoutC7TrainerV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  char v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v4 = type metadata accessor for WorkoutDetailArtwork();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  v44 = a1;
  sub_23C28950C(a1, (uint64_t)&v43 - v17, &qword_256B57BB0);
  v45 = a2;
  sub_23C28950C(a2, (uint64_t)v16, &qword_256B57BB0);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_23C28950C((uint64_t)v18, (uint64_t)v9, &qword_256B57BB0);
  sub_23C28950C((uint64_t)v16, v19, &qword_256B57BB0);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_23C285184((uint64_t)v16, &qword_256B57BB0);
    sub_23C285184((uint64_t)v18, &qword_256B57BB0);
    if (v20(v19, 1, v4) == 1)
    {
      sub_23C285184((uint64_t)v9, &qword_256B57BB0);
      goto LABEL_10;
    }
LABEL_6:
    sub_23C285184((uint64_t)v9, &qword_256B57BB8);
    goto LABEL_7;
  }
  v21 = (uint64_t)v46;
  sub_23C28950C((uint64_t)v9, (uint64_t)v13, &qword_256B57BB0);
  if (v20(v19, 1, v4) == 1)
  {
    sub_23C285184((uint64_t)v16, &qword_256B57BB0);
    sub_23C285184((uint64_t)v18, &qword_256B57BB0);
    sub_23C283550((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
    goto LABEL_6;
  }
  sub_23C286C3C(v19, v21);
  v24 = static WorkoutDetailArtwork.== infix(_:_:)(v13, v21);
  sub_23C283550(v21, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
  sub_23C285184((uint64_t)v16, &qword_256B57BB0);
  sub_23C285184((uint64_t)v18, &qword_256B57BB0);
  sub_23C283550((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
  sub_23C285184((uint64_t)v9, &qword_256B57BB0);
  if ((v24 & 1) == 0)
    goto LABEL_7;
LABEL_10:
  v25 = (int *)type metadata accessor for WorkoutDetailTrainer();
  v26 = v25[5];
  v28 = v44;
  v27 = v45;
  v29 = (_QWORD *)(v44 + v26);
  v30 = *(_QWORD *)(v44 + v26 + 8);
  v31 = (_QWORD *)(v45 + v26);
  v32 = v31[1];
  if (v30)
  {
    if (v32)
    {
      if (*v29 != *v31 || v30 != v32)
      {
        v33 = sub_23C34EC64();
        v22 = 0;
        if ((v33 & 1) == 0)
          return v22 & 1;
      }
      goto LABEL_17;
    }
LABEL_7:
    v22 = 0;
    return v22 & 1;
  }
  if (v32)
    goto LABEL_7;
LABEL_17:
  v34 = v25[6];
  v35 = *(_QWORD *)(v28 + v34);
  v36 = *(_QWORD *)(v28 + v34 + 8);
  v37 = (_QWORD *)(v27 + v34);
  if (v35 == *v37 && v36 == v37[1] || (v38 = sub_23C34EC64(), v22 = 0, (v38 & 1) != 0))
  {
    v39 = v25[7];
    v40 = *(_QWORD *)(v28 + v39);
    v41 = *(_QWORD *)(v28 + v39 + 8);
    v42 = (_QWORD *)(v27 + v39);
    if (v40 == *v42 && v41 == v42[1])
      v22 = 1;
    else
      v22 = sub_23C34EC64();
  }
  return v22 & 1;
}

uint64_t sub_23C28ACE8()
{
  return sub_23C27FEE4(&qword_256B57E10, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailTrainer, (uint64_t)&protocol conformance descriptor for WorkoutDetailTrainer);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutDetailTrainer(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for WorkoutDetailArtwork();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_23C34DA94();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      v14 = *(int *)(v7 + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23C34D950();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      v20 = *(int *)(v7 + 24);
      v21 = (uint64_t *)((char *)a1 + v20);
      v22 = (uint64_t *)((char *)a2 + v20);
      v23 = v22[1];
      *v21 = *v22;
      v21[1] = v23;
      v24 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v24(a1, 0, 1, v7);
    }
    v25 = a3[5];
    v26 = a3[6];
    v27 = (uint64_t *)((char *)a1 + v25);
    v28 = (uint64_t *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (uint64_t *)((char *)a1 + v26);
    v31 = (uint64_t *)((char *)a2 + v26);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[7];
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutDetailTrainer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for WorkoutDetailArtwork();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = sub_23C34DA94();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v5 = a1 + *(int *)(v2 + 20);
    v6 = sub_23C34D950();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WorkoutDetailTrainer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = type metadata accessor for WorkoutDetailArtwork();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23C34DA94();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_23C34D950();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = *(int *)(v6 + 24);
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v22(a1, 0, 1, v6);
  }
  v23 = a3[5];
  v24 = a3[6];
  v25 = &a1[v23];
  v26 = &a2[v23];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = &a1[v24];
  v29 = &a2[v24];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for WorkoutDetailTrainer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v6 = type metadata accessor for WorkoutDetailArtwork();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
      goto LABEL_7;
    }
    v15 = sub_23C34DA94();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 24))(a1, a2, v15);
LABEL_19:
        v31 = *(int *)(v6 + 20);
        v32 = &a1[v31];
        v33 = &a2[v31];
        v34 = sub_23C34D950();
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
        v37 = v36(v32, 1, v34);
        v38 = v36(v33, 1, v34);
        if (v37)
        {
          if (!v38)
          {
            (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_25:
            v40 = *(int *)(v6 + 24);
            v41 = &a1[v40];
            v42 = &a2[v40];
            *(_QWORD *)v41 = *(_QWORD *)v42;
            *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          if (!v38)
          {
            (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v32, v33, v34);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
        }
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_26;
  }
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v20 = *(int *)(v6 + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23C34D950();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = *(int *)(v6 + 24);
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v29(a1, 0, 1, v6);
LABEL_26:
  v43 = a3[5];
  v44 = &a1[v43];
  v45 = &a2[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[6];
  v47 = &a1[v46];
  v48 = &a2[v46];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = a3[7];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WorkoutDetailTrainer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for WorkoutDetailArtwork();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23C34DA94();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_23C34D950();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(_OWORD *)&a1[*(int *)(v6 + 24)] = *(_OWORD *)&a2[*(int *)(v6 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v18 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for WorkoutDetailTrainer(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = type metadata accessor for WorkoutDetailArtwork();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
      goto LABEL_7;
    }
    v15 = sub_23C34DA94();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 40))(a1, a2, v15);
LABEL_19:
        v27 = *(int *)(v6 + 20);
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = sub_23C34D950();
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
        v33 = v32(v28, 1, v30);
        v34 = v32(v29, 1, v30);
        if (v33)
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_25:
            v36 = *(int *)(v6 + 24);
            v37 = &a1[v36];
            v38 = &a2[v36];
            v40 = *(_QWORD *)v38;
            v39 = *((_QWORD *)v38 + 1);
            *(_QWORD *)v37 = v40;
            *((_QWORD *)v37 + 1) = v39;
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          if (!v34)
          {
            (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
        }
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_26;
  }
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v20 = *(int *)(v6 + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_23C34D950();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)&a1[*(int *)(v6 + 24)] = *(_OWORD *)&a2[*(int *)(v6 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_26:
  v41 = a3[5];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v45 = *(_QWORD *)v43;
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v46 = a3[6];
  v47 = &a1[v46];
  v48 = &a2[v46];
  v50 = *(_QWORD *)v48;
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = v50;
  *((_QWORD *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  v51 = a3[7];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v55 = *(_QWORD *)v53;
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailTrainer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C28BC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailTrainer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C28BCD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_23C28BD58()
{
  unint64_t v0;

  sub_23C28BDD4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23C28BDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B57E90)
  {
    type metadata accessor for WorkoutDetailArtwork();
    v0 = sub_23C34EA48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B57E90);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailTrainer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C28BE74 + 4 * byte_23C350BC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C28BEA8 + 4 * asc_23C350BC0[v4]))();
}

uint64_t sub_23C28BEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28BEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C28BEB8);
  return result;
}

uint64_t sub_23C28BEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C28BECCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C28BED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28BED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailTrainer.CodingKeys()
{
  return &type metadata for WorkoutDetailTrainer.CodingKeys;
}

unint64_t sub_23C28BEF8()
{
  unint64_t result;

  result = qword_256B57EC8;
  if (!qword_256B57EC8)
  {
    result = MEMORY[0x24261C66C](&unk_23C350D94, &type metadata for WorkoutDetailTrainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57EC8);
  }
  return result;
}

unint64_t sub_23C28BF40()
{
  unint64_t result;

  result = qword_256B57ED0;
  if (!qword_256B57ED0)
  {
    result = MEMORY[0x24261C66C](&unk_23C350D04, &type metadata for WorkoutDetailTrainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57ED0);
  }
  return result;
}

unint64_t sub_23C28BF88()
{
  unint64_t result;

  result = qword_256B57ED8;
  if (!qword_256B57ED8)
  {
    result = MEMORY[0x24261C66C](&unk_23C350D2C, &type metadata for WorkoutDetailTrainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57ED8);
  }
  return result;
}

uint64_t sub_23C28BFCC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7301474 && a2 == 0xE300000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C28C154(char a1)
{
  return *(_QWORD *)&aIdle_11[8 * a1];
}

uint64_t sub_23C28C174()
{
  char *v0;

  return sub_23C28C154(*v0);
}

uint64_t sub_23C28C17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C28DDE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C28C1A0()
{
  sub_23C28C768();
  return sub_23C34ECD0();
}

uint64_t sub_23C28C1C8()
{
  sub_23C28C768();
  return sub_23C34ECDC();
}

uint64_t sub_23C28C1F0()
{
  sub_23C28C878();
  return sub_23C34ECD0();
}

uint64_t sub_23C28C218()
{
  sub_23C28C878();
  return sub_23C34ECDC();
}

uint64_t sub_23C28C240()
{
  sub_23C28C7F0();
  return sub_23C34ECD0();
}

uint64_t sub_23C28C268()
{
  sub_23C28C7F0();
  return sub_23C34ECDC();
}

uint64_t sub_23C28C290()
{
  sub_23C28C834();
  return sub_23C34ECD0();
}

uint64_t sub_23C28C2B8()
{
  sub_23C28C834();
  return sub_23C34ECDC();
}

uint64_t sub_23C28C2E0()
{
  sub_23C28C8BC();
  return sub_23C34ECD0();
}

uint64_t sub_23C28C308()
{
  sub_23C28C8BC();
  return sub_23C34ECDC();
}

void TrainerTipGalleryDetailLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t State;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57EF8);
  v17[5] = *(_QWORD *)(v2 - 8);
  v17[6] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v17[4] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TrainerTipGalleryDetail();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v17[3] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F00);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F08);
  v17[8] = *(_QWORD *)(v9 - 8);
  v17[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[7] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F10);
  v17[1] = *(_QWORD *)(v11 - 8);
  v17[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F18);
  v17[13] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28C768();
  sub_23C34ECC4();
  sub_23C28C7AC(v17[15], (uint64_t)v14);
  v16 = (char *)sub_23C28C57C
      + 4 * byte_23C350E50[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_23C28C57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v3 - 184);
  sub_23C2851C0(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  *(_BYTE *)(v3 - 65) = 3;
  sub_23C28C7F0();
  v5 = *(_QWORD *)(v3 - 176);
  sub_23C34EBD4();
  sub_23C28CF08(&qword_256B57F30, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryDetail);
  v6 = *(_QWORD *)(v3 - 160);
  sub_23C34EC40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v5, v6);
  sub_23C283550(v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v1, v0);
}

uint64_t type metadata accessor for TrainerTipGalleryDetailLoadState()
{
  uint64_t result;

  result = qword_256B57FF0;
  if (!qword_256B57FF0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C28C768()
{
  unint64_t result;

  result = qword_256B57F20;
  if (!qword_256B57F20)
  {
    result = MEMORY[0x24261C66C](&unk_23C351334, &type metadata for TrainerTipGalleryDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57F20);
  }
  return result;
}

uint64_t sub_23C28C7AC(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_23C28C7F0()
{
  unint64_t result;

  result = qword_256B57F28;
  if (!qword_256B57F28)
  {
    result = MEMORY[0x24261C66C](&unk_23C3512E4, &type metadata for TrainerTipGalleryDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57F28);
  }
  return result;
}

unint64_t sub_23C28C834()
{
  unint64_t result;

  result = qword_256B57F38;
  if (!qword_256B57F38)
  {
    result = MEMORY[0x24261C66C](&unk_23C351294, &type metadata for TrainerTipGalleryDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57F38);
  }
  return result;
}

unint64_t sub_23C28C878()
{
  unint64_t result;

  result = qword_256B57F40;
  if (!qword_256B57F40)
  {
    result = MEMORY[0x24261C66C](&unk_23C351244, &type metadata for TrainerTipGalleryDetailLoadState.FailedToLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57F40);
  }
  return result;
}

unint64_t sub_23C28C8BC()
{
  unint64_t result;

  result = qword_256B57F48;
  if (!qword_256B57F48)
  {
    result = MEMORY[0x24261C66C](&unk_23C3511F4, &type metadata for TrainerTipGalleryDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B57F48);
  }
  return result;
}

uint64_t TrainerTipGalleryDetailLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t State;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;

  v41 = a2;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F50);
  v35 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F58);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F60);
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F68);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57F70);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  v15 = MEMORY[0x24BDAC7A8](State);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v27 - v18;
  v20 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23C28C768();
  v21 = v43;
  sub_23C34ECB8();
  if (!v21)
  {
    v27[1] = v19;
    v28 = State;
    v27[0] = v17;
    v43 = v11;
    v22 = sub_23C34EBBC();
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v23 = sub_23C34EAC0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v25 = v28;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_23C28CF08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TrainerTipGalleryDetail();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C28CF48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryDetailLoadState.init(from:)(a1, a2);
}

void sub_23C28CF5C(_QWORD *a1)
{
  TrainerTipGalleryDetailLoadState.encode(to:)(a1);
}

void _s20FitnessProductDetail017TrainerTipGalleryC9LoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t State;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for TrainerTipGalleryDetail();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58060);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  sub_23C28C7AC(a1, (uint64_t)v9);
  sub_23C28C7AC(a2, v11);
  v12 = (char *)sub_23C28D08C
      + 4 * byte_23C350E58[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 3, v4)];
  __asm { BR              X10 }
}

uint64_t sub_23C28D08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  sub_23C28C7AC(v0, v3);
  if (v4(v5, 3, v1))
  {
    sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
    sub_23C28DF88(v0);
    return 0;
  }
  sub_23C2851C0(v5, v2, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  if ((sub_23C34D800() & 1) == 0 || (sub_23C34D800() & 1) == 0)
  {
    sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
    sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
    sub_23C283550(v0, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
    return 0;
  }
  sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  sub_23C283550(v0, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
  return 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryDetailLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TrainerTipGalleryDetail();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23C34D86C();
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(a1, a2, v10);
      v11((uint64_t *)((char *)a1 + *(int *)(v7 + 20)), (uint64_t *)((char *)a2 + *(int *)(v7 + 20)), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryDetailLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = type metadata accessor for TrainerTipGalleryDetail();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23C34D86C();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(v2 + 20), v4);
  }
  return result;
}

char *initializeWithCopy for TrainerTipGalleryDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23C34D86C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    v9(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithCopy for TrainerTipGalleryDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23C34D86C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
      v15(a1, a2, v14);
      v15(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v14);
      return a1;
    }
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23C34D86C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(a1, a2, v11);
  v12(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *initializeWithTake for TrainerTipGalleryDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23C34D86C();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    v9(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithTake for TrainerTipGalleryDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23C34D86C();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
      v15(a1, a2, v14);
      v15(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v14);
      return a1;
    }
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23C34D86C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  v12(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryDetailLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C28D778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for TrainerTipGalleryDetail();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryDetailLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C28D7D0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = type metadata accessor for TrainerTipGalleryDetail();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C28D824(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrainerTipGalleryDetail();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_23C28D85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTipGalleryDetail();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_23C28D89C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TrainerTipGalleryDetail();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryDetailLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C28D93C + 4 * byte_23C350E61[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C28D970 + 4 * byte_23C350E5C[v4]))();
}

uint64_t sub_23C28D970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28D978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C28D980);
  return result;
}

uint64_t sub_23C28D98C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C28D994);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C28D998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28D9A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetailLoadState.CodingKeys()
{
  return &type metadata for TrainerTipGalleryDetailLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetailLoadState.IdleCodingKeys()
{
  return &type metadata for TrainerTipGalleryDetailLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetailLoadState.FailedToLoadCodingKeys()
{
  return &type metadata for TrainerTipGalleryDetailLoadState.FailedToLoadCodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetailLoadState.FetchingCodingKeys()
{
  return &type metadata for TrainerTipGalleryDetailLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryDetailLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C28DA2C + 4 * byte_23C350E66[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C28DA4C + 4 * byte_23C350E6B[v4]))();
}

_BYTE *sub_23C28DA2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C28DA4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C28DA54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C28DA5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C28DA64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C28DA6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetailLoadState.FetchedCodingKeys()
{
  return &type metadata for TrainerTipGalleryDetailLoadState.FetchedCodingKeys;
}

unint64_t sub_23C28DA8C()
{
  unint64_t result;

  result = qword_256B58000;
  if (!qword_256B58000)
  {
    result = MEMORY[0x24261C66C](&unk_23C351024, &type metadata for TrainerTipGalleryDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58000);
  }
  return result;
}

unint64_t sub_23C28DAD4()
{
  unint64_t result;

  result = qword_256B58008;
  if (!qword_256B58008)
  {
    result = MEMORY[0x24261C66C](&unk_23C3511CC, &type metadata for TrainerTipGalleryDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58008);
  }
  return result;
}

unint64_t sub_23C28DB1C()
{
  unint64_t result;

  result = qword_256B58010;
  if (!qword_256B58010)
  {
    result = MEMORY[0x24261C66C](&unk_23C3510EC, &type metadata for TrainerTipGalleryDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58010);
  }
  return result;
}

unint64_t sub_23C28DB64()
{
  unint64_t result;

  result = qword_256B58018;
  if (!qword_256B58018)
  {
    result = MEMORY[0x24261C66C](&unk_23C351114, &type metadata for TrainerTipGalleryDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58018);
  }
  return result;
}

unint64_t sub_23C28DBAC()
{
  unint64_t result;

  result = qword_256B58020;
  if (!qword_256B58020)
  {
    result = MEMORY[0x24261C66C](&unk_23C35109C, &type metadata for TrainerTipGalleryDetailLoadState.FailedToLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58020);
  }
  return result;
}

unint64_t sub_23C28DBF4()
{
  unint64_t result;

  result = qword_256B58028;
  if (!qword_256B58028)
  {
    result = MEMORY[0x24261C66C](&unk_23C3510C4, &type metadata for TrainerTipGalleryDetailLoadState.FailedToLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58028);
  }
  return result;
}

unint64_t sub_23C28DC3C()
{
  unint64_t result;

  result = qword_256B58030;
  if (!qword_256B58030)
  {
    result = MEMORY[0x24261C66C](&unk_23C35104C, &type metadata for TrainerTipGalleryDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58030);
  }
  return result;
}

unint64_t sub_23C28DC84()
{
  unint64_t result;

  result = qword_256B58038;
  if (!qword_256B58038)
  {
    result = MEMORY[0x24261C66C](&unk_23C351074, &type metadata for TrainerTipGalleryDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58038);
  }
  return result;
}

unint64_t sub_23C28DCCC()
{
  unint64_t result;

  result = qword_256B58040;
  if (!qword_256B58040)
  {
    result = MEMORY[0x24261C66C](&unk_23C350F94, &type metadata for TrainerTipGalleryDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58040);
  }
  return result;
}

unint64_t sub_23C28DD14()
{
  unint64_t result;

  result = qword_256B58048;
  if (!qword_256B58048)
  {
    result = MEMORY[0x24261C66C](&unk_23C350FBC, &type metadata for TrainerTipGalleryDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58048);
  }
  return result;
}

unint64_t sub_23C28DD5C()
{
  unint64_t result;

  result = qword_256B58050;
  if (!qword_256B58050)
  {
    result = MEMORY[0x24261C66C](&unk_23C35113C, &type metadata for TrainerTipGalleryDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58050);
  }
  return result;
}

unint64_t sub_23C28DDA4()
{
  unint64_t result;

  result = qword_256B58058;
  if (!qword_256B58058)
  {
    result = MEMORY[0x24261C66C](&unk_23C351164, &type metadata for TrainerTipGalleryDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58058);
  }
  return result;
}

uint64_t sub_23C28DDE8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5464656C696166 && a2 == 0xEC00000064616F4CLL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C28DF88(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static WorkoutContextMenuPreviewSizeClass.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23C28DFD8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x72616C75676572;
  else
    return 0x746361706D6F63;
}

uint64_t sub_23C28E008()
{
  char *v0;

  return sub_23C28DFD8(*v0);
}

uint64_t sub_23C28E010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C28E484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C28E034()
{
  sub_23C28E2F4();
  return sub_23C34ECD0();
}

uint64_t sub_23C28E05C()
{
  sub_23C28E2F4();
  return sub_23C34ECDC();
}

uint64_t sub_23C28E084()
{
  sub_23C28E37C();
  return sub_23C34ECD0();
}

uint64_t sub_23C28E0AC()
{
  sub_23C28E37C();
  return sub_23C34ECDC();
}

uint64_t sub_23C28E0D4()
{
  sub_23C28E338();
  return sub_23C34ECD0();
}

uint64_t sub_23C28E0FC()
{
  sub_23C28E338();
  return sub_23C34ECDC();
}

uint64_t WorkoutContextMenuPreviewSizeClass.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58068);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58070);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58078);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28E2F4();
  sub_23C34ECC4();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23C28E338();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23C28E37C();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23C28E2F4()
{
  unint64_t result;

  result = qword_256B58080;
  if (!qword_256B58080)
  {
    result = MEMORY[0x24261C66C](&unk_23C3516FC, &type metadata for WorkoutContextMenuPreviewSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58080);
  }
  return result;
}

unint64_t sub_23C28E338()
{
  unint64_t result;

  result = qword_256B58088;
  if (!qword_256B58088)
  {
    result = MEMORY[0x24261C66C](&unk_23C3516AC, &type metadata for WorkoutContextMenuPreviewSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58088);
  }
  return result;
}

unint64_t sub_23C28E37C()
{
  unint64_t result;

  result = qword_256B58090;
  if (!qword_256B58090)
  {
    result = MEMORY[0x24261C66C](&unk_23C35165C, &type metadata for WorkoutContextMenuPreviewSizeClass.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58090);
  }
  return result;
}

uint64_t WorkoutContextMenuPreviewSizeClass.init(from:)(_QWORD *a1)
{
  return sub_23C28E56C(a1) & 1;
}

uint64_t sub_23C28E3D8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C28E56C(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_23C28E404(_QWORD *a1)
{
  unsigned __int8 *v1;

  return WorkoutContextMenuPreviewSizeClass.encode(to:)(a1, *v1);
}

uint64_t WorkoutContextMenuPreviewSizeClass.hash(into:)()
{
  return sub_23C34EC88();
}

uint64_t WorkoutContextMenuPreviewSizeClass.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C28E484(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746361706D6F63 && a2 == 0xE700000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C75676572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C28E56C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B580D8);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B580E0);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B580E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28E2F4();
  v10 = v26;
  sub_23C34ECB8();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23C34EBBC();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23C34EAC0();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v19 = &type metadata for WorkoutContextMenuPreviewSizeClass;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23C28E338();
    sub_23C34EB38();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23C28E37C();
    sub_23C34EB38();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

unint64_t sub_23C28E89C()
{
  unint64_t result;

  result = qword_256B58098;
  if (!qword_256B58098)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutContextMenuPreviewSizeClass, &type metadata for WorkoutContextMenuPreviewSizeClass);
    atomic_store(result, (unint64_t *)&qword_256B58098);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewSizeClass()
{
  return &type metadata for WorkoutContextMenuPreviewSizeClass;
}

uint64_t _s20FitnessProductDetail34WorkoutContextMenuPreviewSizeClassOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C28E944 + 4 * byte_23C3513D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C28E978 + 4 * byte_23C3513D0[v4]))();
}

uint64_t sub_23C28E978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28E980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C28E988);
  return result;
}

uint64_t sub_23C28E994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C28E99CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C28E9A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C28E9A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewSizeClass.CodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewSizeClass.CompactCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewSizeClass.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewSizeClass.RegularCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewSizeClass.RegularCodingKeys;
}

unint64_t sub_23C28E9E8()
{
  unint64_t result;

  result = qword_256B580A0;
  if (!qword_256B580A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C351634, &type metadata for WorkoutContextMenuPreviewSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580A0);
  }
  return result;
}

unint64_t sub_23C28EA30()
{
  unint64_t result;

  result = qword_256B580A8;
  if (!qword_256B580A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C351554, &type metadata for WorkoutContextMenuPreviewSizeClass.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580A8);
  }
  return result;
}

unint64_t sub_23C28EA78()
{
  unint64_t result;

  result = qword_256B580B0;
  if (!qword_256B580B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35157C, &type metadata for WorkoutContextMenuPreviewSizeClass.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580B0);
  }
  return result;
}

unint64_t sub_23C28EAC0()
{
  unint64_t result;

  result = qword_256B580B8;
  if (!qword_256B580B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C351504, &type metadata for WorkoutContextMenuPreviewSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580B8);
  }
  return result;
}

unint64_t sub_23C28EB08()
{
  unint64_t result;

  result = qword_256B580C0;
  if (!qword_256B580C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35152C, &type metadata for WorkoutContextMenuPreviewSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580C0);
  }
  return result;
}

unint64_t sub_23C28EB50()
{
  unint64_t result;

  result = qword_256B580C8;
  if (!qword_256B580C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3515A4, &type metadata for WorkoutContextMenuPreviewSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580C8);
  }
  return result;
}

unint64_t sub_23C28EB98()
{
  unint64_t result;

  result = qword_256B580D0;
  if (!qword_256B580D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3515CC, &type metadata for WorkoutContextMenuPreviewSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580D0);
  }
  return result;
}

uint64_t WorkoutContextMenuPreviewArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57E18);
}

uint64_t WorkoutContextMenuPreviewArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  return sub_23C28950C(v1 + *(int *)(v3 + 20), a1, &qword_256B57E20);
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewArtwork()
{
  uint64_t result;

  result = qword_256B581A0;
  if (!qword_256B581A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutContextMenuPreviewArtwork.init(backgroundColor:templateURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_23C2894C8(a1, a3, &qword_256B57E18);
  v5 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  return sub_23C2894C8(a2, a3 + *(int *)(v5 + 20), &qword_256B57E20);
}

uint64_t sub_23C28ECD0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6574616C706D6574;
  else
    return 0x756F72676B636162;
}

uint64_t sub_23C28ED1C()
{
  char *v0;

  return sub_23C28ECD0(*v0);
}

uint64_t sub_23C28ED24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2908A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C28ED48()
{
  sub_23C28EF68();
  return sub_23C34ECD0();
}

uint64_t sub_23C28ED70()
{
  sub_23C28EF68();
  return sub_23C34ECDC();
}

uint64_t sub_23C28ED98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57E18);
}

uint64_t sub_23C28EDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C28950C(v2 + *(int *)(a1 + 20), a2, &qword_256B57E20);
}

uint64_t WorkoutContextMenuPreviewArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B580F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28EF68();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34DA94();
  sub_23C27FEE4(&qword_256B58100, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C34EC04();
  if (!v1)
  {
    type metadata accessor for WorkoutContextMenuPreviewArtwork();
    v8[14] = 1;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC04();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C28EF68()
{
  unint64_t result;

  result = qword_256B580F8;
  if (!qword_256B580F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C351954, &type metadata for WorkoutContextMenuPreviewArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B580F8);
  }
  return result;
}

uint64_t WorkoutContextMenuPreviewArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v22 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58110);
  v8 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C28EF68();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v14 = v8;
  v15 = (uint64_t)v13;
  v16 = (uint64_t)v23;
  sub_23C34DA94();
  v27 = 0;
  sub_23C27FEE4(&qword_256B58118, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  v18 = (uint64_t)v24;
  v17 = v25;
  sub_23C34EB74();
  sub_23C2894C8(v18, v15, &qword_256B57E18);
  sub_23C34D950();
  v26 = 1;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EB74();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
  sub_23C2894C8(v16, v15 + *(int *)(v11 + 20), &qword_256B57E20);
  sub_23C28F288(v15, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_23C28F2CC(v15);
}

uint64_t sub_23C28F288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C28F2CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C28F308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutContextMenuPreviewArtwork.init(from:)(a1, a2);
}

uint64_t sub_23C28F31C(_QWORD *a1)
{
  return WorkoutContextMenuPreviewArtwork.encode(to:)(a1);
}

uint64_t WorkoutContextMenuPreviewArtwork.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  char *v19;

  v1 = v0;
  v2 = sub_23C34D950();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C34DA94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C28950C(v1, (uint64_t)v14, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v15 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  sub_23C28950C(v1 + *(int *)(v15 + 20), (uint64_t)v7, &qword_256B57E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
    return sub_23C34EC94();
  v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_23C34EC94();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
}

uint64_t WorkoutContextMenuPreviewArtwork.hashValue.getter()
{
  sub_23C34EC7C();
  WorkoutContextMenuPreviewArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C28F5EC()
{
  sub_23C34EC7C();
  WorkoutContextMenuPreviewArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C28F62C()
{
  sub_23C34EC7C();
  WorkoutContextMenuPreviewArtwork.hash(into:)();
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail32WorkoutContextMenuPreviewArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = sub_23C34D950();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58200);
  MEMORY[0x24BDAC7A8](v51);
  v57 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v47 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v47 - v11;
  v12 = sub_23C34DA94();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58208);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v47 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v47 - v25;
  v52 = a1;
  sub_23C28950C(a1, (uint64_t)&v47 - v25, &qword_256B57E18);
  v54 = a2;
  sub_23C28950C(a2, (uint64_t)v24, &qword_256B57E18);
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_23C28950C((uint64_t)v26, (uint64_t)v17, &qword_256B57E18);
  sub_23C28950C((uint64_t)v24, v27, &qword_256B57E18);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v28((uint64_t)v17, 1, v12) != 1)
  {
    sub_23C28950C((uint64_t)v17, (uint64_t)v21, &qword_256B57E18);
    if (v28(v27, 1, v12) != 1)
    {
      v31 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v50, v27, v12);
      sub_23C27FEE4(&qword_256B58218, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
      v32 = sub_23C34E850();
      v33 = *(void (**)(char *, uint64_t))(v13 + 8);
      v33(v31, v12);
      sub_23C285184((uint64_t)v24, &qword_256B57E18);
      sub_23C285184((uint64_t)v26, &qword_256B57E18);
      v33(v21, v12);
      sub_23C285184((uint64_t)v17, &qword_256B57E18);
      if ((v32 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)v24, &qword_256B57E18);
    sub_23C285184((uint64_t)v26, &qword_256B57E18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
LABEL_6:
    v29 = &qword_256B58208;
    v30 = (uint64_t)v17;
LABEL_14:
    sub_23C285184(v30, v29);
    return 0;
  }
  sub_23C285184((uint64_t)v24, &qword_256B57E18);
  sub_23C285184((uint64_t)v26, &qword_256B57E18);
  if (v28(v27, 1, v12) != 1)
    goto LABEL_6;
  sub_23C285184((uint64_t)v17, &qword_256B57E18);
LABEL_8:
  v34 = type metadata accessor for WorkoutContextMenuPreviewArtwork();
  v35 = v55;
  sub_23C28950C(v52 + *(int *)(v34 + 20), v55, &qword_256B57E20);
  v36 = v53;
  sub_23C28950C(v54 + *(int *)(v34 + 20), v53, &qword_256B57E20);
  v37 = v57;
  v38 = v57 + *(int *)(v51 + 48);
  sub_23C28950C(v35, v57, &qword_256B57E20);
  sub_23C28950C(v36, v38, &qword_256B57E20);
  v39 = v56;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v41 = v58;
  if (v40(v37, 1, v58) == 1)
  {
    sub_23C285184(v36, &qword_256B57E20);
    sub_23C285184(v35, &qword_256B57E20);
    if (v40(v38, 1, v41) == 1)
    {
      sub_23C285184(v37, &qword_256B57E20);
      return 1;
    }
    goto LABEL_13;
  }
  v42 = v49;
  sub_23C28950C(v37, v49, &qword_256B57E20);
  if (v40(v38, 1, v41) == 1)
  {
    sub_23C285184(v36, &qword_256B57E20);
    sub_23C285184(v35, &qword_256B57E20);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
LABEL_13:
    v29 = &qword_256B58200;
    v30 = v37;
    goto LABEL_14;
  }
  v44 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v48, v38, v41);
  sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v45 = sub_23C34E850();
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v44, v41);
  sub_23C285184(v36, &qword_256B57E20);
  sub_23C285184(v35, &qword_256B57E20);
  v46((char *)v42, v41);
  sub_23C285184(v37, &qword_256B57E20);
  return (v45 & 1) != 0;
}

uint64_t sub_23C28FC4C()
{
  return sub_23C27FEE4(&qword_256B58128, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewArtwork, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewArtwork);
}

uint64_t sub_23C28FC78()
{
  return sub_23C27FEE4(&qword_256B58130, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewArtwork, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewArtwork);
}

uint64_t sub_23C28FCA4()
{
  return sub_23C27FEE4(&qword_256B58138, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewArtwork, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewArtwork);
}

uint64_t sub_23C28FCD0()
{
  return sub_23C27FEE4(&qword_256B58140, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewArtwork, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewArtwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewArtwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DA94();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23C34D950();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutContextMenuPreviewArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_23C34DA94();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23C34D950();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

char *initializeWithCopy for WorkoutContextMenuPreviewArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C34D950();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for WorkoutContextMenuPreviewArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for WorkoutContextMenuPreviewArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C34D950();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for WorkoutContextMenuPreviewArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewArtwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C290504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewArtwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29058C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C290610()
{
  unint64_t v0;
  unint64_t v1;

  sub_23C2906B4(319, &qword_256B581B0, (void (*)(uint64_t))MEMORY[0x24BE34FA0]);
  if (v0 <= 0x3F)
  {
    sub_23C2906B4(319, qword_256B581B8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23C2906B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23C34EA48();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C29074C + 4 * byte_23C351755[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C290780 + 4 * byte_23C351750[v4]))();
}

uint64_t sub_23C290780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C290788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C290790);
  return result;
}

uint64_t sub_23C29079C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2907A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2907A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2907B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewArtwork.CodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewArtwork.CodingKeys;
}

unint64_t sub_23C2907D0()
{
  unint64_t result;

  result = qword_256B581E8;
  if (!qword_256B581E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35192C, &type metadata for WorkoutContextMenuPreviewArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B581E8);
  }
  return result;
}

unint64_t sub_23C290818()
{
  unint64_t result;

  result = qword_256B581F0;
  if (!qword_256B581F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35189C, &type metadata for WorkoutContextMenuPreviewArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B581F0);
  }
  return result;
}

unint64_t sub_23C290860()
{
  unint64_t result;

  result = qword_256B581F8;
  if (!qword_256B581F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3518C4, &type metadata for WorkoutContextMenuPreviewArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B581F8);
  }
  return result;
}

uint64_t sub_23C2908A4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C2909B4()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23C2909E4()
{
  return sub_23C2909B4();
}

uint64_t sub_23C2909EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C291A40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C290A10()
{
  sub_23C290F64();
  return sub_23C34ECD0();
}

uint64_t sub_23C290A38()
{
  sub_23C290F64();
  return sub_23C34ECDC();
}

uint64_t sub_23C290A60()
{
  sub_23C290FA8();
  return sub_23C34ECD0();
}

uint64_t sub_23C290A88()
{
  sub_23C290FA8();
  return sub_23C34ECDC();
}

uint64_t sub_23C290AB0()
{
  sub_23C290FEC();
  return sub_23C34ECD0();
}

uint64_t sub_23C290AD8()
{
  sub_23C290FEC();
  return sub_23C34ECDC();
}

void static DownloadStatus.downloading.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 1;
}

uint64_t static DownloadStatus.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 9) & 1) != 0 || (*(_BYTE *)(a2 + 9) & 1) != 0)
    return 1;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_BYTE *)(a1 + 8) & 1 | (*(double *)a1 < *(double *)a2);
}

uint64_t static DownloadStatus.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a2 + 9);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 8) & 1) != 0)
        return 1;
    }
    else if ((*(_BYTE *)(a2 + 8) & 1) == 0 && *(double *)a1 == *(double *)a2)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23C290BA8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 9) & 1) != 0 || (*(_BYTE *)(a2 + 9) & 1) != 0)
    return 1;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return *(_BYTE *)(a1 + 8) & 1 | (*(double *)a1 < *(double *)a2);
}

BOOL sub_23C290BF4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(a1 + 9) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    return 1;
  if (*(double *)a2 >= *(double *)a1)
    return (*(_BYTE *)(a2 + 8) & 1) == 0;
  return 0;
}

BOOL sub_23C290C44(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 9) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 1;
  if (*(double *)a1 >= *(double *)a2)
    return (*(_BYTE *)(a1 + 8) & 1) == 0;
  return 0;
}

uint64_t sub_23C290C94(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 9) & 1) != 0 || (*(_BYTE *)(a1 + 9) & 1) != 0)
    return 1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    return 0;
  return *(_BYTE *)(a2 + 8) & 1 | (*(double *)a2 < *(double *)a1);
}

uint64_t sub_23C290CE0(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = *(unsigned __int8 *)(a2 + 9);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 8) & 1) != 0)
        return 1;
    }
    else if ((*(_BYTE *)(a2 + 8) & 1) == 0 && *(double *)a1 == *(double *)a2)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t DownloadStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  char v21;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58220);
  v15 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58228);
  v14 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58230);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(_QWORD *)v1;
  v19 = *(unsigned __int8 *)(v1 + 8);
  v10 = *(_BYTE *)(v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C290F64();
  sub_23C34ECC4();
  if ((v10 & 1) != 0)
  {
    v21 = 1;
    sub_23C290FA8();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v17);
  }
  else
  {
    v20 = 0;
    sub_23C290FEC();
    sub_23C34EBD4();
    v12 = v16;
    sub_23C34EBEC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v12);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v7);
}

unint64_t sub_23C290F64()
{
  unint64_t result;

  result = qword_256B58238;
  if (!qword_256B58238)
  {
    result = MEMORY[0x24261C66C](&unk_23C351D98, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58238);
  }
  return result;
}

unint64_t sub_23C290FA8()
{
  unint64_t result;

  result = qword_256B58240;
  if (!qword_256B58240)
  {
    result = MEMORY[0x24261C66C](&unk_23C351D48, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58240);
  }
  return result;
}

unint64_t sub_23C290FEC()
{
  unint64_t result;

  result = qword_256B58248;
  if (!qword_256B58248)
  {
    result = MEMORY[0x24261C66C](&unk_23C351CF8, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58248);
  }
  return result;
}

uint64_t DownloadStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  char v44;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58250);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58258);
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58260);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C290F64();
  v12 = v42;
  sub_23C34ECB8();
  if (v12)
    goto LABEL_6;
  v34 = v5;
  v35 = a1;
  v14 = v40;
  v13 = v41;
  v36 = v9;
  v42 = v11;
  v15 = sub_23C34EBBC();
  if (*(_QWORD *)(v15 + 16) != 1)
  {
    v20 = sub_23C34EAC0();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v22 = &type metadata for DownloadStatus;
    v23 = v42;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v8);
    a1 = v35;
LABEL_6:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v15 + 32);
  if ((v16 & 1) != 0)
  {
    v44 = 1;
    sub_23C290FA8();
    v17 = v42;
    sub_23C34EB38();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v8);
    v18 = 0;
    v19 = 0;
  }
  else
  {
    v43 = 0;
    sub_23C290FEC();
    v26 = v7;
    sub_23C34EB38();
    v27 = v14;
    v28 = sub_23C34EB5C();
    v29 = v36;
    v18 = v28;
    v30 = v27;
    v19 = v31 & 1;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v42, v8);
  }
  v32 = v39;
  *v39 = v18;
  *((_BYTE *)v32 + 8) = v19;
  *((_BYTE *)v32 + 9) = v16;
  v24 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23C2913C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DownloadStatus.init(from:)(a1, a2);
}

uint64_t sub_23C2913D8(_QWORD *a1)
{
  return DownloadStatus.encode(to:)(a1);
}

uint64_t DownloadStatus.hash(into:)()
{
  uint64_t v0;
  char v2;

  if ((*(_BYTE *)(v0 + 9) & 1) != 0)
    return sub_23C34EC88();
  v2 = *(_BYTE *)(v0 + 8);
  sub_23C34EC88();
  if ((v2 & 1) != 0)
    return sub_23C34EC94();
  sub_23C34EC94();
  return sub_23C34ECA0();
}

uint64_t DownloadStatus.hashValue.getter()
{
  uint64_t v0;
  char v1;
  char v2;

  v1 = *(_BYTE *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 9);
  sub_23C34EC7C();
  if ((v2 & 1) != 0)
  {
    sub_23C34EC88();
  }
  else
  {
    sub_23C34EC88();
    sub_23C34EC94();
    if ((v1 & 1) == 0)
      sub_23C34ECA0();
  }
  return sub_23C34ECAC();
}

uint64_t sub_23C2914F8()
{
  uint64_t v0;
  char v1;
  char v2;

  v1 = *(_BYTE *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 9);
  sub_23C34EC7C();
  if ((v2 & 1) != 0)
  {
    sub_23C34EC88();
  }
  else
  {
    sub_23C34EC88();
    sub_23C34EC94();
    if ((v1 & 1) == 0)
      sub_23C34ECA0();
  }
  return sub_23C34ECAC();
}

unint64_t sub_23C29158C()
{
  unint64_t result;

  result = qword_256B58268;
  if (!qword_256B58268)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, (unint64_t *)&qword_256B58268);
  }
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DownloadStatus(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DownloadStatus(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t sub_23C291634(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23C291650(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus()
{
  return &type metadata for DownloadStatus;
}

uint64_t storeEnumTagSinglePayload for DownloadStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2916D4 + 4 * byte_23C3519B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C291708 + 4 * byte_23C3519B0[v4]))();
}

uint64_t sub_23C291708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C291710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C291718);
  return result;
}

uint64_t sub_23C291724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C29172CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C291730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C291738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus.CodingKeys()
{
  return &type metadata for DownloadStatus.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DownloadStatus.DownloadingCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C291794 + 4 * byte_23C3519BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2917B4 + 4 * byte_23C3519BF[v4]))();
}

_BYTE *sub_23C291794(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2917B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2917BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2917C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2917CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2917D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DownloadStatus.DownloadingCodingKeys()
{
  return &type metadata for DownloadStatus.DownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for DownloadStatus.DownloadedCodingKeys()
{
  return &type metadata for DownloadStatus.DownloadedCodingKeys;
}

unint64_t sub_23C291804()
{
  unint64_t result;

  result = qword_256B58270;
  if (!qword_256B58270)
  {
    result = MEMORY[0x24261C66C](&unk_23C351C18, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58270);
  }
  return result;
}

unint64_t sub_23C29184C()
{
  unint64_t result;

  result = qword_256B58278;
  if (!qword_256B58278)
  {
    result = MEMORY[0x24261C66C](&unk_23C351CD0, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58278);
  }
  return result;
}

unint64_t sub_23C291894()
{
  unint64_t result;

  result = qword_256B58280;
  if (!qword_256B58280)
  {
    result = MEMORY[0x24261C66C](&unk_23C351B88, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58280);
  }
  return result;
}

unint64_t sub_23C2918DC()
{
  unint64_t result;

  result = qword_256B58288;
  if (!qword_256B58288)
  {
    result = MEMORY[0x24261C66C](&unk_23C351BB0, &type metadata for DownloadStatus.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58288);
  }
  return result;
}

unint64_t sub_23C291924()
{
  unint64_t result;

  result = qword_256B58290;
  if (!qword_256B58290)
  {
    result = MEMORY[0x24261C66C](&unk_23C351B38, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58290);
  }
  return result;
}

unint64_t sub_23C29196C()
{
  unint64_t result;

  result = qword_256B58298;
  if (!qword_256B58298)
  {
    result = MEMORY[0x24261C66C](&unk_23C351B60, &type metadata for DownloadStatus.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58298);
  }
  return result;
}

unint64_t sub_23C2919B4()
{
  unint64_t result;

  result = qword_256B582A0;
  if (!qword_256B582A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C351C40, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B582A0);
  }
  return result;
}

unint64_t sub_23C2919FC()
{
  unint64_t result;

  result = qword_256B582A8;
  if (!qword_256B582A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C351C68, &type metadata for DownloadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B582A8);
  }
  return result;
}

uint64_t sub_23C291A40(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64616F6C6E776F64 && a2 == 0xEB00000000676E69;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t TrainerTip.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B582B0);
}

uint64_t TrainerTip.canvasItemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TrainerTip()
{
  uint64_t result;

  result = qword_256B58380;
  if (!qword_256B58380)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainerTip.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainerTip.isCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 28));
}

uint64_t TrainerTip.isRecent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 32));
}

uint64_t TrainerTip.streamingArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TrainerTip();
  return sub_23C28950C(v1 + *(int *)(v3 + 36), a1, &qword_256B582B8);
}

uint64_t TrainerTip.streamingArtworkCropCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainerTip.streamingSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainerTip.streamingTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTip() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainerTip.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainerTip() + 52);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainerTip.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainerTip() + 56);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainerTip.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainerTip() + 60);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainerTip.init(artworkDescriptor:canvasItemIdentifier:identifier:isCompleted:isRecent:streamingArtwork:streamingArtworkCropCode:streamingSubtitle:streamingTitle:streamingURL:subtitle:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v37)(uint64_t, uint64_t, uint64_t);

  sub_23C2894C8(a1, a9, &qword_256B582B0);
  v25 = (int *)type metadata accessor for TrainerTip();
  v26 = (_QWORD *)(a9 + v25[5]);
  *v26 = a2;
  v26[1] = a3;
  v27 = (_QWORD *)(a9 + v25[6]);
  *v27 = a4;
  v27[1] = a5;
  *(_BYTE *)(a9 + v25[7]) = a6;
  *(_BYTE *)(a9 + v25[8]) = a7;
  sub_23C2894C8(a8, a9 + v25[9], &qword_256B582B8);
  v28 = (_QWORD *)(a9 + v25[10]);
  *v28 = a10;
  v28[1] = a11;
  v29 = (_QWORD *)(a9 + v25[11]);
  *v29 = a12;
  v29[1] = a13;
  v30 = (_QWORD *)(a9 + v25[12]);
  *v30 = a14;
  v30[1] = a15;
  v31 = a9 + v25[13];
  v32 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v31, a16, v32);
  v33 = a9 + v25[14];
  v34 = sub_23C34D86C();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
  v37(v33, a17, v34);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(a9 + v25[15], a18, v34);
}

uint64_t sub_23C291FB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C291FE8 + 4 * byte_23C351DF0[a1]))(0xD000000000000011, 0x800000023C361620);
}

uint64_t sub_23C291FE8(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_23C292080()
{
  return 0x6E696D6165727473;
}

uint64_t sub_23C2920B4()
{
  return 0x656C746974627573;
}

uint64_t sub_23C2920CC()
{
  return 0x656C746974;
}

uint64_t sub_23C2920E0()
{
  unsigned __int8 *v0;

  return sub_23C291FB0(*v0);
}

uint64_t sub_23C2920E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C29588C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C29210C(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_23C292118()
{
  sub_23C29253C();
  return sub_23C34ECD0();
}

uint64_t sub_23C292140()
{
  sub_23C29253C();
  return sub_23C34ECDC();
}

uint64_t TrainerTip.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29253C();
  sub_23C34ECC4();
  v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  sub_23C292D5C(&qword_256B582D0, MEMORY[0x24BE35058]);
  sub_23C34EC40();
  if (v1)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  type metadata accessor for TrainerTip();
  v20 = 1;
  sub_23C34EC10();
  v19 = 2;
  sub_23C34EC10();
  v18 = 3;
  sub_23C34EC1C();
  v17 = 4;
  sub_23C34EC1C();
  v16 = 5;
  type metadata accessor for TrainerTipGalleryArtwork();
  sub_23C27FEE4(&qword_256B582D8, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
  sub_23C34EC04();
  v15 = 6;
  sub_23C34EBE0();
  v14 = 7;
  sub_23C34EBE0();
  v13 = 8;
  sub_23C34EBE0();
  v12 = 9;
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_23C34EC40();
  v9 = v4;
  v11 = 10;
  sub_23C34D86C();
  sub_23C27FEE4(&qword_256B582E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
  sub_23C34EC40();
  v10 = 11;
  sub_23C34EC40();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v3);
}

unint64_t sub_23C29253C()
{
  unint64_t result;

  result = qword_256B582C8;
  if (!qword_256B582C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35204C, &type metadata for TrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B582C8);
  }
  return result;
}

uint64_t TrainerTip.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v43 = a2;
  v47 = sub_23C34D86C();
  v45 = *(_QWORD *)(v47 - 8);
  v3 = MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v43 - v5;
  v48 = sub_23C34D950();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582E8);
  v14 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = (int *)type metadata accessor for TrainerTip();
  MEMORY[0x24BDAC7A8](v54);
  v55 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23C29253C();
  v51 = v16;
  v19 = v53;
  sub_23C34ECB8();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v20 = (uint64_t)v10;
  v21 = v14;
  v22 = v49;
  v67 = 0;
  sub_23C292D5C(&qword_256B582F0, MEMORY[0x24BE35060]);
  sub_23C34EBB0();
  v23 = v55;
  sub_23C2894C8((uint64_t)v13, v55, &qword_256B582B0);
  v66 = 1;
  v24 = sub_23C34EB80();
  v25 = v54;
  v26 = (uint64_t *)(v23 + v54[5]);
  *v26 = v24;
  v26[1] = v27;
  v65 = 2;
  v28 = sub_23C34EB80();
  v29 = (uint64_t *)(v23 + v25[6]);
  *v29 = v28;
  v29[1] = v30;
  v64 = 3;
  *(_BYTE *)(v23 + v25[7]) = sub_23C34EB8C() & 1;
  v63 = 4;
  *(_BYTE *)(v23 + v25[8]) = sub_23C34EB8C() & 1;
  type metadata accessor for TrainerTipGalleryArtwork();
  v62 = 5;
  sub_23C27FEE4(&qword_256B582F8, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
  sub_23C34EB74();
  sub_23C2894C8(v20, v23 + v25[9], &qword_256B582B8);
  v61 = 6;
  v31 = sub_23C34EB50();
  v32 = (uint64_t *)(v23 + v25[10]);
  *v32 = v31;
  v32[1] = v33;
  v60 = 7;
  v34 = sub_23C34EB50();
  v35 = (uint64_t *)(v23 + v25[11]);
  *v35 = v34;
  v35[1] = v36;
  v59 = 8;
  v37 = sub_23C34EB50();
  v38 = (uint64_t *)(v23 + v25[12]);
  *v38 = v37;
  v38[1] = v39;
  v58 = 9;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EBB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v55 + v54[13], v7, v48);
  v57 = 10;
  sub_23C27FEE4(&qword_256B58300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
  sub_23C34EBB0();
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v40(v55 + v54[14], v22, v47);
  v56 = 11;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v51, v50);
  v41 = v55;
  v40(v55 + v54[15], v44, v47);
  sub_23C292DA0(v41, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return sub_23C283550(v41, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
}

uint64_t sub_23C292D5C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B582B0);
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C292DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C292DE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTip.init(from:)(a1, a2);
}

uint64_t sub_23C292DF8(_QWORD *a1)
{
  return TrainerTip.encode(to:)(a1);
}

uint64_t TrainerTip.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v10;

  v1 = type metadata accessor for TrainerTipGalleryArtwork();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  sub_23C34DAAC();
  v8 = (int *)type metadata accessor for TrainerTip();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34EC94();
  sub_23C34EC94();
  sub_23C28950C(v0 + v8[9], (uint64_t)v7, &qword_256B582B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    sub_23C29315C((uint64_t)v7, (uint64_t)v4);
    sub_23C34EC94();
    TrainerTipGalleryArtwork.hash(into:)();
    sub_23C283550((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
  }
  if (*(_QWORD *)(v0 + v8[10] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  if (*(_QWORD *)(v0 + v8[11] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  if (*(_QWORD *)(v0 + v8[12] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  sub_23C34D86C();
  sub_23C27FEE4(&qword_256B58308, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C34E838();
  return sub_23C34E838();
}

uint64_t sub_23C29315C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTipGalleryArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrainerTip.hashValue.getter()
{
  sub_23C34EC7C();
  TrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2931E0()
{
  sub_23C34EC7C();
  TrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C293220()
{
  sub_23C34EC7C();
  TrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail10TrainerTipV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = type metadata accessor for TrainerTipGalleryArtwork();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58410);
  MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v62 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v62 - v17;
  sub_23C27FEE4(&qword_256B58398, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
  if ((sub_23C34DAA0() & 1) == 0)
    goto LABEL_18;
  v19 = (int *)type metadata accessor for TrainerTip();
  v20 = v19[5];
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  if (v21 != *v23 || v22 != v23[1])
  {
    v25 = sub_23C34EC64();
    v26 = 0;
    if ((v25 & 1) == 0)
      return v26 & 1;
  }
  v27 = v19[6];
  v28 = *(_QWORD *)(a1 + v27);
  v29 = *(_QWORD *)(a1 + v27 + 8);
  v30 = (_QWORD *)(a2 + v27);
  if (v28 != *v30 || v29 != v30[1])
  {
    v31 = sub_23C34EC64();
    v26 = 0;
    if ((v31 & 1) == 0)
      return v26 & 1;
  }
  if (*(unsigned __int8 *)(a1 + v19[7]) != *(unsigned __int8 *)(a2 + v19[7])
    || *(unsigned __int8 *)(a1 + v19[8]) != *(unsigned __int8 *)(a2 + v19[8]))
  {
LABEL_18:
    v26 = 0;
    return v26 & 1;
  }
  v32 = v19[9];
  v63 = a1;
  sub_23C28950C(a1 + v32, (uint64_t)v18, &qword_256B582B8);
  v33 = v19[9];
  v64 = a2;
  sub_23C28950C(a2 + v33, (uint64_t)v16, &qword_256B582B8);
  v34 = v65;
  v35 = v65 + *(int *)(v8 + 48);
  sub_23C28950C((uint64_t)v18, v65, &qword_256B582B8);
  sub_23C28950C((uint64_t)v16, v35, &qword_256B582B8);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v36(v34, 1, v4) == 1)
  {
    sub_23C285184((uint64_t)v16, &qword_256B582B8);
    sub_23C285184((uint64_t)v18, &qword_256B582B8);
    if (v36(v35, 1, v4) == 1)
    {
      sub_23C285184(v34, &qword_256B582B8);
      goto LABEL_21;
    }
LABEL_17:
    sub_23C285184(v34, &qword_256B58410);
    goto LABEL_18;
  }
  sub_23C28950C(v34, (uint64_t)v13, &qword_256B582B8);
  if (v36(v35, 1, v4) == 1)
  {
    sub_23C285184((uint64_t)v16, &qword_256B582B8);
    sub_23C285184((uint64_t)v18, &qword_256B582B8);
    sub_23C283550((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
    goto LABEL_17;
  }
  sub_23C29315C(v35, (uint64_t)v7);
  v38 = _s20FitnessProductDetail24TrainerTipGalleryArtworkV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v7);
  sub_23C283550((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
  sub_23C285184((uint64_t)v16, &qword_256B582B8);
  sub_23C285184((uint64_t)v18, &qword_256B582B8);
  sub_23C283550((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
  sub_23C285184(v34, &qword_256B582B8);
  if (!v38)
    goto LABEL_18;
LABEL_21:
  v39 = v19[10];
  v41 = v63;
  v40 = v64;
  v42 = (_QWORD *)(v63 + v39);
  v43 = *(_QWORD *)(v63 + v39 + 8);
  v44 = (_QWORD *)(v64 + v39);
  v45 = v44[1];
  if (v43)
  {
    if (!v45)
      goto LABEL_18;
    if (*v42 != *v44 || v43 != v45)
    {
      v46 = sub_23C34EC64();
      v41 = v63;
      v40 = v64;
      v47 = v46;
      v26 = 0;
      if ((v47 & 1) == 0)
        return v26 & 1;
    }
  }
  else if (v45)
  {
    goto LABEL_18;
  }
  v48 = v19[11];
  v49 = (_QWORD *)(v41 + v48);
  v50 = *(_QWORD *)(v41 + v48 + 8);
  v51 = (_QWORD *)(v40 + v48);
  v52 = v51[1];
  if (v50)
  {
    if (!v52)
      goto LABEL_18;
    if (*v49 != *v51 || v50 != v52)
    {
      v53 = sub_23C34EC64();
      v41 = v63;
      v40 = v64;
      v54 = v53;
      v26 = 0;
      if ((v54 & 1) == 0)
        return v26 & 1;
    }
  }
  else if (v52)
  {
    goto LABEL_18;
  }
  v55 = v19[12];
  v56 = (_QWORD *)(v41 + v55);
  v57 = *(_QWORD *)(v41 + v55 + 8);
  v58 = (_QWORD *)(v40 + v55);
  v59 = v58[1];
  if (!v57)
  {
    if (!v59)
      goto LABEL_42;
    goto LABEL_18;
  }
  if (!v59)
    goto LABEL_18;
  if (*v56 == *v58 && v57 == v59 || (v60 = sub_23C34EC64(), v41 = v63, v40 = v64, v61 = v60, v26 = 0, (v61 & 1) != 0))
  {
LABEL_42:
    if ((MEMORY[0x24261B040](v41 + v19[13], v40 + v19[13]) & 1) != 0 && (sub_23C34D800() & 1) != 0)
    {
      v26 = sub_23C34D800();
      return v26 & 1;
    }
    goto LABEL_18;
  }
  return v26 & 1;
}

uint64_t sub_23C293754()
{
  return sub_23C27FEE4(&qword_256B58310, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTip, (uint64_t)&protocol conformance descriptor for TrainerTip);
}

_QWORD *initializeBufferWithCopyOfBuffer for TrainerTip(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, int *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v7 = (uint64_t *)&unk_256B58320;
    else
      v7 = (uint64_t *)&unk_256B58318;
    v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = (_QWORD *)((char *)a1 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (_QWORD *)((char *)a1 + v10);
    v15 = (_QWORD *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
    v22 = *((_QWORD *)v21 - 1);
    v23 = *(unsigned int (**)(char *, uint64_t, int *))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v26 = sub_23C34DA94();
      v27 = *(_QWORD *)(v26 - 8);
      v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v65 = v26;
      v66 = v22;
      v63 = v27;
      if (v64(v20, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v19, v20, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v19, 0, 1, v26);
      }
      *(_QWORD *)&v19[v21[5]] = *(_QWORD *)&v20[v21[5]];
      v29 = v21[6];
      v30 = &v19[v29];
      v31 = &v20[v29];
      v32 = sub_23C34D950();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v35 = v66;
      v36 = v21[7];
      v37 = &v19[v36];
      v38 = &v20[v36];
      if (v64(&v20[v36], 1, v65))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v37, v38, v65);
        v35 = v66;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v37, 0, 1, v65);
      }
      *(_QWORD *)&v19[v21[8]] = *(_QWORD *)&v20[v21[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56))(v19, 0, 1, v21);
    }
    v40 = a3[10];
    v41 = a3[11];
    v42 = (_QWORD *)((char *)a1 + v40);
    v43 = (_QWORD *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = (_QWORD *)((char *)a1 + v41);
    v46 = (_QWORD *)((char *)a2 + v41);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = a3[12];
    v49 = a3[13];
    v50 = (_QWORD *)((char *)a1 + v48);
    v51 = (_QWORD *)((char *)a2 + v48);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = (char *)a1 + v49;
    v54 = (char *)a2 + v49;
    v55 = sub_23C34D950();
    v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v53, v54, v55);
    v57 = a3[14];
    v58 = (char *)a1 + v57;
    v59 = (char *)a2 + v57;
    v60 = sub_23C34D86C();
    v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
    v61(v58, v59, v60);
    v61((char *)a1 + a3[15], (char *)a2 + a3[15], v60);
  }
  return a1;
}

uint64_t destroy for TrainerTip(uint64_t a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = (uint64_t *)&unk_256B58320;
  else
    v4 = (uint64_t *)&unk_256B58318;
  v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[9];
  v7 = type metadata accessor for TrainerTipGalleryArtwork();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_23C34DA94();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    v11 = v6 + *(int *)(v7 + 24);
    v12 = sub_23C34D950();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v6 + *(int *)(v7 + 28);
    if (!v10(v14, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1 + a2[13];
  v16 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[14];
  v18 = sub_23C34D86C();
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v20(v17, v18);
  return ((uint64_t (*)(uint64_t, uint64_t))v20)(a1 + a2[15], v18);
}

uint64_t initializeWithCopy for TrainerTip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B58320;
  else
    v6 = (uint64_t *)&unk_256B58318;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[9];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_23C34DA94();
    v25 = *(_QWORD *)(v24 - 8);
    v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v63 = v24;
    v64 = v21;
    v61 = v25;
    if (v62(v19, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v19, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
    }
    *(_QWORD *)&v18[v20[5]] = *(_QWORD *)&v19[v20[5]];
    v27 = v20[6];
    v28 = &v18[v27];
    v29 = &v19[v27];
    v30 = sub_23C34D950();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v64;
    v34 = v20[7];
    v35 = &v18[v34];
    v36 = &v19[v34];
    if (v62(&v19[v34], 1, v63))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v35, v36, v63);
      v33 = v64;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v35, 0, 1, v63);
    }
    *(_QWORD *)&v18[v20[8]] = *(_QWORD *)&v19[v20[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v18, 0, 1, v20);
  }
  v38 = a3[10];
  v39 = a3[11];
  v40 = (_QWORD *)(a1 + v38);
  v41 = (_QWORD *)(a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = (_QWORD *)(a1 + v39);
  v44 = (_QWORD *)(a2 + v39);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = a3[12];
  v47 = a3[13];
  v48 = (_QWORD *)(a1 + v46);
  v49 = (_QWORD *)(a2 + v46);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a1 + v47;
  v52 = a2 + v47;
  v53 = sub_23C34D950();
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54(v51, v52, v53);
  v55 = a3[14];
  v56 = a1 + v55;
  v57 = a2 + v55;
  v58 = sub_23C34D86C();
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
  v59(v56, v57, v58);
  v59(a1 + a3[15], a2 + a3[15], v58);
  return a1;
}

uint64_t assignWithCopy for TrainerTip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  size_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  void (**__src)(void *, const void *, _QWORD);
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B582B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B58320;
    else
      v6 = (uint64_t *)&unk_256B58318;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v14 = a3[9];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
  v18 = *((_QWORD *)v17 - 1);
  v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
      goto LABEL_12;
    }
    v26 = sub_23C34DA94();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v29 = v28(v15, 1, v26);
    v80 = v28;
    v30 = v28(v16, 1, v26);
    v82 = v26;
    v76 = v27;
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v15, v16, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v26);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v15, v16, v26);
LABEL_27:
        *(_QWORD *)&v15[v17[5]] = *(_QWORD *)&v16[v17[5]];
        v42 = v17[6];
        v43 = &v15[v42];
        v84 = v16;
        v44 = &v16[v42];
        v45 = sub_23C34D950();
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
        v77 = v43;
        LODWORD(v43) = v47(v43, 1, v45);
        v48 = v47(v44, 1, v45);
        if ((_DWORD)v43)
        {
          if (v48)
          {
            v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 64);
            v50 = v77;
LABEL_32:
            memcpy(v50, v44, v49);
            goto LABEL_36;
          }
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v77, v44, v45);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v77, 0, 1, v45);
        }
        else
        {
          if (v48)
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v77, v45);
            v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 64);
            v50 = v77;
            goto LABEL_32;
          }
          (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v77, v44, v45);
        }
LABEL_36:
        v51 = v17[7];
        v52 = &v15[v51];
        v53 = &v84[v51];
        v54 = v80(&v15[v51], 1, v82);
        v55 = v80(v53, 1, v82);
        if (v54)
        {
          if (!v55)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v52, v53, v82);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v52, 0, 1, v82);
LABEL_42:
            *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v84[v17[8]];
            goto LABEL_43;
          }
        }
        else
        {
          if (!v55)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v52, v53, v82);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v76 + 8))(v52, v82);
        }
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v26);
    }
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v21)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_43;
  }
  v22 = sub_23C34DA94();
  v23 = *(_QWORD *)(v22 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v81 = v22;
  __src = (void (**)(void *, const void *, _QWORD))v23;
  if (v79(v16, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v15, v16, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v15, 0, 1, v22);
  }
  *(_QWORD *)&v15[v17[5]] = *(_QWORD *)&v16[v17[5]];
  v31 = v17[6];
  v32 = &v15[v31];
  v83 = v16;
  v33 = &v16[v31];
  v34 = sub_23C34D950();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = v17[7];
  v38 = &v15[v37];
  v39 = &v83[v37];
  if (v79(&v83[v37], 1, v81))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    __src[2](v38, v39, v81);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v38, 0, 1, v81);
  }
  *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v83[v17[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
LABEL_43:
  v57 = a3[10];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = a3[11];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = a3[12];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = a3[13];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 24))(v67, v68, v69);
  v70 = a3[14];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = sub_23C34D86C();
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 24);
  v74(v71, v72, v73);
  v74(a1 + a3[15], a2 + a3[15], v73);
  return a1;
}

uint64_t initializeWithTake for TrainerTip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B58320;
  else
    v6 = (uint64_t *)&unk_256B58318;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[9];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_23C34DA94();
    v17 = *(_QWORD *)(v16 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v43 = v16;
    v44 = v14;
    v41 = v17;
    if (v42(v12, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v11, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
    }
    *(_QWORD *)&v11[v13[5]] = *(_QWORD *)&v12[v13[5]];
    v19 = v13[6];
    v20 = &v11[v19];
    v21 = &v12[v19];
    v22 = sub_23C34D950();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = v44;
    v26 = v13[7];
    v27 = &v11[v26];
    v28 = &v12[v26];
    if (v42(&v12[v26], 1, v43))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v27, v28, v43);
      v25 = v44;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v27, 0, 1, v43);
    }
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v11, 0, 1, v13);
  }
  v30 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  v31 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[14];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_23C34D86C();
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
  v39(v36, v37, v38);
  v39(a1 + a3[15], a2 + a3[15], v38);
  return a1;
}

uint64_t assignWithTake for TrainerTip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  size_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  char *v88;
  void (**__src)(void *, const void *, _QWORD);
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B582B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B58320;
    else
      v6 = (uint64_t *)&unk_256B58318;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[9];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_23C283550((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryArtwork);
      goto LABEL_12;
    }
    v31 = sub_23C34DA94();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v33(v20, 1, v31);
    v91 = v33;
    v35 = v33(v21, 1, v31);
    v93 = v31;
    v87 = v32;
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v20, v21, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v31);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v20, v21, v31);
LABEL_27:
        *(_QWORD *)&v20[v22[5]] = *(_QWORD *)&v21[v22[5]];
        v47 = v22[6];
        v48 = &v20[v47];
        v95 = v21;
        v49 = &v21[v47];
        v50 = sub_23C34D950();
        v51 = *(_QWORD *)(v50 - 8);
        v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
        v88 = v48;
        LODWORD(v48) = v52(v48, 1, v50);
        v53 = v52(v49, 1, v50);
        if ((_DWORD)v48)
        {
          if (v53)
          {
            v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 64);
            v55 = v88;
LABEL_32:
            memcpy(v55, v49, v54);
            goto LABEL_36;
          }
          (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v88, v49, v50);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v88, 0, 1, v50);
        }
        else
        {
          if (v53)
          {
            (*(void (**)(char *, uint64_t))(v51 + 8))(v88, v50);
            v54 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 64);
            v55 = v88;
            goto LABEL_32;
          }
          (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v88, v49, v50);
        }
LABEL_36:
        v56 = v22[7];
        v57 = &v20[v56];
        v58 = &v95[v56];
        v59 = v91(&v20[v56], 1, v93);
        v60 = v91(v58, 1, v93);
        if (v59)
        {
          if (!v60)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v57, v58, v93);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v57, 0, 1, v93);
LABEL_42:
            *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v95[v22[8]];
            goto LABEL_43;
          }
        }
        else
        {
          if (!v60)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v57, v58, v93);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v93);
        }
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v31);
    }
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_27;
  }
  if (v26)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_43;
  }
  v27 = sub_23C34DA94();
  v28 = *(_QWORD *)(v27 - 8);
  v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v92 = v27;
  __src = (void (**)(void *, const void *, _QWORD))v28;
  if (v90(v21, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v20, v21, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v20, 0, 1, v27);
  }
  *(_QWORD *)&v20[v22[5]] = *(_QWORD *)&v21[v22[5]];
  v36 = v22[6];
  v37 = &v20[v36];
  v94 = v21;
  v38 = &v21[v36];
  v39 = sub_23C34D950();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = v22[7];
  v43 = &v20[v42];
  v44 = &v94[v42];
  if (v90(&v94[v42], 1, v92))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    __src[4](v43, v44, v92);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v43, 0, 1, v92);
  }
  *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v94[v22[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_43:
  v62 = a3[10];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[11];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[12];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  v77 = a3[13];
  v78 = a1 + v77;
  v79 = a2 + v77;
  v80 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 40))(v78, v79, v80);
  v81 = a3[14];
  v82 = a1 + v81;
  v83 = a2 + v81;
  v84 = sub_23C34D86C();
  v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 40);
  v85(v82, v83, v84);
  v85(a1 + a3[15], a2 + a3[15], v84);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTip()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2952AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[9];
    }
    else
    {
      v16 = sub_23C34D950();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[13];
      }
      else
      {
        v8 = sub_23C34D86C();
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[14];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainerTip()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2953B4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[9];
    }
    else
    {
      v16 = sub_23C34D950();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v10 = sub_23C34D86C();
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[14];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C2954AC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23C29558C();
  if (v0 <= 0x3F)
  {
    sub_23C295604();
    if (v1 <= 0x3F)
    {
      sub_23C34D950();
      if (v2 <= 0x3F)
      {
        sub_23C34D86C();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_23C29558C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B58390)
  {
    type metadata accessor for TrainerTipGalleryArtwork();
    sub_23C27FEE4(&qword_256B58398, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
    v0 = sub_23C34DAB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B58390);
  }
}

void sub_23C295604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B583A0)
  {
    type metadata accessor for TrainerTipGalleryArtwork();
    v0 = sub_23C34EA48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B583A0);
  }
}

uint64_t getEnumTagSinglePayload for TrainerTip.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainerTip.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23C295734 + 4 * byte_23C351E01[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23C295768 + 4 * byte_23C351DFC[v4]))();
}

uint64_t sub_23C295768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C295770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C295778);
  return result;
}

uint64_t sub_23C295784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C29578CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23C295790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C295798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTip.CodingKeys()
{
  return &type metadata for TrainerTip.CodingKeys;
}

unint64_t sub_23C2957B8()
{
  unint64_t result;

  result = qword_256B583F8;
  if (!qword_256B583F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C352024, &type metadata for TrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B583F8);
  }
  return result;
}

unint64_t sub_23C295800()
{
  unint64_t result;

  result = qword_256B58400;
  if (!qword_256B58400)
  {
    result = MEMORY[0x24261C66C](&unk_23C351F94, &type metadata for TrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58400);
  }
  return result;
}

unint64_t sub_23C295848()
{
  unint64_t result;

  result = qword_256B58408;
  if (!qword_256B58408)
  {
    result = MEMORY[0x24261C66C](&unk_23C351FBC, &type metadata for TrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58408);
  }
  return result;
}

uint64_t sub_23C29588C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C361620 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361640 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C706D6F437369 && a2 == 0xEB00000000646574 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E656365527369 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C361660 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023C361680 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023C3616A0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEE00656C74695467 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_23C295D2C(char a1)
{
  return *(_QWORD *)&aIdle_12[8 * a1];
}

uint64_t sub_23C295D4C()
{
  char *v0;

  return sub_23C295D2C(*v0);
}

uint64_t sub_23C295D54()
{
  sub_23C2961A0();
  return sub_23C34ECD0();
}

uint64_t sub_23C295D7C()
{
  sub_23C2961A0();
  return sub_23C34ECDC();
}

unint64_t sub_23C295DA4()
{
  return 0xD000000000000010;
}

uint64_t sub_23C295DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C296DB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C295DE8()
{
  sub_23C2961E4();
  return sub_23C34ECD0();
}

uint64_t sub_23C295E10()
{
  sub_23C2961E4();
  return sub_23C34ECDC();
}

uint64_t sub_23C295E38()
{
  sub_23C29626C();
  return sub_23C34ECD0();
}

uint64_t sub_23C295E60()
{
  sub_23C29626C();
  return sub_23C34ECDC();
}

uint64_t sub_23C295E88()
{
  sub_23C2962B0();
  return sub_23C34ECD0();
}

uint64_t sub_23C295EB0()
{
  sub_23C2962B0();
  return sub_23C34ECDC();
}

uint64_t WorkoutResumableSessionLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int16 v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58418);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58420);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58428);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v22 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58430);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)&v31 = *(_QWORD *)v1;
  *((_QWORD *)&v31 + 1) = v13;
  v14 = *(unsigned __int16 *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 18);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2961A0();
  sub_23C34ECC4();
  if (v15 == 1)
  {
    if (v31 != 0 || v14)
    {
      LOBYTE(v32) = 1;
      sub_23C29626C();
      v16 = v25;
      sub_23C34EBD4();
      v18 = v26;
      v17 = v27;
    }
    else
    {
      LOBYTE(v32) = 0;
      sub_23C2962B0();
      v16 = v22;
      sub_23C34EBD4();
      v18 = v23;
      v17 = v24;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    LOBYTE(v32) = 2;
    sub_23C2961E4();
    v19 = v28;
    sub_23C34EBD4();
    v32 = v31;
    v33 = v14 & 0x1FF;
    sub_23C296228();
    v20 = v30;
    sub_23C34EC04();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23C2961A0()
{
  unint64_t result;

  result = qword_256B58438;
  if (!qword_256B58438)
  {
    result = MEMORY[0x24261C66C](&unk_23C3524C4, &type metadata for WorkoutResumableSessionLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58438);
  }
  return result;
}

unint64_t sub_23C2961E4()
{
  unint64_t result;

  result = qword_256B58440;
  if (!qword_256B58440)
  {
    result = MEMORY[0x24261C66C](&unk_23C352474, &type metadata for WorkoutResumableSessionLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58440);
  }
  return result;
}

unint64_t sub_23C296228()
{
  unint64_t result;

  result = qword_256B58448;
  if (!qword_256B58448)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutResumableSession, &type metadata for WorkoutResumableSession);
    atomic_store(result, (unint64_t *)&qword_256B58448);
  }
  return result;
}

unint64_t sub_23C29626C()
{
  unint64_t result;

  result = qword_256B58450;
  if (!qword_256B58450)
  {
    result = MEMORY[0x24261C66C](&unk_23C352424, &type metadata for WorkoutResumableSessionLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58450);
  }
  return result;
}

unint64_t sub_23C2962B0()
{
  unint64_t result;

  result = qword_256B58458;
  if (!qword_256B58458)
  {
    result = MEMORY[0x24261C66C](&unk_23C3523D4, &type metadata for WorkoutResumableSessionLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58458);
  }
  return result;
}

uint64_t WorkoutResumableSessionLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  __int128 v44;
  unsigned __int8 v45;
  char v46;
  uint64_t v47;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58460);
  v4 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v39 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58468);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58470);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58478);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23C2961A0();
  v17 = v47;
  sub_23C34ECB8();
  if (!v17)
  {
    v35 = v9;
    v47 = v8;
    v19 = v41;
    v18 = v42;
    v20 = sub_23C34EBBC();
    v21 = v12;
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
          v47 = v13;
          LOBYTE(v44) = 2;
          sub_23C2961E4();
          v29 = v15;
          sub_23C34EB38();
          v30 = v40;
          sub_23C296788();
          v32 = v38;
          sub_23C34EB74();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v32);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v12);
          v31 = 0;
          v23 = v44;
          if (v46)
            v33 = 256;
          else
            v33 = 0;
          v22 = v33 | v45;
          v27 = (uint64_t)v43;
          goto LABEL_12;
        }
        LOBYTE(v44) = 1;
        sub_23C29626C();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v22 = 0;
        v23 = xmmword_23C3520A0;
      }
      else
      {
        LOBYTE(v44) = 0;
        sub_23C2962B0();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v47);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v22 = 0;
        v23 = 0uLL;
      }
      v31 = 1;
      v27 = (uint64_t)v43;
      v30 = v40;
LABEL_12:
      *(_OWORD *)v30 = v23;
      *(_WORD *)(v30 + 16) = v22;
      *(_BYTE *)(v30 + 18) = v31;
      return __swift_destroy_boxed_opaque_existential_1(v27);
    }
    v24 = sub_23C34EAC0();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v26 = &type metadata for WorkoutResumableSessionLoadState;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  }
  v27 = (uint64_t)v43;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_23C296788()
{
  unint64_t result;

  result = qword_256B58480;
  if (!qword_256B58480)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutResumableSession, &type metadata for WorkoutResumableSession);
    atomic_store(result, (unint64_t *)&qword_256B58480);
  }
  return result;
}

uint64_t sub_23C2967CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutResumableSessionLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C2967E0(_QWORD *a1)
{
  return WorkoutResumableSessionLoadState.encode(to:)(a1);
}

uint64_t _s20FitnessProductDetail32WorkoutResumableSessionLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  int v4;
  uint64_t v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;
  BOOL v12;
  unsigned int v13;
  BOOL v14;

  v3 = *(double *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int16 *)(a1 + 16);
  v6 = *(double *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int16 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 18) != 1)
  {
    if ((*(_BYTE *)(a2 + 18) & 1) == 0)
    {
      if ((v4 & 0x100) != 0)
        return (v7 >> 8) & 1;
      if ((v7 & 0x100) == 0 && v3 == v6)
      {
        if ((v4 & 1) != 0)
        {
          if ((v7 & 1) != 0)
            return 1;
        }
        else if ((v7 & 1) == 0 && v2 == v5)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  v8 = v2 | *(_QWORD *)&v3;
  v9 = v5 | *(_QWORD *)&v6;
  if (v9)
    v10 = 0;
  else
    v10 = v7 == 0;
  v11 = v10;
  if (!*(_BYTE *)(a2 + 18))
    v11 = 0;
  if (v9)
    v12 = 0;
  else
    v12 = v7 == 0;
  v13 = !v12;
  if ((*(_BYTE *)(a2 + 18) & 1) == 0)
    v13 = 0;
  if (v8)
    v14 = 0;
  else
    v14 = v4 == 0;
  if (v14)
    return v11;
  else
    return v13;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutResumableSessionLoadState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutResumableSessionLoadState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 15) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 19) = v3;
  return result;
}

uint64_t sub_23C296908(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23C296924(uint64_t result, int a2)
{
  if (a2)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    *(_BYTE *)(result + 18) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutResumableSessionLoadState()
{
  return &type metadata for WorkoutResumableSessionLoadState;
}

uint64_t storeEnumTagSinglePayload for WorkoutResumableSessionLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2969A4 + 4 * byte_23C3520B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2969D8 + 4 * byte_23C3520B0[v4]))();
}

uint64_t sub_23C2969D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2969E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2969E8);
  return result;
}

uint64_t sub_23C2969F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2969FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C296A00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C296A08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutResumableSessionLoadState.CodingKeys()
{
  return &type metadata for WorkoutResumableSessionLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutResumableSessionLoadState.IdleCodingKeys()
{
  return &type metadata for WorkoutResumableSessionLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutResumableSessionLoadState.FetchingCodingKeys()
{
  return &type metadata for WorkoutResumableSessionLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutResumableSessionLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C296A84 + 4 * byte_23C3520BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C296AA4 + 4 * byte_23C3520BF[v4]))();
}

_BYTE *sub_23C296A84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C296AA4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C296AAC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C296AB4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C296ABC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C296AC4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutResumableSessionLoadState.FetchedCodingKeys()
{
  return &type metadata for WorkoutResumableSessionLoadState.FetchedCodingKeys;
}

unint64_t sub_23C296AE4()
{
  unint64_t result;

  result = qword_256B58488;
  if (!qword_256B58488)
  {
    result = MEMORY[0x24261C66C](&unk_23C352254, &type metadata for WorkoutResumableSessionLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58488);
  }
  return result;
}

unint64_t sub_23C296B2C()
{
  unint64_t result;

  result = qword_256B58490;
  if (!qword_256B58490)
  {
    result = MEMORY[0x24261C66C](&unk_23C3523AC, &type metadata for WorkoutResumableSessionLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58490);
  }
  return result;
}

unint64_t sub_23C296B74()
{
  unint64_t result;

  result = qword_256B58498;
  if (!qword_256B58498)
  {
    result = MEMORY[0x24261C66C](&unk_23C3522CC, &type metadata for WorkoutResumableSessionLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58498);
  }
  return result;
}

unint64_t sub_23C296BBC()
{
  unint64_t result;

  result = qword_256B584A0;
  if (!qword_256B584A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3522F4, &type metadata for WorkoutResumableSessionLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584A0);
  }
  return result;
}

unint64_t sub_23C296C04()
{
  unint64_t result;

  result = qword_256B584A8;
  if (!qword_256B584A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35227C, &type metadata for WorkoutResumableSessionLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584A8);
  }
  return result;
}

unint64_t sub_23C296C4C()
{
  unint64_t result;

  result = qword_256B584B0;
  if (!qword_256B584B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3522A4, &type metadata for WorkoutResumableSessionLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584B0);
  }
  return result;
}

unint64_t sub_23C296C94()
{
  unint64_t result;

  result = qword_256B584B8;
  if (!qword_256B584B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3521C4, &type metadata for WorkoutResumableSessionLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584B8);
  }
  return result;
}

unint64_t sub_23C296CDC()
{
  unint64_t result;

  result = qword_256B584C0;
  if (!qword_256B584C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3521EC, &type metadata for WorkoutResumableSessionLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584C0);
  }
  return result;
}

unint64_t sub_23C296D24()
{
  unint64_t result;

  result = qword_256B584C8;
  if (!qword_256B584C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35231C, &type metadata for WorkoutResumableSessionLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584C8);
  }
  return result;
}

unint64_t sub_23C296D6C()
{
  unint64_t result;

  result = qword_256B584D0;
  if (!qword_256B584D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C352344, &type metadata for WorkoutResumableSessionLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B584D0);
  }
  return result;
}

uint64_t sub_23C296DB0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023C3616C0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t EditorialDetailEnvironment.fetchRemoteDetailContent.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t EditorialDetailEnvironment.presentFilter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t EditorialDetailEnvironment.navigateToSocialMediaLink.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t EditorialDetailEnvironment.onPreviewButtonTapped.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t EditorialDetailEnvironment.init(fetchRemoteDetailContent:presentFilter:navigateToSocialMediaLink:onPreviewButtonTapped:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t destroy for EditorialDetailEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for EditorialDetailEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for EditorialDetailEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for EditorialDetailEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialDetailEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorialDetailEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailEnvironment()
{
  return &type metadata for EditorialDetailEnvironment;
}

uint64_t sub_23C29715C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C297198 + 4 * byte_23C352580[a1]))(0xD000000000000012, 0x800000023C3616E0);
}

unint64_t sub_23C297198()
{
  return 0xD000000000000010;
}

uint64_t sub_23C2971B4()
{
  return 0x6544646564616F6CLL;
}

uint64_t sub_23C2971D4()
{
  return 0x694C646564616F6CLL;
}

uint64_t sub_23C2971F0()
{
  return 0x6570704177656976;
}

uint64_t sub_23C297210()
{
  unsigned __int8 *v0;

  return sub_23C29715C(*v0);
}

uint64_t sub_23C297218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C298FD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C29723C()
{
  sub_23C29798C();
  return sub_23C34ECD0();
}

uint64_t sub_23C297264()
{
  sub_23C29798C();
  return sub_23C34ECDC();
}

uint64_t sub_23C29728C()
{
  sub_23C297B24();
  return sub_23C34ECD0();
}

uint64_t sub_23C2972B4()
{
  sub_23C297B24();
  return sub_23C34ECDC();
}

uint64_t sub_23C2972DC()
{
  sub_23C297AE0();
  return sub_23C34ECD0();
}

uint64_t sub_23C297304()
{
  sub_23C297AE0();
  return sub_23C34ECDC();
}

uint64_t sub_23C297334()
{
  sub_23C297A9C();
  return sub_23C34ECD0();
}

uint64_t sub_23C29735C()
{
  sub_23C297A9C();
  return sub_23C34ECDC();
}

uint64_t sub_23C297384()
{
  sub_23C297A58();
  return sub_23C34ECD0();
}

uint64_t sub_23C2973AC()
{
  sub_23C297A58();
  return sub_23C34ECDC();
}

uint64_t sub_23C2973D4()
{
  sub_23C297A14();
  return sub_23C34ECD0();
}

uint64_t sub_23C2973FC()
{
  sub_23C297A14();
  return sub_23C34ECDC();
}

void TrainerTipGalleryAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B584D8);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B584E0);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TrainerTipGalleryList();
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B584E8);
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v21 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TrainerTipGalleryDetail();
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B584F0);
  v17 = *(_QWORD *)(v9 - 8);
  v18 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B584F8);
  MEMORY[0x24BDAC7A8](v16);
  v10 = type metadata accessor for TrainerTipGalleryAction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58500);
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  MEMORY[0x24BDAC7A8](v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29798C();
  sub_23C34ECC4();
  sub_23C2979D0(v32, (uint64_t)v12);
  v14 = (char *)sub_23C2976E4 + 4 * byte_23C352585[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C2976E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 - 216);
  sub_23C2851C0(v1, v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  *(_BYTE *)(v2 - 67) = 2;
  sub_23C297A9C();
  v4 = *(_QWORD *)(v2 - 208);
  v5 = *(_QWORD *)(v2 - 104);
  sub_23C34EBD4();
  sub_23C27FEE4(&qword_256B57F30, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryDetail, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryDetail);
  v6 = *(_QWORD *)(v2 - 192);
  sub_23C34EC40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v4, v6);
  sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v5);
}

uint64_t type metadata accessor for TrainerTipGalleryAction()
{
  uint64_t result;

  result = qword_256B585E8;
  if (!qword_256B585E8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C29798C()
{
  unint64_t result;

  result = qword_256B58508;
  if (!qword_256B58508)
  {
    result = MEMORY[0x24261C66C](&unk_23C352B80, &type metadata for TrainerTipGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58508);
  }
  return result;
}

uint64_t sub_23C2979D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTipGalleryAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C297A14()
{
  unint64_t result;

  result = qword_256B58510;
  if (!qword_256B58510)
  {
    result = MEMORY[0x24261C66C](&unk_23C352B30, &type metadata for TrainerTipGalleryAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58510);
  }
  return result;
}

unint64_t sub_23C297A58()
{
  unint64_t result;

  result = qword_256B58518;
  if (!qword_256B58518)
  {
    result = MEMORY[0x24261C66C](&unk_23C352AE0, &type metadata for TrainerTipGalleryAction.LoadedListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58518);
  }
  return result;
}

unint64_t sub_23C297A9C()
{
  unint64_t result;

  result = qword_256B58528;
  if (!qword_256B58528)
  {
    result = MEMORY[0x24261C66C](&unk_23C352A90, &type metadata for TrainerTipGalleryAction.LoadedDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58528);
  }
  return result;
}

unint64_t sub_23C297AE0()
{
  unint64_t result;

  result = qword_256B58530;
  if (!qword_256B58530)
  {
    result = MEMORY[0x24261C66C](&unk_23C352A40, &type metadata for TrainerTipGalleryAction.FailedToLoadListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58530);
  }
  return result;
}

unint64_t sub_23C297B24()
{
  unint64_t result;

  result = qword_256B58538;
  if (!qword_256B58538)
  {
    result = MEMORY[0x24261C66C](&unk_23C3529F0, &type metadata for TrainerTipGalleryAction.FailedToLoadDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58538);
  }
  return result;
}

uint64_t TrainerTipGalleryAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  _QWORD v31[10];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v37 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58540);
  v31[7] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v41 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58548);
  v40 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v39 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58550);
  v31[8] = *(_QWORD *)(v5 - 8);
  v31[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58558);
  v31[5] = *(_QWORD *)(v7 - 8);
  v31[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58560);
  v31[3] = *(_QWORD *)(v9 - 8);
  v31[4] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58568);
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TrainerTipGalleryAction();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v31 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v31 - v20;
  v22 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23C29798C();
  v23 = v12;
  v24 = v44;
  sub_23C34ECB8();
  if (!v24)
  {
    v31[0] = v19;
    v31[1] = v16;
    v31[2] = v21;
    v44 = 0;
    v25 = v42;
    v26 = sub_23C34EBBC();
    if (*(_QWORD *)(v26 + 16) == 1)
      __asm { BR              X10 }
    v27 = sub_23C34EAC0();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v29 = v13;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_23C2982F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryAction.init(from:)(a1, a2);
}

void sub_23C298304(_QWORD *a1)
{
  TrainerTipGalleryAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_23C34DA1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = type metadata accessor for TrainerTipGalleryList();
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 20));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_23C34D86C();
      v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = type metadata accessor for TrainerTipGalleryDetail();
      v9((uint64_t *)((char *)a1 + *(int *)(v10 + 20)), (uint64_t *)((char *)a2 + *(int *)(v10 + 20)), v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v5 = sub_23C34DA1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    type metadata accessor for TrainerTipGalleryList();
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_23C34D86C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v6(a1, v3);
    v4 = a1 + *(int *)(type metadata accessor for TrainerTipGalleryDetail() + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v3);
  }
  return result;
}

char *initializeWithCopy for TrainerTipGalleryAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_23C34DA1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = type metadata accessor for TrainerTipGalleryList();
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23C34D86C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for TrainerTipGalleryDetail();
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for TrainerTipGalleryAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23C34DA1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = type metadata accessor for TrainerTipGalleryList();
      *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23C34D86C();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = type metadata accessor for TrainerTipGalleryDetail();
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for TrainerTipGalleryAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_23C34DA1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = type metadata accessor for TrainerTipGalleryList();
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23C34D86C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = type metadata accessor for TrainerTipGalleryDetail();
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for TrainerTipGalleryAction(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23C34DA1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = type metadata accessor for TrainerTipGalleryList();
      *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23C34D86C();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = type metadata accessor for TrainerTipGalleryDetail();
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23C298958()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23C298968()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TrainerTipGalleryDetail();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TrainerTipGalleryList();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C298A34 + 4 * byte_23C352594[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C298A68 + 4 * byte_23C35258F[v4]))();
}

uint64_t sub_23C298A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C298A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C298A78);
  return result;
}

uint64_t sub_23C298A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C298A8CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C298A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C298A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.CodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.CodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.FailedToLoadDetailCodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.FailedToLoadDetailCodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.FailedToLoadListCodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.FailedToLoadListCodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.LoadedDetailCodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.LoadedDetailCodingKeys;
}

uint64_t _s20FitnessProductDetail23TrainerTipGalleryActionO22LoadedDetailCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C298B2C + 4 * byte_23C352599[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C298B4C + 4 * byte_23C35259E[v4]))();
}

_BYTE *sub_23C298B2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C298B4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C298B54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C298B5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C298B64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C298B6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.LoadedListCodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.LoadedListCodingKeys;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryAction.ViewAppearedCodingKeys()
{
  return &type metadata for TrainerTipGalleryAction.ViewAppearedCodingKeys;
}

unint64_t sub_23C298B9C()
{
  unint64_t result;

  result = qword_256B58620;
  if (!qword_256B58620)
  {
    result = MEMORY[0x24261C66C](&unk_23C3527B8, &type metadata for TrainerTipGalleryAction.LoadedListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58620);
  }
  return result;
}

unint64_t sub_23C298BE4()
{
  unint64_t result;

  result = qword_256B58628;
  if (!qword_256B58628)
  {
    result = MEMORY[0x24261C66C](&unk_23C352870, &type metadata for TrainerTipGalleryAction.LoadedDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58628);
  }
  return result;
}

unint64_t sub_23C298C2C()
{
  unint64_t result;

  result = qword_256B58630;
  if (!qword_256B58630)
  {
    result = MEMORY[0x24261C66C](&unk_23C3529C8, &type metadata for TrainerTipGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58630);
  }
  return result;
}

unint64_t sub_23C298C74()
{
  unint64_t result;

  result = qword_256B58638;
  if (!qword_256B58638)
  {
    result = MEMORY[0x24261C66C](&unk_23C3528E8, &type metadata for TrainerTipGalleryAction.FailedToLoadDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58638);
  }
  return result;
}

unint64_t sub_23C298CBC()
{
  unint64_t result;

  result = qword_256B58640;
  if (!qword_256B58640)
  {
    result = MEMORY[0x24261C66C](&unk_23C352910, &type metadata for TrainerTipGalleryAction.FailedToLoadDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58640);
  }
  return result;
}

unint64_t sub_23C298D04()
{
  unint64_t result;

  result = qword_256B58648;
  if (!qword_256B58648)
  {
    result = MEMORY[0x24261C66C](&unk_23C352898, &type metadata for TrainerTipGalleryAction.FailedToLoadListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58648);
  }
  return result;
}

unint64_t sub_23C298D4C()
{
  unint64_t result;

  result = qword_256B58650;
  if (!qword_256B58650)
  {
    result = MEMORY[0x24261C66C](&unk_23C3528C0, &type metadata for TrainerTipGalleryAction.FailedToLoadListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58650);
  }
  return result;
}

unint64_t sub_23C298D94()
{
  unint64_t result;

  result = qword_256B58658;
  if (!qword_256B58658)
  {
    result = MEMORY[0x24261C66C](&unk_23C3527E0, &type metadata for TrainerTipGalleryAction.LoadedDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58658);
  }
  return result;
}

unint64_t sub_23C298DDC()
{
  unint64_t result;

  result = qword_256B58660;
  if (!qword_256B58660)
  {
    result = MEMORY[0x24261C66C](&unk_23C352808, &type metadata for TrainerTipGalleryAction.LoadedDetailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58660);
  }
  return result;
}

unint64_t sub_23C298E24()
{
  unint64_t result;

  result = qword_256B58668;
  if (!qword_256B58668)
  {
    result = MEMORY[0x24261C66C](&unk_23C352728, &type metadata for TrainerTipGalleryAction.LoadedListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58668);
  }
  return result;
}

unint64_t sub_23C298E6C()
{
  unint64_t result;

  result = qword_256B58670;
  if (!qword_256B58670)
  {
    result = MEMORY[0x24261C66C](&unk_23C352750, &type metadata for TrainerTipGalleryAction.LoadedListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58670);
  }
  return result;
}

unint64_t sub_23C298EB4()
{
  unint64_t result;

  result = qword_256B58678;
  if (!qword_256B58678)
  {
    result = MEMORY[0x24261C66C](&unk_23C3526D8, &type metadata for TrainerTipGalleryAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58678);
  }
  return result;
}

unint64_t sub_23C298EFC()
{
  unint64_t result;

  result = qword_256B58680;
  if (!qword_256B58680)
  {
    result = MEMORY[0x24261C66C](&unk_23C352700, &type metadata for TrainerTipGalleryAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58680);
  }
  return result;
}

unint64_t sub_23C298F44()
{
  unint64_t result;

  result = qword_256B58688;
  if (!qword_256B58688)
  {
    result = MEMORY[0x24261C66C](&unk_23C352938, &type metadata for TrainerTipGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58688);
  }
  return result;
}

unint64_t sub_23C298F8C()
{
  unint64_t result;

  result = qword_256B58690;
  if (!qword_256B58690)
  {
    result = MEMORY[0x24261C66C](&unk_23C352960, &type metadata for TrainerTipGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58690);
  }
  return result;
}

uint64_t sub_23C298FD0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023C3616E0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C361700 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6544646564616F6CLL && a2 == 0xEC0000006C696174 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x694C646564616F6CLL && a2 == 0xEA00000000007473 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t WorkoutProgramLinkAnnotation.init(title:platform:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *a3;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = a2;
  *(_BYTE *)a5 = v7;
  v8 = a5 + *(int *)(type metadata accessor for WorkoutProgramLinkAnnotation() + 24);
  v9 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a4, v9);
}

uint64_t type metadata accessor for WorkoutProgramLinkAnnotation()
{
  uint64_t result;

  result = qword_256B58728;
  if (!qword_256B58728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C299294(char a1)
{
  return *(_QWORD *)&aPlatformtitle[8 * a1];
}

uint64_t sub_23C2992B4()
{
  char *v0;

  return sub_23C299294(*v0);
}

uint64_t sub_23C2992BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C29A310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2992E0()
{
  sub_23C299520();
  return sub_23C34ECD0();
}

uint64_t sub_23C299308()
{
  sub_23C299520();
  return sub_23C34ECDC();
}

uint64_t WorkoutProgramLinkAnnotation.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C29933C(v1, a1);
}

uint64_t sub_23C29933C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutProgramLinkAnnotation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C299380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C29933C(v1, a1);
}

uint64_t WorkoutProgramLinkAnnotation.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58698);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C299520();
  sub_23C34ECC4();
  v10[15] = *v3;
  v10[14] = 0;
  sub_23C299564();
  sub_23C34EC40();
  if (!v2)
  {
    v10[13] = 1;
    sub_23C34EC10();
    type metadata accessor for WorkoutProgramLinkAnnotation();
    v10[12] = 2;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C299520()
{
  unint64_t result;

  result = qword_256B586A0;
  if (!qword_256B586A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C352DE4, &type metadata for WorkoutProgramLinkAnnotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B586A0);
  }
  return result;
}

unint64_t sub_23C299564()
{
  unint64_t result;

  result = qword_256B586A8;
  if (!qword_256B586A8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramLinkPlatform, &type metadata for WorkoutProgramLinkPlatform);
    atomic_store(result, (unint64_t *)&qword_256B586A8);
  }
  return result;
}

uint64_t WorkoutProgramLinkAnnotation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = sub_23C34D950();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B586B0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorkoutProgramLinkAnnotation();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C299520();
  v24 = v7;
  v11 = v25;
  sub_23C34ECB8();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v8;
  v12 = v5;
  v13 = (uint64_t)a1;
  v14 = v4;
  v15 = v22;
  v28 = 0;
  sub_23C299840();
  v16 = v23;
  sub_23C34EBB0();
  *v10 = v29;
  v27 = 1;
  *((_QWORD *)v10 + 1) = sub_23C34EB80();
  *((_QWORD *)v10 + 2) = v17;
  v26 = 2;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v18 = v24;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v16);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v10[*(int *)(v25 + 24)], v14, v15);
  sub_23C29933C((uint64_t)v10, v21);
  __swift_destroy_boxed_opaque_existential_1(v13);
  return sub_23C299884((uint64_t)v10);
}

unint64_t sub_23C299840()
{
  unint64_t result;

  result = qword_256B586B8;
  if (!qword_256B586B8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramLinkPlatform, &type metadata for WorkoutProgramLinkPlatform);
    atomic_store(result, (unint64_t *)&qword_256B586B8);
  }
  return result;
}

uint64_t sub_23C299884(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutProgramLinkAnnotation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2998C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutProgramLinkAnnotation.init(from:)(a1, a2);
}

uint64_t sub_23C2998D4(_QWORD *a1)
{
  return WorkoutProgramLinkAnnotation.encode(to:)(a1);
}

uint64_t WorkoutProgramLinkAnnotation.hash(into:)()
{
  sub_23C34EC88();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  type metadata accessor for WorkoutProgramLinkAnnotation();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23C34E838();
}

uint64_t WorkoutProgramLinkAnnotation.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  type metadata accessor for WorkoutProgramLinkAnnotation();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t sub_23C299A4C()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t sub_23C299B00()
{
  sub_23C34EC88();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23C34E838();
}

uint64_t sub_23C299BA4()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail28WorkoutProgramLinkAnnotationV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL v2;

  if (*a1 == *a2)
  {
    v2 = *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
    if (v2 || (sub_23C34EC64() & 1) != 0)
    {
      type metadata accessor for WorkoutProgramLinkAnnotation();
      JUMPOUT(0x24261B040);
    }
  }
  return 0;
}

uint64_t sub_23C299CD0()
{
  return sub_23C27FEE4(&qword_256B586C0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramLinkAnnotation, (uint64_t)&protocol conformance descriptor for WorkoutProgramLinkAnnotation);
}

uint64_t sub_23C299CFC()
{
  return sub_23C27FEE4(&qword_256B586C8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramLinkAnnotation, (uint64_t)&protocol conformance descriptor for WorkoutProgramLinkAnnotation);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutProgramLinkAnnotation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C34D950();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for WorkoutProgramLinkAnnotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for WorkoutProgramLinkAnnotation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23C34D950();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for WorkoutProgramLinkAnnotation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for WorkoutProgramLinkAnnotation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for WorkoutProgramLinkAnnotation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutProgramLinkAnnotation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C299FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23C34D950();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramLinkAnnotation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29A07C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_23C34D950();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C29A0F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C34D950();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramLinkAnnotation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C29A1B8 + 4 * byte_23C352BD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C29A1EC + 4 * byte_23C352BD0[v4]))();
}

uint64_t sub_23C29A1EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29A1F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C29A1FCLL);
  return result;
}

uint64_t sub_23C29A208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C29A210);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C29A214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29A21C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramLinkAnnotation.CodingKeys()
{
  return &type metadata for WorkoutProgramLinkAnnotation.CodingKeys;
}

unint64_t sub_23C29A23C()
{
  unint64_t result;

  result = qword_256B58768;
  if (!qword_256B58768)
  {
    result = MEMORY[0x24261C66C](&unk_23C352DBC, &type metadata for WorkoutProgramLinkAnnotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58768);
  }
  return result;
}

unint64_t sub_23C29A284()
{
  unint64_t result;

  result = qword_256B58770;
  if (!qword_256B58770)
  {
    result = MEMORY[0x24261C66C](&unk_23C352D2C, &type metadata for WorkoutProgramLinkAnnotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58770);
  }
  return result;
}

unint64_t sub_23C29A2CC()
{
  unint64_t result;

  result = qword_256B58778;
  if (!qword_256B58778)
  {
    result = MEMORY[0x24261C66C](&unk_23C352D54, &type metadata for WorkoutProgramLinkAnnotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58778);
  }
  return result;
}

uint64_t sub_23C29A310(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t TrainerTipGalleryArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57E18);
}

uint64_t TrainerTipGalleryArtwork.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTipGalleryArtwork() + 20));
}

uint64_t type metadata accessor for TrainerTipGalleryArtwork()
{
  uint64_t result;

  result = qword_256B58800;
  if (!qword_256B58800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainerTipGalleryArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TrainerTipGalleryArtwork();
  return sub_23C28950C(v1 + *(int *)(v3 + 24), a1, &qword_256B57E20);
}

uint64_t TrainerTipGalleryArtwork.textColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TrainerTipGalleryArtwork();
  return sub_23C28950C(v1 + *(int *)(v3 + 28), a1, &qword_256B57E18);
}

uint64_t TrainerTipGalleryArtwork.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrainerTipGalleryArtwork() + 32));
}

uint64_t TrainerTipGalleryArtwork.init(backgroundColor:height:templateURL:textColor:width:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v11;
  uint64_t result;

  sub_23C2894C8(a1, a6, &qword_256B57E18);
  v11 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
  *(_QWORD *)(a6 + v11[5]) = a2;
  sub_23C2894C8(a3, a6 + v11[6], &qword_256B57E20);
  result = sub_23C2894C8(a4, a6 + v11[7], &qword_256B57E18);
  *(_QWORD *)(a6 + v11[8]) = a5;
  return result;
}

uint64_t sub_23C29A5F4(char a1)
{
  return *(_QWORD *)&aBackgrouheight[8 * a1];
}

uint64_t sub_23C29A614()
{
  char *v0;

  return sub_23C29A5F4(*v0);
}

uint64_t sub_23C29A61C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C29CAF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C29A640()
{
  sub_23C29A8DC();
  return sub_23C34ECD0();
}

uint64_t sub_23C29A668()
{
  sub_23C29A8DC();
  return sub_23C34ECDC();
}

uint64_t sub_23C29A690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C28950C(v2 + *(int *)(a1 + 24), a2, &qword_256B57E20);
}

uint64_t TrainerTipGalleryArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58780);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29A8DC();
  sub_23C34ECC4();
  v16 = 0;
  sub_23C34DA94();
  sub_23C27FEE4(&qword_256B58100, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C34EC04();
  if (!v2)
  {
    v9 = type metadata accessor for TrainerTipGalleryArtwork();
    v15 = 1;
    sub_23C34EC34();
    v11[1] = v3 + *(int *)(v9 + 24);
    v14 = 2;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC04();
    v13 = 3;
    sub_23C34EC04();
    v12 = 4;
    sub_23C34EC34();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C29A8DC()
{
  unint64_t result;

  result = qword_256B58788;
  if (!qword_256B58788)
  {
    result = MEMORY[0x24261C66C](&unk_23C35308C, &type metadata for TrainerTipGalleryArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58788);
  }
  return result;
}

uint64_t TrainerTipGalleryArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)&v25 - v9;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58790);
  v10 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TrainerTipGalleryArtwork();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29A8DC();
  v30 = v12;
  v16 = v32;
  sub_23C34ECB8();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v8;
  v26 = a1;
  v32 = v10;
  v17 = (uint64_t)v15;
  sub_23C34DA94();
  v37 = 0;
  sub_23C27FEE4(&qword_256B58118, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  v18 = (uint64_t)v29;
  v19 = v30;
  sub_23C34EB74();
  sub_23C2894C8(v18, (uint64_t)v15, &qword_256B57E18);
  v36 = 1;
  v20 = (int *)v13;
  *(_QWORD *)(v17 + *(int *)(v13 + 20)) = sub_23C34EBA4();
  sub_23C34D950();
  v35 = 2;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v21 = (uint64_t)v28;
  sub_23C34EB74();
  sub_23C2894C8(v21, v17 + v20[6], &qword_256B57E20);
  v34 = 3;
  v22 = (uint64_t)v25;
  sub_23C34EB74();
  sub_23C2894C8(v22, v17 + v20[7], &qword_256B57E18);
  v33 = 4;
  v23 = sub_23C34EBA4();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v31);
  *(_QWORD *)(v17 + v20[8]) = v23;
  sub_23C29AD6C(v17, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_23C29ADB0(v17);
}

uint64_t sub_23C29AD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTipGalleryArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C29ADB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrainerTipGalleryArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C29ADEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryArtwork.init(from:)(a1, a2);
}

uint64_t sub_23C29AE00(_QWORD *a1)
{
  return TrainerTipGalleryArtwork.encode(to:)(a1);
}

uint64_t TrainerTipGalleryArtwork.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_23C34D950();
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v22 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34DA94();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  v25 = v1;
  sub_23C28950C(v1, (uint64_t)&v22 - v15, &qword_256B57E18);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v23(v16, 1, v7) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v16, v7);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v17 = type metadata accessor for TrainerTipGalleryArtwork();
  v18 = v25;
  sub_23C34EC88();
  sub_23C28950C(v18 + *(int *)(v17 + 24), (uint64_t)v6, &qword_256B57E20);
  v19 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v2) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v6, v2);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v2);
  }
  sub_23C28950C(v25 + *(int *)(v17 + 28), (uint64_t)v14, &qword_256B57E18);
  if (v23(v14, 1, v7) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_23C34EC88();
}

uint64_t TrainerTipGalleryArtwork.hashValue.getter()
{
  sub_23C34EC7C();
  TrainerTipGalleryArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C29B1D4()
{
  sub_23C34EC7C();
  TrainerTipGalleryArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C29B214()
{
  sub_23C34EC7C();
  TrainerTipGalleryArtwork.hash(into:)();
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail24TrainerTipGalleryArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v90 = a2;
  v85 = sub_23C34D950();
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v75 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58200);
  MEMORY[0x24BDAC7A8](v81);
  v84 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v87 = (uint64_t)&v73 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v82 = (uint64_t)&v73 - v10;
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58208);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v73 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v77 = (uint64_t)&v73 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v78 = (uint64_t)&v73 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v73 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v73 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v73 - v33;
  v88 = a1;
  sub_23C28950C(a1, (uint64_t)&v73 - v33, &qword_256B57E18);
  sub_23C28950C(v90, (uint64_t)v32, &qword_256B57E18);
  v76 = v14;
  v35 = (uint64_t)&v18[*(int *)(v14 + 48)];
  sub_23C28950C((uint64_t)v34, (uint64_t)v18, &qword_256B57E18);
  sub_23C28950C((uint64_t)v32, v35, &qword_256B57E18);
  v89 = v12;
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v36((uint64_t)v18, 1, v11) == 1)
  {
    sub_23C285184((uint64_t)v32, &qword_256B57E18);
    sub_23C285184((uint64_t)v34, &qword_256B57E18);
    if (v36(v35, 1, v11) == 1)
    {
      v73 = v22;
      v74 = v36;
      sub_23C285184((uint64_t)v18, &qword_256B57E18);
      v37 = v88;
      goto LABEL_9;
    }
LABEL_6:
    v38 = &qword_256B58208;
    v39 = (uint64_t)v18;
LABEL_7:
    sub_23C285184(v39, v38);
    return 0;
  }
  sub_23C28950C((uint64_t)v18, (uint64_t)v29, &qword_256B57E18);
  if (v36(v35, 1, v11) == 1)
  {
    sub_23C285184((uint64_t)v32, &qword_256B57E18);
    sub_23C285184((uint64_t)v34, &qword_256B57E18);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v29, v11);
    goto LABEL_6;
  }
  v73 = v22;
  v74 = v36;
  v40 = v89;
  v41 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v86, v35, v11);
  sub_23C27FEE4(&qword_256B58218, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
  v42 = sub_23C34E850();
  v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v41, v11);
  sub_23C285184((uint64_t)v32, &qword_256B57E18);
  sub_23C285184((uint64_t)v34, &qword_256B57E18);
  v43(v29, v11);
  v37 = v88;
  sub_23C285184((uint64_t)v18, &qword_256B57E18);
  if ((v42 & 1) == 0)
    return 0;
LABEL_9:
  v44 = type metadata accessor for TrainerTipGalleryArtwork();
  if (*(_QWORD *)(v37 + *(int *)(v44 + 20)) != *(_QWORD *)(v90 + *(int *)(v44 + 20)))
    return 0;
  v45 = v44;
  v46 = v82;
  sub_23C28950C(v37 + *(int *)(v44 + 24), v82, &qword_256B57E20);
  v88 = v45;
  v47 = v87;
  sub_23C28950C(v90 + *(int *)(v45 + 24), v87, &qword_256B57E20);
  v48 = v84;
  v49 = v84 + *(int *)(v81 + 48);
  sub_23C28950C(v46, v84, &qword_256B57E20);
  sub_23C28950C(v47, v49, &qword_256B57E20);
  v50 = v83;
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  v52 = v85;
  if (v51(v48, 1, v85) == 1)
  {
    sub_23C285184(v47, &qword_256B57E20);
    sub_23C285184(v46, &qword_256B57E20);
    if (v51(v49, 1, v52) == 1)
    {
      sub_23C285184(v48, &qword_256B57E20);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  v53 = v79;
  sub_23C28950C(v48, v79, &qword_256B57E20);
  if (v51(v49, 1, v52) == 1)
  {
    sub_23C285184(v87, &qword_256B57E20);
    sub_23C285184(v46, &qword_256B57E20);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v53, v52);
LABEL_15:
    v38 = &qword_256B58200;
    v39 = v48;
    goto LABEL_7;
  }
  v54 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v75, v49, v52);
  sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v55 = sub_23C34E850();
  v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v54, v52);
  sub_23C285184(v87, &qword_256B57E20);
  sub_23C285184(v46, &qword_256B57E20);
  v56((char *)v53, v52);
  sub_23C285184(v48, &qword_256B57E20);
  if ((v55 & 1) == 0)
    return 0;
LABEL_17:
  v57 = v88;
  v58 = v37;
  v59 = v78;
  sub_23C28950C(v37 + *(int *)(v88 + 28), v78, &qword_256B57E18);
  v60 = v77;
  sub_23C28950C(v90 + *(int *)(v57 + 28), v77, &qword_256B57E18);
  v61 = v80;
  v62 = v80 + *(int *)(v76 + 48);
  sub_23C28950C(v59, v80, &qword_256B57E18);
  sub_23C28950C(v60, v62, &qword_256B57E18);
  v63 = v61;
  v64 = v74;
  if (v74(v63, 1, v11) == 1)
  {
    sub_23C285184(v60, &qword_256B57E18);
    sub_23C285184(v59, &qword_256B57E18);
    if (v64(v62, 1, v11) == 1)
    {
      sub_23C285184(v80, &qword_256B57E18);
      return *(_QWORD *)(v58 + *(int *)(v57 + 32)) == *(_QWORD *)(v90 + *(int *)(v57 + 32));
    }
    goto LABEL_22;
  }
  v65 = (uint64_t)v73;
  sub_23C28950C(v80, (uint64_t)v73, &qword_256B57E18);
  if (v64(v62, 1, v11) == 1)
  {
    sub_23C285184(v60, &qword_256B57E18);
    sub_23C285184(v59, &qword_256B57E18);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v65, v11);
LABEL_22:
    v38 = &qword_256B58208;
    v39 = v80;
    goto LABEL_7;
  }
  v66 = v59;
  v67 = v89;
  v68 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v86, v62, v11);
  sub_23C27FEE4(&qword_256B58218, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
  v69 = sub_23C34E850();
  v70 = *(void (**)(char *, uint64_t))(v67 + 8);
  v70(v68, v11);
  sub_23C285184(v60, &qword_256B57E18);
  v71 = v66;
  v57 = v88;
  sub_23C285184(v71, &qword_256B57E18);
  v70((char *)v65, v11);
  sub_23C285184(v80, &qword_256B57E18);
  if ((v69 & 1) != 0)
    return *(_QWORD *)(v58 + *(int *)(v57 + 32)) == *(_QWORD *)(v90 + *(int *)(v57 + 32));
  return 0;
}

uint64_t sub_23C29BAEC()
{
  return sub_23C27FEE4(&qword_256B582F8, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
}

uint64_t sub_23C29BB18()
{
  return sub_23C27FEE4(&qword_256B582D8, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
}

uint64_t sub_23C29BB44()
{
  return sub_23C27FEE4(&qword_256B58798, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
}

uint64_t sub_23C29BB70()
{
  return sub_23C27FEE4(&qword_256B587A0, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryArtwork, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryArtwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryArtwork(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DA94();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23C34D950();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    if (v9((uint64_t *)((char *)a2 + v18), 1, v7))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v19, v20, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_23C34DA94();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_23C34D950();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  return result;
}

char *initializeWithCopy for TrainerTipGalleryArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_23C34D950();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v8(&a2[v16], 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *assignWithCopy for TrainerTipGalleryArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v28 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  v29 = a3;
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = *(int *)(v29 + 28);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = v8(&a1[v21], 1, v6);
  v25 = v8(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v22, v23, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v6);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v22, v23, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[*(int *)(v29 + 32)] = *(_QWORD *)&a2[*(int *)(v29 + 32)];
  return a1;
}

char *initializeWithTake for TrainerTipGalleryArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_23C34D950();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v8(&a2[v16], 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *assignWithTake for TrainerTipGalleryArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v28 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 24);
  v29 = a3;
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = *(int *)(v29 + 28);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = v8(&a1[v21], 1, v6);
  v25 = v8(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v22, v23, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v6);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v23, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[*(int *)(v29 + 32)] = *(_QWORD *)&a2[*(int *)(v29 + 32)];
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryArtwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29C788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryArtwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29C810(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C29C894()
{
  unint64_t v0;
  unint64_t v1;

  sub_23C2906B4(319, &qword_256B581B0, (void (*)(uint64_t))MEMORY[0x24BE34FA0]);
  if (v0 <= 0x3F)
  {
    sub_23C2906B4(319, qword_256B581B8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C29C99C + 4 * byte_23C352E75[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C29C9D0 + 4 * byte_23C352E70[v4]))();
}

uint64_t sub_23C29C9D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29C9D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C29C9E0);
  return result;
}

uint64_t sub_23C29C9EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C29C9F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C29C9F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29CA00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryArtwork.CodingKeys()
{
  return &type metadata for TrainerTipGalleryArtwork.CodingKeys;
}

unint64_t sub_23C29CA20()
{
  unint64_t result;

  result = qword_256B58848;
  if (!qword_256B58848)
  {
    result = MEMORY[0x24261C66C](&unk_23C353064, &type metadata for TrainerTipGalleryArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58848);
  }
  return result;
}

unint64_t sub_23C29CA68()
{
  unint64_t result;

  result = qword_256B58850;
  if (!qword_256B58850)
  {
    result = MEMORY[0x24261C66C](&unk_23C352FD4, &type metadata for TrainerTipGalleryArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58850);
  }
  return result;
}

unint64_t sub_23C29CAB0()
{
  unint64_t result;

  result = qword_256B58858;
  if (!qword_256B58858)
  {
    result = MEMORY[0x24261C66C](&unk_23C352FFC, &type metadata for TrainerTipGalleryArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58858);
  }
  return result;
}

uint64_t sub_23C29CAF4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23C29CD10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58860);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58868);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58870);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58878);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58880);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23C34D8B4();
  MEMORY[0x24BDAC7A8](v15);
  swift_bridgeObjectRetain();
  sub_23C34D8A8();
  sub_23C34D878();
  v22[0] = swift_getKeyPath();
  swift_getKeyPath();
  v16 = sub_23C34E2BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
  v17 = sub_23C34E2C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  sub_23C34E2D4();
  v18 = sub_23C34E2E0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 0, 1, v18);
  v19 = sub_23C34E2B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v2, 1, 1, v19);
  sub_23C34E2EC();
  v20 = sub_23C34E2F8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 0, 1, v20);
  sub_23C29D068();
  return sub_23C34D7DC();
}

uint64_t sub_23C29CFF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58890);
  return sub_23C34E850() & 1;
}

void sub_23C29D04C()
{
  sub_23C34D7AC();
  __break(1u);
}

unint64_t sub_23C29D068()
{
  unint64_t result;

  result = qword_256B58888;
  if (!qword_256B58888)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEAC40], MEMORY[0x24BDEAC50]);
    atomic_store(result, (unint64_t *)&qword_256B58888);
  }
  return result;
}

void sub_23C29D0AC()
{
  sub_23C29D068();
  sub_23C34D8FC();
  __break(1u);
}

uint64_t sub_23C29D0D0()
{
  return 8;
}

uint64_t sub_23C29D0DC()
{
  return swift_release();
}

uint64_t sub_23C29D0E4(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23C29D0F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58890);
  return sub_23C34E844();
}

_QWORD *sub_23C29D138(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23C29D144(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4164694477656976;
  else
    return 0x4677656976657270;
}

uint64_t sub_23C29D194()
{
  char *v0;

  return sub_23C29D144(*v0);
}

uint64_t sub_23C29D19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C29F444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C29D1C0()
{
  sub_23C29D5D4();
  return sub_23C34ECD0();
}

uint64_t sub_23C29D1E8()
{
  sub_23C29D5D4();
  return sub_23C34ECDC();
}

uint64_t sub_23C29D210()
{
  sub_23C29D6A0();
  return sub_23C34ECD0();
}

uint64_t sub_23C29D238()
{
  sub_23C29D6A0();
  return sub_23C34ECDC();
}

uint64_t sub_23C29D260()
{
  sub_23C29D65C();
  return sub_23C34ECD0();
}

uint64_t sub_23C29D288()
{
  sub_23C29D65C();
  return sub_23C34ECDC();
}

uint64_t WorkoutContextMenuPreviewAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58898);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588A0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WorkoutContextMenuPreviewAction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588A8);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29D5D4();
  sub_23C34ECC4();
  sub_23C29D618(v27, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v30 = 1;
    sub_23C29D65C();
    v16 = v21;
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
  }
  else
  {
    sub_23C2851C0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
    v29 = 0;
    sub_23C29D6A0();
    v18 = v24;
    sub_23C34EBD4();
    sub_23C29DB60(&qword_256B588C8, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewContent);
    v19 = v26;
    sub_23C34EC40();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_23C29D6E4((uint64_t)v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewAction()
{
  uint64_t result;

  result = qword_256B58988;
  if (!qword_256B58988)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C29D5D4()
{
  unint64_t result;

  result = qword_256B588B0;
  if (!qword_256B588B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3534E8, &type metadata for WorkoutContextMenuPreviewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B588B0);
  }
  return result;
}

uint64_t sub_23C29D618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutContextMenuPreviewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C29D65C()
{
  unint64_t result;

  result = qword_256B588B8;
  if (!qword_256B588B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353498, &type metadata for WorkoutContextMenuPreviewAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B588B8);
  }
  return result;
}

unint64_t sub_23C29D6A0()
{
  unint64_t result;

  result = qword_256B588C0;
  if (!qword_256B588C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353448, &type metadata for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B588C0);
  }
  return result;
}

uint64_t sub_23C29D6E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutContextMenuPreviewContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WorkoutContextMenuPreviewAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  char v45;
  char v46;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588D0);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588D8);
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588E0);
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutContextMenuPreviewAction();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29D5D4();
  v17 = v44;
  sub_23C34ECB8();
  if (v17)
    goto LABEL_9;
  v34 = v14;
  v35 = v16;
  v18 = v42;
  v19 = v43;
  v44 = a1;
  v20 = sub_23C34EBBC();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v23 = sub_23C34EAC0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v25 = v11;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
    a1 = v44;
LABEL_9:
    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  if ((*(_BYTE *)(v20 + 32) & 1) != 0)
  {
    v46 = 1;
    sub_23C29D65C();
    sub_23C34EB38();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
    v21 = type metadata accessor for WorkoutContextMenuPreviewContent();
    v22 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v35, 1, 1, v21);
  }
  else
  {
    v45 = 0;
    sub_23C29D6A0();
    v26 = v18;
    sub_23C34EB38();
    v29 = type metadata accessor for WorkoutContextMenuPreviewContent();
    sub_23C29DB60(&qword_256B588E8, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewContent);
    v30 = (uint64_t)v34;
    v31 = v26;
    v32 = v38;
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
    v22 = (uint64_t)v35;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v30, 0, 1, v29);
    sub_23C2851C0(v30, v22, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewAction);
  }
  sub_23C2851C0(v22, v40, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewAction);
  v27 = (uint64_t)v44;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_23C29DB60(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WorkoutContextMenuPreviewContent();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C29DBA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutContextMenuPreviewAction.init(from:)(a1, a2);
}

uint64_t sub_23C29DBB4(_QWORD *a1)
{
  return WorkoutContextMenuPreviewAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for WorkoutContextMenuPreviewContent();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v13 = (uint64_t *)&unk_256B58900;
        else
          v13 = (uint64_t *)&unk_256B588F8;
        v14 = __swift_instantiateConcreteTypeFromMangledName(v13);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      v15 = *(int *)(v7 + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23C34D86C();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v22 = *(int *)(v7 + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      if (v20(v24, 1, v18))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutContextMenuPreviewAction(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for WorkoutContextMenuPreviewContent();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v5 = (uint64_t *)&unk_256B58900;
      else
        v5 = (uint64_t *)&unk_256B588F8;
      v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    }
    v7 = a1 + *(int *)(v2 + 20);
    v8 = sub_23C34D86C();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = a1 + *(int *)(v2 + 24);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v11, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

char *initializeWithCopy for WorkoutContextMenuPreviewAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v11 = (uint64_t *)&unk_256B58900;
      else
        v11 = (uint64_t *)&unk_256B588F8;
      v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v13 = *(int *)(v6 + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23C34D86C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = *(int *)(v6 + 24);
    v21 = &a1[v20];
    v22 = &a2[v20];
    if (v18(v22, 1, v16))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v22, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutContextMenuPreviewAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C29D6E4((uint64_t)a1);
      goto LABEL_7;
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v21 = &qword_256B58900;
        else
          v21 = &qword_256B588F8;
        v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_23C29E720((uint64_t)a1);
          if (swift_getEnumCaseMultiPayload() == 1)
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v38 = *(int *)(v6 + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_23C34D86C();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        v44 = v43(v39, 1, v41);
        v45 = v43(v40, 1, v41);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_36:
            v47 = *(int *)(v6 + 24);
            v48 = &a1[v47];
            a2 += v47;
            v49 = v43(&a1[v47], 1, v41);
            v50 = v43(a2, 1, v41);
            if (v49)
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v48, a2, v41);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v41);
                return a1;
              }
            }
            else
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v48, a2, v41);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v41);
            }
            v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v15 = v48;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
        }
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C29E720((uint64_t)a1);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v15 = a1;
LABEL_8:
    memcpy(v15, a2, v14);
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v23 = &qword_256B58900;
    else
      v23 = &qword_256B588F8;
    v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v25 = *(int *)(v6 + 20);
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23C34D86C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = *(int *)(v6 + 24);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v30(v34, 1, v28))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23C29E720(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for WorkoutContextMenuPreviewAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v11 = &qword_256B58900;
      else
        v11 = &qword_256B588F8;
      v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v13 = *(int *)(v6 + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23C34D86C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = *(int *)(v6 + 24);
    v21 = &a1[v20];
    v22 = &a2[v20];
    if (v18(v22, 1, v16))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutContextMenuPreviewAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C29D6E4((uint64_t)a1);
      goto LABEL_7;
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v21 = &qword_256B58900;
        else
          v21 = &qword_256B588F8;
        v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_23C29E720((uint64_t)a1);
          if (swift_getEnumCaseMultiPayload() == 1)
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(a1, a2, v51);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v38 = *(int *)(v6 + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_23C34D86C();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        v44 = v43(v39, 1, v41);
        v45 = v43(v40, 1, v41);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_36:
            v47 = *(int *)(v6 + 24);
            v48 = &a1[v47];
            a2 += v47;
            v49 = v43(&a1[v47], 1, v41);
            v50 = v43(a2, 1, v41);
            if (v49)
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v48, a2, v41);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v41);
                return a1;
              }
            }
            else
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v48, a2, v41);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v41);
            }
            v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v15 = v48;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
        }
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C29E720((uint64_t)a1);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v15 = a1;
LABEL_8:
    memcpy(v15, a2, v14);
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v23 = &qword_256B58900;
    else
      v23 = &qword_256B588F8;
    v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v25 = *(int *)(v6 + 20);
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23C34D86C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = *(int *)(v6 + 24);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v30(v34, 1, v28))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29EF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C29EF70(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C29EFC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23C29EFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_23C29F038()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WorkoutContextMenuPreviewContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C29F0D8 + 4 * byte_23C3531A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C29F10C + 4 * byte_23C3531A0[v4]))();
}

uint64_t sub_23C29F10C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29F114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C29F11CLL);
  return result;
}

uint64_t sub_23C29F128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C29F130);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C29F134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C29F13C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewAction.CodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewAction.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C29F198 + 4 * byte_23C3531AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C29F1B8 + 4 * byte_23C3531AF[v4]))();
}

_BYTE *sub_23C29F198(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C29F1B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C29F1C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C29F1C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C29F1D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C29F1D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewAction.ViewDidAppearCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewAction.ViewDidAppearCodingKeys;
}

unint64_t sub_23C29F208()
{
  unint64_t result;

  result = qword_256B58998;
  if (!qword_256B58998)
  {
    result = MEMORY[0x24261C66C](&unk_23C353368, &type metadata for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58998);
  }
  return result;
}

unint64_t sub_23C29F250()
{
  unint64_t result;

  result = qword_256B589A0;
  if (!qword_256B589A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353420, &type metadata for WorkoutContextMenuPreviewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589A0);
  }
  return result;
}

unint64_t sub_23C29F298()
{
  unint64_t result;

  result = qword_256B589A8;
  if (!qword_256B589A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3532D8, &type metadata for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589A8);
  }
  return result;
}

unint64_t sub_23C29F2E0()
{
  unint64_t result;

  result = qword_256B589B0;
  if (!qword_256B589B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353300, &type metadata for WorkoutContextMenuPreviewAction.PreviewFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589B0);
  }
  return result;
}

unint64_t sub_23C29F328()
{
  unint64_t result;

  result = qword_256B589B8;
  if (!qword_256B589B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353288, &type metadata for WorkoutContextMenuPreviewAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589B8);
  }
  return result;
}

unint64_t sub_23C29F370()
{
  unint64_t result;

  result = qword_256B589C0;
  if (!qword_256B589C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3532B0, &type metadata for WorkoutContextMenuPreviewAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589C0);
  }
  return result;
}

unint64_t sub_23C29F3B8()
{
  unint64_t result;

  result = qword_256B589C8;
  if (!qword_256B589C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353390, &type metadata for WorkoutContextMenuPreviewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589C8);
  }
  return result;
}

unint64_t sub_23C29F400()
{
  unint64_t result;

  result = qword_256B589D0;
  if (!qword_256B589D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3533B8, &type metadata for WorkoutContextMenuPreviewAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589D0);
  }
  return result;
}

uint64_t sub_23C29F444(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4677656976657270 && a2 == 0xEE00646568637465;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164694477656976 && a2 == 0xED00007261657070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WorkoutContextMenuPreviewState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutContextMenuPreviewState();
  return sub_23C282F90(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewState()
{
  uint64_t result;

  result = qword_256B58A68;
  if (!qword_256B58A68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutContextMenuPreviewState.loadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutContextMenuPreviewState() + 24);
  return sub_23C29F604(a1, v3);
}

uint64_t sub_23C29F604(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*WorkoutContextMenuPreviewState.loadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WorkoutContextMenuPreviewState();
  return nullsub_1;
}

uint64_t WorkoutContextMenuPreviewState.init(identifier:layout:loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;

  v7 = *a3;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v7;
  v8 = a5 + *(int *)(type metadata accessor for WorkoutContextMenuPreviewState() + 24);
  return sub_23C29F6B0(a4, v8);
}

uint64_t sub_23C29F6B0(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_23C29F6F4(char a1)
{
  return *(_QWORD *)&aIdentifilayout[8 * a1];
}

uint64_t sub_23C29F714()
{
  char *v0;

  return sub_23C29F6F4(*v0);
}

uint64_t sub_23C29F71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2A148C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C29F740()
{
  sub_23C29F91C();
  return sub_23C34ECD0();
}

uint64_t sub_23C29F768()
{
  sub_23C29F91C();
  return sub_23C34ECDC();
}

uint64_t WorkoutContextMenuPreviewState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B589D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29F91C();
  sub_23C34ECC4();
  v10[15] = 0;
  sub_23C34EC10();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + 16);
    v10[13] = 1;
    sub_23C29F960();
    sub_23C34EC40();
    type metadata accessor for WorkoutContextMenuPreviewState();
    v10[12] = 2;
    type metadata accessor for WorkoutContextMenuPreviewLoadState();
    sub_23C29FC78(&qword_256B589F0, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewLoadState);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C29F91C()
{
  unint64_t result;

  result = qword_256B589E0;
  if (!qword_256B589E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3536E4, &type metadata for WorkoutContextMenuPreviewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B589E0);
  }
  return result;
}

unint64_t sub_23C29F960()
{
  unint64_t result;

  result = qword_256B589E8;
  if (!qword_256B589E8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutContextMenuPreviewLayout, &type metadata for WorkoutContextMenuPreviewLayout);
    atomic_store(result, (unint64_t *)&qword_256B589E8);
  }
  return result;
}

uint64_t WorkoutContextMenuPreviewState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t State;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v17 = a2;
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v18 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B589F8);
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WorkoutContextMenuPreviewState();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C29F91C();
  v10 = v21;
  sub_23C34ECB8();
  if (v10)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v11 = (uint64_t)v18;
  v25 = 0;
  v12 = (uint64_t)v9;
  *(_QWORD *)v9 = sub_23C34EB80();
  *((_QWORD *)v9 + 1) = v13;
  v23 = 1;
  sub_23C29FC34();
  sub_23C34EBB0();
  v9[16] = v24;
  v22 = 2;
  sub_23C29FC78(&qword_256B58A08, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewLoadState);
  v14 = v20;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v14);
  sub_23C29F6B0(v11, v12 + *(int *)(v7 + 24));
  sub_23C282F90(v12, v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_23C283550(v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewState);
}

unint64_t sub_23C29FC34()
{
  unint64_t result;

  result = qword_256B58A00;
  if (!qword_256B58A00)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutContextMenuPreviewLayout, &type metadata for WorkoutContextMenuPreviewLayout);
    atomic_store(result, (unint64_t *)&qword_256B58A00);
  }
  return result;
}

uint64_t sub_23C29FC78(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t State;

  result = *a1;
  if (!result)
  {
    State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
    result = MEMORY[0x24261C66C](a2, State);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C29FCB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutContextMenuPreviewState.init(from:)(a1, a2);
}

uint64_t sub_23C29FCCC(_QWORD *a1)
{
  return WorkoutContextMenuPreviewState.encode(to:)(a1);
}

BOOL _s20FitnessProductDetail30WorkoutContextMenuPreviewStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v6;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_23C34EC64() & 1) == 0 || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
    return 0;
  v6 = *(int *)(type metadata accessor for WorkoutContextMenuPreviewState() + 24);
  return _s20FitnessProductDetail34WorkoutContextMenuPreviewLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v6, a2 + v6);
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t State;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (char *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for WorkoutContextMenuPreviewContent();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 2, v9))
    {
      State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v17 = &qword_256B58900;
        else
          v17 = &qword_256B588F8;
        v18 = __swift_instantiateConcreteTypeFromMangledName(v17);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      }
      v19 = *(int *)(v9 + 20);
      v20 = &v7[v19];
      v21 = &v8[v19];
      v22 = sub_23C34D86C();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v21, 1, v22))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v26 = *(int *)(v9 + 24);
      v27 = &v7[v26];
      v28 = &v8[v26];
      if (v24(v28, 1, v22))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v28, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
    }
  }
  return v3;
}

uint64_t destroy for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for WorkoutContextMenuPreviewContent();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 2, v5);
  if (!(_DWORD)result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v8 = &qword_256B58900;
      else
        v8 = &qword_256B588F8;
      v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
    }
    v10 = v4 + *(int *)(v5 + 20);
    v11 = sub_23C34D86C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    if (!v13(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v14 = v4 + *(int *)(v5 + 24);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v14, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t initializeWithCopy for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t State;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 2, v8))
  {
    State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v15 = &qword_256B58900;
      else
        v15 = &qword_256B588F8;
      v16 = __swift_instantiateConcreteTypeFromMangledName(v15);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v7, v16);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    }
    v17 = *(int *)(v8 + 20);
    v18 = &v6[v17];
    v19 = &v7[v17];
    v20 = sub_23C34D86C();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v24 = *(int *)(v8 + 24);
    v25 = &v6[v24];
    v26 = &v7[v24];
    if (v22(v26, 1, v20))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v25, v26, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 2, v8);
  }
  return a1;
}

uint64_t assignWithCopy for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_23C283550((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      goto LABEL_7;
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v22(v7, 1, v20);
    v24 = v22(v8, 1, v20);
    if (v23)
    {
      if (!v24)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v25 = &qword_256B58900;
        else
          v25 = &qword_256B588F8;
        v26 = __swift_instantiateConcreteTypeFromMangledName(v25);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v7, v8, v26);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v24)
      {
        if (a1 != a2)
        {
          sub_23C29E720((uint64_t)v7);
          if (swift_getEnumCaseMultiPayload() == 1)
            v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v7, v8, v56);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v42 = *(int *)(v9 + 20);
        v43 = &v7[v42];
        v44 = &v8[v42];
        v45 = sub_23C34D86C();
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
        v48 = v47(v43, 1, v45);
        v49 = v47(v44, 1, v45);
        if (v48)
        {
          if (!v49)
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_36:
            v51 = *(int *)(v9 + 24);
            v52 = &v7[v51];
            v53 = &v8[v51];
            v54 = v47(v52, 1, v45);
            v55 = v47(v53, 1, v45);
            if (v54)
            {
              if (!v55)
              {
                (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v52, v53, v45);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v52, 0, 1, v45);
                return a1;
              }
            }
            else
            {
              if (!v55)
              {
                (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v52, v53, v45);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v46 + 8))(v52, v45);
            }
            v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v18 = v52;
            v19 = v53;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v49)
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
        }
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C29E720((uint64_t)v7);
    }
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_30;
  }
  if (v13)
  {
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutContextMenuPreviewLoadState() - 8) + 64);
    v18 = v7;
    v19 = v8;
LABEL_8:
    memcpy(v18, v19, v17);
    return a1;
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v27 = &qword_256B58900;
    else
      v27 = &qword_256B588F8;
    v28 = __swift_instantiateConcreteTypeFromMangledName(v27);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v7, v8, v28);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v29 = *(int *)(v9 + 20);
  v30 = &v7[v29];
  v31 = &v8[v29];
  v32 = sub_23C34D86C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v34(v31, 1, v32))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v36 = *(int *)(v9 + 24);
  v37 = &v7[v36];
  v38 = &v8[v36];
  if (v34(v38, 1, v32))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v37, v38, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v32);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  return a1;
}

uint64_t initializeWithTake for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t State;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v13 = &qword_256B58900;
      else
        v13 = &qword_256B588F8;
      v14 = __swift_instantiateConcreteTypeFromMangledName(v13);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v5, v6, v14);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
    }
    v15 = *(int *)(v7 + 20);
    v16 = &v5[v15];
    v17 = &v6[v15];
    v18 = sub_23C34D86C();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v17, 1, v18))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v22 = *(int *)(v7 + 24);
    v23 = &v5[v22];
    v24 = &v6[v22];
    if (v20(v24, 1, v18))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v24, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 2, v7);
  }
  return a1;
}

uint64_t assignWithTake for WorkoutContextMenuPreviewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 2, v10);
  v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_23C283550((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      goto LABEL_7;
    }
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v24 = v23(v8, 1, v21);
    v25 = v23(v9, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v26 = &qword_256B58900;
        else
          v26 = &qword_256B588F8;
        v27 = __swift_instantiateConcreteTypeFromMangledName(v26);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v8, v9, v27);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v8, 0, 1, v21);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v25)
      {
        if (a1 != a2)
        {
          sub_23C29E720((uint64_t)v8);
          if (swift_getEnumCaseMultiPayload() == 1)
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v8, v9, v57);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v43 = *(int *)(v10 + 20);
        v44 = &v8[v43];
        v45 = &v9[v43];
        v46 = sub_23C34D86C();
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
        v49 = v48(v44, 1, v46);
        v50 = v48(v45, 1, v46);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
LABEL_36:
            v52 = *(int *)(v10 + 24);
            v53 = &v8[v52];
            v54 = &v9[v52];
            v55 = v48(v53, 1, v46);
            v56 = v48(v54, 1, v46);
            if (v55)
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v53, v54, v46);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v53, 0, 1, v46);
                return a1;
              }
            }
            else
            {
              if (!v56)
              {
                (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v53, v54, v46);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v46);
            }
            v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v19 = v53;
            v20 = v54;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
        }
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C29E720((uint64_t)v8);
    }
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_30;
  }
  if (v14)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutContextMenuPreviewLoadState() - 8) + 64);
    v19 = v8;
    v20 = v9;
LABEL_8:
    memcpy(v19, v20, v18);
    return a1;
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v28 = &qword_256B58900;
    else
      v28 = &qword_256B588F8;
    v29 = __swift_instantiateConcreteTypeFromMangledName(v28);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v8, v9, v29);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  v30 = *(int *)(v10 + 20);
  v31 = &v8[v30];
  v32 = &v9[v30];
  v33 = sub_23C34D86C();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v35(v32, 1, v33))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v37 = *(int *)(v10 + 24);
  v38 = &v8[v37];
  v39 = &v9[v37];
  if (v35(v39, 1, v33))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v39, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2A1170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t State;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 48))(a1 + *(int *)(a3 + 24), a2, State);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2A11F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t State;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, State);
  }
  return result;
}

uint64_t sub_23C2A126C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2A1334 + 4 * byte_23C353545[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2A1368 + 4 * byte_23C353540[v4]))();
}

uint64_t sub_23C2A1368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2A1370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2A1378);
  return result;
}

uint64_t sub_23C2A1384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2A138CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C2A1390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2A1398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewState.CodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewState.CodingKeys;
}

unint64_t sub_23C2A13B8()
{
  unint64_t result;

  result = qword_256B58AA8;
  if (!qword_256B58AA8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3536BC, &type metadata for WorkoutContextMenuPreviewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58AA8);
  }
  return result;
}

unint64_t sub_23C2A1400()
{
  unint64_t result;

  result = qword_256B58AB0;
  if (!qword_256B58AB0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35362C, &type metadata for WorkoutContextMenuPreviewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58AB0);
  }
  return result;
}

unint64_t sub_23C2A1448()
{
  unint64_t result;

  result = qword_256B58AB8;
  if (!qword_256B58AB8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353654, &type metadata for WorkoutContextMenuPreviewState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B58AB8);
  }
  return result;
}

uint64_t sub_23C2A148C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C2A15D8()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  sub_23C34E8B0();
  return sub_23C34ECAC();
}

uint64_t sub_23C2A1634()
{
  sub_23C34EC88();
  return sub_23C34E8B0();
}

uint64_t sub_23C2A1674()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  sub_23C34E8B0();
  return sub_23C34ECAC();
}

uint64_t sub_23C2A16CC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23C34EC64();
}

__n128 WorkoutContextMenuPreviewFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t WorkoutContextMenuPreviewFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t State;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a3;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC0);
  v7 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutContextMenuPreviewAction();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v4[1];
  v42 = *v4;
  v43 = v16;
  sub_23C282F90(a4, (uint64_t)v15, v17);
  v18 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v15, 1, v18);
  v22 = *(int *)(type metadata accessor for WorkoutContextMenuPreviewState() + 24);
  v23 = (uint64_t)a2 + v22;
  if (v21 == 1)
  {
    sub_23C282F90((uint64_t)a2 + v22, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
    result = v20(v12, 2, v18);
    if ((_DWORD)result)
    {
      if ((_DWORD)result == 1)
      {
        v26 = *a2;
        v25 = a2[1];
        swift_bridgeObjectRetain();
        sub_23C283550(v23, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v23, 2, 2, v18);
        v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC8);
        v28 = &v9[v27[16]];
        v29 = &v9[v27[20]];
        v30 = &v9[v27[24]];
        v46 = v26;
        v47 = v25;
        sub_23C2A1AC8();
        swift_bridgeObjectRetain();
        sub_23C34EA78();
        sub_23C34E970();
        v31 = *MEMORY[0x24BE2B570];
        v32 = sub_23C34E790();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v28, v31, v32);
        v33 = (_QWORD *)swift_allocObject();
        v34 = v43;
        v33[2] = v42;
        v33[3] = v34;
        v33[4] = v26;
        v33[5] = v25;
        *(_QWORD *)v30 = &unk_256B58AE0;
        *((_QWORD *)v30 + 1) = v33;
        v35 = *MEMORY[0x24BE2B558];
        v36 = sub_23C34E784();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v29, v35, v36);
        v37 = v44;
        (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE2B438], v44);
        v38 = v45;
        v39 = *v45;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v39 = sub_23C2A22EC(0, *(_QWORD *)(v39 + 16) + 1, 1, v39, &qword_256B58B60, &qword_256B58AC0);
        v41 = *(_QWORD *)(v39 + 16);
        v40 = *(_QWORD *)(v39 + 24);
        if (v41 >= v40 >> 1)
          v39 = sub_23C2A22EC(v40 > 1, v41 + 1, 1, v39, &qword_256B58B60, &qword_256B58AC0);
        *(_QWORD *)(v39 + 16) = v41 + 1;
        result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v39+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v41, v9, v37);
        *v38 = v39;
      }
    }
    else
    {
      return sub_23C283550((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
    }
  }
  else
  {
    sub_23C283550((uint64_t)a2 + v22, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
    sub_23C2A1F18((uint64_t)v15, v23);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 2, v18);
  }
  return result;
}

unint64_t sub_23C2A1AC8()
{
  unint64_t result;

  result = qword_256B58AD0;
  if (!qword_256B58AD0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353838, &type metadata for WorkoutContextMenuPreviewFeature.TaskIdentifier);
    atomic_store(result, &qword_256B58AD0);
  }
  return result;
}

uint64_t sub_23C2A1B0C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);

  v5[2] = a1;
  type metadata accessor for WorkoutContextMenuPreviewAction();
  v5[3] = swift_task_alloc();
  v9 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v5[4] = v9;
  v5[5] = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v5[6] = v10;
  v5[7] = sub_23C34E964();
  v5[8] = sub_23C34E958();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a2 + *a2);
  v11 = (_QWORD *)swift_task_alloc();
  v5[9] = v11;
  *v11 = v5;
  v11[1] = sub_23C2A1BFC;
  return v13(v10, a4, a5);
}

uint64_t sub_23C2A1BFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 88) = sub_23C34E940();
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23C2A1C88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  v3 = v0[4];
  sub_23C282F90(v0[6], v2, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B68);
  *v4 = v0;
  v4[1] = sub_23C2A1D20;
  return sub_23C34E76C();
}

uint64_t sub_23C2A1D20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewAction);
  return swift_task_switch();
}

uint64_t sub_23C2A1D80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2A1DDC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2A1E28()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2A1E54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23C2A1EC8;
  return sub_23C2A1B0C(a1, v4, v5, v7, v6);
}

uint64_t sub_23C2A1EC8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23C2A1F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2A1F5C()
{
  return sub_23C27FEE4(&qword_256B58AE8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewAction, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewAction);
}

uint64_t sub_23C2A1F88()
{
  return sub_23C27FEE4(&qword_256B58AF0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewAction, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewAction);
}

unint64_t sub_23C2A1FB8()
{
  unint64_t result;

  result = qword_256B58AF8;
  if (!qword_256B58AF8)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BE2B430], MEMORY[0x24BE2B428]);
    atomic_store(result, (unint64_t *)&qword_256B58AF8);
  }
  return result;
}

uint64_t sub_23C2A1FFC()
{
  return sub_23C27FEE4(&qword_256B58B00, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewState, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewState);
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for WorkoutContextMenuPreviewEnvironment()
{
  return swift_release();
}

_QWORD *assignWithCopy for WorkoutContextMenuPreviewEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WorkoutContextMenuPreviewEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewFeature()
{
  return &type metadata for WorkoutContextMenuPreviewFeature;
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewFeature.TaskIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for WorkoutContextMenuPreviewFeature.TaskIdentifier()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for WorkoutContextMenuPreviewFeature.TaskIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WorkoutContextMenuPreviewFeature.TaskIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewFeature.TaskIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewFeature.TaskIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewFeature.TaskIdentifier()
{
  return &type metadata for WorkoutContextMenuPreviewFeature.TaskIdentifier;
}

unint64_t sub_23C2A2294()
{
  unint64_t result;

  result = qword_256B58B08;
  if (!qword_256B58B08)
  {
    result = MEMORY[0x24261C66C](&unk_23C353810, &type metadata for WorkoutContextMenuPreviewFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B58B08);
  }
  return result;
}

uint64_t sub_23C2A22D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C2A22EC(a1, a2, a3, a4, &qword_256B58B50, &qword_256B58B58);
}

uint64_t sub_23C2A22EC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23C34EAFC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23C2A2548(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23C2A24F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C2A22EC(a1, a2, a3, a4, &qword_256B58B40, &qword_256B58B48);
}

uint64_t sub_23C2A250C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C2A22EC(a1, a2, a3, a4, &qword_256B58B30, &qword_256B58B38);
}

uint64_t sub_23C2A2520(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C2A22EC(a1, a2, a3, a4, &qword_256B58B20, &qword_256B58B28);
}

uint64_t sub_23C2A2534(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C2A22EC(a1, a2, a3, a4, &qword_256B58B10, &qword_256B58B18);
}

uint64_t sub_23C2A2548(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23C34EB14();
  __break(1u);
  return result;
}

uint64_t sub_23C2A266C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58C88);
  sub_23C28943C(&qword_256B58C90, &qword_256B58C88, MEMORY[0x24BE2B5E8]);
  return sub_23C34DD58();
}

__n128 sub_23C2A26DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  uint64_t v17;

  v2 = sub_23C34E25C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34E244();
  v6 = *MEMORY[0x24BDF17C8];
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, v6, v2);
  v8 = sub_23C34E28C();
  swift_release();
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  sub_23C34E268();
  v7(v5, v6, v2);
  v10 = sub_23C34E28C();
  swift_release();
  v9(v5, v2);
  sub_23C34E298();
  v7(v5, v6, v2);
  v11 = sub_23C34E28C();
  swift_release();
  v9(v5, v2);
  *(_QWORD *)a1 = 0x4072F00000000000;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  __asm { FMOV            V0.2D, #20.0 }
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = xmmword_23C353880;
  *(_QWORD *)(a1 + 64) = 0x4028000000000000;
  return result;
}

__n128 WorkoutContextMenuPreviewView.init(store:artworkViewBuilder:textViewBuilder:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 result;
  __n128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __n128 v25;
  uint64_t v26;

  sub_23C2A26DC((uint64_t)&v21);
  v14 = v21;
  v15 = v23;
  v19 = v25;
  v20 = v24;
  v16 = v26;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)a7 = sub_23C286DF0;
  *(_QWORD *)(a7 + 8) = v17;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = v14;
  *(_OWORD *)(a7 + 48) = v22;
  *(_QWORD *)(a7 + 64) = v15;
  *(_OWORD *)(a7 + 72) = v20;
  result = v19;
  *(__n128 *)(a7 + 88) = v19;
  *(_QWORD *)(a7 + 104) = v16;
  *(_QWORD *)(a7 + 112) = a5;
  *(_QWORD *)(a7 + 120) = a6;
  return result;
}

uint64_t sub_23C2A2920()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t WorkoutContextMenuPreviewView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  __int128 *v45;
  _QWORD v46[2];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;

  v40 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B70);
  v39 = *(_QWORD *)(a1 + 16);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256B58B80);
  swift_getTupleTypeMetadata2();
  v4 = sub_23C34E700();
  v5 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v4);
  sub_23C34E64C();
  sub_23C34E010();
  swift_getTupleTypeMetadata2();
  v6 = sub_23C34E700();
  MEMORY[0x24261C66C](v5, v6);
  v7 = sub_23C34E664();
  v37 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_23C34DE30();
  v38 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  v16 = v2[5];
  v17 = v2[3];
  v59 = v2[4];
  v60 = v16;
  v18 = v2[5];
  v19 = v2[7];
  v61 = v2[6];
  v62 = v19;
  v20 = v2[1];
  v55 = *v2;
  v56 = v20;
  v21 = v2[3];
  v23 = *v2;
  v22 = v2[1];
  v57 = v2[2];
  v58 = v21;
  v51 = v59;
  v52 = v18;
  v24 = v2[7];
  v53 = v61;
  v54 = v24;
  v47 = v23;
  v48 = v22;
  v49 = v57;
  v50 = v17;
  v25 = sub_23C2A2CB8();
  v26 = *(_QWORD *)(a1 + 24);
  v27 = v39;
  v41 = v39;
  v42 = v26;
  v43 = v25;
  v44 = v28;
  v45 = &v55;
  sub_23C34E6E8();
  sub_23C34E658();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v27;
  *(_QWORD *)(v29 + 24) = v26;
  v30 = v60;
  *(_OWORD *)(v29 + 96) = v59;
  *(_OWORD *)(v29 + 112) = v30;
  v31 = v62;
  *(_OWORD *)(v29 + 128) = v61;
  *(_OWORD *)(v29 + 144) = v31;
  v32 = v56;
  *(_OWORD *)(v29 + 32) = v55;
  *(_OWORD *)(v29 + 48) = v32;
  v33 = v58;
  *(_OWORD *)(v29 + 64) = v57;
  *(_OWORD *)(v29 + 80) = v33;
  sub_23C2A423C((uint64_t)&v55);
  v34 = MEMORY[0x24261C66C](MEMORY[0x24BDF4750], v7);
  sub_23C34E4E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v7);
  v46[0] = v34;
  v46[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v10, v46);
  sub_23C28958C((uint64_t)v13, v10, (uint64_t)v15);
  v35 = *(void (**)(char *, uint64_t))(v38 + 8);
  v35(v13, v10);
  sub_23C287D30((uint64_t)v15, v10, v40);
  return ((uint64_t (*)(char *, uint64_t))v35)(v15, v10);
}

double sub_23C2A2CB8()
{
  __int128 *v0;
  double v1;
  id v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Width;
  double Height;
  __int128 v14;
  __int128 v15;
  CGRect v16;
  CGRect v17;

  v15 = *v0;
  v1 = *((double *)v0 + 5);
  v14 = *(__int128 *)((char *)v0 + 72);
  sub_23C2A266C();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if ((v15 & 1) == 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v2, sel_bounds);
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v16.origin.x = v4;
    v16.origin.y = v6;
    v16.size.width = v8;
    v16.size.height = v10;
    Width = CGRectGetWidth(v16);
    v17.origin.x = v4;
    v17.origin.y = v6;
    v17.size.width = v8;
    v17.size.height = v10;
    Height = CGRectGetHeight(v17);
    if (Height >= Width)
      Height = Width;
    return Height - (*(double *)&v14 + *(double *)&v14);
  }
  return v1;
}

uint64_t sub_23C2A2E04@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t State;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[4];
  _QWORD v63[2];
  uint64_t v64[2];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a3;
  v60 = a4;
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256B58B80);
  swift_getTupleTypeMetadata2();
  v45 = sub_23C34E700();
  v44 = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v45);
  v10 = sub_23C34E64C();
  v46 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v48 = (uint64_t)&v44 - v14;
  v15 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v47 = (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23C34E010();
  v58 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v59 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v56 = (char *)&v44 - v24;
  v57 = sub_23C34E538();
  sub_23C34E6E8();
  sub_23C34DD88();
  v55 = v73;
  v54 = v74;
  v53 = v75;
  v52 = v76;
  v51 = v77;
  v50 = v78;
  v25 = a1[5];
  v69 = a1[4];
  v70 = v25;
  v26 = a1[7];
  v71 = a1[6];
  v72 = v26;
  v27 = a1[1];
  v65 = *a1;
  v66 = v27;
  v28 = a1[3];
  v67 = a1[2];
  v68 = v28;
  v49 = a2;
  type metadata accessor for WorkoutContextMenuPreviewView(0, a2, v61, v29);
  sub_23C2A266C();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 2, v15);
  v31 = MEMORY[0x24BDF5138];
  if (v30)
  {
    v32 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v10);
    v33 = v56;
    sub_23C328CC8(v32, MEMORY[0x24BDF5158]);
  }
  else
  {
    v34 = v47;
    v35 = sub_23C2A1F18((uint64_t)v20, v47);
    MEMORY[0x24BDAC7A8](v35);
    v36 = v61;
    *(&v44 - 6) = v49;
    *(&v44 - 5) = v36;
    *(&v44 - 4) = v34;
    *(&v44 - 3) = (uint64_t)a1;
    *((double *)&v44 - 2) = a5;
    *((double *)&v44 - 1) = a6;
    sub_23C34DFE0();
    sub_23C34E640();
    MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v10);
    v37 = v48;
    sub_23C28958C((uint64_t)v13, v10, v48);
    v38 = *(void (**)(char *, uint64_t))(v46 + 8);
    v38(v13, v10);
    sub_23C287D30(v37, v10, (uint64_t)v13);
    v33 = v56;
    sub_23C328C04((uint64_t)v13, MEMORY[0x24BDF5158], v10);
    v38(v13, v10);
    v38((char *)v37, v10);
    sub_23C283550(v34, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
  }
  *(_QWORD *)&v65 = v57;
  *((_QWORD *)&v65 + 1) = v55;
  LOBYTE(v66) = v54;
  *((_QWORD *)&v66 + 1) = v53;
  LOBYTE(v67) = v52;
  *((_QWORD *)&v67 + 1) = v51;
  *(_QWORD *)&v68 = v50;
  v64[0] = (uint64_t)&v65;
  v39 = v58;
  v40 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v59, v33, v21);
  v64[1] = v40;
  swift_retain();
  v63[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B70);
  v63[1] = v21;
  v62[2] = sub_23C2A4A70();
  v41 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v10);
  v62[0] = v31;
  v62[1] = v41;
  v62[3] = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v21, v62);
  sub_23C328D8C(v64, 2uLL, (uint64_t)v63);
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v33, v21);
  swift_release();
  v42((char *)v40, v21);
  return swift_release();
}

uint64_t sub_23C2A3438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2A2E04(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_23C2A3448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  _QWORD v73[2];
  uint64_t v74;
  _QWORD v75[2];
  _QWORD v76[4];
  _QWORD v77[2];
  _QWORD v78[45];
  uint64_t v79[2];
  _BYTE v80[336];
  _BYTE v81[352];
  _BYTE v82[343];
  uint64_t v83[45];
  _QWORD v84[2];
  _QWORD v85[3];

  v71 = a4;
  v67 = a5;
  v68 = a2;
  v58 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v8;
  v9 = sub_23C34DE30();
  v60 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v59 = (char *)&v57 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v70 = v9;
  v11 = sub_23C34DE30();
  v63 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v57 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23C34EA48();
  v64 = *(_QWORD *)(v62 - 8);
  v23 = MEMORY[0x24BDAC7A8](v62);
  v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v65 = a1;
  v66 = (uint64_t)&v57 - v26;
  sub_23C28950C(a1, (uint64_t)v18, &qword_256B58908);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  v28 = MEMORY[0x24BDEBEE0];
  if (v27 == 1)
  {
    sub_23C285184((uint64_t)v18, &qword_256B58908);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v25, 1, 1, v11);
    v85[0] = v71;
    v85[1] = v28;
    v29 = MEMORY[0x24BDED308];
    v30 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v70, v85);
    v31 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
    v84[0] = v30;
    v84[1] = v31;
    MEMORY[0x24261C66C](v29, v11, v84);
  }
  else
  {
    sub_23C2894C8((uint64_t)v18, (uint64_t)v22, &qword_256B588F0);
    (*(void (**)(char *))(v68 + 24))(v22);
    sub_23C34E6E8();
    v32 = v59;
    v33 = v69;
    v57 = v15;
    v34 = v25;
    v35 = v71;
    sub_23C34E484();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v33);
    v73[0] = v35;
    v25 = v34;
    v73[1] = MEMORY[0x24BDEBEE0];
    v36 = MEMORY[0x24BDED308];
    v37 = v70;
    v38 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v70, v73);
    v39 = (uint64_t)v61;
    sub_23C34E3E8();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v37);
    sub_23C285184((uint64_t)v22, &qword_256B588F0);
    v40 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
    v72[0] = v38;
    v72[1] = v40;
    MEMORY[0x24261C66C](v36, v11, v72);
    v41 = (uint64_t)v57;
    sub_23C28958C(v39, v11, (uint64_t)v57);
    v42 = v63;
    v43 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    v43(v39, v11);
    sub_23C287D30(v41, v11, (uint64_t)v25);
    v43(v41, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v25, 0, 1, v11);
  }
  v44 = v66;
  sub_23C2D7E50((uint64_t)v25, v66);
  v45 = v64;
  v63 = *(_QWORD *)(v64 + 8);
  v46 = v62;
  ((void (*)(char *, uint64_t))v63)(v25, v62);
  v47 = v68;
  v48 = *(_QWORD *)(v68 + 88);
  v49 = sub_23C34DFE0();
  v50 = (uint64_t)v25;
  v51 = v71;
  sub_23C2A3AA8(v65, v47, v69, v71, v80);
  v81[344] = 0;
  memcpy(&v81[7], v80, 0x150uLL);
  memcpy(v82, v81, sizeof(v82));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v50, v44, v46);
  v79[0] = v50;
  v78[0] = v49;
  v78[1] = v48;
  LOBYTE(v78[2]) = 0;
  memcpy((char *)&v78[2] + 1, v82, 0x157uLL);
  v79[1] = (uint64_t)v78;
  sub_23C2A4B2C((uint64_t)v80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23C2A4AD4);
  v77[0] = v46;
  v77[1] = __swift_instantiateConcreteTypeFromMangledName(qword_256B58B80);
  v76[0] = v51;
  v76[1] = MEMORY[0x24BDEBEE0];
  v52 = MEMORY[0x24BDED308];
  v53 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v70, v76);
  v54 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v75[0] = v53;
  v75[1] = v54;
  v74 = MEMORY[0x24261C66C](v52, v11, v75);
  v76[2] = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v46, &v74);
  v76[3] = sub_23C28943C(&qword_256B58CA8, qword_256B58B80, MEMORY[0x24BDF4700]);
  sub_23C328D8C(v79, 2uLL, (uint64_t)v77);
  sub_23C2A4B2C((uint64_t)v80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23C2A4C4C);
  v55 = (uint64_t (*)(uint64_t, uint64_t))v63;
  ((void (*)(uint64_t, uint64_t))v63)(v44, v46);
  memcpy(v83, v78, sizeof(v83));
  sub_23C2A4CA4(v83);
  return v55(v50, v46);
}

_QWORD *sub_23C2A3AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  unsigned int (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  _BYTE v78[168];
  _BYTE v79[168];
  _QWORD v80[21];
  _OWORD v81[10];
  _OWORD v82[21];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _BYTE v101[168];
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;

  v72 = a3;
  v73 = a4;
  v76 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v69 - v11;
  v13 = sub_23C34D86C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v69 - v17;
  v75 = type metadata accessor for WorkoutContextMenuPreviewContent();
  sub_23C28950C(a1 + *(int *)(v75 + 20), (uint64_t)v12, &qword_256B58910);
  v19 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v14 + 48);
  if (v19(v12, 1, v13) == 1)
  {
    sub_23C285184((uint64_t)v12, &qword_256B58910);
    sub_23C2A4DC0((uint64_t)v82);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
    v20 = (*(uint64_t (**)(char *))(a2 + 112))(v18);
    v22 = v21;
    v70 = v19;
    v71 = a1;
    v24 = v23;
    v25 = v14;
    v27 = v26 & 1;
    v28 = sub_23C34E6F4();
    sub_23C2EDDBC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v82, 0.0, 1, 0.0, 1, v28, v29, v20, v22, v27, v24);
    v30 = v27;
    v14 = v25;
    a1 = v71;
    sub_23C289340(v20, v22, v30);
    swift_bridgeObjectRelease();
    v108 = v82[6];
    v109 = v82[7];
    v110 = v82[8];
    v104 = v82[2];
    v105 = v82[3];
    v107 = v82[5];
    v106 = v82[4];
    v103 = v82[1];
    v102 = v82[0];
    v31 = *(_QWORD *)(a2 + 48);
    KeyPath = swift_getKeyPath();
    swift_retain();
    v33 = sub_23C34E544();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    v82[6] = v108;
    v82[7] = v109;
    v82[8] = v110;
    v82[2] = v104;
    v82[3] = v105;
    v82[4] = v106;
    v82[5] = v107;
    v82[0] = v102;
    v82[1] = v103;
    *(_QWORD *)&v82[9] = KeyPath;
    v19 = v70;
    *((_QWORD *)&v82[9] + 1) = v31;
    *(_QWORD *)&v82[10] = v33;
    nullsub_1(v82, v34, v35, v36, v37, v38, v39, v40, v69, v70, v71, v72, v73, v74, v75, v76, v77);
  }
  sub_23C2894C8((uint64_t)v82, (uint64_t)&v102, &qword_256B58CB0);
  sub_23C28950C(a1 + *(int *)(v75 + 24), (uint64_t)v10, &qword_256B58910);
  if (v19(v10, 1, v13) == 1)
  {
    sub_23C285184((uint64_t)v10, &qword_256B58910);
    sub_23C2A4DC0((uint64_t)v82);
  }
  else
  {
    v69 = v14;
    v41 = *(void (**)(char *, char *))(v14 + 32);
    v42 = v74;
    v41(v74, v10);
    v43 = (*(uint64_t (**)(char *))(a2 + 112))(v42);
    v45 = v44;
    v47 = v46;
    v49 = v48 & 1;
    v50 = sub_23C34E6F4();
    sub_23C2EDDBC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v81, 0.0, 1, 0.0, 1, v50, v51, v43, v45, v49, v47);
    sub_23C289340(v43, v45, v49);
    swift_bridgeObjectRelease();
    v98 = v81[6];
    v99 = v81[7];
    v100 = v81[8];
    v94 = v81[2];
    v95 = v81[3];
    v97 = v81[5];
    v96 = v81[4];
    v93 = v81[1];
    v92 = v81[0];
    v52 = *(_OWORD *)(a2 + 80);
    v82[4] = *(_OWORD *)(a2 + 64);
    v82[5] = v52;
    v53 = *(_OWORD *)(a2 + 112);
    v82[6] = *(_OWORD *)(a2 + 96);
    v82[7] = v53;
    v54 = *(_OWORD *)(a2 + 16);
    v82[0] = *(_OWORD *)a2;
    v82[1] = v54;
    v55 = *(_OWORD *)(a2 + 48);
    v82[2] = *(_OWORD *)(a2 + 32);
    v82[3] = v55;
    type metadata accessor for WorkoutContextMenuPreviewView(0, v72, v73, v56);
    sub_23C2A266C();
    swift_getKeyPath();
    sub_23C34E79C();
    swift_release();
    swift_release();
    v57 = 64;
    if (LOBYTE(v82[0]))
      v57 = 56;
    v58 = *(_QWORD *)(a2 + v57);
    v59 = swift_getKeyPath();
    v89 = v98;
    v90 = v99;
    v91 = v100;
    v85 = v94;
    v86 = v95;
    v88 = v97;
    v87 = v96;
    v84 = v93;
    v83 = v92;
    swift_retain();
    v60 = sub_23C34E544();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v13);
    v82[6] = v89;
    v82[7] = v90;
    v82[8] = v91;
    v82[2] = v85;
    v82[3] = v86;
    v82[4] = v87;
    v82[5] = v88;
    v82[0] = v83;
    v82[1] = v84;
    *(_QWORD *)&v82[9] = v59;
    *((_QWORD *)&v82[9] + 1) = v58;
    *(_QWORD *)&v82[10] = v60;
    nullsub_1(v82, v61, v62, v63, v64, v65, v66, v67, v69, v70, v71, v72, v73, v74, v75, v76, v77);
  }
  sub_23C2894C8((uint64_t)v82, (uint64_t)v101, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)&v102, (uint64_t)v79, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)v101, (uint64_t)v78, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)v79, (uint64_t)v80, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)v78, (uint64_t)v81, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)v80, (uint64_t)v82, &qword_256B58CB0);
  sub_23C2894C8((uint64_t)v81, (uint64_t)&v82[10] + 8, &qword_256B58CB0);
  memcpy(v76, v82, 0x150uLL);
  sub_23C2894C8((uint64_t)v78, (uint64_t)&v83, &qword_256B58CB0);
  sub_23C2A4DE0(v80, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A4AD4);
  sub_23C2A4DE0(v81, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A4AD4);
  sub_23C2A4DE0(&v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A4C4C);
  sub_23C2894C8((uint64_t)v79, (uint64_t)&v92, &qword_256B58CB0);
  return sub_23C2A4DE0(&v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A4C4C);
}

uint64_t sub_23C2A40EC(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[8];

  v6 = type metadata accessor for WorkoutContextMenuPreviewAction();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[5];
  v16[4] = a1[4];
  v16[5] = v9;
  v10 = a1[7];
  v16[6] = a1[6];
  v16[7] = v10;
  v11 = a1[1];
  v16[0] = *a1;
  v16[1] = v11;
  v12 = a1[3];
  v16[2] = a1[2];
  v16[3] = v12;
  type metadata accessor for WorkoutContextMenuPreviewView(0, a2, a3, v13);
  sub_23C2A266C();
  v14 = type metadata accessor for WorkoutContextMenuPreviewContent();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewAction);
}

uint64_t sub_23C2A41E0()
{
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C2A4230()
{
  uint64_t v0;

  return sub_23C2A40EC((_OWORD *)(v0 + 32), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23C2A423C(uint64_t a1)
{
  sub_23C28801C();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2A42B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2A42EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2A42F4()
{
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2A4344(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  v9 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  v10 = a2[13];
  v11 = a2[14];
  v12 = a2[15];
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 120) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2A43F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C287FCC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  v8 = a2[15];
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_23C2A4520(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C287FCC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_23C2A45CC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2A4614(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WorkoutContextMenuPreviewView);
}

uint64_t sub_23C2A4680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B70);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256B58B80);
  swift_getTupleTypeMetadata2();
  v0 = sub_23C34E700();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v0);
  sub_23C34E64C();
  sub_23C34E010();
  swift_getTupleTypeMetadata2();
  v2 = sub_23C34E700();
  MEMORY[0x24261C66C](v1, v2);
  v3 = sub_23C34E664();
  v4 = sub_23C34DE30();
  v6[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4750], v3);
  v6[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24261C66C](MEMORY[0x24BDED308], v4, v6);
}

uint64_t sub_23C2A47FC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2A4804()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2A4834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23C2A4890(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23C2A4958(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t sub_23C2A49BC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2A4A04(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewView.Layout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WorkoutContextMenuPreviewView.Layout);
}

uint64_t sub_23C2A4A60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C2A3448(v1[4], v1[5], v1[2], v1[3], a1);
}

unint64_t sub_23C2A4A70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58C98;
  if (!qword_256B58C98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B70);
    v2[0] = MEMORY[0x24BDF3E20];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58C98);
  }
  return result;
}

uint64_t sub_23C2A4AD4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289550(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23C2A4B2C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v19 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 176);
  v5 = *(_QWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 192);
  v7 = *(_QWORD *)(a1 + 200);
  v8 = *(_QWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 216);
  v10 = *(_QWORD *)(a1 + 224);
  v17 = *(_OWORD *)(a1 + 248);
  v18 = *(_OWORD *)(a1 + 232);
  v16 = *(_OWORD *)(a1 + 264);
  v14 = *(_OWORD *)(a1 + 296);
  v15 = *(_OWORD *)(a1 + 280);
  v13 = *(_OWORD *)(a1 + 312);
  v11 = *(_QWORD *)(a1 + 328);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160));
  a2(v19, v4, v5, v6, v7, v8, v9, v10, v18, *((_QWORD *)&v18 + 1), v17, *((_QWORD *)&v17 + 1), v16, *((_QWORD *)&v16 + 1), v15, *((_QWORD *)&v15 + 1), v14, *((_QWORD *)&v14 + 1), v13,
    *((_QWORD *)&v13 + 1),
    v11);
  return a1;
}

uint64_t sub_23C2A4C4C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289340(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t *sub_23C2A4CA4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[24];
  v3 = a1[25];
  v4 = a1[26];
  v5 = a1[27];
  sub_23C2A4C4C(a1[3], a1[4], a1[5], a1[6]);
  sub_23C2A4C4C(v2, v3, v4, v5);
  return a1;
}

double sub_23C2A4DC0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

_QWORD *sub_23C2A4DE0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

uint64_t sub_23C2A4E50()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58E08);
  sub_23C28943C(&qword_256B58E10, &qword_256B58E08, MEMORY[0x24BE2B5E8]);
  return sub_23C34DD58();
}

BOOL sub_23C2A4EC0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 64);
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if ((_BYTE)v4)
    v2 = 1;
  else
    v2 = BYTE1(v1) >= 7u;
  return !v2;
}

__n128 WorkoutDetailView.init(store:relatedCanvasViewBuilder:workoutActionsViewBuilder:workoutScheduleViewBuilder:artworkViewBuilder:textViewBuilder:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20;
  __n128 result;

  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)a9 = sub_23C286DF0;
  *(_QWORD *)(a9 + 8) = v20;
  *(_BYTE *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  result = a10;
  *(__n128 *)(a9 + 72) = a10;
  *(_QWORD *)(a9 + 88) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  return result;
}

uint64_t sub_23C2A50AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C2A50D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[2];
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v27 = a1;
  v28 = a3;
  v26 = *(_QWORD *)(a2 + 16);
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v25 = *(_QWORD *)(a2 + 40);
  swift_getTupleTypeMetadata2();
  v5 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v5);
  v6 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v7 = sub_23C34DE30();
  v43[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v6);
  v43[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v7, v43);
  v8 = sub_23C34E64C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v15 = v3[3];
  v16 = v3[5];
  v47 = v3[4];
  v48 = v16;
  v17 = v3[1];
  v44[0] = *v3;
  v44[1] = v17;
  v18 = v3[3];
  v20 = *v3;
  v19 = v3[1];
  v45 = v3[2];
  v46 = v18;
  v21 = v3[5];
  v40 = v47;
  v41 = v21;
  v36 = v20;
  v37 = v19;
  v49 = *((_QWORD *)v3 + 12);
  v42 = *((_QWORD *)v3 + 12);
  v38 = v45;
  v39 = v15;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34DFEC();
  v29 = v26;
  v30 = *(_OWORD *)(a2 + 24);
  v31 = v25;
  v22 = *(_OWORD *)(a2 + 64);
  v32 = *(_OWORD *)(a2 + 48);
  v33 = v22;
  v34 = v44;
  v35 = v27;
  sub_23C34E640();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v8);
  sub_23C28958C((uint64_t)v12, v8, (uint64_t)v14);
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v12, v8);
  sub_23C287D30((uint64_t)v14, v8, v28);
  return ((uint64_t (*)(char *, uint64_t))v23)(v14, v8);
}

void sub_23C2A53CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v0 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v0);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v1 = sub_23C34DE30();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2A5580(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B590B8);
  v9 = sub_23C2BFDC4(&qword_256B590C0, &qword_256B590B8, (uint64_t (*)(void))sub_23C2C0B64);
  sub_23C2A5DDC(v6, (uint64_t)sub_23C2C0B58, (uint64_t)(v1 + 8), a1, v8, v9, v4);
  v10 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v5);
  v11 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v1[20] = v10;
  v1[21] = v11;
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v3, v1 + 20);
  sub_23C28958C(v4, v3, v2);
  v12 = *(void (**)(uint64_t, uint64_t))(v1[1] + 8);
  v12(v4, v3);
  sub_23C287D30(v2, v3, v1[7]);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v2, v3);
}

void sub_23C2A568C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23C34DFC8();
  MEMORY[0x24BDAC7A8](v2);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B590D0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2A57CC(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  if (!sub_23C2A4EC0())
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v6 + 56))(*(_QWORD *)(v1 + 56), 1, 1, v8);
  *(_QWORD *)(v1 + 104) = v6;
  *(_QWORD *)(v1 + 112) = v5;
  v11 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 80) = v4;
  *(_QWORD *)(v1 + 88) = v8;
  *(_QWORD *)(v1 + 96) = v3;
  v12 = *(_OWORD *)(v7 + 80);
  v2[4] = *(_OWORD *)(v7 + 64);
  v2[5] = v12;
  *(_QWORD *)(v1 + 400) = *(_QWORD *)(v7 + 96);
  v13 = *(_OWORD *)(v7 + 16);
  *v2 = *(_OWORD *)v7;
  v2[1] = v13;
  v14 = *(_OWORD *)(v7 + 48);
  v2[2] = *(_OWORD *)(v7 + 32);
  v2[3] = v14;
  sub_23C2A5B04(v10, a1, (uint64_t *)(v1 + 120));
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v1 + 120);
  v15 = *(_QWORD *)(v1 + 128);
  v16 = *(_BYTE *)(v1 + 136);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 24) = v15;
  v17 = *(_BYTE *)(v1 + 168);
  *(_DWORD *)(v1 + 12) = sub_23C34E19C();
  v18 = *(_OWORD *)(v7 + 80);
  v2[4] = *(_OWORD *)(v7 + 64);
  v2[5] = v18;
  *(_QWORD *)(v1 + 400) = *(_QWORD *)(v7 + 96);
  v19 = *(_OWORD *)(v7 + 16);
  *v2 = *(_OWORD *)v7;
  v2[1] = v19;
  v20 = *(_OWORD *)(v7 + 48);
  v2[2] = *(_OWORD *)(v7 + 32);
  v2[3] = v20;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v21 = *(_BYTE *)(v1 + 336);
  if ((v21 & 1) != 0)
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
  }
  else
  {
    sub_23C34DD28();
    v22 = v27;
    v23 = v28;
    v24 = v29;
    v25 = v30;
  }
  v31 = sub_23C34E1B4();
  v32 = *(_OWORD *)(v7 + 80);
  *(_OWORD *)(v1 + 368) = *(_OWORD *)(v7 + 64);
  *(_OWORD *)(v1 + 384) = v32;
  *(_QWORD *)(v1 + 400) = *(_QWORD *)(v7 + 96);
  v33 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v1 + 304) = *(_OWORD *)v7;
  *(_OWORD *)(v1 + 320) = v33;
  v34 = *(_OWORD *)(v7 + 48);
  *(_OWORD *)(v1 + 336) = *(_OWORD *)(v7 + 32);
  *(_OWORD *)(v1 + 352) = v34;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v35 = *(_BYTE *)(v1 + 336);
  v36 = *(_QWORD *)(v1 + 56);
  v37 = *(_QWORD *)(v1 + 88);
  v38 = *(_QWORD *)(v1 + 104);
  if ((v35 & 1) != 0)
  {
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
  }
  else
  {
    sub_23C34DD28();
  }
  v43 = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(v1 + 296) = v16;
  *(_BYTE *)(v1 + 288) = v17;
  *(_BYTE *)(v1 + 280) = v21;
  *(_BYTE *)(v1 + 272) = v35;
  v44 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 128) = v44;
  *(_BYTE *)(v1 + 136) = v16;
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v1 + 168) = v17;
  *(_BYTE *)(v1 + 176) = *(_DWORD *)(v1 + 12);
  *(_QWORD *)(v1 + 184) = v22;
  *(_QWORD *)(v1 + 192) = v23;
  *(_QWORD *)(v1 + 200) = v24;
  *(_QWORD *)(v1 + 208) = v25;
  *(_BYTE *)(v1 + 216) = v21;
  *(_BYTE *)(v1 + 224) = v31;
  *(_QWORD *)(v1 + 232) = v39;
  *(_QWORD *)(v1 + 240) = v40;
  *(_QWORD *)(v1 + 248) = v41;
  *(_QWORD *)(v1 + 256) = v42;
  *(_BYTE *)(v1 + 264) = *(_BYTE *)(v1 + 272);
  v45 = v43;
  sub_23C34DFBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B590E0);
  sub_23C2BFE70(&qword_256B590D8, &qword_256B590E0, (uint64_t (*)(void))sub_23C2C0C08, MEMORY[0x24BDECC60]);
  v46 = *(_QWORD *)(v1 + 96);
  sub_23C34E460();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 48) + 8))(v45, v11);
  v47 = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(v1 + 416) = v47;
  *(_OWORD *)(v1 + 432) = *(_OWORD *)(v1 + 248);
  *(_BYTE *)(v1 + 448) = *(_BYTE *)(v1 + 264);
  v48 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(v1 + 336) = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(v1 + 352) = v48;
  v49 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(v1 + 368) = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(v1 + 384) = v49;
  v50 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(v1 + 304) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(v1 + 320) = v50;
  sub_23C28947C(v1 + 304);
  v51 = *(_QWORD *)(v1 + 80);
  sub_23C2894C8(v46, v51, &qword_256B590D0);
  sub_23C2894C8(v51, v36, &qword_256B590D0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
}

uint64_t sub_23C2A5B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  uint64_t v59;

  v41 = a2;
  v42 = a1;
  v46 = a3;
  v4 = sub_23C34E25C();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v3;
  v7 = v3[1];
  v8 = *((_BYTE *)v3 + 16);
  v10 = v3[3];
  v9 = v3[4];
  v11 = v3[5];
  v12 = v3[6];
  v13 = v3[7];
  v40 = v3[8];
  v14 = v3[10];
  v39 = v3[9];
  v38 = v14;
  v37 = (uint64_t (*)(_QWORD))v3[11];
  v36 = v3[12];
  v47 = v6;
  v48 = v7;
  v49 = v8;
  v50 = v10;
  v51 = v9;
  v52 = v11;
  v53 = v12;
  v54 = v13;
  v55 = v40;
  v56 = v39;
  v57 = v14;
  v58 = v37;
  v59 = v36;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v15 = v55;
  v47 = v6;
  v48 = v7;
  v49 = v8;
  v50 = v10;
  v51 = v9;
  v52 = v11;
  v53 = v12;
  v54 = v13;
  v55 = v40;
  v56 = v39;
  v57 = v38;
  v16 = v37;
  v58 = v37;
  v59 = v36;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  LODWORD(v41) = v15 == 0 && BYTE1(v51) > 6u;
  v17 = 3;
  if ((_DWORD)v41)
    v17 = 0;
  v40 = v17;
  v18 = type metadata accessor for WorkoutDetail();
  v19 = v16(v42 + *(int *)(v18 + 100));
  v21 = v20;
  v23 = v22 & 1;
  sub_23C34E1FC();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  v25 = v43;
  v24 = v44;
  v26 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x24BDF17C8], v45);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  v27 = sub_23C34E334();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release();
  sub_23C289340(v19, v21, v23);
  swift_bridgeObjectRelease();
  result = swift_getKeyPath();
  v35 = v46;
  *v46 = v27;
  v35[1] = v29;
  *((_BYTE *)v35 + 16) = v31 & 1;
  v35[3] = v33;
  v35[4] = result;
  v35[5] = v40;
  *((_BYTE *)v35 + 48) = v41 & 1;
  return result;
}

uint64_t sub_23C2A5DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __int128 *v7;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  double v29;
  double v30;
  __int128 v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 *v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _QWORD v75[2];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v44 = a6;
  v45 = a5;
  v51 = a2;
  v52 = a3;
  v50 = a1;
  v54 = a7;
  v53 = sub_23C34DE54();
  MEMORY[0x24BDAC7A8](v53);
  v11 = (double *)((char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = *(_QWORD *)(a4 + 16);
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  v12 = sub_23C34DE30();
  v75[0] = a6;
  v75[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v75);
  sub_23C34DE90();
  sub_23C34DE30();
  v42[0] = *(_QWORD *)(a4 + 40);
  swift_getTupleTypeMetadata2();
  v43 = sub_23C34E700();
  v42[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v43);
  v13 = sub_23C34E64C();
  v48 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v42 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v16 = sub_23C34DE30();
  v49 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v46 = (uint64_t)v42 - v20;
  v21 = v7[3];
  v22 = v7[5];
  v80 = v7[4];
  v81 = v22;
  v23 = v7[1];
  v76 = *v7;
  v77 = v23;
  v24 = v7[3];
  v26 = *v7;
  v25 = v7[1];
  v78 = v7[2];
  v79 = v24;
  v27 = v7[5];
  v72 = v80;
  v73 = v27;
  v68 = v26;
  v69 = v25;
  v82 = *((_QWORD *)v7 + 12);
  v74 = *((_QWORD *)v7 + 12);
  v70 = v78;
  v71 = v21;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v28 = v72;
  v72 = v80;
  v73 = v81;
  v74 = v82;
  v68 = v76;
  v69 = v77;
  v70 = v78;
  v71 = v79;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v29 = 1.77777778;
  if (v28)
    v30 = 14.0;
  else
    v30 = 0.0;
  v56 = *(_OWORD *)(a4 + 24);
  if (BYTE1(v70) < 7u && v28 == 0)
    v29 = 1.25;
  v32 = *(_OWORD *)(a4 + 64);
  v59 = *(_OWORD *)(a4 + 48);
  v55 = v47;
  v57 = v42[0];
  v58 = v45;
  v60 = v32;
  v61 = v44;
  v62 = &v76;
  v63 = v50;
  v64 = v29;
  v65 = v51;
  v66 = v52;
  sub_23C34DFE0();
  sub_23C34E640();
  v33 = (char *)v11 + *(int *)(v53 + 20);
  v34 = *MEMORY[0x24BDEEB68];
  v35 = sub_23C34DFB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
  *v11 = v30;
  v11[1] = v30;
  v36 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v13);
  v37 = MEMORY[0x24BDED998];
  sub_23C27FEE4(&qword_256B58F58, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
  sub_23C34E4F0();
  sub_23C283550((uint64_t)v11, (uint64_t (*)(_QWORD))v37);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v13);
  v38 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v67[0] = v36;
  v67[1] = v38;
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v16, v67);
  v39 = v46;
  sub_23C28958C((uint64_t)v19, v16, v46);
  v40 = *(void (**)(char *, uint64_t))(v49 + 8);
  v40(v19, v16);
  sub_23C287D30(v39, v16, v54);
  return ((uint64_t (*)(uint64_t, uint64_t))v40)(v39, v16);
}

uint64_t sub_23C2A62B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t (*v58)(uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(_QWORD, _QWORD);
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[2];
  uint64_t v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];

  v84 = a8;
  v77 = a7;
  v76 = a6;
  v79 = a4;
  v78 = a3;
  v83 = a9;
  v75 = a13;
  v74 = a12;
  v85 = a14;
  v62 = a15;
  v71 = a11;
  v61 = a10;
  v82 = *(_QWORD *)(a8 - 8);
  v18 = MEMORY[0x24BDAC7A8](a1);
  v81 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v80 = (uint64_t)&v60 - v21;
  v63 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34E130();
  v25 = sub_23C34DE30();
  v68 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v60 - v26;
  v28 = sub_23C34DE30();
  v73 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v60 - v29;
  v64 = sub_23C34DE30();
  v105[0] = a15;
  v105[1] = MEMORY[0x24BDECC60];
  v65 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v64, v105);
  v67 = sub_23C34DE90();
  v70 = sub_23C34DE30();
  v72 = *(_QWORD *)(v70 - 8);
  v31 = MEMORY[0x24BDAC7A8](v70);
  v60 = (char *)&v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v66 = (uint64_t)&v60 - v33;
  v69 = a1;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 72);
  v35 = type metadata accessor for WorkoutDetail();
  v36 = a2 + *(int *)(v35 + 28);
  v37 = a2 + *(int *)(v35 + 32);
  v38 = type metadata accessor for WorkoutDetailArtwork();
  v34(v36, v37, v36 + *(int *)(v38 + 20));
  v39 = a5;
  v40 = v71;
  sub_23C34E43C();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v24, v39);
  v41 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v104[0] = v40;
  v104[1] = v41;
  v42 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v25, v104);
  sub_23C34E3B8();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v27, v25);
  sub_23C34E6DC();
  v86 = v39;
  v87 = v76;
  v88 = v77;
  v89 = v84;
  v90 = v61;
  v91 = v40;
  v92 = v74;
  v93 = v75;
  v94 = v85;
  v95 = v62;
  v96 = v78;
  v97 = v79;
  v103[0] = v42;
  v103[1] = MEMORY[0x24BDEEC40];
  v43 = MEMORY[0x24BDED308];
  v44 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v28, v103);
  v45 = (uint64_t)v60;
  sub_23C34E4A8();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v30, v28);
  v46 = MEMORY[0x24261C66C](MEMORY[0x24BDEDC10], v67);
  v102[0] = v44;
  v102[1] = v46;
  v47 = v70;
  v48 = MEMORY[0x24261C66C](v43, v70, v102);
  v49 = v66;
  sub_23C28958C(v45, v47, v66);
  v50 = v72;
  v79 = *(uint64_t (**)(_QWORD, _QWORD))(v72 + 8);
  v51 = v45;
  v52 = v79(v45, v47);
  v53 = (uint64_t)v81;
  (*(void (**)(uint64_t))(v69 + 56))(v52);
  v54 = v80;
  v55 = v84;
  sub_23C28958C(v53, v84, v80);
  v56 = v82;
  v57 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v57(v53, v55);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v51, v49, v47);
  v101[0] = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v53, v54, v55);
  v101[1] = v53;
  v100[0] = v47;
  v100[1] = v55;
  v98 = v48;
  v99 = v85;
  sub_23C328D8C(v101, 2uLL, (uint64_t)v100);
  v57(v54, v55);
  v58 = v79;
  v79(v49, v47);
  v57(v53, v55);
  return v58(v51, v47);
}

uint64_t sub_23C2A68F8@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v23 = a3;
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23C34DE30();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v22 - v18;
  a1(v17);
  sub_23C34E190();
  sub_23C34E4B4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  v24[0] = a7;
  v24[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v24);
  sub_23C28958C((uint64_t)v16, v12, (uint64_t)v19);
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  sub_23C287D30((uint64_t)v19, v12, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v12);
}

uint64_t sub_23C2A6A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v29 = a1;
  v30 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v5 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 32);
  v28 = v5;
  *(_QWORD *)&v47 = v27;
  *((_QWORD *)&v47 + 1) = v5;
  MEMORY[0x24261C60C](255, &v47, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v6 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v6);
  v7 = sub_23C34E64C();
  v26 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = v3[3];
  v14 = v3[5];
  v51 = v3[4];
  v52 = v14;
  v15 = v3[1];
  v47 = *v3;
  v48 = v15;
  v16 = v3[3];
  v18 = *v3;
  v17 = v3[1];
  v49 = v3[2];
  v50 = v16;
  v19 = v3[5];
  v44 = v51;
  v45 = v19;
  v40 = v18;
  v41 = v17;
  v53 = *((_QWORD *)v3 + 12);
  v46 = *((_QWORD *)v3 + 12);
  v42 = v49;
  v43 = v13;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v20 = v44;
  v44 = v51;
  v45 = v52;
  v46 = v53;
  v40 = v47;
  v41 = v48;
  v42 = v49;
  v43 = v50;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if (BYTE1(v42) < 4u && v20 == 0)
    v22 = 2;
  else
    v22 = 3;
  sub_23C34DFEC();
  v31 = *(_OWORD *)(a2 + 16);
  v32 = v27;
  v33 = *(_OWORD *)(a2 + 40);
  v34 = *(_QWORD *)(a2 + 56);
  v35 = v28;
  v36 = *(_QWORD *)(a2 + 72);
  v37 = &v47;
  v38 = v29;
  v39 = v22;
  sub_23C34E640();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v7);
  sub_23C28958C((uint64_t)v10, v7, (uint64_t)v12);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v10, v7);
  sub_23C287D30((uint64_t)v12, v7, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v7);
}

void sub_23C2A6D5C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _QWORD v43[9];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[6];
  uint64_t v83;

  v49 = a8;
  v46 = a5;
  v47 = a7;
  v45 = a4;
  v68 = a3;
  v69 = a9;
  v44 = a12;
  v15 = sub_23C34DA34();
  v66 = *(_QWORD *)(v15 - 8);
  v67 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v64 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23C34D7D0();
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23C34D86C();
  v57 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v56 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58CE8);
  v63 = *(_QWORD *)(v65 - 8);
  v20 = MEMORY[0x24BDAC7A8](v65);
  v61 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v62 = (char *)v43 - v22;
  v23 = sub_23C34E820();
  v52 = *(_QWORD *)(v23 - 8);
  v53 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v50 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23C34E7D8();
  MEMORY[0x24BDAC7A8](v25);
  v43[8] = (char *)v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23C34E7F0();
  MEMORY[0x24BDAC7A8](v27);
  v43[4] = (char *)v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FB8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v48 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v43[1] = (char *)v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[2] = a11;
  *(_QWORD *)&v82[0] = a6;
  *((_QWORD *)&v82[0] + 1) = a11;
  v43[3] = a6;
  v70 = MEMORY[0x24261C60C](0, v82, MEMORY[0x24BEC6710], 0);
  v73 = *(_QWORD *)(v70 - 8);
  v32 = MEMORY[0x24BDAC7A8](v70);
  v55 = (char *)v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v43[5] = (char *)v43 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v72 = (char *)v43 - v36;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58CE0);
  v37 = MEMORY[0x24BDAC7A8](v54);
  v71 = (char *)v43 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v51 = (char *)v43 - v39;
  v40 = *(_OWORD *)(a1 + 80);
  v82[4] = *(_OWORD *)(a1 + 64);
  v82[5] = v40;
  v83 = *(_QWORD *)(a1 + 96);
  v41 = *(_OWORD *)(a1 + 16);
  v82[0] = *(_OWORD *)a1;
  v82[1] = v41;
  v42 = *(_OWORD *)(a1 + 48);
  v82[2] = *(_OWORD *)(a1 + 32);
  v82[3] = v42;
  v43[6] = type metadata accessor for WorkoutDetail();
  v43[7] = a2;
  v74 = v45;
  v75 = v46;
  v76 = a6;
  v77 = v47;
  v78 = v49;
  v79 = a10;
  v80 = a11;
  v81 = v44;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2A714C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  __int128 v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  void (*v51)(uint64_t, uint64_t);

  *(_QWORD *)(v1 + 112) = a1;
  v9 = sub_23C2A760C(v4, v5, v6, a1, v7);
  v10 = *(_QWORD *)(v1 + 8);
  (*(void (**)(uint64_t))(v2 + 40))(v9);
  sub_23C34E7E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23C353A10;
  strcpy((char *)(inited + 32), "impressionType");
  *(_BYTE *)(inited + 47) = -18;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0x666C656873;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = 0x6973736572706D69;
  v13 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 88) = 0xEF7865646E496E6FLL;
  *(_QWORD *)(inited + 96) = 0;
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = 0x657079546469;
  *(_QWORD *)(inited + 168) = v12;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 144) = 0x64695F737469;
  *(_QWORD *)(inited + 152) = 0xE600000000000000;
  sub_23C2A798C(inited);
  sub_23C34E7CC();
  v14 = MEMORY[0x24BEE4AF8];
  sub_23C2BEFC8(MEMORY[0x24BEE4AF8]);
  sub_23C2BEFC8(v14);
  sub_23C34E7FC();
  v15 = sub_23C34E808();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 0, 1, v15);
  v16 = *(_QWORD *)(v1 + 120);
  sub_23C34E814();
  v17 = *(_QWORD *)(v1 + 40);
  v18 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 24);
  sub_23C34E364();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 136) + 8))(v16, *(_QWORD *)(v1 + 144));
  sub_23C285184(v3, &qword_256B58FB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 104) + 8))(v10, v19);
  *(_QWORD *)(v8 - 208) = v19;
  *(_QWORD *)(v8 - 200) = v18;
  *(_QWORD *)(v1 + 136) = swift_getOpaqueTypeConformance2();
  v20 = *(_QWORD *)(v1 + 280);
  sub_23C28958C(v17, v20, *(_QWORD *)(v1 + 296));
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 304) + 8);
  *(_QWORD *)(v1 + 144) = v21;
  v21(v17, v20);
  *(_QWORD *)(v8 - 112) = *(_QWORD *)(v2 + 96);
  v22 = *(_OWORD *)(v2 + 80);
  v23 = (_OWORD *)(v8 - 208);
  v23[4] = *(_OWORD *)(v2 + 64);
  v23[5] = v22;
  v24 = *(_OWORD *)(v2 + 16);
  *v23 = *(_OWORD *)v2;
  v23[1] = v24;
  v25 = *(_OWORD *)(v2 + 48);
  v23[2] = *(_OWORD *)(v2 + 32);
  v23[3] = v25;
  v27 = *(_QWORD *)(v1 + 168);
  v26 = *(_QWORD *)(v1 + 176);
  v28 = *(_QWORD *)(v1 + 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 16))(v27, *(_QWORD *)(v1 + 56) + *(int *)(*(_QWORD *)(v1 + 48) + 96), v28);
  sub_23C34D7C4();
  sub_23C27FEE4(&qword_256B59028, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2A8]);
  v29 = sub_23C34E8C8();
  v31 = v30;
  v32 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v1 + 416) = v32;
  *(_QWORD *)(v1 + 432) = *(_QWORD *)(v2 + 96);
  v33 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 336) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 352) = v33;
  v34 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v1 + 368) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v1 + 384) = v34;
  v35 = *(_QWORD **)(v1 + 112);
  sub_23C2A4E50();
  swift_getKeyPath();
  v36 = *(_QWORD *)(v1 + 232);
  sub_23C34E79C();
  swift_release();
  swift_release();
  v37 = *(_QWORD *)(v1 + 208);
  sub_23C2A7AD4(v27, v29, v31, v36, *(_QWORD *)(v1 + 264), v35, v37);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(v36, *(_QWORD *)(v1 + 256));
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
  v39 = *(_QWORD *)(v1 + 216);
  v38 = *(_QWORD *)(v1 + 224);
  v40 = v37;
  v41 = *(_QWORD *)(v1 + 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v39, v37, v41);
  v42 = *(_QWORD *)(v1 + 128);
  v43 = *(_QWORD *)(v1 + 288);
  sub_23C28950C(v42, v43, &qword_256B58CE0);
  *(_QWORD *)(v8 - 208) = v43;
  v44 = *(_QWORD *)(v1 + 296);
  v45 = *(_QWORD *)(v1 + 160);
  v46 = *(_QWORD *)(v1 + 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 304) + 16))(v45, v44, v46);
  *(_QWORD *)(v8 - 200) = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v40, v39, v41);
  *(_QWORD *)(v8 - 192) = v40;
  *(_QWORD *)(v1 + 336) = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 344) = v46;
  *(_QWORD *)(v1 + 352) = v41;
  v47 = v41;
  v48 = sub_23C2C06A4();
  v49 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 312) = v48;
  *(_QWORD *)(v1 + 320) = v49;
  *(_QWORD *)(v1 + 328) = sub_23C28943C(&qword_256B59050, &qword_256B58CE8, MEMORY[0x24BE34BF0]);
  sub_23C328D8C((uint64_t *)(v8 - 208), 3uLL, v1 + 336);
  v50 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v50(v39, v47);
  v51 = *(void (**)(uint64_t, uint64_t))(v1 + 144);
  v51(v44, v46);
  sub_23C285184(v42, &qword_256B58CE0);
  v50(v40, v47);
  v51(v45, v46);
  return sub_23C285184(*(_QWORD *)(v1 + 288), &qword_256B58CE0);
}

uint64_t sub_23C2A760C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v42 = a2;
  v41 = a1;
  v48 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59040);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59038);
  v12 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  v45 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59058);
  v46 = *(_QWORD *)(v15 - 8);
  v47 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_OWORD *)(v5 + 80);
  v55 = *(_OWORD *)(v5 + 64);
  v56 = v18;
  v57 = *(_QWORD *)(v5 + 96);
  v19 = *(_OWORD *)(v5 + 16);
  v51 = *(_OWORD *)v5;
  v52 = v19;
  v20 = *(_OWORD *)(v5 + 48);
  v53 = *(_OWORD *)(v5 + 32);
  v54 = v20;
  *(_QWORD *)v10 = sub_23C34DFEC();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v21 = (uint64_t)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B59060) + 44)];
  v22 = *(_QWORD *)(a4 + 16);
  v23 = *(_QWORD *)(a4 + 24);
  v24 = *(_QWORD *)(a4 + 40);
  v38 = *(_QWORD *)(a4 + 32);
  v39 = v24;
  v40 = *(_OWORD *)(a4 + 48);
  v43 = *(_OWORD *)(a4 + 64);
  sub_23C2A7D4C(v41, a3, &v51, v42, v22, v23, v38, v24, v21, v40, v43);
  __swift_instantiateConcreteTypeFromMangledName(qword_256B58D80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_23C353A20;
  *(_QWORD *)(v25 + 32) = 0x77656956746F6F52;
  *(_QWORD *)(v25 + 40) = 0xE800000000000000;
  v26 = sub_23C28943C(&qword_256B59048, &qword_256B59040, MEMORY[0x24BDF4700]);
  sub_23C34E37C();
  swift_bridgeObjectRelease();
  sub_23C285184((uint64_t)v10, &qword_256B59040);
  v49 = v8;
  v50 = v26;
  swift_getOpaqueTypeConformance2();
  v27 = v44;
  sub_23C34E370();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v27);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v22;
  *(_QWORD *)(v28 + 24) = v23;
  *(_QWORD *)(v28 + 32) = v38;
  *(_QWORD *)(v28 + 40) = v39;
  *(_OWORD *)(v28 + 48) = v40;
  *(_OWORD *)(v28 + 64) = v43;
  v29 = v56;
  *(_OWORD *)(v28 + 144) = v55;
  *(_OWORD *)(v28 + 160) = v29;
  *(_QWORD *)(v28 + 176) = v57;
  v30 = v52;
  *(_OWORD *)(v28 + 80) = v51;
  *(_OWORD *)(v28 + 96) = v30;
  v31 = v54;
  *(_OWORD *)(v28 + 112) = v53;
  *(_OWORD *)(v28 + 128) = v31;
  v33 = v46;
  v32 = v47;
  v34 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v48, v17, v47);
  v35 = (void (**)())(v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58CE0) + 36));
  *v35 = sub_23C2BD41C;
  v35[1] = (void (*)())v28;
  v35[2] = 0;
  v35[3] = 0;
  sub_23C2BD424((uint64_t)&v51);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v17, v32);
}

unint64_t sub_23C2A798C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59018);
  v2 = sub_23C34EB08();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23C28950C(v6, (uint64_t)&v15, &qword_256B59020);
    v7 = v15;
    v8 = v16;
    result = sub_23C2BF32C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23C2BF398);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23C2C0658(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23C2A7AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X8>)
{
  __int128 *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v46 = a2;
  v47 = a5;
  v43 = a4;
  v44 = a3;
  v45 = a7;
  v10 = sub_23C34DA34();
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23C34D86C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v7[5];
  v52 = v7[4];
  v53 = v16;
  v54 = *((_QWORD *)v7 + 12);
  v17 = v7[1];
  v48 = *v7;
  v49 = v17;
  v18 = v7[3];
  v50 = v7[2];
  v51 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = swift_allocObject();
  v38 = a6[2];
  v39 = a6[3];
  v21 = v39;
  *(_QWORD *)(v20 + 16) = v38;
  *(_QWORD *)(v20 + 24) = v21;
  v22 = a6[5];
  v37 = a6[4];
  *(_QWORD *)(v20 + 32) = v37;
  *(_QWORD *)(v20 + 40) = v22;
  v23 = a6[6];
  v24 = a6[7];
  *(_QWORD *)(v20 + 48) = v23;
  *(_QWORD *)(v20 + 56) = v24;
  v25 = a6[8];
  v26 = a6[9];
  *(_QWORD *)(v20 + 64) = v25;
  *(_QWORD *)(v20 + 72) = v26;
  v27 = v49;
  *(_OWORD *)(v20 + 80) = v48;
  *(_OWORD *)(v20 + 96) = v27;
  *(_QWORD *)(v20 + 176) = v54;
  v28 = v53;
  *(_OWORD *)(v20 + 144) = v52;
  *(_OWORD *)(v20 + 160) = v28;
  v29 = v51;
  *(_OWORD *)(v20 + 112) = v50;
  *(_OWORD *)(v20 + 128) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, v15, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v43, v42);
  v30 = swift_allocObject();
  v31 = v39;
  *(_QWORD *)(v30 + 16) = v38;
  *(_QWORD *)(v30 + 24) = v31;
  *(_QWORD *)(v30 + 32) = v37;
  *(_QWORD *)(v30 + 40) = v22;
  *(_QWORD *)(v30 + 48) = v23;
  *(_QWORD *)(v30 + 56) = v24;
  *(_QWORD *)(v30 + 64) = v25;
  *(_QWORD *)(v30 + 72) = v26;
  v32 = v53;
  *(_OWORD *)(v30 + 144) = v52;
  *(_OWORD *)(v30 + 160) = v32;
  *(_QWORD *)(v30 + 176) = v54;
  v33 = v49;
  *(_OWORD *)(v30 + 80) = v48;
  *(_OWORD *)(v30 + 96) = v33;
  v34 = v51;
  *(_OWORD *)(v30 + 112) = v50;
  *(_OWORD *)(v30 + 128) = v34;
  sub_23C2BD424((uint64_t)&v48);
  sub_23C2BD424((uint64_t)&v48);
  swift_bridgeObjectRetain();
  return sub_23C34DC5C();
}

uint64_t sub_23C2A7D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t);
  char *v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[6];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;

  v56 = a8;
  v58 = a7;
  v57 = a6;
  v55 = a5;
  v64 = a4;
  v61 = a3;
  v59 = a2;
  v68 = a9;
  v67 = sub_23C34E25C();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v60 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59068);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59070);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58F98);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59078);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59080);
  v22 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v54 - v23;
  v25 = *(_QWORD *)(a1 + 16);
  v65 = v26;
  if (!v25)
  {
    v54[3] = v16;
    v54[2] = v18;
    v30 = v55;
    v54[4] = v20;
    v54[5] = v13;
    v31 = v61;
    v32 = v56;
    if (*(_QWORD *)(v59 + 16) != 1)
    {
      *(_QWORD *)&v75 = v55;
      *((_QWORD *)&v75 + 1) = v57;
      *(_QWORD *)&v76 = v58;
      *((_QWORD *)&v76 + 1) = v56;
      v77 = a10;
      v78 = a11;
      type metadata accessor for WorkoutDetailView();
    }
    v54[1] = v14;
    v54[0] = v17;
    v33 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailTrainer() - 8) + 80);
    v59 += (v33 + 32) & ~v33;
    v34 = v31[5];
    v79 = v31[4];
    v80 = v34;
    v81 = *((_QWORD *)v31 + 12);
    v35 = v31[1];
    v75 = *v31;
    v76 = v35;
    v36 = v31[3];
    v77 = v31[2];
    v78 = v36;
    v69 = v30;
    v70 = v57;
    v71 = v58;
    v72 = v32;
    v73 = a10;
    v74 = a11;
    type metadata accessor for WorkoutDetailView();
  }
  v27 = v64;
  v28 = (uint64_t (**)(uint64_t))v61;
  v29 = v60;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))((char *)v54 - v23, 1, 1, v63);
  v37 = v28[11](v27);
  v39 = v38;
  v41 = v40 & 1;
  sub_23C34E298();
  v42 = v66;
  v43 = v67;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v29, *MEMORY[0x24BDF17C8], v67);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  v44 = sub_23C34E334();
  v46 = v45;
  LOBYTE(v42) = v47;
  v49 = v48;
  swift_release();
  sub_23C289340(v37, v39, v41);
  swift_bridgeObjectRelease();
  v50 = v65;
  sub_23C28950C((uint64_t)v24, v65, &qword_256B59080);
  v51 = v68;
  sub_23C28950C(v50, v68, &qword_256B59080);
  v52 = v51 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B59088) + 48);
  *(_QWORD *)v52 = v44;
  *(_QWORD *)(v52 + 8) = v46;
  *(_BYTE *)(v52 + 16) = v42 & 1;
  *(_QWORD *)(v52 + 24) = v49;
  *(_WORD *)(v52 + 32) = 256;
  sub_23C289550(v44, v46, v42 & 1);
  swift_bridgeObjectRetain();
  sub_23C285184((uint64_t)v24, &qword_256B59080);
  sub_23C289340(v44, v46, v42 & 1);
  swift_bridgeObjectRelease();
  return sub_23C285184(v50, &qword_256B59080);
}

uint64_t sub_23C2A8404(uint64_t a1, _OWORD *a2)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v19[16];
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v5 = type metadata accessor for WorkoutDetailTrainer();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = v2[5];
  v25 = v2[4];
  v26 = v8;
  v27 = *((_QWORD *)v2 + 12);
  v9 = v2[1];
  v21 = *v2;
  v22 = v9;
  v10 = v2[3];
  v23 = v2[2];
  v24 = v10;
  sub_23C282F90(a1, (uint64_t)&v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = swift_allocObject();
  v13 = a2[2];
  *(_OWORD *)(v12 + 16) = a2[1];
  *(_OWORD *)(v12 + 32) = v13;
  v14 = a2[4];
  *(_OWORD *)(v12 + 48) = a2[3];
  *(_OWORD *)(v12 + 64) = v14;
  v15 = v26;
  *(_OWORD *)(v12 + 144) = v25;
  *(_OWORD *)(v12 + 160) = v15;
  *(_QWORD *)(v12 + 176) = v27;
  v16 = v22;
  *(_OWORD *)(v12 + 80) = v21;
  *(_OWORD *)(v12 + 96) = v16;
  v17 = v24;
  *(_OWORD *)(v12 + 112) = v23;
  *(_OWORD *)(v12 + 128) = v17;
  sub_23C2851C0((uint64_t)&v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
  v20 = a1;
  sub_23C2BD424((uint64_t)&v21);
  return sub_23C34E5D4();
}

uint64_t sub_23C2A8554@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = sub_23C34DF5C();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59098);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B590A0);
  sub_23C28943C(&qword_256B590A8, &qword_256B590A0, MEMORY[0x24BEE12D8]);
  sub_23C27FEE4(&qword_256B590B0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailTrainer, (uint64_t)&protocol conformance descriptor for WorkoutDetailTrainer);
  return sub_23C34E688();
}

void sub_23C2A864C()
{
  uint64_t v0;

  v0 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2A8714()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23C2A4E50();
  v2 = (_QWORD *)(*(_QWORD *)(v1 - 264) + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 24));
  v3 = v2[1];
  *v0 = *v2;
  v0[1] = v3;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550((uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailAction);
}

uint64_t sub_23C2A8798@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a2;
  v3 = sub_23C34E25C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 28));
  v8 = v7[1];
  v31 = *v7;
  v32 = v8;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v9 = sub_23C34E358();
  v11 = v10;
  v13 = v12 & 1;
  sub_23C34E1E4();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF17C8], v3);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = sub_23C34E334();
  v16 = v15;
  v18 = v17;
  swift_release();
  sub_23C289340(v9, v11, v13);
  swift_bridgeObjectRelease();
  if (qword_256B574E8 != -1)
    swift_once();
  v19 = v18 & 1;
  v31 = qword_256B58CB8;
  swift_retain();
  v20 = sub_23C34E304();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_23C289340(v14, v16, v19);
  swift_release();
  result = swift_bridgeObjectRelease();
  v28 = v30;
  *v30 = v20;
  v28[1] = v22;
  *((_BYTE *)v28 + 16) = v24 & 1;
  v28[3] = v26;
  return result;
}

uint64_t sub_23C2A89BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[4];

  v4 = sub_23C34E25C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutDetailTrainer() + 28));
  v9 = v8[1];
  v23[2] = *v8;
  v23[3] = v9;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v10 = sub_23C34E358();
  v12 = v11;
  v14 = v13 & 1;
  sub_23C34E1E4();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF17C8], v4);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = sub_23C34E334();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_release();
  sub_23C289340(v10, v12, v14);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v21;
  return result;
}

void sub_23C2A8B44()
{
  uint64_t v0;

  v0 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2A8C14()
{
  uint64_t v0;

  sub_23C2A4E50();
  swift_storeEnumTagMultiPayload();
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550(v0, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailAction);
}

uint64_t sub_23C2A8C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __int128 *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[2];
  _QWORD v53[2];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v41 = a3;
  v39 = a2;
  v40 = a1;
  v42 = a5;
  v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  v38 = *(_QWORD *)(a4 + 16);
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v7 = sub_23C34E700();
  v8 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v7);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v9 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v10 = sub_23C34E700();
  MEMORY[0x24261C66C](v8, v10);
  v11 = sub_23C34E64C();
  v12 = sub_23C34E010();
  v13 = MEMORY[0x24261C66C](v8, v9);
  v14 = MEMORY[0x24BDF4700];
  v53[0] = v13;
  v53[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v11);
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v12, v53);
  v15 = sub_23C34E64C();
  v16 = MEMORY[0x24261C66C](v14, v15);
  *(_QWORD *)&v54 = v15;
  *((_QWORD *)&v54 + 1) = v16;
  MEMORY[0x24261C60C](255, &v54, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v18 = sub_23C34DE30();
  *(_QWORD *)&v54 = v15;
  *((_QWORD *)&v54 + 1) = v16;
  v52[0] = swift_getOpaqueTypeConformance2();
  v52[1] = sub_23C27FEE4(&qword_256B58D20, v17, MEMORY[0x24BDF1078]);
  v19 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v18, v52);
  *(_QWORD *)&v54 = v18;
  *((_QWORD *)&v54 + 1) = v19;
  v20 = MEMORY[0x24261C60C](255, &v54, MEMORY[0x24BDF2550], 0);
  v21 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v54 = v36;
  *((_QWORD *)&v54 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v55 = v20;
  *((_QWORD *)&v55 + 1) = v21;
  *(_QWORD *)&v56 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v22 = sub_23C34E700();
  MEMORY[0x24261C66C](v8, v22);
  v23 = sub_23C34E64C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v35 - v28;
  v30 = v5[5];
  v58 = v5[4];
  v59 = v30;
  v60 = *((_QWORD *)v5 + 12);
  v31 = v5[1];
  v54 = *v5;
  v55 = v31;
  v32 = v5[3];
  v56 = v5[2];
  v57 = v32;
  sub_23C34DFEC();
  v43 = v38;
  v44 = *(_OWORD *)(a4 + 24);
  v45 = *(_OWORD *)(a4 + 40);
  v46 = *(_OWORD *)(a4 + 56);
  v47 = *(_QWORD *)(a4 + 72);
  v48 = &v54;
  v49 = v39;
  v50 = v40;
  v51 = v41;
  sub_23C34E640();
  MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v23);
  sub_23C28958C((uint64_t)v27, v23, (uint64_t)v29);
  v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  v33(v27, v23);
  sub_23C287D30((uint64_t)v29, v23, v42);
  return ((uint64_t (*)(char *, uint64_t))v33)(v29, v23);
}

void sub_23C2A9124(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  _QWORD v72[2];

  v64 = a8;
  v53 = a7;
  v63 = a6;
  v60 = a5;
  v57 = a4;
  v65 = a3;
  v61 = a2;
  v42[1] = a1;
  v58 = a9;
  v42[0] = a10;
  v62 = a11;
  v59 = a12;
  v42[2] = a13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v55 = *(_QWORD *)(v14 - 8);
  v56 = *(_QWORD *)(v55 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  v49 = v16;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v17 = sub_23C34E700();
  v18 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v17);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v19 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v20 = sub_23C34E700();
  MEMORY[0x24261C66C](v18, v20);
  v21 = sub_23C34E64C();
  v22 = sub_23C34E010();
  v23 = MEMORY[0x24261C66C](v18, v19);
  v24 = MEMORY[0x24BDF4700];
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v21);
  v72[0] = v23;
  v72[1] = v25;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v22, v72);
  v26 = sub_23C34E64C();
  v27 = MEMORY[0x24261C66C](v24, v26);
  v66 = v26;
  v67 = v27;
  MEMORY[0x24261C60C](255, &v66, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v29 = sub_23C34DE30();
  v66 = v26;
  v67 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = sub_23C27FEE4(&qword_256B58D20, v28, MEMORY[0x24BDF1078]);
  v71[0] = OpaqueTypeConformance2;
  v71[1] = v31;
  v51 = v29;
  v50 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v29, v71);
  v66 = v29;
  v67 = v50;
  v32 = MEMORY[0x24261C60C](255, &v66, MEMORY[0x24BDF2550], 0);
  v47 = v32;
  v46 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v66 = v16;
  v67 = MEMORY[0x24BEE0D00];
  v68 = v32;
  v69 = v46;
  v70 = MEMORY[0x24BEE0D10];
  v48 = sub_23C34E6A0();
  v52 = *(_QWORD *)(v48 - 8);
  v33 = MEMORY[0x24BDAC7A8](v48);
  v44 = (char *)v42 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v45 = (char *)v42 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EB0);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v42 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58CF0);
  v39 = MEMORY[0x24BDAC7A8](v43);
  MEMORY[0x24BDAC7A8](v39);
  v42[4] = (char *)v42 - v40;
  *(_QWORD *)v38 = sub_23C34DF5C();
  *((_QWORD *)v38 + 1) = 0;
  v38[16] = 1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EB8);
  sub_23C2A99F8(a1, v61, v60, v63, v53, v64, a10, v62, (uint64_t)&v38[*(int *)(v41 + 44)], v59, a13);
}

uint64_t sub_23C2A968C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;

  v10 = sub_23C34E190();
  sub_23C34DD28();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_23C28950C(v2, v0, v4);
  v19 = v0 + *(int *)(v7 + 36);
  *(_QWORD *)(v9 - 424) = v0;
  *(_BYTE *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v19 + 32) = v18;
  *(_BYTE *)(v19 + 40) = 0;
  sub_23C285184(v2, v4);
  sub_23C2894C8(v0, v3, &qword_256B58CF0);
  v20 = swift_bridgeObjectRetain();
  v21 = sub_23C2BF478(v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 - 216) = v21;
  *(_QWORD *)(v9 - 440) = swift_getKeyPath();
  v22 = *(_QWORD *)(v9 - 328);
  sub_23C28950C(*(_QWORD *)(v9 - 272), v22, &qword_256B57E20);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 320) + 80);
  v24 = (v23 + 193) & ~v23;
  v25 = swift_allocObject();
  v26 = *(_QWORD *)(v9 - 256);
  *(_QWORD *)(v25 + 16) = v1;
  *(_QWORD *)(v25 + 24) = v26;
  *(_QWORD *)(v25 + 32) = v8;
  *(_QWORD *)(v25 + 40) = v6;
  v27 = *(_QWORD *)(v9 - 464);
  *(_QWORD *)(v25 + 48) = v27;
  *(_QWORD *)(v25 + 56) = v5;
  v28 = *(_QWORD *)(v9 - 288);
  v29 = *(_QWORD *)(v9 - 448);
  *(_QWORD *)(v25 + 64) = v28;
  *(_QWORD *)(v25 + 72) = v29;
  v30 = *(_QWORD *)(v9 - 456);
  v31 = *(_OWORD *)(v30 + 80);
  *(_OWORD *)(v25 + 144) = *(_OWORD *)(v30 + 64);
  *(_OWORD *)(v25 + 160) = v31;
  v32 = *(_QWORD *)(v30 + 96);
  v33 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)v30;
  *(_OWORD *)(v25 + 96) = v33;
  v34 = *(_OWORD *)(v30 + 48);
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(v30 + 32);
  *(_OWORD *)(v25 + 128) = v34;
  v35 = *(_QWORD *)(v9 - 240);
  *(_QWORD *)(v25 + 176) = v32;
  *(_QWORD *)(v25 + 184) = v35;
  *(_BYTE *)(v25 + 192) = *(_DWORD *)(v9 - 300);
  sub_23C2894C8(v22, v25 + v24, &qword_256B57E20);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = *(_QWORD *)(v9 - 280);
  v36[3] = v26;
  v37 = *(_QWORD *)(v9 - 248);
  v36[4] = v8;
  v36[5] = v37;
  v38 = *(_QWORD *)(v9 - 264);
  v36[6] = v27;
  v36[7] = v38;
  v36[8] = v28;
  v36[9] = v29;
  v36[10] = sub_23C2BF888;
  v36[11] = v25;
  swift_bridgeObjectRetain();
  sub_23C2BD424(v30);
  v39 = *(_QWORD *)(v9 - 360);
  *(_QWORD *)(v9 - 192) = *(_QWORD *)(v9 - 352);
  *(_QWORD *)(v9 - 184) = v39;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v40 = *(_QWORD *)(v9 - 408);
  sub_23C34E688();
  *(_QWORD *)(v9 - 200) = OpaqueTypeConformance2;
  v41 = *(_QWORD *)(v9 - 376);
  v42 = MEMORY[0x24261C66C](MEMORY[0x24BDF4A08], v41, v9 - 200);
  v43 = *(_QWORD *)(v9 - 400);
  sub_23C28958C(v40, v41, v43);
  v44 = *(_QWORD *)(v9 - 344);
  v45 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v45(v40, v41);
  v46 = *(_QWORD *)(v9 - 432);
  v47 = *(_QWORD *)(v9 - 424);
  sub_23C28950C(v46, v47, &qword_256B58CF0);
  *(_QWORD *)(v9 - 192) = v47;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v40, v43, v41);
  *(_QWORD *)(v9 - 184) = v40;
  *(_QWORD *)(v9 - 216) = *(_QWORD *)(v9 - 416);
  *(_QWORD *)(v9 - 208) = v41;
  *(_QWORD *)(v9 - 232) = sub_23C2BF9B0();
  *(_QWORD *)(v9 - 224) = v42;
  sub_23C328D8C((uint64_t *)(v9 - 192), 2uLL, v9 - 216);
  v45(v43, v41);
  sub_23C285184(v46, &qword_256B58CF0);
  v45(v40, v41);
  return sub_23C285184(v47, &qword_256B58CF0);
}

void sub_23C2A99F8(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjCClassFromMetadata;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  __int128 *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t KeyPath;
  uint64_t *v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _QWORD v79[7];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 *v104;
  id v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;

  v108 = a8;
  v114 = a6;
  v115 = a7;
  v112 = a4;
  v113 = a5;
  v111 = a3;
  v96 = a2;
  v103 = a9;
  v104 = a1;
  v110 = a11;
  v109 = a10;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58F98);
  v79[5] = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79[3] = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FA0);
  MEMORY[0x24BDAC7A8](v80);
  v79[6] = (char *)v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FA8);
  v101 = *(_QWORD *)(v13 - 8);
  v102 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v79[4] = (char *)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v15);
  v95 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23C34D950();
  v122 = *(_QWORD *)(v17 - 8);
  v123 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v79[1] = v19;
  v79[2] = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v98 = (char *)v79 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FB0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v100 = (char *)v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v99 = (char *)v79 - v24;
  v25 = sub_23C34E820();
  v93 = *(_QWORD *)(v25 - 8);
  v94 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v92 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23C34E7D8();
  MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23C34DA34();
  MEMORY[0x24BDAC7A8](v29);
  v107 = (char *)v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23C34E868();
  MEMORY[0x24BDAC7A8](v31);
  v88 = (char *)v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23C34E7F0();
  MEMORY[0x24BDAC7A8](v33);
  v87 = (char *)v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FB8);
  MEMORY[0x24BDAC7A8](v35);
  v90 = (char *)v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FC0);
  MEMORY[0x24BDAC7A8](v86);
  v85 = (_QWORD *)((char *)v79 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_23C34E5A4();
  v116 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v83 = (char *)v79 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23C34E25C();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v79 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23C34DF8C();
  MEMORY[0x24BDAC7A8](v43);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FC8);
  MEMORY[0x24BDAC7A8](v118);
  v117 = (char *)v79 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FD0);
  v120 = *(_QWORD *)(v45 - 8);
  v121 = v45;
  v46 = MEMORY[0x24BDAC7A8](v45);
  v97 = (char *)v79 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v89 = (char *)v79 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v119 = (char *)v79 - v50;
  sub_23C34DF80();
  sub_23C34DF74();
  sub_23C34E598();
  sub_23C34DF68();
  swift_release();
  sub_23C34DF74();
  sub_23C34DFA4();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v106 = ObjCClassFromMetadata;
  v105 = (id)objc_opt_self();
  v52 = objc_msgSend(v105, sel_bundleForClass_, ObjCClassFromMetadata);
  v53 = sub_23C34E340();
  v55 = v54;
  v57 = v56;
  sub_23C34E238();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v42, *MEMORY[0x24BDF17C8], v39);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
  __swift_instantiateConcreteTypeFromMangledName(qword_256B58D80);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_23C353A20;
  LOBYTE(ObjCClassFromMetadata) = v57 & 1;
  *(_QWORD *)(v58 + 32) = 1819308129;
  *(_QWORD *)(v58 + 40) = 0xE400000000000000;
  sub_23C34E280();
  swift_release();
  swift_bridgeObjectRelease();
  v59 = sub_23C34E334();
  v61 = v60;
  LOBYTE(v40) = v62;
  v82 = v63;
  swift_release();
  v64 = v40 & 1;
  v65 = v104;
  sub_23C289340(v53, v55, ObjCClassFromMetadata);
  swift_bridgeObjectRelease();
  v66 = v116;
  v68 = v83;
  v67 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v116 + 104))(v83, *MEMORY[0x24BDF40B0], v84);
  KeyPath = swift_getKeyPath();
  v70 = v85;
  v71 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v72 = v67;
  v71((char *)v85 + *(int *)(v86 + 28), v68, v67);
  v73 = (uint64_t)v70;
  *v70 = KeyPath;
  v74 = v117;
  sub_23C28950C(v73, (uint64_t)&v117[*(int *)(v118 + 36)], &qword_256B58FC0);
  *(_QWORD *)v74 = v59;
  *((_QWORD *)v74 + 1) = v61;
  v74[16] = v64;
  *((_QWORD *)v74 + 3) = v82;
  sub_23C289550(v59, v61, v64);
  swift_bridgeObjectRetain();
  sub_23C285184(v73, &qword_256B58FC0);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v68, v72);
  sub_23C289340(v59, v61, v64);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v132 = 0;
  *((_QWORD *)&v132 + 1) = 0xE000000000000000;
  sub_23C34EAA8();
  swift_bridgeObjectRelease();
  v75 = v65[5];
  v136 = v65[4];
  v137 = v75;
  v76 = *((_QWORD *)v65 + 12);
  v139 = 0x5F74756F6B726F77;
  v140 = 0xE800000000000000;
  v138 = v76;
  v77 = v65[1];
  v132 = *v65;
  v133 = v77;
  v78 = v65[3];
  v134 = v65[2];
  v135 = v78;
  v124 = v111;
  v125 = v112;
  v126 = v113;
  v127 = v114;
  v128 = v115;
  v129 = v108;
  v130 = v109;
  v131 = v110;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2AA288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, uint64_t, uint64_t);
  uint64_t v24;
  id v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34E8BC();
  swift_bridgeObjectRelease();
  sub_23C34E8BC();
  sub_23C34E7E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23C353A30;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_23C34E85C();
  v4 = objc_msgSend(*(id *)(v0 + 256), sel_bundleForClass_, *(_QWORD *)(v0 + 264));
  v5 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v1 + 144) = v5;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v2 + 96);
  v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 80) = v6;
  v7 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v1 + 112) = v7;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v8 = sub_23C34E8A4();
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 72) = v9;
  strcpy((char *)(inited + 80), "impressionType");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = 0x666C656873;
  *(_QWORD *)(inited + 104) = 0xE500000000000000;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = 0x6973736572706D69;
  v11 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(_QWORD *)(inited + 144) = 0;
  *(_QWORD *)(inited + 168) = v11;
  *(_QWORD *)(inited + 176) = 0x657079546469;
  *(_QWORD *)(inited + 216) = v9;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  *(_QWORD *)(inited + 192) = 0x64695F737469;
  *(_QWORD *)(inited + 200) = 0xE600000000000000;
  sub_23C2A798C(inited);
  sub_23C34E7CC();
  v12 = MEMORY[0x24BEE4AF8];
  sub_23C2BEFC8(MEMORY[0x24BEE4AF8]);
  sub_23C2BEFC8(v12);
  v13 = *(_QWORD *)(v0 + 136);
  sub_23C34E7FC();
  v14 = sub_23C34E808();
  v15 = v13;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  v16 = *(_QWORD *)(v0 + 152);
  sub_23C34E814();
  sub_23C2C051C(&qword_256B58FE0, &qword_256B58FC8, &qword_256B58FE8, &qword_256B58FC0);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 352);
  sub_23C34E364();
  v19 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(v16, *(_QWORD *)(v0 + 168));
  sub_23C285184(v15, &qword_256B58FB8);
  sub_23C285184(v18, &qword_256B58FC8);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 32))(*(_QWORD *)(v0 + 368), v17, *(_QWORD *)(v0 + 384));
  sub_23C28950C(*(_QWORD *)(v0 + 184), v19, &qword_256B57E20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 48))(v19, 1, *(_QWORD *)(v0 + 400)) == 1)
  {
    sub_23C285184(v19, &qword_256B57E20);
    v20 = 1;
    v21 = *(_QWORD *)(v0 + 208);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 392);
    v23 = *(void (**)(_QWORD, uint64_t, uint64_t))(v22 + 32);
    *(_QWORD *)(v0 + 360) = v23;
    v24 = *(_QWORD *)(v0 + 400);
    v23(*(_QWORD *)(v0 + 200), v19, v24);
    sub_23C34E85C();
    v25 = objc_msgSend(*(id *)(v0 + 256), sel_bundleForClass_, *(_QWORD *)(v0 + 264));
    v26 = *(_QWORD *)(v0 + 248);
    v27 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v0 + 768) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v0 + 784) = v27;
    *(_QWORD *)(v0 + 800) = *(_QWORD *)(v26 + 96);
    v28 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)(v0 + 704) = *(_OWORD *)v26;
    *(_OWORD *)(v0 + 720) = v28;
    v29 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v0 + 736) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v0 + 752) = v29;
    sub_23C2A4E50();
    swift_getKeyPath();
    sub_23C34E79C();
    swift_release();
    swift_release();
    *(_QWORD *)(v0 + 704) = sub_23C34E8A4();
    *(_QWORD *)(v0 + 712) = v30;
    v31 = *(_QWORD *)(v0 + 16);
    v32 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v31, v32, v24);
    v33 = (*(unsigned __int8 *)(v22 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v34 = swift_allocObject();
    v35 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v34 + 16) = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v34 + 24) = v35;
    v36 = *(_QWORD *)(v0 + 328);
    *(_QWORD *)(v34 + 32) = *(_QWORD *)(v0 + 320);
    *(_QWORD *)(v34 + 40) = v36;
    v37 = *(_QWORD *)(v0 + 280);
    *(_QWORD *)(v34 + 48) = *(_QWORD *)(v0 + 336);
    *(_QWORD *)(v34 + 56) = v37;
    v38 = *(_QWORD *)(v0 + 296);
    *(_QWORD *)(v34 + 64) = *(_QWORD *)(v0 + 288);
    *(_QWORD *)(v34 + 72) = v38;
    v39 = *(_OWORD *)(v26 + 80);
    *(_OWORD *)(v34 + 144) = *(_OWORD *)(v26 + 64);
    *(_OWORD *)(v34 + 160) = v39;
    *(_QWORD *)(v34 + 176) = *(_QWORD *)(v26 + 96);
    v40 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)(v34 + 80) = *(_OWORD *)v26;
    *(_OWORD *)(v34 + 96) = v40;
    v41 = *(_OWORD *)(v26 + 48);
    *(_OWORD *)(v34 + 112) = *(_OWORD *)(v26 + 32);
    *(_OWORD *)(v34 + 128) = v41;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 360))(v34 + v33, v31, v24);
    sub_23C2BD424(v26);
    sub_23C2C0058();
    v42 = *(_QWORD *)(v0 + 24);
    sub_23C34E5EC();
    if (qword_256B574E8 != -1)
      swift_once();
    v43 = qword_256B58CB8;
    v44 = *(_QWORD *)(v0 + 40);
    v45 = *(_QWORD *)(v0 + 48);
    v46 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v45, v42, v46);
    *(_QWORD *)(v45 + *(int *)(*(_QWORD *)(v0 + 56) + 36)) = v43;
    v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    swift_retain();
    v47(v42, v46);
    sub_23C2C05BC();
    v48 = *(_QWORD *)(v0 + 32);
    sub_23C34E478();
    sub_23C285184(v45, &qword_256B58FA0);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 8))(v32, *(_QWORD *)(v0 + 400));
    v21 = *(_QWORD *)(v0 + 208);
    sub_23C2894C8(v48, v21, &qword_256B58FA8);
    v20 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 56))(v21, v20, 1, *(_QWORD *)(v0 + 232));
  v49 = *(_QWORD *)(v0 + 368);
  v50 = *(_QWORD *)(v0 + 376);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 384);
  v51(v52, v49, v53);
  v54 = *(_QWORD *)(v0 + 216);
  sub_23C28950C(v21, v54, &qword_256B58FB0);
  v55 = *(_QWORD *)(v0 + 240);
  v51(v55, v52, v53);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58FF0);
  v57 = v55 + *(int *)(v56 + 48);
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 1;
  sub_23C28950C(v54, v55 + *(int *)(v56 + 64), &qword_256B58FB0);
  sub_23C285184(v21, &qword_256B58FB0);
  v58 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v58(v49, v53);
  sub_23C285184(v54, &qword_256B58FB0);
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v52, v53);
}

void sub_23C2AA9B0()
{
  uint64_t v0;

  v0 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2AAA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23C2A4E50();
  v2 = sub_23C34D950();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, *(_QWORD *)(v1 - 264), v2);
  swift_storeEnumTagMultiPayload();
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550(v0, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailAction);
}

uint64_t sub_23C2AAAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t OpaqueTypeConformance2;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  _QWORD v71[2];
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  _QWORD v119[2];
  uint64_t v120;
  uint64_t v121;
  _QWORD v122[2];

  v86 = a8;
  v97 = a6;
  v90 = a5;
  v89 = a4;
  v105 = a3;
  v87 = a2;
  v88 = a1;
  v98 = a9;
  v104 = a15;
  v103 = a14;
  v99 = a13;
  v102 = a12;
  v101 = a11;
  v100 = a10;
  v16 = type metadata accessor for WorkoutDetailMusicTrack();
  v95 = *(_QWORD *)(v16 - 8);
  v96 = *(_QWORD *)(v95 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v94 = (uint64_t)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v92 = *(_QWORD *)(v18 - 8);
  v93 = *(_QWORD *)(v92 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v91 = (uint64_t)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23C34E10C();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a7;
  v72 = a7;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v22 = sub_23C34E700();
  v23 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v22);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v24 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v25 = sub_23C34E700();
  MEMORY[0x24261C66C](v23, v25);
  v26 = sub_23C34E64C();
  v27 = sub_23C34E010();
  v28 = MEMORY[0x24261C66C](v23, v24);
  v29 = MEMORY[0x24BDF4700];
  v30 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v26);
  v122[0] = v28;
  v122[1] = v30;
  v76 = v27;
  v75 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v27, v122);
  v31 = sub_23C34E64C();
  v78 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v71 - v32;
  v34 = MEMORY[0x24261C66C](v29, v31);
  v120 = v31;
  v121 = v34;
  v35 = v34;
  v71[0] = v34;
  v36 = MEMORY[0x24261C60C](0, &v120, MEMORY[0x24BDF2F10], 0);
  v77 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)v71 - v37;
  sub_23C34E130();
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v40 = sub_23C34DE30();
  v82 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v73 = (char *)v71 - v41;
  v120 = v31;
  v121 = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v71[1] = OpaqueTypeConformance2;
  v43 = sub_23C27FEE4(&qword_256B58D20, v39, MEMORY[0x24BDF1078]);
  v119[0] = OpaqueTypeConformance2;
  v119[1] = v43;
  v80 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v40, v119);
  v120 = v40;
  v121 = v80;
  v44 = MEMORY[0x24261C60C](0, &v120, MEMORY[0x24BDF2550], 0);
  v81 = *(_QWORD *)(v44 - 8);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v74 = (char *)v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v79 = (uint64_t)v71 - v47;
  sub_23C34DFEC();
  v106 = v21;
  v48 = v86;
  v107 = v86;
  v108 = v100;
  v109 = v101;
  v110 = v102;
  v111 = v99;
  v112 = v103;
  v113 = v104;
  v114 = v105;
  v49 = v87;
  v115 = v87;
  v116 = v88;
  v117 = v89;
  v118 = v90;
  sub_23C34E640();
  v50 = v83;
  sub_23C34E100();
  sub_23C34E448();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v50, v85);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v33, v31);
  v51 = v73;
  sub_23C34E478();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v36);
  v52 = v91;
  sub_23C28950C(v97, v91, &qword_256B57E20);
  v53 = v94;
  sub_23C282F90(v49, v94, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
  v54 = (*(unsigned __int8 *)(v92 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  v55 = (v93 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = (*(unsigned __int8 *)(v95 + 80) + v55 + 104) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v72;
  v57[3] = v48;
  v58 = v101;
  v57[4] = v100;
  v57[5] = v58;
  v59 = v99;
  v57[6] = v102;
  v57[7] = v59;
  v60 = v104;
  v57[8] = v103;
  v57[9] = v60;
  sub_23C2894C8(v52, (uint64_t)v57 + v54, &qword_256B57E20);
  v61 = (char *)v57 + v55;
  v62 = v105;
  v63 = *(_OWORD *)(v105 + 80);
  *((_OWORD *)v61 + 4) = *(_OWORD *)(v105 + 64);
  *((_OWORD *)v61 + 5) = v63;
  *((_QWORD *)v61 + 12) = *(_QWORD *)(v62 + 96);
  v64 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v64;
  v65 = *(_OWORD *)(v62 + 48);
  *((_OWORD *)v61 + 2) = *(_OWORD *)(v62 + 32);
  *((_OWORD *)v61 + 3) = v65;
  sub_23C2851C0(v53, (uint64_t)v57 + v56, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
  sub_23C2BD424(v62);
  v66 = (uint64_t)v74;
  v67 = v80;
  sub_23C34E3F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v40);
  v120 = v40;
  v121 = v67;
  swift_getOpaqueTypeConformance2();
  v68 = v79;
  sub_23C28958C(v66, v44, v79);
  v69 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
  v69(v66, v44);
  sub_23C287D30(v68, v44, v98);
  return ((uint64_t (*)(uint64_t, uint64_t))v69)(v68, v44);
}

void sub_23C2AB3BC(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  int v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;

  v88 = a8;
  v86 = a7;
  v60 = a5;
  v81 = a4;
  v82 = a3;
  v80 = a2;
  v85 = a9;
  v93 = a14;
  v92 = a13;
  v91 = a12;
  v90 = a11;
  v89 = a10;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v16 = sub_23C34E700();
  v17 = MEMORY[0x24BDF5428];
  v70 = v16;
  v69 = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v16);
  v18 = sub_23C34E64C();
  v71 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v73 = (char *)&v48 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v22 = sub_23C34E700();
  v23 = MEMORY[0x24261C66C](v17, v22);
  v66 = v22;
  v65 = v23;
  v24 = sub_23C34E604();
  v25 = sub_23C34DE30();
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v27 = sub_23C34E700();
  v77 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v67 = (char *)&v48 - v28;
  v55 = sub_23C34E67C();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE8);
  MEMORY[0x24BDAC7A8](v50);
  v52 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EF0);
  MEMORY[0x24BDAC7A8](v49);
  v56 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EF8);
  MEMORY[0x24BDAC7A8](v51);
  v59 = (char *)&v48 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58F00);
  v75 = *(_QWORD *)(v64 - 8);
  v33 = MEMORY[0x24BDAC7A8](v64);
  v58 = (char *)&v48 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v57 = (char *)&v48 - v36;
  v76 = v26;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v68 = v24;
  v62 = *(_QWORD *)(v24 - 8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v61 = (char *)&v48 - v40;
  v72 = v25;
  v78 = *(_QWORD *)(v25 - 8);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v63 = (char *)&v48 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v87 = (char *)&v48 - v44;
  v79 = v27;
  v84 = sub_23C34E010();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v45 = a1[5];
  v106 = a1[4];
  v107 = v45;
  v108 = *((_QWORD *)a1 + 12);
  v46 = a1[1];
  v102 = *a1;
  v103 = v46;
  v47 = a1[3];
  v104 = a1[2];
  v105 = v47;
  v94 = a6;
  v95 = v86;
  v96 = v88;
  v97 = v89;
  v98 = v90;
  v99 = v91;
  v100 = v92;
  v101 = v93;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2ABA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v5 - 191) > 6u)
  {
    v42 = sub_23C34DFD4();
    MEMORY[0x24BDAC7A8](v42);
    v43 = *(_QWORD *)(v5 - 496);
    sub_23C34E640();
    MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v2);
    v44 = *(_QWORD *)(v5 - 504);
    sub_23C28958C(v43, v2, v44);
    v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 520) + 8);
    v45(v43, v2);
    sub_23C287D30(v44, v2, v43);
    v46 = *(_QWORD *)(v5 - 456);
    MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v46);
    sub_23C328C04(v43, v46, v2);
    v45(v43, v2);
    v45(v44, v2);
    v47 = *(_QWORD *)(v5 - 408);
    v48 = v46;
    v49 = *(_QWORD *)(v5 - 416);
    v50 = *(_QWORD *)(v5 - 424);
    v51 = v4;
  }
  else
  {
    *(_QWORD *)(v5 - 536) = v1;
    *(_QWORD *)(v5 - 520) = v0;
    *(_QWORD *)(v5 - 496) = v3;
    *(_QWORD *)(v5 - 504) = v4;
    *(_QWORD *)(v5 - 528) = v2;
    v6 = sub_23C34DF5C();
    MEMORY[0x24BDAC7A8](v6);
    v7 = *(_QWORD *)(v5 - 600);
    sub_23C34E5F8();
    sub_23C34E6E8();
    v8 = *(_QWORD *)(v5 - 544);
    v9 = MEMORY[0x24261C66C](MEMORY[0x24BDF4498], v8);
    v10 = 1;
    v11 = *(_QWORD *)(v5 - 584);
    sub_23C34E484();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 592) + 8))(v7, v8);
    v12 = MEMORY[0x24BDEBEE0];
    *(_QWORD *)(v5 - 320) = v9;
    *(_QWORD *)(v5 - 312) = v12;
    v13 = *(_QWORD *)(v5 - 512);
    v14 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v13, v5 - 320);
    v15 = *(_QWORD *)(v5 - 392);
    sub_23C28958C(v11, v13, v15);
    v16 = *(_QWORD *)(v5 - 464);
    v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v11, v13);
    v18 = *(_QWORD *)(v5 - 472);
    v19 = *(_QWORD *)(v5 - 552);
    v20 = *(_QWORD *)(v5 - 576);
    if (*(_QWORD *)(*(_QWORD *)(v5 - 440) + 16) - 1 != *(_QWORD *)(v5 - 432))
    {
      *(_QWORD *)(v5 - 344) = v17;
      v21 = *(_QWORD *)(v5 - 664);
      sub_23C34E670();
      v22 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
      v23 = MEMORY[0x24261BC10](v22);
      v24 = sub_23C34E178();
      v25 = *(_QWORD *)(v5 - 656);
      v26 = *(_QWORD *)(v5 - 672);
      v27 = *(_QWORD *)(v5 - 648);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v21, v27);
      v28 = v26 + *(int *)(*(_QWORD *)(v5 - 688) + 36);
      *(_QWORD *)v28 = v23;
      *(_BYTE *)(v28 + 8) = v24;
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v27);
      v29 = *(_QWORD *)(v5 - 640);
      sub_23C28950C(v26, v29, &qword_256B58EE8);
      *(_WORD *)(v29 + *(int *)(*(_QWORD *)(v5 - 696) + 36)) = 0;
      sub_23C285184(v26, &qword_256B58EE8);
      LOBYTE(v23) = sub_23C34E19C();
      sub_23C34DD28();
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v37 = v36;
      v38 = *(_QWORD *)(v5 - 616);
      sub_23C28950C(v29, v38, &qword_256B58EF0);
      v39 = v38 + *(int *)(*(_QWORD *)(v5 - 680) + 36);
      *(_BYTE *)v39 = v23;
      *(_QWORD *)(v39 + 8) = v31;
      *(_QWORD *)(v39 + 16) = v33;
      *(_QWORD *)(v39 + 24) = v35;
      *(_QWORD *)(v39 + 32) = v37;
      *(_BYTE *)(v39 + 40) = 0;
      sub_23C285184(v29, &qword_256B58EF0);
      v40 = sub_23C34DE3C();
      if ((*(_DWORD *)(v5 - 604) & 1) != 0)
        v41 = sub_23C34E1B4();
      else
        v41 = sub_23C34E1A8();
      v52 = v41;
      v53 = *(_QWORD *)(v5 - 624);
      sub_23C28950C(v38, v53, &qword_256B58EF8);
      v54 = v53 + *(int *)(v20 + 36);
      *(_QWORD *)v54 = v40;
      *(_BYTE *)(v54 + 8) = v52;
      sub_23C285184(v38, &qword_256B58EF8);
      v55 = *(_QWORD *)(v5 - 632);
      sub_23C2894C8(v53, v55, &qword_256B58F00);
      sub_23C2894C8(v55, *(_QWORD *)(v5 - 496), &qword_256B58F00);
      v10 = 0;
      v15 = *(_QWORD *)(v5 - 392);
      v16 = *(_QWORD *)(v5 - 464);
      v17 = *(void (**)(uint64_t, uint64_t))(v5 - 344);
      v18 = *(_QWORD *)(v5 - 472);
    }
    v56 = *(_QWORD *)(v5 - 496);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 488) + 56))(v56, v10, 1, v20);
    v57 = *(_QWORD *)(v5 - 536);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v57, v15, v13);
    *(_QWORD *)(v5 - 224) = v57;
    v58 = *(_QWORD *)(v5 - 520);
    sub_23C28950C(v56, v58, &qword_256B58D08);
    *(_QWORD *)(v5 - 216) = v58;
    *(_QWORD *)(v5 - 288) = v13;
    *(_QWORD *)(v5 - 280) = *(_QWORD *)(v5 - 480);
    *(_QWORD *)(v5 - 336) = v14;
    *(_QWORD *)(v5 - 328) = sub_23C2BFDC4(&qword_256B58F08, &qword_256B58D08, sub_23C2BFE28);
    sub_23C328D8C((uint64_t *)(v5 - 224), 2uLL, v5 - 288);
    sub_23C285184(v58, &qword_256B58D08);
    v17(v57, v13);
    v48 = *(_QWORD *)(v5 - 456);
    MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v48);
    v59 = v17;
    v2 = *(_QWORD *)(v5 - 528);
    MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v2);
    v60 = *(_QWORD *)(v5 - 504);
    sub_23C328CC8(v19, v48);
    v61 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v51 = v60;
    v61(v19, v48);
    sub_23C285184(v56, &qword_256B58D08);
    v59(*(_QWORD *)(v5 - 392), v13);
    v47 = *(_QWORD *)(v5 - 408);
    v49 = *(_QWORD *)(v5 - 416);
    v50 = *(_QWORD *)(v5 - 424);
  }
  v62 = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v48);
  v63 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v2);
  *(_QWORD *)(v5 - 304) = v62;
  *(_QWORD *)(v5 - 296) = v63;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v49, v5 - 304);
  sub_23C287D30(v51, v49, v47);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
}

uint64_t sub_23C2AC1CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, char *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _OWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  __int128 v72;
  _OWORD v73[13];
  uint64_t v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _OWORD v78[12];
  char v79;
  _BYTE v80[200];
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _OWORD v95[12];
  _OWORD v96[3];

  v60 = a4;
  v68 = a5;
  v63 = sub_23C34DE54();
  v8 = MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23C34DE30();
  v59 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v54 - v13;
  v15 = sub_23C34DE30();
  v66 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v55 = (char *)&v54 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v65 = sub_23C34DE30();
  v67 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x24BDAC7A8](v65);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v62 = (uint64_t)&v54 - v19;
  v20 = *(void (**)(char *, char *, char *))(a1 + 72);
  v21 = type metadata accessor for WorkoutDetailMusicTrack();
  v22 = *(int *)(v21 + 20);
  v23 = *(int *)(v21 + 24);
  v24 = a2;
  v64 = a2;
  v25 = (char *)a2 + v22;
  v26 = (char *)v24 + v23;
  v27 = type metadata accessor for WorkoutDetailArtwork();
  v20(v25, v26, &v25[*(int *)(v27 + 20)]);
  v28 = v60;
  sub_23C34E3B8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v11, a3);
  sub_23C34E6E8();
  v77[0] = v28;
  v77[1] = MEMORY[0x24BDEEC40];
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v77);
  v31 = v55;
  sub_23C34E484();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
  v32 = v61;
  v33 = &v61[*(int *)(v63 + 20)];
  v34 = *MEMORY[0x24BDEEB68];
  v35 = sub_23C34DFB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v33, v34, v35);
  __asm { FMOV            V0.2D, #2.0 }
  *v32 = _Q0;
  v76[0] = v30;
  v76[1] = MEMORY[0x24BDEBEE0];
  v41 = v58;
  v42 = MEMORY[0x24261C66C](v29, v58, v76);
  v43 = MEMORY[0x24BDED998];
  sub_23C27FEE4(&qword_256B58F58, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
  v44 = (uint64_t)v57;
  sub_23C34E4F0();
  sub_23C283550((uint64_t)v32, (uint64_t (*)(_QWORD))v43);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v41);
  v45 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v75[0] = v42;
  v75[1] = v45;
  v46 = v65;
  v47 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v65, v75);
  v48 = v62;
  v49 = v44;
  sub_23C28958C(v44, v46, v62);
  v50 = v67;
  v51 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  v51(v49, v46);
  v52 = sub_23C34DFEC();
  sub_23C2AC81C(v64, (uint64_t)v78);
  *(_OWORD *)&v80[151] = v78[9];
  *(_OWORD *)&v80[167] = v78[10];
  *(_OWORD *)&v80[183] = v78[11];
  *(_OWORD *)&v80[87] = v78[5];
  *(_OWORD *)&v80[103] = v78[6];
  *(_OWORD *)&v80[119] = v78[7];
  *(_OWORD *)&v80[135] = v78[8];
  *(_OWORD *)&v80[23] = v78[1];
  *(_OWORD *)&v80[39] = v78[2];
  *(_OWORD *)&v80[55] = v78[3];
  v81 = 0;
  v80[199] = v79;
  *(_OWORD *)&v80[71] = v78[4];
  *(_OWORD *)&v80[7] = v78[0];
  v92 = *(_OWORD *)&v80[160];
  v93 = *(_OWORD *)&v80[176];
  v94 = *(_QWORD *)&v80[192];
  v88 = *(_OWORD *)&v80[96];
  v89 = *(_OWORD *)&v80[112];
  v90 = *(_OWORD *)&v80[128];
  v91 = *(_OWORD *)&v80[144];
  v84 = *(_OWORD *)&v80[32];
  v85 = *(_OWORD *)&v80[48];
  v86 = *(_OWORD *)&v80[64];
  v87 = *(_OWORD *)&v80[80];
  v82 = *(_OWORD *)v80;
  v83 = *(_OWORD *)&v80[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v48, v46);
  *(_OWORD *)((char *)&v73[9] + 1) = v91;
  *(_OWORD *)((char *)&v73[10] + 1) = v92;
  *(_OWORD *)((char *)&v73[11] + 1) = v93;
  *(_OWORD *)((char *)&v73[5] + 1) = v87;
  *(_OWORD *)((char *)&v73[6] + 1) = v88;
  *(_OWORD *)((char *)&v73[7] + 1) = v89;
  *(_OWORD *)((char *)&v73[8] + 1) = v90;
  *(_OWORD *)((char *)&v73[1] + 1) = v83;
  *(_OWORD *)((char *)&v73[2] + 1) = v84;
  *(_OWORD *)((char *)&v73[3] + 1) = v85;
  *(_OWORD *)((char *)&v73[4] + 1) = v86;
  v72 = (unint64_t)v52;
  LOBYTE(v73[0]) = 0;
  *(_QWORD *)((char *)&v73[12] + 1) = v94;
  *(_OWORD *)((char *)v73 + 1) = v82;
  v74[0] = v49;
  v74[1] = (uint64_t)&v72;
  sub_23C2C00F4((uint64_t)v78);
  v71[0] = v46;
  v71[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D00);
  v69 = v47;
  v70 = sub_23C28943C(&qword_256B58F60, &qword_256B58D00, MEMORY[0x24BDF4700]);
  sub_23C328D8C(v74, 2uLL, (uint64_t)v71);
  sub_23C2C0254((uint64_t)v78);
  v51(v48, v46);
  v95[10] = v73[9];
  v95[11] = v73[10];
  v96[0] = v73[11];
  *(_OWORD *)((char *)v96 + 9) = *(_OWORD *)((char *)&v73[11] + 9);
  v95[6] = v73[5];
  v95[7] = v73[6];
  v95[8] = v73[7];
  v95[9] = v73[8];
  v95[2] = v73[1];
  v95[3] = v73[2];
  v95[4] = v73[3];
  v95[5] = v73[4];
  v95[0] = v72;
  v95[1] = v73[0];
  sub_23C2C0330((uint64_t)v95);
  return ((uint64_t (*)(uint64_t, uint64_t))v51)(v49, v46);
}

uint64_t sub_23C2AC81C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD v56[2];
  _DWORD v57[2];
  _DWORD v58[2];
  _DWORD v59[6];
  char v60;
  unsigned __int8 v61;
  char v62;
  _BYTE v63[7];
  _BYTE v64[7];
  _BYTE v65[7];
  _BYTE v66[7];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _BYTE v75[7];
  char v76;
  _BYTE v77[7];
  char v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  _BYTE v82[7];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;

  v4 = sub_23C34E25C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23C34DF5C();
  sub_23C2ACCD0((uint64_t)a1, (uint64_t)&v79);
  v43 = v79;
  v45 = v81;
  v46 = v83;
  v47 = v80;
  v48 = v84;
  v49 = v86;
  v50 = v85;
  v51 = v87;
  v53 = v88;
  v52 = v89;
  v54 = v91;
  v55 = v90;
  v62 = 0;
  v61 = v81;
  v60 = v86;
  v8 = *a1;
  v9 = a1[1];
  v79 = v8;
  v80 = v9;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v10 = sub_23C34E358();
  v12 = v11;
  v42 = v13;
  LOBYTE(v9) = v14 & 1;
  sub_23C34E298();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF17C8], v4);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = sub_23C34E334();
  v17 = v16;
  LOBYTE(v7) = v18;
  v39 = v19;
  swift_release();
  sub_23C289340(v10, v12, v9);
  swift_bridgeObjectRelease();
  LODWORD(v79) = sub_23C34E064();
  v20 = sub_23C34E304();
  v41 = v21;
  v42 = v20;
  v40 = v22;
  LOBYTE(v10) = v23 & 1;
  sub_23C289340(v15, v17, v7 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v25 = swift_getKeyPath();
  v59[0] = *(_DWORD *)v66;
  *(_DWORD *)((char *)v59 + 3) = *(_DWORD *)&v66[3];
  v58[0] = *(_DWORD *)v65;
  *(_DWORD *)((char *)v58 + 3) = *(_DWORD *)&v65[3];
  v57[0] = *(_DWORD *)v64;
  *(_DWORD *)((char *)v57 + 3) = *(_DWORD *)&v64[3];
  *(_DWORD *)((char *)v56 + 3) = *(_DWORD *)&v63[3];
  v56[0] = *(_DWORD *)v63;
  DWORD1(v68) = *(_DWORD *)&v66[3];
  *(_DWORD *)((char *)&v68 + 1) = *(_DWORD *)v66;
  HIDWORD(v69) = *(_DWORD *)&v65[3];
  *(_DWORD *)((char *)&v69 + 9) = *(_DWORD *)v65;
  HIDWORD(v71) = *(_DWORD *)&v64[3];
  v27 = v43;
  v26 = v44;
  *(_QWORD *)&v67 = v44;
  *((_QWORD *)&v67 + 1) = 0x4010000000000000;
  LOBYTE(v68) = 0;
  *((_QWORD *)&v68 + 1) = v43;
  *(_QWORD *)&v69 = v47;
  BYTE8(v69) = v45;
  *(_QWORD *)&v70 = v46;
  *((_QWORD *)&v70 + 1) = v48;
  *(_QWORD *)&v71 = v50;
  BYTE8(v71) = v49;
  *(_DWORD *)((char *)&v71 + 9) = *(_DWORD *)v64;
  *(_QWORD *)&v72 = v51;
  BYTE8(v72) = v53;
  HIDWORD(v72) = *(_DWORD *)&v63[3];
  *(_DWORD *)((char *)&v72 + 9) = *(_DWORD *)v63;
  v73 = v52;
  *(_QWORD *)&v74 = v55;
  *((_QWORD *)&v74 + 1) = v54;
  v28 = v67;
  v29 = v68;
  v30 = v70;
  *(_OWORD *)(a2 + 32) = v69;
  *(_OWORD *)(a2 + 48) = v30;
  *(_OWORD *)a2 = v28;
  *(_OWORD *)(a2 + 16) = v29;
  v31 = v71;
  v32 = v72;
  v33 = v74;
  *(_OWORD *)(a2 + 96) = v73;
  *(_OWORD *)(a2 + 112) = v33;
  *(_OWORD *)(a2 + 64) = v31;
  *(_OWORD *)(a2 + 80) = v32;
  v78 = v10;
  v76 = 0;
  v34 = *(_DWORD *)v77;
  *(_DWORD *)(a2 + 148) = *(_DWORD *)&v77[3];
  *(_DWORD *)(a2 + 145) = v34;
  v35 = *(_DWORD *)v75;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v75[3];
  *(_DWORD *)(a2 + 177) = v35;
  v37 = v41;
  v36 = v42;
  *(_QWORD *)(a2 + 128) = v42;
  *(_QWORD *)(a2 + 136) = v37;
  *(_BYTE *)(a2 + 144) = v10;
  *(_QWORD *)(a2 + 152) = v40;
  *(_QWORD *)(a2 + 160) = KeyPath;
  *(_QWORD *)(a2 + 168) = 1;
  *(_BYTE *)(a2 + 176) = 0;
  *(_QWORD *)(a2 + 184) = v25;
  *(_BYTE *)(a2 + 192) = 1;
  sub_23C2C040C((uint64_t)&v67);
  sub_23C289550(v36, v37, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C289340(v36, v37, v10);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v79 = v26;
  v80 = 0x4010000000000000;
  v81 = 0;
  *(_DWORD *)v82 = v59[0];
  *(_DWORD *)&v82[3] = *(_DWORD *)((char *)v59 + 3);
  v83 = v27;
  v84 = v47;
  LOBYTE(v85) = v45;
  *(_DWORD *)((char *)&v85 + 1) = v58[0];
  HIDWORD(v85) = *(_DWORD *)((char *)v58 + 3);
  v86 = v46;
  v87 = v48;
  v88 = v50;
  LOBYTE(v89) = v49;
  DWORD1(v89) = *(_DWORD *)((char *)v57 + 3);
  *(_DWORD *)((char *)&v89 + 1) = v57[0];
  *((_QWORD *)&v89 + 1) = v51;
  LOBYTE(v90) = v53;
  HIDWORD(v90) = *(_DWORD *)((char *)v56 + 3);
  *(_DWORD *)((char *)&v90 + 1) = v56[0];
  v91 = v52;
  v92 = v55;
  v93 = v54;
  return sub_23C2C0490((uint64_t)&v79);
}

uint64_t sub_23C2ACCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  unsigned int v50;
  void (*v51)(char *, _QWORD, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v54 = a1;
  v4 = sub_23C34D86C();
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C34E25C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for WorkoutDetailMusicTrack();
  v10 = (uint64_t *)(a1 + *(int *)(v53 + 36));
  v11 = v10[1];
  v61 = *v10;
  v62 = v11;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v12 = sub_23C34E358();
  v14 = v13;
  v16 = v15 & 1;
  sub_23C34E1E4();
  v17 = *(void (**)(_QWORD))(v7 + 104);
  v50 = *MEMORY[0x24BDF17C8];
  v51 = (void (*)(char *, _QWORD, uint64_t))v17;
  v17(v9);
  sub_23C34E28C();
  swift_release();
  v49 = *(void (**)(char *, uint64_t))(v7 + 8);
  v49(v9, v6);
  v18 = sub_23C34E334();
  v58 = v19;
  v59 = v18;
  v55 = v20;
  v60 = v21;
  swift_release();
  sub_23C289340(v12, v14, v16);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v56 = swift_getKeyPath();
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  if (*(_BYTE *)(v54 + *(int *)(v53 + 28)) == 1)
  {
    sub_23C29CD10();
    v26 = sub_23C34E34C();
    v28 = v27;
    v30 = v29 & 1;
    sub_23C34E298();
    v51(v9, v50, v6);
    sub_23C34E28C();
    swift_release();
    v49(v9, v6);
    v54 = sub_23C34E334();
    v32 = v31;
    v34 = v33;
    swift_release();
    v35 = v34 & 1;
    sub_23C289340(v26, v28, v30);
    swift_bridgeObjectRelease();
    LODWORD(v61) = sub_23C34E064();
    v36 = v54;
    v37 = sub_23C34E304();
    v23 = v38;
    v25 = v39;
    v24 = v40 & 1;
    sub_23C289340(v36, v32, v35);
    swift_bridgeObjectRelease();
    v22 = v37;
  }
  v41 = v55 & 1;
  v43 = v58;
  v42 = v59;
  *(_QWORD *)a2 = v59;
  *(_QWORD *)(a2 + 8) = v43;
  *(_BYTE *)(a2 + 16) = v41;
  v44 = v56;
  v45 = KeyPath;
  *(_QWORD *)(a2 + 24) = v60;
  *(_QWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v44;
  *(_BYTE *)(a2 + 64) = 1;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v23;
  *(_QWORD *)(a2 + 88) = v24;
  *(_QWORD *)(a2 + 96) = v25;
  v46 = v22;
  sub_23C289550(v42, v43, v41);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C2BFFF8(v46, v23, v24, v25);
  sub_23C2C0028(v46, v23, v24, v25);
  sub_23C289340(v42, v43, v41);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2AD094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, char *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, char *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _OWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v53;
  uint64_t (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  _QWORD v118[3];
  _QWORD v119[34];
  uint64_t v120[3];
  _BYTE v121[272];
  _QWORD v122[2];
  _QWORD v123[2];
  _QWORD v124[2];
  _OWORD v125[12];
  char v126;
  _BYTE v127[200];
  char v128;
  char v129;
  _BYTE v130[7];
  _BYTE v131[7];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;

  v103 = a4;
  v104 = a3;
  v109 = a6;
  v106 = a7;
  v10 = sub_23C34E67C();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v92 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE8);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58EF0);
  v105 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v89 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D18);
  v14 = MEMORY[0x24BDAC7A8](v107);
  v108 = (uint64_t)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v110 = (uint64_t)&v89 - v16;
  v101 = sub_23C34DE54();
  v17 = MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a5 - 8);
  v96 = a5;
  v97 = v19;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23C34DE30();
  v98 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v89 - v23;
  v25 = sub_23C34DE30();
  v102 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v95 = (char *)&v89 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v114 = sub_23C34DE30();
  v112 = *(_QWORD *)(v114 - 8);
  v27 = MEMORY[0x24BDAC7A8](v114);
  v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v113 = (uint64_t)&v89 - v30;
  v31 = *(void (**)(char *, char *, char *))(a1 + 72);
  v32 = type metadata accessor for WorkoutDetailMusicTrack();
  v33 = *(int *)(v32 + 20);
  v34 = *(int *)(v32 + 24);
  v35 = a2;
  v100 = a2;
  v36 = (char *)a2 + v33;
  v37 = (char *)v35 + v34;
  v38 = type metadata accessor for WorkoutDetailArtwork();
  v31(v36, v37, &v36[*(int *)(v38 + 20)]);
  v39 = v96;
  v40 = v106;
  sub_23C34E3B8();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v21, v39);
  sub_23C34E6E8();
  v124[0] = v40;
  v124[1] = MEMORY[0x24BDEEC40];
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v22, v124);
  v43 = v95;
  sub_23C34E484();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v24, v22);
  v44 = v99;
  v45 = &v99[*(int *)(v101 + 20)];
  v46 = *MEMORY[0x24BDEEB68];
  v47 = sub_23C34DFB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
  __asm { FMOV            V0.2D, #2.0 }
  *v44 = _Q0;
  v123[0] = v42;
  v123[1] = MEMORY[0x24BDEBEE0];
  v53 = MEMORY[0x24261C66C](v41, v25, v123);
  v54 = MEMORY[0x24BDED998];
  sub_23C27FEE4(&qword_256B58F58, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
  sub_23C34E4F0();
  sub_23C283550((uint64_t)v44, (uint64_t (*)(_QWORD))v54);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v43, v25);
  v55 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v122[0] = v53;
  v122[1] = v55;
  v56 = v114;
  v57 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v114, v122);
  sub_23C28958C((uint64_t)v29, v56, v113);
  v58 = *(void (**)(char *, uint64_t))(v112 + 8);
  v106 = v29;
  v58(v29, v56);
  v59 = sub_23C34DFEC();
  sub_23C2AD998(v100, (uint64_t)v125);
  *(_OWORD *)&v127[151] = v125[9];
  *(_OWORD *)&v127[167] = v125[10];
  *(_OWORD *)&v127[183] = v125[11];
  *(_OWORD *)&v127[87] = v125[5];
  *(_OWORD *)&v127[103] = v125[6];
  *(_OWORD *)&v127[119] = v125[7];
  *(_OWORD *)&v127[135] = v125[8];
  *(_OWORD *)&v127[23] = v125[1];
  *(_OWORD *)&v127[39] = v125[2];
  *(_OWORD *)&v127[55] = v125[3];
  v128 = 0;
  v127[199] = v126;
  *(_OWORD *)&v127[71] = v125[4];
  *(_OWORD *)&v127[7] = v125[0];
  v142 = *(_OWORD *)&v127[160];
  v143 = *(_OWORD *)&v127[176];
  v144 = *(_QWORD *)&v127[192];
  v138 = *(_OWORD *)&v127[96];
  v139 = *(_OWORD *)&v127[112];
  v141 = *(_OWORD *)&v127[144];
  v140 = *(_OWORD *)&v127[128];
  v134 = *(_OWORD *)&v127[32];
  v135 = *(_OWORD *)&v127[48];
  v137 = *(_OWORD *)&v127[80];
  v136 = *(_OWORD *)&v127[64];
  v133 = *(_OWORD *)&v127[16];
  v132 = *(_OWORD *)v127;
  v60 = sub_23C34E1C0();
  sub_23C34DD28();
  v61 = 1;
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v129 = 0;
  if (*(_QWORD *)(v103 + 16) - 1 != v104)
  {
    v70 = v92;
    sub_23C34E670();
    v71 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
    v103 = MEMORY[0x24261BC10](v71);
    v72 = sub_23C34E178();
    v73 = v58;
    v74 = v57;
    v75 = v93;
    v76 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    v104 = v59;
    v77 = (uint64_t)v91;
    v78 = v94;
    v76(v91, v70, v94);
    v79 = v77 + *(int *)(v90 + 36);
    *(_QWORD *)v79 = v103;
    *(_BYTE *)(v79 + 8) = v72;
    v80 = *(void (**)(char *, uint64_t))(v75 + 8);
    v57 = v74;
    v58 = v73;
    v80(v70, v78);
    v81 = v89;
    sub_23C28950C(v77, v89, &qword_256B58EE8);
    *(_WORD *)(v81 + *(int *)(v111 + 36)) = 0;
    v82 = v77;
    v59 = v104;
    sub_23C285184(v82, &qword_256B58EE8);
    sub_23C2894C8(v81, v110, &qword_256B58EF0);
    v61 = 0;
  }
  v83 = v110;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v110, v61, 1, v111);
  v84 = v113;
  v85 = (uint64_t)v106;
  v86 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v106, v113, v114);
  *(_OWORD *)((char *)&v119[20] + 1) = v141;
  *(_OWORD *)((char *)&v119[22] + 1) = v142;
  *(_OWORD *)((char *)&v119[24] + 1) = v143;
  *(_OWORD *)((char *)&v119[12] + 1) = v137;
  *(_OWORD *)((char *)&v119[14] + 1) = v138;
  *(_OWORD *)((char *)&v119[16] + 1) = v139;
  *(_OWORD *)((char *)&v119[18] + 1) = v140;
  *(_OWORD *)((char *)&v119[4] + 1) = v133;
  *(_OWORD *)((char *)&v119[6] + 1) = v134;
  *(_OWORD *)((char *)&v119[8] + 1) = v135;
  *(_OWORD *)((char *)&v119[10] + 1) = v136;
  v119[0] = v59;
  v119[1] = 0;
  LOBYTE(v119[2]) = 0;
  *(_QWORD *)((char *)&v119[26] + 1) = v144;
  *(_OWORD *)((char *)&v119[2] + 1) = v132;
  *(_DWORD *)((char *)&v119[27] + 1) = *(_DWORD *)v131;
  HIDWORD(v119[27]) = *(_DWORD *)&v131[3];
  LOBYTE(v119[28]) = v60;
  *(_DWORD *)((char *)&v119[28] + 1) = *(_DWORD *)v130;
  HIDWORD(v119[28]) = *(_DWORD *)&v130[3];
  v119[29] = v63;
  v119[30] = v65;
  v119[31] = v67;
  v119[32] = v69;
  LOBYTE(v119[33]) = v129;
  v120[0] = v85;
  v120[1] = (uint64_t)v119;
  v87 = v108;
  sub_23C28950C(v83, v108, &qword_256B58D18);
  v120[2] = v87;
  sub_23C2C00F4((uint64_t)v125);
  v118[0] = v86;
  v118[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D10);
  v118[2] = v107;
  v115 = v57;
  v116 = sub_23C2C01D0();
  v117 = sub_23C2BFDC4(&qword_256B58F88, &qword_256B58D18, (uint64_t (*)(void))sub_23C2BFED8);
  sub_23C328D8C(v120, 3uLL, (uint64_t)v118);
  sub_23C285184(v83, &qword_256B58D18);
  sub_23C2C0254((uint64_t)v125);
  v58((char *)v84, v86);
  sub_23C285184(v87, &qword_256B58D18);
  memcpy(v121, v119, 0x109uLL);
  sub_23C2C0330((uint64_t)v121);
  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v85, v86);
}

uint64_t sub_23C2AD998@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  __int128 v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD v58[2];
  int v59;
  char v60;
  _DWORD v61[2];
  _DWORD v62[6];
  char v63;
  unsigned __int8 v64;
  char v65;
  _BYTE v66[7];
  int v67;
  char v68;
  _BYTE v69[7];
  _BYTE v70[7];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _BYTE v79[7];
  char v80;
  _BYTE v81[7];
  char v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  _BYTE v86[7];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;

  v4 = sub_23C34E25C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23C34DF5C();
  sub_23C2ADE84((uint64_t)a1, (uint64_t)&v83);
  v43 = v83;
  v45 = v85;
  v46 = v87;
  v47 = v84;
  v48 = v88;
  v50 = v89;
  v51 = BYTE2(v90);
  v52 = BYTE1(v90);
  v55 = v92;
  v53 = v91;
  v54 = v93;
  v56 = v95;
  v57 = v94;
  v65 = 0;
  v64 = v85;
  v63 = v90;
  v49 = v90;
  v8 = *a1;
  v9 = a1[1];
  v83 = v8;
  v84 = v9;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v10 = sub_23C34E358();
  v12 = v11;
  v42 = v13;
  LOBYTE(v9) = v14 & 1;
  sub_23C34E298();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDF17C8], v4);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = sub_23C34E334();
  v17 = v16;
  LOBYTE(v7) = v18;
  v39[1] = v19;
  swift_release();
  sub_23C289340(v10, v12, v9);
  swift_bridgeObjectRelease();
  LODWORD(v83) = sub_23C34E064();
  v20 = sub_23C34E304();
  v41 = v21;
  v42 = v20;
  v40 = v22;
  LOBYTE(v10) = v23 & 1;
  sub_23C289340(v15, v17, v7 & 1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v25 = swift_getKeyPath();
  v62[0] = *(_DWORD *)v70;
  *(_DWORD *)((char *)v62 + 3) = *(_DWORD *)&v70[3];
  v61[0] = *(_DWORD *)v69;
  *(_DWORD *)((char *)v61 + 3) = *(_DWORD *)&v69[3];
  v59 = v67;
  v60 = v68;
  *(_DWORD *)((char *)v58 + 3) = *(_DWORD *)&v66[3];
  v58[0] = *(_DWORD *)v66;
  DWORD1(v72) = *(_DWORD *)&v70[3];
  *(_DWORD *)((char *)&v72 + 1) = *(_DWORD *)v70;
  HIDWORD(v73) = *(_DWORD *)&v69[3];
  *(_DWORD *)((char *)&v73 + 9) = *(_DWORD *)v69;
  HIBYTE(v75) = v68;
  v27 = v43;
  v26 = v44;
  *(_QWORD *)&v71 = v44;
  *((_QWORD *)&v71 + 1) = 0x4010000000000000;
  LOBYTE(v72) = 0;
  *((_QWORD *)&v72 + 1) = v43;
  *(_QWORD *)&v73 = v47;
  BYTE8(v73) = v45;
  *(_QWORD *)&v74 = v46;
  *((_QWORD *)&v74 + 1) = v48;
  *(_QWORD *)&v75 = v50;
  BYTE8(v75) = v49;
  BYTE9(v75) = v52;
  BYTE10(v75) = v51;
  *(_DWORD *)((char *)&v75 + 11) = v67;
  *(_QWORD *)&v76 = v53;
  BYTE8(v76) = v55;
  HIDWORD(v76) = *(_DWORD *)&v66[3];
  *(_DWORD *)((char *)&v76 + 9) = *(_DWORD *)v66;
  v77 = v54;
  *(_QWORD *)&v78 = v57;
  *((_QWORD *)&v78 + 1) = v56;
  v28 = v71;
  v29 = v72;
  v30 = v74;
  *(_OWORD *)(a2 + 32) = v73;
  *(_OWORD *)(a2 + 48) = v30;
  *(_OWORD *)a2 = v28;
  *(_OWORD *)(a2 + 16) = v29;
  v31 = v75;
  v32 = v76;
  v33 = v78;
  *(_OWORD *)(a2 + 96) = v77;
  *(_OWORD *)(a2 + 112) = v33;
  *(_OWORD *)(a2 + 64) = v31;
  *(_OWORD *)(a2 + 80) = v32;
  v82 = v10;
  v80 = 0;
  v34 = *(_DWORD *)v81;
  *(_DWORD *)(a2 + 148) = *(_DWORD *)&v81[3];
  *(_DWORD *)(a2 + 145) = v34;
  v35 = *(_DWORD *)v79;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v79[3];
  *(_DWORD *)(a2 + 177) = v35;
  v37 = v41;
  v36 = v42;
  *(_QWORD *)(a2 + 128) = v42;
  *(_QWORD *)(a2 + 136) = v37;
  *(_BYTE *)(a2 + 144) = v10;
  *(_QWORD *)(a2 + 152) = v40;
  *(_QWORD *)(a2 + 160) = KeyPath;
  *(_QWORD *)(a2 + 168) = 3;
  *(_BYTE *)(a2 + 176) = 0;
  *(_QWORD *)(a2 + 184) = v25;
  *(_BYTE *)(a2 + 192) = 1;
  sub_23C2C040C((uint64_t)&v71);
  sub_23C289550(v36, v37, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C289340(v36, v37, v10);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v83 = v26;
  v84 = 0x4010000000000000;
  v85 = 0;
  *(_DWORD *)v86 = v62[0];
  *(_DWORD *)&v86[3] = *(_DWORD *)((char *)v62 + 3);
  v87 = v27;
  v88 = v47;
  LOBYTE(v89) = v45;
  *(_DWORD *)((char *)&v89 + 1) = v61[0];
  HIDWORD(v89) = *(_DWORD *)((char *)v61 + 3);
  v90 = v46;
  v91 = v48;
  v92 = v50;
  LOBYTE(v93) = v49;
  BYTE1(v93) = v52;
  BYTE2(v93) = v51;
  BYTE7(v93) = v60;
  *(_DWORD *)((char *)&v93 + 3) = v59;
  *((_QWORD *)&v93 + 1) = v53;
  LOBYTE(v94) = v55;
  HIDWORD(v94) = *(_DWORD *)((char *)v58 + 3);
  *(_DWORD *)((char *)&v94 + 1) = v58[0];
  v95 = v54;
  v96 = v57;
  v97 = v56;
  return sub_23C2C0490((uint64_t)&v83);
}

uint64_t sub_23C2ADE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  unsigned int v50;
  void (*v51)(char *, _QWORD, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v54 = a1;
  v4 = sub_23C34D86C();
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C34E25C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for WorkoutDetailMusicTrack();
  v10 = (uint64_t *)(a1 + *(int *)(v53 + 36));
  v11 = v10[1];
  v61 = *v10;
  v62 = v11;
  sub_23C2C0058();
  swift_bridgeObjectRetain();
  v12 = sub_23C34E358();
  v14 = v13;
  v16 = v15 & 1;
  sub_23C34E1E4();
  v17 = *(void (**)(_QWORD))(v7 + 104);
  v50 = *MEMORY[0x24BDF17C8];
  v51 = (void (*)(char *, _QWORD, uint64_t))v17;
  v17(v9);
  sub_23C34E28C();
  swift_release();
  v49 = *(void (**)(char *, uint64_t))(v7 + 8);
  v49(v9, v6);
  v18 = sub_23C34E334();
  v58 = v19;
  v59 = v18;
  v55 = v20;
  v60 = v21;
  swift_release();
  sub_23C289340(v12, v14, v16);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v56 = swift_getKeyPath();
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  if (*(_BYTE *)(v54 + *(int *)(v53 + 28)) == 1)
  {
    sub_23C29CD10();
    v26 = sub_23C34E34C();
    v28 = v27;
    v30 = v29 & 1;
    sub_23C34E298();
    v51(v9, v50, v6);
    sub_23C34E28C();
    swift_release();
    v49(v9, v6);
    v54 = sub_23C34E334();
    v32 = v31;
    v34 = v33;
    swift_release();
    v35 = v34 & 1;
    sub_23C289340(v26, v28, v30);
    swift_bridgeObjectRelease();
    LODWORD(v61) = sub_23C34E064();
    v36 = v54;
    v37 = sub_23C34E304();
    v23 = v38;
    v25 = v39;
    v24 = v40 & 1;
    sub_23C289340(v36, v32, v35);
    swift_bridgeObjectRelease();
    v22 = v37;
  }
  v41 = v55 & 1;
  v43 = v58;
  v42 = v59;
  *(_QWORD *)a2 = v59;
  *(_QWORD *)(a2 + 8) = v43;
  *(_BYTE *)(a2 + 16) = v41;
  v44 = v56;
  v45 = KeyPath;
  *(_QWORD *)(a2 + 24) = v60;
  *(_QWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_WORD *)(a2 + 49) = 256;
  *(_QWORD *)(a2 + 56) = v44;
  *(_BYTE *)(a2 + 64) = 1;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v23;
  *(_QWORD *)(a2 + 88) = v24;
  *(_QWORD *)(a2 + 96) = v25;
  v46 = v22;
  sub_23C289550(v42, v43, v41);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C2BFFF8(v46, v23, v24, v25);
  sub_23C2C0028(v46, v23, v24, v25);
  sub_23C289340(v42, v43, v41);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2AE254(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v31 = a8;
  v30 = a7;
  v29 = a6;
  v28 = a5;
  v27 = a4;
  v14 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23C34D950();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C28950C(a1, (uint64_t)v17, &qword_256B57E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    v26 = a3;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    v23 = a2[5];
    v44 = a2[4];
    v45 = v23;
    v46 = *((_QWORD *)a2 + 12);
    v24 = a2[1];
    v40 = *a2;
    v41 = v24;
    v25 = a2[3];
    v42 = a2[2];
    v43 = v25;
    v32 = v27;
    v33 = v28;
    v34 = v29;
    v35 = v30;
    v36 = v31;
    v37 = a9;
    v38 = a10;
    v39 = a11;
    type metadata accessor for WorkoutDetailView();
  }
  return sub_23C285184((uint64_t)v17, &qword_256B57E20);
}

uint64_t sub_23C2AE4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[184];
  __int128 v29[6];
  uint64_t v30;
  _BYTE v31[200];

  v22 = a3;
  v24 = a2;
  v26 = a4;
  v6 = sub_23C34D854();
  v25 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  v12 = sub_23C34D7D0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_OWORD *)(v4 + 32);
  v29[3] = *(_OWORD *)(v4 + 48);
  v17 = *(_OWORD *)(v4 + 80);
  v29[4] = *(_OWORD *)(v4 + 64);
  v29[5] = v17;
  v30 = *(_QWORD *)(v4 + 96);
  v18 = *(_OWORD *)(v4 + 16);
  v29[0] = *(_OWORD *)v4;
  v29[1] = v18;
  v29[2] = v16;
  v23 = a1;
  sub_23C34D7C4();
  sub_23C27FEE4(&qword_256B58EA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  sub_23C34E9C4();
  sub_23C34E9E8();
  sub_23C27FEE4(&qword_256B58EA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v19 = sub_23C34E850();
  v20 = *(void (**)(char *, uint64_t))(v25 + 8);
  v20(v9, v6);
  v20(v11, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((v19 & 1) == 0)
  {
    sub_23C34DFEC();
    sub_23C2AE804(v29, v23, v24, *(_QWORD *)(v22 + 16), *(_QWORD *)(v22 + 24), *(_QWORD *)(v22 + 32), *(_QWORD *)(v22 + 40), *(_QWORD *)(v22 + 48), (uint64_t)&v27, *(_OWORD *)(v22 + 56), *(_QWORD *)(v22 + 72));
  }
  sub_23C2BEF64((uint64_t)v28);
  sub_23C2894C8((uint64_t)v28, (uint64_t)v31, &qword_256B58E38);
  return sub_23C2894C8((uint64_t)v31, v26, &qword_256B58E38);
}

void sub_23C2AE804(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v28[9];
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v38 = a7;
  v39 = a8;
  v28[5] = a3;
  v36 = a2;
  v28[7] = a9;
  v37 = a10;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v15);
  v28[3] = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23C34D86C();
  v31 = *(_QWORD *)(v17 - 8);
  v32 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v34 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23C34E25C();
  v40 = *(_QWORD *)(v19 - 8);
  v41 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_23C34DA34();
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_23C34E868();
  MEMORY[0x24BDAC7A8](v21);
  v33 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34E85C();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v30 = ObjCClassFromMetadata;
  v29 = (id)objc_opt_self();
  v24 = objc_msgSend(v29, sel_bundleForClass_, ObjCClassFromMetadata);
  v35 = a1;
  v25 = a1[5];
  v53 = a1[4];
  v54 = v25;
  v55 = *((_QWORD *)a1 + 12);
  v26 = a1[1];
  v49 = *a1;
  v50 = v26;
  v27 = a1[3];
  v51 = a1[2];
  v52 = v27;
  v42 = a4;
  v43 = a5;
  v44 = a6;
  v45 = v38;
  v46 = v39;
  v47 = v37;
  v48 = a11;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2AEA24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD);
  char v105;
  char v106;
  int v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  *(_QWORD *)(v1 + 64) = a1;
  sub_23C2A4E50();
  swift_getKeyPath();
  *(_QWORD *)(v1 + 112) = v2;
  sub_23C34E79C();
  swift_release();
  swift_release();
  v5 = sub_23C34E310();
  v7 = v6;
  v9 = v8 & 1;
  sub_23C34E238();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  *(_DWORD *)(v1 + 208) = *MEMORY[0x24BDF17C8];
  v10 = *(_QWORD *)(v1 + 240);
  v11 = *(void (**)(uint64_t))(v10 + 104);
  *(_QWORD *)(v1 + 224) = v11;
  v12 = v3;
  v13 = v3;
  v14 = *(_QWORD *)(v1 + 248);
  v11(v13);
  sub_23C34E28C();
  swift_release();
  v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(_QWORD *)(v1 + 200) = v15;
  v16 = v12;
  v15(v12, v14);
  v17 = sub_23C34E334();
  *(_QWORD *)(v1 + 152) = v18;
  *(_QWORD *)(v1 + 160) = v17;
  *(_DWORD *)(v1 + 52) = v19;
  *(_QWORD *)(v1 + 168) = v20;
  swift_release();
  sub_23C289340(v5, v7, v9);
  swift_bridgeObjectRelease();
  sub_23C34E85C();
  v21 = objc_msgSend(*(id *)(v1 + 72), sel_bundleForClass_, *(_QWORD *)(v1 + 80));
  v22 = *(_QWORD *)(v1 + 176);
  v23 = *(_OWORD *)(v22 + 80);
  *(_OWORD *)(v4 - 128) = *(_OWORD *)(v22 + 64);
  *(_OWORD *)(v4 - 112) = v23;
  *(_QWORD *)(v4 - 96) = *(_QWORD *)(v22 + 96);
  v24 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)(v4 - 192) = *(_OWORD *)v22;
  *(_OWORD *)(v4 - 176) = v24;
  v25 = *(_OWORD *)(v22 + 48);
  *(_OWORD *)(v4 - 160) = *(_OWORD *)(v22 + 32);
  *(_OWORD *)(v4 - 144) = v25;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v26 = sub_23C34E310();
  v28 = v27;
  LOBYTE(v7) = v29 & 1;
  sub_23C34E298();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 224))(v16, *(unsigned int *)(v1 + 208), v14);
  *(_QWORD *)(v1 + 120) = v16;
  sub_23C34E28C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 200))(v16, v14);
  v30 = sub_23C34E334();
  v32 = v31;
  LOBYTE(v22) = v33;
  swift_release();
  sub_23C289340(v26, v28, v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 192) = sub_23C34E544();
  *(_QWORD *)(v1 + 232) = sub_23C34E304();
  *(_QWORD *)(v1 + 240) = v34;
  *(_QWORD *)(v1 + 144) = v35;
  *(_DWORD *)(v1 + 36) = v36;
  sub_23C289340(v30, v32, v22 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v1 + 176);
  v38 = *(uint64_t (**)(uint64_t))(v37 + 88);
  v39 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)v1 = *(_QWORD *)(v37 + 96);
  *(_QWORD *)(v1 + 8) = v38;
  v40 = v38(v39);
  v42 = v41;
  v44 = v43 & 1;
  sub_23C34E274();
  v45 = *(_QWORD *)(v1 + 120);
  v46 = *(_QWORD *)(v1 + 248);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 224))(v45, *(unsigned int *)(v1 + 208), v46);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 200))(v45, v46);
  v47 = sub_23C34E334();
  v49 = v48;
  LOBYTE(v46) = v50;
  swift_release();
  sub_23C289340(v40, v42, v44);
  v51 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v4 - 192) = sub_23C34E064();
  v52 = sub_23C34E304();
  *(_QWORD *)(v1 + 184) = v53;
  *(_QWORD *)(v1 + 192) = v52;
  *(_DWORD *)(v1 + 20) = v54;
  *(_QWORD *)(v1 + 136) = v55;
  sub_23C289340(v47, v49, v46 & 1);
  swift_bridgeObjectRelease();
  sub_23C28950C(*(_QWORD *)(v1 + 40), v51, &qword_256B58910);
  v56 = *(_QWORD *)(v1 + 88);
  v57 = *(_QWORD *)(v1 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v56 + 48))(v51, 1) == 1)
  {
    sub_23C285184(v51, &qword_256B58910);
    v58 = 0;
    v59 = 0;
    *(_QWORD *)(v1 + 176) = 0;
    v60 = 0;
    *(_QWORD *)(v1 + 208) = 0;
    v61 = 0;
    *(_QWORD *)(v1 + 248) = 0;
    v62 = 0;
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v56 + 32))(*(_QWORD *)(v1 + 128), v51, v57);
    sub_23C34E85C();
    v63 = objc_msgSend(*(id *)(v1 + 72), sel_bundleForClass_, *(_QWORD *)(v1 + 80));
    v64 = *(_QWORD *)(v1 + 176);
    v65 = *(_OWORD *)(v64 + 80);
    *(_OWORD *)(v4 - 128) = *(_OWORD *)(v64 + 64);
    *(_OWORD *)(v4 - 112) = v65;
    *(_QWORD *)(v4 - 96) = *(_QWORD *)(v64 + 96);
    v66 = *(_OWORD *)(v64 + 16);
    *(_OWORD *)(v4 - 192) = *(_OWORD *)v64;
    *(_OWORD *)(v4 - 176) = v66;
    v67 = *(_OWORD *)(v64 + 48);
    *(_OWORD *)(v4 - 160) = *(_OWORD *)(v64 + 32);
    *(_OWORD *)(v4 - 144) = v67;
    sub_23C2A4E50();
    swift_getKeyPath();
    sub_23C34E79C();
    swift_release();
    swift_release();
    v68 = sub_23C34E310();
    v70 = v69;
    v72 = v71 & 1;
    sub_23C34E298();
    v73 = *(_QWORD *)(v1 + 120);
    v74 = *(_QWORD *)(v1 + 248);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 224))(v73, *(unsigned int *)(v1 + 208), v74);
    sub_23C34E28C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v1 + 200))(v73, v74);
    v75 = sub_23C34E334();
    v77 = v76;
    v79 = v78;
    *(_QWORD *)(v1 + 72) = v80;
    swift_release();
    sub_23C289340(v68, v70, v72);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 - 192) = sub_23C34E544();
    *(_QWORD *)(v1 + 104) = sub_23C34E304();
    *(_QWORD *)(v1 + 112) = v81;
    *(_QWORD *)(v1 + 80) = v82;
    *(_QWORD *)(v1 + 176) = v83 & 1;
    sub_23C289340(v75, v77, v79 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    v84 = (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 128));
    v86 = v85;
    LOBYTE(v70) = v87 & 1;
    sub_23C34E274();
    v88 = *(_QWORD *)(v1 + 248);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 224))(v73, *(unsigned int *)(v1 + 208), v88);
    sub_23C34E28C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v1 + 200))(v73, v88);
    v89 = sub_23C34E334();
    v91 = v90;
    LOBYTE(v75) = v92;
    *(_QWORD *)(v1 + 248) = v93;
    swift_release();
    sub_23C289340(v84, v86, v70);
    swift_bridgeObjectRelease();
    *(_DWORD *)(v4 - 192) = sub_23C34E064();
    v94 = sub_23C34E304();
    v96 = v95;
    v98 = v97;
    v100 = v99 & 1;
    sub_23C289340(v89, v91, v75 & 1);
    swift_bridgeObjectRelease();
    v101 = *(_QWORD *)(v1 + 176);
    *(_BYTE *)(v4 - 192) = v101;
    *(_BYTE *)(v4 - 256) = v100;
    v58 = *(_QWORD *)(v1 + 104);
    v102 = *(_QWORD *)(v1 + 80);
    sub_23C289550(v58, v102, v101);
    v103 = *(_QWORD *)(v1 + 112);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 + 248) = v100;
    sub_23C289550(v94, v96, v100);
    v104 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 88) + 8);
    swift_bridgeObjectRetain();
    v104(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 96));
    v105 = *(_BYTE *)(v4 - 256);
    *(_QWORD *)(v1 + 208) = v94;
    v61 = v96;
    sub_23C289340(v94, v96, v105);
    v62 = v98;
    swift_bridgeObjectRelease();
    v59 = v102;
    sub_23C289340(v58, v102, *(_BYTE *)(v4 - 192));
    v60 = v103;
    swift_bridgeObjectRelease();
  }
  v106 = *(_DWORD *)(v1 + 52) & 1;
  *(_BYTE *)(v1 + 296) = v106;
  v107 = *(_DWORD *)(v1 + 20) & 1;
  v108 = *(_DWORD *)(v1 + 36) & 1;
  *(_BYTE *)(v1 + 288) = v108;
  *(_BYTE *)(v4 - 192) = v106;
  *(_BYTE *)(v4 - 256) = v108;
  *(_BYTE *)(v1 + 304) = v107;
  v109 = v107;
  *(_DWORD *)(v1 + 224) = v107;
  v110 = *(_QWORD *)(v1 + 56);
  v111 = *(_QWORD *)(v1 + 160);
  v112 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)v110 = v111;
  v113 = v111;
  v115 = *(_QWORD *)(v1 + 144);
  v114 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v110 + 8) = v114;
  v116 = v114;
  *(_BYTE *)(v110 + 16) = v106;
  v117 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v110 + 24) = v112;
  *(_QWORD *)(v110 + 32) = v117;
  *(_QWORD *)(v110 + 40) = v115;
  *(_BYTE *)(v110 + 48) = v108;
  v118 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v110 + 56) = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v110 + 64) = v118;
  *(_QWORD *)(v110 + 72) = *(_QWORD *)(v1 + 184);
  *(_BYTE *)(v110 + 80) = v109;
  *(_QWORD *)(v110 + 88) = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v110 + 96) = v58;
  v119 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v110 + 104) = v59;
  *(_QWORD *)(v110 + 112) = v119;
  v120 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v110 + 120) = v60;
  *(_QWORD *)(v110 + 128) = v120;
  v121 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v110 + 136) = v61;
  *(_QWORD *)(v110 + 144) = v121;
  *(_QWORD *)(v110 + 152) = v62;
  sub_23C289550(v113, v116, v106);
  swift_bridgeObjectRetain();
  sub_23C289550(*(_QWORD *)(v1 + 232), v115, v108);
  swift_bridgeObjectRetain();
  sub_23C289550(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 184), *(_DWORD *)(v1 + 224));
  swift_bridgeObjectRetain();
  v122 = *(_QWORD *)(v1 + 176);
  v123 = *(_QWORD *)(v1 + 248);
  sub_23C2BEAB8(v58, v59, v122, v60, v120, v61, v123);
  sub_23C2BECA8(v58, v59, v122, v60, v120, v61, v123);
  sub_23C289340(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 184), *(_DWORD *)(v1 + 224));
  swift_bridgeObjectRelease();
  sub_23C289340(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 144), *(_BYTE *)(v1 + 288));
  swift_bridgeObjectRelease();
  sub_23C289340(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 152), *(_BYTE *)(v1 + 296));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2AF3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v5 = sub_23C34D854();
  v22 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = sub_23C34D7D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2[5];
  v27 = v2[4];
  v28 = v15;
  v29 = *((_QWORD *)v2 + 12);
  v16 = v2[1];
  v23 = *v2;
  v24 = v16;
  v17 = v2[3];
  v25 = v2[2];
  v26 = v17;
  v21 = a1;
  sub_23C34D7C4();
  sub_23C27FEE4(&qword_256B58EA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC290], MEMORY[0x24BDCC2B0]);
  sub_23C34E9C4();
  sub_23C34E9E8();
  sub_23C27FEE4(&qword_256B58EA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC508]);
  v18 = sub_23C34E850();
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v8, v5);
  v19(v10, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) == 0)
  {
    sub_23C34DFEC();
    sub_23C2AF608();
  }
  *(_OWORD *)a2 = 0u;
  *(_QWORD *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  return result;
}

void sub_23C2AF608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;

  v4 = sub_23C34E25C();
  MEMORY[0x24BDAC7A8](v4);
  v0 = sub_23C34DA34();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23C34E868();
  MEMORY[0x24BDAC7A8](v1);
  sub_23C34E85C();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2AF7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v4 = sub_23C34E310();
  v6 = v5;
  *(_QWORD *)(v3 - 368) = v7;
  v9 = v8 & 1;
  sub_23C34E238();
  sub_23C34E214();
  sub_23C34E250();
  swift_release();
  v10 = *MEMORY[0x24BDF17C8];
  v11 = v1;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 104);
  *(_QWORD *)(v3 - 352) = v12;
  v13 = *(_QWORD *)(v3 - 320);
  v12(v0, v10, v13);
  sub_23C34E28C();
  swift_release();
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  *(_QWORD *)(v3 - 360) = v14;
  v14(v0, v13);
  *(_QWORD *)(v3 - 328) = sub_23C34E334();
  *(_QWORD *)(v3 - 344) = v15;
  v17 = v16;
  *(_QWORD *)(v3 - 336) = v18;
  swift_release();
  v19 = v17 & 1;
  sub_23C289340(v4, v6, v9);
  swift_bridgeObjectRelease();
  v20 = (*(uint64_t (**)(_QWORD))(v2 + 88))(*(_QWORD *)(v3 - 312));
  v22 = v21;
  LOBYTE(v6) = v23 & 1;
  sub_23C34E274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 352))(v0, v10, v13);
  sub_23C34E28C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 - 360))(v0, v13);
  v24 = sub_23C34E334();
  v26 = v25;
  v28 = v27;
  swift_release();
  sub_23C289340(v20, v22, v6);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v3 - 208) = sub_23C34E064();
  v29 = sub_23C34E304();
  v31 = v30;
  v33 = v32;
  LOBYTE(v6) = v34 & 1;
  sub_23C289340(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v3 - 208) = v19;
  v35 = *(_QWORD *)(v3 - 304);
  v36 = *(_QWORD *)(v3 - 328);
  v37 = *(_QWORD *)(v3 - 344);
  *(_QWORD *)v35 = v36;
  *(_QWORD *)(v35 + 8) = v37;
  *(_BYTE *)(v35 + 16) = v19;
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(v3 - 336);
  *(_QWORD *)(v35 + 32) = v29;
  *(_QWORD *)(v35 + 40) = v31;
  *(_BYTE *)(v35 + 48) = v6;
  *(_QWORD *)(v35 + 56) = v33;
  sub_23C289550(v36, v37, v19);
  swift_bridgeObjectRetain();
  sub_23C289550(v29, v31, v6);
  swift_bridgeObjectRetain();
  sub_23C289340(v29, v31, v6);
  swift_bridgeObjectRelease();
  sub_23C289340(v36, v37, *(_BYTE *)(v3 - 208));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2AFAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 *v73;
  uint64_t v74;
  _QWORD v75[2];
  _QWORD v76[2];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[2];
  _QWORD v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;

  v64 = a1;
  v65 = a3;
  v4 = *(_QWORD *)(a2 + 16);
  sub_23C34E130();
  v59 = v4;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v62 = *(_QWORD *)(a2 + 40);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  v5 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C]();
  v6 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v7 = sub_23C34DE30();
  v87[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v6);
  v87[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v7, v87);
  v58 = sub_23C34E64C();
  *(_QWORD *)&v88 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v8 = *(_QWORD *)(a2 + 64);
  v60 = *(_QWORD *)(a2 + 32);
  v61 = v8;
  *(_QWORD *)&v77 = v60;
  *((_QWORD *)&v77 + 1) = v8;
  MEMORY[0x24261C60C](255, &v77, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v9 = sub_23C34E700();
  v10 = v5;
  MEMORY[0x24261C66C](v5, v9);
  sub_23C34E64C();
  *((_QWORD *)&v88 + 1) = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v12 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v12);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v14 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v14);
  v15 = sub_23C34E64C();
  v16 = sub_23C34E010();
  v17 = MEMORY[0x24261C66C](v10, v13);
  v18 = MEMORY[0x24BDF4700];
  v19 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  v86[0] = v17;
  v86[1] = v19;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v16, v86);
  v20 = sub_23C34E64C();
  v21 = MEMORY[0x24261C66C](v18, v20);
  *(_QWORD *)&v77 = v20;
  *((_QWORD *)&v77 + 1) = v21;
  MEMORY[0x24261C60C](255, &v77, MEMORY[0x24BDF2F10], 0);
  v22 = sub_23C34DE30();
  *(_QWORD *)&v77 = v20;
  *((_QWORD *)&v77 + 1) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v85[0] = OpaqueTypeConformance2;
  v85[1] = v24;
  v25 = MEMORY[0x24BDED308];
  v26 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v22, v85);
  *(_QWORD *)&v77 = v22;
  *((_QWORD *)&v77 + 1) = v26;
  v27 = MEMORY[0x24261C60C](255, &v77, MEMORY[0x24BDF2550], 0);
  v28 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v77 = v11;
  *((_QWORD *)&v77 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v78 = v27;
  *((_QWORD *)&v78 + 1) = v28;
  *(_QWORD *)&v79 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v29 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v29);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  *(_QWORD *)&v89 = sub_23C34DE30();
  v55 = *(_QWORD *)(a2 + 24);
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  *((_QWORD *)&v89 + 1) = sub_23C34EA48();
  *(_QWORD *)&v90 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  sub_23C34E700();
  sub_23C34E58C();
  sub_23C34E0DC();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v30 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v30);
  v31 = sub_23C34E64C();
  v32 = sub_23C34DE30();
  v84[0] = MEMORY[0x24261C66C](v18, v31);
  v84[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](v25, v32, v84);
  v33 = sub_23C34DD34();
  v54 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v54 - v34;
  v36 = sub_23C34DE30();
  v57 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v54 - v37;
  v39 = sub_23C34DE30();
  v58 = *(_QWORD *)(v39 - 8);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v54 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v56 = (uint64_t)&v54 - v43;
  v44 = v63[5];
  v92 = v63[4];
  v93 = v44;
  v94 = *((_QWORD *)v63 + 12);
  v45 = v63[1];
  v88 = *v63;
  v89 = v45;
  v46 = v63[3];
  v90 = v63[2];
  v91 = v46;
  sub_23C34E160();
  v66 = v59;
  v67 = v55;
  v68 = v60;
  v69 = v62;
  v70 = *(_OWORD *)(a2 + 48);
  v47 = *(_QWORD *)(a2 + 72);
  v71 = v61;
  v72 = v47;
  v73 = &v88;
  v74 = v64;
  sub_23C328F40();
  sub_23C34DE3C();
  v81 = v92;
  v82 = v93;
  v83 = v94;
  v77 = v88;
  v78 = v89;
  v79 = v90;
  v80 = v91;
  v64 = a2;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if (BYTE1(v79) > 6u)
    sub_23C34E1A8();
  else
    sub_23C34E184();
  v48 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v33);
  sub_23C34E424();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v33);
  sub_23C34E184();
  v81 = v92;
  v82 = v93;
  v83 = v94;
  v77 = v88;
  v78 = v89;
  v79 = v90;
  v80 = v91;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v76[0] = v48;
  v76[1] = MEMORY[0x24BDF1050];
  v49 = MEMORY[0x24BDED308];
  v50 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v36, v76);
  sub_23C34E4B4();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v36);
  v75[0] = v50;
  v75[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](v49, v39, v75);
  v51 = v56;
  sub_23C28958C((uint64_t)v42, v39, v56);
  v52 = *(void (**)(char *, uint64_t))(v58 + 8);
  v52(v42, v39);
  sub_23C287D30(v51, v39, v65);
  return ((uint64_t (*)(uint64_t, uint64_t))v52)(v51, v39);
}

uint64_t sub_23C2B0540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];
  _QWORD v80[7];
  _QWORD v81[2];

  v61 = a8;
  v59 = a7;
  v56 = a6;
  v54 = a5;
  v53 = a4;
  v60 = a2;
  v58 = a1;
  v62 = a9;
  v57 = a11;
  v55 = a10;
  sub_23C34E130();
  v52[0] = a3;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  v14 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v13);
  v15 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v16 = sub_23C34DE30();
  v81[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  v81[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v16, v81);
  v52[1] = sub_23C34E64C();
  v80[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v74 = a5;
  v75 = a10;
  MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v17 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v17);
  sub_23C34E64C();
  v80[3] = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v19 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v19);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v20 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v21 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v21);
  v22 = sub_23C34E64C();
  v23 = sub_23C34E010();
  v24 = MEMORY[0x24261C66C](v14, v20);
  v25 = MEMORY[0x24BDF4700];
  v26 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v22);
  v80[0] = v24;
  v80[1] = v26;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v23, v80);
  v27 = sub_23C34E64C();
  v28 = MEMORY[0x24261C66C](v25, v27);
  v74 = v27;
  v75 = v28;
  MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BDF2F10], 0);
  v29 = sub_23C34DE30();
  v74 = v27;
  v75 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v79[0] = OpaqueTypeConformance2;
  v79[1] = v31;
  v32 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v29, v79);
  v74 = v29;
  v75 = v32;
  v33 = MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BDF2550], 0);
  v34 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v74 = v18;
  v75 = MEMORY[0x24BEE0D00];
  v76 = v33;
  v77 = v34;
  v78 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v35 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v35);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  v80[4] = sub_23C34DE30();
  v36 = v53;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  v80[5] = sub_23C34EA48();
  v80[6] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  sub_23C34E700();
  sub_23C34E58C();
  sub_23C34E0DC();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v37 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v37);
  v38 = sub_23C34E64C();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v52 - v40;
  v42 = sub_23C34DE30();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v52 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)v52 - v47;
  sub_23C34DFEC();
  v63 = v52[0];
  v64 = v36;
  v65 = v54;
  v66 = v56;
  v67 = v59;
  v68 = v61;
  v69 = v55;
  v70 = v57;
  v71 = v58;
  v72 = v60;
  sub_23C34E640();
  sub_23C34E190();
  v49 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v38);
  sub_23C34E4B4();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  v73[0] = v49;
  v73[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v42, v73);
  sub_23C28958C((uint64_t)v46, v42, (uint64_t)v48);
  v50 = *(void (**)(char *, uint64_t))(v43 + 8);
  v50(v46, v42);
  sub_23C287D30((uint64_t)v48, v42, v62);
  return ((uint64_t (*)(char *, uint64_t))v50)(v48, v42);
}

void sub_23C2B0E0C(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD v60[13];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[3];

  v76 = a1;
  v77 = a8;
  v69 = a7;
  v70 = a2;
  v74 = a3;
  v75 = a6;
  v65 = a4;
  v66 = a5;
  v71 = a9;
  v68 = a11;
  v67 = a10;
  *(_QWORD *)&v86 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v78 = a5;
  v79 = a10;
  MEMORY[0x24261C60C](255, &v78, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v12 = sub_23C34E700();
  v13 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v12);
  sub_23C34E64C();
  *((_QWORD *)&v86 + 1) = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v15 = sub_23C34E700();
  MEMORY[0x24261C66C](v13, v15);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v16 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v17 = sub_23C34E700();
  v18 = v13;
  MEMORY[0x24261C66C](v13, v17);
  v19 = sub_23C34E64C();
  v20 = sub_23C34E010();
  v21 = MEMORY[0x24261C66C](v13, v16);
  v22 = MEMORY[0x24BDF4700];
  v23 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v19);
  v95[0] = v21;
  v95[1] = v23;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v20, v95);
  v24 = sub_23C34E64C();
  v25 = MEMORY[0x24261C66C](v22, v24);
  v78 = v24;
  v79 = v25;
  MEMORY[0x24261C60C](255, &v78, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v27 = sub_23C34DE30();
  v78 = v24;
  v79 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29 = sub_23C27FEE4(&qword_256B58D20, v26, MEMORY[0x24BDF1078]);
  v94[0] = OpaqueTypeConformance2;
  v94[1] = v29;
  v30 = MEMORY[0x24BDED308];
  v31 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v27, v94);
  v78 = v27;
  v79 = v31;
  v32 = MEMORY[0x24261C60C](255, &v78, MEMORY[0x24BDF2550], 0);
  v33 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v78 = v14;
  v79 = MEMORY[0x24BEE0D00];
  v80 = v32;
  v81 = v33;
  v82 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v34 = sub_23C34E700();
  MEMORY[0x24261C66C](v18, v34);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  *(_QWORD *)&v87 = sub_23C34DE30();
  v35 = v65;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  *((_QWORD *)&v87 + 1) = sub_23C34EA48();
  *(_QWORD *)&v88 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  v60[6] = sub_23C34E700();
  v36 = sub_23C34E58C();
  v37 = *(_QWORD *)(v36 - 8);
  v60[8] = v36;
  v60[9] = v37;
  MEMORY[0x24BDAC7A8](v36);
  v60[5] = (char *)v60 - v38;
  sub_23C34E0DC();
  v39 = sub_23C34DE30();
  v40 = *(_QWORD *)(v39 - 8);
  v60[11] = v39;
  v62 = v40;
  MEMORY[0x24BDAC7A8](v39);
  v60[7] = (char *)v60 - v41;
  v61 = sub_23C34DE30();
  v63 = *(_QWORD *)(v61 - 8);
  v42 = MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)v60 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v60[10] = (char *)v60 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v60[12] = (char *)v60 - v46;
  v47 = v74;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v48 = v75;
  swift_getTupleTypeMetadata2();
  v49 = sub_23C34E700();
  MEMORY[0x24261C66C](v18, v49);
  v50 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v51 = sub_23C34DE30();
  v52 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v50);
  v53 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v93[0] = v52;
  v93[1] = v53;
  MEMORY[0x24261C66C](v30, v51, v93);
  v54 = sub_23C34E64C();
  v73 = *(_QWORD *)(v54 - 8);
  v55 = MEMORY[0x24BDAC7A8](v54);
  MEMORY[0x24BDAC7A8](v55);
  v72 = (char *)v60 - v56;
  v57 = v76[5];
  v90 = v76[4];
  v91 = v57;
  v92 = *((_QWORD *)v76 + 12);
  v58 = v76[1];
  v86 = *v76;
  v87 = v58;
  v59 = v76[3];
  v88 = v76[2];
  v89 = v59;
  v78 = v47;
  v79 = v35;
  v80 = v66;
  v81 = v48;
  v82 = v69;
  v83 = v77;
  v84 = v67;
  v85 = v68;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B15D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);

  *v1 = a1;
  v10 = v1[22];
  sub_23C2A50D0(v10, a1, v2);
  v11 = MEMORY[0x24BDF4700];
  v1[2] = v5;
  v1[3] = MEMORY[0x24261C66C](v11, v5);
  v12 = v1[24];
  v1[1] = v2;
  sub_23C28958C(v2, v5, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v1[25] + 8);
  v1[4] = (uint64_t)v13;
  v13(v2, v5);
  v1[32] = v1[26];
  v1[33] = v8;
  v14 = v1[27];
  v1[34] = v4;
  v1[35] = v14;
  v15 = v1[29];
  v1[36] = v7;
  v1[37] = v15;
  v1[38] = v3;
  v1[39] = v6;
  v16 = v1[28];
  v1[40] = v16;
  v1[41] = v10;
  v17 = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v1[6]);
  v18 = v1[5];
  sub_23C34E580();
  v19 = sub_23C34E19C();
  v20 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v9 - 176) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v9 - 160) = v20;
  *(_QWORD *)(v9 - 144) = *(_QWORD *)(v16 + 96);
  v21 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)(v9 - 240) = *(_OWORD *)v16;
  *(_OWORD *)(v9 - 224) = v21;
  v22 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v9 - 208) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v9 - 192) = v22;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v23 = *(_BYTE *)(v9 - 208);
  if (v23)
    v24 = 0;
  else
    v24 = *(_QWORD *)(v9 - 232);
  v1[49] = v17;
  v25 = v1[8];
  v26 = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v25, v1 + 49);
  v27 = v1[7];
  sub_23C318DEC(v19, v24, v23, v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v1[9] + 8))(v18, v25);
  v28 = sub_23C34E1B4();
  v29 = *(_OWORD *)(v16 + 80);
  *(_OWORD *)(v9 - 176) = *(_OWORD *)(v16 + 64);
  *(_OWORD *)(v9 - 160) = v29;
  *(_QWORD *)(v9 - 144) = *(_QWORD *)(v16 + 96);
  v30 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)(v9 - 240) = *(_OWORD *)v16;
  *(_OWORD *)(v9 - 224) = v30;
  v31 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v9 - 208) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v9 - 192) = v31;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v32 = *(_BYTE *)(v9 - 208);
  if (v32)
    v33 = 0;
  else
    v33 = *(_QWORD *)(v9 - 216);
  v34 = sub_23C27FEE4(&qword_256B58D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
  v1[47] = v26;
  v1[48] = v34;
  v35 = MEMORY[0x24BDED308];
  v36 = v1[11];
  v37 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v36, v1 + 47);
  v38 = v1[10];
  sub_23C318DEC(v28, v33, v32, v36, v37);
  (*(void (**)(uint64_t, uint64_t))(v1[14] + 8))(v27, v36);
  v1[45] = v37;
  v1[46] = v34;
  v39 = v1[13];
  v40 = MEMORY[0x24261C66C](v35, v39, v1 + 45);
  v41 = v1[12];
  sub_23C28958C(v38, v39, v41);
  v42 = v1[15];
  v43 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v43(v38, v39);
  v44 = v1[24];
  v45 = v1[1];
  v46 = v1[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[25] + 16))(v45, v44, v46);
  *(_QWORD *)(v9 - 240) = v45;
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  v48 = v1[16];
  v47(v48, v41, v39);
  *(_QWORD *)(v9 - 232) = v48;
  v1[50] = v46;
  v1[51] = v39;
  v1[43] = v1[3];
  v1[44] = v40;
  sub_23C328D8C((uint64_t *)(v9 - 240), 2uLL, (uint64_t)(v1 + 50));
  v43(v41, v39);
  v49 = (void (*)(uint64_t, uint64_t))v1[4];
  v49(v44, v46);
  v43(v48, v39);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v45, v46);
}

void sub_23C2B194C(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _QWORD v66[22];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  _QWORD v103[2];
  _QWORD v104[3];

  v67 = a8;
  v76 = a6;
  v77 = a7;
  v74 = a5;
  v72 = a3;
  v71 = a2;
  v66[20] = a9;
  v75 = a11;
  v73 = a10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v66[8] = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66[3] = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v66[2] = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23C34DE30();
  v66[5] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v66[4] = (char *)v66 - v18;
  v66[6] = v19;
  v20 = sub_23C34DE30();
  v66[19] = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v66[10] = (char *)v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v66[21] = (char *)v66 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  v66[11] = v20;
  v66[9] = v24;
  swift_getTupleTypeMetadata2();
  v70 = sub_23C34E700();
  v25 = sub_23C34EA48();
  v85 = *(_QWORD *)(v25 - 8);
  v86 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v87 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v84 = (char *)v66 - v28;
  v83 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v30 = sub_23C34E700();
  v31 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v30);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v32 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v33 = sub_23C34E700();
  MEMORY[0x24261C66C](v31, v33);
  v34 = sub_23C34E64C();
  v35 = sub_23C34E010();
  v36 = MEMORY[0x24261C66C](v31, v32);
  v37 = MEMORY[0x24BDF4700];
  v38 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v34);
  v104[0] = v36;
  v104[1] = v38;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v35, v104);
  v39 = sub_23C34E64C();
  v40 = MEMORY[0x24261C66C](v37, v39);
  *(_QWORD *)&v96 = v39;
  *((_QWORD *)&v96 + 1) = v40;
  MEMORY[0x24261C60C](255, &v96, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v42 = sub_23C34DE30();
  *(_QWORD *)&v96 = v39;
  *((_QWORD *)&v96 + 1) = v40;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v44 = sub_23C27FEE4(&qword_256B58D20, v41, MEMORY[0x24BDF1078]);
  v103[0] = OpaqueTypeConformance2;
  v103[1] = v44;
  v45 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v42, v103);
  *(_QWORD *)&v96 = v42;
  *((_QWORD *)&v96 + 1) = v45;
  v46 = MEMORY[0x24261C60C](255, &v96, MEMORY[0x24BDF2550], 0);
  v47 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v96 = v29;
  *((_QWORD *)&v96 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v97 = v46;
  *((_QWORD *)&v97 + 1) = v47;
  *(_QWORD *)&v98 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v48 = sub_23C34E700();
  MEMORY[0x24261C66C](v31, v48);
  v49 = sub_23C34E64C();
  v66[13] = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v66[12] = (char *)v66 - v50;
  v51 = sub_23C34DE30();
  v66[15] = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v66[14] = (char *)v66 - v52;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  v66[16] = v51;
  v83 = sub_23C34DE30();
  v69 = *(_QWORD *)(v83 - 8);
  v53 = MEMORY[0x24BDAC7A8](v83);
  v82 = (char *)v66 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v81 = (char *)v66 - v55;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v57 = v73;
  v56 = v74;
  *(_QWORD *)&v96 = v74;
  *((_QWORD *)&v96 + 1) = v73;
  MEMORY[0x24261C60C](255, &v96, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v58 = sub_23C34E700();
  MEMORY[0x24261C66C](v31, v58);
  v59 = sub_23C34E64C();
  v66[18] = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v80 = sub_23C34DE30();
  v68 = *(_QWORD *)(v80 - 8);
  v60 = MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)v66 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60);
  v78 = (char *)v66 - v62;
  v63 = a1[5];
  v100 = a1[4];
  v101 = v63;
  v102 = *((_QWORD *)a1 + 12);
  v64 = a1[1];
  v96 = *a1;
  v97 = v64;
  v65 = a1[2];
  v99 = a1[3];
  v98 = v65;
  v88 = v72;
  v66[7] = a4;
  v89 = a4;
  v90 = v56;
  v91 = v76;
  v92 = v77;
  v93 = v67;
  v94 = v57;
  v95 = v75;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B2130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD, uint64_t);
  void (*v132)(_QWORD, uint64_t);
  void (*v133)(_QWORD, uint64_t);
  char v135;

  if (sub_23C2A4EC0())
  {
    *(_QWORD *)(v1 + 256) = 0;
    *(_QWORD *)(v1 + 264) = 0;
    *(_QWORD *)(v1 + 240) = 0;
    *(_QWORD *)(v1 + 248) = 0;
    *(_QWORD *)(v1 + 224) = 0;
    *(_QWORD *)(v1 + 232) = 0;
    *(_DWORD *)(v1 + 220) = 0;
    v8 = *(_QWORD *)(v1 + 208);
  }
  else
  {
    v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v1 + 1200) = v9;
    *(_QWORD *)(v1 + 1216) = *(_QWORD *)(v5 + 96);
    v10 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(v1 + 1120) = *(_OWORD *)v5;
    *(_OWORD *)(v1 + 1136) = v10;
    v11 = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v1 + 1152) = v11;
    v8 = *(_QWORD *)(v1 + 208);
    sub_23C2A5B04(v8, a1, (uint64_t *)(v1 + 880));
    v12 = *(_QWORD *)(v1 + 880);
    *(_QWORD *)(v1 + 256) = *(_QWORD *)(v1 + 888);
    *(_QWORD *)(v1 + 264) = v12;
    *(_QWORD *)(v1 + 248) = *(unsigned __int8 *)(v1 + 896);
    v13 = *(_QWORD *)(v1 + 904);
    *(_QWORD *)(v1 + 232) = *(_QWORD *)(v1 + 912);
    *(_QWORD *)(v1 + 240) = v13;
    *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 920);
    *(_DWORD *)(v1 + 220) = *(unsigned __int8 *)(v1 + 928);
  }
  v14 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v1 + 1200) = v14;
  *(_QWORD *)(v1 + 1216) = *(_QWORD *)(v5 + 96);
  v15 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v1 + 1120) = *(_OWORD *)v5;
  *(_OWORD *)(v1 + 1136) = v15;
  v16 = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v1 + 1152) = v16;
  sub_23C2A6A78(v8, a1, v4);
  sub_23C34E190();
  v17 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v3);
  v18 = *(_QWORD *)(v1 + 280);
  sub_23C34E4B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 144) + 8))(v4, v3);
  v19 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v6 - 168) = v17;
  *(_QWORD *)(v6 - 160) = v19;
  v20 = v19;
  v21 = *(_QWORD *)(v1 + 288);
  v22 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v21, v6 - 168);
  v23 = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(v1 + 136) = v22;
  sub_23C28958C(v18, v21, v23);
  v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 184) + 8);
  v25 = v18;
  v26 = a1;
  *(_QWORD *)(v1 + 144) = v24;
  v24(v25, v21);
  v27 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v1 + 1200) = v27;
  *(_QWORD *)(v1 + 1216) = *(_QWORD *)(v5 + 96);
  v28 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v1 + 1120) = *(_OWORD *)v5;
  *(_OWORD *)(v1 + 1136) = v28;
  v29 = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v1 + 1152) = v29;
  v30 = type metadata accessor for WorkoutDetail();
  v32 = *(int *)(v30 + 64);
  v31 = *(int *)(v30 + 68);
  *(_QWORD *)(v1 + 8) = v30;
  v33 = *(_QWORD *)(v8 + v31);
  v34 = v8 + v32;
  v35 = *(_QWORD *)(v1 + 96);
  sub_23C2A8C74(v33, v34, 1, a1, v35);
  sub_23C34E1C0();
  v36 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v2);
  v37 = *(_QWORD *)(v1 + 112);
  sub_23C34E4B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 104) + 8))(v35, v2);
  if (qword_256B574F0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 1120) = qword_256B58CC0;
  swift_retain();
  sub_23C34E178();
  *(_QWORD *)(v6 - 184) = v36;
  *(_QWORD *)(v6 - 176) = v20;
  v38 = MEMORY[0x24BDED308];
  v39 = *(_QWORD *)(v1 + 128);
  v40 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v39, v6 - 184);
  v41 = *(_QWORD *)(v1 + 304);
  sub_23C34E3A0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 120) + 8))(v37, v39);
  v42 = sub_23C28943C(&qword_256B58E30, &qword_256B58D30, MEMORY[0x24BDF06D0]);
  *(_QWORD *)(v6 - 200) = v40;
  *(_QWORD *)(v6 - 192) = v42;
  v43 = *(_QWORD *)(v1 + 312);
  v44 = MEMORY[0x24261C66C](v38, v43, v6 - 200);
  v45 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v1 + 120) = v44;
  sub_23C28958C(v41, v43, v45);
  v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 192) + 8);
  *(_QWORD *)(v1 + 128) = v46;
  v46(v41, v43);
  v47 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v1 + 1200) = v47;
  *(_QWORD *)(v1 + 1216) = *(_QWORD *)(v5 + 96);
  v48 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v1 + 1120) = *(_OWORD *)v5;
  *(_OWORD *)(v1 + 1136) = v48;
  v49 = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v1 + 1152) = v49;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  v50 = swift_release();
  v51 = *(_QWORD *)(v1 + 336);
  v52 = *(_QWORD *)(v1 + 344);
  v53 = v26;
  if ((*(_BYTE *)(v1 + 1120) & 1) != 0)
  {
    v54 = *(_QWORD *)(v1 + 200);
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(*(_QWORD *)(v1 + 344), 1, 1, v54);
    MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v54);
    sub_23C2D7E50(v52, *(_QWORD *)(v1 + 320));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 328) + 8))(v52, v51);
  }
  else
  {
    v55 = *(_QWORD *)(v1 + 16);
    (*(void (**)(uint64_t))(v5 + 24))(v50);
    sub_23C34DE3C();
    sub_23C34E16C();
    v56 = *(_QWORD *)(v1 + 32);
    v57 = *(_QWORD *)(v1 + 56);
    v58 = *(_QWORD *)(v1 + 176);
    sub_23C34E424();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 24) + 8))(v55, v57);
    sub_23C34E190();
    v59 = MEMORY[0x24BDF1050];
    *(_QWORD *)(v1 + 680) = v58;
    *(_QWORD *)(v1 + 688) = v59;
    v60 = MEMORY[0x24BDED308];
    v61 = *(_QWORD *)(v1 + 48);
    v62 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v61, v1 + 680);
    v63 = *(_QWORD *)(v1 + 80);
    sub_23C34E4B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 40) + 8))(v56, v61);
    *(_QWORD *)(v1 + 664) = v62;
    *(_QWORD *)(v1 + 672) = MEMORY[0x24BDECC60];
    v64 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 112) = MEMORY[0x24261C66C](v60, v64, v1 + 664);
    sub_23C28958C(v63, v64, *(_QWORD *)(v1 + 168));
    v65 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 8);
    *(_QWORD *)(v1 + 176) = v65;
    v65(v63, v64);
    *(_QWORD *)(v1 + 976) = *(_QWORD *)(v5 + 96);
    v66 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v1 + 944) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v1 + 960) = v66;
    v67 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v1 + 912) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v1 + 928) = v67;
    v68 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(v1 + 880) = *(_OWORD *)v5;
    *(_OWORD *)(v1 + 896) = v68;
    v69 = *(_QWORD *)(v1 + 8);
    v70 = *(_QWORD *)(v1 + 208);
    v71 = v70 + *(int *)(v69 + 80);
    v72 = v70 + *(int *)(v69 + 24);
    v73 = sub_23C34D86C();
    v74 = v53;
    v75 = *(_QWORD *)(v73 - 8);
    v76 = *(_QWORD *)(v1 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v76, v72, v73);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v73);
    sub_23C2AE4D8(v71, v76, v74, v1 + 1120);
    sub_23C285184(v76, &qword_256B58910);
    sub_23C2894C8(v1 + 1120, v1 + 696, &qword_256B58E38);
    LOBYTE(v71) = sub_23C34E190();
    sub_23C34DD28();
    v78 = v77;
    v80 = v79;
    v82 = v81;
    v84 = v83;
    sub_23C2894C8(v1 + 696, v1 + 880, &qword_256B58E38);
    *(_BYTE *)(v1 + 1064) = v71;
    *(_QWORD *)(v1 + 1072) = v78;
    *(_QWORD *)(v1 + 1080) = v80;
    *(_QWORD *)(v1 + 1088) = v82;
    *(_QWORD *)(v1 + 1096) = v84;
    *(_BYTE *)(v1 + 1104) = 0;
    v85 = *(_QWORD *)(v1 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 16))(v63, v85, v64);
    v86 = *(_OWORD *)(v1 + 1088);
    *(_OWORD *)(v1 + 624) = *(_OWORD *)(v1 + 1072);
    *(_OWORD *)(v1 + 640) = v86;
    *(_BYTE *)(v1 + 656) = *(_BYTE *)(v1 + 1104);
    v87 = *(_OWORD *)(v1 + 1024);
    *(_OWORD *)(v1 + 560) = *(_OWORD *)(v1 + 1008);
    *(_OWORD *)(v1 + 576) = v87;
    v88 = *(_OWORD *)(v1 + 1056);
    *(_OWORD *)(v1 + 592) = *(_OWORD *)(v1 + 1040);
    *(_OWORD *)(v1 + 608) = v88;
    v89 = *(_OWORD *)(v1 + 960);
    *(_OWORD *)(v1 + 496) = *(_OWORD *)(v1 + 944);
    *(_OWORD *)(v1 + 512) = v89;
    v90 = *(_OWORD *)(v1 + 992);
    *(_OWORD *)(v1 + 528) = *(_OWORD *)(v1 + 976);
    *(_OWORD *)(v1 + 544) = v90;
    v91 = *(_OWORD *)(v1 + 896);
    *(_OWORD *)(v1 + 432) = *(_OWORD *)(v1 + 880);
    *(_OWORD *)(v1 + 448) = v91;
    v92 = *(_OWORD *)(v1 + 928);
    *(_OWORD *)(v1 + 464) = *(_OWORD *)(v1 + 912);
    *(_OWORD *)(v1 + 480) = v92;
    *(_QWORD *)(v1 + 360) = v63;
    *(_QWORD *)(v1 + 368) = v1 + 432;
    sub_23C2C115C((_QWORD *)(v1 + 696), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2BE9BC);
    v93 = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v1 + 416) = v64;
    *(_QWORD *)(v1 + 424) = v93;
    *(_QWORD *)(v1 + 400) = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v1 + 408) = sub_23C2BEB20();
    v94 = *(_QWORD *)(v1 + 344);
    sub_23C328D8C((uint64_t *)(v1 + 360), 2uLL, v1 + 416);
    sub_23C2C115C((_QWORD *)(v1 + 696), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2BEBAC);
    v95 = v85;
    v96 = *(void (**)(uint64_t, uint64_t))(v1 + 176);
    v96(v95, v64);
    v97 = *(_OWORD *)(v1 + 640);
    *(_OWORD *)(v1 + 1312) = *(_OWORD *)(v1 + 624);
    *(_OWORD *)(v1 + 1328) = v97;
    *(_BYTE *)(v1 + 1344) = *(_BYTE *)(v1 + 656);
    v98 = *(_OWORD *)(v1 + 576);
    *(_OWORD *)(v1 + 1248) = *(_OWORD *)(v1 + 560);
    *(_OWORD *)(v1 + 1264) = v98;
    v99 = *(_OWORD *)(v1 + 592);
    *(_OWORD *)(v1 + 1296) = *(_OWORD *)(v1 + 608);
    *(_OWORD *)(v1 + 1280) = v99;
    v100 = *(_OWORD *)(v1 + 512);
    *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v1 + 496);
    *(_OWORD *)(v1 + 1200) = v100;
    v101 = *(_OWORD *)(v1 + 528);
    *(_OWORD *)(v1 + 1232) = *(_OWORD *)(v1 + 544);
    *(_OWORD *)(v1 + 1216) = v101;
    v102 = *(_OWORD *)(v1 + 448);
    *(_OWORD *)(v1 + 1120) = *(_OWORD *)(v1 + 432);
    *(_OWORD *)(v1 + 1136) = v102;
    v103 = *(_OWORD *)(v1 + 464);
    *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v1 + 480);
    *(_OWORD *)(v1 + 1152) = v103;
    sub_23C2C115C((_QWORD *)(v1 + 1120), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2BEBAC);
    v96(v63, v64);
    v104 = *(_QWORD *)(v1 + 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v94, 0, 1, v104);
    MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v104);
    sub_23C2D7E50(v94, *(_QWORD *)(v1 + 320));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 328) + 8))(v94, *(_QWORD *)(v1 + 336));
  }
  v105 = *(_QWORD *)(v1 + 208);
  v106 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v1 + 1184) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v1 + 1200) = v106;
  *(_QWORD *)(v1 + 1216) = *(_QWORD *)(v5 + 96);
  v107 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v1 + 1120) = *(_OWORD *)v5;
  *(_OWORD *)(v1 + 1136) = v107;
  v108 = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v1 + 1168) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v1 + 1152) = v108;
  sub_23C2AF3B4(v105, v1 + 880);
  v109 = *(_QWORD *)(v1 + 880);
  v110 = *(_QWORD *)(v1 + 888);
  v111 = *(_QWORD *)(v1 + 896);
  v112 = *(_QWORD *)(v1 + 904);
  v113 = *(_QWORD *)(v1 + 912);
  v114 = *(_QWORD *)(v1 + 920);
  v115 = *(_QWORD *)(v1 + 928);
  v116 = *(_QWORD *)(v1 + 936);
  *(_QWORD *)(v1 + 208) = *(_QWORD *)(v1 + 944);
  v117 = *(_QWORD *)(v1 + 952);
  *(_QWORD *)(v1 + 168) = *(_QWORD *)(v1 + 960);
  *(_QWORD *)(v1 + 176) = v117;
  v118 = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(v1 + 880) = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 888) = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 896) = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 904) = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 912) = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v1 + 920) = *(_QWORD *)(v1 + 224);
  *(_BYTE *)(v1 + 928) = *(_DWORD *)(v1 + 220);
  *(_QWORD *)(v1 + 432) = v1 + 880;
  v119 = *(_QWORD *)(v1 + 280);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 184) + 16))(v119, v118, *(_QWORD *)(v1 + 288));
  *(_QWORD *)(v1 + 440) = v119;
  v120 = *(_QWORD *)(v1 + 304);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 192) + 16))(v120, *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 312));
  *(_QWORD *)(v1 + 448) = v120;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 328) + 16))(*(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 336));
  *(_QWORD *)(v1 + 96) = v109;
  *(_QWORD *)(v1 + 104) = v110;
  *(_QWORD *)(v1 + 1120) = v109;
  *(_QWORD *)(v1 + 1128) = v110;
  *(_QWORD *)(v1 + 1136) = v111;
  *(_QWORD *)(v1 + 152) = v112;
  *(_QWORD *)(v1 + 1144) = v112;
  *(_QWORD *)(v1 + 1152) = v113;
  *(_QWORD *)(v1 + 1160) = v114;
  *(_QWORD *)(v1 + 1168) = v115;
  *(_QWORD *)(v1 + 112) = v116;
  *(_QWORD *)(v1 + 1176) = v116;
  v121 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v1 + 1184) = v121;
  v123 = *(_QWORD *)(v1 + 168);
  v122 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v1 + 1192) = v122;
  *(_QWORD *)(v1 + 1200) = v123;
  *(_QWORD *)(v1 + 456) = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 464) = v1 + 1120;
  sub_23C2BED10(*(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 240));
  v135 = v122;
  v124 = *(_QWORD *)(v1 + 96);
  v125 = *(_QWORD *)(v1 + 104);
  sub_23C2BED4C(v124, v125, v111, v112, v113, v114, v115, v116, v121, v135);
  *(_QWORD *)(v1 + 696) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58CD8);
  v126 = *(_QWORD *)(v1 + 288);
  *(_QWORD *)(v1 + 704) = v126;
  v127 = *(_QWORD *)(v1 + 312);
  *(_QWORD *)(v1 + 712) = v127;
  v128 = *(_QWORD *)(v1 + 336);
  *(_QWORD *)(v1 + 720) = v128;
  *(_QWORD *)(v1 + 728) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D40);
  v129 = sub_23C2BEDBC();
  v130 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 360) = v129;
  *(_QWORD *)(v1 + 368) = v130;
  *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 352) = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], *(_QWORD *)(v1 + 200));
  *(_QWORD *)(v1 + 384) = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v128, v1 + 352);
  *(_QWORD *)(v1 + 392) = sub_23C2BEE40(&qword_256B58E88, &qword_256B58D40, &qword_256B58E90, &qword_256B58E98);
  sub_23C328D8C((uint64_t *)(v1 + 432), 5uLL, v1 + 696);
  sub_23C2BEEB8(*(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 240));
  sub_23C2BEEF4(v124, v125, v111, *(_QWORD *)(v1 + 152), v113, v114, v115, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 176));
  v131 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 + 328) + 8);
  v131(*(_QWORD *)(v1 + 320), v128);
  v132 = *(void (**)(_QWORD, uint64_t))(v1 + 128);
  v132(*(_QWORD *)(v1 + 296), v127);
  v133 = *(void (**)(_QWORD, uint64_t))(v1 + 144);
  v133(*(_QWORD *)(v1 + 272), v126);
  sub_23C2BEEF4(*(_QWORD *)(v1 + 1120), *(_QWORD *)(v1 + 1128), *(_QWORD *)(v1 + 1136), *(_QWORD *)(v1 + 1144), *(_QWORD *)(v1 + 1152), *(_QWORD *)(v1 + 1160), *(_QWORD *)(v1 + 1168), *(_QWORD *)(v1 + 1176), *(_QWORD *)(v1 + 1184), *(_QWORD *)(v1 + 1192));
  v131(*(_QWORD *)(v1 + 344), v128);
  v132(*(_QWORD *)(v1 + 304), v127);
  v133(*(_QWORD *)(v1 + 280), v126);
  return sub_23C2BEEB8(*(_QWORD *)(v1 + 880), *(_QWORD *)(v1 + 888), *(_QWORD *)(v1 + 896), *(_QWORD *)(v1 + 904));
}

uint64_t sub_23C2B2C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;

  v57 = a1;
  v58 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  v5 = *(_QWORD *)(a2 + 16);
  v51[2] = sub_23C34E130();
  v52 = v5;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v56 = *(_QWORD *)(a2 + 40);
  swift_getTupleTypeMetadata2();
  v6 = sub_23C34E700();
  v7 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v6);
  v8 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v9 = sub_23C34DE30();
  v73[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v8);
  v73[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v9, v73);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v10 = *(_QWORD *)(a2 + 64);
  v54 = *(_QWORD *)(a2 + 32);
  v55 = v10;
  *(_QWORD *)&v74 = v54;
  *((_QWORD *)&v74 + 1) = v10;
  MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v11 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v11);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v12 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v12);
  v51[1] = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v14 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v14);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v15 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v16 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v16);
  v17 = sub_23C34E64C();
  v18 = sub_23C34E010();
  v19 = MEMORY[0x24261C66C](v7, v15);
  v20 = MEMORY[0x24BDF4700];
  v72[0] = v19;
  v72[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v17);
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v18, v72);
  v21 = sub_23C34E64C();
  v22 = MEMORY[0x24261C66C](v20, v21);
  *(_QWORD *)&v74 = v21;
  *((_QWORD *)&v74 + 1) = v22;
  MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BDF2F10], 0);
  v23 = sub_23C34DE30();
  *(_QWORD *)&v74 = v21;
  *((_QWORD *)&v74 + 1) = v22;
  v71[0] = swift_getOpaqueTypeConformance2();
  v71[1] = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v24 = MEMORY[0x24BDED308];
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v23, v71);
  *(_QWORD *)&v74 = v23;
  *((_QWORD *)&v74 + 1) = v25;
  v26 = MEMORY[0x24261C60C](255, &v74, MEMORY[0x24BDF2550], 0);
  v27 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v74 = v13;
  *((_QWORD *)&v74 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v75 = v26;
  *((_QWORD *)&v75 + 1) = v27;
  *(_QWORD *)&v76 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v28 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v28);
  sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  sub_23C34DDD0();
  v29 = *(_QWORD *)(a2 + 24);
  sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
  swift_getTupleTypeMetadata3();
  v30 = sub_23C34E700();
  MEMORY[0x24261C66C](v7, v30);
  v31 = sub_23C34E64C();
  sub_23C34E0DC();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8];
  v33 = sub_23C34DE30();
  v34 = sub_23C34DE30();
  v35 = sub_23C34DE30();
  v36 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v31);
  v37 = sub_23C27FEE4(&qword_256B58D68, v32, MEMORY[0x24BDF02F0]);
  v70[0] = v36;
  v70[1] = v37;
  v69[0] = MEMORY[0x24261C66C](v24, v33, v70);
  v69[1] = v37;
  v68[0] = MEMORY[0x24261C66C](v24, v34, v69);
  v68[1] = v37;
  MEMORY[0x24261C66C](v24, v35, v68);
  v38 = sub_23C34DD34();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)v51 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)v51 - v43;
  v45 = v3[5];
  v78 = v3[4];
  v79 = v45;
  v80 = *((_QWORD *)v3 + 12);
  v46 = v3[1];
  v74 = *v3;
  v75 = v46;
  v47 = v3[3];
  v76 = v3[2];
  v77 = v47;
  sub_23C34E160();
  v59 = v52;
  v60 = v29;
  v61 = v54;
  v62 = v56;
  v63 = *(_OWORD *)(a2 + 48);
  v48 = *(_QWORD *)(a2 + 72);
  v64 = v55;
  v65 = v48;
  v66 = &v74;
  v67 = v57;
  sub_23C328F40();
  MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v38);
  sub_23C28958C((uint64_t)v42, v38, (uint64_t)v44);
  v49 = *(void (**)(char *, uint64_t))(v39 + 8);
  v49(v42, v38);
  sub_23C287D30((uint64_t)v44, v38, v58);
  return ((uint64_t (*)(char *, uint64_t))v49)(v44, v38);
}

void sub_23C2B34D0(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  _QWORD v109[2];
  _QWORD v110[2];
  _QWORD v111[3];

  v77 = a2;
  v78 = a8;
  v75 = a1;
  v76 = a7;
  v73 = a6;
  v82 = a4;
  v83 = a5;
  v79 = a9;
  v74 = a11;
  v72 = a10;
  v80 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  sub_23C34E130();
  v81 = a3;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  v14 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v13);
  v15 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v16 = sub_23C34DE30();
  v111[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  v111[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v16, v111);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v102 = a5;
  *((_QWORD *)&v102 + 1) = a10;
  MEMORY[0x24261C60C](255, &v102, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v17 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v17);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v18 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v18);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v20 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v20);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v21 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v22 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v22);
  v23 = sub_23C34E64C();
  v24 = sub_23C34E010();
  v25 = MEMORY[0x24261C66C](v14, v21);
  v26 = MEMORY[0x24BDF4700];
  v27 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v23);
  v110[0] = v25;
  v110[1] = v27;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v24, v110);
  v28 = sub_23C34E64C();
  v29 = MEMORY[0x24261C66C](v26, v28);
  *(_QWORD *)&v102 = v28;
  *((_QWORD *)&v102 + 1) = v29;
  MEMORY[0x24261C60C](255, &v102, MEMORY[0x24BDF2F10], 0);
  v30 = sub_23C34DE30();
  *(_QWORD *)&v102 = v28;
  *((_QWORD *)&v102 + 1) = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v32 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v109[0] = OpaqueTypeConformance2;
  v109[1] = v32;
  v33 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v30, v109);
  *(_QWORD *)&v102 = v30;
  *((_QWORD *)&v102 + 1) = v33;
  v34 = MEMORY[0x24261C60C](255, &v102, MEMORY[0x24BDF2550], 0);
  v35 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v102 = v19;
  *((_QWORD *)&v102 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v103 = v34;
  *((_QWORD *)&v103 + 1) = v35;
  *(_QWORD *)&v104 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v36 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v36);
  sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  sub_23C34DDD0();
  v37 = v82;
  sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
  swift_getTupleTypeMetadata3();
  v61 = sub_23C34E700();
  v60 = MEMORY[0x24261C66C](v14, v61);
  v38 = sub_23C34E64C();
  v62 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v60 - v39;
  sub_23C34E0DC();
  v41 = sub_23C34DE30();
  v42 = *(_QWORD *)(v41 - 8);
  v64 = v41;
  v65 = v42;
  MEMORY[0x24BDAC7A8](v41);
  v80 = (char *)&v60 - v43;
  v44 = sub_23C34DE30();
  v45 = *(_QWORD *)(v44 - 8);
  v67 = v44;
  v70 = v45;
  MEMORY[0x24BDAC7A8](v44);
  v63 = (char *)&v60 - v46;
  v69 = sub_23C34DE30();
  v71 = *(_QWORD *)(v69 - 8);
  v47 = MEMORY[0x24BDAC7A8](v69);
  v66 = (char *)&v60 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v68 = (char *)&v60 - v49;
  sub_23C34DFEC();
  v84 = v81;
  v85 = v37;
  v50 = v72;
  v51 = v73;
  v86 = v83;
  v87 = v73;
  v53 = v75;
  v52 = v76;
  v54 = v78;
  v88 = v76;
  v89 = v78;
  v55 = v74;
  v90 = v72;
  v91 = v74;
  v92 = v75;
  v93 = v77;
  sub_23C34E640();
  v56 = sub_23C34E184();
  v77 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v38);
  sub_23C318DEC(v56, 0x4034000000000000, 0, v38, v77);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v38);
  LODWORD(v62) = sub_23C34E19C();
  v57 = v53[5];
  v106 = v53[4];
  v107 = v57;
  v108 = *((_QWORD *)v53 + 12);
  v58 = v53[1];
  v102 = *v53;
  v103 = v58;
  v59 = v53[3];
  v104 = v53[2];
  v105 = v59;
  v94 = v81;
  v95 = v82;
  v96 = v83;
  v97 = v51;
  v98 = v52;
  v99 = v54;
  v100 = v50;
  v101 = v55;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B3D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v3 = *(_BYTE *)(v2 - 208);
  if (v3)
    v4 = 0;
  else
    v4 = *(_QWORD *)(v2 - 232);
  v5 = sub_23C27FEE4(&qword_256B58D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 328) = v5;
  v6 = *(_QWORD *)(v0 + 32);
  v7 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v6, v0 + 320);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = v3;
  v10 = *(_QWORD *)(v0 + 160);
  sub_23C318DEC(*(unsigned int *)(v0 + 16), v4, v9, v6, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 8))(v10, v6);
  v11 = sub_23C34E1B4();
  v12 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 - 176) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 - 160) = v12;
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 96);
  v13 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 - 240) = *(_OWORD *)v1;
  *(_OWORD *)(v2 - 224) = v13;
  v14 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 - 208) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 - 192) = v14;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v15 = *(_BYTE *)(v2 - 208);
  if (v15)
    v16 = 0;
  else
    v16 = *(_QWORD *)(v2 - 216);
  *(_QWORD *)(v0 + 304) = v7;
  *(_QWORD *)(v0 + 312) = v5;
  v17 = MEMORY[0x24BDED308];
  v18 = *(_QWORD *)(v0 + 56);
  v19 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v18, v0 + 304);
  v20 = *(_QWORD *)(v0 + 48);
  sub_23C318DEC(v11, v16, v15, v18, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8))(v8, v18);
  *(_QWORD *)(v0 + 288) = v19;
  *(_QWORD *)(v0 + 296) = v5;
  v21 = *(_QWORD *)(v0 + 72);
  MEMORY[0x24261C66C](v17, v21, v0 + 288);
  v22 = *(_QWORD *)(v0 + 64);
  sub_23C28958C(v20, v21, v22);
  v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 8);
  v23(v20, v21);
  sub_23C287D30(v22, v21, *(_QWORD *)(v0 + 152));
  return ((uint64_t (*)(uint64_t, uint64_t))v23)(v22, v21);
}

void sub_23C2B3F54(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD v57[8];
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[4];

  v58 = a8;
  v74 = a6;
  v75 = a7;
  v72 = a2;
  v65 = a1;
  v62 = a9;
  v71 = a11;
  v70 = a10;
  v13 = *(_QWORD *)(a4 - 8);
  v64 = a4;
  v57[3] = v13;
  MEMORY[0x24BDAC7A8](a1);
  v57[1] = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23C34DE30();
  v61 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v57[2] = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v57[4] = (char *)v57 - v18;
  v69 = v19;
  v60 = sub_23C34EA48();
  v76 = *(_QWORD *)(v60 - 8);
  v20 = MEMORY[0x24BDAC7A8](v60);
  v68 = (char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v77 = (char *)v57 - v22;
  v67 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v23 = sub_23C34E700();
  v24 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v23);
  v25 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v26 = sub_23C34DE30();
  v27 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v25);
  v28 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v95[0] = v27;
  v95[1] = v28;
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v26, v95);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v86 = a5;
  *((_QWORD *)&v86 + 1) = a10;
  MEMORY[0x24261C60C](255, &v86, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v29 = sub_23C34E700();
  MEMORY[0x24261C66C](v24, v29);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v30 = sub_23C34E700();
  MEMORY[0x24261C66C](v24, v30);
  v66 = (char *)sub_23C34E64C();
  v63 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  v73 = a3;
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v32 = sub_23C34E700();
  MEMORY[0x24261C66C](v24, v32);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v33 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v34 = sub_23C34E700();
  MEMORY[0x24261C66C](v24, v34);
  v35 = sub_23C34E64C();
  v36 = sub_23C34E010();
  v37 = MEMORY[0x24261C66C](v24, v33);
  v38 = MEMORY[0x24BDF4700];
  v39 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v35);
  v94[0] = v37;
  v94[1] = v39;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v36, v94);
  v40 = sub_23C34E64C();
  v41 = MEMORY[0x24261C66C](v38, v40);
  *(_QWORD *)&v86 = v40;
  *((_QWORD *)&v86 + 1) = v41;
  MEMORY[0x24261C60C](255, &v86, MEMORY[0x24BDF2F10], 0);
  v42 = sub_23C34DE30();
  *(_QWORD *)&v86 = v40;
  *((_QWORD *)&v86 + 1) = v41;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v44 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v93[0] = OpaqueTypeConformance2;
  v93[1] = v44;
  v45 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v42, v93);
  *(_QWORD *)&v86 = v42;
  *((_QWORD *)&v86 + 1) = v45;
  v46 = MEMORY[0x24261C60C](255, &v86, MEMORY[0x24BDF2550], 0);
  v47 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v86 = v31;
  *((_QWORD *)&v86 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v87 = v46;
  *((_QWORD *)&v87 + 1) = v47;
  *(_QWORD *)&v88 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v48 = sub_23C34E700();
  MEMORY[0x24261C66C](v24, v48);
  sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  v57[7] = sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  v67 = sub_23C34DDD0();
  v63 = *(_QWORD *)(v67 - 8);
  v49 = MEMORY[0x24BDAC7A8](v67);
  v59 = (char *)v57 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v57[5] = (char *)v57 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v66 = (char *)v57 - v53;
  v54 = v65[5];
  v90 = v65[4];
  v91 = v54;
  v92 = *((_QWORD *)v65 + 12);
  v55 = v65[1];
  v86 = *v65;
  v87 = v55;
  v56 = v65[2];
  v89 = v65[3];
  v88 = v56;
  v78 = a3;
  v79 = v64;
  v80 = a5;
  v81 = v74;
  v82 = v75;
  v83 = v58;
  v84 = v70;
  v85 = v71;
  type metadata accessor for WorkoutDetailView();
}

void sub_23C2B473C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_QWORD *)(v1 + 112) = a1;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v10 = *(unsigned __int8 *)(v1 + 1648);
  if (*(_BYTE *)(v1 + 1616))
    v11 = 0.0;
  else
    v11 = *(double *)(v1 + 1608) + *(double *)(v1 + 1592);
  if (v10 == 2)
    v12 = 0.3;
  else
    v12 = 0.4;
  v13 = dbl_23C353A40[v10 == 2];
  v14 = swift_allocObject();
  v15 = *(_QWORD *)(v1 + 200);
  v16 = v7;
  v17 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = v16;
  v18 = v6;
  *(_QWORD *)(v14 + 32) = v6;
  *(_QWORD *)(v14 + 40) = v3;
  v19 = v3;
  *(_QWORD *)(v14 + 48) = v8;
  *(_QWORD *)(v14 + 56) = v4;
  v20 = v4;
  *(_QWORD *)(v14 + 64) = v5;
  *(_QWORD *)(v14 + 72) = v2;
  *(double *)(v14 + 80) = v11;
  *(double *)(v14 + 88) = v13;
  *(double *)(v14 + 96) = v12;
  *(_QWORD *)(v1 + 256) = v15;
  *(_QWORD *)(v1 + 264) = v16;
  v21 = v16;
  *(_QWORD *)(v1 + 272) = v18;
  *(_QWORD *)(v1 + 280) = v19;
  *(_QWORD *)(v1 + 288) = v8;
  *(_QWORD *)(v1 + 296) = v4;
  *(_QWORD *)(v1 + 304) = v5;
  *(_QWORD *)(v1 + 312) = v2;
  v22 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 320) = v17;
  *(_QWORD *)(v1 + 328) = v22;
  v23 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 96) = v18;
  sub_23C2B4E2C((uint64_t)sub_23C2C0D28, v1 + 240, v18, v23, v11, v13, v12, v5);
  swift_release();
  v24 = sub_23C28943C(&qword_256B590F0, &qword_256B58D48, MEMORY[0x24BDEB9A8]);
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDF5428], *(_QWORD *)(v1 + 56));
  *(_QWORD *)(v9 - 224) = v24;
  *(_QWORD *)(v9 - 216) = v25;
  v26 = *(_QWORD *)(v1 + 152);
  v27 = MEMORY[0x24261C66C](MEMORY[0x24BDEC550], v26, v9 - 224);
  v28 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 48) = v27;
  sub_23C28958C(v23, v26, v28);
  v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 120) + 8);
  *(_QWORD *)(v1 + 56) = v29;
  v29(v23, v26);
  v30 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v1 + 1648) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v1 + 1664) = v30;
  *(_QWORD *)(v1 + 1680) = *(_QWORD *)(v17 + 96);
  v31 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v1 + 1584) = *(_OWORD *)v17;
  *(_OWORD *)(v1 + 1600) = v31;
  v32 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v1 + 1632) = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v1 + 1616) = v32;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  v33 = swift_release();
  v34 = MEMORY[0x24BDF1050];
  v35 = *(_QWORD *)(v1 + 80);
  if ((*(_BYTE *)(v1 + 1584) & 1) != 0)
  {
    v36 = *(_QWORD *)(v1 + 160);
    v37 = *(_QWORD *)(v1 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 88) + 56))(v36, 1, 1, v37);
    *(_QWORD *)(v1 + 336) = v20;
    *(_QWORD *)(v1 + 344) = v34;
    MEMORY[0x24261C66C](MEMORY[0x24BDED308], v37, v1 + 336);
  }
  else
  {
    v38 = *(_QWORD *)(v1 + 8);
    (*(void (**)(uint64_t))(v17 + 24))(v33);
    sub_23C34DE3C();
    sub_23C34E16C();
    v39 = *(_QWORD *)(v1 + 16);
    sub_23C34E424();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 24) + 8))(v38, v21);
    *(_QWORD *)(v9 - 240) = v20;
    *(_QWORD *)(v9 - 232) = v34;
    v40 = *(_QWORD *)(v1 + 168);
    MEMORY[0x24261C66C](MEMORY[0x24BDED308], v40, v9 - 240);
    v41 = *(_QWORD *)(v1 + 32);
    sub_23C28958C(v39, v40, v41);
    v42 = *(_QWORD *)(v1 + 88);
    v43 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v43(v39, v40);
    v44 = *(_QWORD *)(v1 + 160);
    sub_23C287D30(v41, v40, v44);
    v43(v41, v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v40);
    v36 = v44;
  }
  sub_23C2D7E50(v36, *(_QWORD *)(v1 + 232));
  v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 224) + 8);
  *(_QWORD *)(v1 + 88) = v45;
  v45(v36, v35);
  v46 = *(_OWORD *)(v17 + 80);
  *(_OWORD *)(v1 + 1648) = *(_OWORD *)(v17 + 64);
  *(_OWORD *)(v1 + 1664) = v46;
  *(_QWORD *)(v1 + 1680) = *(_QWORD *)(v17 + 96);
  v47 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v1 + 1584) = *(_OWORD *)v17;
  *(_OWORD *)(v1 + 1600) = v47;
  v48 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v1 + 1632) = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v1 + 1616) = v48;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v49 = *(_QWORD *)(v1 + 1624);
  v50 = *(_QWORD *)(v1 + 1632);
  v51 = *(_QWORD *)(v1 + 1640);
  v52 = (_QWORD *)swift_allocObject();
  v53 = *(_QWORD *)(v1 + 200);
  v54 = *(_QWORD *)(v1 + 208);
  v55 = *(_QWORD *)(v1 + 128);
  v52[2] = v53;
  v52[3] = v55;
  v56 = *(_QWORD *)(v1 + 96);
  v52[4] = v56;
  v52[5] = v54;
  v57 = *(_QWORD *)(v1 + 216);
  v52[6] = v57;
  v52[7] = v20;
  v59 = *(_QWORD *)(v1 + 176);
  v58 = *(_QWORD *)(v1 + 184);
  v52[8] = v59;
  v52[9] = v58;
  v52[10] = v49;
  v52[11] = v50;
  v52[12] = v51;
  sub_23C2B63B4((__int128 *)v17, *(_QWORD *)(v1 + 192), v53, v55, v56, v54, v57, v20, v1 + 888, v59, v58);
}

uint64_t sub_23C2B4B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t);

  swift_release();
  v6 = sub_23C34E184();
  sub_23C34DD28();
  *(_QWORD *)(v0 + 216) = v7;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  *(_BYTE *)(v0 + 864) = 0;
  v14 = sub_23C34E190();
  sub_23C34DD28();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = *(_BYTE *)(v0 + 864);
  *(_BYTE *)(v0 + 872) = 0;
  v24 = v1;
  if (qword_256B574F0 != -1)
    swift_once();
  v25 = qword_256B58CC0;
  swift_retain();
  v26 = sub_23C34E178();
  *(_QWORD *)(v0 + 1168) = v4;
  *(_QWORD *)(v0 + 1176) = v5;
  *(_QWORD *)(v0 + 1184) = v3;
  memcpy((void *)(v0 + 1192), (const void *)(v0 + 888), 0x118uLL);
  *(_BYTE *)(v0 + 1472) = v6;
  *(_DWORD *)(v0 + 1473) = *(_DWORD *)(v0 + 865);
  *(_DWORD *)(v0 + 1476) = *(_DWORD *)(v0 + 868);
  *(_QWORD *)(v0 + 1480) = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 1488) = v9;
  *(_QWORD *)(v0 + 1496) = v11;
  *(_QWORD *)(v0 + 1504) = v13;
  *(_BYTE *)(v0 + 1512) = v23;
  *(_DWORD *)(v0 + 1513) = *(_DWORD *)(v0 + 881);
  *(_DWORD *)(v0 + 1516) = *(_DWORD *)(v0 + 884);
  *(_BYTE *)(v0 + 1520) = v14;
  *(_DWORD *)(v0 + 1521) = *(_DWORD *)(v0 + 874);
  *(_DWORD *)(v0 + 1524) = *(_DWORD *)(v0 + 877);
  *(_QWORD *)(v0 + 1528) = v16;
  *(_QWORD *)(v0 + 1536) = v18;
  *(_QWORD *)(v0 + 1544) = v20;
  *(_QWORD *)(v0 + 1552) = v22;
  *(_BYTE *)(v0 + 1560) = *(_BYTE *)(v0 + 872);
  *(_QWORD *)(v0 + 1568) = v25;
  *(_BYTE *)(v0 + 1576) = v26;
  v27 = *(_QWORD *)(v0 + 72);
  v29 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16))(v27, v29, v28);
  *(_QWORD *)(v0 + 840) = v27;
  v30 = *(_QWORD *)(v0 + 232);
  v31 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 16))(v31, v30, v2);
  *(_QWORD *)(v0 + 848) = v31;
  memcpy((void *)(v0 + 424), (const void *)(v0 + 1168), 0x199uLL);
  *(_QWORD *)(v0 + 856) = v0 + 424;
  sub_23C2C0D34(v0 + 1168);
  *(_QWORD *)(v0 + 400) = v28;
  *(_QWORD *)(v0 + 408) = v2;
  *(_QWORD *)(v0 + 416) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D60);
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 360) = v24;
  *(_QWORD *)(v0 + 368) = MEMORY[0x24BDF1050];
  *(_QWORD *)(v0 + 352) = MEMORY[0x24261C66C](MEMORY[0x24BDED308], *(_QWORD *)(v0 + 168), v0 + 360);
  *(_QWORD *)(v0 + 384) = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v2, v0 + 352);
  *(_QWORD *)(v0 + 392) = sub_23C2C0E94();
  sub_23C328D8C((uint64_t *)(v0 + 840), 3uLL, v0 + 400);
  sub_23C2C0FF8(v0 + 1168);
  v32 = v30;
  v33 = *(void (**)(uint64_t, uint64_t))(v0 + 88);
  v33(v32, v2);
  v34 = *(void (**)(uint64_t, uint64_t))(v0 + 56);
  v34(v29, v28);
  memcpy((void *)(v0 + 1584), (const void *)(v0 + 424), 0x199uLL);
  sub_23C2C0FF8(v0 + 1584);
  v33(v31, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v27, v28);
}

uint64_t sub_23C2B4E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[5];

  *(double *)&v47[2] = a5;
  *(double *)&v47[3] = a6;
  *(double *)&v47[4] = a7;
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v9 = sub_23C34E700();
  v10 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v9);
  v11 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v12 = sub_23C34DE30();
  v47[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v11);
  v47[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v47);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v40 = a3;
  v41 = a8;
  MEMORY[0x24261C60C](255, &v40, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v13 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v13);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v14 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v14);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v16 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v16);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v17 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v18 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v18);
  v19 = sub_23C34E64C();
  v20 = sub_23C34E010();
  v21 = MEMORY[0x24261C66C](v10, v17);
  v22 = MEMORY[0x24BDF4700];
  v23 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v19);
  v46[0] = v21;
  v46[1] = v23;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v20, v46);
  v24 = sub_23C34E64C();
  v25 = MEMORY[0x24261C66C](v22, v24);
  v40 = v24;
  v41 = v25;
  MEMORY[0x24261C60C](255, &v40, MEMORY[0x24BDF2F10], 0);
  v26 = sub_23C34DE30();
  v40 = v24;
  v41 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v28 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v45[0] = OpaqueTypeConformance2;
  v45[1] = v28;
  v29 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v26, v45);
  v40 = v26;
  v41 = v29;
  v30 = MEMORY[0x24261C60C](255, &v40, MEMORY[0x24BDF2550], 0);
  v31 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v40 = v15;
  v41 = MEMORY[0x24BEE0D00];
  v42 = v30;
  v43 = v31;
  v44 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v32 = sub_23C34E700();
  MEMORY[0x24261C66C](v10, v32);
  sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  v33 = sub_23C34E700();
  v34 = sub_23C2C1264();
  v35 = MEMORY[0x24261C66C](v10, v33);
  return sub_23C2B53FC(a1, a2, (uint64_t)&type metadata for TwoColumnHStack, v33, v34, v35, a4);
}

uint64_t sub_23C2B53FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[10];

  v18[0] = a6;
  v18[1] = a7;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23C34DD64();
  MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_23C34DD70();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  MEMORY[0x24261C66C](MEMORY[0x24BDEB998], v16);
  return sub_23C34DDDC();
}

void sub_23C2B552C(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[3];

  v68 = a2;
  v69 = a8;
  v73 = a5;
  v74 = a7;
  v70 = a9;
  v71 = a6;
  v75 = a4;
  v76 = a3;
  v67 = a1;
  v66 = a11;
  v72 = a10;
  v65 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v64 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v11 = sub_23C34E700();
  v12 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v11);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v14 = sub_23C34E700();
  MEMORY[0x24261C66C](v12, v14);
  v15 = sub_23C34E64C();
  v16 = sub_23C34E010();
  v17 = MEMORY[0x24261C66C](v12, v13);
  v18 = MEMORY[0x24BDF4700];
  v104[0] = v17;
  v104[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v16, v104);
  v19 = sub_23C34E64C();
  v20 = MEMORY[0x24261C66C](v18, v19);
  *(_QWORD *)&v95 = v19;
  *((_QWORD *)&v95 + 1) = v20;
  MEMORY[0x24261C60C](255, &v95, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v22 = sub_23C34DE30();
  *(_QWORD *)&v95 = v19;
  *((_QWORD *)&v95 + 1) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = sub_23C27FEE4(&qword_256B58D20, v21, MEMORY[0x24BDF1078]);
  v103[0] = OpaqueTypeConformance2;
  v103[1] = v24;
  v25 = MEMORY[0x24BDED308];
  v26 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v22, v103);
  *(_QWORD *)&v95 = v22;
  *((_QWORD *)&v95 + 1) = v26;
  v27 = MEMORY[0x24261C60C](255, &v95, MEMORY[0x24BDF2550], 0);
  v28 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v95 = v64;
  *((_QWORD *)&v95 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v96 = v27;
  *((_QWORD *)&v96 + 1) = v28;
  *(_QWORD *)&v97 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v29 = sub_23C34E700();
  MEMORY[0x24261C66C](v12, v29);
  v30 = sub_23C34E64C();
  v31 = *(_QWORD *)(v30 - 8);
  v64 = v30;
  v65 = v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v62 = (char *)&v57 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v63 = (char *)&v57 - v34;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v35 = v71;
  swift_getTupleTypeMetadata2();
  v36 = sub_23C34E700();
  MEMORY[0x24261C66C](v12, v36);
  v37 = sub_23C34E64C();
  v38 = sub_23C34DE30();
  v39 = MEMORY[0x24261C66C](v18, v37);
  v40 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v102[0] = v39;
  v102[1] = v40;
  MEMORY[0x24261C66C](v25, v38, v102);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v42 = v72;
  v41 = v73;
  *(_QWORD *)&v95 = v73;
  *((_QWORD *)&v95 + 1) = v72;
  MEMORY[0x24261C60C](255, &v95, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v43 = sub_23C34E700();
  MEMORY[0x24261C66C](v12, v43);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v44 = sub_23C34E700();
  MEMORY[0x24261C66C](v12, v44);
  v45 = sub_23C34E64C();
  v58 = *(_QWORD *)(v45 - 8);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v57 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v50 = (char *)&v57 - v49;
  v59 = (char *)&v57 - v49;
  sub_23C34DFEC();
  v77 = v76;
  v78 = v75;
  v79 = v41;
  v80 = v35;
  v51 = v69;
  v81 = v74;
  v82 = v69;
  v52 = v66;
  v83 = v42;
  v84 = v66;
  v53 = v67;
  v85 = v67;
  v86 = v68;
  sub_23C34E640();
  v60 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v45);
  sub_23C28958C((uint64_t)v48, v45, (uint64_t)v50);
  v61 = *(void (**)(char *, uint64_t))(v58 + 8);
  v61(v48, v45);
  v54 = v53[5];
  v99 = v53[4];
  v100 = v54;
  v101 = *((_QWORD *)v53 + 12);
  v55 = v53[1];
  v95 = *v53;
  v96 = v55;
  v56 = v53[3];
  v97 = v53[2];
  v98 = v56;
  type metadata accessor for WorkoutDetail();
  v87 = v76;
  v88 = v75;
  v89 = v73;
  v90 = v71;
  v91 = v74;
  v92 = v51;
  v93 = v72;
  v94 = v52;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B5C40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v8 = v1[5];
  sub_23C2A8C74(v6, v2, 0, a1, v8);
  v9 = v1[7];
  v10 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v9);
  v11 = v1[6];
  sub_23C28958C(v8, v9, v11);
  v12 = v1[8];
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v8, v9);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v15 = v1[2];
  v14(v4, v15, v3);
  *(_QWORD *)(v7 - 240) = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v8, v11, v9);
  *(_QWORD *)(v7 - 232) = v8;
  v1[34] = v3;
  v1[35] = v9;
  v1[32] = v1[3];
  v1[33] = v10;
  sub_23C328D8C((uint64_t *)(v7 - 240), 2uLL, (uint64_t)(v1 + 34));
  v13(v11, v9);
  v16 = (void (*)(uint64_t, uint64_t))v1[4];
  v16(v15, v3);
  v13(v8, v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v4, v3);
}

void sub_23C2B5D50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _QWORD v33[7];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[6];
  uint64_t v55;
  _QWORD v56[3];

  v37 = a7;
  v38 = a8;
  v34 = a4;
  v36 = a2;
  v42 = a9;
  v35 = a11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v54[0] = a5;
  *((_QWORD *)&v54[0] + 1) = a10;
  MEMORY[0x24261C60C](255, v54, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v15 = sub_23C34E700();
  v16 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v15);
  v17 = sub_23C34E64C();
  v18 = *(_QWORD *)(v17 - 8);
  v40 = v17;
  v41 = v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v45 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v39 = (char *)v33 - v21;
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v22 = sub_23C34E700();
  MEMORY[0x24261C66C](v16, v22);
  v23 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v24 = sub_23C34DE30();
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v23);
  v26 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v56[0] = v25;
  v56[1] = v26;
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v24, v56);
  v27 = sub_23C34E64C();
  v33[5] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v44 = sub_23C34DE30();
  v33[6] = *(_QWORD *)(v44 - 8);
  v28 = MEMORY[0x24BDAC7A8](v44);
  MEMORY[0x24BDAC7A8](v28);
  v43 = (char *)v33 - v29;
  v30 = *(_OWORD *)(a1 + 80);
  v54[4] = *(_OWORD *)(a1 + 64);
  v54[5] = v30;
  v55 = *(_QWORD *)(a1 + 96);
  v31 = *(_OWORD *)(a1 + 16);
  v54[0] = *(_OWORD *)a1;
  v54[1] = v31;
  v32 = *(_OWORD *)(a1 + 48);
  v54[2] = *(_OWORD *)(a1 + 32);
  v54[3] = v32;
  v46 = a3;
  v47 = v34;
  v48 = a5;
  v49 = a6;
  v50 = v37;
  v51 = v38;
  v52 = a10;
  v53 = v35;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B6078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  void (*v47)(_QWORD, uint64_t);

  v9 = *(_QWORD *)(v1 + 72);
  sub_23C2A50D0(v9, a1, v4);
  sub_23C34E190();
  v10 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v3);
  sub_23C34E4B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 40) + 8))(v4, v3);
  v11 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v1 + 208) = v10;
  *(_QWORD *)(v1 + 216) = v11;
  v12 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 80) = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v12, v1 + 208);
  *(_QWORD *)(v1 + 136) = v2;
  sub_23C28958C(v2, v12, v6);
  v13 = *(_QWORD *)(v1 + 48);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  *(_QWORD *)(v1 + 88) = v14;
  v14(v2, v12);
  v15 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v7 - 176) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v7 - 160) = v15;
  *(_QWORD *)(v7 - 144) = *(_QWORD *)(v5 + 96);
  v16 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v7 - 240) = *(_OWORD *)v5;
  *(_OWORD *)(v7 - 224) = v16;
  v17 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v7 - 208) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v7 - 192) = v17;
  v18 = v9;
  sub_23C2A5B04(v9, a1, (uint64_t *)(v1 + 224));
  v19 = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v1 + 232);
  *(_DWORD *)(v1 + 36) = *(unsigned __int8 *)(v1 + 240);
  v20 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v1 + 264);
  *(_DWORD *)(v1 + 56) = *(unsigned __int8 *)(v1 + 272);
  *(_DWORD *)(v1 + 12) = sub_23C34E190();
  sub_23C34DD28();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)(v7 - 176) = *(_OWORD *)(v5 + 64);
  *(_OWORD *)(v7 - 160) = v29;
  *(_QWORD *)(v7 - 144) = *(_QWORD *)(v5 + 96);
  v30 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v7 - 240) = *(_OWORD *)v5;
  *(_OWORD *)(v7 - 224) = v30;
  v31 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v7 - 208) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v7 - 192) = v31;
  v32 = *(_QWORD *)(v1 + 152);
  sub_23C2A6A78(v18, a1, v32);
  v33 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 16) = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v33);
  v34 = *(_QWORD *)(v1 + 96);
  sub_23C28958C(v32, v33, v34);
  v35 = *(_QWORD *)(v1 + 112);
  v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  *(_QWORD *)(v1 + 72) = v36;
  v36(v32, v33);
  v37 = *(void (**)(uint64_t, _QWORD, _QWORD))(v13 + 16);
  v38 = *(_QWORD *)(v1 + 136);
  v37(v38, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 144));
  v39 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v7 - 240) = v19;
  *(_QWORD *)(v7 - 232) = v39;
  LODWORD(v12) = *(_DWORD *)(v1 + 36);
  *(_BYTE *)(v7 - 224) = v12;
  v40 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v7 - 216) = v20;
  *(_QWORD *)(v7 - 208) = v40;
  *(_QWORD *)(v7 - 200) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v7 - 192) = *(_DWORD *)(v1 + 56);
  *(_BYTE *)(v7 - 184) = *(_DWORD *)(v1 + 12);
  *(_QWORD *)(v7 - 176) = v22;
  *(_QWORD *)(v7 - 168) = v24;
  *(_QWORD *)(v7 - 160) = v26;
  *(_QWORD *)(v7 - 152) = v28;
  *(_BYTE *)(v7 - 144) = 0;
  *(_QWORD *)(v1 + 224) = v38;
  *(_QWORD *)(v1 + 232) = v7 - 240;
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v42 = *(_QWORD *)(v1 + 152);
  v41(v42, v34, v33);
  *(_QWORD *)(v1 + 240) = v42;
  sub_23C289550(v19, v39, v12);
  swift_bridgeObjectRetain();
  swift_retain();
  v43 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 184) = v43;
  *(_QWORD *)(v1 + 192) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D50);
  *(_QWORD *)(v1 + 200) = v33;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v1 + 80);
  v44 = sub_23C2C0C08();
  v45 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 168) = v44;
  *(_QWORD *)(v1 + 176) = v45;
  sub_23C328D8C((uint64_t *)(v1 + 224), 3uLL, v1 + 184);
  v46 = *(void (**)(uint64_t, uint64_t))(v1 + 72);
  v46(v34, v33);
  sub_23C289340(v19, v39, v12);
  swift_release();
  swift_bridgeObjectRelease();
  v47 = *(void (**)(_QWORD, uint64_t))(v1 + 88);
  v47(*(_QWORD *)(v1 + 128), v43);
  v46(*(_QWORD *)(v1 + 152), v33);
  sub_23C289340(*(_QWORD *)(v7 - 240), *(_QWORD *)(v7 - 232), *(_BYTE *)(v7 - 224));
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(_QWORD, uint64_t))v47)(*(_QWORD *)(v1 + 136), v43);
}

void sub_23C2B63B4(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[58];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v23[10] = a2;
  v23[11] = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v18);
  v23[9] = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[5];
  v28 = a1[4];
  v29 = v20;
  v30 = *((_QWORD *)a1 + 12);
  v21 = a1[1];
  v24 = *a1;
  v25 = v21;
  v22 = a1[3];
  v26 = a1[2];
  v27 = v22;
  v31 = a3;
  v32 = a4;
  v33 = a5;
  v34 = a6;
  v35 = a7;
  v36 = a8;
  v37 = a10;
  v38 = a11;
  type metadata accessor for WorkoutDetailView();
}

_QWORD *sub_23C2B6484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(v1 + 464) & 1) != 0)
  {
    sub_23C2C11C8(v1 + 464);
    sub_23C2894C8(v1 + 464, v1 + 928, &qword_256B59150);
    v4 = *(_QWORD *)(v1 + 80);
  }
  else
  {
    v5 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v1 + 992) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v1 + 1008) = v5;
    *(_QWORD *)(v1 + 1024) = *(_QWORD *)(v2 + 96);
    v6 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v1 + 928) = *(_OWORD *)v2;
    *(_OWORD *)(v1 + 944) = v6;
    v7 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v1 + 960) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v1 + 976) = v7;
    v8 = type metadata accessor for WorkoutDetail();
    v9 = *(_QWORD *)(v1 + 80);
    v10 = v9 + *(int *)(v8 + 80);
    v11 = v9 + *(int *)(v8 + 24);
    v12 = sub_23C34D86C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(_QWORD *)(v1 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v11, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
    sub_23C2AE4D8(v10, v14, a1, v1 + 464);
    sub_23C285184(v14, &qword_256B58910);
    sub_23C2894C8(v1 + 464, v1 + 744, &qword_256B58E38);
    sub_23C2894C8(v1 + 744, v1 + 464, &qword_256B58E38);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))nullsub_1)(v1 + 464, v15, v16, v17, v18, v19, v20, v21);
    sub_23C2894C8(v1 + 464, v1 + 928, &qword_256B59150);
    v4 = v9;
  }
  v22 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 528) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v1 + 544) = v22;
  *(_QWORD *)(v1 + 560) = *(_QWORD *)(v2 + 96);
  v23 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 464) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 480) = v23;
  v24 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v1 + 496) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v1 + 512) = v24;
  sub_23C2AF3B4(v4, v1 + 744);
  v25 = *(_QWORD *)(v1 + 744);
  v26 = *(_QWORD *)(v1 + 752);
  v27 = *(_QWORD *)(v1 + 760);
  v28 = *(_QWORD *)(v1 + 768);
  v29 = *(_QWORD *)(v1 + 776);
  v30 = *(_QWORD *)(v1 + 784);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(v1 + 792);
  *(_QWORD *)(v1 + 80) = v25;
  v31 = *(_QWORD *)(v1 + 800);
  v32 = *(_QWORD *)(v1 + 808);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v1 + 816);
  *(_QWORD *)(v1 + 64) = v32;
  v33 = *(_QWORD *)(v1 + 824);
  *(_QWORD *)(v1 + 40) = v31;
  *(_QWORD *)(v1 + 48) = v33;
  v34 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 528) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v1 + 544) = v34;
  *(_QWORD *)(v1 + 560) = *(_QWORD *)(v2 + 96);
  v35 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 464) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 480) = v35;
  v36 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v1 + 496) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v1 + 512) = v36;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if (*(_BYTE *)(v1 + 464) == 1)
    *(_QWORD *)(v1 + 32) = sub_23C34E538();
  else
    *(_QWORD *)(v1 + 32) = 0;
  sub_23C2894C8(v1 + 928, v1 + 96, &qword_256B59150);
  sub_23C2894C8(v1 + 96, v1 + 280, &qword_256B59150);
  sub_23C2894C8(v1 + 280, v1 + 464, &qword_256B59150);
  v37 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 648) = v37;
  *(_QWORD *)(v1 + 656) = v26;
  *(_QWORD *)(v1 + 664) = v27;
  *(_QWORD *)v1 = v27;
  *(_QWORD *)(v1 + 8) = v28;
  *(_QWORD *)(v1 + 672) = v28;
  *(_QWORD *)(v1 + 16) = v30;
  *(_QWORD *)(v1 + 24) = v29;
  *(_QWORD *)(v1 + 680) = v29;
  *(_QWORD *)(v1 + 688) = v30;
  v38 = *(_QWORD *)(v1 + 64);
  v39 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 696) = v39;
  v41 = *(_QWORD *)(v1 + 40);
  v40 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 704) = v41;
  *(_QWORD *)(v1 + 712) = v38;
  v42 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 720) = v42;
  *(_QWORD *)(v1 + 728) = v40;
  *(_QWORD *)(v1 + 736) = *(_QWORD *)(v1 + 32);
  memcpy(*(void **)(v1 + 88), (const void *)(v1 + 464), 0x118uLL);
  sub_23C2C115C((_QWORD *)(v1 + 280), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2C0E2C);
  v43 = v27;
  v44 = v28;
  v46 = *(_QWORD *)(v1 + 16);
  v45 = *(_QWORD *)(v1 + 24);
  sub_23C2BED4C(v37, v26, v43, v44, v45, v46, v39, v41, v38, v42);
  sub_23C2BEEF4(v37, v26, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), v45, v46, v39, v41, v38, v42);
  sub_23C2894C8(v1 + 96, v1 + 744, &qword_256B59150);
  return sub_23C2C115C((_QWORD *)(v1 + 744), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2C10F4);
}

uint64_t sub_23C2B6800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[2];
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;

  v71 = a3;
  v6 = type metadata accessor for WorkoutDetail();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = v3[5];
  v93 = v3[4];
  v94 = v9;
  v95 = *((_QWORD *)v3 + 12);
  v10 = v3[1];
  v89 = *v3;
  v90 = v10;
  v11 = v3[3];
  v91 = v3[2];
  v92 = v11;
  sub_23C282F90(a1, (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetail);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  v15 = *(_QWORD *)(a2 + 16);
  v70 = *(_QWORD *)(a2 + 24);
  v14 = v70;
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = v14;
  v16 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v13 + 32) = v16;
  v17 = *(_OWORD *)(a2 + 64);
  v18 = v93;
  v19 = v94;
  v20 = v91;
  *(_OWORD *)(v13 + 128) = v92;
  *(_OWORD *)(v13 + 144) = v18;
  *(_OWORD *)(v13 + 160) = v19;
  v21 = v89;
  v22 = v90;
  *(_OWORD *)(v13 + 64) = v17;
  *(_OWORD *)(v13 + 80) = v21;
  v67 = *(_OWORD *)(a2 + 40);
  v68 = v17;
  *(_OWORD *)(v13 + 40) = v67;
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(v13 + 176) = v95;
  *(_OWORD *)(v13 + 96) = v22;
  *(_OWORD *)(v13 + 112) = v20;
  sub_23C2851C0((uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetail);
  sub_23C2BD424((uint64_t)&v89);
  v69 = sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v23 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v23);
  v24 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v25 = sub_23C34DE30();
  v26 = MEMORY[0x24BDF4700];
  v27 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v24);
  v28 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v84[0] = v27;
  v84[1] = v28;
  v29 = MEMORY[0x24BDED308];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v25, v84);
  v30 = sub_23C34E64C();
  v31 = sub_23C34DE30();
  v83[0] = MEMORY[0x24261C66C](v26, v30);
  v83[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v29, v31, v83);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v76 = v16;
  v77 = v68;
  MEMORY[0x24261C60C](255, &v76, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v32 = sub_23C34E700();
  v33 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v32);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v34 = sub_23C34E700();
  MEMORY[0x24261C66C](v33, v34);
  v85 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v36 = sub_23C34E700();
  MEMORY[0x24261C66C](v33, v36);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v37 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v38 = sub_23C34E700();
  MEMORY[0x24261C66C](v33, v38);
  v39 = sub_23C34E64C();
  v40 = sub_23C34E010();
  v41 = MEMORY[0x24261C66C](v33, v37);
  v42 = MEMORY[0x24BDF4700];
  v43 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v39);
  v82[0] = v41;
  v82[1] = v43;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v40, v82);
  v44 = sub_23C34E64C();
  v45 = MEMORY[0x24261C66C](v42, v44);
  v76 = v44;
  v77 = v45;
  MEMORY[0x24261C60C](255, &v76, MEMORY[0x24BDF2F10], 0);
  v46 = sub_23C34DE30();
  v76 = v44;
  v77 = v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v48 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v81[0] = OpaqueTypeConformance2;
  v81[1] = v48;
  v49 = MEMORY[0x24BDED308];
  v50 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v46, v81);
  v76 = v46;
  v77 = v50;
  v51 = MEMORY[0x24261C60C](255, &v76, MEMORY[0x24BDF2550], 0);
  v52 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v76 = v35;
  v77 = MEMORY[0x24BEE0D00];
  v78 = v51;
  v79 = v52;
  v80 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v53 = sub_23C34E700();
  MEMORY[0x24261C66C](v33, v53);
  v86 = sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  v87 = sub_23C34EA48();
  v88 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v54 = sub_23C34E700();
  MEMORY[0x24261C66C](v33, v54);
  v55 = sub_23C34E64C();
  sub_23C34E0DC();
  v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8];
  v57 = sub_23C34DE30();
  v58 = sub_23C34DE30();
  v59 = sub_23C34DE30();
  v60 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v55);
  v61 = sub_23C27FEE4(&qword_256B58D68, v56, MEMORY[0x24BDF02F0]);
  v75[0] = v60;
  v75[1] = v61;
  v74[0] = MEMORY[0x24261C66C](v49, v57, v75);
  v74[1] = v61;
  v73[0] = MEMORY[0x24261C66C](v49, v58, v74);
  v73[1] = v61;
  MEMORY[0x24261C66C](v49, v59, v73);
  v62 = sub_23C34DD34();
  v63 = sub_23C34DE30();
  v72[0] = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v62);
  v72[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24261C66C](v49, v63, v72);
  v85 = sub_23C34DDE8();
  v86 = v64;
  v65 = sub_23C34DDF4();
  MEMORY[0x24261C66C](MEMORY[0x24BDEC6F8], v65);
  sub_23C28958C((uint64_t)&v85, v65, (uint64_t)&v76);
  swift_release();
  v85 = v76;
  v86 = v77;
  sub_23C287D30((uint64_t)&v85, v65, v71);
  return swift_release();
}

uint64_t sub_23C2B7110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[7];

  v76 = a8;
  v77 = a3;
  v70 = a5;
  v71 = a7;
  v68 = a6;
  v74 = a2;
  v75 = a1;
  v78 = a9;
  v73 = a12;
  v72 = a10;
  v69 = a11;
  v66 = sub_23C34E130();
  v67 = a4;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v14 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v14);
  v15 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v16 = sub_23C34DE30();
  v17 = MEMORY[0x24BDF4700];
  v102[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  v102[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v18 = MEMORY[0x24BDED308];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v16, v102);
  v19 = sub_23C34E64C();
  v20 = sub_23C34DE30();
  v101[0] = MEMORY[0x24261C66C](v17, v19);
  v101[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v18, v20, v101);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v94 = a6;
  v95 = a11;
  MEMORY[0x24261C60C](255, &v94, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v21 = sub_23C34E700();
  v22 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v21);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v23 = sub_23C34E700();
  MEMORY[0x24261C66C](v22, v23);
  v102[2] = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v25 = sub_23C34E700();
  MEMORY[0x24261C66C](v22, v25);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v26 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v27 = sub_23C34E700();
  MEMORY[0x24261C66C](v22, v27);
  v28 = sub_23C34E64C();
  v29 = sub_23C34E010();
  v30 = MEMORY[0x24261C66C](v22, v26);
  v31 = MEMORY[0x24BDF4700];
  v32 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v28);
  v100[0] = v30;
  v100[1] = v32;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v29, v100);
  v33 = sub_23C34E64C();
  v34 = MEMORY[0x24261C66C](v31, v33);
  v94 = v33;
  v95 = v34;
  MEMORY[0x24261C60C](255, &v94, MEMORY[0x24BDF2F10], 0);
  v35 = sub_23C34DE30();
  v94 = v33;
  v95 = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v37 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v99[0] = OpaqueTypeConformance2;
  v99[1] = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v35, v99);
  v94 = v35;
  v95 = v39;
  v40 = MEMORY[0x24261C60C](255, &v94, MEMORY[0x24BDF2550], 0);
  v41 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v94 = v24;
  v95 = MEMORY[0x24BEE0D00];
  v96 = v40;
  v97 = v41;
  v98 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v42 = sub_23C34E700();
  MEMORY[0x24261C66C](v22, v42);
  v102[3] = sub_23C34E64C();
  v43 = v70;
  sub_23C34DE30();
  sub_23C34DE30();
  v102[4] = sub_23C34EA48();
  v102[5] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v44 = sub_23C34E700();
  MEMORY[0x24261C66C](v22, v44);
  v45 = sub_23C34E64C();
  sub_23C34E0DC();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8];
  v47 = sub_23C34DE30();
  v48 = sub_23C34DE30();
  v49 = sub_23C34DE30();
  v50 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v45);
  v51 = sub_23C27FEE4(&qword_256B58D68, v46, MEMORY[0x24BDF02F0]);
  v93[0] = v50;
  v93[1] = v51;
  v92[0] = MEMORY[0x24261C66C](v38, v47, v93);
  v92[1] = v51;
  v91[0] = MEMORY[0x24261C66C](v38, v48, v92);
  v91[1] = v51;
  MEMORY[0x24261C66C](v38, v49, v91);
  v52 = sub_23C34DD34();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)&v65 - v54;
  v56 = sub_23C34DE30();
  v66 = *(_QWORD *)(v56 - 8);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v59 = (char *)&v65 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)&v65 - v60;
  sub_23C34E160();
  v79 = v67;
  v80 = v43;
  v81 = v68;
  v82 = v71;
  v83 = v76;
  v84 = v72;
  v85 = v69;
  v86 = v73;
  v87 = v74;
  v88 = v77;
  v89 = v75;
  sub_23C328F40();
  sub_23C34DE3C();
  sub_23C34E1C0();
  v62 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v52);
  sub_23C34E424();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
  v90[0] = v62;
  v90[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v56, v90);
  sub_23C28958C((uint64_t)v59, v56, (uint64_t)v61);
  v63 = *(void (**)(char *, uint64_t))(v66 + 8);
  v63(v59, v56);
  sub_23C287D30((uint64_t)v61, v56, v78);
  return ((uint64_t (*)(char *, uint64_t))v63)(v61, v56);
}

void sub_23C2B7A24(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t OpaqueTypeConformance2;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  _QWORD v116[2];
  _QWORD v117[2];
  _QWORD v118[2];
  _QWORD v119[3];

  v83 = a8;
  v84 = a3;
  v78 = a7;
  v88 = a5;
  v89 = a6;
  v87 = a4;
  v81 = a1;
  v82 = a2;
  v85 = a9;
  v80 = a12;
  v79 = a10;
  v77 = a11;
  v86 = (char *)sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v13);
  v14 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v15 = sub_23C34DE30();
  v16 = MEMORY[0x24BDF4700];
  v119[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v14);
  v119[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v17 = MEMORY[0x24BDED308];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v15, v119);
  v18 = sub_23C34E64C();
  v19 = sub_23C34DE30();
  v118[0] = MEMORY[0x24261C66C](v16, v18);
  v118[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v17, v19, v118);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v109 = a6;
  *((_QWORD *)&v109 + 1) = a11;
  MEMORY[0x24261C60C](255, &v109, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v20 = sub_23C34E700();
  v21 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v20);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v22 = sub_23C34E700();
  MEMORY[0x24261C66C](v21, v22);
  v101 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  v24 = v87;
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v25 = sub_23C34E700();
  MEMORY[0x24261C66C](v21, v25);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v26 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v27 = sub_23C34E700();
  MEMORY[0x24261C66C](v21, v27);
  v28 = sub_23C34E64C();
  v29 = sub_23C34E010();
  v30 = MEMORY[0x24261C66C](v21, v26);
  v31 = MEMORY[0x24BDF4700];
  v32 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v28);
  v117[0] = v30;
  v117[1] = v32;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v29, v117);
  v33 = sub_23C34E64C();
  v34 = MEMORY[0x24261C66C](v31, v33);
  *(_QWORD *)&v109 = v33;
  *((_QWORD *)&v109 + 1) = v34;
  MEMORY[0x24261C60C](255, &v109, MEMORY[0x24BDF2F10], 0);
  v35 = sub_23C34DE30();
  *(_QWORD *)&v109 = v33;
  *((_QWORD *)&v109 + 1) = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v37 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v116[0] = OpaqueTypeConformance2;
  v116[1] = v37;
  v38 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v35, v116);
  *(_QWORD *)&v109 = v35;
  *((_QWORD *)&v109 + 1) = v38;
  v39 = MEMORY[0x24261C60C](255, &v109, MEMORY[0x24BDF2550], 0);
  v40 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v109 = v23;
  *((_QWORD *)&v109 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v110 = v39;
  *((_QWORD *)&v110 + 1) = v40;
  *(_QWORD *)&v111 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v41 = sub_23C34E700();
  MEMORY[0x24261C66C](v21, v41);
  v102 = sub_23C34E64C();
  v42 = v88;
  sub_23C34DE30();
  sub_23C34DE30();
  v103 = sub_23C34EA48();
  v104 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v43 = sub_23C34E700();
  v66 = MEMORY[0x24261C66C](v21, v43);
  v44 = sub_23C34E64C();
  v67 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v66 - v45;
  sub_23C34E0DC();
  v47 = sub_23C34DE30();
  v48 = *(_QWORD *)(v47 - 8);
  v69 = v47;
  v70 = v48;
  MEMORY[0x24BDAC7A8](v47);
  v86 = (char *)&v66 - v49;
  v50 = sub_23C34DE30();
  v51 = *(_QWORD *)(v50 - 8);
  v72 = v50;
  v75 = v51;
  MEMORY[0x24BDAC7A8](v50);
  v68 = (char *)&v66 - v52;
  v74 = sub_23C34DE30();
  v76 = *(_QWORD *)(v74 - 8);
  v53 = MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)&v66 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v73 = (char *)&v66 - v55;
  sub_23C34DFEC();
  v90 = v24;
  v91 = v42;
  v57 = v78;
  v56 = v79;
  v92 = v89;
  v93 = v78;
  v58 = v83;
  v94 = v83;
  v95 = v79;
  v59 = v77;
  v61 = v80;
  v60 = v81;
  v96 = v77;
  v97 = v80;
  v98 = v81;
  v99 = v82;
  v100 = v84;
  sub_23C34E640();
  v62 = sub_23C34E184();
  v84 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v44);
  sub_23C318DEC(v62, 0x4056800000000000, 0, v44, v84);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v44);
  LODWORD(v82) = sub_23C34E19C();
  v63 = v60[5];
  v113 = v60[4];
  v114 = v63;
  v115 = *((_QWORD *)v60 + 12);
  v64 = v60[1];
  v109 = *v60;
  v110 = v64;
  v65 = v60[3];
  v111 = v60[2];
  v112 = v65;
  v101 = v87;
  v102 = v88;
  v103 = v89;
  v104 = v57;
  v105 = v58;
  v106 = v56;
  v107 = v59;
  v108 = v61;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B82C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v3 = *(_BYTE *)(v2 - 224);
  if (v3)
    v4 = 0;
  else
    v4 = *(_QWORD *)(v2 - 248);
  v5 = sub_23C27FEE4(&qword_256B58D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 344) = v5;
  v6 = MEMORY[0x24BDED308];
  v7 = *(_QWORD *)(v0 + 24);
  v8 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v7, v0 + 336);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = v3;
  v11 = *(_QWORD *)(v0 + 160);
  sub_23C318DEC(*(unsigned int *)(v0 + 128), v4, v10, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 8))(v11, v7);
  v12 = sub_23C34E1B4();
  v13 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 - 192) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 - 176) = v13;
  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v1 + 96);
  v14 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 - 256) = *(_OWORD *)v1;
  *(_OWORD *)(v2 - 240) = v14;
  v15 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 - 224) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 - 208) = v15;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  v16 = *(_BYTE *)(v2 - 224);
  if (v16)
    v17 = 0;
  else
    v17 = *(_QWORD *)(v2 - 232);
  *(_QWORD *)(v0 + 320) = v8;
  *(_QWORD *)(v0 + 328) = v5;
  v18 = v6;
  v19 = v6;
  v20 = *(_QWORD *)(v0 + 48);
  v21 = MEMORY[0x24261C66C](v19, v20, v0 + 320);
  v22 = *(_QWORD *)(v0 + 40);
  sub_23C318DEC(v12, v17, v16, v20, v21);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 8))(v9, v20);
  *(_QWORD *)(v0 + 304) = v21;
  *(_QWORD *)(v0 + 312) = v5;
  v23 = *(_QWORD *)(v0 + 64);
  MEMORY[0x24261C66C](v18, v23, v0 + 304);
  v24 = *(_QWORD *)(v0 + 56);
  sub_23C28958C(v22, v23, v24);
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
  v25(v22, v23);
  sub_23C287D30(v24, v23, *(_QWORD *)(v0 + 152));
  return ((uint64_t (*)(uint64_t, uint64_t))v25)(v24, v23);
}

void sub_23C2B84D8(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _QWORD v78[13];
  __int128 *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  _QWORD v128[2];
  _QWORD v129[2];
  _QWORD v130[2];
  _QWORD v131[46];

  v95 = a8;
  v99 = a6;
  v100 = a7;
  v79 = a1;
  v80 = a3;
  v90 = a2;
  v83 = a9;
  v97 = a12;
  v96 = a11;
  v94 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v101 = a5;
  v78[2] = v13;
  MEMORY[0x24BDAC7A8](a1);
  v78[1] = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23C34DE30();
  v78[4] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v78[0] = (char *)v78 - v16;
  v92 = v17;
  v18 = sub_23C34DE30();
  v81 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v78[3] = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v78[5] = (char *)v78 - v21;
  v89 = v22;
  v93 = sub_23C34EA48();
  v82 = *(_QWORD *)(v93 - 8);
  v23 = MEMORY[0x24BDAC7A8](v93);
  v86 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v91 = (char *)v78 - v25;
  v88 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v87 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  v98 = a4;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v26 = sub_23C34E700();
  v27 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v26);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v28 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v29 = sub_23C34E700();
  MEMORY[0x24261C66C](v27, v29);
  v30 = sub_23C34E64C();
  v31 = sub_23C34E010();
  v32 = MEMORY[0x24261C66C](v27, v28);
  v33 = MEMORY[0x24BDF4700];
  v34 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v30);
  v131[0] = v32;
  v131[1] = v34;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v31, v131);
  v35 = sub_23C34E64C();
  v36 = MEMORY[0x24261C66C](v33, v35);
  *(_QWORD *)&v121 = v35;
  *((_QWORD *)&v121 + 1) = v36;
  MEMORY[0x24261C60C](255, &v121, MEMORY[0x24BDF2F10], 0);
  sub_23C34E130();
  v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v38 = sub_23C34DE30();
  *(_QWORD *)&v121 = v35;
  *((_QWORD *)&v121 + 1) = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v40 = sub_23C27FEE4(&qword_256B58D20, v37, MEMORY[0x24BDF1078]);
  v130[0] = OpaqueTypeConformance2;
  v130[1] = v40;
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v38, v130);
  *(_QWORD *)&v121 = v38;
  *((_QWORD *)&v121 + 1) = v42;
  v43 = MEMORY[0x24261C60C](255, &v121, MEMORY[0x24BDF2550], 0);
  v44 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v121 = v87;
  *((_QWORD *)&v121 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v122 = v43;
  *((_QWORD *)&v122 + 1) = v44;
  *(_QWORD *)&v123 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v45 = sub_23C34E700();
  MEMORY[0x24261C66C](v27, v45);
  v88 = sub_23C34E64C();
  v84 = *(_QWORD *)(v88 - 8);
  v46 = MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)v78 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v85 = (char *)v78 - v48;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v49 = sub_23C34E700();
  v50 = v27;
  MEMORY[0x24261C66C](v27, v49);
  v51 = sub_23C34E64C();
  v52 = sub_23C34DE30();
  v53 = MEMORY[0x24BDF4700];
  v54 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v51);
  v55 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v129[0] = v54;
  v129[1] = v55;
  MEMORY[0x24261C66C](v41, v52, v129);
  v56 = sub_23C34E64C();
  v57 = sub_23C34DE30();
  v128[0] = MEMORY[0x24261C66C](v53, v56);
  v128[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v41, v57, v128);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v58 = v99;
  *(_QWORD *)&v121 = v99;
  v59 = v96;
  *((_QWORD *)&v121 + 1) = v96;
  MEMORY[0x24261C60C](255, &v121, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v60 = sub_23C34E700();
  MEMORY[0x24261C66C](v50, v60);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v61 = sub_23C34E700();
  MEMORY[0x24261C66C](v50, v61);
  v62 = sub_23C34E64C();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = MEMORY[0x24BDAC7A8](v62);
  v78[12] = (char *)v78 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x24BDAC7A8](v64);
  v68 = (char *)v78 - v67;
  MEMORY[0x24BDAC7A8](v66);
  v70 = (char *)v78 - v69;
  sub_23C34DFEC();
  v102 = v98;
  v103 = v101;
  v104 = v58;
  v71 = v100;
  v105 = v100;
  v106 = v95;
  v107 = v94;
  v108 = v59;
  v72 = v79;
  v109 = v97;
  v110 = v79;
  v111 = v90;
  v112 = v80;
  sub_23C34E640();
  v73 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v62);
  v78[11] = v70;
  v78[7] = v73;
  sub_23C28958C((uint64_t)v68, v62, (uint64_t)v70);
  v78[8] = v63;
  v74 = *(void (**)(char *, uint64_t))(v63 + 8);
  v80 = v62;
  v78[10] = v74;
  v74(v68, v62);
  v75 = v72[5];
  v125 = v72[4];
  v126 = v75;
  v127 = *((_QWORD *)v72 + 12);
  v76 = v72[1];
  v121 = *v72;
  v122 = v76;
  v77 = v72[2];
  v124 = v72[3];
  v123 = v77;
  type metadata accessor for WorkoutDetail();
  v113 = v98;
  v114 = v101;
  v115 = v99;
  v116 = v71;
  v117 = v95;
  v118 = v94;
  v119 = v96;
  v120 = v97;
  type metadata accessor for WorkoutDetailView();
}

void sub_23C2B8E50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;

  v6 = v1[21];
  sub_23C2A8C74(v3, v4, 0, a1, v6);
  v7 = v1[22];
  v8 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v7);
  v9 = v1[19];
  v1[6] = v8;
  sub_23C28958C(v6, v7, v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v1[18] + 8);
  v1[9] = (uint64_t)v10;
  v10(v6, v7);
  v11 = *(_OWORD *)(v2 + 80);
  *((_OWORD *)v1 + 181) = *(_OWORD *)(v2 + 64);
  *((_OWORD *)v1 + 182) = v11;
  v1[366] = *(_QWORD *)(v2 + 96);
  v12 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v1 + 177) = *(_OWORD *)v2;
  *((_OWORD *)v1 + 178) = v12;
  v13 = *(_OWORD *)(v2 + 32);
  *((_OWORD *)v1 + 180) = *(_OWORD *)(v2 + 48);
  *((_OWORD *)v1 + 179) = v13;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  v14 = swift_release();
  v15 = MEMORY[0x24BDF1050];
  v16 = MEMORY[0x24BDECC60];
  if ((v1[354] & 1) != 0)
  {
    v17 = v1[20];
    v18 = v1[23];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1[15] + 56))(v17, 1, 1, v18);
    v1[52] = v5;
    v1[53] = v15;
    v19 = MEMORY[0x24BDED308];
    v1[50] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1[26], v1 + 52);
    v1[51] = v16;
    MEMORY[0x24261C66C](v19, v18, v1 + 50);
    v20 = v1[35];
    v21 = (__int128 *)v2;
  }
  else
  {
    v22 = v1[1];
    (*(void (**)(uint64_t))(v2 + 24))(v14);
    sub_23C34DE3C();
    sub_23C34E16C();
    v23 = *v1;
    v24 = v1[35];
    v25 = v5;
    sub_23C34E424();
    (*(void (**)(uint64_t, uint64_t))(v1[2] + 8))(v22, v24);
    sub_23C34E190();
    v1[428] = v5;
    v1[429] = v15;
    v26 = MEMORY[0x24BDED308];
    v27 = v1[26];
    v28 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v27, v1 + 428);
    v29 = v1[3];
    sub_23C34E4B4();
    (*(void (**)(uint64_t, uint64_t))(v1[4] + 8))(v23, v27);
    v1[426] = v28;
    v1[427] = MEMORY[0x24BDECC60];
    v30 = v1[23];
    MEMORY[0x24261C66C](v26, v30, v1 + 426);
    v21 = (__int128 *)v2;
    v31 = v1[5];
    sub_23C28958C(v29, v30, v31);
    v32 = v1[15];
    v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v33(v29, v30);
    v17 = v1[20];
    sub_23C287D30(v31, v30, v17);
    v33(v31, v30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56))(v17, 0, 1, v30);
    v5 = v25;
    v20 = v1[35];
  }
  sub_23C2D7E50(v17, v1[25]);
  v34 = *(void (**)(uint64_t, uint64_t))(v1[16] + 8);
  v35 = v1[27];
  v1[15] = (uint64_t)v34;
  v34(v17, v35);
  sub_23C34DFEC();
  sub_23C2BA100(v21, v1[24], v1[32], v20, v1[33], v1[34], v1[29], v5, (uint64_t)(v1 + 142), v1[30], v1[31]);
}

uint64_t sub_23C2B9164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t, uint64_t);

  *(_BYTE *)(v0 + 1784) = 0;
  memcpy((void *)((v0 + 1456) | 7), (const void *)(v0 + 1136), 0x140uLL);
  v4 = *(_BYTE *)(v0 + 1784);
  *(_QWORD *)(v0 + 3504) = v1;
  *(_QWORD *)(v0 + 3512) = 0x403E000000000000;
  *(_BYTE *)(v0 + 3520) = v4;
  memcpy((void *)(v0 + 3521), (const void *)(v0 + 1456), 0x147uLL);
  sub_23C34E6E8();
  sub_23C2EDF9C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v0 + 1808, 0.0, 1, 0.0, 1);
  sub_23C2C16C0(v0 + 1136);
  v5 = sub_23C34E184();
  sub_23C34DD28();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  *(_BYTE *)(v0 + 1792) = 0;
  v14 = sub_23C34E190();
  sub_23C34DD28();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v23 = *(_BYTE *)(v0 + 1792);
  *(_BYTE *)(v0 + 1800) = 0;
  if (qword_256B574F0 != -1)
    swift_once();
  v24 = qword_256B58CC0;
  swift_retain();
  v25 = sub_23C34E178();
  memcpy((void *)(v0 + 2264), (const void *)(v0 + 1808), 0x1C8uLL);
  *(_BYTE *)(v0 + 2720) = v5;
  *(_QWORD *)(v0 + 2728) = v7;
  *(_QWORD *)(v0 + 2736) = v9;
  *(_QWORD *)(v0 + 2744) = v11;
  *(_QWORD *)(v0 + 2752) = v13;
  *(_BYTE *)(v0 + 2760) = v23;
  *(_BYTE *)(v0 + 2768) = v14;
  *(_QWORD *)(v0 + 2776) = v16;
  *(_QWORD *)(v0 + 2784) = v18;
  *(_QWORD *)(v0 + 2792) = v20;
  *(_QWORD *)(v0 + 2800) = v22;
  *(_BYTE *)(v0 + 2808) = *(_BYTE *)(v0 + 1800);
  *(_QWORD *)(v0 + 2816) = v24;
  *(_BYTE *)(v0 + 2824) = v25;
  v27 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 96);
  v28 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 16))(v26, v27, v28);
  *(_QWORD *)(v0 + 1104) = v26;
  v29 = *(_QWORD *)(v0 + 152);
  v31 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16))(v31, v29, v30);
  *(_QWORD *)(v0 + 1112) = v31;
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v33 = v3;
  v34 = v3;
  v35 = *(_QWORD *)(v0 + 200);
  v36 = *(_QWORD *)(v0 + 216);
  v32(v33, v35, v36);
  *(_QWORD *)(v0 + 1120) = v34;
  memcpy((void *)(v0 + 536), (const void *)(v0 + 2264), 0x231uLL);
  *(_QWORD *)(v0 + 1128) = v0 + 536;
  sub_23C2C17AC(v0 + 2264);
  *(_QWORD *)(v0 + 504) = v28;
  *(_QWORD *)(v0 + 512) = v30;
  *(_QWORD *)(v0 + 520) = v36;
  *(_QWORD *)(v0 + 528) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D70);
  v37 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 472) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 480) = v37;
  *(_QWORD *)(v0 + 456) = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 464) = MEMORY[0x24BDF1050];
  v38 = MEMORY[0x24BDED308];
  *(_QWORD *)(v0 + 440) = MEMORY[0x24261C66C](MEMORY[0x24BDED308], *(_QWORD *)(v0 + 208), v0 + 456);
  *(_QWORD *)(v0 + 448) = MEMORY[0x24BDECC60];
  *(_QWORD *)(v0 + 432) = MEMORY[0x24261C66C](v38, *(_QWORD *)(v0 + 184), v0 + 440);
  *(_QWORD *)(v0 + 488) = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v36, v0 + 432);
  *(_QWORD *)(v0 + 496) = sub_23C2C18B0();
  sub_23C328D8C((uint64_t *)(v0 + 1104), 4uLL, v0 + 504);
  sub_23C2C19FC(v0 + 2264);
  v39 = v35;
  v40 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
  v40(v39, v36);
  v41 = v29;
  v42 = *(void (**)(uint64_t, uint64_t))(v0 + 72);
  v42(v41, v30);
  v43 = *(void (**)(uint64_t, uint64_t))(v0 + 80);
  v43(v27, v28);
  memcpy((void *)(v0 + 2832), (const void *)(v0 + 536), 0x231uLL);
  sub_23C2C19FC(v0 + 2832);
  v40(*(_QWORD *)(v0 + 160), v36);
  v42(v31, v30);
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v26, v28);
}

void sub_23C2B94B4(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(_QWORD, _QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[6];
  uint64_t v89;
  _QWORD v90[2];
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[3];

  v62 = a8;
  v58 = a6;
  v66 = a5;
  v52 = a3;
  v60 = a2;
  v54 = a9;
  v65 = a12;
  v64 = a10;
  v59 = a11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v88[0] = a6;
  *((_QWORD *)&v88[0] + 1) = a11;
  MEMORY[0x24261C60C](255, v88, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v16 = sub_23C34E700();
  v17 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v16);
  v67 = sub_23C34E64C();
  v53 = *(_QWORD *)(v67 - 8);
  v18 = MEMORY[0x24BDAC7A8](v67);
  v61 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v63 = (char *)&v47 - v20;
  sub_23C34E130();
  v50 = a4;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v49 = a7;
  swift_getTupleTypeMetadata2();
  v21 = sub_23C34E700();
  MEMORY[0x24261C66C](v17, v21);
  v22 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v23 = sub_23C34DE30();
  v24 = MEMORY[0x24BDF4700];
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v22);
  v26 = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  v93[0] = v25;
  v93[1] = v26;
  v27 = MEMORY[0x24BDED308];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v23, v93);
  v28 = sub_23C34E64C();
  v29 = sub_23C34DE30();
  v92[0] = MEMORY[0x24261C66C](v24, v28);
  v92[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v27, v29, v92);
  v30 = sub_23C34E64C();
  v48 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v47 - v31;
  v33 = sub_23C34DE30();
  v51 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v47 - v34;
  v68 = sub_23C34DE30();
  v57 = *(_QWORD *)(v68 - 8);
  v36 = MEMORY[0x24BDAC7A8](v68);
  v55 = (char *)&v47 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v56 = (uint64_t)&v47 - v38;
  v69 = a4;
  v70 = v66;
  v71 = v58;
  v72 = a7;
  v73 = v62;
  v74 = v64;
  v75 = v59;
  v76 = v65;
  v77 = a1;
  v78 = v60;
  v79 = v52;
  sub_23C34DFE0();
  sub_23C34E640();
  sub_23C34E6E8();
  v46 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v30);
  sub_23C34E490();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v30);
  sub_23C34E190();
  v91[0] = v46;
  v91[1] = MEMORY[0x24BDEDBB8];
  v39 = MEMORY[0x24BDED308];
  v40 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v33, v91);
  v41 = (uint64_t)v55;
  sub_23C34E4B4();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v33);
  v90[0] = v40;
  v90[1] = MEMORY[0x24BDECC60];
  v42 = v68;
  v51 = MEMORY[0x24261C66C](v39, v68, v90);
  sub_23C28958C(v41, v42, v56);
  v52 = *(void (**)(_QWORD, _QWORD))(v57 + 8);
  v52(v41, v42);
  v43 = *(_OWORD *)(a1 + 80);
  v88[4] = *(_OWORD *)(a1 + 64);
  v88[5] = v43;
  v89 = *(_QWORD *)(a1 + 96);
  v44 = *(_OWORD *)(a1 + 16);
  v88[0] = *(_OWORD *)a1;
  v88[1] = v44;
  v45 = *(_OWORD *)(a1 + 48);
  v88[2] = *(_OWORD *)(a1 + 32);
  v88[3] = v45;
  v80 = v50;
  v81 = v66;
  v82 = v58;
  v83 = v49;
  v84 = v62;
  v85 = v64;
  v86 = v59;
  v87 = v65;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B9A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD, uint64_t);
  void (*v36)(_QWORD, uint64_t);

  v6 = *(_QWORD *)(v1 + 104);
  sub_23C2A5B04(v6, a1, (uint64_t *)(v1 + 336));
  v7 = *(_QWORD *)(v1 + 336);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 96) = v7;
  *(_DWORD *)(v1 + 24) = *(unsigned __int8 *)(v1 + 352);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v1 + 360);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v1 + 368);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(v1 + 376);
  *(_DWORD *)(v1 + 136) = *(unsigned __int8 *)(v1 + 384);
  *(_DWORD *)(v1 + 8) = sub_23C34E190();
  sub_23C34DD28();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v1 + 464) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v1 + 480) = v16;
  *(_QWORD *)(v1 + 496) = *(_QWORD *)(v4 + 96);
  v17 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)v4;
  *(_OWORD *)(v1 + 416) = v17;
  v18 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v1 + 432) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v1 + 448) = v18;
  v19 = *(_QWORD *)(v1 + 112);
  sub_23C2A6A78(v6, a1, v19);
  v20 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 104) = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v20);
  v21 = *(_QWORD *)(v1 + 128);
  sub_23C28958C(v19, v20, v21);
  v22 = *(_QWORD *)(v1 + 48);
  v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  *(_QWORD *)(v1 + 152) = v23;
  v23(v19, v20);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 80) + 16))(v3, v2, *(_QWORD *)(v1 + 168));
  v24 = *(_QWORD *)(v1 + 88);
  v25 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v1 + 400) = v25;
  *(_QWORD *)(v1 + 408) = v24;
  v26 = *(_DWORD *)(v1 + 24);
  *(_BYTE *)(v1 + 416) = v26;
  v27 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 424) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 432) = v27;
  *(_QWORD *)(v1 + 440) = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(v1 + 448) = *(_DWORD *)(v1 + 136);
  *(_BYTE *)(v1 + 456) = *(_DWORD *)(v1 + 8);
  *(_QWORD *)(v1 + 464) = v9;
  *(_QWORD *)(v1 + 472) = v11;
  *(_QWORD *)(v1 + 480) = v13;
  *(_QWORD *)(v1 + 488) = v15;
  *(_BYTE *)(v1 + 496) = 0;
  *(_QWORD *)(v1 + 336) = v3;
  *(_QWORD *)(v1 + 344) = v1 + 400;
  v28 = v21;
  v29 = *(_QWORD *)(v1 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v19, v28, v29);
  *(_QWORD *)(v1 + 352) = v19;
  sub_23C289550(v25, v24, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  v30 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 312) = v30;
  *(_QWORD *)(v1 + 320) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58D50);
  *(_QWORD *)(v1 + 328) = v29;
  *(_QWORD *)(v1 + 288) = *(_QWORD *)(v1 + 32);
  v31 = sub_23C2C0C08();
  v32 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 296) = v31;
  *(_QWORD *)(v1 + 304) = v32;
  sub_23C328D8C((uint64_t *)(v1 + 336), 3uLL, v1 + 312);
  v33 = v29;
  v34 = v29;
  v35 = *(void (**)(_QWORD, uint64_t))(v1 + 152);
  v35(*(_QWORD *)(v1 + 128), v33);
  sub_23C289340(v25, v24, v26);
  swift_release();
  swift_bridgeObjectRelease();
  v36 = *(void (**)(_QWORD, uint64_t))(v1 + 40);
  v36(*(_QWORD *)(v1 + 72), v30);
  v35(*(_QWORD *)(v1 + 112), v34);
  sub_23C289340(*(_QWORD *)(v1 + 400), *(_QWORD *)(v1 + 408), *(_BYTE *)(v1 + 416));
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(_QWORD, uint64_t))v36)(*(_QWORD *)(v1 + 64), v30);
}

void sub_23C2B9CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v0 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v0);
  v1 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v2 = sub_23C34DE30();
  v6[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v1);
  v6[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v2, v6);
  v3 = sub_23C34E64C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23C34DE30();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2B9F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  sub_23C2A50D0(*(_QWORD *)(v8 - 328), a1, v5);
  sub_23C34DDA0();
  v9 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v8 - 160) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v8 - 144) = v9;
  *(_QWORD *)(v8 - 128) = *(_QWORD *)(v1 + 96);
  v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v8 - 224) = *(_OWORD *)v1;
  *(_OWORD *)(v8 - 208) = v10;
  v11 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v8 - 192) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v8 - 176) = v11;
  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34E6E8();
  v12 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v4);
  sub_23C34E484();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v4);
  v13 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v8 - 304) = v12;
  *(_QWORD *)(v8 - 296) = v13;
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v6, v8 - 304);
  sub_23C28958C(v3, v6, v2);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 376) + 8);
  v14(v3, v6);
  sub_23C287D30(v2, v6, *(_QWORD *)(v8 - 312));
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v2, v6);
}

void sub_23C2BA100(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[64];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v23[5] = a2;
  v23[3] = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v18);
  v23[4] = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[5];
  v28 = a1[4];
  v29 = v20;
  v30 = *((_QWORD *)a1 + 12);
  v21 = a1[1];
  v24 = *a1;
  v25 = v21;
  v22 = a1[3];
  v26 = a1[2];
  v27 = v22;
  v31 = a3;
  v32 = a4;
  v33 = a5;
  v34 = a6;
  v35 = a7;
  v36 = a8;
  v37 = a10;
  v38 = a11;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2BA1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(v1 + 512) & 1) != 0)
  {
    sub_23C2C1B7C(v1 + 512);
    sub_23C2894C8(v1 + 512, v1 + 1072, &qword_256B591A8);
    v4 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    v5 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v1 + 1136) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v1 + 1152) = v5;
    *(_QWORD *)(v1 + 1168) = *(_QWORD *)(v2 + 96);
    v6 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v1 + 1072) = *(_OWORD *)v2;
    *(_OWORD *)(v1 + 1088) = v6;
    v7 = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v1 + 1120) = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v1 + 1104) = v7;
    v8 = type metadata accessor for WorkoutDetail();
    v9 = *(_QWORD *)(v1 + 40);
    v10 = v9 + *(int *)(v8 + 80);
    v11 = v9 + *(int *)(v8 + 24);
    v12 = sub_23C34D86C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(_QWORD *)(v1 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v11, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
    sub_23C2AE4D8(v10, v14, a1, v1 + 512);
    sub_23C285184(v14, &qword_256B58910);
    sub_23C2894C8(v1 + 512, v1 + 280, &qword_256B58E38);
    LOBYTE(v10) = sub_23C34E190();
    sub_23C34DD28();
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    sub_23C2894C8(v1 + 280, v1 + 840, &qword_256B58E38);
    *(_BYTE *)(v1 + 1024) = v10;
    *(_QWORD *)(v1 + 1032) = v16;
    *(_QWORD *)(v1 + 1040) = v18;
    *(_QWORD *)(v1 + 1048) = v20;
    *(_QWORD *)(v1 + 1056) = v22;
    *(_BYTE *)(v1 + 1064) = 0;
    *(_BYTE *)(v1 + 736) = 0;
    v23 = *(_OWORD *)(v1 + 984);
    *(_OWORD *)(v1 + 640) = *(_OWORD *)(v1 + 968);
    *(_OWORD *)(v1 + 656) = v23;
    v24 = *(_OWORD *)(v1 + 920);
    *(_OWORD *)(v1 + 576) = *(_OWORD *)(v1 + 904);
    *(_OWORD *)(v1 + 592) = v24;
    v25 = *(_OWORD *)(v1 + 952);
    *(_OWORD *)(v1 + 608) = *(_OWORD *)(v1 + 936);
    *(_OWORD *)(v1 + 624) = v25;
    v26 = *(_OWORD *)(v1 + 856);
    *(_OWORD *)(v1 + 512) = *(_OWORD *)(v1 + 840);
    *(_OWORD *)(v1 + 528) = v26;
    v27 = *(_OWORD *)(v1 + 888);
    *(_OWORD *)(v1 + 544) = *(_OWORD *)(v1 + 872);
    *(_OWORD *)(v1 + 560) = v27;
    v28 = *(_OWORD *)(v1 + 1016);
    *(_OWORD *)(v1 + 672) = *(_OWORD *)(v1 + 1000);
    *(_OWORD *)(v1 + 688) = v28;
    v29 = *(_OWORD *)(v1 + 1048);
    *(_OWORD *)(v1 + 704) = *(_OWORD *)(v1 + 1032);
    *(_OWORD *)(v1 + 720) = v29;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))nullsub_1)(v1 + 512, v30, v31, v32, v33, v34, v35, v36);
    sub_23C2894C8(v1 + 512, v1 + 1072, &qword_256B591A8);
    v4 = v9;
  }
  v37 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 576) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v1 + 592) = v37;
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v2 + 96);
  v38 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 512) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 528) = v38;
  v39 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v1 + 544) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v1 + 560) = v39;
  sub_23C2AF3B4(v4, v1 + 840);
  v40 = *(_QWORD *)(v1 + 840);
  v41 = *(_QWORD *)(v1 + 848);
  v42 = *(_QWORD *)(v1 + 856);
  v43 = *(_QWORD *)(v1 + 864);
  v44 = *(_QWORD *)(v1 + 872);
  v45 = *(_QWORD *)(v1 + 880);
  v46 = *(_QWORD *)(v1 + 888);
  v47 = *(_QWORD *)(v1 + 896);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v1 + 904);
  v48 = *(_QWORD *)(v1 + 912);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v1 + 920);
  *(_QWORD *)(v1 + 40) = v48;
  sub_23C2894C8(v1 + 1072, v1 + 48, &qword_256B591A8);
  sub_23C2894C8(v1 + 48, v1 + 280, &qword_256B591A8);
  sub_23C2894C8(v1 + 280, v1 + 512, &qword_256B591A8);
  *(_QWORD *)(v1 + 744) = v40;
  *(_QWORD *)(v1 + 752) = v41;
  *(_QWORD *)(v1 + 760) = v42;
  *(_QWORD *)(v1 + 768) = v43;
  *(_QWORD *)(v1 + 776) = v44;
  *(_QWORD *)(v1 + 784) = v45;
  *(_QWORD *)v1 = v47;
  *(_QWORD *)(v1 + 8) = v46;
  *(_QWORD *)(v1 + 792) = v46;
  *(_QWORD *)(v1 + 800) = v47;
  v50 = *(_QWORD *)(v1 + 16);
  v49 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 808) = v50;
  v52 = *(_QWORD *)(v1 + 32);
  v51 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 816) = v51;
  *(_QWORD *)(v1 + 824) = v52;
  memcpy(v49, (const void *)(v1 + 512), 0x140uLL);
  sub_23C2C1B00(v1 + 280, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23C2C0E2C);
  v56 = v51;
  v53 = *(_QWORD *)(v1 + 8);
  v54 = *(_QWORD *)v1;
  sub_23C2BED4C(v40, v41, v42, v43, v44, v45, v53, *(_QWORD *)v1, v50, v56);
  sub_23C2BEEF4(v40, v41, v42, v43, v44, v45, v53, v54, v50, *(_QWORD *)(v1 + 40));
  sub_23C2894C8(v1 + 48, v1 + 840, &qword_256B591A8);
  return sub_23C2C1B00(v1 + 840, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23C2C10F4);
}

uint64_t WorkoutDetailView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  __int128 *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  __int128 *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 *v146;
  uint64_t v147;
  uint64_t v148;
  __int128 *v149;
  _QWORD v150[2];
  uint64_t v151;
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[2];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  uint64_t v182;

  v133 = a2;
  v131 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CC8);
  v3 = a1[2];
  v135 = sub_23C34E130();
  v138 = v3;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  v139 = a1[5];
  swift_getTupleTypeMetadata2();
  v4 = sub_23C34E700();
  v5 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v4);
  v6 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v7 = sub_23C34DE30();
  v175[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v6);
  v175[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v7, v175);
  v134 = (char *)sub_23C34E64C();
  *(_QWORD *)&v176 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v140 = a1[4];
  v137 = a1[8];
  v130 = a1;
  v168 = v140;
  v169 = v137;
  MEMORY[0x24261C60C](255, &v168, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v8 = sub_23C34E700();
  MEMORY[0x24261C66C](v5, v8);
  sub_23C34E64C();
  *((_QWORD *)&v176 + 1) = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v10 = sub_23C34E700();
  MEMORY[0x24261C66C](v5, v10);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v11 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v12 = sub_23C34E700();
  MEMORY[0x24261C66C](v5, v12);
  v13 = sub_23C34E64C();
  v14 = sub_23C34E010();
  v15 = v5;
  v16 = MEMORY[0x24261C66C](v5, v11);
  v17 = MEMORY[0x24BDF4700];
  v18 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v13);
  v174[0] = v16;
  v174[1] = v18;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v14, v174);
  v19 = sub_23C34E64C();
  v20 = MEMORY[0x24261C66C](v17, v19);
  v168 = v19;
  v169 = v20;
  MEMORY[0x24261C60C](255, &v168, MEMORY[0x24BDF2F10], 0);
  v21 = sub_23C34DE30();
  v168 = v19;
  v169 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v125 = (char *)sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v173[0] = OpaqueTypeConformance2;
  v173[1] = v125;
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v21, v173);
  v168 = v21;
  v169 = v24;
  v25 = MEMORY[0x24261C60C](255, &v168, MEMORY[0x24BDF2550], 0);
  v123 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v168 = v9;
  v169 = MEMORY[0x24BEE0D00];
  v170 = v25;
  v171 = v123;
  v172 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v26 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v26);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  *(_QWORD *)&v177 = sub_23C34DE30();
  v136 = a1[3];
  v124 = sub_23C34DE30();
  v126 = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  *((_QWORD *)&v177 + 1) = sub_23C34EA48();
  *(_QWORD *)&v178 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  sub_23C34E700();
  sub_23C34E58C();
  sub_23C34E0DC();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v27 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v27);
  v28 = sub_23C34E64C();
  v29 = sub_23C34DE30();
  v167[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v28);
  v167[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](v23, v29, v167);
  v128 = sub_23C34DD34();
  v129 = sub_23C34DE30();
  v127 = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  sub_23C34DE30();
  v122 = (char *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v176 = v140;
  *((_QWORD *)&v176 + 1) = v137;
  MEMORY[0x24261C60C](255, &v176, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v30 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v30);
  v121 = sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v31 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v31);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v33 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v33);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v34 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v35 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v35);
  v36 = sub_23C34E64C();
  v37 = sub_23C34E010();
  v38 = MEMORY[0x24261C66C](v15, v34);
  v39 = MEMORY[0x24BDF4700];
  v166[0] = v38;
  v166[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v36);
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v37, v166);
  v40 = sub_23C34E64C();
  v41 = MEMORY[0x24261C66C](v39, v40);
  *(_QWORD *)&v176 = v40;
  *((_QWORD *)&v176 + 1) = v41;
  MEMORY[0x24261C60C](255, &v176, MEMORY[0x24BDF2F10], 0);
  v42 = sub_23C34DE30();
  *(_QWORD *)&v176 = v40;
  *((_QWORD *)&v176 + 1) = v41;
  v165[0] = swift_getOpaqueTypeConformance2();
  v165[1] = v125;
  v43 = MEMORY[0x24BDED308];
  v44 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v42, v165);
  *(_QWORD *)&v176 = v42;
  *((_QWORD *)&v176 + 1) = v44;
  v45 = MEMORY[0x24261C60C](255, &v176, MEMORY[0x24BDF2550], 0);
  *(_QWORD *)&v176 = v32;
  *((_QWORD *)&v176 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v177 = v45;
  *((_QWORD *)&v177 + 1) = v123;
  *(_QWORD *)&v178 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v46 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v46);
  v47 = sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  sub_23C34DDD0();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
  swift_getTupleTypeMetadata3();
  v48 = sub_23C34E700();
  MEMORY[0x24261C66C](v15, v48);
  v49 = sub_23C34E64C();
  v50 = sub_23C34DE30();
  v51 = sub_23C34DE30();
  v52 = sub_23C34DE30();
  v53 = MEMORY[0x24BDF4700];
  v54 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v49);
  v55 = sub_23C27FEE4(&qword_256B58D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
  v164[0] = v54;
  v164[1] = v55;
  v163[0] = MEMORY[0x24261C66C](v43, v50, v164);
  v163[1] = v55;
  v162[0] = MEMORY[0x24261C66C](v43, v51, v163);
  v162[1] = v55;
  v56 = v43;
  MEMORY[0x24261C66C](v43, v52, v162);
  v57 = sub_23C34DD34();
  v58 = sub_23C34DE30();
  v59 = v53;
  v161[0] = MEMORY[0x24261C66C](v53, v134);
  v161[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v56, v58, v161);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata3();
  v60 = sub_23C34E700();
  v61 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v60);
  *(_QWORD *)&v176 = sub_23C34E64C();
  *((_QWORD *)&v176 + 1) = v47;
  *(_QWORD *)&v177 = sub_23C34EA48();
  *((_QWORD *)&v177 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v62 = sub_23C34E700();
  MEMORY[0x24261C66C](v61, v62);
  v63 = sub_23C34E64C();
  v64 = sub_23C34DE30();
  v65 = sub_23C34DE30();
  v66 = sub_23C34DE30();
  v160[0] = MEMORY[0x24261C66C](v59, v63);
  v160[1] = v55;
  v159[0] = MEMORY[0x24261C66C](v56, v64, v160);
  v159[1] = v55;
  v158[0] = MEMORY[0x24261C66C](v56, v65, v159);
  v158[1] = v55;
  MEMORY[0x24261C66C](v56, v66, v158);
  v67 = sub_23C34DD34();
  v68 = sub_23C34DE30();
  v69 = MEMORY[0x24BDEB238];
  v70 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v67);
  v71 = MEMORY[0x24BDF1050];
  v157[0] = v70;
  v157[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24261C66C](v56, v68, v157);
  v72 = sub_23C34DDF4();
  v73 = v57;
  v74 = sub_23C34E010();
  v75 = v127;
  v76 = sub_23C34E010();
  v120 = sub_23C34E010();
  v77 = sub_23C34E58C();
  v135 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v134 = (char *)&v119 - v78;
  v131 = sub_23C2BB910();
  v156[0] = MEMORY[0x24261C66C](v69, v128);
  v156[1] = v71;
  v155[0] = MEMORY[0x24261C66C](v56, v129, v156);
  v155[1] = MEMORY[0x24BDECC60];
  v79 = MEMORY[0x24261C66C](v56, v75, v155);
  v80 = MEMORY[0x24261C66C](v69, v73);
  v81 = MEMORY[0x24261C66C](MEMORY[0x24BDEC6F8], v72);
  v154[0] = v80;
  v154[1] = v81;
  v82 = MEMORY[0x24BDEF3E0];
  v83 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v74, v154);
  v153[0] = v79;
  v153[1] = v83;
  v84 = MEMORY[0x24261C66C](v82, v76, v153);
  v152[0] = v131;
  v152[1] = v84;
  v123 = MEMORY[0x24261C66C](v82, v120, v152);
  v151 = v123;
  v85 = v77;
  v86 = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v77, &v151);
  *(_QWORD *)&v176 = v85;
  *((_QWORD *)&v176 + 1) = v86;
  v87 = MEMORY[0x24261C60C](0, &v176, MEMORY[0x24BE37C20], 0);
  v126 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v89 = (char *)&v119 - v88;
  *(_QWORD *)&v176 = v85;
  *((_QWORD *)&v176 + 1) = v86;
  v124 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v176 = v87;
  *((_QWORD *)&v176 + 1) = v124;
  v90 = MEMORY[0x24261C60C](0, &v176, MEMORY[0x24BE37C00], 0);
  v129 = *(_QWORD *)(v90 - 8);
  v127 = v90;
  MEMORY[0x24BDAC7A8](v90);
  v122 = (char *)&v119 - v91;
  v92 = sub_23C34DE30();
  v131 = *(_QWORD *)(v92 - 8);
  v93 = MEMORY[0x24BDAC7A8](v92);
  v125 = (char *)&v119 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v93);
  v128 = (uint64_t)&v119 - v95;
  v96 = v132[5];
  v180 = v132[4];
  v181 = v96;
  v182 = *((_QWORD *)v132 + 12);
  v97 = v132[1];
  v176 = *v132;
  v177 = v97;
  v98 = v132[3];
  v178 = v132[2];
  v179 = v98;
  v99 = v137;
  v141 = v138;
  v142 = v136;
  v143 = v140;
  v144 = v139;
  v100 = (__int128 *)v130[7];
  v121 = v130[6];
  v132 = v100;
  v145 = v121;
  v146 = v100;
  v101 = v130[9];
  v147 = v137;
  v148 = v101;
  v149 = &v176;
  v102 = v134;
  sub_23C34E580();
  __swift_instantiateConcreteTypeFromMangledName(qword_256B58D80);
  v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_23C353A20;
  *(_QWORD *)(v103 + 32) = 0x77656956746F6F52;
  *(_QWORD *)(v103 + 40) = 0xE800000000000000;
  sub_23C34E37C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v102, v85);
  v104 = v122;
  v105 = v124;
  sub_23C34E370();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v89, v87);
  v106 = swift_allocObject();
  v107 = v136;
  *(_QWORD *)(v106 + 16) = v138;
  *(_QWORD *)(v106 + 24) = v107;
  v108 = v139;
  *(_QWORD *)(v106 + 32) = v140;
  *(_QWORD *)(v106 + 40) = v108;
  v109 = v132;
  *(_QWORD *)(v106 + 48) = v121;
  *(_QWORD *)(v106 + 56) = v109;
  *(_QWORD *)(v106 + 64) = v99;
  *(_QWORD *)(v106 + 72) = v101;
  v110 = v181;
  *(_OWORD *)(v106 + 144) = v180;
  *(_OWORD *)(v106 + 160) = v110;
  *(_QWORD *)(v106 + 176) = v182;
  v111 = v177;
  *(_OWORD *)(v106 + 80) = v176;
  *(_OWORD *)(v106 + 96) = v111;
  v112 = v179;
  *(_OWORD *)(v106 + 112) = v178;
  *(_OWORD *)(v106 + 128) = v112;
  sub_23C2BD424((uint64_t)&v176);
  v168 = v87;
  v169 = v105;
  v113 = swift_getOpaqueTypeConformance2();
  v114 = (uint64_t)v125;
  v115 = v127;
  sub_23C34E4E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v104, v115);
  v150[0] = v113;
  v150[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v92, v150);
  v116 = v128;
  sub_23C28958C(v114, v92, v128);
  v117 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v117(v114, v92);
  sub_23C287D30(v116, v92, v133);
  return ((uint64_t (*)(uint64_t, uint64_t))v117)(v116, v92);
}

unint64_t sub_23C2BB910()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58D78;
  if (!qword_256B58D78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CC8);
    v2[0] = sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
    v2[1] = v2[0];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58D78);
  }
  return result;
}

void sub_23C2BB98C(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _QWORD v95[11];
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  __int128 *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _QWORD v142[2];
  _QWORD v143[2];
  _QWORD v144[2];
  _QWORD v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];
  _QWORD v149[2];
  _QWORD v150[4];

  v110 = a8;
  v111 = a5;
  v113 = a6;
  v114 = a7;
  v109 = a4;
  v121 = a3;
  v118 = a1;
  v105 = a9;
  v112 = a10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  v119 = sub_23C34E130();
  v108 = a2;
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v13 = sub_23C34E700();
  v14 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v13);
  v15 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v16 = sub_23C34DE30();
  v150[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v15);
  v150[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v16, v150);
  v120 = sub_23C34E64C();
  sub_23C34DE30();
  v123 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  *(_QWORD *)&v132 = a4;
  *((_QWORD *)&v132 + 1) = a8;
  MEMORY[0x24261C60C](255, &v132, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v17 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v17);
  v117 = (char *)sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v18 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v18);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v20 = sub_23C34E700();
  MEMORY[0x24261C66C](v14, v20);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v21 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v22 = sub_23C34E700();
  v23 = v14;
  MEMORY[0x24261C66C](v14, v22);
  v24 = sub_23C34E64C();
  v25 = sub_23C34E010();
  v26 = MEMORY[0x24261C66C](v23, v21);
  v27 = MEMORY[0x24BDF4700];
  v28 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v24);
  v149[0] = v26;
  v149[1] = v28;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v25, v149);
  v29 = sub_23C34E64C();
  v30 = MEMORY[0x24261C66C](v27, v29);
  *(_QWORD *)&v132 = v29;
  *((_QWORD *)&v132 + 1) = v30;
  MEMORY[0x24261C60C](255, &v132, MEMORY[0x24BDF2F10], 0);
  v31 = sub_23C34DE30();
  *(_QWORD *)&v132 = v29;
  *((_QWORD *)&v132 + 1) = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v33 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v148[0] = OpaqueTypeConformance2;
  v148[1] = v33;
  v34 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v31, v148);
  *(_QWORD *)&v132 = v31;
  *((_QWORD *)&v132 + 1) = v34;
  v35 = MEMORY[0x24261C60C](255, &v132, MEMORY[0x24BDF2550], 0);
  v36 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  *(_QWORD *)&v132 = v19;
  *((_QWORD *)&v132 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v133 = v35;
  *((_QWORD *)&v133 + 1) = v36;
  *(_QWORD *)&v134 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v37 = sub_23C34E700();
  MEMORY[0x24261C66C](v23, v37);
  v116 = sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  sub_23C34DDD0();
  v122 = sub_23C34DE30();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
  swift_getTupleTypeMetadata3();
  v38 = sub_23C34E700();
  v39 = v23;
  MEMORY[0x24261C66C](v23, v38);
  v40 = sub_23C34E64C();
  sub_23C34E0DC();
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8];
  v42 = sub_23C34DE30();
  v43 = sub_23C34DE30();
  v44 = sub_23C34DE30();
  v45 = MEMORY[0x24BDF4700];
  v46 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v40);
  v47 = sub_23C27FEE4(&qword_256B58D68, v41, MEMORY[0x24BDF02F0]);
  v147[0] = v46;
  v147[1] = v47;
  v48 = MEMORY[0x24BDED308];
  v146[0] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v42, v147);
  v146[1] = v47;
  v145[0] = MEMORY[0x24261C66C](v48, v43, v146);
  v145[1] = v47;
  v49 = v48;
  MEMORY[0x24261C66C](v48, v44, v145);
  v50 = sub_23C34DD34();
  v95[0] = *(_QWORD *)(v50 - 8);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v95[2] = (char *)v95 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v95[1] = (char *)v95 - v53;
  v54 = v120;
  v55 = sub_23C34DE30();
  v144[0] = MEMORY[0x24261C66C](v45, v54);
  v144[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v49, v55, v144);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata3();
  v56 = sub_23C34E700();
  MEMORY[0x24261C66C](v39, v56);
  *(_QWORD *)&v132 = sub_23C34E64C();
  *((_QWORD *)&v132 + 1) = v116;
  v115 = sub_23C34DE30();
  *(_QWORD *)&v133 = sub_23C34EA48();
  *((_QWORD *)&v133 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v57 = sub_23C34E700();
  MEMORY[0x24261C66C](v39, v57);
  v58 = sub_23C34E64C();
  v59 = sub_23C34DE30();
  v60 = sub_23C34DE30();
  v61 = sub_23C34DE30();
  v143[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v58);
  v143[1] = v47;
  v62 = MEMORY[0x24BDED308];
  v142[0] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v59, v143);
  v142[1] = v47;
  v141[0] = MEMORY[0x24261C66C](v62, v60, v142);
  v141[1] = v47;
  v63 = v62;
  MEMORY[0x24261C66C](v62, v61, v141);
  v64 = sub_23C34DD34();
  v65 = sub_23C34DE30();
  v140[0] = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v64);
  v140[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24261C66C](v63, v65, v140);
  v66 = sub_23C34DDF4();
  v119 = v50;
  v122 = v66;
  v67 = sub_23C34E010();
  v95[7] = *(_QWORD *)(v67 - 8);
  v68 = MEMORY[0x24BDAC7A8](v67);
  v95[6] = (char *)v95 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  v99 = (char *)v95 - v70;
  *(_QWORD *)&v132 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  *((_QWORD *)&v132 + 1) = sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  *(_QWORD *)&v133 = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  *((_QWORD *)&v133 + 1) = sub_23C34EA48();
  *(_QWORD *)&v134 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  sub_23C34E700();
  sub_23C34E58C();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v71 = sub_23C34E700();
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v71);
  v72 = sub_23C34E64C();
  v73 = sub_23C34DE30();
  v139[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v72);
  v139[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](v63, v73, v139);
  v115 = sub_23C34DD34();
  v116 = sub_23C34DE30();
  v74 = sub_23C34DE30();
  v95[3] = *(_QWORD *)(v74 - 8);
  v75 = MEMORY[0x24BDAC7A8](v74);
  v95[5] = (char *)v95 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v75);
  v95[4] = (char *)v95 - v77;
  v101 = v78;
  v123 = v67;
  v79 = sub_23C34E010();
  v95[10] = *(_QWORD *)(v79 - 8);
  v80 = MEMORY[0x24BDAC7A8](v79);
  v95[9] = (char *)v95 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v80);
  v95[8] = (char *)v95 - v82;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58E18);
  MEMORY[0x24BDAC7A8](v96);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58CC8);
  MEMORY[0x24BDAC7A8](v83);
  v97 = (char *)v95 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57C78);
  v120 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v117 = (char *)v95 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58E20);
  MEMORY[0x24BDAC7A8](v86);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B576C0);
  MEMORY[0x24BDAC7A8](v87);
  v88 = type metadata accessor for WorkoutDetail();
  MEMORY[0x24BDAC7A8](v88);
  v100 = (char *)v95 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = v79;
  v103 = v83;
  v90 = sub_23C34E010();
  v106 = *(_QWORD *)(v90 - 8);
  v107 = v90;
  MEMORY[0x24BDAC7A8](v90);
  v104 = (char *)v95 - v91;
  v92 = v118[5];
  v136 = v118[4];
  v137 = v92;
  v138 = *((_QWORD *)v118 + 12);
  v93 = v118[1];
  v132 = *v118;
  v133 = v93;
  v94 = v118[3];
  v134 = v118[2];
  v135 = v94;
  v124 = v108;
  v125 = v121;
  v126 = v109;
  v127 = v111;
  v128 = v113;
  v129 = v114;
  v130 = v110;
  v131 = v112;
  type metadata accessor for WorkoutDetailView();
}

uint64_t sub_23C2BC8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;

  sub_23C2A4E50();
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C34E748();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_23C2BC948 + 4 * byte_23C353A50[EnumCaseMultiPayload]))();
}

uint64_t sub_23C2BC948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v0[32];
  sub_23C34DD7C();
  v3 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[35] + 16))(v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  sub_23C28943C(qword_256B57C88, &qword_256B57C78, MEMORY[0x24BDEBC00]);
  v4 = v0[12];
  sub_23C34E004();
  v0[36] = sub_23C2BB910();
  v5 = MEMORY[0x24BDEB238];
  v6 = v0[30];
  v0[45] = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v6);
  v0[46] = MEMORY[0x24BDF1050];
  v7 = MEMORY[0x24BDED308];
  v8 = v0[31];
  v0[43] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v8, v0 + 45);
  v0[44] = MEMORY[0x24BDECC60];
  v9 = v0[16];
  v10 = MEMORY[0x24261C66C](v7, v9, v0 + 43);
  v11 = v0[34];
  v12 = MEMORY[0x24261C66C](v5, v11);
  v13 = MEMORY[0x24261C66C](MEMORY[0x24BDEC6F8], v0[37]);
  v0[41] = v12;
  v0[42] = v13;
  v14 = MEMORY[0x24BDEF3E0];
  v15 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v0[38], v0 + 41);
  v0[39] = v10;
  v0[40] = v15;
  v16 = v6;
  v17 = v0[17];
  MEMORY[0x24261C66C](v14, v17, v0 + 39);
  v18 = v0[19];
  sub_23C328CC8(v4, v0[18]);
  sub_23C285184(v4, &qword_256B58CC8);
  (*(void (**)(_QWORD, uint64_t))(v0[35] + 8))(v0[32], v3);
  v19 = v0[20];
  v20 = sub_23C2BB910();
  v21 = MEMORY[0x24BDEB238];
  v0[69] = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v16);
  v0[70] = MEMORY[0x24BDF1050];
  v22 = MEMORY[0x24BDED308];
  v0[67] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v8, v0 + 69);
  v0[68] = MEMORY[0x24BDECC60];
  v23 = MEMORY[0x24261C66C](v22, v9, v0 + 67);
  v24 = MEMORY[0x24261C66C](v21, v11);
  v25 = MEMORY[0x24261C66C](MEMORY[0x24BDEC6F8], v0[37]);
  v0[65] = v24;
  v0[66] = v25;
  v26 = MEMORY[0x24BDEF3E0];
  v27 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v0[38], v0 + 65);
  v0[63] = v23;
  v0[64] = v27;
  v28 = MEMORY[0x24261C66C](v26, v17, v0 + 63);
  v0[61] = v20;
  v0[62] = v28;
  v29 = v0[22];
  MEMORY[0x24261C66C](v26, v29, v0 + 61);
  sub_23C287D30(v18, v29, v19);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0[21] + 8))(v18, v29);
}

void sub_23C2BD3E4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C2BB98C(*(__int128 **)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1, *(_QWORD *)(v1 + 72));
}

void sub_23C2BD41C()
{
  sub_23C2C08D8();
}

uint64_t sub_23C2BD424(uint64_t a1)
{
  sub_23C28801C();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2BD4A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2BD4E0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2BD4E8()
{
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2BD538(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = a2[12];
  v9 = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2BD5F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C287FCC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  v10 = a2[10];
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  v11 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_23C2BD6F8(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C287FCC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_23C2BD78C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2BD7D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for WorkoutDetailView()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C2BD838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];
  uint64_t v90;
  _QWORD v91[2];
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];
  _QWORD v106[2];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[2];
  _QWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD v119[3];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 48);
  v84 = v2;
  v85 = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CC8);
  sub_23C34E130();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD0);
  sub_23C34DE30();
  swift_getTupleTypeMetadata2();
  v3 = sub_23C34E700();
  v4 = MEMORY[0x24BDF5428];
  MEMORY[0x24261C66C](MEMORY[0x24BDF5428], v3);
  v5 = sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58B78);
  v6 = sub_23C34DE30();
  v119[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v5);
  v119[1] = sub_23C28943C(&qword_256B58CA0, &qword_256B58B78, MEMORY[0x24BDEB950]);
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v6, v119);
  v7 = sub_23C34E64C();
  v114 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v107 = v1;
  v108 = v2;
  MEMORY[0x24261C60C](255, &v107, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v8 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v8);
  sub_23C34E64C();
  v115 = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v10 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v10);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v11 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v12 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v12);
  v13 = sub_23C34E64C();
  v14 = sub_23C34E010();
  v15 = MEMORY[0x24261C66C](v4, v11);
  v16 = MEMORY[0x24BDF4700];
  v17 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v13);
  v113[0] = v15;
  v113[1] = v17;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v14, v113);
  v18 = sub_23C34E64C();
  v19 = MEMORY[0x24261C66C](v16, v18);
  v107 = v18;
  v108 = v19;
  MEMORY[0x24261C60C](255, &v107, MEMORY[0x24BDF2F10], 0);
  v20 = sub_23C34DE30();
  v107 = v18;
  v108 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v83 = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v112[0] = OpaqueTypeConformance2;
  v112[1] = v83;
  v22 = MEMORY[0x24BDED308];
  v23 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v20, v112);
  v107 = v20;
  v108 = v23;
  v24 = MEMORY[0x24261C60C](255, &v107, MEMORY[0x24BDF2550], 0);
  v82 = sub_23C28943C(&qword_256B58D28, &qword_256B58CF8, MEMORY[0x24BEE12D8]);
  v107 = v9;
  v108 = MEMORY[0x24BEE0D00];
  v109 = v24;
  v110 = v82;
  v111 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v25 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v25);
  sub_23C34E64C();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D30);
  v116 = sub_23C34DE30();
  sub_23C34DE30();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  v117 = sub_23C34EA48();
  v118 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D40);
  swift_getTupleTypeMetadata();
  sub_23C34E700();
  sub_23C34E58C();
  sub_23C34E0DC();
  sub_23C34DE30();
  sub_23C34DE30();
  v81 = v7;
  swift_getTupleTypeMetadata2();
  v26 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v26);
  v27 = sub_23C34E64C();
  v28 = sub_23C34DE30();
  v29 = MEMORY[0x24BDF4700];
  v106[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v27);
  v106[1] = MEMORY[0x24BDECC60];
  MEMORY[0x24261C66C](v22, v28, v106);
  v87 = sub_23C34DD34();
  v88 = sub_23C34DE30();
  v86 = sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D48);
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
  v114 = v85;
  v115 = v84;
  MEMORY[0x24261C60C](255, &v114, MEMORY[0x24BEC6710], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE8);
  swift_getTupleTypeMetadata3();
  v30 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v30);
  sub_23C34E64C();
  swift_getTupleTypeMetadata3();
  v31 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v31);
  sub_23C34E64C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D00);
  swift_getTupleTypeMetadata2();
  v33 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v33);
  sub_23C34E604();
  sub_23C34DE30();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D08);
  swift_getTupleTypeMetadata2();
  v34 = sub_23C34E700();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D18);
  swift_getTupleTypeMetadata3();
  v35 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v35);
  v36 = sub_23C34E64C();
  v37 = sub_23C34E010();
  v105[0] = MEMORY[0x24261C66C](v4, v34);
  v105[1] = MEMORY[0x24261C66C](v29, v36);
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v37, v105);
  v38 = sub_23C34E64C();
  v39 = MEMORY[0x24261C66C](v29, v38);
  v114 = v38;
  v115 = v39;
  MEMORY[0x24261C60C](255, &v114, MEMORY[0x24BDF2F10], 0);
  v40 = sub_23C34DE30();
  v114 = v38;
  v115 = v39;
  v104[0] = swift_getOpaqueTypeConformance2();
  v104[1] = v83;
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v40, v104);
  v114 = v40;
  v115 = v42;
  v43 = MEMORY[0x24261C60C](255, &v114, MEMORY[0x24BDF2550], 0);
  v114 = v32;
  v115 = MEMORY[0x24BEE0D00];
  v116 = v43;
  v117 = v82;
  v118 = MEMORY[0x24BEE0D10];
  sub_23C34E6A0();
  swift_getTupleTypeMetadata2();
  v44 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v44);
  v45 = sub_23C34E64C();
  swift_getTupleTypeMetadata2();
  sub_23C34E700();
  sub_23C28943C(&qword_256B58D58, &qword_256B58D48, MEMORY[0x24BDEB998]);
  sub_23C34DDD0();
  sub_23C34EA48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
  swift_getTupleTypeMetadata3();
  v46 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v46);
  v47 = sub_23C34E64C();
  v48 = sub_23C34DE30();
  v49 = sub_23C34DE30();
  v50 = sub_23C34DE30();
  v51 = MEMORY[0x24BDF4700];
  v52 = MEMORY[0x24261C66C](MEMORY[0x24BDF4700], v47);
  v53 = sub_23C27FEE4(&qword_256B58D68, (uint64_t (*)(uint64_t))MEMORY[0x24BDF02F8], MEMORY[0x24BDF02F0]);
  v103[0] = v52;
  v103[1] = v53;
  v102[0] = MEMORY[0x24261C66C](v41, v48, v103);
  v102[1] = v53;
  v101[0] = MEMORY[0x24261C66C](v41, v49, v102);
  v101[1] = v53;
  MEMORY[0x24261C66C](v41, v50, v101);
  v54 = sub_23C34DD34();
  v55 = sub_23C34DE30();
  v100[0] = MEMORY[0x24261C66C](v51, v81);
  v100[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x24261C66C](v41, v55, v100);
  sub_23C34E64C();
  sub_23C34DE30();
  sub_23C34DE30();
  swift_getTupleTypeMetadata3();
  v56 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v56);
  v114 = sub_23C34E64C();
  v115 = v45;
  v116 = sub_23C34EA48();
  v117 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
  swift_getTupleTypeMetadata();
  v57 = sub_23C34E700();
  MEMORY[0x24261C66C](v4, v57);
  v58 = sub_23C34E64C();
  v59 = sub_23C34DE30();
  v60 = sub_23C34DE30();
  v61 = sub_23C34DE30();
  v99[0] = MEMORY[0x24261C66C](v51, v58);
  v99[1] = v53;
  v98[0] = MEMORY[0x24261C66C](v41, v59, v99);
  v98[1] = v53;
  v97[0] = MEMORY[0x24261C66C](v41, v60, v98);
  v97[1] = v53;
  MEMORY[0x24261C66C](v41, v61, v97);
  v62 = sub_23C34DD34();
  v63 = sub_23C34DE30();
  v64 = MEMORY[0x24BDEB238];
  v65 = MEMORY[0x24261C66C](MEMORY[0x24BDEB238], v62);
  v66 = MEMORY[0x24BDF1050];
  v96[0] = v65;
  v96[1] = MEMORY[0x24BDF1050];
  MEMORY[0x24261C66C](v41, v63, v96);
  v67 = sub_23C34DDF4();
  v68 = sub_23C34E010();
  v69 = sub_23C34E010();
  v70 = sub_23C34E010();
  v71 = sub_23C34E58C();
  v72 = sub_23C2BB910();
  v95[0] = MEMORY[0x24261C66C](v64, v87);
  v95[1] = v66;
  v73 = MEMORY[0x24BDED308];
  v94[0] = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v88, v95);
  v94[1] = MEMORY[0x24BDECC60];
  v74 = MEMORY[0x24261C66C](v73, v86, v94);
  v93[0] = MEMORY[0x24261C66C](v64, v54);
  v93[1] = MEMORY[0x24261C66C](MEMORY[0x24BDEC6F8], v67);
  v75 = MEMORY[0x24BDEF3E0];
  v92[0] = v74;
  v92[1] = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v68, v93);
  v91[0] = v72;
  v91[1] = MEMORY[0x24261C66C](v75, v69, v92);
  v90 = MEMORY[0x24261C66C](v75, v70, v91);
  v76 = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v71, &v90);
  v114 = v71;
  v115 = v76;
  v77 = MEMORY[0x24261C60C](255, &v114, MEMORY[0x24BE37C20], 0);
  v114 = v71;
  v115 = v76;
  v78 = swift_getOpaqueTypeConformance2();
  v114 = v77;
  v115 = v78;
  MEMORY[0x24261C60C](255, &v114, MEMORY[0x24BE37C00], 0);
  v79 = sub_23C34DE30();
  v114 = v77;
  v115 = v78;
  v89[0] = swift_getOpaqueTypeConformance2();
  v89[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24261C66C](MEMORY[0x24BDED308], v79, v89);
}

void sub_23C2BE880()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B0540);
}

void sub_23C2BE88C()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B0E0C);
}

void sub_23C2BE898()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B194C);
}

uint64_t sub_23C2BE8A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_23C34E520();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v3 + 104))(v2, *MEMORY[0x24BDF3C28]);
  result = MEMORY[0x24261BC64](v2, 0.650980392, 1.0, 0.0, 1.0);
  qword_256B58CB8 = result;
  return result;
}

uint64_t sub_23C2BE934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v0 = sub_23C34E520();
  MEMORY[0x24BDAC7A8](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDF3C28]);
  result = sub_23C34E574();
  qword_256B58CC0 = result;
  return result;
}

uint64_t sub_23C2BE9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t result;

  if (a7)
  {
    sub_23C289550(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_23C289550(a8, a9, a10 & 1);
    swift_bridgeObjectRetain();
    sub_23C289550(a12, a13, a14 & 1);
    swift_bridgeObjectRetain();
    return sub_23C2BEAB8(a16, a17, a18, a19, a20, a21, a22);
  }
  return result;
}

uint64_t sub_23C2BEAB8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v9;

  if (a4)
  {
    v9 = a7 & 1;
    sub_23C289550(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    sub_23C289550(a5, a6, v9);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23C2BEB20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58E40;
  if (!qword_256B58E40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D38);
    v2[0] = sub_23C2BEE40(&qword_256B58E48, &qword_256B58E38, &qword_256B58E50, &qword_256B58E58);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58E40);
  }
  return result;
}

uint64_t sub_23C2BEBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t result;

  if (a7)
  {
    sub_23C289340(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_23C289340(a8, a9, a10 & 1);
    swift_bridgeObjectRelease();
    sub_23C289340(a12, a13, a14 & 1);
    swift_bridgeObjectRelease();
    return sub_23C2BECA8(a16, a17, a18, a19, a20, a21, a22);
  }
  return result;
}

uint64_t sub_23C2BECA8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v9;

  if (a4)
  {
    v9 = a7 & 1;
    sub_23C289340(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    sub_23C289340(a5, a6, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C2BED10(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289550(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23C2BED4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result;

  if (a7)
  {
    sub_23C289550(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_23C289550(a8, a9, a10 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23C2BEDBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256B58E60;
  if (!qword_256B58E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CD8);
    v2 = sub_23C2C051C((unint64_t *)&qword_256B58E68, &qword_256B58E70, &qword_256B58E78, &qword_256B58E80);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B58E60);
  }
  return result;
}

uint64_t sub_23C2BEE40(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_23C28943C(a3, a4, MEMORY[0x24BDF4700]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2BEEB8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289340(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C2BEEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result;

  if (a7)
  {
    sub_23C289340(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_23C289340(a8, a9, a10 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_23C2BEF64(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 176) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_23C2BEF88(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C2A9124(*(__int128 **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(unsigned __int8 *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

unint64_t sub_23C2BEFC8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59018);
  v2 = sub_23C34EB08();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23C28950C(v6, (uint64_t)&v15, &qword_256B59020);
    v7 = v15;
    v8 = v16;
    result = sub_23C2BF32C(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23C2BF110);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23C2C0658(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23C2BF110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_23C34EC64() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_23C34EC64() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_23C34EC64() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_23C2BF254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v14 - v10;
  v9();
  sub_23C28958C((uint64_t)v8, a2, (uint64_t)v11);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_23C287D30((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_23C2BF32C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_23C34EC7C();
  sub_23C34E8B0();
  v5 = sub_23C34ECAC();
  return a3(a1, a2, v5);
}

unint64_t sub_23C2BF398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23C34EC64() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23C34EC64() & 1) == 0);
    }
  }
  return v6;
}

size_t sub_23C2BF478(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t result;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED0);
  v2 = *(_QWORD *)(v49 - 8);
  v3 = MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v46 = (_QWORD *)((char *)v42 - v6);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v42 - v7;
  v9 = *(unsigned __int8 *)(v2 + 80);
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v45 = v10;
  v42[1] = a1;
  if (v10)
  {
    v43 = (v9 + 32) & ~v9;
    v12 = MEMORY[0x24BEE4AF8] + v43;
    v13 = 0;
    v14 = 0;
    v15 = *(_QWORD *)(type metadata accessor for WorkoutDetailMusicTrack() - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v44 = *(_QWORD *)(v15 + 72);
    v42[2] = v9 | 7;
    v17 = v11;
    v48 = v2;
    while (1)
    {
      v18 = v49;
      v19 = (uint64_t)&v47[*(int *)(v49 + 48)];
      sub_23C282F90(v16, v19, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      v20 = *(int *)(v18 + 48);
      v21 = (uint64_t)v46;
      v22 = (uint64_t)v46 + v20;
      *v46 = v13;
      sub_23C2851C0(v19, v22, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      result = sub_23C2894C8(v21, (uint64_t)v8, &qword_256B58ED0);
      if (v14)
      {
        v11 = v17;
      }
      else
      {
        v24 = v17[3];
        v25 = v48;
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v26 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1)
          v27 = 1;
        else
          v27 = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256B58F90);
        v28 = *(_QWORD *)(v25 + 72);
        v29 = v43;
        v11 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v11);
        if (!v28)
          goto LABEL_35;
        v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1)
          goto LABEL_36;
        v32 = v30 / v28;
        v11[2] = v27;
        v11[3] = 2 * (v30 / v28);
        v33 = (char *)v11 + v29;
        v34 = v17[3] >> 1;
        v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17[2] = 0;
        }
        v12 = (uint64_t)&v33[v35];
        v14 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        result = swift_release();
      }
      v37 = v48;
      v38 = __OFSUB__(v14--, 1);
      if (v38)
        break;
      ++v13;
      sub_23C2894C8((uint64_t)v8, v12, &qword_256B58ED0);
      v12 += *(_QWORD *)(v37 + 72);
      v16 += v44;
      v17 = v11;
      if (v45 == v13)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v14 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v39 = v11[3];
  if (v39 < 2)
    return (size_t)v11;
  v40 = v39 >> 1;
  v38 = __OFSUB__(v40, v14);
  v41 = v40 - v14;
  if (!v38)
  {
    v11[2] = v41;
    return (size_t)v11;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23C2BF77C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for WorkoutDetailMusicTrack() + 32));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23C2BF7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 80);
  v2 = (v1 + 193) & ~v1;
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = sub_23C34D950();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23C2BF888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v13 = *(_OWORD *)(v3 + 48);
  v14 = *(_OWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(_QWORD *)(v3 + 72);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8) + 80);
  return sub_23C2AAAF8(a1, a2, v3 + 80, *(_QWORD *)(v3 + 184), *(unsigned __int8 *)(v3 + 192), v3 + ((v11 + 193) & ~v11), v7, v8, a3, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v9, v10);
}

uint64_t sub_23C2BF934()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C2BF958(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 80);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED0);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_23C2BF9B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58EC0;
  if (!qword_256B58EC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CF0);
    v2[0] = sub_23C28943C(&qword_256B58EC8, &qword_256B58EB0, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58EC0);
  }
  return result;
}

void sub_23C2BFA34(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C2AB3BC(*(__int128 **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(unsigned __int8 *)(v1 + 112), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_23C2BFA78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = type metadata accessor for WorkoutDetailMusicTrack();
  v5 = (v3 + *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v0 + v2;
  v7 = sub_23C34D950();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = v0 + v5;
  swift_bridgeObjectRelease();
  v11 = v0 + v5 + *(int *)(v4 + 20);
  v12 = sub_23C34DA94();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v11 + *(int *)(type metadata accessor for WorkoutDetailArtwork() + 20);
  if (!v9(v14, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v14, v7);
  swift_bridgeObjectRelease();
  v15 = v10 + *(int *)(v4 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23C34DAC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2BFCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v12 = *(_OWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailMusicTrack() - 8) + 80);
  return sub_23C2AE254(v0 + v8, (__int128 *)(v0 + v9), v0 + ((v9 + v10 + 104) & ~v10), v1, v2, v3, v4, v5, v12, *((uint64_t *)&v12 + 1), v6);
}

uint64_t sub_23C2BFD7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2AD094(*(_QWORD *)(v1 + 80), *(uint64_t **)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), a1, *(char **)(v1 + 48));
}

void sub_23C2BFDB8()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2AC1CC);
}

uint64_t sub_23C2BFDC4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2BFE28()
{
  return sub_23C2BFE70(&qword_256B58F10, &qword_256B58F00, sub_23C2BFE4C, MEMORY[0x24BDF1050]);
}

uint64_t sub_23C2BFE4C()
{
  return sub_23C2BFE70(&qword_256B58F18, &qword_256B58EF8, (uint64_t (*)(void))sub_23C2BFED8, MEMORY[0x24BDECC60]);
}

uint64_t sub_23C2BFE70(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2BFED8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58F20;
  if (!qword_256B58F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58EF0);
    v2[0] = sub_23C2BFF5C();
    v2[1] = sub_23C28943C(&qword_256B58F48, &qword_256B58F50, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58F20);
  }
  return result;
}

unint64_t sub_23C2BFF5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58F28;
  if (!qword_256B58F28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58EE8);
    v2[0] = sub_23C27FEE4(&qword_256B58F30, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918], MEMORY[0x24BDF4900]);
    v2[1] = sub_23C28943C(&qword_256B58F38, &qword_256B58F40, MEMORY[0x24BDEFB18]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58F28);
  }
  return result;
}

uint64_t sub_23C2BFFF8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289550(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23C2C0028(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C289340(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23C2C0058()
{
  unint64_t result;

  result = qword_256B58F68;
  if (!qword_256B58F68)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256B58F68);
  }
  return result;
}

uint64_t sub_23C2C00A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DED8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C2C00D0()
{
  return sub_23C34DEE4();
}

uint64_t sub_23C2C00F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 144);
  sub_23C289550(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C2BFFF8(v2, v3, v4, v5);
  sub_23C289550(v6, v7, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_23C2C01D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58F70;
  if (!qword_256B58F70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D10);
    v2[0] = sub_23C28943C(&qword_256B58F78, &qword_256B58F80, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58F70);
  }
  return result;
}

uint64_t sub_23C2C0254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 144);
  sub_23C289340(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23C2C0028(v2, v3, v4, v5);
  sub_23C289340(v6, v7, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C2C0330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v9 = *(_BYTE *)(a1 + 168);
  sub_23C289340(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23C2C0028(v2, v3, v4, v5);
  sub_23C289340(v6, v7, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C2C040C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  sub_23C289550(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23C2BFFF8(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_23C2C0490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  sub_23C289340(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23C2C0028(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_23C2C051C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = sub_23C28943C(a3, a4, MEMORY[0x24BDF1028]);
    v10[0] = MEMORY[0x24BDF1F80];
    v10[1] = v9;
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v8, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2C059C()
{
  return objectdestroy_36Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

void sub_23C2C05A8()
{
  sub_23C2C0AAC((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], (void (*)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23C2AA9B0);
}

unint64_t sub_23C2C05BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B58FF8;
  if (!qword_256B58FF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58FA0);
    v2[0] = sub_23C28943C(&qword_256B59000, &qword_256B58F98, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23C28943C(&qword_256B59008, &qword_256B59010, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B58FF8);
  }
  return result;
}

_OWORD *sub_23C2C0658(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_23C2C0668(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_23C2A6D5C(v1[10], v1[11], v1[12], v1[2], v1[3], v1[4], v1[5], v1[6], a1, v1[7], v1[8], v1[9]);
}

unint64_t sub_23C2C06A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_256B59030;
  if (!qword_256B59030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58CE0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59038);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59040);
    sub_23C28943C(&qword_256B59048, &qword_256B59040, MEMORY[0x24BDF4700]);
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B59030);
  }
  return result;
}

uint64_t sub_23C2C0780()
{
  return objectdestroy_36Tm((uint64_t (*)(_QWORD))MEMORY[0x24BDCC5A8]);
}

uint64_t objectdestroy_36Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_23C2C0830()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C34D86C() - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 168))(v0 + ((v1 + 184) & ~v1));
}

void sub_23C2C087C()
{
  sub_23C2C08D8();
}

uint64_t objectdestroy_2Tm()
{
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C2C08D8()
{
  sub_23C2A8B44();
}

uint64_t sub_23C2C0914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetailTrainer() - 8) + 80);
  v2 = (v1 + 184) & ~v1;
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = type metadata accessor for WorkoutDetailArtwork();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_23C34DA94();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    v6 = v0 + v2 + *(int *)(v3 + 20);
    v7 = sub_23C34D950();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23C2C0A98()
{
  sub_23C2C0AAC((uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer, (void (*)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23C2A864C);
}

void sub_23C2C0AAC(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *((_QWORD *)v2 + 2);
  v5 = *((_QWORD *)v2 + 3);
  v6 = *((_QWORD *)v2 + 4);
  v7 = *((_QWORD *)v2 + 5);
  v8 = *((_QWORD *)v2 + 6);
  v9 = *((_QWORD *)v2 + 7);
  v10 = *((_QWORD *)v2 + 8);
  v11 = *((_QWORD *)v2 + 9);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  a2((_QWORD *)v2 + 10, &v2[(v12 + 184) & ~v12], v4, v5, v6, v7, v8, v9, v10, v11);
  JUMPOUT(0x23C2C0B24);
}

uint64_t sub_23C2C0B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23C2A8798(*(_QWORD *)(v1 + 16), a1);
}

void sub_23C2C0B4C()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A53CC);
}

void sub_23C2C0B58()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2A568C);
}

unint64_t sub_23C2C0B64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B590C8;
  if (!qword_256B590C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B590D0);
    v2[0] = sub_23C2BFE70(&qword_256B590D8, &qword_256B590E0, (uint64_t (*)(void))sub_23C2C0C08, MEMORY[0x24BDECC60]);
    v2[1] = sub_23C27FEE4(&qword_256B58D20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B590C8);
  }
  return result;
}

unint64_t sub_23C2C0C08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B590E8;
  if (!qword_256B590E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D50);
    v2[0] = sub_23C2C051C((unint64_t *)&qword_256B58E68, &qword_256B58E70, &qword_256B58E78, &qword_256B58E80);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B590E8);
  }
  return result;
}

uint64_t sub_23C2C0C94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2A62B0(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 120), *(uint64_t (**)(_QWORD, _QWORD))(v1 + 128), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_23C2C0CD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2A68F8(*(void (**)(uint64_t))(v1 + 96), *(_QWORD *)(v1 + 48), a1, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

void sub_23C2C0D10()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B34D0);
}

void sub_23C2C0D1C()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B3F54);
}

void sub_23C2C0D28()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B552C);
}

uint64_t sub_23C2C0D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 208);
  v3 = *(_QWORD *)(a1 + 216);
  v4 = *(_QWORD *)(a1 + 224);
  v5 = *(_QWORD *)(a1 + 232);
  v6 = *(_QWORD *)(a1 + 240);
  v7 = *(_QWORD *)(a1 + 248);
  v8 = *(_QWORD *)(a1 + 256);
  v9 = *(_QWORD *)(a1 + 264);
  v11 = *(_OWORD *)(a1 + 272);
  sub_23C2C0E2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  sub_23C2BED4C(v2, v3, v4, v5, v6, v7, v8, v9, v11, SBYTE8(v11));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2C0E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a7 != 1)
    return sub_23C2BE9BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  return a1;
}

unint64_t sub_23C2C0E94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B590F8;
  if (!qword_256B590F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D60);
    v2[0] = sub_23C2BFE70(&qword_256B59100, &qword_256B59108, sub_23C2C0F38, MEMORY[0x24BDECC60]);
    v2[1] = sub_23C28943C(&qword_256B58E30, &qword_256B58D30, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B590F8);
  }
  return result;
}

uint64_t sub_23C2C0F38()
{
  return sub_23C2BFE70(&qword_256B59110, &qword_256B59118, (uint64_t (*)(void))sub_23C2C0F5C, MEMORY[0x24BDECC60]);
}

unint64_t sub_23C2C0F5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59120;
  if (!qword_256B59120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59128);
    v2[0] = sub_23C28943C(&qword_256B59130, &qword_256B59138, MEMORY[0x24BDEB9A8]);
    v2[1] = sub_23C28943C(&qword_256B59140, &qword_256B59148, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEC550], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59120);
  }
  return result;
}

uint64_t sub_23C2C0FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  v11 = *(_QWORD *)(a1 + 208);
  v2 = *(_QWORD *)(a1 + 216);
  v3 = *(_QWORD *)(a1 + 224);
  v4 = *(_QWORD *)(a1 + 232);
  v5 = *(_QWORD *)(a1 + 240);
  v6 = *(_QWORD *)(a1 + 248);
  v7 = *(_QWORD *)(a1 + 256);
  v8 = *(_QWORD *)(a1 + 264);
  v10 = *(_OWORD *)(a1 + 272);
  sub_23C2C10F4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  sub_23C2BEEF4(v11, v2, v3, v4, v5, v6, v7, v8, v10, SBYTE8(v10));
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23C2C10F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if (a7 != 1)
    return sub_23C2BEBAC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  return a1;
}

_QWORD *sub_23C2C115C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

double sub_23C2C11C8(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return result;
}

uint64_t sub_23C2C1200()
{
  return swift_deallocObject();
}

void sub_23C2C1210()
{
  sub_23C2C121C((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B5D50);
}

void sub_23C2C121C(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  a1(v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
  JUMPOUT(0x23C2C1248);
}

uint64_t sub_23C2C1254()
{
  return swift_deallocObject();
}

unint64_t sub_23C2C1264()
{
  unint64_t result;

  result = qword_256B59158;
  if (!qword_256B59158)
  {
    result = MEMORY[0x24261C66C](&unk_23C354E68, &type metadata for TwoColumnHStack);
    atomic_store(result, (unint64_t *)&qword_256B59158);
  }
  return result;
}

uint64_t sub_23C2C12A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C2BF254(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C2C12B8()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v18;

  v1 = (int *)type metadata accessor for WorkoutDetail();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 184) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  sub_23C287FCC();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + v2;
  v4 = sub_23C34D86C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  swift_bridgeObjectRelease();
  v5(v3 + v1[6], v4);
  v6 = v3 + v1[7];
  v7 = sub_23C34DA94();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for WorkoutDetailArtwork() + 20);
  v10 = sub_23C34D950();
  v18 = *(_QWORD *)(v10 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (!v11(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  v12 = v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23C34DAC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v5(v3 + v1[10], v4);
  v5(v3 + v1[11], v4);
  v5(v3 + v1[12], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v3 + v1[16];
  if (!v11(v14, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v10);
  swift_bridgeObjectRelease();
  v15 = v3 + v1[18];
  if (!v11(v15, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v10);
  swift_bridgeObjectRelease();
  v5(v3 + v1[20], v4);
  v16 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v16(v3 + v1[21], v10);
  v16(v3 + v1[22], v10);
  swift_bridgeObjectRelease();
  v5(v3 + v1[24], v4);
  v5(v3 + v1[25], v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2C15F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v13 = *(_OWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorkoutDetail() - 8) + 80);
  return sub_23C2B7110(a1, v2 + 80, v2 + ((v11 + 184) & ~v11), v5, v6, v7, v8, v9, a2, v13, *((uint64_t *)&v13 + 1), v10);
}

void sub_23C2C169C()
{
  sub_23C2C1BCC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B7A24);
}

void sub_23C2C16A8()
{
  sub_23C2C1BCC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B84D8);
}

void sub_23C2C16B4()
{
  sub_23C2C1BCC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B94B4);
}

uint64_t sub_23C2C16C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(_QWORD *)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v8 = *(_QWORD *)(a1 + 280);
  v9 = *(_QWORD *)(a1 + 288);
  v11 = *(_OWORD *)(a1 + 296);
  sub_23C2C10F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168));
  sub_23C2BEEF4(v2, v3, v4, v5, v6, v7, v8, v9, v11, SBYTE8(v11));
  return a1;
}

uint64_t sub_23C2C17AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 256);
  v3 = *(_QWORD *)(a1 + 264);
  v4 = *(_QWORD *)(a1 + 272);
  v5 = *(_QWORD *)(a1 + 280);
  v6 = *(_QWORD *)(a1 + 288);
  v7 = *(_QWORD *)(a1 + 296);
  v8 = *(_QWORD *)(a1 + 304);
  v9 = *(_QWORD *)(a1 + 312);
  v11 = *(_OWORD *)(a1 + 320);
  sub_23C2C0E2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  sub_23C2BED4C(v2, v3, v4, v5, v6, v7, v8, v9, v11, SBYTE8(v11));
  swift_retain();
  return a1;
}

unint64_t sub_23C2C18B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59160;
  if (!qword_256B59160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58D70);
    v2[0] = sub_23C2BFE70(&qword_256B59168, &qword_256B59170, sub_23C2C1954, MEMORY[0x24BDECC60]);
    v2[1] = sub_23C28943C(&qword_256B58E30, &qword_256B58D30, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59160);
  }
  return result;
}

uint64_t sub_23C2C1954()
{
  return sub_23C2BFE70(&qword_256B59178, &qword_256B59180, (uint64_t (*)(void))sub_23C2C1978, MEMORY[0x24BDECC60]);
}

unint64_t sub_23C2C1978()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59188;
  if (!qword_256B59188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59190);
    v2[0] = sub_23C28943C(&qword_256B59198, &qword_256B591A0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59188);
  }
  return result;
}

uint64_t sub_23C2C19FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 256);
  v3 = *(_QWORD *)(a1 + 264);
  v4 = *(_QWORD *)(a1 + 272);
  v5 = *(_QWORD *)(a1 + 280);
  v6 = *(_QWORD *)(a1 + 288);
  v7 = *(_QWORD *)(a1 + 296);
  v8 = *(_QWORD *)(a1 + 304);
  v9 = *(_QWORD *)(a1 + 312);
  v11 = *(_OWORD *)(a1 + 320);
  sub_23C2C10F4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  sub_23C2BEEF4(v2, v3, v4, v5, v6, v7, v8, v9, v11, SBYTE8(v11));
  swift_release();
  return a1;
}

uint64_t sub_23C2C1B00(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4);
  return a1;
}

double sub_23C2C1B7C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 209) = 0u;
  return result;
}

void sub_23C2C1BC0()
{
  sub_23C2C1BCC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2B9CCC);
}

void sub_23C2C1BCC(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  a1(v1[10], v1[11], v1[12], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
  JUMPOUT(0x23C2C1C00);
}

uint64_t TrainerTipPlaceholder.canvasItemIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrainerTipPlaceholder.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

FitnessProductDetail::TrainerTipPlaceholder __swiftcall TrainerTipPlaceholder.init(canvasItemIdentifier:identifier:)(Swift::String canvasItemIdentifier, Swift::String identifier)
{
  Swift::String *v2;
  FitnessProductDetail::TrainerTipPlaceholder result;

  *v2 = canvasItemIdentifier;
  v2[1] = identifier;
  result.identifier = identifier;
  result.canvasItemIdentifier = canvasItemIdentifier;
  return result;
}

uint64_t sub_23C2C1C70(char a1)
{
  if ((a1 & 1) != 0)
    return 0x696669746E656469;
  else
    return 0xD000000000000014;
}

uint64_t sub_23C2C1CB0()
{
  char *v0;

  return sub_23C2C1C70(*v0);
}

uint64_t sub_23C2C1CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2C2710(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2C1CDC()
{
  sub_23C2C1E60();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C1D04()
{
  sub_23C2C1E60();
  return sub_23C34ECDC();
}

uint64_t TrainerTipPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B591B0);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C1E60();
  sub_23C34ECC4();
  v12 = 0;
  sub_23C34EC10();
  if (!v2)
  {
    v11 = 1;
    sub_23C34EC10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_23C2C1E60()
{
  unint64_t result;

  result = qword_256B591B8;
  if (!qword_256B591B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353E2C, &type metadata for TrainerTipPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B591B8);
  }
  return result;
}

uint64_t TrainerTipPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B591C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C1E60();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_23C34EB80();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C34EB80();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2C2044@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrainerTipPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_23C2C2058(_QWORD *a1)
{
  return TrainerTipPlaceholder.encode(to:)(a1);
}

uint64_t TrainerTipPlaceholder.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t TrainerTipPlaceholder.hashValue.getter()
{
  sub_23C34EC7C();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C2164()
{
  sub_23C34EC7C();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C21E8()
{
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2C2258()
{
  sub_23C34EC7C();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail21TrainerTipPlaceholderV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_23C34EC64(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_23C34EC64();
  }
  return result;
}

unint64_t sub_23C2C2370()
{
  unint64_t result;

  result = qword_256B591C8;
  if (!qword_256B591C8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for TrainerTipPlaceholder, &type metadata for TrainerTipPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B591C8);
  }
  return result;
}

uint64_t destroy for TrainerTipPlaceholder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TrainerTipPlaceholder(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TrainerTipPlaceholder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for TrainerTipPlaceholder(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipPlaceholder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainerTipPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipPlaceholder()
{
  return &type metadata for TrainerTipPlaceholder;
}

uint64_t storeEnumTagSinglePayload for TrainerTipPlaceholder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2C25B8 + 4 * byte_23C353C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2C25EC + 4 * byte_23C353C80[v4]))();
}

uint64_t sub_23C2C25EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C25F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2C25FCLL);
  return result;
}

uint64_t sub_23C2C2608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2C2610);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2C2614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C261C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipPlaceholder.CodingKeys()
{
  return &type metadata for TrainerTipPlaceholder.CodingKeys;
}

unint64_t sub_23C2C263C()
{
  unint64_t result;

  result = qword_256B591D0;
  if (!qword_256B591D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353E04, &type metadata for TrainerTipPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B591D0);
  }
  return result;
}

unint64_t sub_23C2C2684()
{
  unint64_t result;

  result = qword_256B591D8;
  if (!qword_256B591D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C353D74, &type metadata for TrainerTipPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B591D8);
  }
  return result;
}

unint64_t sub_23C2C26CC()
{
  unint64_t result;

  result = qword_256B591E0;
  if (!qword_256B591E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C353D9C, &type metadata for TrainerTipPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B591E0);
  }
  return result;
}

uint64_t sub_23C2C2710(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023C361640 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WorkoutDetailContributor.bio.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailContributor.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailContributor.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall WorkoutDetailContributor.init(bio:identifier:name:)(FitnessProductDetail::WorkoutDetailContributor *__return_ptr retstr, Swift::String_optional bio, Swift::String identifier, Swift::String name)
{
  retstr->bio = bio;
  retstr->identifier = identifier;
  retstr->name = name;
}

uint64_t sub_23C2C2898(char a1)
{
  return qword_23C354090[a1];
}

uint64_t sub_23C2C28B8()
{
  char *v0;

  return sub_23C2C2898(*v0);
}

uint64_t sub_23C2C28C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2C3580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2C28E4()
{
  sub_23C2C2A9C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C290C()
{
  sub_23C2C2A9C();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailContributor.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B591E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C2A9C();
  sub_23C34ECC4();
  v14 = 0;
  v9 = v11[5];
  sub_23C34EBE0();
  if (!v9)
  {
    v13 = 1;
    sub_23C34EC10();
    v12 = 2;
    sub_23C34EC10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2C2A9C()
{
  unint64_t result;

  result = qword_256B591F0;
  if (!qword_256B591F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35403C, &type metadata for WorkoutDetailContributor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B591F0);
  }
  return result;
}

uint64_t WorkoutDetailContributor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B591F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C2A9C();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_23C34EB50();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C34EB80();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_23C34EB80();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2C2D1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WorkoutDetailContributor.init(from:)(a1, a2);
}

uint64_t sub_23C2C2D30(_QWORD *a1)
{
  return WorkoutDetailContributor.encode(to:)(a1);
}

uint64_t WorkoutDetailContributor.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutDetailContributor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C34EC7C();
  sub_23C34EC94();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C2EE0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2C2FA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C34EC7C();
  sub_23C34EC94();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail07WorkoutC11ContributorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (v3)
  {
    if (v8)
    {
      if (*a1 != *a2 || v3 != v8)
      {
        v13 = sub_23C34EC64();
        result = 0;
        if ((v13 & 1) == 0)
          return result;
      }
      goto LABEL_9;
    }
    return 0;
  }
  if (v8)
    return 0;
LABEL_9:
  if (v4 == v9 && v6 == v11 || (v15 = sub_23C34EC64(), result = 0, (v15 & 1) != 0))
  {
    if (v5 == v10 && v7 == v12)
      return 1;
    else
      return sub_23C34EC64();
  }
  return result;
}

unint64_t sub_23C2C317C()
{
  unint64_t result;

  result = qword_256B59200;
  if (!qword_256B59200)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContributor, &type metadata for WorkoutDetailContributor);
    atomic_store(result, (unint64_t *)&qword_256B59200);
  }
  return result;
}

uint64_t destroy for WorkoutDetailContributor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WorkoutDetailContributor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WorkoutDetailContributor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for WorkoutDetailContributor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailContributor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailContributor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContributor()
{
  return &type metadata for WorkoutDetailContributor;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailContributor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2C3428 + 4 * byte_23C353E85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2C345C + 4 * byte_23C353E80[v4]))();
}

uint64_t sub_23C2C345C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C3464(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2C346CLL);
  return result;
}

uint64_t sub_23C2C3478(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2C3480);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C2C3484(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C348C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContributor.CodingKeys()
{
  return &type metadata for WorkoutDetailContributor.CodingKeys;
}

unint64_t sub_23C2C34AC()
{
  unint64_t result;

  result = qword_256B59208;
  if (!qword_256B59208)
  {
    result = MEMORY[0x24261C66C](&unk_23C354014, &type metadata for WorkoutDetailContributor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59208);
  }
  return result;
}

unint64_t sub_23C2C34F4()
{
  unint64_t result;

  result = qword_256B59210;
  if (!qword_256B59210)
  {
    result = MEMORY[0x24261C66C](&unk_23C353F84, &type metadata for WorkoutDetailContributor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59210);
  }
  return result;
}

unint64_t sub_23C2C353C()
{
  unint64_t result;

  result = qword_256B59218;
  if (!qword_256B59218)
  {
    result = MEMORY[0x24261C66C](&unk_23C353FAC, &type metadata for WorkoutDetailContributor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59218);
  }
  return result;
}

uint64_t sub_23C2C3580(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 7301474 && a2 == 0xE300000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t type metadata accessor for WorkoutDetailMusicTrack()
{
  uint64_t result;

  result = qword_256B592C0;
  if (!qword_256B592C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutDetailMusicTrack.artist.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailMusicTrack.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetailMusicTrack();
  return sub_23C282F90(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
}

uint64_t WorkoutDetailMusicTrack.artworkCropCode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetailMusicTrack();
  return sub_23C28950C(v1 + *(int *)(v3 + 24), a1, &qword_256B58ED8);
}

uint64_t WorkoutDetailMusicTrack.isExplicit.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutDetailMusicTrack() + 28));
}

uint64_t _s20FitnessProductDetail07WorkoutC10MusicTrackV2idSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailMusicTrack() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailMusicTrack.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetailMusicTrack() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetailMusicTrack.init(identifier:title:artist:artwork:artworkCropCode:isExplicit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10)
{
  int *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t result;

  v18 = (int *)type metadata accessor for WorkoutDetailMusicTrack();
  v19 = (_QWORD *)((char *)a9 + v18[8]);
  *v19 = a1;
  v19[1] = a2;
  v20 = (_QWORD *)((char *)a9 + v18[9]);
  *v20 = a3;
  v20[1] = a4;
  *a9 = a5;
  a9[1] = a6;
  sub_23C286C3C(a7, (uint64_t)a9 + v18[5]);
  result = sub_23C2C38E4(a8, (uint64_t)a9 + v18[6]);
  *((_BYTE *)a9 + v18[7]) = a10;
  return result;
}

uint64_t sub_23C2C38E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2C392C(char a1)
{
  return *(_QWORD *)&aArtist_0[8 * a1];
}

uint64_t sub_23C2C394C()
{
  char *v0;

  return sub_23C2C392C(*v0);
}

uint64_t sub_23C2C3954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2C5A44(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C2C3978(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23C2C3984()
{
  sub_23C2C3C28();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C39AC()
{
  sub_23C2C3C28();
  return sub_23C34ECDC();
}

uint64_t sub_23C2C39D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 32));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutDetailMusicTrack.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59220);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C3C28();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34EC10();
  if (!v1)
  {
    type metadata accessor for WorkoutDetailMusicTrack();
    v8[14] = 1;
    type metadata accessor for WorkoutDetailArtwork();
    sub_23C27FEE4(&qword_256B57DF8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
    sub_23C34EC40();
    v8[13] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    sub_23C2C40AC(&qword_256B59230, MEMORY[0x24BE379F0]);
    sub_23C34EC40();
    v8[12] = 3;
    sub_23C34EC1C();
    v8[11] = 4;
    sub_23C34EC10();
    v8[10] = 5;
    sub_23C34EC10();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2C3C28()
{
  unint64_t result;

  result = qword_256B59228;
  if (!qword_256B59228)
  {
    result = MEMORY[0x24261C66C](&unk_23C3542FC, &type metadata for WorkoutDetailMusicTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59228);
  }
  return result;
}

uint64_t WorkoutDetailMusicTrack.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v25 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for WorkoutDetailArtwork();
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59248);
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for WorkoutDetailMusicTrack();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23C2C3C28();
  v13 = v31;
  sub_23C34ECB8();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  v37 = 0;
  *v11 = sub_23C34EB80();
  v11[1] = v14;
  v36 = 1;
  sub_23C27FEE4(&qword_256B57E08, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
  sub_23C34EBB0();
  sub_23C286C3C((uint64_t)v5, (uint64_t)v11 + v9[5]);
  v35 = 2;
  sub_23C2C40AC(&qword_256B59250, MEMORY[0x24BE379F8]);
  v15 = (uint64_t)v26;
  sub_23C34EBB0();
  sub_23C2C38E4(v15, (uint64_t)v11 + v9[6]);
  v34 = 3;
  *((_BYTE *)v11 + v9[7]) = sub_23C34EB8C() & 1;
  v33 = 4;
  v16 = sub_23C34EB80();
  v17 = (uint64_t *)((char *)v11 + v9[8]);
  *v17 = v16;
  v17[1] = v18;
  v32 = 5;
  v19 = sub_23C34EB80();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  v22 = (uint64_t *)((char *)v11 + v9[9]);
  *v22 = v19;
  v22[1] = v21;
  sub_23C282F90((uint64_t)v11, v25, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_23C283550((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
}

uint64_t sub_23C2C406C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2C40AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v7[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58ED8);
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE35120];
    v7[0] = sub_23C27FEE4(&qword_256B59238, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35150]);
    v7[1] = sub_23C27FEE4(&qword_256B59240, v6, MEMORY[0x24BE35130]);
    v7[2] = MEMORY[0x24BEE0D38];
    v7[3] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x24261C66C](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2C4164@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetailMusicTrack.init(from:)(a1, a2);
}

uint64_t sub_23C2C4178(_QWORD *a1)
{
  return WorkoutDetailMusicTrack.encode(to:)(a1);
}

uint64_t WorkoutDetailMusicTrack.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_23C34D950();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34DA94();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  v14 = v1 + *(int *)(type metadata accessor for WorkoutDetailMusicTrack() + 20);
  sub_23C28950C(v14, (uint64_t)v13, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v15 = type metadata accessor for WorkoutDetailArtwork();
  sub_23C28950C(v14 + *(int *)(v15 + 20), (uint64_t)v6, &qword_256B57E20);
  v17 = v22;
  v16 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v6, 1, v23) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v6, v16);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
  }
  sub_23C34E8B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  sub_23C27FEE4(&qword_256B59258, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35138]);
  sub_23C34DC98();
  sub_23C34EC94();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutDetailMusicTrack.hashValue.getter()
{
  sub_23C34EC7C();
  WorkoutDetailMusicTrack.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C4550()
{
  sub_23C34EC7C();
  WorkoutDetailMusicTrack.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C4590()
{
  sub_23C34EC7C();
  WorkoutDetailMusicTrack.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail07WorkoutC10MusicTrackV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  int *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_23C34EC64(), result = 0, (v5 & 1) != 0))
  {
    v7 = (int *)type metadata accessor for WorkoutDetailMusicTrack();
    if ((static WorkoutDetailArtwork.== infix(_:_:)((char *)a1 + v7[5], (char *)a2 + v7[5]) & 1) != 0
      && (sub_23C34DAC4(),
          v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE35120],
          sub_23C27FEE4(&qword_256B57BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35140]),
          sub_23C27FEE4(&qword_256B57BC8, v8, MEMORY[0x24BE35148]),
          (sub_23C34DCA4() & 1) != 0)
      && *((unsigned __int8 *)a1 + v7[7]) == *((unsigned __int8 *)a2 + v7[7]))
    {
      v9 = v7[8];
      v10 = *(_QWORD *)((char *)a1 + v9);
      v11 = *(_QWORD *)((char *)a1 + v9 + 8);
      v12 = (_QWORD *)((char *)a2 + v9);
      v13 = v10 == *v12 && v11 == v12[1];
      if (v13 || (v14 = sub_23C34EC64(), result = 0, (v14 & 1) != 0))
      {
        v15 = v7[9];
        v16 = *(_QWORD *)((char *)a1 + v15);
        v17 = *(_QWORD *)((char *)a1 + v15 + 8);
        v18 = (_QWORD *)((char *)a2 + v15);
        if (v16 == *v18 && v17 == v18[1])
          return 1;
        else
          return sub_23C34EC64();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_23C2C475C()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_23C2C4768()
{
  return sub_23C27FEE4(&qword_256B59260, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailMusicTrack, (uint64_t)&protocol conformance descriptor for WorkoutDetailMusicTrack);
}

_QWORD *initializeBufferWithCopyOfBuffer for WorkoutDetailMusicTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34DA94();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = type metadata accessor for WorkoutDetailArtwork();
    v17 = *(int *)(v16 + 20);
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = sub_23C34D950();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = *(int *)(v16 + 24);
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = a3[6];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_23C34DAC4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      v31 = v29[1];
      *v28 = *v29;
      v28[1] = v31;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v32 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v33 = (_QWORD *)((char *)v4 + v32);
    v34 = (_QWORD *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = a3[9];
    v37 = (_QWORD *)((char *)v4 + v36);
    v38 = (_QWORD *)((char *)a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for WorkoutDetailMusicTrack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23C34DA94();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v4 + *(int *)(type metadata accessor for WorkoutDetailArtwork() + 20);
  v8 = sub_23C34D950();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v10 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23C34DAC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WorkoutDetailMusicTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DA94();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = type metadata accessor for WorkoutDetailArtwork();
  v15 = *(int *)(v14 + 20);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = sub_23C34D950();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = *(int *)(v14 + 24);
  v22 = &v8[v21];
  v23 = &v9[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23C34DAC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    v29 = v27[1];
    *v26 = *v27;
    v26[1] = v29;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v30 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[9];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WorkoutDetailMusicTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  char *v39;
  int *v40;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DA94();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = type metadata accessor for WorkoutDetailArtwork();
  v16 = *(int *)(v15 + 20);
  v17 = &v7[v16];
  v39 = v8;
  v18 = &v8[v16];
  v19 = sub_23C34D950();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_13:
  v25 = *(int *)(v15 + 24);
  v26 = &v7[v25];
  v27 = &v39[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v28 = v40[6];
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    sub_23C2C406C((uint64_t)a1 + v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_23C34DAC4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + v40[7]) = *((_BYTE *)a2 + v40[7]);
  v32 = v40[8];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v40[9];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for WorkoutDetailMusicTrack(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DA94();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = type metadata accessor for WorkoutDetailArtwork();
  v13 = *(int *)(v12 + 20);
  v14 = &v7[v13];
  v15 = &v8[v13];
  v16 = sub_23C34D950();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)&v7[*(int *)(v12 + 24)] = *(_OWORD *)&v8[*(int *)(v12 + 24)];
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_23C34DAC4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  v24 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v24) = *(_OWORD *)((char *)a2 + v24);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for WorkoutDetailMusicTrack(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v47;
  int *v48;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v48 = a3;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DA94();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = type metadata accessor for WorkoutDetailArtwork();
  v17 = *(int *)(v16 + 20);
  v18 = &v8[v17];
  v47 = v9;
  v19 = &v9[v17];
  v20 = sub_23C34D950();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  v26 = *(int *)(v16 + 24);
  v27 = &v8[v26];
  v28 = &v47[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v31 = v48[6];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    sub_23C2C406C((uint64_t)a1 + v31);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_23C34DAC4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  v36 = v48[8];
  *((_BYTE *)a1 + v48[7]) = *((_BYTE *)a2 + v48[7]);
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = v48[9];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailMusicTrack()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2C55AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for WorkoutDetailArtwork();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailMusicTrack()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2C565C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for WorkoutDetailArtwork();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23C2C56FC()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for WorkoutDetailArtwork();
  if (v0 <= 0x3F)
  {
    sub_23C2C5798();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23C2C5798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B592D0)
  {
    sub_23C34DAC4();
    sub_23C27FEE4(&qword_256B57BC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35148]);
    v0 = sub_23C34DCB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B592D0);
  }
}

uint64_t getEnumTagSinglePayload for WorkoutDetailMusicTrack.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailMusicTrack.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C2C58EC + 4 * byte_23C3540C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C2C5920 + 4 * byte_23C3540C0[v4]))();
}

uint64_t sub_23C2C5920(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C5928(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2C5930);
  return result;
}

uint64_t sub_23C2C593C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2C5944);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C2C5948(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C5950(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailMusicTrack.CodingKeys()
{
  return &type metadata for WorkoutDetailMusicTrack.CodingKeys;
}

unint64_t sub_23C2C5970()
{
  unint64_t result;

  result = qword_256B59310;
  if (!qword_256B59310)
  {
    result = MEMORY[0x24261C66C](&unk_23C3542D4, &type metadata for WorkoutDetailMusicTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59310);
  }
  return result;
}

unint64_t sub_23C2C59B8()
{
  unint64_t result;

  result = qword_256B59318;
  if (!qword_256B59318)
  {
    result = MEMORY[0x24261C66C](&unk_23C354244, &type metadata for WorkoutDetailMusicTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59318);
  }
  return result;
}

unint64_t sub_23C2C5A00()
{
  unint64_t result;

  result = qword_256B59320;
  if (!qword_256B59320)
  {
    result = MEMORY[0x24261C66C](&unk_23C35426C, &type metadata for WorkoutDetailMusicTrack.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59320);
  }
  return result;
}

uint64_t sub_23C2C5A44(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x747369747261 && a2 == 0xE600000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x436B726F77747261 && a2 == 0xEF65646F43706F72 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C7078457369 && a2 == 0xEA00000000007469 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

ValueMetadata *type metadata accessor for NavigationBarButtonStyle()
{
  return &type metadata for NavigationBarButtonStyle;
}

uint64_t sub_23C2C5CC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2C5CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v41 = a1;
  v1 = sub_23C34E25C();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23C34E6D0();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C34E0E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59328);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59330);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59338);
  MEMORY[0x24BDAC7A8](v37);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34E0F4();
  sub_23C34E6E8();
  sub_23C34DD88();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v18 = &v12[*(int *)(v10 + 36)];
  v19 = v44;
  *(_OWORD *)v18 = v43;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v45;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23C34E6B8();
  v20 = &v15[*(int *)(v13 + 36)];
  v22 = v35;
  v21 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v20, v5, v36);
  *(_WORD *)&v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B59340) + 56)] = 256;
  sub_23C28950C((uint64_t)v12, (uint64_t)v15, &qword_256B59328);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
  sub_23C285184((uint64_t)v12, &qword_256B59328);
  sub_23C34E1D8();
  sub_23C34E1F0();
  swift_release();
  v24 = v38;
  v23 = v39;
  v25 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, *MEMORY[0x24BDF17C8], v40);
  v26 = sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
  KeyPath = swift_getKeyPath();
  sub_23C28950C((uint64_t)v15, (uint64_t)v17, &qword_256B59330);
  v28 = (uint64_t *)&v17[*(int *)(v37 + 36)];
  *v28 = KeyPath;
  v28[1] = v26;
  sub_23C285184((uint64_t)v15, &qword_256B59330);
  v29 = sub_23C34E550();
  v30 = swift_getKeyPath();
  v42 = v29;
  swift_retain();
  v31 = sub_23C34DD94();
  v32 = v41;
  sub_23C28950C((uint64_t)v17, v41, &qword_256B59338);
  swift_release();
  v33 = (uint64_t *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B59348) + 36));
  *v33 = v30;
  v33[1] = v31;
  return sub_23C285184((uint64_t)v17, &qword_256B59338);
}

uint64_t sub_23C2C6090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DF2C();
  *a1 = result;
  return result;
}

uint64_t sub_23C2C60B8()
{
  swift_retain();
  return sub_23C34DF38();
}

unint64_t sub_23C2C60E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59350;
  if (!qword_256B59350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59348);
    v2[0] = sub_23C2C6168();
    v2[1] = sub_23C28943C(&qword_256B59390, &qword_256B59398, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59350);
  }
  return result;
}

unint64_t sub_23C2C6168()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59358;
  if (!qword_256B59358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59338);
    v2[0] = sub_23C2C61EC();
    v2[1] = sub_23C28943C(&qword_256B59380, &qword_256B59388, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59358);
  }
  return result;
}

unint64_t sub_23C2C61EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59360;
  if (!qword_256B59360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59330);
    v2[0] = sub_23C2C6270();
    v2[1] = sub_23C28943C(&qword_256B59378, &qword_256B59340, MEMORY[0x24BDF1330]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59360);
  }
  return result;
}

unint64_t sub_23C2C6270()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B59368;
  if (!qword_256B59368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59328);
    v2[0] = sub_23C2C62DC();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B59368);
  }
  return result;
}

unint64_t sub_23C2C62DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B59370;
  if (!qword_256B59370)
  {
    v1 = sub_23C34E0E8();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF0438], v1);
    atomic_store(result, (unint64_t *)&qword_256B59370);
  }
  return result;
}

uint64_t sub_23C2C6324@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a2;
  v46 = a1;
  v3 = sub_23C34D9B0();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23C34D998();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C34D980();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23C34D9C8();
  v12 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v38 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v43 = (char *)&v38 - v22;
  v47 = v2;
  if ((sub_23C34DA40() & 1) != 0 || (sub_23C34DA4C() & 1) != 0 || (sub_23C34DA58() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B593A8);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_23C353A20;
    v24 = *(_QWORD *)(v47 + *(int *)(type metadata accessor for WorkoutSchedule() + 20));
    v25 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v23 + 64) = v25;
    *(_QWORD *)(v23 + 32) = v24;
    sub_23C2C6824(v23, v46, v45);
    return swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x24261AFEC]();
    sub_23C34D974();
    sub_23C34D95C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v28 = v14;
    v29 = v44;
    v27(v28, v44);
    sub_23C34D98C();
    sub_23C34D968();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
    v27(v17, v29);
    v30 = v40;
    sub_23C34D9A4();
    v31 = v43;
    sub_23C34D9BC();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
    v27(v20, v29);
    sub_23C27FEE4(&qword_256B593A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
    v32 = v47;
    sub_23C34D9E0();
    v33 = v48;
    v34 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B593A8);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_23C354470;
    v36 = *(_QWORD *)(v32 + *(int *)(type metadata accessor for WorkoutSchedule() + 20));
    v37 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v35 + 64) = v37;
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v35 + 104) = sub_23C2C67E0();
    *(_QWORD *)(v35 + 72) = v33;
    *(_QWORD *)(v35 + 80) = v34;
    sub_23C2C6824(v35, v46, v45);
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v27)(v31, v29);
  }
}

unint64_t sub_23C2C67E0()
{
  unint64_t result;

  result = qword_256B593B0;
  if (!qword_256B593B0)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256B593B0);
  }
  return result;
}

uint64_t sub_23C2C6824@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21[0] = a2;
  v21[1] = a1;
  v23 = a3;
  v22 = sub_23C34D7F4();
  MEMORY[0x24BDAC7A8](v22);
  v21[2] = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B593B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34DA34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23C34E868();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v21 - v16;
  swift_bridgeObjectRetain();
  sub_23C34E85C();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 16))(v10, v21[0], v7);
  sub_23C34E88C();
  sub_23C34E880();
  swift_bridgeObjectRelease();
  sub_23C34E85C();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  swift_getKeyPath();
  v24 = MEMORY[0x24BEE4AF8];
  sub_23C27FEE4(&qword_256B593C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC320], MEMORY[0x24BDCC330]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B593C8);
  sub_23C2C6B40();
  sub_23C34EA6C();
  sub_23C2899C8();
  sub_23C34D860();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

void sub_23C2C6B20(_QWORD *a1@<X8>)
{
  *a1 = &type metadata for AttributeScopes.WorkoutScheduleAttributes;
}

void sub_23C2C6B30(_QWORD *a1@<X8>)
{
  *a1 = &type metadata for AttributeScopes.WorkoutScheduleAttributes;
}

unint64_t sub_23C2C6B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B593D0;
  if (!qword_256B593D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B593C8);
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256B593D0);
  }
  return result;
}

BOOL static WorkoutDetailSizeClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23C2C6BA0(char a1)
{
  return *(_QWORD *)&aRegular_3[8 * a1];
}

uint64_t sub_23C2C6BC4()
{
  char *v0;

  return sub_23C2C6BA0(*v0);
}

uint64_t sub_23C2C6BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2C79C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2C6BF0()
{
  sub_23C2C6F94();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C6C18()
{
  sub_23C2C6F94();
  return sub_23C34ECDC();
}

uint64_t sub_23C2C6C40()
{
  sub_23C2C6FD8();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C6C68()
{
  sub_23C2C6FD8();
  return sub_23C34ECDC();
}

uint64_t sub_23C2C6C90()
{
  sub_23C2C701C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C6CB8()
{
  sub_23C2C701C();
  return sub_23C34ECDC();
}

uint64_t sub_23C2C6CE0()
{
  sub_23C2C7060();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C6D08()
{
  sub_23C2C7060();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailSizeClass.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B593D8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B593E0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B593E8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B593F0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C6F94();
  sub_23C34ECC4();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23C2C701C();
      sub_23C34EBD4();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23C2C6FD8();
      v16 = v21;
      sub_23C34EBD4();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23C2C7060();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23C2C6F94()
{
  unint64_t result;

  result = qword_256B593F8;
  if (!qword_256B593F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3548CC, &type metadata for WorkoutDetailSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B593F8);
  }
  return result;
}

unint64_t sub_23C2C6FD8()
{
  unint64_t result;

  result = qword_256B59400;
  if (!qword_256B59400)
  {
    result = MEMORY[0x24261C66C](&unk_23C35487C, &type metadata for WorkoutDetailSizeClass.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59400);
  }
  return result;
}

unint64_t sub_23C2C701C()
{
  unint64_t result;

  result = qword_256B59408;
  if (!qword_256B59408)
  {
    result = MEMORY[0x24261C66C](&unk_23C35482C, &type metadata for WorkoutDetailSizeClass.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59408);
  }
  return result;
}

unint64_t sub_23C2C7060()
{
  unint64_t result;

  result = qword_256B59410;
  if (!qword_256B59410)
  {
    result = MEMORY[0x24261C66C](&unk_23C3547DC, &type metadata for WorkoutDetailSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59410);
  }
  return result;
}

uint64_t WorkoutDetailSizeClass.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59418);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59420);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59428);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59430);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C6F94();
  v13 = v41;
  sub_23C34ECB8();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23C34EBBC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23C34EAC0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v25 = &type metadata for WorkoutDetailSizeClass;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23C2C701C();
      v20 = v9;
      sub_23C34EB38();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23C2C6FD8();
      v28 = v15;
      sub_23C34EB38();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23C2C7060();
    sub_23C34EB38();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_23C2C74E8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return WorkoutDetailSizeClass.init(from:)(a1, a2);
}

uint64_t sub_23C2C74FC(_QWORD *a1)
{
  return WorkoutDetailSizeClass.encode(to:)(a1);
}

BOOL static WorkoutDetailSizeClass.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23C2C7524(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23C2C7538(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23C2C754C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23C2C7560(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t WorkoutDetailSizeClass.hash(into:)()
{
  return sub_23C34EC88();
}

uint64_t WorkoutDetailSizeClass.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

unint64_t sub_23C2C75E4()
{
  unint64_t result;

  result = qword_256B59438;
  if (!qword_256B59438)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSizeClass, &type metadata for WorkoutDetailSizeClass);
    atomic_store(result, (unint64_t *)&qword_256B59438);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailSizeClass()
{
  return &type metadata for WorkoutDetailSizeClass;
}

uint64_t _s20FitnessProductDetail22WorkoutDetailSizeClassOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2C768C + 4 * byte_23C3544B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2C76C0 + 4 * byte_23C3544B0[v4]))();
}

uint64_t sub_23C2C76C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C76C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2C76D0);
  return result;
}

uint64_t sub_23C2C76DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2C76E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C2C76E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C76F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailSizeClass.CodingKeys()
{
  return &type metadata for WorkoutDetailSizeClass.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailSizeClass.RegularCodingKeys()
{
  return &type metadata for WorkoutDetailSizeClass.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailSizeClass.MediumCodingKeys()
{
  return &type metadata for WorkoutDetailSizeClass.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailSizeClass.LargeCodingKeys()
{
  return &type metadata for WorkoutDetailSizeClass.LargeCodingKeys;
}

unint64_t sub_23C2C7740()
{
  unint64_t result;

  result = qword_256B59440;
  if (!qword_256B59440)
  {
    result = MEMORY[0x24261C66C](&unk_23C3547B4, &type metadata for WorkoutDetailSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59440);
  }
  return result;
}

unint64_t sub_23C2C7788()
{
  unint64_t result;

  result = qword_256B59448;
  if (!qword_256B59448)
  {
    result = MEMORY[0x24261C66C](&unk_23C3546D4, &type metadata for WorkoutDetailSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59448);
  }
  return result;
}

unint64_t sub_23C2C77D0()
{
  unint64_t result;

  result = qword_256B59450;
  if (!qword_256B59450)
  {
    result = MEMORY[0x24261C66C](&unk_23C3546FC, &type metadata for WorkoutDetailSizeClass.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59450);
  }
  return result;
}

unint64_t sub_23C2C7818()
{
  unint64_t result;

  result = qword_256B59458;
  if (!qword_256B59458)
  {
    result = MEMORY[0x24261C66C](&unk_23C354684, &type metadata for WorkoutDetailSizeClass.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59458);
  }
  return result;
}

unint64_t sub_23C2C7860()
{
  unint64_t result;

  result = qword_256B59460;
  if (!qword_256B59460)
  {
    result = MEMORY[0x24261C66C](&unk_23C3546AC, &type metadata for WorkoutDetailSizeClass.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59460);
  }
  return result;
}

unint64_t sub_23C2C78A8()
{
  unint64_t result;

  result = qword_256B59468;
  if (!qword_256B59468)
  {
    result = MEMORY[0x24261C66C](&unk_23C354634, &type metadata for WorkoutDetailSizeClass.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59468);
  }
  return result;
}

unint64_t sub_23C2C78F0()
{
  unint64_t result;

  result = qword_256B59470;
  if (!qword_256B59470)
  {
    result = MEMORY[0x24261C66C](&unk_23C35465C, &type metadata for WorkoutDetailSizeClass.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59470);
  }
  return result;
}

unint64_t sub_23C2C7938()
{
  unint64_t result;

  result = qword_256B59478;
  if (!qword_256B59478)
  {
    result = MEMORY[0x24261C66C](&unk_23C354724, &type metadata for WorkoutDetailSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59478);
  }
  return result;
}

unint64_t sub_23C2C7980()
{
  unint64_t result;

  result = qword_256B59480;
  if (!qword_256B59480)
  {
    result = MEMORY[0x24261C66C](&unk_23C35474C, &type metadata for WorkoutDetailSizeClass.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59480);
  }
  return result;
}

uint64_t sub_23C2C79C4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailSectionDensityFactor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailSectionDensityFactor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EqualWidthHStack()
{
  return &type metadata for EqualWidthHStack;
}

unint64_t sub_23C2C7B6C()
{
  unint64_t result;

  result = qword_256B59488;
  if (!qword_256B59488)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_256B59488);
  }
  return result;
}

uint64_t sub_23C2C7BB0(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  double v14;
  double v15;
  double v16;
  double v17;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _BYTE v42[32];
  uint64_t v43;

  LODWORD(v39) = a4;
  v10 = sub_23C34DDC4();
  v40 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34DE00();
  sub_23C2C8BBC((unint64_t *)&qword_256B594A0, MEMORY[0x24BDEC7A0]);
  sub_23C34E9C4();
  sub_23C34E9E8();
  result = sub_23C34E9DC();
  if (result < 1)
    return result;
  if ((a2 & 1) != 0)
    v14 = 10.0;
  else
    v14 = *(double *)&a1;
  v15 = *(double *)&a3;
  if ((v39 & 1) != 0)
    v15 = 10.0;
  v16 = *(double *)(a6 + 24);
  v17 = *(double *)(a6 + 32);
  if (v16 == v14 && v17 == v15)
  {
    v19 = *(double *)(a6 + 40);
  }
  else
  {
    if (__OFSUB__(*(_QWORD *)a6, 1))
      goto LABEL_30;
    v19 = (v14 - *(double *)(a6 + 8) * (double)(*(_QWORD *)a6 - 1))
        / (double)*(uint64_t *)a6
        * (double)*(uint64_t *)(a6 + 16);
    v16 = v14;
    v17 = v15;
  }
  *(double *)(a6 + 24) = v16;
  *(double *)(a6 + 32) = v17;
  *(double *)(a6 + 40) = v19;
  v20 = sub_23C34E9D0();
  v21 = MEMORY[0x24BEE4AF8];
  if (v20)
  {
    v22 = v20;
    v43 = MEMORY[0x24BEE4AF8];
    sub_23C2C82A8(0, v20 & ~(v20 >> 63), 0);
    result = sub_23C34E9C4();
    if ((v22 & 0x8000000000000000) == 0)
    {
      v39 = a6;
      do
      {
        v23 = (void (*)(_BYTE *, _QWORD))sub_23C34EA24();
        v24 = v40;
        (*(void (**)(char *))(v40 + 16))(v12);
        v23(v42, 0);
        v42[0] = 0;
        v41 = 1;
        sub_23C34DDAC();
        v26 = v25;
        v28 = v27;
        (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
        v21 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23C2C82A8(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v43;
        }
        v30 = *(_QWORD *)(v21 + 16);
        v29 = *(_QWORD *)(v21 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_23C2C82A8(v29 > 1, v30 + 1, 1);
          v21 = v43;
        }
        *(_QWORD *)(v21 + 16) = v30 + 1;
        v31 = v21 + 16 * v30;
        *(_QWORD *)(v31 + 32) = v26;
        *(_QWORD *)(v31 + 40) = v28;
        sub_23C34E9F4();
        --v22;
      }
      while (v22);
      goto LABEL_23;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    return result;
  }
LABEL_23:
  v32 = sub_23C2C7EF4(v21);
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v34 = (double *)(v32 + 32);
    v35 = 0.0;
    do
    {
      v36 = *v34++;
      v37 = v36;
      if (v35 <= v36)
        v35 = v37;
      --v33;
    }
    while (v33);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2C7EF4(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_23C2C828C(0, v2, 0);
    result = v8;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_23C2C828C(v6 > 1, v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_23C2C7FB4(uint64_t a1, uint64_t a2, double *a3, uint64_t a4)
{
  uint64_t result;

  sub_23C34E718();
  sub_23C34DDB8();
  sub_23C34DE00();
  sub_23C2C8BBC((unint64_t *)&qword_256B594A0, MEMORY[0x24BDEC7A0]);
  sub_23C34E9C4();
  sub_23C34E9E8();
  result = sub_23C34E9DC();
  if (result > a1)
    *a3 = *a3 + *(double *)(a4 + 40) + *(double *)(a4 + 8);
  return result;
}

double sub_23C2C80C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(double *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_23C2C80EC(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_23C2C7BB0(a1, a2 & 1, a3, a4 & 1, a5, a6);
}

uint64_t sub_23C2C8118(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_23C2C89B8(a9, a10, a1, a2, a3, a4);
}

uint64_t sub_23C2C8124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23C2C817C(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_23C2C8150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_23C2C817C(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_23C2C817C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_23C2C81B8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23C34DCEC();
  return sub_23C2C8214;
}

void sub_23C2C8214(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_23C2C8248()
{
  unint64_t result;

  result = qword_256B59490;
  if (!qword_256B59490)
  {
    result = MEMORY[0x24261C66C](&unk_23C354954, &type metadata for EqualWidthHStack);
    atomic_store(result, (unint64_t *)&qword_256B59490);
  }
  return result;
}

uint64_t sub_23C2C828C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23C2C82C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23C2C82A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23C2C8420(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23C2C82C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B594D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23C34EB14();
  __break(1u);
  return result;
}

uint64_t sub_23C2C8420(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B594D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23C34EB14();
  __break(1u);
  return result;
}

uint64_t sub_23C2C857C(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(uint64_t, char *);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60[4];
  uint64_t v61;

  v53 = a2;
  v54 = a3;
  v61 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B594A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C34DDC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B594B0);
  v9 = MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t *)((char *)&v46 - v11);
  v12 = sub_23C34DE00();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59498);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B594B8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C2C8B74(v61, (uint64_t)v18);
  v59 = v13;
  v22 = v18;
  v23 = v12;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v22, v12);
  sub_23C2C8BBC(&qword_256B594C0, MEMORY[0x24BDEC798]);
  v58 = v15;
  sub_23C34E8D4();
  v24 = *(int *)(v19 + 36);
  *(_QWORD *)&v21[v24] = 0;
  v25 = &v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B594C8) + 36)];
  v26 = sub_23C2C8BBC((unint64_t *)&qword_256B594A0, MEMORY[0x24BDEC7A0]);
  v27 = *(_QWORD *)v25;
  v61 = v26;
  sub_23C34E9E8();
  if (v27 == v60[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  else
  {
    v50 = v24;
    v51 = v7;
    v48 = v23;
    v49 = v5;
    while (1)
    {
      v28 = (void (*)(uint64_t *, _QWORD))sub_23C34EA24();
      v29 = v51;
      (*(void (**)(char *))(v51 + 16))(v5);
      v28(v60, 0);
      v31 = v58;
      v30 = v59;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v21, v23);
      sub_23C34E9F4();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v23);
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v32(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v6) == 1)
        break;
      v47 = v32;
      v33 = v25;
      v34 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      v35 = v57;
      v34(v57, v5, v6);
      v36 = v6;
      v37 = v56;
      v38 = &v55[*(int *)(v56 + 48)];
      v39 = v50;
      v40 = *(_QWORD *)&v21[v50];
      result = ((uint64_t (*)(char *, char *, uint64_t))v34)(v38, v35, v36);
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)&v21[v39] = v40 + 1;
      v42 = *(int *)(v37 + 48);
      v43 = (uint64_t)v52;
      v44 = (char *)v52 + v42;
      *v52 = v40;
      v34((char *)(v43 + v42), v38, v36);
      v53(v40, v44);
      sub_23C285184(v43, &qword_256B594B0);
      v25 = v33;
      v45 = *(_QWORD *)v33;
      v23 = v48;
      sub_23C34E9E8();
      v5 = v49;
      v6 = v36;
      if (v45 == v60[0])
      {
        v47(v49, 1, 1, v36);
        break;
      }
    }
  }
  sub_23C285184((uint64_t)v5, &qword_256B594A8);
  return sub_23C285184((uint64_t)v21, &qword_256B594B8);
}

uint64_t sub_23C2C89B8(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  double v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59498);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23C34DE00();
  sub_23C2C8BBC((unint64_t *)&qword_256B594A0, MEMORY[0x24BDEC7A0]);
  sub_23C34E9C4();
  sub_23C34E9E8();
  result = sub_23C34E9DC();
  if (result >= 1)
  {
    if (*(double *)(a2 + 24) != a5 || *(double *)(a2 + 32) != a6)
    {
      if (__OFSUB__(*(_QWORD *)a2, 1))
      {
        __break(1u);
        return result;
      }
      v17 = (a5 - *(double *)(a2 + 8) * (double)(*(_QWORD *)a2 - 1))
          / (double)*(uint64_t *)a2
          * (double)*(uint64_t *)(a2 + 16);
      *(double *)(a2 + 24) = a5;
      *(double *)(a2 + 32) = a6;
      *(double *)(a2 + 40) = v17;
    }
    *(double *)v20 = a3;
    *(double *)&v20[1] = a4;
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, a1, v15);
    MEMORY[0x24BDAC7A8](v18);
    *(&v19 - 4) = (uint64_t)v20;
    *(&v19 - 3) = a2;
    *(&v19 - 2) = a1;
    sub_23C2C857C((uint64_t)v14, (void (*)(uint64_t, char *))sub_23C2C8B68, (uint64_t)(&v19 - 6));
    return sub_23C285184((uint64_t)v14, &qword_256B59498);
  }
  return result;
}

uint64_t sub_23C2C8B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23C2C7FB4(a1, a2, *(double **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23C2C8B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2C8BBC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C34DE00();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EqualWidthHStack.Cache(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EqualWidthHStack.Cache(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EqualWidthHStack.Cache()
{
  return &type metadata for EqualWidthHStack.Cache;
}

double ProgramDetailContentMargins.bottom.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double ProgramDetailContentMargins.leading.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double ProgramDetailContentMargins.top.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ProgramDetailContentMargins.trailing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void ProgramDetailContentMargins.init(top:leading:bottom:trailing:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a4;
  a1[1] = a3;
  a1[2] = a2;
  a1[3] = a5;
}

uint64_t sub_23C2C8C90(char a1)
{
  return *(_QWORD *)&aBottom_1[8 * a1];
}

uint64_t sub_23C2C8CB0()
{
  char *v0;

  return sub_23C2C8C90(*v0);
}

uint64_t sub_23C2C8CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2C95B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2C8CDC()
{
  sub_23C2C8EEC();
  return sub_23C34ECD0();
}

uint64_t sub_23C2C8D04()
{
  sub_23C2C8EEC();
  return sub_23C34ECDC();
}

uint64_t ProgramDetailContentMargins.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B594E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v11 = v1[2];
  v10 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C8EEC();
  sub_23C34ECC4();
  v14 = v9;
  HIBYTE(v13) = 0;
  sub_23C2C8F30();
  sub_23C34EC40();
  if (!v2)
  {
    v14 = v8;
    HIBYTE(v13) = 1;
    sub_23C34EC40();
    v14 = v11;
    HIBYTE(v13) = 2;
    sub_23C34EC40();
    v14 = v10;
    HIBYTE(v13) = 3;
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23C2C8EEC()
{
  unint64_t result;

  result = qword_256B594E8;
  if (!qword_256B594E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C354BF0, &type metadata for ProgramDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B594E8);
  }
  return result;
}

unint64_t sub_23C2C8F30()
{
  unint64_t result;

  result = qword_256B594F0;
  if (!qword_256B594F0)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B594F0);
  }
  return result;
}

uint64_t ProgramDetailContentMargins.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B594F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2C8EEC();
  sub_23C34ECB8();
  if (!v2)
  {
    HIBYTE(v14) = 0;
    sub_23C2C917C();
    sub_23C34EBB0();
    v9 = v15;
    HIBYTE(v14) = 1;
    sub_23C34EBB0();
    v10 = v15;
    HIBYTE(v14) = 2;
    sub_23C34EBB0();
    v12 = v15;
    HIBYTE(v14) = 3;
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_23C2C917C()
{
  unint64_t result;

  result = qword_256B59500;
  if (!qword_256B59500)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B59500);
  }
  return result;
}

uint64_t sub_23C2C91C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ProgramDetailContentMargins.init(from:)(a1, a2);
}

uint64_t sub_23C2C91D4(_QWORD *a1)
{
  return ProgramDetailContentMargins.encode(to:)(a1);
}

uint64_t ProgramDetailContentMargins.hash(into:)()
{
  sub_23C34ECA0();
  sub_23C34ECA0();
  sub_23C34ECA0();
  return sub_23C34ECA0();
}

uint64_t ProgramDetailContentMargins.hashValue.getter()
{
  sub_23C34EC7C();
  ProgramDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C929C()
{
  sub_23C34EC7C();
  ProgramDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2C92E8()
{
  sub_23C34EC7C();
  ProgramDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail07ProgramC14ContentMarginsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

unint64_t sub_23C2C9370()
{
  unint64_t result;

  result = qword_256B59508;
  if (!qword_256B59508)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for ProgramDetailContentMargins, &type metadata for ProgramDetailContentMargins);
    atomic_store(result, (unint64_t *)&qword_256B59508);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailContentMargins(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailContentMargins(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ProgramDetailContentMargins()
{
  return &type metadata for ProgramDetailContentMargins;
}

uint64_t storeEnumTagSinglePayload for ProgramDetailContentMargins.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2C945C + 4 * byte_23C354A35[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2C9490 + 4 * asc_23C354A30[v4]))();
}

uint64_t sub_23C2C9490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C9498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2C94A0);
  return result;
}

uint64_t sub_23C2C94AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2C94B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2C94B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2C94C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProgramDetailContentMargins.CodingKeys()
{
  return &type metadata for ProgramDetailContentMargins.CodingKeys;
}

unint64_t sub_23C2C94E0()
{
  unint64_t result;

  result = qword_256B59510;
  if (!qword_256B59510)
  {
    result = MEMORY[0x24261C66C](&unk_23C354BC8, &type metadata for ProgramDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59510);
  }
  return result;
}

unint64_t sub_23C2C9528()
{
  unint64_t result;

  result = qword_256B59518;
  if (!qword_256B59518)
  {
    result = MEMORY[0x24261C66C](&unk_23C354B38, &type metadata for ProgramDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59518);
  }
  return result;
}

unint64_t sub_23C2C9570()
{
  unint64_t result;

  result = qword_256B59520;
  if (!qword_256B59520)
  {
    result = MEMORY[0x24261C66C](&unk_23C354B60, &type metadata for ProgramDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59520);
  }
  return result;
}

uint64_t sub_23C2C95B4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696461656CLL && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t WorkoutDetailEnvironment.init(resolveWorkoutDetail:navigateToMusicPlaylist:navigateToMusicTrack:navigateToTrainer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailEnvironment()
{
  return &type metadata for WorkoutDetailEnvironment;
}

__n128 WorkoutScheduleFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t WorkoutScheduleFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B58);
  v7 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WorkoutScheduleAction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v4[1];
  v37 = *v4;
  v14 = type metadata accessor for WorkoutScheduleState(0);
  v15 = (uint64_t *)(a2 + *(int *)(v14 + 24));
  v17 = *v15;
  v16 = v15[1];
  sub_23C2C9A68(a4, (uint64_t)v12);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18) == 1)
  {
    v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC8);
    v21 = &v9[v20[16]];
    v22 = &v9[v20[20]];
    v23 = &v9[v20[24]];
    v40 = v17;
    v41 = v16;
    sub_23C2C9AAC();
    swift_bridgeObjectRetain_n();
    sub_23C34EA78();
    v24 = *MEMORY[0x24BE2B580];
    v25 = sub_23C34E790();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v21, v24, v25);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v37;
    v26[3] = v13;
    v26[4] = v17;
    v26[5] = v16;
    *(_QWORD *)v23 = &unk_256B59538;
    *((_QWORD *)v23 + 1) = v26;
    swift_retain();
    sub_23C34E970();
    v27 = *MEMORY[0x24BE2B558];
    v28 = sub_23C34E784();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v22, v27, v28);
    v29 = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE2B438], v38);
    v30 = v39;
    v31 = *v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_23C2A22D8(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    if (v33 >= v32 >> 1)
      v31 = sub_23C2A22D8(v32 > 1, v33 + 1, 1, v31);
    *(_QWORD *)(v31 + 16) = v33 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v31+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v33, v9, v29);
    *v30 = v31;
  }
  else
  {
    v35 = a2 + *(int *)(v14 + 28);
    sub_23C283550(v35, type metadata accessor for WorkoutScheduleLoadState);
    sub_23C281C88((uint64_t)v12, v35);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v35, 0, 1, v18);
  }
  return result;
}

uint64_t sub_23C2C9A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutScheduleAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C2C9AAC()
{
  unint64_t result;

  result = qword_256B59528;
  if (!qword_256B59528)
  {
    result = MEMORY[0x24261C66C](&unk_23C354D70, &type metadata for WorkoutScheduleFeature.TaskIdentifier);
    atomic_store(result, &qword_256B59528);
  }
  return result;
}

uint64_t sub_23C2C9AF0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);

  v5[2] = a1;
  type metadata accessor for WorkoutScheduleAction();
  v5[3] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v5[4] = v9;
  v5[5] = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v5[6] = v10;
  v5[7] = sub_23C34E964();
  v5[8] = sub_23C34E958();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a2 + *a2);
  v11 = (_QWORD *)swift_task_alloc();
  v5[9] = v11;
  *v11 = v5;
  v11[1] = sub_23C2C9BE4;
  return v13(v10, a4, a5);
}

uint64_t sub_23C2C9BE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 88) = sub_23C34E940();
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23C2C9C70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  v3 = v0[4];
  sub_23C28513C(v0[6], v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_256B59560);
  *v4 = v0;
  v4[1] = sub_23C2C9D00;
  return sub_23C34E76C();
}

uint64_t sub_23C2C9D00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutScheduleAction);
  return swift_task_switch();
}

uint64_t sub_23C2C9D60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_23C2C9F48(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2C9DB4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2C9DE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23C2A1EC8;
  return sub_23C2C9AF0(a1, v4, v5, v7, v6);
}

uint64_t sub_23C2C9E5C()
{
  return sub_23C27FEE4(&qword_256B59540, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutScheduleAction, (uint64_t)&protocol conformance descriptor for WorkoutScheduleAction);
}

uint64_t sub_23C2C9E88()
{
  return sub_23C27FEE4(&qword_256B59548, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutScheduleAction, (uint64_t)&protocol conformance descriptor for WorkoutScheduleAction);
}

uint64_t sub_23C2C9EB4()
{
  return sub_23C27FEE4(&qword_256B59550, type metadata accessor for WorkoutScheduleState, (uint64_t)&protocol conformance descriptor for WorkoutScheduleState);
}

ValueMetadata *type metadata accessor for WorkoutScheduleFeature()
{
  return &type metadata for WorkoutScheduleFeature;
}

ValueMetadata *type metadata accessor for WorkoutScheduleFeature.TaskIdentifier()
{
  return &type metadata for WorkoutScheduleFeature.TaskIdentifier;
}

unint64_t sub_23C2C9F04()
{
  unint64_t result;

  result = qword_256B59558;
  if (!qword_256B59558)
  {
    result = MEMORY[0x24261C66C](&unk_23C354D48, &type metadata for WorkoutScheduleFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B59558);
  }
  return result;
}

uint64_t sub_23C2C9F48(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RelatedWorkoutEnvironment.init(fetchPlaceholdersForIdentifier:navigateToWorkoutDetail:sectionMetricsForIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_23C2C9F98()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2C9FA0()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2C9FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23C2CA038(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23C2CA0AC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t sub_23C2CA100(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2CA148(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RelatedWorkoutEnvironment()
{
  JUMPOUT(0x24261C5D0);
}

ValueMetadata *type metadata accessor for TwoColumnHStack()
{
  return &type metadata for TwoColumnHStack;
}

__n128 sub_23C2CA1B0@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  __n128 result;
  __n128 v19;

  v19 = *v1;
  v3 = v1[1].n128_u64[0];
  v4 = sub_23C34DE48();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_23C34DE48();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  sub_23C34DE48();
  sub_23C34DE48();
  result = v19;
  *a1 = v19;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = v4;
  a1[2].n128_u8[0] = v6 & 1;
  a1[2].n128_u64[1] = v8;
  a1[3].n128_u8[0] = v10 & 1;
  a1[3].n128_u64[1] = v11;
  a1[4].n128_u8[0] = v13 & 1;
  a1[4].n128_u64[1] = v15;
  a1[5].n128_u8[0] = v17 & 1;
  a1[6].n128_u64[0] = 0;
  a1[6].n128_u64[1] = 0;
  a1[5].n128_u64[1] = 0;
  return result;
}

double sub_23C2CA27C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_23C2CA2E8(a1, a2 & 1, a3, a4 & 1, a5, a6);
}

void sub_23C2CA294(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_23C2CA55C(a1, a2, a3, a4, a9, a10);
}

unint64_t sub_23C2CA2A4()
{
  unint64_t result;

  result = qword_256B595E8[0];
  if (!qword_256B595E8[0])
  {
    result = MEMORY[0x24261C66C](&unk_23C354E18, &type metadata for TwoColumnHStack);
    atomic_store(result, qword_256B595E8);
  }
  return result;
}

double sub_23C2CA2E8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char v21;
  uint64_t v22;
  char v23;
  double v24;
  char v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v11 = sub_23C34DDC4();
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34DE00();
  sub_23C2CA7F4();
  sub_23C34E9C4();
  sub_23C34E9E8();
  v14 = 0.0;
  if (sub_23C34E9DC() >= 2)
  {
    if ((a2 & 1) != 0)
      v14 = 10.0;
    else
      v14 = *(double *)&a1;
    if ((a4 & 1) != 0)
      v15 = 10.0;
    else
      v15 = *(double *)&a3;
    v16 = *(double *)a6;
    v17 = *(double *)(a6 + 8);
    v18 = *(double *)(a6 + 16);
    v19 = *(double *)(a6 + 96);
    if (v19 == v14 && *(double *)(a6 + 104) == v15)
    {
      v20 = *(double *)(a6 + 24);
      v21 = *(_BYTE *)(a6 + 32);
      v22 = *(_QWORD *)(a6 + 40);
      v23 = *(_BYTE *)(a6 + 48);
      v24 = *(double *)(a6 + 56);
      v25 = *(_BYTE *)(a6 + 64);
      v26 = *(_QWORD *)(a6 + 72);
      v27 = *(_BYTE *)(a6 + 80);
      v15 = *(double *)(a6 + 104);
      v28 = *(double *)(a6 + 88);
    }
    else
    {
      v24 = (v14 + v16) * v18;
      v20 = (v14 + v16) * v17;
      v28 = v14 - v24;
      sub_23C34DE48();
      sub_23C34DE48();
      v21 = 0;
      v22 = 0;
      v25 = 0;
      v26 = 0;
      v23 = 1;
      v27 = 1;
      v19 = v14;
    }
    v30 = v34;
    v29 = v35;
    *(double *)a6 = v16;
    *(double *)(a6 + 8) = v17;
    *(double *)(a6 + 16) = v18;
    *(double *)(a6 + 24) = v20;
    *(_BYTE *)(a6 + 32) = v21;
    *(_QWORD *)(a6 + 40) = v22;
    *(_BYTE *)(a6 + 48) = v23;
    *(double *)(a6 + 56) = v24;
    *(_BYTE *)(a6 + 64) = v25;
    *(_QWORD *)(a6 + 72) = v26;
    *(_BYTE *)(a6 + 80) = v27;
    *(double *)(a6 + 88) = v28;
    *(double *)(a6 + 96) = v19;
    *(double *)(a6 + 104) = v15;
    sub_23C34DE0C();
    v37 = v21;
    v36 = v23;
    sub_23C34DDAC();
    v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    v31(v13, v29);
    sub_23C34DE0C();
    v32 = *(_BYTE *)(a6 + 80);
    v37 = *(_BYTE *)(a6 + 64);
    v36 = v32;
    sub_23C34DDAC();
    v31(v13, v29);
  }
  return v14;
}

void sub_23C2CA55C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  uint64_t v20;
  char v21;
  double v22;
  char v23;
  uint64_t v24;
  char v25;
  double v26;
  void (*v27)(char *, uint64_t);
  char v28;
  char v29;
  uint64_t v30;
  double v31;
  char v32;
  char v33;
  CGRect v34;

  v11 = sub_23C34DDC4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  if (CGRectGetWidth(v34) > 0.0)
  {
    sub_23C34DE00();
    sub_23C2CA7F4();
    sub_23C34E9C4();
    sub_23C34E9E8();
    if (sub_23C34E9DC() >= 2)
    {
      v15 = *(double *)a6;
      v16 = *(double *)(a6 + 8);
      v17 = *(double *)(a6 + 16);
      if (*(double *)(a6 + 96) == a3 && *(double *)(a6 + 104) == a4)
      {
        v18 = *(double *)(a6 + 24);
        v19 = *(_BYTE *)(a6 + 32);
        v20 = *(_QWORD *)(a6 + 40);
        v21 = *(_BYTE *)(a6 + 48);
        v22 = *(double *)(a6 + 56);
        v23 = *(_BYTE *)(a6 + 64);
        v24 = *(_QWORD *)(a6 + 72);
        v25 = *(_BYTE *)(a6 + 80);
        a3 = *(double *)(a6 + 96);
        a4 = *(double *)(a6 + 104);
        v26 = *(double *)(a6 + 88);
      }
      else
      {
        v22 = (v15 + a3) * v17;
        v18 = (v15 + a3) * v16;
        v31 = a3 - v22;
        sub_23C34DE48();
        sub_23C34DE48();
        v26 = v31;
        v19 = 0;
        v20 = 0;
        v23 = 0;
        v24 = 0;
        v21 = 1;
        v25 = 1;
      }
      *(double *)a6 = v15;
      *(double *)(a6 + 8) = v16;
      *(double *)(a6 + 16) = v17;
      *(double *)(a6 + 24) = v18;
      *(_BYTE *)(a6 + 32) = v19;
      *(_QWORD *)(a6 + 40) = v20;
      *(_BYTE *)(a6 + 48) = v21;
      *(double *)(a6 + 56) = v22;
      *(_BYTE *)(a6 + 64) = v23;
      *(_QWORD *)(a6 + 72) = v24;
      *(_BYTE *)(a6 + 80) = v25;
      *(double *)(a6 + 88) = v26;
      *(CGFloat *)(a6 + 96) = a3;
      *(CGFloat *)(a6 + 104) = a4;
      sub_23C34DE0C();
      sub_23C34E718();
      v33 = v19;
      v32 = v21;
      sub_23C34DDB8();
      v27 = *(void (**)(char *, uint64_t))(v12 + 8);
      v27(v14, v11);
      sub_23C34DE0C();
      v28 = *(_BYTE *)(a6 + 64);
      v29 = *(_BYTE *)(a6 + 80);
      sub_23C34E718();
      v33 = v28;
      v32 = v29;
      sub_23C34DDB8();
      v27(v14, v11);
    }
  }
}

unint64_t sub_23C2CA7F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B594A0;
  if (!qword_256B594A0)
  {
    v1 = sub_23C34DE00();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEC7A0], v1);
    atomic_store(result, (unint64_t *)&qword_256B594A0);
  }
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for TwoColumnHStack.Cache(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TwoColumnHStack.Cache(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TwoColumnHStack.Cache()
{
  return &type metadata for TwoColumnHStack.Cache;
}

BOOL sub_23C2CA8D8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C2CA8E8()
{
  return sub_23C34EC88();
}

uint64_t sub_23C2CA90C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x657070416D657469 && a2 == 0xEC00000064657261;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707061546D657469 && a2 == 0xEA00000000006465 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C361950 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C2CAAD0()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C2CAB14(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2CAB4C + 4 * byte_23C354EF0[a1]))(0xD000000000000010, 0x800000023C361950);
}

uint64_t sub_23C2CAB4C()
{
  return 0x657070416D657469;
}

uint64_t sub_23C2CAB94(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C2CAC10(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_23C2CACAC(char *a1, char *a2)
{
  return sub_23C2CA8D8(*a1, *a2);
}

uint64_t sub_23C2CAD04()
{
  return sub_23C2CAAD0();
}

uint64_t sub_23C2CAD5C()
{
  return sub_23C2CA8E8();
}

uint64_t sub_23C2CADA8()
{
  sub_23C34EC7C();
  sub_23C2CA8E8();
  return sub_23C34ECAC();
}

uint64_t sub_23C2CAE14()
{
  unsigned __int8 *v0;

  return sub_23C2CAB14(*v0);
}

uint64_t sub_23C2CAE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2CA90C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2CAEC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C2CDAF0();
  *a1 = result;
  return result;
}

uint64_t sub_23C2CAF20(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C3553D8, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2CAF54(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C3553D8, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C2CAF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_23C2CB09C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2CAB94, a4);
}

uint64_t sub_23C2CAF98@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23C2CB1DC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2CDB30, a2);
}

uint64_t sub_23C2CAFA4(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355428, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2CAFD8(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355428, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C2CB010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_23C2CB09C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2CAC10, a4);
}

uint64_t sub_23C2CB01C@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23C2CB1DC(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C280400, a2);
}

uint64_t sub_23C2CB028(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355478, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2CB05C(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355478, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C2CB090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_23C2CB09C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C284F24, a4);
}

uint64_t sub_23C2CB09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
             a3[19]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_23C2CB100(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C3554C8, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2CB134(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C3554C8, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C2CB168@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t result;

  v2 = sub_23C280400();
  result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_23C2CB1DC@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C2CB23C(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355518, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2CB270(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355518, a1);
  return sub_23C34ECDC();
}

void RelatedWorkoutAction.encode(to:)()
{
  type metadata accessor for RelatedWorkoutAction.ViewAppearedCodingKeys();
}

void sub_23C2CB3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = MEMORY[0x24261C66C](&unk_23C355518, a1);
  *(_QWORD *)(v17 - 408) = a1;
  *(_QWORD *)(v17 - 416) = v19;
  v20 = sub_23C34EC4C();
  *(_QWORD *)(v17 - 424) = v20;
  *(_QWORD *)(v17 - 432) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 440) = (char *)&a9 - v21;
  *(_QWORD *)(v17 - 232) = v13;
  *(_QWORD *)(v17 - 224) = v10;
  *(_QWORD *)(v17 - 216) = v11;
  *(_QWORD *)(v17 - 208) = v16;
  *(_QWORD *)(v17 - 200) = v12;
  *(_QWORD *)(v17 - 192) = v9;
  v22 = *(_QWORD *)(v17 - 256);
  *(_QWORD *)(v17 - 184) = v14;
  *(_QWORD *)(v17 - 176) = v22;
  v23 = *(_QWORD *)(v17 - 336);
  *(_QWORD *)(v17 - 168) = *(_QWORD *)(v17 - 328);
  *(_QWORD *)(v17 - 160) = v23;
  v24 = *(_QWORD *)(v17 - 272);
  *(_QWORD *)(v17 - 152) = *(_QWORD *)(v17 - 240);
  *(_QWORD *)(v17 - 144) = v24;
  v25 = *(_QWORD *)(v17 - 280);
  *(_QWORD *)(v17 - 136) = *(_QWORD *)(v17 - 72);
  *(_QWORD *)(v17 - 128) = v25;
  v26 = *(_QWORD *)(v17 - 312);
  *(_QWORD *)(v17 - 120) = *(_QWORD *)(v17 - 248);
  *(_QWORD *)(v17 - 112) = v26;
  *(_QWORD *)(v17 - 104) = *(_QWORD *)(v17 - 320);
  *(_QWORD *)(v17 - 96) = v15;
  type metadata accessor for RelatedWorkoutAction.LoadedDescriptorCodingKeys();
}

void sub_23C2CB488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v17 = MEMORY[0x24261C66C](&unk_23C3554C8, a1);
  *(_QWORD *)(v15 - 472) = a1;
  *(_QWORD *)(v15 - 480) = v17;
  v18 = sub_23C34EC4C();
  *(_QWORD *)(v15 - 448) = v18;
  *(_QWORD *)(v15 - 456) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 464) = (char *)&a9 - v19;
  v20 = *(_QWORD *)(v15 - 288);
  *(_QWORD *)(v15 - 232) = v20;
  *(_QWORD *)(v15 - 224) = v9;
  *(_QWORD *)(v15 - 344) = v9;
  *(_QWORD *)(v15 - 352) = v10;
  v21 = *(_QWORD *)(v15 - 264);
  *(_QWORD *)(v15 - 216) = v10;
  *(_QWORD *)(v15 - 208) = v21;
  *(_QWORD *)(v15 - 200) = v11;
  *(_QWORD *)(v15 - 192) = v13;
  v22 = v13;
  *(_QWORD *)(v15 - 360) = v13;
  v23 = *(_QWORD *)(v15 - 296);
  v24 = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 184) = v23;
  *(_QWORD *)(v15 - 176) = v24;
  *(_QWORD *)(v15 - 168) = v12;
  *(_QWORD *)(v15 - 160) = v14;
  v25 = *(_QWORD *)(v15 - 272);
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(v15 - 240);
  *(_QWORD *)(v15 - 144) = v25;
  v26 = *(_QWORD *)(v15 - 280);
  *(_QWORD *)(v15 - 136) = *(_QWORD *)(v15 - 72);
  *(_QWORD *)(v15 - 128) = v26;
  v27 = *(_QWORD *)(v15 - 320);
  *(_QWORD *)(v15 - 120) = *(_QWORD *)(v15 - 248);
  *(_QWORD *)(v15 - 112) = v27;
  v28 = *(_QWORD *)(v15 - 312);
  v29 = *(_QWORD *)(v15 - 304);
  *(_QWORD *)(v15 - 104) = v28;
  *(_QWORD *)(v15 - 96) = v29;
  v30 = sub_23C34DBF0();
  *(_QWORD *)(v15 - 488) = v30;
  *(_QWORD *)(v15 - 496) = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v15 - 504) = (char *)&a9 - v31;
  *(_QWORD *)(v15 - 232) = v20;
  *(_QWORD *)(v15 - 224) = v9;
  *(_QWORD *)(v15 - 216) = v10;
  *(_QWORD *)(v15 - 208) = v21;
  *(_QWORD *)(v15 - 200) = v11;
  *(_QWORD *)(v15 - 192) = v23;
  *(_QWORD *)(v15 - 392) = v11;
  *(_QWORD *)(v15 - 184) = v22;
  v32 = *(_QWORD *)(v15 - 328);
  *(_QWORD *)(v15 - 176) = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 168) = v32;
  v33 = *(_QWORD *)(v15 - 240);
  *(_QWORD *)(v15 - 160) = *(_QWORD *)(v15 - 336);
  *(_QWORD *)(v15 - 152) = v33;
  v34 = *(_QWORD *)(v15 - 72);
  *(_QWORD *)(v15 - 144) = *(_QWORD *)(v15 - 272);
  *(_QWORD *)(v15 - 136) = v34;
  v35 = *(_QWORD *)(v15 - 248);
  *(_QWORD *)(v15 - 128) = *(_QWORD *)(v15 - 280);
  *(_QWORD *)(v15 - 120) = v35;
  *(_QWORD *)(v15 - 112) = v28;
  *(_QWORD *)(v15 - 104) = v27;
  *(_QWORD *)(v15 - 96) = *(_QWORD *)(v15 - 304);
  type metadata accessor for RelatedWorkoutAction.ItemTappedCodingKeys();
}

void sub_23C2CB650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = MEMORY[0x24261C66C](&unk_23C355478, a1);
  *(_QWORD *)(v17 - 536) = a1;
  *(_QWORD *)(v17 - 560) = v19;
  v20 = sub_23C34EC4C();
  *(_QWORD *)(v17 - 512) = v20;
  *(_QWORD *)(v17 - 520) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 544) = (char *)&a9 - v21;
  *(_QWORD *)(v17 - 528) = *(_QWORD *)(*(_QWORD *)(v17 - 264) - 8);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v17 - 552) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v17 - 344);
  *(_QWORD *)(v17 - 232) = *(_QWORD *)(v17 - 288);
  *(_QWORD *)(v17 - 224) = v24;
  *(_QWORD *)(v17 - 216) = *(_QWORD *)(v17 - 352);
  *(_QWORD *)(v17 - 208) = v25;
  v26 = *(_QWORD *)(v17 - 296);
  *(_QWORD *)(v17 - 200) = v9;
  *(_QWORD *)(v17 - 192) = v26;
  *(_QWORD *)(v17 - 184) = *(_QWORD *)(v17 - 360);
  *(_QWORD *)(v17 - 176) = v15;
  *(_QWORD *)(v17 - 168) = v16;
  *(_QWORD *)(v17 - 160) = v10;
  *(_QWORD *)(v17 - 152) = v11;
  *(_QWORD *)(v17 - 144) = v12;
  *(_QWORD *)(v17 - 136) = *(_QWORD *)(v17 - 72);
  *(_QWORD *)(v17 - 128) = v14;
  v27 = *(_QWORD *)(v17 - 312);
  *(_QWORD *)(v17 - 120) = *(_QWORD *)(v17 - 248);
  *(_QWORD *)(v17 - 112) = v27;
  *(_QWORD *)(v17 - 104) = *(_QWORD *)(v17 - 320);
  *(_QWORD *)(v17 - 96) = v13;
  type metadata accessor for RelatedWorkoutAction.ItemAppearedCodingKeys();
}

void sub_23C2CB778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v17 = MEMORY[0x24261C66C](&unk_23C355428, a1);
  *(_QWORD *)(v15 - 584) = a1;
  *(_QWORD *)(v15 - 600) = v17;
  v18 = sub_23C34EC4C();
  *(_QWORD *)(v15 - 568) = v18;
  *(_QWORD *)(v15 - 576) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 592) = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v21 = *(_QWORD *)(v15 - 344);
  *(_QWORD *)(v15 - 232) = *(_QWORD *)(v15 - 288);
  *(_QWORD *)(v15 - 224) = v21;
  v22 = *(_QWORD *)(v15 - 264);
  *(_QWORD *)(v15 - 216) = *(_QWORD *)(v15 - 352);
  *(_QWORD *)(v15 - 208) = v22;
  v23 = *(_QWORD *)(v15 - 296);
  *(_QWORD *)(v15 - 200) = *(_QWORD *)(v15 - 392);
  *(_QWORD *)(v15 - 192) = v23;
  v24 = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 184) = *(_QWORD *)(v15 - 360);
  *(_QWORD *)(v15 - 176) = v24;
  v25 = *(_QWORD *)(v15 - 336);
  *(_QWORD *)(v15 - 168) = *(_QWORD *)(v15 - 328);
  *(_QWORD *)(v15 - 160) = v25;
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(v15 - 240);
  *(_QWORD *)(v15 - 144) = v11;
  *(_QWORD *)(v15 - 136) = v13;
  *(_QWORD *)(v15 - 128) = v12;
  *(_QWORD *)(v15 - 120) = v14;
  *(_QWORD *)(v15 - 112) = v9;
  v26 = *(_QWORD *)(v15 - 304);
  *(_QWORD *)(v15 - 104) = v10;
  *(_QWORD *)(v15 - 96) = v26;
  type metadata accessor for RelatedWorkoutAction.CodingKeys();
}

uint64_t sub_23C2CB8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;

  MEMORY[0x24261C66C](&unk_23C3553D8, a1);
  v5 = sub_23C34EC4C();
  *(_QWORD *)(v4 - 240) = v5;
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v4 - 376), *(_QWORD *)(*(_QWORD *)(v4 - 376) + 24));
  sub_23C34ECC4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v3, *(_QWORD *)(v4 - 368), v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_23C2CB974 + 4 * byte_23C354EF4[EnumCaseMultiPayload]))();
}

uint64_t sub_23C2CB974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 232) = 0;
  v3 = *(_QWORD *)(v2 - 592);
  v4 = *(_QWORD *)(v2 - 240);
  sub_23C34EBD4();
  v5 = *(_QWORD *)(v2 - 568);
  sub_23C34EC34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 576) + 8))(v3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v4);
}

void type metadata accessor for RelatedWorkoutAction.ViewAppearedCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutAction.LoadedDescriptorCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutAction.ItemTappedCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutAction.ItemAppearedCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutAction.CodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void RelatedWorkoutAction.init(from:)()
{
  type metadata accessor for RelatedWorkoutAction.ViewAppearedCodingKeys();
}

void type metadata accessor for RelatedWorkoutAction()
{
  JUMPOUT(0x24261C5D0);
}

void sub_23C2CCAE4()
{
  RelatedWorkoutAction.init(from:)();
}

void sub_23C2CCB3C()
{
  RelatedWorkoutAction.encode(to:)();
}

void static RelatedWorkoutAction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[14];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v35 = a8;
  v36 = a5;
  v37 = a7;
  v31 = a2;
  v30 = a1;
  v33 = a20;
  v34 = a19;
  v29 = a18;
  v32 = a17;
  v38 = a16;
  v39 = a3;
  v40 = a4;
  v41 = a5;
  v42 = a6;
  v43 = a7;
  v44 = a9;
  v45 = a8;
  v46 = a10;
  v47 = a11;
  v48 = a12;
  v49 = a13;
  v50 = a14;
  v51 = a15;
  v52 = a16;
  v53 = a17;
  v54 = a19;
  v55 = a18;
  v56 = a20;
  v27 = sub_23C34DBF0();
  v26[13] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26[2] = (char *)v26 - v23;
  v26[12] = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26[1] = (char *)v26 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[10] = a3;
  v39 = a3;
  v40 = a4;
  v26[11] = a4;
  v41 = v36;
  v42 = a6;
  v28 = a6;
  v43 = v37;
  v44 = v35;
  v26[9] = a9;
  v45 = a9;
  v46 = a10;
  v26[3] = a10;
  v26[4] = a11;
  v47 = a11;
  v48 = a12;
  v26[5] = a12;
  v26[6] = a13;
  v49 = a13;
  v50 = a14;
  v26[7] = a14;
  v26[8] = a15;
  v51 = a15;
  v52 = v38;
  v53 = v32;
  v54 = v29;
  v55 = v34;
  v56 = v33;
  type metadata accessor for RelatedWorkoutAction();
}

uint64_t sub_23C2CCD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, _QWORD, uint64_t, __n128);
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v18 = (char *)&a9 + *(int *)(v17 + 48) - v16;
  *(_QWORD *)(v9 - 320) = v11;
  v19 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 16);
  v19((char *)&a9 - v16, *(_QWORD *)(v9 - 304), a1, v15);
  ((void (*)(char *, _QWORD, uint64_t))v19)(v18, *(_QWORD *)(v9 - 296), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_23C2CCE4C + 4 * byte_23C354EFC[EnumCaseMultiPayload]))();
}

BOOL sub_23C2CCE4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, uint64_t, uint64_t);
  uint64_t v7;
  BOOL v8;

  v6(v3, v4, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    v8 = 0;
  }
  else
  {
    v8 = *v3 == *v1;
    v5 = *(_QWORD *)(v7 - 320);
    v0 = v2;
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v0);
  return v8;
}

void sub_23C2CD0C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static RelatedWorkoutAction.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
    a3[19]);
}

uint64_t sub_23C2CD104(char a1)
{
  return a1 & 1;
}

uint64_t sub_23C2CD114()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2CD11C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_23C34DBF0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23C2CD20C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_23C34DBF0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(*(_QWORD *)(a3 + 40) - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_23C2CD350(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v5 = sub_23C34DBF0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else if ((_DWORD)result == 1)
  {
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 8))(a1);
  }
  return result;
}

void *sub_23C2CD41C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_23C34DBF0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(void *, const void *))(*(_QWORD *)(*(_QWORD *)(a3 + 40) - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23C2CD538(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_23C34DBF0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(void *, const void *))(*(_QWORD *)(*(_QWORD *)(a3 + 40) - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

void *sub_23C2CD66C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_23C34DBF0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(void *, const void *))(*(_QWORD *)(*(_QWORD *)(a3 + 40) - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23C2CD788(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_23C34DBF0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(void *, const void *))(*(_QWORD *)(*(_QWORD *)(a3 + 40) - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_23C2CD8BC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2CD8C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2CD910 + 4 * byte_23C354F05[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2CD944 + 4 * byte_23C354F00[v4]))();
}

uint64_t sub_23C2CD944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2CD94C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2CD954);
  return result;
}

uint64_t sub_23C2CD960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2CD968);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2CD96C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2CD974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2CD984(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C2CD9C4 + 4 * byte_23C354F0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2CD9E4 + 4 * byte_23C354F0F[v4]))();
}

_BYTE *sub_23C2CD9C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2CD9E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2CD9EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2CD9F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2CD9FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2CDA04(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23C2CDA10()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA20()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA30()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA40()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA50()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA60()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA70()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA80()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDA90()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDAA0()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDAB0()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDAC0()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDAD0()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2CDAE0()
{
  JUMPOUT(0x24261C66CLL);
}

uint64_t sub_23C2CDAF0()
{
  return 4;
}

uint64_t sub_23C2CDAF8()
{
  return 0x7865646E69;
}

uint64_t sub_23C2CDB0C()
{
  return 0x6E6564496D657469;
}

uint64_t sub_23C2CDB30()
{
  return sub_23C280400();
}

uint64_t static TrainerTipGalleryDetail.== infix(_:_:)()
{
  if ((sub_23C34D800() & 1) == 0)
    return 0;
  type metadata accessor for TrainerTipGalleryDetail();
  return sub_23C34D800();
}

uint64_t type metadata accessor for TrainerTipGalleryDetail()
{
  uint64_t result;

  result = qword_256B59960;
  if (!qword_256B59960)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainerTipGalleryDetail.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TrainerTipGalleryDetail.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TrainerTipGalleryDetail() + 20);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TrainerTipGalleryDetail.init(title:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v9(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for TrainerTipGalleryDetail() + 20);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v7, a2, v6);
}

uint64_t sub_23C2CDCE8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7470697263736564;
  else
    return 0x656C746974;
}

uint64_t sub_23C2CDD24()
{
  char *v0;

  return sub_23C2CDCE8(*v0);
}

uint64_t sub_23C2CDD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2CE878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2CDD50()
{
  sub_23C2CDEF4();
  return sub_23C34ECD0();
}

uint64_t sub_23C2CDD78()
{
  sub_23C2CDEF4();
  return sub_23C34ECDC();
}

uint64_t TrainerTipGalleryDetail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B598F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2CDEF4();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34D86C();
  sub_23C2CE1D8(&qword_256B582E0, MEMORY[0x24BDCC5B8]);
  sub_23C34EC40();
  if (!v1)
  {
    type metadata accessor for TrainerTipGalleryDetail();
    v8[14] = 1;
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2CDEF4()
{
  unint64_t result;

  result = qword_256B598F8;
  if (!qword_256B598F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3556EC, &type metadata for TrainerTipGalleryDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B598F8);
  }
  return result;
}

uint64_t TrainerTipGalleryDetail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_23C34D86C();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v22 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v19 - v6;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59900);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TrainerTipGalleryDetail();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2CDEF4();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v10;
  v20 = a1;
  v13 = v7;
  v14 = v23;
  v28 = 0;
  sub_23C2CE1D8(&qword_256B58300, MEMORY[0x24BDCC5D0]);
  v15 = v24;
  sub_23C34EBB0();
  v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v16(v12, v15, v25);
  v27 = 1;
  v17 = v22;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v26);
  v16(&v12[*(int *)(v19 + 20)], v17, v25);
  sub_23C2CE218((uint64_t)v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_23C2CE25C((uint64_t)v12);
}

uint64_t sub_23C2CE1D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C34D86C();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2CE218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrainerTipGalleryDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2CE25C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrainerTipGalleryDetail();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2CE298@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryDetail.init(from:)(a1, a2);
}

uint64_t sub_23C2CE2AC(_QWORD *a1)
{
  return TrainerTipGalleryDetail.encode(to:)(a1);
}

uint64_t sub_23C2CE2C0()
{
  if ((sub_23C34D800() & 1) != 0)
    return sub_23C34D800();
  else
    return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryDetail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34D86C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23C34D86C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for TrainerTipGalleryDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for TrainerTipGalleryDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for TrainerTipGalleryDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for TrainerTipGalleryDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryDetail()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2CE5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryDetail()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2CE62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23C2CE66C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C34D86C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryDetail.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2CE720 + 4 * byte_23C355575[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2CE754 + 4 * byte_23C355570[v4]))();
}

uint64_t sub_23C2CE754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2CE75C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2CE764);
  return result;
}

uint64_t sub_23C2CE770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2CE778);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2CE77C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2CE784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryDetail.CodingKeys()
{
  return &type metadata for TrainerTipGalleryDetail.CodingKeys;
}

unint64_t sub_23C2CE7A4()
{
  unint64_t result;

  result = qword_256B59998;
  if (!qword_256B59998)
  {
    result = MEMORY[0x24261C66C](&unk_23C3556C4, &type metadata for TrainerTipGalleryDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59998);
  }
  return result;
}

unint64_t sub_23C2CE7EC()
{
  unint64_t result;

  result = qword_256B599A0;
  if (!qword_256B599A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C355634, &type metadata for TrainerTipGalleryDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B599A0);
  }
  return result;
}

unint64_t sub_23C2CE834()
{
  unint64_t result;

  result = qword_256B599A8;
  if (!qword_256B599A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35565C, &type metadata for TrainerTipGalleryDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B599A8);
  }
  return result;
}

uint64_t sub_23C2CE878(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C2CE968(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v29 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_23C34E9D0();
  if (!v20)
    return sub_23C34E91C();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_23C34EAE4();
  v34 = sub_23C34EAF0();
  sub_23C34EACC();
  v37 = v8;
  result = sub_23C34E9C4();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_23C34EA24();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v13);
      v24(v43, 0);
      v28 = v42;
      v38(v13, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
      sub_23C34EAD8();
      result = sub_23C34E9F4();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23C2CEC58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 > 1u)
  {
    sub_23C34EC88();
    return sub_23C34EC88();
  }
  else
  {
    sub_23C34EC88();
    return sub_23C34E8B0();
  }
}

uint64_t sub_23C2CECD0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 != a4 || a2 != a5)
        return sub_23C34EC64();
      return 1;
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 != a4 || a2 != a5)
        return sub_23C34EC64();
      return 1;
    }
    return 0;
  }
  return a6 == 2 && a1 == a4;
}

uint64_t sub_23C2CED4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  _BYTE v7[72];

  sub_23C34EC7C();
  sub_23C2CEC58((uint64_t)v7, a1, a2, a3);
  return sub_23C34ECAC();
}

uint64_t sub_23C2CEE40()
{
  uint64_t v0;

  return sub_23C2CED4C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_23C2CEE9C(uint64_t a1)
{
  uint64_t v1;

  return sub_23C2CEC58(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_23C2CEEEC()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_23C34EC7C();
  sub_23C2CEC58((uint64_t)v2, *(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  return sub_23C34ECAC();
}

uint64_t sub_23C2CEF58(uint64_t a1, uint64_t a2)
{
  return sub_23C2CECD0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16)) & 1;
}

__n128 RelatedWorkoutFeature.init(environment:fetchItemForPlaceholders:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __n128 v8;
  __n128 v9;

  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  v4 = sub_23C34DB00();
  MEMORY[0x24261C66C](MEMORY[0x24BE34768], v4);
  sub_23C34DB18();
  sub_23C34DC08();
  swift_retain();
  v8 = a1[1];
  v9 = *a1;
  v7 = a1[2];
  sub_23C34DBFC();
  v5 = sub_23C34DB0C();
  swift_release();
  *a2 = v9;
  a2[1] = v8;
  result = v7;
  a2[2] = v7;
  a2[3].n128_u64[0] = v5;
  return result;
}

unint64_t sub_23C2CF158()
{
  unint64_t result;

  result = qword_256B599B0;
  if (!qword_256B599B0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutItemContext, &type metadata for RelatedWorkoutItemContext);
    atomic_store(result, (unint64_t *)&qword_256B599B0);
  }
  return result;
}

unint64_t sub_23C2CF19C()
{
  unint64_t result;

  result = qword_256B599B8;
  if (!qword_256B599B8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutItemContext, &type metadata for RelatedWorkoutItemContext);
    atomic_store(result, (unint64_t *)&qword_256B599B8);
  }
  return result;
}

unint64_t sub_23C2CF1E0()
{
  unint64_t result;

  result = qword_256B599C0;
  if (!qword_256B599C0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutItemContext, &type metadata for RelatedWorkoutItemContext);
    atomic_store(result, &qword_256B599C0);
  }
  return result;
}

void RelatedWorkoutFeature.reduce(localState:sharedState:sideEffects:action:)()
{
  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  type metadata accessor for RelatedWorkoutLoadState();
}

void sub_23C2CF3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v18 - 520) = a1;
  *(_QWORD *)(v18 - 528) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v18 - 616) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v18 - 608) = (char *)&a9 - v21;
  *(_QWORD *)(v18 - 320) = *(_QWORD *)(v18 - 368);
  *(_QWORD *)(v18 - 312) = v9;
  *(_QWORD *)(v18 - 304) = *(_QWORD *)(v18 - 352);
  *(_QWORD *)(v18 - 296) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)(v18 - 288) = *(_QWORD *)(v18 - 376);
  *(_QWORD *)(v18 - 280) = v13;
  *(_QWORD *)(v18 - 272) = v10;
  *(_QWORD *)(v18 - 264) = v11;
  *(_QWORD *)(v18 - 256) = v17;
  *(_QWORD *)(v18 - 248) = v14;
  *(_QWORD *)(v18 - 240) = v12;
  *(_QWORD *)(v18 - 232) = v15;
  v22 = *(_QWORD *)(v18 - 456);
  *(_QWORD *)(v18 - 224) = v16;
  *(_QWORD *)(v18 - 216) = v22;
  v23 = *(_QWORD *)(v18 - 440);
  *(_QWORD *)(v18 - 208) = *(_QWORD *)(v18 - 472);
  *(_QWORD *)(v18 - 200) = v23;
  v24 = *(_QWORD *)(v18 - 432);
  *(_QWORD *)(v18 - 192) = *(_QWORD *)(v18 - 464);
  *(_QWORD *)(v18 - 184) = v24;
  type metadata accessor for RelatedWorkoutAction();
}

void sub_23C2CF4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v17 = sub_23C34E760();
  *(_QWORD *)(v16 - 544) = v17;
  *(_QWORD *)(v16 - 552) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v16 - 640) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 568) = (char *)&a9 - v20;
  v21 = sub_23C34DA88();
  *(_QWORD *)(v16 - 592) = v21;
  *(_QWORD *)(v16 - 600) = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v16 - 624) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v16 - 632) = v22;
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v16 - 560) = (char *)&a9 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v26 = *(_QWORD *)(v16 - 496);
  v27 = *(_OWORD *)(v26 + 16);
  v28 = (_OWORD *)(v16 - 160);
  *v28 = *(_OWORD *)v26;
  v28[1] = v27;
  v28[2] = *(_OWORD *)(v26 + 32);
  *(_QWORD *)(v16 - 112) = *(_QWORD *)(v26 + 48);
  v29 = *(_QWORD *)(v10 + 64);
  v30 = *(_QWORD *)(v10 + 128);
  *(_QWORD *)(v16 - 320) = *(_QWORD *)(v16 - 368);
  *(_QWORD *)(v16 - 312) = *(_QWORD *)(v16 - 360);
  *(_QWORD *)(v16 - 304) = *(_QWORD *)(v16 - 352);
  *(_QWORD *)(v16 - 296) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)(v16 - 288) = *(_QWORD *)(v16 - 376);
  *(_QWORD *)(v16 - 280) = v13;
  *(_QWORD *)(v16 - 272) = *(_QWORD *)(v16 - 400);
  *(_QWORD *)(v16 - 512) = v29;
  *(_QWORD *)(v16 - 264) = v29;
  v31 = *(_QWORD *)(v16 - 408);
  *(_QWORD *)(v16 - 256) = *(_QWORD *)(v16 - 384);
  *(_QWORD *)(v16 - 248) = v31;
  *(_QWORD *)(v16 - 240) = *(_QWORD *)(v16 - 416);
  *(_QWORD *)(v16 - 232) = *(_QWORD *)(v16 - 424);
  *(_QWORD *)(v16 - 224) = *(_QWORD *)(v16 - 504);
  *(_QWORD *)(v16 - 216) = *(_QWORD *)(v16 - 448);
  *(_QWORD *)(v16 - 208) = v12;
  *(_QWORD *)(v16 - 200) = v11;
  *(_QWORD *)(v16 - 192) = v15;
  *(_QWORD *)(v16 - 184) = v9;
  *(_QWORD *)(v16 - 176) = v30;
  *(_QWORD *)(v16 - 496) = v30;
  *(_QWORD *)(v16 - 168) = v14;
  type metadata accessor for RelatedWorkoutState();
}

uint64_t sub_23C2CF6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;

  v6 = (uint64_t *)(v2 + *(int *)(a1 + 188));
  v8 = *v6;
  v7 = v6[1];
  *(_QWORD *)(v5 - 584) = v8;
  *(_QWORD *)(v5 - 576) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v3, *(_QWORD *)(v5 - 480), v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_23C2CF754 + 4 * word_23C355740[EnumCaseMultiPayload]))();
}

void sub_23C2CF754()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *v1;
  MEMORY[0x24261B178](*v1, 0);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC8);
  v6 = *(_QWORD *)(v3 - 568);
  *(_QWORD *)(v3 - 456) = v6 + v5[12];
  *(_QWORD *)(v3 - 448) = v6 + v5[20];
  *(_QWORD *)(v3 - 480) = v6 + v5[24];
  *(_QWORD *)(v3 - 344) = v4;
  *(_QWORD *)(v3 - 336) = 0;
  *(_BYTE *)(v3 - 328) = 2;
  *(_QWORD *)(v3 - 320) = *(_QWORD *)(v3 - 368);
  *(_QWORD *)(v3 - 312) = *(_QWORD *)(v3 - 360);
  *(_QWORD *)(v3 - 304) = *(_QWORD *)(v3 - 352);
  *(_QWORD *)(v3 - 296) = *(_QWORD *)(v3 - 376);
  *(_QWORD *)(v3 - 288) = *(_QWORD *)(v3 - 392);
  *(_QWORD *)(v3 - 280) = *(_QWORD *)(v3 - 400);
  *(_QWORD *)(v3 - 272) = *(_QWORD *)(v3 - 512);
  *(_QWORD *)(v3 - 264) = *(_QWORD *)(v3 - 384);
  v7 = *(_QWORD *)(v3 - 416);
  *(_QWORD *)(v3 - 256) = *(_QWORD *)(v3 - 408);
  *(_QWORD *)(v3 - 248) = v7;
  *(_QWORD *)(v3 - 240) = *(_QWORD *)(v3 - 424);
  *(_QWORD *)(v3 - 232) = v2;
  *(_QWORD *)(v3 - 224) = *(_QWORD *)(v3 - 440);
  *(_QWORD *)(v3 - 216) = v0;
  v8 = *(_QWORD *)(v3 - 432);
  *(_QWORD *)(v3 - 208) = *(_QWORD *)(v3 - 496);
  *(_QWORD *)(v3 - 200) = v8;
  type metadata accessor for RelatedWorkoutFeature.TaskIdentifier();
}

uint64_t sub_23C2CF8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  MEMORY[0x24261C66C](&unk_23C355838, a1);
  sub_23C34EB20();
  v9 = *MEMORY[0x24BE2B580];
  v10 = sub_23C34E790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v4, v9, v10);
  v11 = *(_QWORD *)(v8 - 600);
  v12 = *(_QWORD *)(v8 - 624);
  v13 = *(_QWORD *)(v8 - 592);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v2, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  v16 = *(_QWORD *)(v8 - 360);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v8 - 368);
  *(_QWORD *)(v15 + 24) = v16;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v8 - 352);
  *(_QWORD *)(v15 + 40) = v1;
  v17 = *(_QWORD *)(v8 - 400);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v8 - 392);
  *(_QWORD *)(v15 + 56) = v17;
  v18 = *(_QWORD *)(v8 - 384);
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(v8 - 512);
  *(_QWORD *)(v15 + 72) = v18;
  *(_QWORD *)(v15 + 80) = *(_QWORD *)(v8 - 408);
  *(_QWORD *)(v15 + 88) = v6;
  *(_QWORD *)(v15 + 96) = *(_QWORD *)(v8 - 424);
  *(_QWORD *)(v15 + 104) = v7;
  v19 = *(_QWORD *)(v8 - 464);
  *(_QWORD *)(v15 + 112) = *(_QWORD *)(v8 - 440);
  *(_QWORD *)(v15 + 120) = v19;
  *(_QWORD *)(v15 + 128) = *(_QWORD *)(v8 - 496);
  *(_QWORD *)(v15 + 136) = v5;
  v20 = *(_OWORD *)(v8 - 160);
  v21 = *(_OWORD *)(v8 - 144);
  v22 = *(_OWORD *)(v8 - 128);
  *(_QWORD *)(v15 + 192) = *(_QWORD *)(v8 - 112);
  *(_OWORD *)(v15 + 160) = v21;
  *(_OWORD *)(v15 + 176) = v22;
  *(_OWORD *)(v15 + 144) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v15 + v14, v12, v13);
  v23 = *(_QWORD **)(v8 - 480);
  *v23 = &unk_256B599F0;
  v23[1] = v15;
  sub_23C2D1FBC(v8 - 160);
  sub_23C34E970();
  v24 = *MEMORY[0x24BE2B558];
  v25 = sub_23C34E784();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(*(_QWORD *)(v8 - 448), v24, v25);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8 - 552) + 104))(v3, *MEMORY[0x24BE2B438], *(_QWORD *)(v8 - 544));
  sub_23C34E934();
  sub_23C34E928();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v8 - 560), v13);
}

void sub_23C2D04A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v19[55] = a18;
  v19[56] = a19;
  v19[53] = a16;
  v19[54] = a17;
  v19[51] = a14;
  v19[52] = a15;
  v19[49] = a12;
  v19[50] = a13;
  v19[47] = a10;
  v19[48] = a11;
  v19[45] = a8;
  v19[46] = a9;
  v19[43] = a6;
  v19[44] = a7;
  v19[41] = a4;
  v19[42] = a5;
  v19[40] = a1;
  v25 = sub_23C2CF158();
  v26 = sub_23C2CF19C();
  v27 = sub_23C2CF1E0();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  v19[5] = &type metadata for RelatedWorkoutItemContext;
  v19[6] = a7;
  v19[7] = a8;
  v19[8] = a9;
  v19[9] = a11;
  v19[10] = a12;
  v19[11] = a13;
  v19[12] = a14;
  v19[13] = v25;
  v19[14] = v26;
  v19[15] = v27;
  v19[16] = a15;
  v19[17] = a16;
  v19[18] = a17;
  v19[19] = a19;
  type metadata accessor for RelatedWorkoutAction();
}

uint64_t sub_23C2D05C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4[57] = a1;
  v4[58] = *(_QWORD *)(a1 - 8);
  v11 = swift_task_alloc();
  v4[20] = v16;
  v4[59] = v11;
  v4[21] = v7;
  v4[22] = v17;
  v4[23] = &type metadata for RelatedWorkoutItemContext;
  v4[24] = v3;
  v4[25] = v9;
  v4[26] = v18;
  v4[27] = v2;
  v4[28] = v20;
  v4[29] = v21;
  v4[30] = v22;
  v4[31] = v5;
  v4[32] = v8;
  v4[33] = v1;
  v4[34] = v23;
  v4[35] = v6;
  v4[36] = v24;
  v4[37] = *(_QWORD *)(v10 - 80);
  v12 = sub_23C34DBF0();
  v4[60] = v12;
  v13 = sub_23C34EA48();
  v4[61] = v13;
  v4[62] = *(_QWORD *)(v13 - 8);
  v4[63] = swift_task_alloc();
  v4[64] = *(_QWORD *)(v12 - 8);
  v4[65] = swift_task_alloc();
  v4[66] = sub_23C34E964();
  v4[67] = sub_23C34E958();
  v4[68] = *(_QWORD *)(v19 + 48);
  *(_QWORD *)(v10 - 80) = (int)*MEMORY[0x24BE34770] + MEMORY[0x24BE34770];
  v14 = (_QWORD *)swift_task_alloc();
  v4[69] = v14;
  *v14 = v4;
  v14[1] = sub_23C2D0714;
  return (*(uint64_t (**)())(v10 - 80))();
}

uint64_t sub_23C2D0714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 560) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 568) = sub_23C34E940();
  *(_QWORD *)(v2 + 576) = v3;
  return swift_task_switch();
}

uint64_t sub_23C2D07A8()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t);

  v1 = (_OWORD *)swift_task_alloc();
  v2 = *(_OWORD *)(v0 + 328);
  v3 = *(_OWORD *)(v0 + 344);
  v4 = *(_OWORD *)(v0 + 360);
  v5 = *(_OWORD *)(v0 + 376);
  v6 = *(_OWORD *)(v0 + 392);
  v7 = *(_OWORD *)(v0 + 408);
  v8 = *(_OWORD *)(v0 + 424);
  v9 = *(_OWORD *)(v0 + 440);
  v13 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t))((int)*MEMORY[0x24BE34780] + MEMORY[0x24BE34780]);
  *(_QWORD *)(v0 + 584) = v1;
  v1[1] = v2;
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v6;
  v1[6] = v7;
  v1[7] = v8;
  v1[8] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 592) = v10;
  v11 = sub_23C34E934();
  *(_QWORD *)(v0 + 600) = v11;
  *v10 = v0;
  v10[1] = sub_23C2D0878;
  return v13(v0 + 304, sub_23C2D2D14, v1, v11);
}

uint64_t sub_23C2D0878()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C2D08D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 304);
  MEMORY[0x24261C66C](MEMORY[0x24BEE12E0], v1);
  sub_23C34EA0C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 496) + 8))(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 488));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 520);
    v7 = *(_QWORD *)(v0 + 512);
    v9 = *(_QWORD *)(v0 + 472);
    v8 = *(_QWORD *)(v0 + 480);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v6, *(_QWORD *)(v0 + 504), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v6, v8);
    swift_storeEnumTagMultiPayload();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 608) = v10;
    sub_23C34E778();
    *v10 = v0;
    v10[1] = sub_23C2D0A44;
    return sub_23C34E76C();
  }
}

uint64_t sub_23C2D0A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 464);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 472);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 456);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23C2D0AB4()
{
  uint64_t v0;

  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 480));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2D0B20()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void type metadata accessor for RelatedWorkoutFeature.TaskIdentifier()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C2D0B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 16) = a2;
  sub_23C34E964();
  *(_QWORD *)(v5 + 40) = sub_23C34E958();
  *(_QWORD *)(v5 + 48) = sub_23C34E940();
  *(_QWORD *)(v5 + 56) = v6;
  return swift_task_switch();
}

uint64_t sub_23C2D0C04()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[4];
  v2 = *(int **)(v0[2] + 16);
  sub_23C2D2D44();
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_23C2D0C84;
  return ((uint64_t (*)(_QWORD, uint64_t))v5)(v0[3], v1);
}

uint64_t sub_23C2D0C84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23C2D200C();
  return swift_task_switch();
}

uint64_t sub_23C2D0CF8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2D0D2C()
{
  uint64_t v0;

  sub_23C2D200C();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23C2D0D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v20[97] = a20;
  v20[96] = a19;
  v20[95] = a18;
  v20[94] = a17;
  v20[93] = a16;
  v20[92] = a15;
  v20[91] = a14;
  v20[90] = a13;
  v20[89] = a12;
  v20[88] = a11;
  v20[87] = a10;
  v20[86] = a9;
  v20[85] = a8;
  v20[84] = a7;
  v20[83] = a6;
  v20[82] = a5;
  v20[81] = a4;
  v20[80] = a3;
  v20[79] = a2;
  v20[78] = a1;
  v27 = sub_23C2CF158();
  v20[98] = v27;
  v25 = sub_23C2CF19C();
  v20[99] = v25;
  v26 = sub_23C2CF1E0();
  v20[100] = v26;
  v20[2] = a5;
  v20[3] = a6;
  v20[4] = a7;
  v20[5] = &type metadata for RelatedWorkoutItemContext;
  v20[6] = a8;
  v20[7] = a9;
  v20[8] = a10;
  v20[9] = a12;
  v20[10] = a13;
  v20[11] = a14;
  v20[12] = a15;
  v20[13] = v27;
  v20[14] = v25;
  v20[15] = v26;
  v20[16] = a16;
  v20[17] = a17;
  v20[18] = a18;
  v20[19] = a20;
  type metadata accessor for RelatedWorkoutAction();
}

uint64_t sub_23C2D0ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int **v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v4 + 808) = a1;
  *(_QWORD *)(v4 + 816) = *(_QWORD *)(a1 - 8);
  v12 = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = v8;
  *(_QWORD *)(v4 + 824) = v12;
  *(_QWORD *)(v4 + 168) = v21;
  *(_QWORD *)(v4 + 176) = v22;
  *(_QWORD *)(v4 + 184) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)(v4 + 192) = v20;
  *(_QWORD *)(v4 + 200) = v9;
  *(_QWORD *)(v4 + 208) = v6;
  *(_QWORD *)(v4 + 216) = v1;
  *(_QWORD *)(v4 + 224) = v7;
  *(_QWORD *)(v4 + 232) = v25;
  *(_QWORD *)(v4 + 240) = v26;
  *(_QWORD *)(v4 + 248) = v10;
  *(_QWORD *)(v4 + 256) = v3;
  v13 = *(_QWORD *)(v11 - 104);
  *(_QWORD *)(v4 + 264) = v5;
  *(_QWORD *)(v4 + 272) = v13;
  *(_QWORD *)(v4 + 280) = *(_QWORD *)(v11 - 96);
  *(_QWORD *)(v4 + 288) = v2;
  *(_QWORD *)(v4 + 296) = *(_QWORD *)(v11 - 88);
  v14 = sub_23C34DBF0();
  *(_QWORD *)(v4 + 832) = v14;
  v15 = sub_23C34EA48();
  *(_QWORD *)(v4 + 840) = v15;
  *(_QWORD *)(v4 + 848) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v4 + 856) = swift_task_alloc();
  *(_QWORD *)(v4 + 864) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 872) = swift_task_alloc();
  sub_23C34DB30();
  *(_QWORD *)(v4 + 880) = swift_task_alloc();
  sub_23C34DBA8();
  *(_QWORD *)(v4 + 888) = swift_task_alloc();
  sub_23C34EA48();
  *(_QWORD *)(v4 + 896) = swift_task_alloc();
  sub_23C34EA48();
  *(_QWORD *)(v4 + 904) = swift_task_alloc();
  sub_23C34EA48();
  *(_QWORD *)(v4 + 912) = swift_task_alloc();
  v16 = sub_23C34D8B4();
  *(_QWORD *)(v4 + 920) = v16;
  *(_QWORD *)(v4 + 928) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v4 + 936) = swift_task_alloc();
  sub_23C34D86C();
  *(_QWORD *)(v4 + 944) = swift_task_alloc();
  *(_QWORD *)(v4 + 560) = v23;
  *(_QWORD *)(v4 + 568) = v6;
  *(_QWORD *)(v4 + 576) = v7;
  *(_QWORD *)(v4 + 584) = v2;
  *(_QWORD *)(v4 + 952) = sub_23C34DB48();
  sub_23C34EA48();
  *(_QWORD *)(v4 + 960) = swift_task_alloc();
  *(_QWORD *)(v4 + 968) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 976) = swift_task_alloc();
  *(_QWORD *)(v4 + 984) = sub_23C34E964();
  *(_QWORD *)(v4 + 992) = sub_23C34E958();
  v17 = *v24;
  *(_OWORD *)(v4 + 1000) = *((_OWORD *)v24 + 2);
  *(_QWORD *)(v11 - 88) = (char *)v17 + *v17;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 1016) = v18;
  *v18 = v4;
  v18[1] = sub_23C2D1178;
  return (*(uint64_t (**)())(v11 - 88))();
}

uint64_t sub_23C2D1178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 1024) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23C34E940();
  }
  else
  {
    v4[129] = a1;
    v4[130] = sub_23C34E940();
    v4[131] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_23C2D122C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v43 = *(_QWORD *)(v0 + 1032);
  v29 = *(_QWORD *)(v0 + 976);
  v33 = *(_QWORD *)(v0 + 968);
  v38 = *(_QWORD *)(v0 + 960);
  v26 = *(_QWORD *)(v0 + 952);
  v21 = *(_QWORD *)(v0 + 936);
  v22 = *(_QWORD *)(v0 + 928);
  v23 = *(_QWORD *)(v0 + 920);
  v24 = *(_QWORD *)(v0 + 912);
  v25 = *(_QWORD *)(v0 + 904);
  v32 = *(_QWORD *)(v0 + 896);
  v34 = *(_QWORD *)(v0 + 880);
  v41 = *(_QWORD *)(v0 + 800);
  v42 = *(_QWORD *)(v0 + 792);
  v40 = *(_QWORD *)(v0 + 784);
  v39 = *(_QWORD *)(v0 + 776);
  v35 = *(_QWORD *)(v0 + 752);
  v44 = *(_QWORD *)(v0 + 744);
  v45 = *(_QWORD *)(v0 + 736);
  v1 = *(_QWORD *)(v0 + 728);
  v46 = *(_OWORD *)(v0 + 760);
  v47 = *(_OWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v37 = v1;
  v4 = *(_QWORD *)(v0 + 688);
  v5 = *(_QWORD *)(v0 + 680);
  v6 = *(_QWORD *)(v0 + 672);
  v7 = *(_QWORD *)(v0 + 664);
  v36 = v5;
  v8 = *(_QWORD *)(v0 + 656);
  v30 = *(_QWORD *)(v0 + 696);
  v28 = *(_QWORD *)(v0 + 632);
  (*(void (**)(void))(v0 + 1000))();
  *(_QWORD *)(v0 + 304) = v8;
  *(_QWORD *)(v0 + 312) = v7;
  *(_QWORD *)(v0 + 320) = v6;
  *(_QWORD *)(v0 + 328) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)(v0 + 336) = v5;
  *(_QWORD *)(v0 + 344) = v47;
  *(_QWORD *)(v0 + 352) = v4;
  *(_QWORD *)(v0 + 360) = v3;
  v9 = v4;
  *(_QWORD *)(v0 + 368) = v2;
  *(_QWORD *)(v0 + 376) = v1;
  *(_QWORD *)(v0 + 384) = v45;
  *(_QWORD *)(v0 + 392) = v40;
  *(_QWORD *)(v0 + 400) = v42;
  *(_QWORD *)(v0 + 408) = v41;
  *(_QWORD *)(v0 + 416) = v44;
  *(_QWORD *)(v0 + 424) = v46;
  *(_QWORD *)(v0 + 432) = v35;
  *(_QWORD *)(v0 + 440) = v39;
  sub_23C34DB00();
  sub_23C34EC58();
  swift_allocObject();
  v31 = sub_23C34E910();
  sub_23C34EAA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23C34E8BC();
  *(_QWORD *)(v0 + 1056) = *(_QWORD *)(v28 + 48);
  sub_23C34D8A8();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)swift_task_alloc() = KeyPath;
  swift_getKeyPath();
  swift_task_dealloc();
  sub_23C34E238();
  sub_23C34E214();
  v11 = sub_23C34E250();
  swift_release();
  *(_QWORD *)(v0 + 600) = v11;
  sub_23C2D2D68();
  sub_23C34D89C();
  sub_23C34E898();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v24, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v25, 1, 1, v8);
  sub_23C34DB3C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v38, 0, 1);
  *(_QWORD *)(v0 + 592) = v43;
  v12 = swift_task_alloc();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v7;
  *(_QWORD *)(v12 + 32) = v6;
  *(_QWORD *)(v12 + 40) = v36;
  *(_QWORD *)(v12 + 48) = v9;
  *(_OWORD *)(v12 + 56) = v47;
  *(_QWORD *)(v12 + 72) = v3;
  *(_QWORD *)(v12 + 80) = v2;
  *(_QWORD *)(v12 + 88) = v37;
  *(_QWORD *)(v12 + 96) = v45;
  *(_QWORD *)(v12 + 104) = v44;
  *(_QWORD *)(v12 + 112) = v35;
  *(_OWORD *)(v12 + 120) = v46;
  *(_QWORD *)(v12 + 136) = v39;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B00);
  *(_QWORD *)(v0 + 448) = v8;
  *(_QWORD *)(v0 + 456) = v7;
  *(_QWORD *)(v0 + 464) = v6;
  *(_QWORD *)(v0 + 472) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)(v0 + 480) = v36;
  *(_QWORD *)(v0 + 488) = v3;
  *(_QWORD *)(v0 + 496) = v2;
  *(_QWORD *)(v0 + 504) = v37;
  *(_QWORD *)(v0 + 512) = v45;
  *(_QWORD *)(v0 + 520) = v40;
  *(_QWORD *)(v0 + 528) = v42;
  *(_QWORD *)(v0 + 536) = v41;
  *(_QWORD *)(v0 + 544) = v44;
  *(_QWORD *)(v0 + 552) = v39;
  v13 = sub_23C34DADC();
  v14 = sub_23C2D2E94();
  sub_23C2CE968((void (*)(char *, char *))sub_23C2D2E44, v12, v27, v13, MEMORY[0x24BEE4078], v14, MEMORY[0x24BEE40A8], v15);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v29, v30);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v30);
  sub_23C34DB9C();
  v16 = *MEMORY[0x24BE347F8];
  v17 = sub_23C34DB30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v34, v16, v17);
  sub_23C34DAE8();
  v18 = sub_23C2D7E28(v31);
  *(_QWORD *)(v0 + 1064) = v18;
  *(_QWORD *)&v47 = (int)*MEMORY[0x24BE34778] + MEMORY[0x24BE34778];
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1072) = v19;
  *v19 = v0;
  v19[1] = sub_23C2D1868;
  return ((uint64_t (*)(uint64_t))v47)(v18);
}

uint64_t sub_23C2D1868()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23C2D18C4()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t);

  v1 = (_OWORD *)swift_task_alloc();
  v12 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _OWORD *, uint64_t))((int)*MEMORY[0x24BE34780] + MEMORY[0x24BE34780]);
  *(_QWORD *)(v0 + 1080) = v1;
  v2 = *(_OWORD *)(v0 + 672);
  v3 = *(_OWORD *)(v0 + 688);
  v4 = *(_OWORD *)(v0 + 704);
  v5 = *(_OWORD *)(v0 + 720);
  v6 = *(_OWORD *)(v0 + 736);
  v7 = *(_OWORD *)(v0 + 752);
  v8 = *(_OWORD *)(v0 + 768);
  v1[1] = *(_OWORD *)(v0 + 656);
  v1[2] = v2;
  v1[3] = v3;
  v1[4] = v4;
  v1[5] = v5;
  v1[6] = v6;
  v1[7] = v7;
  v1[8] = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1088) = v9;
  v10 = sub_23C34E934();
  *(_QWORD *)(v0 + 1096) = v10;
  *v9 = v0;
  v9[1] = sub_23C2D1990;
  return v12(v0 + 608, sub_23C2D2D14, v1, v10);
}

uint64_t sub_23C2D1990()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C2D19EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 1096);
  v2 = *(_QWORD *)(v0 + 864);
  v3 = *(_QWORD *)(v0 + 856);
  v4 = *(_QWORD *)(v0 + 832);
  *(_QWORD *)(v0 + 616) = *(_QWORD *)(v0 + 608);
  MEMORY[0x24261C66C](MEMORY[0x24BEE12E0], v1);
  sub_23C34EA0C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v4) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 968) + 8))(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 696));
    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 848) + 8))(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 840));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 872);
    v7 = *(_QWORD *)(v0 + 864);
    v8 = *(_QWORD *)(v0 + 832);
    v9 = *(_QWORD *)(v0 + 824);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 32))(v6, *(_QWORD *)(v0 + 856), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v9, v6, v8);
    swift_storeEnumTagMultiPayload();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1104) = v10;
    sub_23C34E778();
    *v10 = v0;
    v10[1] = sub_23C2D1C10;
    return sub_23C34E76C();
  }
}

uint64_t sub_23C2D1C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 824);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 816);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 808);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23C2D1C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 872);
  v2 = *(_QWORD *)(v0 + 864);
  v3 = *(_QWORD *)(v0 + 832);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 968) + 8))(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 696));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2D1DA0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2D1E8C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23C2D1ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v23 = v20[3];
  v30 = v20[2];
  v24 = v20[4];
  v25 = v20[5];
  v26 = (uint64_t)(v20 + 18);
  v28 = v20[25];
  v27 = v20[26];
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v21 + 16) = v29;
  *v29 = v21;
  v29[1] = sub_23C2D2F88;
  sub_23C2D0D74(a1, v26, v28, v27, v30, v23, v24, v25, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_23C2D1FBC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2D200C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2D2014()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23C2D200C();
  return swift_deallocObject();
}

uint64_t sub_23C2D205C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0 + 144;
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_BYTE *)(v0 + 216);
  v6 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_23C2A1EC8;
  *(_BYTE *)(v6 + 80) = v5;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 16) = v2;
  sub_23C34E964();
  *(_QWORD *)(v6 + 40) = sub_23C34E958();
  *(_QWORD *)(v6 + 48) = sub_23C34E940();
  *(_QWORD *)(v6 + 56) = v7;
  return swift_task_switch();
}

uint64_t sub_23C2D2110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23C34DA88();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 200) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23C2D219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v22 = v19[2];
  v23 = v19[3];
  v24 = v19[4];
  v25 = v19[5];
  v26 = v19[6];
  v27 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C34DA88() - 8) + 80);
  v28 = (uint64_t)(v19 + 18);
  v29 = (uint64_t)v19 + ((v27 + 200) & ~v27);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v20 + 16) = v30;
  *v30 = v20;
  v30[1] = sub_23C2D2F88;
  sub_23C2D04A8(a1, v28, v29, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_23C2D22A0()
{
  uint64_t v0;

  v0 = sub_23C34DAD0();
  MEMORY[0x24BDAC7A8](v0);
  swift_bridgeObjectRetain();
  sub_23C34DC80();
  swift_storeEnumTagMultiPayload();
  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  sub_23C34DB78();
  sub_23C34DADC();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23C2D2410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  sub_23C34DB00();
  v1 = sub_23C34E934();
  sub_23C34DBF0();
  MEMORY[0x24261C66C](MEMORY[0x24BEE12C8], v1);
  result = sub_23C34E8E0();
  *a1 = result;
  return result;
}

uint64_t sub_23C2D25FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  sub_23C34DB00();
  sub_23C34DAF4();
  v1 = sub_23C34DBF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(a1, 0, 1, v1);
}

uint64_t RelatedWorkoutFeature.dispose(localState:sharedState:)(uint64_t a1, _QWORD *a2)
{
  return nullsub_1(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a2[9], a2[10], a2[11], a2[12], a2[13], a2[14], a2[15], a2[16], a2[17]);
}

uint64_t sub_23C2D27E4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return nullsub_1(a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17]);
}

uint64_t sub_23C2D283C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B10);
  return sub_23C34E850() & 1;
}

void sub_23C2D2894()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2D28A4()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2D28B4()
{
  JUMPOUT(0x24261C66CLL);
}

uint64_t sub_23C2D28C4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2D28CC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2D2904(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23C2D297C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23C2D2A24(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_23C2D2A88(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2D2AD0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RelatedWorkoutFeature()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C2D2B28()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2D2B34(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23C2D2B4C(uint64_t a1)
{
  return sub_23C2D2B5C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23C2D2B5C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23C2D2B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C2D2B34(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_23C2D2BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C2D2B34(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23C2D2B5C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_23C2D2C24(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23C2D2B5C(v4, v5, v6);
  return a1;
}

uint64_t sub_23C2D2C68(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_23C2D2CB0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23C2D2CF4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23C2D2CFC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void sub_23C2D2D04()
{
  JUMPOUT(0x24261C66CLL);
}

uint64_t sub_23C2D2D14@<X0>(uint64_t *a1@<X8>)
{
  return sub_23C2D2EE0(a1);
}

uint64_t sub_23C2D2D30@<X0>(uint64_t a1@<X8>)
{
  return sub_23C2D2F34(a1);
}

uint64_t sub_23C2D2D44()
{
  return swift_bridgeObjectRetain();
}

void sub_23C2D2D4C()
{
  sub_23C34D7B8();
  __break(1u);
}

unint64_t sub_23C2D2D68()
{
  unint64_t result;

  result = qword_256B59AF8;
  if (!qword_256B59AF8)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_256B59AF8);
  }
  return result;
}

void sub_23C2D2DAC()
{
  sub_23C2D2D68();
  sub_23C34D8FC();
  __break(1u);
}

uint64_t sub_23C2D2DD0()
{
  return 8;
}

uint64_t sub_23C2D2DDC()
{
  return swift_release();
}

uint64_t sub_23C2D2DE4(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23C2D2DF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B10);
  return sub_23C34E844();
}

_QWORD *sub_23C2D2E38(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23C2D2E44()
{
  return sub_23C2D22A0();
}

unint64_t sub_23C2D2E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B59B08;
  if (!qword_256B59B08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59B00);
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256B59B08);
  }
  return result;
}

uint64_t sub_23C2D2EE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_23C2D2410(a1);
}

uint64_t sub_23C2D2F34@<X0>(uint64_t a1@<X8>)
{
  return sub_23C2D25FC(a1);
}

uint64_t sub_23C2D2F8C(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, _QWORD);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v36;
  void (*v37)(char *);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, __n128);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char v50[32];
  uint64_t v51;

  v37 = a1;
  v38 = a2;
  v44 = sub_23C34D824();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v36 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_23C34D830();
  v4 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v36 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B18);
  MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23C34D83C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B20);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v12;
  v39 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v39(v14, v2, v10, v16);
  sub_23C27FEE4(&qword_256B59B28, v11, MEMORY[0x24BDCC4C0]);
  v40 = v14;
  sub_23C34E8D4();
  v19 = &v18[*(int *)(v15 + 36)];
  v49 = v4;
  v45 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  while (1)
  {
    v21 = v46;
    v20 = v47;
    v45(v47, v19, v46);
    sub_23C27FEE4(&qword_256B59B30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4A8], MEMORY[0x24BDCC4C8]);
    v22 = v48;
    sub_23C34E9E8();
    sub_23C27FEE4(&qword_256B59B38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC498], MEMORY[0x24BDCC4A0]);
    v23 = sub_23C34E850();
    v24 = *(void (**)(char *, uint64_t))(v49 + 8);
    v24(v22, v21);
    v24(v20, v21);
    if ((v23 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v43, 1, 1, v44);
      return sub_23C285184((uint64_t)v18, &qword_256B59B20);
    }
    v25 = (void (*)(char *, _QWORD))sub_23C34EA24();
    v27 = v42;
    v26 = v43;
    v28 = v44;
    (*(void (**)(char *))(v42 + 16))(v43);
    v25(v50, 0);
    v29 = v40;
    ((void (*)(char *, char *, uint64_t))v39)(v40, v18, v10);
    sub_23C34E9F4();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v28) == 1)
      return sub_23C285184((uint64_t)v18, &qword_256B59B20);
    v30 = v19;
    v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v32 = v27;
    v33 = v36;
    v31(v36, v26, v28);
    v34 = v51;
    v37(v33);
    if (v34)
      break;
    v51 = 0;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v28);
    v19 = v30;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v28);
  return sub_23C285184((uint64_t)v18, &qword_256B59B20);
}

uint64_t AttributedString.workoutDetailTextView(highlightedTextColor:highlightedTextFont:textColor:textFont:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _BYTE v17[16];
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;
  uint64_t v26;

  v9 = sub_23C34D83C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23C34DF98();
  v24[0] = sub_23C34E340();
  v24[1] = v13;
  v25 = v14 & 1;
  v26 = v15;
  sub_23C34D848();
  v18 = v24;
  v19 = v4;
  v20 = a1;
  v21 = a3;
  v22 = a2;
  v23 = a4;
  sub_23C2D2F8C((void (*)(char *))sub_23C2D383C, (uint64_t)v17);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  return v24[0];
}

uint64_t sub_23C2D349C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _QWORD v49[2];
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;

  v60 = a7;
  v58 = a5;
  v59 = a6;
  v56 = a3;
  v57 = a4;
  v8 = sub_23C34D8E4();
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B40);
  MEMORY[0x24BDAC7A8](v53);
  v11 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23C34D86C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B48);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23C2899C8();
  sub_23C34D80C();
  swift_release();
  swift_getKeyPath();
  sub_23C2898C8();
  sub_23C34D908();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  LOBYTE(v13) = v62;
  v55 = a2;
  v17 = *(_QWORD *)a2;
  v51 = *(_QWORD *)(a2 + 8);
  v52 = v17;
  v50 = *(unsigned __int8 *)(a2 + 16);
  v49[1] = *(_QWORD *)(a2 + 24);
  sub_23C289550(v17, v51, v50);
  swift_bridgeObjectRetain();
  sub_23C34D818();
  sub_23C2D3860();
  sub_23C34D884();
  sub_23C285184((uint64_t)v11, &qword_256B59B40);
  sub_23C34D890();
  v18 = sub_23C34E34C();
  v20 = v19;
  v22 = v21 & 1;
  v23 = (v13 & 1) == 0;
  if ((v13 & 1) != 0)
    v24 = v57;
  else
    v24 = v58;
  v61 = v24;
  v25 = v60;
  if (!v23)
    v25 = v59;
  v60 = v25;
  swift_retain();
  v26 = sub_23C34E304();
  v28 = v27;
  v30 = v29 & 1;
  sub_23C289340(v18, v20, v22);
  swift_release();
  swift_bridgeObjectRelease();
  v31 = sub_23C34E334();
  v33 = v32;
  v35 = v34 & 1;
  sub_23C289340(v26, v28, v30);
  swift_bridgeObjectRelease();
  v36 = v51;
  v37 = v52;
  v38 = v50;
  v39 = sub_23C34E31C();
  v58 = v40;
  v59 = v39;
  LOBYTE(v26) = v41;
  v60 = v42;
  sub_23C289340(v31, v33, v35);
  swift_bridgeObjectRelease();
  sub_23C289340(v37, v36, v38);
  swift_bridgeObjectRelease();
  v43 = v55;
  v44 = *(_QWORD *)v55;
  v45 = *(_QWORD *)(v55 + 8);
  v46 = *(_BYTE *)(v55 + 16);
  v47 = v58;
  *(_QWORD *)v55 = v59;
  *(_QWORD *)(v43 + 8) = v47;
  *(_BYTE *)(v43 + 16) = v26 & 1;
  *(_QWORD *)(v43 + 24) = v60;
  sub_23C289340(v44, v45, v46);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2D383C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23C2D349C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t sub_23C2D3860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B59B50;
  if (!qword_256B59B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59B40);
    result = MEMORY[0x24261C66C](MEMORY[0x24BEE1BC0], v1);
    atomic_store(result, (unint64_t *)&qword_256B59B50);
  }
  return result;
}

uint64_t RelatedWorkoutState.contentMargins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C34DC38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RelatedWorkoutState.densityFactor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 180);
  v5 = sub_23C34DBA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RelatedWorkoutState.dynamicTypeSize.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 184));
}

uint64_t RelatedWorkoutState.identifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 188));
  swift_bridgeObjectRetain();
  return v2;
}

void RelatedWorkoutState.loadState.getter()
{
  type metadata accessor for RelatedWorkoutLoadState();
}

uint64_t sub_23C2D39CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void RelatedWorkoutState.loadState.setter()
{
  type metadata accessor for RelatedWorkoutLoadState();
}

uint64_t sub_23C2D3A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 40))(v2, v1, a1);
}

uint64_t (*RelatedWorkoutState.loadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t RelatedWorkoutState.locale.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 196);
  v5 = sub_23C34DA34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t RelatedWorkoutState.sizeClass.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 72) - 8) + 16))(a2, v2 + *(int *)(a1 + 200));
}

void RelatedWorkoutState.init(identifier:contentMargins:densityFactor:dynamicTypeSize:loadState:locale:sizeClass:)()
{
  type metadata accessor for RelatedWorkoutState();
}

void sub_23C2D3BD4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24)
{
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = (_QWORD *)(v25 + a1[47]);
  *v27 = v24;
  v27[1] = a9;
  v28 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, a21, v28);
  v29 = v25 + a1[45];
  v30 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a22, v30);
  *(_BYTE *)(v25 + a1[46]) = a24;
  type metadata accessor for RelatedWorkoutLoadState();
}

uint64_t sub_23C2D3CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v8, a1);
  v4 = v2 + *(int *)(v3 + 196);
  v5 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, v9, v5);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v2 + *(int *)(v3 + 200));
}

void type metadata accessor for RelatedWorkoutState()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C2D3D28(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x46797469736E6564 && a2 == 0xED0000726F746361 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73616C43657A6973 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23C2D4030(char a1)
{
  return *(_QWORD *)&aContentmdensit[8 * a1];
}

BOOL sub_23C2D4050(char *a1, char *a2)
{
  return sub_23C2CA8D8(*a1, *a2);
}

uint64_t sub_23C2D40A8()
{
  return sub_23C2CAAD0();
}

uint64_t sub_23C2D4104()
{
  return sub_23C2CA8E8();
}

uint64_t sub_23C2D4150()
{
  sub_23C34EC7C();
  sub_23C2CA8E8();
  return sub_23C34ECAC();
}

uint64_t sub_23C2D41BC()
{
  char *v0;

  return sub_23C2D4030(*v0);
}

uint64_t sub_23C2D4218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2D3D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2D4274@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C2D6A44();
  *a1 = result;
  return result;
}

uint64_t sub_23C2D42D4(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355B20, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C2D4308(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C355B20, a1);
  return sub_23C34ECDC();
}

void RelatedWorkoutState.encode(to:)()
{
  type metadata accessor for RelatedWorkoutState.CodingKeys();
}

uint64_t sub_23C2D4470(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  MEMORY[0x24261C66C](&unk_23C355B20, a1);
  v4 = sub_23C34EC4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = *(_QWORD *)(v3 - 264);
  sub_23C34ECC4();
  *(_BYTE *)(v3 - 248) = 0;
  sub_23C34DC38();
  sub_23C27FEE4(&qword_256B59B58, (uint64_t (*)(uint64_t))MEMORY[0x24BE34B98], MEMORY[0x24BE34BA8]);
  v9 = *(_QWORD *)(v3 - 72);
  sub_23C34EC40();
  if (!v9)
  {
    *(_BYTE *)(v3 - 248) = 1;
    sub_23C34DBA8();
    sub_23C27FEE4(&qword_256B59B60, (uint64_t (*)(uint64_t))MEMORY[0x24BE349D8], MEMORY[0x24BE349E8]);
    sub_23C34EC40();
    *(_BYTE *)(v3 - 248) = *(_BYTE *)(v8 + *(int *)(v2 + 184));
    *(_BYTE *)(v3 - 249) = 2;
    sub_23C2D4820();
    sub_23C34EC40();
    *(_BYTE *)(v3 - 248) = 3;
    sub_23C34EC10();
    *(_BYTE *)(v3 - 249) = 4;
    v11 = *(_QWORD *)(v3 - 280);
    *(_QWORD *)(v3 - 248) = *(_QWORD *)(v3 - 272);
    *(_QWORD *)(v3 - 240) = v11;
    v12 = *(_QWORD *)(v3 - 296);
    *(_QWORD *)(v3 - 232) = *(_QWORD *)(v3 - 288);
    *(_QWORD *)(v3 - 224) = v12;
    v13 = *(_QWORD *)(v3 - 312);
    *(_QWORD *)(v3 - 216) = *(_QWORD *)(v3 - 304);
    *(_QWORD *)(v3 - 208) = v13;
    v14 = *(_QWORD *)(v3 - 328);
    *(_QWORD *)(v3 - 200) = *(_QWORD *)(v3 - 320);
    *(_QWORD *)(v3 - 192) = v14;
    v15 = *(_QWORD *)(v3 - 344);
    *(_QWORD *)(v3 - 184) = *(_QWORD *)(v3 - 336);
    *(_QWORD *)(v3 - 176) = v15;
    v16 = *(_QWORD *)(v3 - 360);
    *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 352);
    *(_QWORD *)(v3 - 160) = v16;
    v17 = *(_QWORD *)(v3 - 376);
    *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 368);
    *(_QWORD *)(v3 - 144) = v17;
    v18 = *(_QWORD *)(v3 - 392);
    *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 384);
    *(_QWORD *)(v3 - 128) = v18;
    v19 = v3 - 248;
    v20 = *(_QWORD *)(v3 - 408);
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v3 - 400);
    *(_QWORD *)(v19 + 136) = v20;
    type metadata accessor for RelatedWorkoutLoadState();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void type metadata accessor for RelatedWorkoutState.CodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

unint64_t sub_23C2D4820()
{
  unint64_t result;

  result = qword_256B59B68;
  if (!qword_256B59B68)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BE34C18], MEMORY[0x24BE34C10]);
    atomic_store(result, (unint64_t *)&qword_256B59B68);
  }
  return result;
}

void RelatedWorkoutState.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[6];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v68 = a8;
  v49 = a7;
  v48 = a6;
  v43 = a5;
  v34 = a4;
  v42 = a3;
  v33 = a2;
  v37 = a1;
  v28[2] = a9;
  v32 = a22;
  v36 = a21;
  v41 = a20;
  v40 = a18;
  v35 = a17;
  v39 = a16;
  v38 = a15;
  v30 = a14;
  v46 = a13;
  v45 = a12;
  v47 = a10;
  v44 = a11;
  v28[1] = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v28[3] = (char *)v28 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23C34DA34();
  v28[5] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28[4] = (char *)v28 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a2;
  v51 = a3;
  v52 = a4;
  v53 = a5;
  v54 = v48;
  v55 = v49;
  v56 = v68;
  v57 = a11;
  v58 = a12;
  v59 = a13;
  v60 = v30;
  v61 = v38;
  v62 = v39;
  v63 = a17;
  v64 = v40;
  v65 = a19;
  v31 = a19;
  v66 = v41;
  v67 = v32;
  type metadata accessor for RelatedWorkoutLoadState();
}

void sub_23C2D4A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  *(_QWORD *)(v16 - 464) = a1;
  *(_QWORD *)(v16 - 520) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v16 - 472) = (char *)&a9 - v17;
  v18 = sub_23C34DBA8();
  *(_QWORD *)(v16 - 504) = v18;
  *(_QWORD *)(v16 - 512) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v16 - 480) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23C34DC38();
  *(_QWORD *)(v16 - 440) = v20;
  *(_QWORD *)(v16 - 496) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v16 - 456) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v16 - 320);
  *(_QWORD *)(v16 - 248) = *(_QWORD *)(v16 - 400);
  *(_QWORD *)(v16 - 240) = v22;
  v23 = *(_QWORD *)(v16 - 312);
  *(_QWORD *)(v16 - 232) = *(_QWORD *)(v16 - 392);
  *(_QWORD *)(v16 - 224) = v23;
  v24 = *(_QWORD *)(v16 - 264);
  *(_QWORD *)(v16 - 216) = *(_QWORD *)(v16 - 272);
  *(_QWORD *)(v16 - 208) = v24;
  v25 = *(_QWORD *)(v16 - 280);
  *(_QWORD *)(v16 - 200) = *(_QWORD *)(v16 - 72);
  *(_QWORD *)(v16 - 192) = v25;
  v26 = *(_QWORD *)(v16 - 296);
  *(_QWORD *)(v16 - 184) = *(_QWORD *)(v16 - 304);
  *(_QWORD *)(v16 - 176) = v26;
  *(_QWORD *)(v16 - 168) = *(_QWORD *)(v16 - 288);
  *(_QWORD *)(v16 - 160) = v10;
  *(_QWORD *)(v16 - 152) = v9;
  *(_QWORD *)(v16 - 144) = v11;
  *(_QWORD *)(v16 - 136) = *(_QWORD *)(v16 - 384);
  *(_QWORD *)(v16 - 128) = v12;
  v27 = (_QWORD *)(v16 - 248);
  v27[16] = v15;
  v27[17] = v14;
  v27[18] = *(_QWORD *)(v16 - 368);
  v27[19] = v13;
  type metadata accessor for RelatedWorkoutState.CodingKeys();
}

void sub_23C2D4BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v8 - 408) = MEMORY[0x24261C66C](&unk_23C355B20, a1);
  v9 = sub_23C34EBC8();
  *(_QWORD *)(v8 - 448) = v9;
  *(_QWORD *)(v8 - 488) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 248) = v3;
  *(_QWORD *)(v8 - 240) = v10;
  v11 = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 232) = v6;
  *(_QWORD *)(v8 - 224) = v11;
  v12 = *(_QWORD *)(v8 - 264);
  *(_QWORD *)(v8 - 216) = *(_QWORD *)(v8 - 272);
  *(_QWORD *)(v8 - 208) = v12;
  v13 = *(_QWORD *)(v8 - 280);
  *(_QWORD *)(v8 - 200) = *(_QWORD *)(v8 - 72);
  *(_QWORD *)(v8 - 192) = v13;
  v14 = *(_QWORD *)(v8 - 296);
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v8 - 304);
  *(_QWORD *)(v8 - 176) = v14;
  *(_QWORD *)(v8 - 168) = *(_QWORD *)(v8 - 288);
  *(_QWORD *)(v8 - 160) = v2;
  v15 = *(_QWORD *)(v8 - 344);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v8 - 352);
  *(_QWORD *)(v8 - 144) = v15;
  v16 = *(_QWORD *)(v8 - 336);
  *(_QWORD *)(v8 - 136) = v4;
  *(_QWORD *)(v8 - 128) = v16;
  v17 = *(_QWORD *)(v8 - 328);
  v5[16] = *(_QWORD *)(v8 - 424);
  v5[17] = v17;
  v5[18] = v1;
  v5[19] = v7;
  type metadata accessor for RelatedWorkoutState();
}

uint64_t sub_23C2D4D00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v27 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 72) = v2;
  v8 = *(_QWORD *)(v3 - 376);
  sub_23C34ECB8();
  if (v8)
    return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 360));
  v9 = *(_QWORD *)(v3 - 480);
  *(_QWORD *)(v3 - 288) = v5;
  v10 = *(_QWORD *)(v3 - 472);
  v11 = *(_QWORD *)(v3 - 488);
  *(_QWORD *)(v3 - 264) = v7;
  *(_QWORD *)(v3 - 272) = a1;
  v12 = *(_QWORD *)(v3 - 464);
  *(_BYTE *)(v3 - 248) = 0;
  sub_23C27FEE4(&qword_256B59B70, (uint64_t (*)(uint64_t))MEMORY[0x24BE34B98], MEMORY[0x24BE34BB8]);
  v13 = *(_QWORD *)(v3 - 456);
  v14 = *(_QWORD *)(v3 - 440);
  sub_23C34EBB0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 496) + 32))(*(_QWORD *)(v3 - 264), v13, v14);
  *(_BYTE *)(v3 - 248) = 1;
  sub_23C27FEE4(&qword_256B59B78, (uint64_t (*)(uint64_t))MEMORY[0x24BE349D8], MEMORY[0x24BE349F0]);
  v15 = *(_QWORD *)(v3 - 504);
  sub_23C34EBB0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 512) + 32))(*(_QWORD *)(v3 - 264) + *(int *)(*(_QWORD *)(v3 - 272) + 180), v9, v15);
  *(_BYTE *)(v3 - 249) = 2;
  sub_23C2D5338();
  sub_23C34EBB0();
  *(_BYTE *)(*(_QWORD *)(v3 - 264) + *(int *)(*(_QWORD *)(v3 - 272) + 184)) = *(_BYTE *)(v3 - 248);
  *(_BYTE *)(v3 - 248) = 3;
  v17 = sub_23C34EB80();
  v18 = (uint64_t *)(*(_QWORD *)(v3 - 264) + *(int *)(*(_QWORD *)(v3 - 272) + 188));
  *v18 = v17;
  v18[1] = v19;
  *(_BYTE *)(v3 - 248) = 4;
  MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutLoadState<A, B, C, D, E, F, G, H>, v12);
  sub_23C34EBB0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 520) + 32))(*(_QWORD *)(v3 - 264) + *(int *)(*(_QWORD *)(v3 - 272) + 192), v10, v12);
  *(_BYTE *)(v3 - 248) = 5;
  sub_23C27FEE4(&qword_256B57708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v20 = *(_QWORD *)(v3 - 544);
  v21 = *(_QWORD *)(v3 - 528);
  sub_23C34EBB0();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 536) + 32))(*(_QWORD *)(v3 - 264) + *(int *)(*(_QWORD *)(v3 - 272) + 196), v20, v21);
  *(_BYTE *)(v3 - 248) = 6;
  v22 = *(_QWORD *)(v3 - 280);
  v23 = *(_QWORD *)(v3 - 448);
  sub_23C34EBB0();
  (*(void (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v3 - 72), v23);
  v24 = *(_QWORD *)(v3 - 272);
  v25 = *(_QWORD *)(v3 - 264);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 568) + 32))(v25 + *(int *)(v24 + 200), *(_QWORD *)(v3 - 552), v22);
  v26 = *(_QWORD *)(v3 - 288);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v26 + 16))(*(_QWORD *)(v3 - 560), v25, v24);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 360));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v24);
}

unint64_t sub_23C2D5338()
{
  unint64_t result;

  result = qword_256B59B80[0];
  if (!qword_256B59B80[0])
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BE34C20], MEMORY[0x24BE34C10]);
    atomic_store(result, qword_256B59B80);
  }
  return result;
}

void sub_23C2D537C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  RelatedWorkoutState.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7], a2[8], a3, a2[9], a2[10], a2[11], a2[12], a2[13], a2[14], a2[15], a2[16], a2[17], a2[18],
    a2[19],
    a2[20],
    a2[21]);
}

void sub_23C2D53D8()
{
  RelatedWorkoutState.encode(to:)();
}

uint64_t static RelatedWorkoutState.== infix(_:_:)()
{
  if ((MEMORY[0x24261B310]() & 1) != 0)
    type metadata accessor for RelatedWorkoutState();
  return 0;
}

uint64_t sub_23C2D55D8()
{
  return static RelatedWorkoutState.== infix(_:_:)() & 1;
}

uint64_t sub_23C2D5628()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2D5630()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23C34DC38();
  if (v1 <= 0x3F)
  {
    result = sub_23C34DBA8();
    if (v2 <= 0x3F)
      type metadata accessor for RelatedWorkoutLoadState();
  }
  return result;
}

_QWORD *sub_23C2D5764(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *__dst;
  char *__src;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DC38();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 180);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34DBA8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 188);
    *((_BYTE *)a1 + *(int *)(a3 + 184)) = *((_BYTE *)a2 + *(int *)(a3 + 184));
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = *(int *)(a3 + 192);
    __src = (char *)a2 + v16;
    __dst = (char *)a1 + v16;
    swift_bridgeObjectRetain();
    v17 = sub_23C34DBF0();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(__src, 2, v17))
      type metadata accessor for RelatedWorkoutLoadState();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, __src, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 2, v17);
    v20 = *(int *)(a3 + 196);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23C34DA34();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(a3 + 72) - 8) + 16))((char *)a1 + *(int *)(a3 + 200), (char *)a2 + *(int *)(a3 + 200));
  }
  return a1;
}

uint64_t sub_23C2D5A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 180);
  v6 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 192);
  v8 = sub_23C34DBF0();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 2, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + *(int *)(a2 + 196);
  v11 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 72) - 8) + 8))(a1 + *(int *)(a2 + 200));
}

uint64_t sub_23C2D5B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *__dst;
  void *__src;

  v6 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 180);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 188);
  *(_BYTE *)(a1 + *(int *)(a3 + 184)) = *(_BYTE *)(a2 + *(int *)(a3 + 184));
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = *(int *)(a3 + 192);
  __src = (void *)(a2 + v15);
  __dst = (void *)(a1 + v15);
  swift_bridgeObjectRetain();
  v16 = sub_23C34DBF0();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(__src, 2, v16))
    type metadata accessor for RelatedWorkoutLoadState();
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(__dst, __src, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 2, v16);
  v18 = *(int *)(a3 + 196);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 72) - 8) + 16))(a1 + *(int *)(a3 + 200), a2 + *(int *)(a3 + 200));
  return a1;
}

uint64_t sub_23C2D5E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 180);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 184)) = *(_BYTE *)(a2 + *(int *)(a3 + 184));
  v11 = *(int *)(a3 + 188);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 192);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23C34DBF0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v20 = v15;
  LODWORD(v15) = v19(v15, 2, v17);
  v21 = v19(v16, 2, v17);
  if (!(_DWORD)v15)
  {
    if (!v21)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24))(v20, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
LABEL_6:
    type metadata accessor for RelatedWorkoutLoadState();
  }
  if (v21)
    goto LABEL_6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, v16, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v20, 0, 2, v17);
LABEL_7:
  v22 = *(int *)(a3 + 196);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 72) - 8) + 24))(a1 + *(int *)(a3 + 200), a2 + *(int *)(a3 + 200));
  return a1;
}

uint64_t sub_23C2D60CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 180);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 188);
  *(_BYTE *)(a1 + *(int *)(a3 + 184)) = *(_BYTE *)(a2 + *(int *)(a3 + 184));
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = *(int *)(a3 + 192);
  v21 = a1 + v12;
  v13 = a2 + v12;
  v14 = sub_23C34DBF0();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 2, v14))
    type metadata accessor for RelatedWorkoutLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v21, v13, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 2, v14);
  v16 = *(int *)(a3 + 196);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 72) - 8) + 32))(a1 + *(int *)(a3 + 200), a2 + *(int *)(a3 + 200));
  return a1;
}

uint64_t sub_23C2D6314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 180);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C34DBA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 188);
  *(_BYTE *)(a1 + *(int *)(a3 + 184)) = *(_BYTE *)(a2 + *(int *)(a3 + 184));
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = *(int *)(a3 + 192);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23C34DBF0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v22 = v17;
  LODWORD(v17) = v21(v17, 2, v19);
  v23 = v21(v18, 2, v19);
  if (!(_DWORD)v17)
  {
    if (!v23)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40))(v22, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
LABEL_6:
    type metadata accessor for RelatedWorkoutLoadState();
  }
  if (v23)
    goto LABEL_6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v22, v18, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v22, 0, 2, v19);
LABEL_7:
  v24 = *(int *)(a3 + 196);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 72) - 8) + 40))(a1 + *(int *)(a3 + 200), a2 + *(int *)(a3 + 200));
  return a1;
}

uint64_t sub_23C2D65C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2D65D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23C34DC38();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_23C34DBA8();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + *(int *)(a3 + 180), a2, v9);
  if ((_DWORD)a2 != 0x7FFFFFFF)
    type metadata accessor for RelatedWorkoutLoadState();
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 188) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23C2D6744()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2D6750(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v8 = sub_23C34DC38();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  result = sub_23C34DBA8();
  v11 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1 + *(int *)(a4 + 180), a2, a2, result);
  if (a3 != 0x7FFFFFFF)
    type metadata accessor for RelatedWorkoutLoadState();
  *(_QWORD *)(a1 + *(int *)(a4 + 188) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23C2D68C0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for ProgramDetailState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23C2D6958(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23C2D69A4 + 4 * byte_23C355935[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23C2D69D8 + 4 * byte_23C355930[v4]))();
}

uint64_t sub_23C2D69D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2D69E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2D69E8);
  return result;
}

uint64_t sub_23C2D69F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2D69FCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23C2D6A00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2D6A08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23C2D6A14()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2D6A24()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C2D6A34()
{
  JUMPOUT(0x24261C66CLL);
}

uint64_t sub_23C2D6A44()
{
  return 7;
}

uint64_t sub_23C2D6A4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000016;
  else
    return 0x4164694477656976;
}

uint64_t sub_23C2D6A94()
{
  char *v0;

  return sub_23C2D6A4C(*v0);
}

uint64_t sub_23C2D6A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2D7D2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2D6AC0()
{
  sub_23C2D6EDC();
  return sub_23C34ECD0();
}

uint64_t sub_23C2D6AE8()
{
  sub_23C2D6EDC();
  return sub_23C34ECDC();
}

uint64_t sub_23C2D6B10()
{
  sub_23C2D6F20();
  return sub_23C34ECD0();
}

uint64_t sub_23C2D6B38()
{
  sub_23C2D6F20();
  return sub_23C34ECDC();
}

uint64_t sub_23C2D6B60()
{
  sub_23C2D6F64();
  return sub_23C34ECD0();
}

uint64_t sub_23C2D6B88()
{
  sub_23C2D6F64();
  return sub_23C34ECDC();
}

uint64_t WorkoutScheduleAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59C88);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59C90);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WorkoutScheduleAction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59C98);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2D6EDC();
  sub_23C34ECC4();
  sub_23C2C9A68(v27, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v29 = 0;
    sub_23C2D6F64();
    sub_23C34EBD4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {
    v17 = v23;
    sub_23C281C88((uint64_t)v12, v23);
    v30 = 1;
    sub_23C2D6F20();
    v18 = v24;
    sub_23C34EBD4();
    type metadata accessor for WorkoutSchedule();
    sub_23C2D73E0(&qword_256B578C8, (uint64_t)&protocol conformance descriptor for WorkoutSchedule);
    v19 = v26;
    sub_23C34EC04();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_23C2C9F48(v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t type metadata accessor for WorkoutScheduleAction()
{
  uint64_t result;

  result = qword_256B59D40;
  if (!qword_256B59D40)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C2D6EDC()
{
  unint64_t result;

  result = qword_256B59CA0;
  if (!qword_256B59CA0)
  {
    result = MEMORY[0x24261C66C](&unk_23C355F34, &type metadata for WorkoutScheduleAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59CA0);
  }
  return result;
}

unint64_t sub_23C2D6F20()
{
  unint64_t result;

  result = qword_256B59CA8;
  if (!qword_256B59CA8)
  {
    result = MEMORY[0x24261C66C](&unk_23C355EE4, &type metadata for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59CA8);
  }
  return result;
}

unint64_t sub_23C2D6F64()
{
  unint64_t result;

  result = qword_256B59CB0;
  if (!qword_256B59CB0)
  {
    result = MEMORY[0x24261C66C](&unk_23C355E94, &type metadata for WorkoutScheduleAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59CB0);
  }
  return result;
}

uint64_t WorkoutScheduleAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;

  v38 = a1;
  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59CB8);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59CC0);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59CC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WorkoutScheduleAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2D6EDC();
  v18 = v37;
  sub_23C34ECB8();
  if (!v18)
  {
    v29 = v12;
    v19 = v35;
    v20 = v36;
    v37 = v9;
    v21 = sub_23C34EBBC();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      if ((*(_BYTE *)(v21 + 32) & 1) != 0)
      {
        v35 = (char *)v21;
        v40 = 1;
        sub_23C2D6F20();
        sub_23C34EB38();
        type metadata accessor for WorkoutSchedule();
        sub_23C2D73E0(&qword_256B578F0, (uint64_t)&protocol conformance descriptor for WorkoutSchedule);
        v26 = v32;
        sub_23C34EB74();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 0, 1, v27);
        sub_23C2D7420((uint64_t)v14, (uint64_t)v17);
      }
      else
      {
        v39 = 0;
        sub_23C2D6F64();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 1, 1, v28);
      }
      sub_23C2D7420((uint64_t)v17, v34);
    }
    else
    {
      v22 = sub_23C34EAC0();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
      *v24 = v29;
      sub_23C34EB44();
      sub_23C34EAB4();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_23C2D73E0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WorkoutSchedule();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2D7420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutScheduleAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2D7464@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutScheduleAction.init(from:)(a1, a2);
}

uint64_t sub_23C2D7478(_QWORD *a1)
{
  return WorkoutScheduleAction.encode(to:)(a1);
}

char *assignWithCopy for WorkoutScheduleAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for WorkoutSchedule();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          v19 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          v22 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(a1, a2, v22);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          return a1;
        }
        sub_23C2D7684((uint64_t)a1);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23C2C9F48((uint64_t)a1);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for WorkoutSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v20 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23C2D7684(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutSchedule();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *assignWithTake for WorkoutScheduleAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = type metadata accessor for WorkoutSchedule();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          v19 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          v22 = sub_23C34D9EC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(a1, a2, v22);
          *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
          return a1;
        }
        sub_23C2D7684((uint64_t)a1);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23C2C9F48((uint64_t)a1);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for WorkoutSchedule();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v20 = sub_23C34D9EC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
    *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2D78C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2D7920(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2D79C0 + 4 * byte_23C355BF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2D79F4 + 4 * byte_23C355BF0[v4]))();
}

uint64_t sub_23C2D79F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2D79FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2D7A04);
  return result;
}

uint64_t sub_23C2D7A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2D7A18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2D7A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2D7A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleAction.CodingKeys()
{
  return &type metadata for WorkoutScheduleAction.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutScheduleAction.ViewDidAppearCodingKeys()
{
  return &type metadata for WorkoutScheduleAction.ViewDidAppearCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C2D7A90 + 4 * byte_23C355BFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2D7AB0 + 4 * byte_23C355BFF[v4]))();
}

_BYTE *sub_23C2D7A90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2D7AB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2D7AB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2D7AC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2D7AC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2D7AD0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys()
{
  return &type metadata for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys;
}

unint64_t sub_23C2D7AF0()
{
  unint64_t result;

  result = qword_256B59D50;
  if (!qword_256B59D50)
  {
    result = MEMORY[0x24261C66C](&unk_23C355D64, &type metadata for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D50);
  }
  return result;
}

unint64_t sub_23C2D7B38()
{
  unint64_t result;

  result = qword_256B59D58;
  if (!qword_256B59D58)
  {
    result = MEMORY[0x24261C66C](&unk_23C355E6C, &type metadata for WorkoutScheduleAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D58);
  }
  return result;
}

unint64_t sub_23C2D7B80()
{
  unint64_t result;

  result = qword_256B59D60;
  if (!qword_256B59D60)
  {
    result = MEMORY[0x24261C66C](&unk_23C355D8C, &type metadata for WorkoutScheduleAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D60);
  }
  return result;
}

unint64_t sub_23C2D7BC8()
{
  unint64_t result;

  result = qword_256B59D68;
  if (!qword_256B59D68)
  {
    result = MEMORY[0x24261C66C](&unk_23C355DB4, &type metadata for WorkoutScheduleAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D68);
  }
  return result;
}

unint64_t sub_23C2D7C10()
{
  unint64_t result;

  result = qword_256B59D70;
  if (!qword_256B59D70)
  {
    result = MEMORY[0x24261C66C](&unk_23C355CD4, &type metadata for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D70);
  }
  return result;
}

unint64_t sub_23C2D7C58()
{
  unint64_t result;

  result = qword_256B59D78;
  if (!qword_256B59D78)
  {
    result = MEMORY[0x24261C66C](&unk_23C355CFC, &type metadata for WorkoutScheduleAction.FetchedWorkoutScheduleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D78);
  }
  return result;
}

unint64_t sub_23C2D7CA0()
{
  unint64_t result;

  result = qword_256B59D80;
  if (!qword_256B59D80)
  {
    result = MEMORY[0x24261C66C](&unk_23C355DDC, &type metadata for WorkoutScheduleAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59D80);
  }
  return result;
}

unint64_t sub_23C2D7CE8()
{
  unint64_t result;

  result = qword_256B59D88[0];
  if (!qword_256B59D88[0])
  {
    result = MEMORY[0x24261C66C](&unk_23C355E04, &type metadata for WorkoutScheduleAction.CodingKeys);
    atomic_store(result, qword_256B59D88);
  }
  return result;
}

uint64_t sub_23C2D7D2C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4164694477656976 && a2 == 0xED00007261657070;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023C361990)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C2D7E28(uint64_t a1)
{
  sub_23C34E934();
  return a1;
}

uint64_t sub_23C2D7E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23C34EA48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

void sub_23C2D7E8C()
{
  type metadata accessor for RelatedWorkoutFeature();
}

uint64_t sub_23C2D7F00(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutFeature<A, B, C, D, E, F, G, H>, a1);
  v1 = sub_23C34E7C0();
  MEMORY[0x24261C66C](MEMORY[0x24BE2B5E8], v1);
  return sub_23C34DD58();
}

void RelatedWorkoutView.init(store:artworkViewBuilder:contextMenuViewModifierBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  _QWORD *v26;

  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a7;
  v26[3] = a8;
  v26[4] = a9;
  v26[5] = a10;
  v26[6] = a11;
  v26[7] = a12;
  v26[8] = a13;
  v26[9] = a14;
  v26[10] = a15;
  v26[11] = a16;
  v26[12] = a17;
  v26[13] = a18;
  v26[14] = a19;
  v26[15] = a20;
  v26[16] = a21;
  v26[17] = a22;
  v26[18] = a23;
  v26[19] = a24;
  v26[20] = a25;
  v26[21] = a26;
  v26[22] = a1;
  v26[23] = a2;
  type metadata accessor for RelatedWorkoutFeature();
}

uint64_t sub_23C2D8094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x24261C66C](&protocol conformance descriptor for RelatedWorkoutFeature<A, B, C, D, E, F, G, H>, a1);
  v2 = sub_23C34E7C0();
  MEMORY[0x24261C66C](MEMORY[0x24BE2B5E8], v2);
  result = sub_23C34DD4C();
  *(_QWORD *)v1 = result;
  *(_QWORD *)(v1 + 8) = v4;
  *(_BYTE *)(v1 + 16) = v5 & 1;
  *(_QWORD *)(v1 + 24) = v6;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v8;
  *(_QWORD *)(v1 + 48) = v9;
  return result;
}

uint64_t sub_23C2D8130()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C2D8154()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t RelatedWorkoutView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  ValueMetadata *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  ValueMetadata *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  ValueMetadata *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 *v104;
  _QWORD v105[2];
  uint64_t v106;
  _QWORD v107[2];
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  ValueMetadata *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v67 = a2;
  v3 = a1[2];
  v4 = a1[3];
  v82 = a1[4];
  v83 = v3;
  v74 = a1[5];
  v5 = a1[7];
  v81 = a1[8];
  v6 = a1[9];
  v7 = a1[11];
  v78 = a1[10];
  v79 = v6;
  v8 = a1[12];
  v60 = (ValueMetadata *)a1[13];
  v61 = v8;
  v62 = a1[15];
  v77 = sub_23C2CF158();
  v9 = sub_23C2CF19C();
  v10 = sub_23C2CF1E0();
  v73 = a1[17];
  v63 = a1[21];
  *(_QWORD *)&v109 = v3;
  *((_QWORD *)&v109 + 1) = v4;
  v69 = v4;
  *(_QWORD *)&v110 = v74;
  *((_QWORD *)&v110 + 1) = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)&v111 = v5;
  v80 = v5;
  v71 = v7;
  *((_QWORD *)&v111 + 1) = v7;
  v112 = v8;
  v113 = v60;
  v114 = v62;
  v115 = v77;
  v116 = v9;
  v117 = v10;
  v118 = v73;
  v119 = v63;
  v11 = sub_23C34DB60();
  v70 = a1[14];
  v12 = a1[19];
  v76 = a1[18];
  v77 = v12;
  v75 = a1[20];
  v65 = MEMORY[0x24261C66C](MEMORY[0x24BE34890], v11);
  *(_QWORD *)&v109 = v3;
  *((_QWORD *)&v109 + 1) = MEMORY[0x24BDF5158];
  *(_QWORD *)&v110 = v4;
  *((_QWORD *)&v110 + 1) = v82;
  *(_QWORD *)&v111 = v74;
  *((_QWORD *)&v111 + 1) = MEMORY[0x24BDEC0B0];
  v112 = MEMORY[0x24BDF5158];
  v113 = &type metadata for RelatedWorkoutItemContext;
  v114 = v5;
  v115 = v81;
  v116 = MEMORY[0x24BDF5158];
  v117 = v79;
  v118 = v78;
  v119 = v7;
  v13 = MEMORY[0x24BDF5138];
  v120 = v11;
  v121 = MEMORY[0x24BDF5138];
  v122 = v70;
  v123 = MEMORY[0x24BDEC0A0];
  v124 = MEMORY[0x24BDF5138];
  v125 = v76;
  v126 = MEMORY[0x24BDF5138];
  v127 = v77;
  v128 = v75;
  v129 = v65;
  v68 = sub_23C34DC50();
  v72 = a1[6];
  v52 = a1[16];
  *(_QWORD *)&v109 = v3;
  v14 = v4;
  *((_QWORD *)&v109 + 1) = MEMORY[0x24BDF5158];
  *(_QWORD *)&v110 = v4;
  *((_QWORD *)&v110 + 1) = v82;
  v15 = v74;
  *(_QWORD *)&v111 = v74;
  *((_QWORD *)&v111 + 1) = v72;
  v112 = MEMORY[0x24BDF5158];
  v113 = &type metadata for RelatedWorkoutItemContext;
  v114 = v80;
  v115 = v81;
  v116 = MEMORY[0x24BDF5158];
  v117 = v79;
  v118 = v78;
  v16 = v70;
  v119 = v7;
  v120 = v11;
  v121 = v13;
  v122 = v70;
  v123 = v52;
  v124 = v13;
  v125 = v76;
  v126 = v13;
  v127 = v77;
  v17 = v75;
  v128 = v75;
  v129 = v65;
  v53 = sub_23C34DC50();
  v54 = sub_23C34EA48();
  v56 = sub_23C34E010();
  v18 = sub_23C34E58C();
  v19 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  v64 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v55 = (char *)&v52 - v20;
  v21 = sub_23C34DE30();
  v65 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v57 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v59 = (uint64_t)&v52 - v24;
  v25 = v66[1];
  v109 = *v66;
  v110 = v25;
  v111 = v66[2];
  v112 = *((_QWORD *)v66 + 6);
  v84 = v83;
  v85 = v14;
  v86 = v82;
  v87 = v15;
  v88 = v72;
  v89 = v80;
  v90 = v81;
  v91 = v79;
  v92 = v78;
  v93 = v7;
  v26 = v60;
  v27 = v61;
  v94 = v61;
  v95 = v60;
  v28 = v62;
  v96 = v16;
  v97 = v62;
  v29 = v52;
  v98 = v52;
  v99 = v73;
  v100 = v76;
  v101 = v77;
  v102 = v17;
  v30 = v63;
  v103 = v63;
  v104 = &v109;
  v31 = MEMORY[0x24BE34BD8];
  v32 = MEMORY[0x24261C66C](MEMORY[0x24BE34BD8], v68);
  v108 = MEMORY[0x24261C66C](v31, v53);
  v33 = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v54, &v108);
  v107[0] = v32;
  v107[1] = v33;
  v34 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v56, v107);
  v35 = v55;
  sub_23C34E580();
  v36 = swift_allocObject();
  v37 = v69;
  *(_QWORD *)(v36 + 16) = v83;
  *(_QWORD *)(v36 + 24) = v37;
  v38 = v74;
  *(_QWORD *)(v36 + 32) = v82;
  *(_QWORD *)(v36 + 40) = v38;
  v39 = v80;
  *(_QWORD *)(v36 + 48) = v72;
  *(_QWORD *)(v36 + 56) = v39;
  v40 = v79;
  *(_QWORD *)(v36 + 64) = v81;
  *(_QWORD *)(v36 + 72) = v40;
  v41 = v71;
  *(_QWORD *)(v36 + 80) = v78;
  *(_QWORD *)(v36 + 88) = v41;
  *(_QWORD *)(v36 + 96) = v27;
  *(_QWORD *)(v36 + 104) = v26;
  *(_QWORD *)(v36 + 112) = v70;
  *(_QWORD *)(v36 + 120) = v28;
  v42 = v73;
  *(_QWORD *)(v36 + 128) = v29;
  *(_QWORD *)(v36 + 136) = v42;
  v43 = v77;
  *(_QWORD *)(v36 + 144) = v76;
  *(_QWORD *)(v36 + 152) = v43;
  *(_QWORD *)(v36 + 160) = v75;
  *(_QWORD *)(v36 + 168) = v30;
  *(_QWORD *)(v36 + 224) = v112;
  v44 = v111;
  v45 = v109;
  *(_OWORD *)(v36 + 192) = v110;
  *(_OWORD *)(v36 + 208) = v44;
  *(_OWORD *)(v36 + 176) = v45;
  sub_23C2DB238((uint64_t)&v109);
  v106 = v34;
  v46 = v58;
  v47 = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v58, &v106);
  v48 = (uint64_t)v57;
  sub_23C34E4E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v46);
  v105[0] = v47;
  v105[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24261C66C](MEMORY[0x24BDED308], v21, v105);
  v49 = v59;
  sub_23C28958C(v48, v21, v59);
  v50 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v50(v48, v21);
  sub_23C287D30(v49, v21, v67);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v49, v21);
}

void sub_23C2D873C(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata *a3@<X2>, ValueMetadata *a4@<X3>, ValueMetadata *a5@<X4>, unint64_t a6@<X5>, ValueMetadata *a7@<X6>, ValueMetadata *a8@<X7>, uint64_t a9@<X8>, unint64_t a10, unint64_t a11, ValueMetadata *a12, ValueMetadata *a13, ValueMetadata *a14, ValueMetadata *a15, uint64_t a16, unint64_t a17, uint64_t a18, ValueMetadata *a19, ValueMetadata *a20,uint64_t a21,unint64_t a22)
{
  uint64_t v22;
  ValueMetadata *v23;
  ValueMetadata *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  ValueMetadata *v34;
  ValueMetadata *v35;
  unint64_t v36;
  ValueMetadata *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  ValueMetadata *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  ValueMetadata *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  ValueMetadata *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[11];
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  ValueMetadata *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  ValueMetadata *v103;
  uint64_t v104;
  uint64_t v105;
  ValueMetadata *v106;
  ValueMetadata *v107;
  unint64_t v108;
  ValueMetadata *v109;
  uint64_t v110;
  ValueMetadata *v111;
  ValueMetadata *v112;
  unint64_t v113;
  ValueMetadata *v114;
  ValueMetadata *v115;
  ValueMetadata *v116;
  ValueMetadata *v117;
  unint64_t v118;
  uint64_t v119;
  ValueMetadata *v120;
  ValueMetadata *v121;
  ValueMetadata *v122;
  ValueMetadata *v123;
  unint64_t v124;
  unint64_t v125;
  ValueMetadata *v126;
  ValueMetadata *v127;
  ValueMetadata *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  ValueMetadata *v134;
  ValueMetadata *v135;
  unint64_t v136;
  uint64_t v137;
  ValueMetadata *v138;
  uint64_t v139;
  ValueMetadata *v140;
  uint64_t v141;
  uint64_t v142;

  v115 = a8;
  v109 = a7;
  v110 = a2;
  v102 = a6;
  v117 = a5;
  v107 = a4;
  v111 = a3;
  v98 = a1;
  v82 = a9;
  v113 = a22;
  v100 = a21;
  v114 = a20;
  v116 = a19;
  v104 = a18;
  v101 = a17;
  v105 = a16;
  v103 = a15;
  v99 = a14;
  v112 = a13;
  v106 = a12;
  v108 = a11;
  v118 = a10;
  v96 = sub_23C2CF158();
  v95 = sub_23C2CF19C();
  v94 = sub_23C2CF1E0();
  v97 = sub_23C34DB60();
  v91 = MEMORY[0x24261C66C](MEMORY[0x24BE34890]);
  v22 = v110;
  v23 = v111;
  v119 = v110;
  v120 = (ValueMetadata *)MEMORY[0x24BDF5158];
  v121 = v111;
  v122 = v107;
  v123 = v117;
  v124 = v102;
  v125 = MEMORY[0x24BDF5158];
  v126 = &type metadata for RelatedWorkoutItemContext;
  v127 = v109;
  v24 = v109;
  v25 = (unint64_t)v115;
  v128 = v115;
  v129 = MEMORY[0x24BDF5158];
  v130 = a10;
  v131 = a11;
  v132 = (unint64_t)a12;
  v133 = v97;
  v134 = (ValueMetadata *)MEMORY[0x24BDF5138];
  v135 = a15;
  v136 = a17;
  v137 = MEMORY[0x24BDF5138];
  v138 = a19;
  v139 = MEMORY[0x24BDF5138];
  v140 = a20;
  v141 = a21;
  v142 = v91;
  v26 = sub_23C34DC50();
  v71[3] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v71[1] = (char *)v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v71[2] = (char *)v71 - v29;
  v93 = v30;
  v92 = sub_23C34EA48();
  v71[4] = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v71[6] = (char *)v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v71[5] = (char *)v71 - v33;
  v119 = v22;
  v120 = v23;
  v34 = v117;
  v121 = v117;
  v122 = &type metadata for RelatedWorkoutItemContext;
  v123 = v24;
  v124 = a10;
  v125 = v25;
  v126 = a12;
  v35 = v112;
  v36 = v113;
  v127 = v112;
  v37 = v99;
  v128 = v99;
  v129 = v105;
  v130 = v96;
  v131 = v95;
  v132 = v94;
  v133 = v104;
  v134 = a20;
  v135 = a19;
  v136 = v113;
  v38 = sub_23C34DBF0();
  v39 = *(_QWORD *)(v38 - 8);
  v83 = v38;
  v84 = v39;
  MEMORY[0x24BDAC7A8](v38);
  v81 = (char *)v71 - v40;
  v41 = sub_23C34DB30();
  v79 = *(_QWORD *)(v41 - 8);
  v80 = v41;
  MEMORY[0x24BDAC7A8](v41);
  v90 = (char *)v71 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v88 = (char *)v71 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_23C34DBA8();
  MEMORY[0x24BDAC7A8](v45);
  v87 = (char *)v71 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23C34DC38();
  MEMORY[0x24BDAC7A8](v47);
  v86 = (char *)v71 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23C34EA48();
  MEMORY[0x24BDAC7A8](v49);
  v85 = (char *)v71 - v50;
  v51 = v109;
  v52 = sub_23C34EA48();
  MEMORY[0x24BDAC7A8](v52);
  v75 = (char *)v71 - v53;
  v54 = v34;
  v55 = sub_23C34EA48();
  MEMORY[0x24BDAC7A8](v55);
  v74 = (char *)v71 - v56;
  v57 = v110;
  v58 = v111;
  v119 = v110;
  v120 = v111;
  v121 = a12;
  v122 = v35;
  v123 = v37;
  v124 = v36;
  v72 = sub_23C34DB24();
  MEMORY[0x24BDAC7A8](v72);
  v73 = (char *)v71 - v59;
  v60 = sub_23C34DA1C();
  v71[9] = *(_QWORD *)(v60 - 8);
  v71[10] = v60;
  MEMORY[0x24BDAC7A8](v60);
  v71[8] = (char *)v71 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = v57;
  v63 = (unint64_t)v115;
  v62 = v116;
  v120 = v115;
  v121 = v35;
  v122 = v116;
  v71[7] = sub_23C34DB48();
  v64 = sub_23C34EA48();
  MEMORY[0x24BDAC7A8](v64);
  v89 = (char *)v71 - v65;
  v119 = v57;
  v120 = (ValueMetadata *)MEMORY[0x24BDF5158];
  v121 = v58;
  v122 = v107;
  v123 = v54;
  v124 = MEMORY[0x24BDEC0B0];
  v125 = MEMORY[0x24BDF5158];
  v126 = &type metadata for RelatedWorkoutItemContext;
  v127 = v51;
  v128 = (ValueMetadata *)v63;
  v129 = MEMORY[0x24BDF5158];
  v130 = v118;
  v131 = v108;
  v132 = (unint64_t)a12;
  v133 = v97;
  v134 = (ValueMetadata *)MEMORY[0x24BDF5138];
  v135 = v103;
  v136 = MEMORY[0x24BDEC0A0];
  v137 = MEMORY[0x24BDF5138];
  v138 = v62;
  v139 = MEMORY[0x24BDF5138];
  v66 = v114;
  v140 = v114;
  v141 = v100;
  v142 = v91;
  v67 = sub_23C34DC50();
  v76 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v78 = (char *)v71 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v69);
  v77 = (char *)v71 - v70;
  v119 = v57;
  v120 = v58;
  v121 = v54;
  v122 = &type metadata for RelatedWorkoutItemContext;
  v123 = v51;
  v124 = v63;
  v125 = v118;
  v126 = a12;
  v127 = v112;
  v128 = v99;
  v129 = v105;
  v130 = v96;
  v131 = v95;
  v132 = v94;
  v133 = v104;
  v134 = v62;
  v135 = v66;
  v136 = v113;
  type metadata accessor for RelatedWorkoutLoadState();
}

void sub_23C2D8EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 + 184) = v10;
  *(_QWORD *)(v9 + 192) = (char *)&a9 - v17;
  v18 = sub_23C34E010();
  *(_QWORD *)(v9 + 176) = v18;
  *(_QWORD *)(v9 + 200) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v9 + 168) = (char *)&a9 - v19;
  v20 = *(_QWORD *)(v9 + 344);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)(v9 + 720) = *(_OWORD *)v20;
  *(_OWORD *)(v9 + 736) = v21;
  *(_OWORD *)(v9 + 752) = *(_OWORD *)(v20 + 32);
  *(_QWORD *)(v9 + 768) = *(_QWORD *)(v20 + 48);
  *(_QWORD *)(v9 + 784) = v11;
  *(_QWORD *)(v9 + 792) = v12;
  v22 = *(_QWORD *)(v9 + 424);
  *(_QWORD *)(v9 + 800) = *(_QWORD *)(v9 + 416);
  *(_QWORD *)(v9 + 808) = v14;
  v23 = *(_QWORD *)(v9 + 368);
  *(_QWORD *)(v9 + 816) = *(_QWORD *)(v9 + 376);
  *(_QWORD *)(v9 + 824) = v15;
  *(_QWORD *)(v9 + 832) = *(_QWORD *)(v9 + 480);
  *(_QWORD *)(v9 + 840) = *(_QWORD *)(v9 + 504);
  *(_QWORD *)(v9 + 848) = v22;
  v24 = *(_QWORD *)(v9 + 400);
  *(_QWORD *)(v9 + 856) = *(_QWORD *)(v9 + 408);
  v25 = *(_QWORD *)(v9 + 464);
  *(_QWORD *)(v9 + 864) = *(_QWORD *)(v9 + 456);
  *(_QWORD *)(v9 + 872) = v13;
  *(_QWORD *)(v9 + 880) = *(_QWORD *)(v9 + 384);
  *(_QWORD *)(v9 + 888) = v24;
  *(_QWORD *)(v9 + 896) = v23;
  *(_QWORD *)(v9 + 904) = v16;
  *(_QWORD *)(v9 + 912) = *(_QWORD *)(v9 + 488);
  *(_QWORD *)(v9 + 920) = *(_QWORD *)(v9 + 472);
  *(_QWORD *)(v9 + 928) = *(_QWORD *)(v9 + 360);
  *(_QWORD *)(v9 + 936) = v25;
  type metadata accessor for RelatedWorkoutView();
}

void sub_23C2D8FC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
  sub_23C2D7E8C();
}

uint64_t sub_23C2D8FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *TupleTypeMetadata;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)(v0 + 512) = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 456);
  *(_QWORD *)(v0 + 520) = *(_QWORD *)(v0 + 448);
  v10 = v1;
  v11 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 528) = v10;
  *(_QWORD *)(v0 + 536) = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 544) = v6;
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 432);
  *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 568) = *(_QWORD *)(v0 + 504);
  *(_QWORD *)(v0 + 576) = v5;
  *(_QWORD *)(v0 + 584) = *(_QWORD *)(v0 + 408);
  *(_QWORD *)(v0 + 592) = v9;
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 608) = v4;
  *(_QWORD *)(v0 + 616) = v7;
  *(_QWORD *)(v0 + 624) = v3;
  *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 392);
  *(_QWORD *)(v0 + 640) = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 648) = *(_QWORD *)(v0 + 472);
  *(_QWORD *)(v0 + 656) = v8;
  *(_QWORD *)(v0 + 664) = v2;
  swift_getKeyPath();
  sub_23C34E79C();
  v13 = *(_QWORD *)(v0 + 224);
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 56) - 8) + 56))(*(_QWORD *)(v0 + 264), 1, 1);
    sub_23C34EC58();
    swift_allocObject();
    v14 = sub_23C34E910();
    *(_QWORD *)(v0 + 216) = v15;
    *(_QWORD *)(v0 + 224) = v14;
    v16 = *(_QWORD *)(v0 + 64);
    sub_23C34DA10();
    v17 = sub_23C34D9F8();
    v19 = v18;
    v20 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v16, *(_QWORD *)(v0 + 80));
    *(_QWORD *)(v0 + 720) = v17;
    *(_QWORD *)(v0 + 728) = v19;
    *(_BYTE *)(v0 + 736) = 1;
    MEMORY[0x24BDAC7A8](v20);
    *(_QWORD *)(v0 + 784) = sub_23C34DC8C();
    *(_QWORD *)(v0 + 792) = *(_QWORD *)(v0 + 448);
    v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B58910);
    *(_QWORD *)(v0 + 800) = v21;
    *(_QWORD *)(v0 + 808) = v21;
    *(_QWORD *)(v0 + 816) = v21;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    v23 = *(_QWORD *)(v0 + 96);
    v24 = v23 + TupleTypeMetadata[16];
    v25 = v23 + TupleTypeMetadata[20];
    v26 = v23 + TupleTypeMetadata[24];
    sub_23C34DB6C();
    sub_23C34D7E8();
    v27 = sub_23C34D86C();
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v28(v24, 0, 1, v27);
    sub_23C34D7E8();
    v28(v25, 0, 1, v27);
    v28(v26, 1, 1, v27);
    sub_23C34DC80();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 496) - 8) + 56))(*(_QWORD *)(v0 + 104), 1, 1);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 432) - 8) + 56))(*(_QWORD *)(v0 + 112), 1, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E10);
    v29 = sub_23C34DB84();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_23C353A20;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v30 + 104))(v32 + v31, *MEMORY[0x24BE34960], v29);
    sub_23C2DB8D4(v32);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23C34DB54();
    sub_23C34E934();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 504) - 8) + 56))(*(_QWORD *)(v0 + 232), 1, 1);
    v33 = *(_QWORD *)(v0 + 344);
    v34 = *(_OWORD *)(v33 + 16);
    *(_OWORD *)(v0 + 784) = *(_OWORD *)v33;
    *(_OWORD *)(v0 + 800) = v34;
    *(_OWORD *)(v0 + 816) = *(_OWORD *)(v33 + 32);
    *(_QWORD *)(v0 + 832) = *(_QWORD *)(v33 + 48);
    sub_23C2D7E8C();
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 32))(*(_QWORD *)(v0 + 160), v11, v12);
  *(_QWORD *)(v0 + 784) = sub_23C34DBC0();
  v35 = sub_23C34E934();
  MEMORY[0x24261C66C](MEMORY[0x24BEE12E0], v35);
  v36 = sub_23C34EA18();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
    sub_23C34DBD8();
    *(_QWORD *)(v0 + 320) = sub_23C34DBC0();
    sub_23C34DBCC();
    sub_23C34DBE4();
    v39 = *(_QWORD *)(v0 + 344);
    v40 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)(v0 + 784) = *(_OWORD *)v39;
    *(_OWORD *)(v0 + 800) = v40;
    *(_OWORD *)(v0 + 816) = *(_OWORD *)(v39 + 32);
    *(_QWORD *)(v0 + 832) = *(_QWORD *)(v39 + 48);
    sub_23C2D7E8C();
  }
  v37 = *(_QWORD *)(v0 + 48);
  v38 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 24) + 56))(v37, 1, 1, v38);
  MEMORY[0x24261C66C](MEMORY[0x24BE34BD8], v38);
  v41 = *(_QWORD *)(v0 + 32);
  v42 = *(_QWORD *)(v0 + 40);
  v43 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v42, v37, v43);
  v44 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v44(v37, v43);
  v45 = MEMORY[0x24BE34BD8];
  *(_QWORD *)(v0 + 712) = MEMORY[0x24261C66C](MEMORY[0x24BE34BD8], *(_QWORD *)(v0 + 296));
  MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v43, v0 + 712);
  sub_23C287D30(v42, v43, v37);
  v46 = *(_QWORD *)(v0 + 184);
  MEMORY[0x24261C66C](v45, v46);
  v47 = *(_QWORD *)(v0 + 168);
  sub_23C328C04(v37, v46, v43);
  v44(v37, v43);
  v44(v42, v43);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 216));
  v48 = *(_QWORD *)(v0 + 176);
  v49 = MEMORY[0x24BE34BD8];
  v50 = MEMORY[0x24261C66C](MEMORY[0x24BE34BD8], v46);
  *(_QWORD *)(v0 + 704) = MEMORY[0x24261C66C](v49, *(_QWORD *)(v0 + 296));
  v51 = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v43, v0 + 704);
  *(_QWORD *)(v0 + 688) = v50;
  *(_QWORD *)(v0 + 696) = v51;
  MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v48, v0 + 688);
  sub_23C287D30(v47, v48, *(_QWORD *)(v0 + 208));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 200) + 8))(v47, v48);
}

void sub_23C2DA7AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C2D873C(*(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 16), *(ValueMetadata **)(v1 + 24), *(ValueMetadata **)(v1 + 32), *(ValueMetadata **)(v1 + 40), *(_QWORD *)(v1 + 48), *(ValueMetadata **)(v1 + 56), *(ValueMetadata **)(v1 + 64), a1, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(ValueMetadata **)(v1 + 88), *(ValueMetadata **)(v1 + 96), *(ValueMetadata **)(v1 + 104), *(ValueMetadata **)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(ValueMetadata **)(v1 + 144),
    *(ValueMetadata **)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168));
}

uint64_t sub_23C2DA804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = *(_QWORD *)(a7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(v12 + 40))(v9);
  sub_23C34DC74();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, a7);
}

void sub_23C2DA898()
{
  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  type metadata accessor for RelatedWorkoutAction();
}

void sub_23C2DAA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v6 - 392) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v6 - 144) = *(_OWORD *)v3;
  *(_OWORD *)(v6 - 128) = v7;
  *(_OWORD *)(v6 - 112) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v6 - 96) = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v6 - 304) = *(_QWORD *)(v6 - 448);
  *(_QWORD *)(v6 - 296) = *(_QWORD *)(v6 - 440);
  *(_QWORD *)(v6 - 288) = *(_QWORD *)(v6 - 376);
  *(_QWORD *)(v6 - 280) = *(_QWORD *)(v6 - 344);
  *(_QWORD *)(v6 - 272) = *(_QWORD *)(v6 - 360);
  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v6 - 320);
  *(_QWORD *)(v6 - 256) = v1;
  *(_QWORD *)(v6 - 248) = v2;
  *(_QWORD *)(v6 - 240) = *(_QWORD *)(v6 - 400);
  *(_QWORD *)(v6 - 232) = v5;
  v8 = *(_QWORD *)(v6 - 424);
  *(_QWORD *)(v6 - 224) = *(_QWORD *)(v6 - 432);
  *(_QWORD *)(v6 - 216) = v8;
  v9 = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v6 - 208) = *(_QWORD *)(v6 - 384);
  *(_QWORD *)(v6 - 200) = v9;
  *(_QWORD *)(v6 - 192) = *(_QWORD *)(v6 - 368);
  *(_QWORD *)(v6 - 184) = v4;
  v10 = *(_QWORD *)(v6 - 328);
  *(_QWORD *)(v6 - 176) = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 168) = v10;
  v11 = *(_QWORD *)(v6 - 312);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 352);
  *(_QWORD *)(v6 - 152) = v11;
  type metadata accessor for RelatedWorkoutView();
}

void sub_23C2DAB64()
{
  sub_23C2D7E8C();
}

uint64_t sub_23C2DAB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v3 = v2;
  *(_QWORD *)(v3 + 8) = v0;
  *(_BYTE *)(v3 + 16) = v4;
  swift_storeEnumTagMultiPayload();
  sub_23C2D2D44();
  sub_23C34E7A8();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 392) + 8))(v3, v1);
}

void sub_23C2DABE0()
{
  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  type metadata accessor for RelatedWorkoutAction();
}

void sub_23C2DAD74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x24BDAC7A8](a1);
  v9 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v8 - 144) = *(_OWORD *)v2;
  *(_OWORD *)(v8 - 128) = v9;
  *(_OWORD *)(v8 - 112) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v8 - 96) = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v8 - 304) = *(_QWORD *)(v8 - 424);
  *(_QWORD *)(v8 - 296) = *(_QWORD *)(v8 - 416);
  *(_QWORD *)(v8 - 288) = *(_QWORD *)(v8 - 376);
  *(_QWORD *)(v8 - 280) = v4;
  *(_QWORD *)(v8 - 272) = *(_QWORD *)(v8 - 360);
  *(_QWORD *)(v8 - 264) = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 256) = v1;
  *(_QWORD *)(v8 - 248) = v6;
  *(_QWORD *)(v8 - 240) = *(_QWORD *)(v8 - 392);
  *(_QWORD *)(v8 - 232) = v7;
  v10 = *(_QWORD *)(v8 - 400);
  *(_QWORD *)(v8 - 224) = *(_QWORD *)(v8 - 408);
  *(_QWORD *)(v8 - 216) = v10;
  *(_QWORD *)(v8 - 208) = *(_QWORD *)(v8 - 384);
  *(_QWORD *)(v8 - 200) = v5;
  *(_QWORD *)(v8 - 192) = *(_QWORD *)(v8 - 368);
  *(_QWORD *)(v8 - 184) = v3;
  v11 = *(_QWORD *)(v8 - 328);
  *(_QWORD *)(v8 - 176) = *(_QWORD *)(v8 - 336);
  *(_QWORD *)(v8 - 168) = v11;
  v12 = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(v8 - 352);
  *(_QWORD *)(v8 - 152) = v12;
  type metadata accessor for RelatedWorkoutView();
}

void sub_23C2DAE80()
{
  sub_23C2D7E8C();
}

uint64_t sub_23C2DAE88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = *(_QWORD *)(v3 - 344);
  swift_storeEnumTagMultiPayload();
  sub_23C34E7A8();
  swift_release();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23C2DAEE8()
{
  sub_23C2CF158();
  sub_23C2CF19C();
  sub_23C2CF1E0();
  type metadata accessor for RelatedWorkoutAction();
}

void sub_23C2DB070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  v9 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v8 - 144) = *(_OWORD *)v7;
  *(_OWORD *)(v8 - 128) = v9;
  *(_OWORD *)(v8 - 112) = *(_OWORD *)(v7 + 32);
  *(_QWORD *)(v8 - 96) = *(_QWORD *)(v7 + 48);
  *(_QWORD *)(v8 - 304) = v5;
  *(_QWORD *)(v8 - 296) = *(_QWORD *)(v8 - 416);
  *(_QWORD *)(v8 - 288) = *(_QWORD *)(v8 - 368);
  *(_QWORD *)(v8 - 280) = v1;
  *(_QWORD *)(v8 - 272) = *(_QWORD *)(v8 - 352);
  *(_QWORD *)(v8 - 264) = *(_QWORD *)(v8 - 328);
  *(_QWORD *)(v8 - 256) = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 248) = v2;
  v10 = *(_QWORD *)(v8 - 408);
  *(_QWORD *)(v8 - 240) = *(_QWORD *)(v8 - 384);
  *(_QWORD *)(v8 - 232) = v10;
  *(_QWORD *)(v8 - 224) = *(_QWORD *)(v8 - 400);
  *(_QWORD *)(v8 - 216) = v3;
  v11 = *(_QWORD *)(v8 - 392);
  *(_QWORD *)(v8 - 208) = *(_QWORD *)(v8 - 376);
  *(_QWORD *)(v8 - 200) = v11;
  *(_QWORD *)(v8 - 192) = *(_QWORD *)(v8 - 360);
  *(_QWORD *)(v8 - 184) = v4;
  v12 = *(_QWORD *)(v8 - 336);
  *(_QWORD *)(v8 - 176) = v6;
  *(_QWORD *)(v8 - 168) = v12;
  v13 = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 160) = *(_QWORD *)(v8 - 344);
  *(_QWORD *)(v8 - 152) = v13;
  type metadata accessor for RelatedWorkoutView();
}

void sub_23C2DB17C()
{
  sub_23C2D7E8C();
}

uint64_t sub_23C2DB184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_storeEnumTagMultiPayload();
  sub_23C34E7A8();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void sub_23C2DB1DC()
{
  sub_23C2DAEE8();
}

uint64_t sub_23C2DB238(uint64_t a1)
{
  sub_23C28801C();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2DB288()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2DB2E0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C2DB2E8()
{
  sub_23C287FCC();
  swift_release();
  return swift_release();
}

uint64_t sub_23C2DB320(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2DB39C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C28801C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C287FCC();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C2DB42C(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C287FCC();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_23C2DB490(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C2DB4D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RelatedWorkoutView()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C2DB530(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  ValueMetadata *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  ValueMetadata *v43;
  _BYTE v44[24];
  ValueMetadata *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[5];
  v25 = (ValueMetadata *)a1[2];
  v26 = a1[6];
  v5 = (ValueMetadata *)a1[11];
  v6 = a1[13];
  v30 = a1[12];
  v31 = a1[14];
  v7 = a1[15];
  v34 = a1[7];
  v35 = a1[16];
  v29 = a1[17];
  v8 = a1[19];
  v27 = a1[8];
  v28 = a1[18];
  v9 = sub_23C2CF158();
  v10 = sub_23C2CF19C();
  v11 = sub_23C2CF1E0();
  v40 = v2;
  v41 = v3;
  v43 = &type metadata for RelatedWorkoutItemContext;
  *(_QWORD *)v44 = v4;
  *(_OWORD *)&v44[8] = *(_OWORD *)(a1 + 9);
  v33 = *(_QWORD *)&v44[8];
  v45 = v5;
  v46 = v6;
  v47 = v9;
  v48 = v10;
  v49 = v11;
  v50 = v7;
  v51 = v8;
  v32 = *(_OWORD *)(a1 + 3);
  v12 = sub_23C34DB60();
  v13 = MEMORY[0x24261C66C](MEMORY[0x24BE34890], v12);
  v14 = MEMORY[0x24BDF5158];
  v15 = MEMORY[0x24BDF5138];
  v24 = sub_23C34DC50();
  v40 = v2;
  v41 = v14;
  v42 = v3;
  v43 = v25;
  *(_OWORD *)v44 = v32;
  *(_QWORD *)&v44[16] = v14;
  v45 = &type metadata for RelatedWorkoutItemContext;
  v46 = v4;
  v47 = v26;
  v48 = v14;
  v49 = v34;
  v50 = v27;
  v51 = v33;
  v52 = v12;
  v53 = v15;
  v54 = v30;
  v55 = v31;
  v56 = v15;
  v57 = v35;
  v58 = v15;
  v59 = v29;
  v60 = v28;
  v61 = v13;
  v16 = sub_23C34DC50();
  v17 = sub_23C34EA48();
  v18 = sub_23C34E010();
  v19 = sub_23C34E58C();
  v20 = sub_23C34DE30();
  v21 = MEMORY[0x24BE34BD8];
  v22 = MEMORY[0x24261C66C](MEMORY[0x24BE34BD8], v24);
  v39 = MEMORY[0x24261C66C](v21, v16);
  v38[0] = v22;
  v38[1] = MEMORY[0x24261C66C](MEMORY[0x24BDF5578], v17, &v39);
  v37 = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v18, v38);
  v36[0] = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v19, &v37);
  v36[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24261C66C](MEMORY[0x24BDED308], v20, v36);
}

uint64_t sub_23C2DB7FC()
{
  return swift_deallocObject();
}

uint64_t sub_23C2DB810(uint64_t a1)
{
  uint64_t *v1;

  return sub_23C2DA804(a1, (uint64_t)(v1 + 22), v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23C2DB85C()
{
  return swift_deallocObject();
}

uint64_t sub_23C2DB86C()
{
  return swift_deallocObject();
}

void sub_23C2DB888()
{
  sub_23C2DA898();
}

uint64_t sub_23C2DB8D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23C34DB84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E18);
    v10 = sub_23C34EA9C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23C2DBC08(&qword_256B59E20, MEMORY[0x24BE34980]);
      v14 = sub_23C34E82C();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23C2DBC08(&qword_256B59E28, MEMORY[0x24BE34988]);
          v20 = sub_23C34E850();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23C2DBB2C()
{
  return swift_deallocObject();
}

uint64_t sub_23C2DBB3C()
{
  return swift_deallocObject();
}

uint64_t sub_23C2DBB4C()
{
  return sub_23C34DC74();
}

uint64_t sub_23C2DBB60()
{
  return swift_deallocObject();
}

uint64_t sub_23C2DBB70()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  sub_23C287FCC();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C2DBBBC()
{
  sub_23C2DABE0();
}

uint64_t sub_23C2DBC08(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C34DB84();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2DBC48()
{
  uint64_t v0;

  v0 = sub_23C34DCE0();
  __swift_allocate_value_buffer(v0, qword_256B7FF10);
  __swift_project_value_buffer(v0, (uint64_t)qword_256B7FF10);
  return sub_23C34DCD4();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

ValueMetadata *type metadata accessor for NavigationBarMenuStyle()
{
  return &type metadata for NavigationBarMenuStyle;
}

uint64_t sub_23C2DBD30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2DBD40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_23C34E6E8();
  a2[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E48);
  return sub_23C2DBD84(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_23C2DBD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a1;
  v43 = a2;
  v42 = sub_23C34E070();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v31 - v4;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59340);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23C34E6D0();
  v7 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v36 = (uint64_t)&v31 - v14;
  sub_23C34E6E8();
  sub_23C34DD88();
  v15 = v44;
  v34 = v45;
  v16 = v47;
  v32 = v48;
  v33 = v46;
  v31 = v49;
  v17 = sub_23C34E538();
  KeyPath = swift_getKeyPath();
  sub_23C34E6B8();
  v19 = v35;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v6, v9, v35);
  *(_WORD *)&v6[*(int *)(v37 + 56)] = 256;
  sub_23C28950C((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 36)], &qword_256B59340);
  *(_QWORD *)v12 = v15;
  v12[8] = v34;
  *((_QWORD *)v12 + 2) = v33;
  v12[24] = v16;
  v20 = v31;
  *((_QWORD *)v12 + 4) = v32;
  *((_QWORD *)v12 + 5) = v20;
  *((_QWORD *)v12 + 6) = KeyPath;
  *((_QWORD *)v12 + 7) = v17;
  swift_retain();
  swift_retain();
  sub_23C285184((uint64_t)v6, &qword_256B59340);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  swift_release();
  swift_release();
  v21 = v36;
  sub_23C2DC27C((uint64_t)v12, v36);
  v22 = v38;
  sub_23C34E07C();
  sub_23C28950C(v21, (uint64_t)v12, &qword_256B59E50);
  v23 = v39;
  v24 = v40;
  v25 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v26 = v42;
  v25(v39, v22, v42);
  v27 = v43;
  sub_23C28950C((uint64_t)v12, v43, &qword_256B59E50);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E58);
  v25((char *)(v27 + *(int *)(v28 + 48)), v23, v26);
  v29 = *(void (**)(char *, uint64_t))(v24 + 8);
  v29(v22, v26);
  sub_23C285184(v21, &qword_256B59E50);
  v29(v23, v26);
  return sub_23C285184((uint64_t)v12, &qword_256B59E50);
}

uint64_t sub_23C2DC0C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E30);
  sub_23C34E088();
  sub_23C28943C(&qword_256B59E38, &qword_256B59E30, MEMORY[0x24BDF4750]);
  sub_23C2DC194();
  return sub_23C34E2A4();
}

uint64_t sub_23C2DC16C()
{
  return sub_23C34E094();
}

uint64_t sub_23C2DC18C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23C2DBD40(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23C2DC194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B59E40;
  if (!qword_256B59E40)
  {
    v1 = sub_23C34E088();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEFD48], v1);
    atomic_store(result, (unint64_t *)&qword_256B59E40);
  }
  return result;
}

uint64_t sub_23C2DC1DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DEC0();
  *a1 = result;
  return result;
}

uint64_t sub_23C2DC204@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DEC0();
  *a1 = result;
  return result;
}

uint64_t sub_23C2DC22C()
{
  swift_retain();
  return sub_23C34DECC();
}

uint64_t sub_23C2DC254()
{
  swift_retain();
  return sub_23C34DECC();
}

uint64_t sub_23C2DC27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2DC2C4()
{
  return sub_23C28943C(&qword_256B59E60, &qword_256B59E68, MEMORY[0x24BDF1A70]);
}

uint64_t WorkoutProgramArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57E18);
}

uint64_t WorkoutProgramArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutProgramArtwork();
  return sub_23C28950C(v1 + *(int *)(v3 + 20), a1, &qword_256B57E20);
}

uint64_t type metadata accessor for WorkoutProgramArtwork()
{
  uint64_t result;

  result = qword_256B59F00;
  if (!qword_256B59F00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutProgramArtwork.textColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutProgramArtwork() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutProgramArtwork.init(backgroundColor:templateURL:textColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  sub_23C2894C8(a1, a5, &qword_256B57E18);
  v9 = type metadata accessor for WorkoutProgramArtwork();
  result = sub_23C2894C8(a2, a5 + *(int *)(v9 + 20), &qword_256B57E20);
  v11 = (_QWORD *)(a5 + *(int *)(v9 + 24));
  *v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t sub_23C2DC440(char a1)
{
  return qword_23C3563C8[a1];
}

uint64_t sub_23C2DC460()
{
  char *v0;

  return sub_23C2DC440(*v0);
}

uint64_t sub_23C2DC468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2DE190(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2DC48C()
{
  sub_23C2DC694();
  return sub_23C34ECD0();
}

uint64_t sub_23C2DC4B4()
{
  sub_23C2DC694();
  return sub_23C34ECDC();
}

uint64_t WorkoutProgramArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2DC694();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34DA94();
  sub_23C27FEE4(&qword_256B58100, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C34EC04();
  if (!v1)
  {
    type metadata accessor for WorkoutProgramArtwork();
    v8[14] = 1;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC04();
    v8[13] = 2;
    sub_23C34EC10();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2DC694()
{
  unint64_t result;

  result = qword_256B59E78;
  if (!qword_256B59E78)
  {
    result = MEMORY[0x24261C66C](&unk_23C356374, &type metadata for WorkoutProgramArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59E78);
  }
  return result;
}

uint64_t WorkoutProgramArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;
  char v31;

  v25 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59E80);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WorkoutProgramArtwork();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23C2DC694();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v16 = v9;
  v17 = (uint64_t)v14;
  sub_23C34DA94();
  v31 = 0;
  sub_23C27FEE4(&qword_256B58118, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  v18 = (uint64_t)v26;
  v19 = v27;
  sub_23C34EB74();
  sub_23C2894C8(v18, v17, &qword_256B57E18);
  sub_23C34D950();
  v30 = 1;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EB74();
  sub_23C2894C8((uint64_t)v6, v17 + *(int *)(v12 + 20), &qword_256B57E20);
  v29 = 2;
  v20 = sub_23C34EB80();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v19);
  v23 = (uint64_t *)(v17 + *(int *)(v12 + 24));
  *v23 = v20;
  v23[1] = v22;
  sub_23C2DCA24(v17, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_23C2DCA68(v17);
}

uint64_t sub_23C2DCA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutProgramArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2DCA68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutProgramArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2DCAA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutProgramArtwork.init(from:)(a1, a2);
}

uint64_t sub_23C2DCAB8(_QWORD *a1)
{
  return WorkoutProgramArtwork.encode(to:)(a1);
}

uint64_t WorkoutProgramArtwork.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_23C34D950();
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v18 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34DA94();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C28950C(v1, (uint64_t)v13, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v14 = type metadata accessor for WorkoutProgramArtwork();
  sub_23C28950C(v1 + *(int *)(v14 + 20), (uint64_t)v6, &qword_256B57E20);
  v15 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v2) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v6, v2);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v2);
  }
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutProgramArtwork.hashValue.getter()
{
  sub_23C34EC7C();
  WorkoutProgramArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2DCDC4()
{
  sub_23C34EC7C();
  WorkoutProgramArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2DCE04()
{
  sub_23C34EC7C();
  WorkoutProgramArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail21WorkoutProgramArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = sub_23C34D950();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v55 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58200);
  MEMORY[0x24BDAC7A8](v58);
  v60 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t)&v54 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v64 = (uint64_t)&v54 - v11;
  v12 = sub_23C34DA94();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58208);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v54 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v54 - v25;
  v62 = a1;
  sub_23C28950C(a1, (uint64_t)&v54 - v25, &qword_256B57E18);
  v63 = a2;
  sub_23C28950C(a2, (uint64_t)v23, &qword_256B57E18);
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_23C28950C((uint64_t)v26, (uint64_t)v17, &qword_256B57E18);
  sub_23C28950C((uint64_t)v23, v27, &qword_256B57E18);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v28((uint64_t)v17, 1, v12) == 1)
  {
    sub_23C285184((uint64_t)v23, &qword_256B57E18);
    sub_23C285184((uint64_t)v26, &qword_256B57E18);
    if (v28(v27, 1, v12) == 1)
    {
      sub_23C285184((uint64_t)v17, &qword_256B57E18);
      goto LABEL_8;
    }
LABEL_6:
    v29 = &qword_256B58208;
    v30 = (uint64_t)v17;
LABEL_14:
    sub_23C285184(v30, v29);
    goto LABEL_15;
  }
  sub_23C28950C((uint64_t)v17, (uint64_t)v20, &qword_256B57E18);
  if (v28(v27, 1, v12) == 1)
  {
    sub_23C285184((uint64_t)v23, &qword_256B57E18);
    sub_23C285184((uint64_t)v26, &qword_256B57E18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    goto LABEL_6;
  }
  v31 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v57, v27, v12);
  sub_23C27FEE4(&qword_256B58218, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
  v32 = sub_23C34E850();
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v31, v12);
  sub_23C285184((uint64_t)v23, &qword_256B57E18);
  sub_23C285184((uint64_t)v26, &qword_256B57E18);
  v33(v20, v12);
  sub_23C285184((uint64_t)v17, &qword_256B57E18);
  if ((v32 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v34 = type metadata accessor for WorkoutProgramArtwork();
  v35 = v62;
  v36 = v64;
  sub_23C28950C(v62 + *(int *)(v34 + 20), v64, &qword_256B57E20);
  v37 = v63;
  v38 = v65;
  sub_23C28950C(v63 + *(int *)(v34 + 20), v65, &qword_256B57E20);
  v39 = v60;
  v40 = v60 + *(int *)(v58 + 48);
  sub_23C28950C(v36, v60, &qword_256B57E20);
  sub_23C28950C(v38, v40, &qword_256B57E20);
  v41 = v59;
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  v43 = v61;
  if (v42(v39, 1, v61) != 1)
  {
    v44 = v56;
    sub_23C28950C(v39, v56, &qword_256B57E20);
    if (v42(v40, 1, v43) == 1)
    {
      sub_23C285184(v65, &qword_256B57E20);
      sub_23C285184(v36, &qword_256B57E20);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v43);
      goto LABEL_13;
    }
    v47 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v55, v40, v43);
    sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
    v48 = sub_23C34E850();
    v49 = *(void (**)(char *, uint64_t))(v41 + 8);
    v49(v47, v43);
    sub_23C285184(v65, &qword_256B57E20);
    sub_23C285184(v64, &qword_256B57E20);
    v49((char *)v44, v43);
    sub_23C285184(v39, &qword_256B57E20);
    if ((v48 & 1) != 0)
      goto LABEL_18;
LABEL_15:
    v45 = 0;
    return v45 & 1;
  }
  sub_23C285184(v38, &qword_256B57E20);
  sub_23C285184(v36, &qword_256B57E20);
  if (v42(v40, 1, v43) != 1)
  {
LABEL_13:
    v29 = &qword_256B58200;
    v30 = v39;
    goto LABEL_14;
  }
  sub_23C285184(v39, &qword_256B57E20);
LABEL_18:
  v50 = *(int *)(v34 + 24);
  v51 = *(_QWORD *)(v35 + v50);
  v52 = *(_QWORD *)(v35 + v50 + 8);
  v53 = (_QWORD *)(v37 + v50);
  if (v51 == *v53 && v52 == v53[1])
    v45 = 1;
  else
    v45 = sub_23C34EC64();
  return v45 & 1;
}

uint64_t sub_23C2DD464()
{
  return sub_23C27FEE4(&qword_256B59E88, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
}

uint64_t sub_23C2DD490()
{
  return sub_23C27FEE4(&qword_256B59E90, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
}

uint64_t sub_23C2DD4BC()
{
  return sub_23C27FEE4(&qword_256B59E98, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
}

uint64_t sub_23C2DD4E8()
{
  return sub_23C27FEE4(&qword_256B59EA0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutDetailArtwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DA94();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23C34D950();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutDetailArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23C34DA94();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23C34D950();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WorkoutDetailArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C34D950();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for WorkoutDetailArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WorkoutDetailArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C34D950();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for WorkoutDetailArtwork(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23C34DA94();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C34D950();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutProgramArtwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2DDDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramArtwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2DDE90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_23C2DDF40()
{
  unint64_t v0;
  unint64_t v1;

  sub_23C2906B4(319, &qword_256B581B0, (void (*)(uint64_t))MEMORY[0x24BE34FA0]);
  if (v0 <= 0x3F)
  {
    sub_23C2906B4(319, qword_256B581B8, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2DE038 + 4 * byte_23C356155[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2DE06C + 4 * byte_23C356150[v4]))();
}

uint64_t sub_23C2DE06C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2DE074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2DE07CLL);
  return result;
}

uint64_t sub_23C2DE088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2DE090);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C2DE094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2DE09C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramArtwork.CodingKeys()
{
  return &type metadata for WorkoutProgramArtwork.CodingKeys;
}

unint64_t sub_23C2DE0BC()
{
  unint64_t result;

  result = qword_256B59F40;
  if (!qword_256B59F40)
  {
    result = MEMORY[0x24261C66C](&unk_23C35634C, &type metadata for WorkoutProgramArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F40);
  }
  return result;
}

unint64_t sub_23C2DE104()
{
  unint64_t result;

  result = qword_256B59F48;
  if (!qword_256B59F48)
  {
    result = MEMORY[0x24261C66C](&unk_23C3562BC, &type metadata for WorkoutProgramArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F48);
  }
  return result;
}

unint64_t sub_23C2DE14C()
{
  unint64_t result;

  result = qword_256B59F50;
  if (!qword_256B59F50)
  {
    result = MEMORY[0x24261C66C](&unk_23C3562E4, &type metadata for WorkoutProgramArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F50);
  }
  return result;
}

uint64_t sub_23C2DE190(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL WorkoutProgramCanvasPlaceholderReferenceType.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_23C34EB2C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_23C2DE34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0();
  v2 = v1;
  if (v0 == _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_23C34EC64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23C2DE3CC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23C34EB2C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_23C2DE41C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23C2DE440()
{
  sub_23C2DE6CC();
  return sub_23C34E8F8();
}

uint64_t sub_23C2DE49C()
{
  sub_23C2DE6CC();
  return sub_23C34E8EC();
}

uint64_t sub_23C2DE4E8()
{
  sub_23C34EC7C();
  _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t sub_23C2DE540()
{
  _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0();
  sub_23C34E8B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C2DE57C()
{
  sub_23C34EC7C();
  _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail44WorkoutProgramCanvasPlaceholderReferenceTypeO8rawValueSSvg_0()
{
  return 0x74756F6B726F77;
}

unint64_t sub_23C2DE5EC()
{
  unint64_t result;

  result = qword_256B59F58;
  if (!qword_256B59F58)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramCanvasPlaceholderReferenceType, &type metadata for WorkoutProgramCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B59F58);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramCanvasPlaceholderReferenceType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C2DE670 + 4 * byte_23C356400[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2DE690 + 4 * byte_23C356405[v4]))();
}

_BYTE *sub_23C2DE670(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2DE690(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2DE698(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2DE6A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2DE6A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2DE6B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramCanvasPlaceholderReferenceType()
{
  return &type metadata for WorkoutProgramCanvasPlaceholderReferenceType;
}

unint64_t sub_23C2DE6CC()
{
  unint64_t result;

  result = qword_256B59F60;
  if (!qword_256B59F60)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramCanvasPlaceholderReferenceType, &type metadata for WorkoutProgramCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B59F60);
  }
  return result;
}

uint64_t sub_23C2DE710(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C6F686563616C70;
  else
    return 1835365481;
}

uint64_t sub_23C2DE748()
{
  char *v0;

  return sub_23C2DE710(*v0);
}

uint64_t sub_23C2DE750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2E12EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2DE774()
{
  sub_23C2DEBD4();
  return sub_23C34ECD0();
}

uint64_t sub_23C2DE79C()
{
  sub_23C2DEBD4();
  return sub_23C34ECDC();
}

uint64_t sub_23C2DE7C4()
{
  sub_23C2DECA0();
  return sub_23C34ECD0();
}

uint64_t sub_23C2DE7EC()
{
  sub_23C2DECA0();
  return sub_23C34ECDC();
}

uint64_t sub_23C2DE814()
{
  sub_23C2DEC5C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2DE83C()
{
  sub_23C2DEC5C();
  return sub_23C34ECDC();
}

uint64_t LazyTrainerTip.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59F68);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59F70);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for TrainerTip();
  MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LazyTrainerTip();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59F78);
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2DEBD4();
  sub_23C34ECC4();
  sub_23C2DEC18(v34, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = *v11;
    v16 = v11[1];
    v18 = v11[2];
    v17 = v11[3];
    LOBYTE(v30) = 1;
    sub_23C2DEC5C();
    v19 = v26;
    sub_23C34EBD4();
    v30 = v15;
    v31 = v16;
    v32 = v18;
    v33 = v17;
    sub_23C285584();
    v20 = v28;
    sub_23C34EC40();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v12);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C2851C0((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
    LOBYTE(v30) = 0;
    sub_23C2DECA0();
    sub_23C34EBD4();
    sub_23C27FEE4(&qword_256B59F98, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTip, (uint64_t)&protocol conformance descriptor for TrainerTip);
    v22 = v25;
    sub_23C34EC40();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v22);
    sub_23C283550((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v12);
  }
}

uint64_t type metadata accessor for LazyTrainerTip()
{
  uint64_t result;

  result = qword_256B5A038;
  if (!qword_256B5A038)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C2DEBD4()
{
  unint64_t result;

  result = qword_256B59F80;
  if (!qword_256B59F80)
  {
    result = MEMORY[0x24261C66C](&unk_23C356930, &type metadata for LazyTrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F80);
  }
  return result;
}

uint64_t sub_23C2DEC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LazyTrainerTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C2DEC5C()
{
  unint64_t result;

  result = qword_256B59F88;
  if (!qword_256B59F88)
  {
    result = MEMORY[0x24261C66C](&unk_23C3568E0, &type metadata for LazyTrainerTip.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F88);
  }
  return result;
}

unint64_t sub_23C2DECA0()
{
  unint64_t result;

  result = qword_256B59F90;
  if (!qword_256B59F90)
  {
    result = MEMORY[0x24261C66C](&unk_23C356890, &type metadata for LazyTrainerTip.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B59F90);
  }
  return result;
}

uint64_t LazyTrainerTip.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v40 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59FA0);
  v44 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v47 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59FA8);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B59FB0);
  v45 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LazyTrainerTip();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v37 - v16;
  v18 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23C2DEBD4();
  v19 = v52;
  sub_23C34ECB8();
  if (v19)
    goto LABEL_10;
  v38 = v17;
  v39 = v14;
  v37 = v11;
  v21 = v46;
  v20 = v47;
  v52 = v9;
  v22 = sub_23C34EBBC();
  if (*(_QWORD *)(v22 + 16) != 1)
  {
    v29 = sub_23C34EAC0();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v31 = v52;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v6);
LABEL_10:
    v24 = (uint64_t)v48;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  if ((*(_BYTE *)(v22 + 32) & 1) != 0)
  {
    LOBYTE(v49) = 1;
    sub_23C2DEC5C();
    sub_23C34EB38();
    sub_23C2858E4();
    v23 = v41;
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v6);
    v24 = (uint64_t)v48;
    v25 = v50;
    v26 = v51;
    v27 = v37;
    *v37 = v49;
    *((_QWORD *)v27 + 2) = v25;
    *((_QWORD *)v27 + 3) = v26;
    swift_storeEnumTagMultiPayload();
    v28 = (uint64_t)v27;
  }
  else
  {
    LOBYTE(v49) = 0;
    sub_23C2DECA0();
    sub_23C34EB38();
    type metadata accessor for TrainerTip();
    v33 = v21;
    sub_23C27FEE4(&qword_256B59FB8, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTip, (uint64_t)&protocol conformance descriptor for TrainerTip);
    v34 = (uint64_t)v39;
    v35 = v43;
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v6);
    v24 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    v28 = v34;
  }
  v36 = (uint64_t)v38;
  sub_23C2851C0(v28, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
  sub_23C2851C0(v36, v40, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_23C2DF190@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LazyTrainerTip.init(from:)(a1, a2);
}

uint64_t sub_23C2DF1A4(_QWORD *a1)
{
  return LazyTrainerTip.encode(to:)(a1);
}

uint64_t LazyTrainerTip.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = type metadata accessor for TrainerTip();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LazyTrainerTip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C2DEC18(v0, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C34EC88();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_23C2851C0((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
    sub_23C34EC88();
    TrainerTip.hash(into:)();
    return sub_23C283550((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
  }
}

uint64_t LazyTrainerTip.hashValue.getter()
{
  sub_23C34EC7C();
  LazyTrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2DF350()
{
  sub_23C34EC7C();
  LazyTrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2DF390()
{
  sub_23C34EC7C();
  LazyTrainerTip.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail14LazyTrainerTipO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v26;
  char v27;
  uint64_t v29;

  v4 = type metadata accessor for TrainerTip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LazyTrainerTip();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0B8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v15[*(int *)(v16 + 48)];
  sub_23C2DEC18(a1, (uint64_t)v15);
  sub_23C2DEC18(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C2DEC18((uint64_t)v15, (uint64_t)v9);
    v19 = *v9;
    v18 = v9[1];
    v21 = v9[2];
    v20 = v9[3];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = *((_QWORD *)v17 + 2);
      v22 = *((_QWORD *)v17 + 3);
      v24 = v19 == *(_QWORD *)v17 && v18 == *((_QWORD *)v17 + 1);
      if (v24 || (sub_23C34EC64() & 1) != 0)
      {
        if (v21 == v23 && v20 == v22)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          v26 = sub_23C34EC64();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
            goto LABEL_24;
        }
        sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
        v27 = 1;
        return v27 & 1;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C2DEC18((uint64_t)v15, (uint64_t)v12);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23C2851C0((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
      v27 = static TrainerTip.== infix(_:_:)((uint64_t)v12, (uint64_t)v6);
      sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
      sub_23C283550((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
      sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
      return v27 & 1;
    }
    sub_23C283550((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTip);
  }
  sub_23C2E13D4((uint64_t)v15);
LABEL_18:
  v27 = 0;
  return v27 & 1;
}

uint64_t sub_23C2DF6B8()
{
  return sub_23C27FEE4(&qword_256B59FC0, (uint64_t (*)(uint64_t))type metadata accessor for LazyTrainerTip, (uint64_t)&protocol conformance descriptor for LazyTrainerTip);
}

_QWORD *initializeBufferWithCopyOfBuffer for LazyTrainerTip(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, int *);
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[2];
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v10 = (uint64_t *)&unk_256B58320;
      else
        v10 = (uint64_t *)&unk_256B58318;
      v11 = __swift_instantiateConcreteTypeFromMangledName(v10);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      v12 = (int *)type metadata accessor for TrainerTip();
      v13 = v12[5];
      v14 = (_QWORD *)((char *)a1 + v13);
      v15 = (_QWORD *)((char *)a2 + v13);
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      v17 = v12[6];
      v18 = (_QWORD *)((char *)a1 + v17);
      v19 = (_QWORD *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      *((_BYTE *)a1 + v12[7]) = *((_BYTE *)a2 + v12[7]);
      *((_BYTE *)a1 + v12[8]) = *((_BYTE *)a2 + v12[8]);
      v21 = v12[9];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = type metadata accessor for TrainerTipGalleryArtwork();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
      v27 = v23;
      v28 = (int *)v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26(v27, 1, v28))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
        memcpy(v22, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v71 = v25;
        v30 = sub_23C34DA94();
        v31 = *(_QWORD *)(v30 - 8);
        v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
        v70 = v30;
        v68 = v31;
        if (v69(v27, 1, v30))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          v33 = v22;
          memcpy(v22, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v33 = v22;
          (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v22, v27, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v22, 0, 1, v30);
        }
        *(_QWORD *)&v33[v28[5]] = *(_QWORD *)&v27[v28[5]];
        v34 = v28[6];
        v35 = &v33[v34];
        v72 = v27;
        v36 = &v27[v34];
        v37 = sub_23C34D950();
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        v40 = v28[7];
        v41 = &v33[v40];
        v42 = &v72[v40];
        v43 = v71;
        if (v69(&v72[v40], 1, v70))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v41, v42, v70);
          v43 = v71;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v41, 0, 1, v70);
        }
        *(_QWORD *)&v33[v28[8]] = *(_QWORD *)&v72[v28[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(v33, 0, 1, v28);
      }
      v45 = v12[10];
      v46 = (_QWORD *)((char *)a1 + v45);
      v47 = (_QWORD *)((char *)a2 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v12[11];
      v50 = (_QWORD *)((char *)a1 + v49);
      v51 = (_QWORD *)((char *)a2 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v12[12];
      v54 = (_QWORD *)((char *)a1 + v53);
      v55 = (_QWORD *)((char *)a2 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v12[13];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = sub_23C34D950();
      v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61(v58, v59, v60);
      v62 = v12[14];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = sub_23C34D86C();
      v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
      v66(v63, v64, v65);
      v66((char *)a1 + v12[15], (char *)a2 + v12[15], v65);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LazyTrainerTip(uint64_t a1)
{
  uint64_t *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v3 = (uint64_t *)&unk_256B58320;
    else
      v3 = (uint64_t *)&unk_256B58318;
    v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = (int *)type metadata accessor for TrainerTip();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = a1 + v5[9];
    v7 = type metadata accessor for TrainerTipGalleryArtwork();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      v8 = sub_23C34DA94();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v10(v6, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
      v11 = v6 + *(int *)(v7 + 24);
      v12 = sub_23C34D950();
      v13 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      v14 = v6 + *(int *)(v7 + 28);
      if (!v10(v14, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = a1 + v5[13];
    v16 = sub_23C34D950();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    v17 = a1 + v5[14];
    v18 = sub_23C34D86C();
    v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
    v19(v17, v18);
    return ((uint64_t (*)(uint64_t, uint64_t))v19)(a1 + v5[15], v18);
  }
}

_QWORD *initializeWithCopy for LazyTrainerTip(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, int *);
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    v5 = a2[2];
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v7 = (uint64_t *)&unk_256B58320;
    else
      v7 = (uint64_t *)&unk_256B58318;
    v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    v9 = (int *)type metadata accessor for TrainerTip();
    v10 = v9[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = v9[6];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
    *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    v18 = v9[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for TrainerTipGalleryArtwork();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, int *))(v22 + 48);
    v24 = v20;
    v25 = (int *)v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
      memcpy(v19, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v68 = v22;
      v27 = sub_23C34DA94();
      v28 = *(_QWORD *)(v27 - 8);
      v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      v67 = v27;
      v65 = v28;
      if (v66(v24, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        v30 = v19;
        memcpy(v19, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v30 = v19;
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v19, v24, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v19, 0, 1, v27);
      }
      *(_QWORD *)&v30[v25[5]] = *(_QWORD *)&v24[v25[5]];
      v31 = v25[6];
      v32 = &v30[v31];
      v69 = v24;
      v33 = &v24[v31];
      v34 = sub_23C34D950();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = v25[7];
      v38 = &v30[v37];
      v39 = &v69[v37];
      v40 = v68;
      if (v66(&v69[v37], 1, v67))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v38, v39, v67);
        v40 = v68;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v38, 0, 1, v67);
      }
      *(_QWORD *)&v30[v25[8]] = *(_QWORD *)&v69[v25[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56))(v30, 0, 1, v25);
    }
    v42 = v9[10];
    v43 = (_QWORD *)((char *)a1 + v42);
    v44 = (_QWORD *)((char *)a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = v9[11];
    v47 = (_QWORD *)((char *)a1 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    v50 = v9[12];
    v51 = (_QWORD *)((char *)a1 + v50);
    v52 = (_QWORD *)((char *)a2 + v50);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = v9[13];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = sub_23C34D950();
    v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58(v55, v56, v57);
    v59 = v9[14];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = sub_23C34D86C();
    v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
    v63(v60, v61, v62);
    v63((char *)a1 + v9[15], (char *)a2 + v9[15], v62);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for LazyTrainerTip(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, int *);
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;

  if (a1 != a2)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v4 = (uint64_t *)&unk_256B58320;
      else
        v4 = (uint64_t *)&unk_256B58318;
      v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
      v6 = (int *)type metadata accessor for TrainerTip();
      v7 = v6[5];
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (_QWORD *)((char *)a2 + v7);
      *v8 = *v9;
      v8[1] = v9[1];
      v10 = v6[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      *v11 = *v12;
      v11[1] = v12[1];
      *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      v13 = v6[9];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = type metadata accessor for TrainerTipGalleryArtwork();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
      v19 = v15;
      v20 = (int *)v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
        memcpy(v14, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v60 = v17;
        v22 = sub_23C34DA94();
        v23 = *(_QWORD *)(v22 - 8);
        v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        v59 = v22;
        v57 = v23;
        if (v58(v19, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          v25 = v14;
          memcpy(v14, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v25 = v14;
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v14, v19, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v22);
        }
        *(_QWORD *)&v25[v20[5]] = *(_QWORD *)&v19[v20[5]];
        v26 = v20[6];
        v27 = &v25[v26];
        v61 = v19;
        v28 = &v19[v26];
        v29 = sub_23C34D950();
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v32 = v20[7];
        v33 = &v25[v32];
        v34 = &v61[v32];
        v35 = v60;
        if (v58(&v61[v32], 1, v59))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v33, v34, v59);
          v35 = v60;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v33, 0, 1, v59);
        }
        *(_QWORD *)&v25[v20[8]] = *(_QWORD *)&v61[v20[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56))(v25, 0, 1, v20);
      }
      v37 = v6[10];
      v38 = (_QWORD *)((char *)a1 + v37);
      v39 = (_QWORD *)((char *)a2 + v37);
      *v38 = *v39;
      v38[1] = v39[1];
      v40 = v6[11];
      v41 = (_QWORD *)((char *)a1 + v40);
      v42 = (_QWORD *)((char *)a2 + v40);
      *v41 = *v42;
      v41[1] = v42[1];
      v43 = v6[12];
      v44 = (_QWORD *)((char *)a1 + v43);
      v45 = (_QWORD *)((char *)a2 + v43);
      *v44 = *v45;
      v44[1] = v45[1];
      v46 = v6[13];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_23C34D950();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      v51 = v6[14];
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = sub_23C34D86C();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      v55(v52, v53, v54);
      v55((char *)a1 + v6[15], (char *)a2 + v6[15], v54);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for LazyTrainerTip(char *a1, char *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *__dst;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B58320;
    else
      v6 = (uint64_t *)&unk_256B58318;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
    v8 = (int *)type metadata accessor for TrainerTip();
    *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
    *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
    a1[v8[7]] = a2[v8[7]];
    a1[v8[8]] = a2[v8[8]];
    v9 = v8[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
    v13 = *((_QWORD *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = sub_23C34DA94();
      v16 = *(_QWORD *)(v15 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v39 = v15;
      v40 = v13;
      v37 = v16;
      if (v38(v11, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v10, v11, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      }
      *(_QWORD *)&v10[v12[5]] = *(_QWORD *)&v11[v12[5]];
      v18 = v12[6];
      __dst = &v10[v18];
      v19 = &v11[v18];
      v20 = sub_23C34D950();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      v23 = v12[7];
      v24 = &v10[v23];
      v25 = &v11[v23];
      if (v38(&v11[v23], 1, v39))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v24, v25, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v24, 0, 1, v39);
      }
      *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
    *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
    *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
    v27 = v8[13];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v31 = v8[14];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = sub_23C34D86C();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
    v35(v32, v33, v34);
    v35(&a1[v8[15]], &a2[v8[15]], v34);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for LazyTrainerTip(char *a1, char *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *__dst;

  if (a1 != a2)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for LazyTrainerTip);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6 = (uint64_t *)&unk_256B58320;
      else
        v6 = (uint64_t *)&unk_256B58318;
      v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      v8 = (int *)type metadata accessor for TrainerTip();
      *(_OWORD *)&a1[v8[5]] = *(_OWORD *)&a2[v8[5]];
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      a1[v8[7]] = a2[v8[7]];
      a1[v8[8]] = a2[v8[8]];
      v9 = v8[9];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = (int *)type metadata accessor for TrainerTipGalleryArtwork();
      v13 = *((_QWORD *)v12 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B582B8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = sub_23C34DA94();
        v16 = *(_QWORD *)(v15 - 8);
        v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
        v39 = v15;
        v40 = v13;
        v37 = v16;
        if (v38(v11, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v10, v11, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
        }
        *(_QWORD *)&v10[v12[5]] = *(_QWORD *)&v11[v12[5]];
        v18 = v12[6];
        __dst = &v10[v18];
        v19 = &v11[v18];
        v20 = sub_23C34D950();
        v21 = *(_QWORD *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
          memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
        }
        v23 = v12[7];
        v24 = &v10[v23];
        v25 = &v11[v23];
        if (v38(&v11[v23], 1, v39))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v24, v25, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v24, 0, 1, v39);
        }
        *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      *(_OWORD *)&a1[v8[12]] = *(_OWORD *)&a2[v8[12]];
      v27 = v8[13];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      v31 = v8[14];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = sub_23C34D86C();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
      v35(v32, v33, v34);
      v35(&a1[v8[15]], &a2[v8[15]], v34);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C2E0E7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TrainerTip();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LazyTrainerTip.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2E0F34 + 4 * byte_23C356535[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2E0F68 + 4 * asc_23C356530[v4]))();
}

uint64_t sub_23C2E0F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E0F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2E0F78);
  return result;
}

uint64_t sub_23C2E0F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2E0F8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2E0F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E0F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LazyTrainerTip.CodingKeys()
{
  return &type metadata for LazyTrainerTip.CodingKeys;
}

ValueMetadata *type metadata accessor for LazyTrainerTip.ItemCodingKeys()
{
  return &type metadata for LazyTrainerTip.ItemCodingKeys;
}

uint64_t _s20FitnessProductDetail14LazyTrainerTipO14ItemCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C2E1008 + 4 * byte_23C35653A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2E1028 + 4 * byte_23C35653F[v4]))();
}

_BYTE *sub_23C2E1008(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2E1028(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2E1030(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2E1038(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2E1040(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2E1048(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LazyTrainerTip.PlaceholderCodingKeys()
{
  return &type metadata for LazyTrainerTip.PlaceholderCodingKeys;
}

unint64_t sub_23C2E1068()
{
  unint64_t result;

  result = qword_256B5A070;
  if (!qword_256B5A070)
  {
    result = MEMORY[0x24261C66C](&unk_23C3566F8, &type metadata for LazyTrainerTip.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A070);
  }
  return result;
}

unint64_t sub_23C2E10B0()
{
  unint64_t result;

  result = qword_256B5A078;
  if (!qword_256B5A078)
  {
    result = MEMORY[0x24261C66C](&unk_23C3567B0, &type metadata for LazyTrainerTip.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A078);
  }
  return result;
}

unint64_t sub_23C2E10F8()
{
  unint64_t result;

  result = qword_256B5A080;
  if (!qword_256B5A080)
  {
    result = MEMORY[0x24261C66C](&unk_23C356868, &type metadata for LazyTrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A080);
  }
  return result;
}

unint64_t sub_23C2E1140()
{
  unint64_t result;

  result = qword_256B5A088;
  if (!qword_256B5A088)
  {
    result = MEMORY[0x24261C66C](&unk_23C356720, &type metadata for LazyTrainerTip.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A088);
  }
  return result;
}

unint64_t sub_23C2E1188()
{
  unint64_t result;

  result = qword_256B5A090;
  if (!qword_256B5A090)
  {
    result = MEMORY[0x24261C66C](&unk_23C356748, &type metadata for LazyTrainerTip.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A090);
  }
  return result;
}

unint64_t sub_23C2E11D0()
{
  unint64_t result;

  result = qword_256B5A098;
  if (!qword_256B5A098)
  {
    result = MEMORY[0x24261C66C](&unk_23C356668, &type metadata for LazyTrainerTip.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A098);
  }
  return result;
}

unint64_t sub_23C2E1218()
{
  unint64_t result;

  result = qword_256B5A0A0;
  if (!qword_256B5A0A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C356690, &type metadata for LazyTrainerTip.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A0A0);
  }
  return result;
}

unint64_t sub_23C2E1260()
{
  unint64_t result;

  result = qword_256B5A0A8;
  if (!qword_256B5A0A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3567D8, &type metadata for LazyTrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A0A8);
  }
  return result;
}

unint64_t sub_23C2E12A8()
{
  unint64_t result;

  result = qword_256B5A0B0;
  if (!qword_256B5A0B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C356800, &type metadata for LazyTrainerTip.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A0B0);
  }
  return result;
}

uint64_t sub_23C2E12EC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C2E13D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EditorialDetailContent.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B5A0C0);
}

uint64_t EditorialDetailContent.externalLinks.getter()
{
  type metadata accessor for EditorialDetailContent();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for EditorialDetailContent()
{
  uint64_t result;

  result = qword_256B5A1C8;
  if (!qword_256B5A1C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EditorialDetailContent.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EditorialDetailContent() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialDetailContent.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EditorialDetailContent() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialDetailContent.preview.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EditorialDetailContent();
  return sub_23C28950C(v1 + *(int *)(v3 + 32), a1, &qword_256B5A0C8);
}

uint64_t EditorialDetailContent.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditorialDetailContent() + 36);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EditorialDetailContent.summary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EditorialDetailContent() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialDetailContent.supportedFilterKinds.getter()
{
  type metadata accessor for EditorialDetailContent();
  return swift_bridgeObjectRetain();
}

uint64_t EditorialDetailContent.init(artworkDescriptor:externalLinks:identifier:name:preview:sharingURL:summary:supportedFilterKinds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;

  sub_23C2894C8(a1, a9, &qword_256B5A0C0);
  v19 = (int *)type metadata accessor for EditorialDetailContent();
  *(_QWORD *)(a9 + v19[5]) = a2;
  v20 = (_QWORD *)(a9 + v19[6]);
  *v20 = a3;
  v20[1] = a4;
  v21 = (_QWORD *)(a9 + v19[7]);
  *v21 = a5;
  v21[1] = a6;
  sub_23C2894C8(a7, a9 + v19[8], &qword_256B5A0C8);
  v22 = a9 + v19[9];
  v23 = sub_23C34D950();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a8, v23);
  v25 = (_QWORD *)(a9 + v19[10]);
  *v25 = a10;
  v25[1] = a11;
  *(_QWORD *)(a9 + v19[11]) = a12;
  return result;
}

uint64_t sub_23C2E16EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2E1724 + 4 * byte_23C356980[a1]))(0xD000000000000011, 0x800000023C361620);
}

uint64_t sub_23C2E1724()
{
  return 0x6C616E7265747865;
}

uint64_t sub_23C2E1748()
{
  return 0x696669746E656469;
}

uint64_t sub_23C2E1764()
{
  return 1701667182;
}

uint64_t sub_23C2E1774()
{
  return 0x77656976657270;
}

uint64_t sub_23C2E178C()
{
  return 0x55676E6972616873;
}

uint64_t sub_23C2E17A8()
{
  return 0x7972616D6D7573;
}

uint64_t sub_23C2E17C0(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_23C2E17D8()
{
  unsigned __int8 *v0;

  return sub_23C2E16EC(*v0);
}

uint64_t sub_23C2E17E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2E48EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C2E1804(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23C2E1810()
{
  sub_23C2E1BAC();
  return sub_23C34ECD0();
}

uint64_t sub_23C2E1838()
{
  sub_23C2E1BAC();
  return sub_23C34ECDC();
}

uint64_t EditorialDetailContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E1BAC();
  sub_23C34ECC4();
  LOBYTE(v12) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  sub_23C2E2348(&qword_256B5A0E0, MEMORY[0x24BE35058]);
  sub_23C34EC40();
  if (!v2)
  {
    v9 = type metadata accessor for EditorialDetailContent();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0E8);
    sub_23C2E238C(&qword_256B5A0F0, &qword_256B5A0F8, (uint64_t)&protocol conformance descriptor for EditorialExternalLink, MEMORY[0x24BEE1700]);
    sub_23C34EC40();
    LOBYTE(v12) = 2;
    sub_23C34EC10();
    LOBYTE(v12) = 3;
    sub_23C34EC10();
    LOBYTE(v12) = 4;
    type metadata accessor for EditorialPreview();
    sub_23C27FEE4(&qword_256B5A100, (uint64_t (*)(uint64_t))type metadata accessor for EditorialPreview, (uint64_t)&protocol conformance descriptor for EditorialPreview);
    sub_23C34EC04();
    LOBYTE(v12) = 5;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC40();
    LOBYTE(v12) = 6;
    sub_23C34EBE0();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 44));
    HIBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A108);
    sub_23C2E1BF0(&qword_256B5A110, (uint64_t (*)(void))sub_23C2E1C58, MEMORY[0x24BEE1700]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C2E1BAC()
{
  unint64_t result;

  result = qword_256B5A0D8;
  if (!qword_256B5A0D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C356B9C, &type metadata for EditorialDetailContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A0D8);
  }
  return result;
}

uint64_t sub_23C2E1BF0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A108);
    v8 = a2();
    result = MEMORY[0x24261C66C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2E1C58()
{
  unint64_t result;

  result = qword_256B5A118;
  if (!qword_256B5A118)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for EditorialFilterKind, &type metadata for EditorialFilterKind);
    atomic_store(result, (unint64_t *)&qword_256B5A118);
  }
  return result;
}

uint64_t EditorialDetailContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char v45;
  uint64_t v46;

  v36 = a2;
  v3 = sub_23C34D950();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A120);
  v12 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v41);
  v42 = a1;
  v43 = (uint64_t)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E1BAC();
  v40 = v14;
  v16 = (uint64_t)v44;
  sub_23C34ECB8();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  v44 = v8;
  v35 = v5;
  v17 = v12;
  v18 = v38;
  LOBYTE(v46) = 0;
  sub_23C2E2348(&qword_256B5A128, MEMORY[0x24BE35060]);
  v19 = v39;
  sub_23C34EBB0();
  v20 = (uint64_t)v11;
  v21 = v43;
  sub_23C2894C8(v20, v43, &qword_256B5A0C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0E8);
  v45 = 1;
  sub_23C2E238C(&qword_256B5A130, &qword_256B5A138, (uint64_t)&protocol conformance descriptor for EditorialExternalLink, MEMORY[0x24BEE1720]);
  sub_23C34EBB0();
  v22 = (int *)v41;
  *(_QWORD *)(v21 + *(int *)(v41 + 20)) = v46;
  LOBYTE(v46) = 2;
  v23 = sub_23C34EB80();
  v24 = (uint64_t *)(v21 + v22[6]);
  *v24 = v23;
  v24[1] = v25;
  LOBYTE(v46) = 3;
  v26 = sub_23C34EB80();
  v27 = (uint64_t *)(v21 + v22[7]);
  *v27 = v26;
  v27[1] = v28;
  type metadata accessor for EditorialPreview();
  LOBYTE(v46) = 4;
  sub_23C27FEE4(&qword_256B5A140, (uint64_t (*)(uint64_t))type metadata accessor for EditorialPreview, (uint64_t)&protocol conformance descriptor for EditorialPreview);
  sub_23C34EB74();
  sub_23C2894C8((uint64_t)v44, v21 + v22[8], &qword_256B5A0C8);
  LOBYTE(v46) = 5;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v29 = v35;
  v44 = 0;
  sub_23C34EBB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v21 + v22[9], v29, v18);
  LOBYTE(v46) = 6;
  v30 = sub_23C34EB50();
  v31 = (uint64_t *)(v21 + v22[10]);
  *v31 = v30;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A108);
  v45 = 7;
  sub_23C2E1BF0(&qword_256B5A148, (uint64_t (*)(void))sub_23C2E2410, MEMORY[0x24BEE1720]);
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v40, v19);
  *(_QWORD *)(v21 + *(int *)(v41 + 44)) = v46;
  sub_23C282F90(v21, v36, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_23C283550(v21, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
}

uint64_t sub_23C2E2348(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A0C0);
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2E238C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A0E8);
    v10 = sub_23C27FEE4(a2, (uint64_t (*)(uint64_t))type metadata accessor for EditorialExternalLink, a3);
    result = MEMORY[0x24261C66C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2E2410()
{
  unint64_t result;

  result = qword_256B5A150;
  if (!qword_256B5A150)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for EditorialFilterKind, &type metadata for EditorialFilterKind);
    atomic_store(result, (unint64_t *)&qword_256B5A150);
  }
  return result;
}

uint64_t sub_23C2E2454@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialDetailContent.init(from:)(a1, a2);
}

uint64_t sub_23C2E2468(_QWORD *a1)
{
  return EditorialDetailContent.encode(to:)(a1);
}

uint64_t EditorialDetailContent.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for EditorialPreview();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  sub_23C34DAAC();
  v11 = (int *)type metadata accessor for EditorialDetailContent();
  v12 = *(_QWORD *)(v1 + v11[5]);
  swift_bridgeObjectRetain();
  sub_23C2E2F40(a1, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C28950C(v2 + v11[8], (uint64_t)v10, &qword_256B5A0C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    sub_23C2851C0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    sub_23C34EC94();
    if (*((_QWORD *)v7 + 1))
    {
      sub_23C34EC94();
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23C34EC94();
    }
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    sub_23C283550((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
  }
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  if (*(_QWORD *)(v2 + v11[10] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  v13 = *(_QWORD *)(v2 + v11[11]);
  swift_bridgeObjectRetain();
  sub_23C2E2DD8((uint64_t)a1, v13);
  return swift_bridgeObjectRelease();
}

void sub_23C2E2784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;

  v4 = type metadata accessor for EditorialExternalLink();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char **)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char **)((char *)&v32 - v8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - v12;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v19 = a2 + 56;
  v33 = v11;
  v34 = a1;
  v32 = v13;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    v25 = *(_QWORD *)(v11 + 72);
    sub_23C282F90(*(_QWORD *)(a1 + 48) + v25 * i, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    sub_23C2851C0((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    sub_23C34EC7C();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
    v26 = (char *)v9 + *(int *)(v4 + 20);
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    v27 = sub_23C34ECAC();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v19 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
LABEL_36:
      sub_23C283550((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
      return;
    }
    v30 = ~v28;
    while (1)
    {
      sub_23C282F90(*(_QWORD *)(a2 + 48) + v29 * v25, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
      v31 = *v6 == *v9 && v6[1] == v9[1];
      if ((v31 || (sub_23C34EC64() & 1) != 0) && (MEMORY[0x24261B040]((char *)v6 + *(int *)(v4 + 20), v26) & 1) != 0)
        break;
      sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v19 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
        goto LABEL_36;
    }
    sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    sub_23C283550((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    v11 = v33;
    a1 = v34;
    v13 = v32;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v36)
      return;
    v22 = *(_QWORD *)(v35 + 8 * v21);
    v23 = v14 + 1;
    if (!v22)
    {
      v23 = v14 + 2;
      if (v14 + 2 >= v36)
        return;
      v22 = *(_QWORD *)(v35 + 8 * v23);
      if (!v22)
      {
        v23 = v14 + 3;
        if (v14 + 3 >= v36)
          return;
        v22 = *(_QWORD *)(v35 + 8 * v23);
        if (!v22)
        {
          v23 = v14 + 4;
          if (v14 + 4 >= v36)
            return;
          v22 = *(_QWORD *)(v35 + 8 * v23);
          if (!v22)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v22 - 1) & v22;
    v38 = v23;
  }
  v24 = v14 + 5;
  if (v14 + 5 >= v36)
    return;
  v22 = *(_QWORD *)(v35 + 8 * v24);
  if (v22)
  {
    v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v36)
      return;
    v22 = *(_QWORD *)(v35 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_23C2E2B2C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_23C34EC7C();
    sub_23C34EC88();
    result = sub_23C34ECAC();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == v16)
      goto LABEL_7;
  }
}

uint64_t EditorialDetailContent.hashValue.getter()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailContent.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2E2D5C()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailContent.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2E2D9C()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailContent.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2E2DD8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_23C34ECAC();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_23C34EC88();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_16:
    v9 = (v12 - 1) & v12;
LABEL_5:
    sub_23C34EC7C();
    sub_23C34EC88();
    result = sub_23C34ECAC();
    v4 ^= result;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_23C34EC88();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_23C34EC88();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23C2E2F40(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t result;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v26;
  int64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v4 = type metadata accessor for EditorialExternalLink();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v28 - v8;
  v10 = *((_QWORD *)a1 + 8);
  v11 = a1[1];
  v32 = *a1;
  v33 = v11;
  v12 = a1[2];
  v13 = a1[3];
  v28[0] = a1;
  v34 = v12;
  v35 = v13;
  v36 = v10;
  v28[1] = sub_23C34ECAC();
  v14 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a2 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  v31 = a2;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v21 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v21++, 1))
      goto LABEL_19;
    if (v21 >= v18)
    {
LABEL_17:
      swift_release();
      return sub_23C34EC88();
    }
    v26 = *(_QWORD *)(v14 + 8 * v21);
    if (!v26)
      break;
LABEL_16:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_5:
    sub_23C282F90(*(_QWORD *)(v31 + 48) + *(_QWORD *)(v29 + 72) * v23, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    sub_23C2851C0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    sub_23C34EC7C();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    v24 = sub_23C34ECAC();
    result = sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialExternalLink);
    v20 ^= v24;
  }
  v27 = v21 + 1;
  if (v21 + 1 >= v18)
    goto LABEL_17;
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    ++v21;
    goto LABEL_16;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v18)
      goto LABEL_17;
    v26 = *(_QWORD *)(v14 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s20FitnessProductDetail09EditorialC7ContentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  int *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v56;
  int *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v4 = type metadata accessor for EditorialPreview();
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A248);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v56 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v56 - v17;
  type metadata accessor for EditorialArtwork();
  sub_23C27FEE4(&qword_256B5A1E0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
  v19 = a1;
  v20 = a2;
  if ((sub_23C34DAA0() & 1) == 0)
    goto LABEL_32;
  v59 = v12;
  v60 = v7;
  v61 = v15;
  v62 = v9;
  v63 = v18;
  v21 = v65;
  v58 = v6;
  v22 = (int *)type metadata accessor for EditorialDetailContent();
  sub_23C2E2784(*(_QWORD *)(v19 + v22[5]), *(_QWORD *)(a2 + v22[5]));
  if ((v23 & 1) == 0)
    goto LABEL_32;
  v24 = v22[6];
  v25 = *(_QWORD *)(v19 + v24);
  v26 = *(_QWORD *)(v19 + v24 + 8);
  v27 = (_QWORD *)(a2 + v24);
  if (v25 != *v27 || v26 != v27[1])
  {
    v28 = sub_23C34EC64();
    v29 = 0;
    if ((v28 & 1) == 0)
      return v29 & 1;
  }
  v30 = v22[7];
  v31 = *(_QWORD *)(v19 + v30);
  v32 = *(_QWORD *)(v19 + v30 + 8);
  v33 = (_QWORD *)(a2 + v30);
  if (v31 != *v33 || v32 != v33[1])
  {
    v34 = sub_23C34EC64();
    v29 = 0;
    if ((v34 & 1) == 0)
      return v29 & 1;
  }
  v35 = v22[8];
  v56 = v19;
  v36 = (uint64_t)v63;
  sub_23C28950C(v19 + v35, (uint64_t)v63, &qword_256B5A0C8);
  v57 = v22;
  v37 = (uint64_t)v61;
  sub_23C28950C(v20 + v22[8], (uint64_t)v61, &qword_256B5A0C8);
  v38 = (uint64_t)v62;
  v39 = (uint64_t)&v62[*(int *)(v60 + 48)];
  sub_23C28950C(v36, (uint64_t)v62, &qword_256B5A0C8);
  sub_23C28950C(v37, v39, &qword_256B5A0C8);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  if (v40(v38, 1, v21) == 1)
  {
    sub_23C285184(v37, &qword_256B5A0C8);
    sub_23C285184(v36, &qword_256B5A0C8);
    if (v40(v39, 1, v21) == 1)
    {
      sub_23C285184(v38, &qword_256B5A0C8);
      goto LABEL_12;
    }
LABEL_21:
    sub_23C285184(v38, &qword_256B5A248);
    goto LABEL_32;
  }
  v49 = v59;
  sub_23C28950C(v38, (uint64_t)v59, &qword_256B5A0C8);
  if (v40(v39, 1, v21) == 1)
  {
    sub_23C285184(v37, &qword_256B5A0C8);
    sub_23C285184((uint64_t)v63, &qword_256B5A0C8);
    sub_23C283550((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    goto LABEL_21;
  }
  v50 = v58;
  sub_23C2851C0(v39, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
  v51 = v49[1];
  v52 = v50[1];
  if (!v51)
  {
    v53 = (uint64_t)v63;
    if (!v52)
      goto LABEL_27;
LABEL_30:
    sub_23C283550((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    sub_23C285184(v37, &qword_256B5A0C8);
    sub_23C285184(v53, &qword_256B5A0C8);
    sub_23C283550((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    sub_23C285184(v38, &qword_256B5A0C8);
    goto LABEL_32;
  }
  v53 = (uint64_t)v63;
  if (!v52 || (*v49 != *v50 || v51 != v52) && (sub_23C34EC64() & 1) == 0)
    goto LABEL_30;
LABEL_27:
  v54 = MEMORY[0x24261B040]((char *)v49 + *(int *)(v21 + 20), (char *)v50 + *(int *)(v21 + 20));
  sub_23C283550((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
  sub_23C285184(v37, &qword_256B5A0C8);
  sub_23C285184(v53, &qword_256B5A0C8);
  sub_23C283550((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
  sub_23C285184(v38, &qword_256B5A0C8);
  if ((v54 & 1) == 0)
    goto LABEL_32;
LABEL_12:
  v42 = v56;
  v41 = v57;
  if ((MEMORY[0x24261B040](v56 + v57[9], v20 + v57[9]) & 1) == 0)
    goto LABEL_32;
  v43 = v41[10];
  v44 = (_QWORD *)(v42 + v43);
  v45 = *(_QWORD *)(v42 + v43 + 8);
  v46 = (_QWORD *)(v20 + v43);
  v47 = v46[1];
  if (!v45)
  {
    if (!v47)
    {
LABEL_34:
      v29 = sub_23C2E2B2C(*(_QWORD *)(v42 + v41[11]), *(_QWORD *)(v20 + v41[11]));
      return v29 & 1;
    }
    goto LABEL_32;
  }
  if (!v47)
  {
LABEL_32:
    v29 = 0;
    return v29 & 1;
  }
  if (*v44 == *v46 && v45 == v47)
    goto LABEL_34;
  v48 = sub_23C34EC64();
  v29 = 0;
  if ((v48 & 1) != 0)
    goto LABEL_34;
  return v29 & 1;
}

uint64_t sub_23C2E36C8()
{
  return sub_23C27FEE4(&qword_256B5A158, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailContent, (uint64_t)&protocol conformance descriptor for EditorialDetailContent);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialDetailContent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v7 = (uint64_t *)&unk_256B5A168;
    else
      v7 = (uint64_t *)&unk_256B5A160;
    v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)a1 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = type metadata accessor for EditorialPreview();
    v40 = *(_QWORD *)(v20 - 8);
    v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v24 = v19[1];
      *v18 = *v19;
      v18[1] = v24;
      v25 = *(int *)(v20 + 20);
      v26 = (char *)v18 + v25;
      v27 = (char *)v19 + v25;
      v28 = sub_23C34D950();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v18, 0, 1, v20);
    }
    v30 = a3[9];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    v34 = a3[10];
    v35 = a3[11];
    v36 = (uint64_t *)((char *)a1 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EditorialDetailContent(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = (uint64_t *)&unk_256B5A168;
  else
    v4 = (uint64_t *)&unk_256B5A160;
  v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for EditorialPreview();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 20);
    v9 = sub_23C34D950();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + *(int *)(a2 + 36);
  v11 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EditorialDetailContent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unsigned int (*v20)(_QWORD *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B5A168;
  else
    v6 = (uint64_t *)&unk_256B5A160;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = type metadata accessor for EditorialPreview();
  v38 = *(_QWORD *)(v19 - 8);
  v20 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = v18[1];
    *v17 = *v18;
    v17[1] = v22;
    v23 = *(int *)(v19 + 20);
    v24 = (char *)v17 + v23;
    v25 = (char *)v18 + v23;
    v26 = sub_23C34D950();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v17, 0, 1, v19);
  }
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  v32 = a3[10];
  v33 = a3[11];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EditorialDetailContent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B5A0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B5A168;
    else
      v6 = (uint64_t *)&unk_256B5A160;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = type metadata accessor for EditorialPreview();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35 = *(int *)(v17 + 20);
      v36 = (char *)v15 + v35;
      v37 = (char *)v16 + v35;
      v38 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
      goto LABEL_12;
    }
    sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    goto LABEL_11;
  }
  if (v21)
  {
LABEL_11:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_12;
  }
  *v15 = *v16;
  v15[1] = v16[1];
  v22 = *(int *)(v17 + 20);
  v23 = (char *)v15 + v22;
  v39 = (char *)v16 + v22;
  v24 = sub_23C34D950();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v23, v39, v24);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_12:
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EditorialDetailContent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B5A168;
  else
    v6 = (uint64_t *)&unk_256B5A160;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = type metadata accessor for EditorialPreview();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v15 = *(int *)(v12 + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for EditorialDetailContent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B5A0C0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B5A168;
    else
      v6 = (uint64_t *)&unk_256B5A160;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = type metadata accessor for EditorialPreview();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      v41 = v20[1];
      *v19 = *v20;
      v19[1] = v41;
      swift_bridgeObjectRelease();
      v42 = *(int *)(v21 + 20);
      v43 = (char *)v19 + v42;
      v44 = (char *)v20 + v42;
      v45 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
      goto LABEL_12;
    }
    sub_23C283550((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    goto LABEL_11;
  }
  if (v25)
  {
LABEL_11:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_12;
  }
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v26 = *(int *)(v21 + 20);
  v27 = (char *)v19 + v26;
  v28 = (char *)v20 + v26;
  v29 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_12:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[10];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialDetailContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E4374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v8 = sub_23C34D950();
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorialDetailContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E4454(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v10 = sub_23C34D950();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C2E4524()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23C2E45EC();
  if (v0 <= 0x3F)
  {
    sub_23C2E4664();
    if (v1 <= 0x3F)
    {
      sub_23C34D950();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23C2E45EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B5A1D8)
  {
    type metadata accessor for EditorialArtwork();
    sub_23C27FEE4(&qword_256B5A1E0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
    v0 = sub_23C34DAB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B5A1D8);
  }
}

void sub_23C2E4664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B5A1E8[0])
  {
    type metadata accessor for EditorialPreview();
    v0 = sub_23C34EA48();
    if (!v1)
      atomic_store(v0, qword_256B5A1E8);
  }
}

uint64_t getEnumTagSinglePayload for EditorialDetailContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EditorialDetailContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23C2E4794 + 4 * byte_23C35698D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23C2E47C8 + 4 * byte_23C356988[v4]))();
}

uint64_t sub_23C2E47C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E47D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2E47D8);
  return result;
}

uint64_t sub_23C2E47E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2E47ECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23C2E47F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E47F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailContent.CodingKeys()
{
  return &type metadata for EditorialDetailContent.CodingKeys;
}

unint64_t sub_23C2E4818()
{
  unint64_t result;

  result = qword_256B5A230;
  if (!qword_256B5A230)
  {
    result = MEMORY[0x24261C66C](&unk_23C356B74, &type metadata for EditorialDetailContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A230);
  }
  return result;
}

unint64_t sub_23C2E4860()
{
  unint64_t result;

  result = qword_256B5A238;
  if (!qword_256B5A238)
  {
    result = MEMORY[0x24261C66C](&unk_23C356AE4, &type metadata for EditorialDetailContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A238);
  }
  return result;
}

unint64_t sub_23C2E48A8()
{
  unint64_t result;

  result = qword_256B5A240;
  if (!qword_256B5A240)
  {
    result = MEMORY[0x24261C66C](&unk_23C356B0C, &type metadata for EditorialDetailContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A240);
  }
  return result;
}

uint64_t sub_23C2E48EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C361620 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xED0000736B6E694CLL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77656976657270 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x55676E6972616873 && a2 == 0xEA00000000004C52 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361A40)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t WorkoutProgramCanvasPlaceholder.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutProgramCanvasPlaceholder.init(identifier:referenceType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23C2E4C4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x636E657265666572;
  else
    return 0x696669746E656469;
}

uint64_t sub_23C2E4C94()
{
  char *v0;

  return sub_23C2E4C4C(*v0);
}

uint64_t sub_23C2E4C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2E5464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2E4CC0()
{
  sub_23C2E4E44();
  return sub_23C34ECD0();
}

uint64_t sub_23C2E4CE8()
{
  sub_23C2E4E44();
  return sub_23C34ECDC();
}

uint64_t WorkoutProgramCanvasPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A250);
  v8 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E4E44();
  sub_23C34ECC4();
  v10 = 0;
  sub_23C34EC10();
  if (!v1)
  {
    v9 = 1;
    sub_23C2E4E88();
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

unint64_t sub_23C2E4E44()
{
  unint64_t result;

  result = qword_256B5A258;
  if (!qword_256B5A258)
  {
    result = MEMORY[0x24261C66C](&unk_23C356DA4, &type metadata for WorkoutProgramCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A258);
  }
  return result;
}

unint64_t sub_23C2E4E88()
{
  unint64_t result;

  result = qword_256B5A260;
  if (!qword_256B5A260)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramCanvasPlaceholderReferenceType, &type metadata for WorkoutProgramCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B5A260);
  }
  return result;
}

uint64_t WorkoutProgramCanvasPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E4E44();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = 0;
  v9 = sub_23C34EB80();
  v11 = v10;
  v14 = 1;
  sub_23C2E5060();
  swift_bridgeObjectRetain();
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23C2E5060()
{
  unint64_t result;

  result = qword_256B5A270;
  if (!qword_256B5A270)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramCanvasPlaceholderReferenceType, &type metadata for WorkoutProgramCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B5A270);
  }
  return result;
}

uint64_t sub_23C2E50A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WorkoutProgramCanvasPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_23C2E50B8(_QWORD *a1)
{
  return WorkoutProgramCanvasPlaceholder.encode(to:)(a1);
}

uint64_t WorkoutProgramCanvasPlaceholder.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  return sub_23C34E8B0();
}

uint64_t WorkoutProgramCanvasPlaceholder.hashValue.getter()
{
  sub_23C34EC7C();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34E8B0();
  return sub_23C34ECAC();
}

uint64_t sub_23C2E51AC()
{
  sub_23C34EC7C();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  sub_23C34E8B0();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail31WorkoutProgramCanvasPlaceholderV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v3;
  uint64_t result;

  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  v3 = sub_23C34EC64();
  result = 0;
  if ((v3 & 1) != 0)
    return 1;
  return result;
}

unint64_t sub_23C2E526C()
{
  unint64_t result;

  result = qword_256B5A278;
  if (!qword_256B5A278)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutProgramCanvasPlaceholder, &type metadata for WorkoutProgramCanvasPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B5A278);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramCanvasPlaceholder()
{
  return &type metadata for WorkoutProgramCanvasPlaceholder;
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramCanvasPlaceholder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2E530C + 4 * byte_23C356BF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2E5340 + 4 * byte_23C356BF0[v4]))();
}

uint64_t sub_23C2E5340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E5348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2E5350);
  return result;
}

uint64_t sub_23C2E535C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2E5364);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2E5368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E5370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramCanvasPlaceholder.CodingKeys()
{
  return &type metadata for WorkoutProgramCanvasPlaceholder.CodingKeys;
}

unint64_t sub_23C2E5390()
{
  unint64_t result;

  result = qword_256B5A280;
  if (!qword_256B5A280)
  {
    result = MEMORY[0x24261C66C](&unk_23C356D7C, &type metadata for WorkoutProgramCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A280);
  }
  return result;
}

unint64_t sub_23C2E53D8()
{
  unint64_t result;

  result = qword_256B5A288;
  if (!qword_256B5A288)
  {
    result = MEMORY[0x24261C66C](&unk_23C356CEC, &type metadata for WorkoutProgramCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A288);
  }
  return result;
}

unint64_t sub_23C2E5420()
{
  unint64_t result;

  result = qword_256B5A290;
  if (!qword_256B5A290)
  {
    result = MEMORY[0x24261C66C](&unk_23C356D14, &type metadata for WorkoutProgramCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A290);
  }
  return result;
}

uint64_t sub_23C2E5464(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WorkoutProgramPreview.streamingProgramIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutProgramPreview.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutProgramPreview() + 20);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WorkoutProgramPreview()
{
  uint64_t result;

  result = qword_256B5A310;
  if (!qword_256B5A310)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutProgramPreview.init(streamingProgramIdentifier:streamingURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for WorkoutProgramPreview() + 20);
  v6 = sub_23C34D950();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_23C2E566C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E696D6165727473;
  else
    return 0xD00000000000001ALL;
}

uint64_t sub_23C2E56B0()
{
  char *v0;

  return sub_23C2E566C(*v0);
}

uint64_t sub_23C2E56B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2E6614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2E56DC()
{
  sub_23C2E5880();
  return sub_23C34ECD0();
}

uint64_t sub_23C2E5704()
{
  sub_23C2E5880();
  return sub_23C34ECDC();
}

uint64_t WorkoutProgramPreview.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A298);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E5880();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34EBE0();
  if (!v1)
  {
    type metadata accessor for WorkoutProgramPreview();
    v8[14] = 1;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2E5880()
{
  unint64_t result;

  result = qword_256B5A2A0;
  if (!qword_256B5A2A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C356FD4, &type metadata for WorkoutProgramPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A2A0);
  }
  return result;
}

uint64_t WorkoutProgramPreview.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v22 = a2;
  v4 = sub_23C34D950();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A2A8);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutProgramPreview();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E5880();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v6;
  v12 = v11;
  v14 = v23;
  v13 = v24;
  v15 = v25;
  v16 = v26;
  v28 = 0;
  *v12 = sub_23C34EB50();
  v12[1] = v17;
  v27 = 1;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v12 + *(int *)(v9 + 20), v14, v15);
  sub_23C2E5B0C((uint64_t)v12, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_23C2E5B50((uint64_t)v12);
}

uint64_t sub_23C2E5B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutProgramPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2E5B50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutProgramPreview();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2E5B8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutProgramPreview.init(from:)(a1, a2);
}

uint64_t sub_23C2E5BA0(_QWORD *a1)
{
  return WorkoutProgramPreview.encode(to:)(a1);
}

uint64_t WorkoutProgramPreview.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  type metadata accessor for WorkoutProgramPreview();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23C34E838();
}

uint64_t WorkoutProgramPreview.hashValue.getter()
{
  uint64_t v0;

  sub_23C34EC7C();
  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  type metadata accessor for WorkoutProgramPreview();
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t sub_23C2E5D48()
{
  uint64_t v0;

  sub_23C34EC7C();
  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t sub_23C2E5E1C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_23C34E838();
}

uint64_t sub_23C2E5ED8()
{
  uint64_t v0;

  sub_23C34EC7C();
  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34D950();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail21WorkoutProgramPreviewV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23C34EC64() & 1) != 0)
      {
LABEL_8:
        type metadata accessor for WorkoutProgramPreview();
        JUMPOUT(0x24261B040);
      }
    }
  }
  else if (!v4)
  {
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_23C2E6024()
{
  return sub_23C27FEE4(&qword_256B5A2B0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramPreview, (uint64_t)&protocol conformance descriptor for WorkoutProgramPreview);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialExternalLink(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C34D950();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for EditorialExternalLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for EditorialExternalLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23C34D950();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for EditorialExternalLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for EditorialExternalLink(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for EditorialExternalLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutProgramPreview()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E62F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_23C34D950();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramPreview()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E6388(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_23C34D950();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C2E63FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C34D950();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutProgramPreview.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2E64BC + 4 * byte_23C356E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2E64F0 + 4 * byte_23C356E00[v4]))();
}

uint64_t sub_23C2E64F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E64F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2E6500);
  return result;
}

uint64_t sub_23C2E650C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2E6514);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2E6518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E6520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgramPreview.CodingKeys()
{
  return &type metadata for WorkoutProgramPreview.CodingKeys;
}

unint64_t sub_23C2E6540()
{
  unint64_t result;

  result = qword_256B5A348;
  if (!qword_256B5A348)
  {
    result = MEMORY[0x24261C66C](&unk_23C356FAC, &type metadata for WorkoutProgramPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A348);
  }
  return result;
}

unint64_t sub_23C2E6588()
{
  unint64_t result;

  result = qword_256B5A350;
  if (!qword_256B5A350)
  {
    result = MEMORY[0x24261C66C](&unk_23C356F1C, &type metadata for WorkoutProgramPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A350);
  }
  return result;
}

unint64_t sub_23C2E65D0()
{
  unint64_t result;

  result = qword_256B5A358;
  if (!qword_256B5A358)
  {
    result = MEMORY[0x24261C66C](&unk_23C356F44, &type metadata for WorkoutProgramPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A358);
  }
  return result;
}

uint64_t sub_23C2E6614(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x800000023C361A60 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WorkoutProgram.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B5A360);
}

uint64_t WorkoutProgram.detail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutProgram() + 20);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WorkoutProgram()
{
  uint64_t result;

  result = qword_256B5A448;
  if (!qword_256B5A448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutProgram.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutProgram() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutProgram.links.getter()
{
  type metadata accessor for WorkoutProgram();
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutProgram.preview.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutProgram();
  return sub_23C28950C(v1 + *(int *)(v3 + 32), a1, &qword_256B5A368);
}

uint64_t WorkoutProgram.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutProgram() + 36);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutProgram.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutProgram();
  return sub_23C28950C(v1 + *(int *)(v3 + 40), a1, &qword_256B58910);
}

uint64_t WorkoutProgram.summary.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutProgram() + 44);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutProgram.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutProgram() + 48);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutProgram.workoutIdentifiers.getter()
{
  type metadata accessor for WorkoutProgram();
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutProgram.init(artworkDescriptor:detail:identifier:links:preview:sharingURL:subtitle:summary:title:workoutIdentifiers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;

  sub_23C2894C8(a1, a9, &qword_256B5A360);
  v18 = (int *)type metadata accessor for WorkoutProgram();
  v19 = a9 + v18[5];
  v20 = sub_23C34D86C();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v19, a2, v20);
  v22 = (_QWORD *)(a9 + v18[6]);
  *v22 = a3;
  v22[1] = a4;
  *(_QWORD *)(a9 + v18[7]) = a5;
  sub_23C2894C8(a6, a9 + v18[8], &qword_256B5A368);
  v23 = a9 + v18[9];
  v24 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a7, v24);
  sub_23C2894C8(a8, a9 + v18[10], &qword_256B58910);
  v21(a9 + v18[11], a10, v20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v21)(a9 + v18[12], a11, v20);
  *(_QWORD *)(a9 + v18[13]) = a12;
  return result;
}

uint64_t sub_23C2E6AE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2E6B1C + 4 * byte_23C357030[a1]))(0xD000000000000011, 0x800000023C361620);
}

uint64_t sub_23C2E6B1C()
{
  return 0x6C6961746564;
}

uint64_t sub_23C2E6B30()
{
  return 0x696669746E656469;
}

uint64_t sub_23C2E6B4C()
{
  return 0x736B6E696CLL;
}

uint64_t sub_23C2E6B60()
{
  return 0x77656976657270;
}

uint64_t sub_23C2E6B78()
{
  return 0x55676E6972616873;
}

uint64_t sub_23C2E6B94()
{
  return 0x656C746974627573;
}

uint64_t sub_23C2E6BAC()
{
  return 0x7972616D6D7573;
}

uint64_t sub_23C2E6BC4()
{
  return 0x656C746974;
}

uint64_t sub_23C2E6BD8(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23C2E6BF0()
{
  unsigned __int8 *v0;

  return sub_23C2E6AE4(*v0);
}

uint64_t sub_23C2E6BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2E9978(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C2E6C1C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23C2E6C28()
{
  sub_23C2E7074();
  return sub_23C34ECD0();
}

uint64_t sub_23C2E6C50()
{
  sub_23C2E7074();
  return sub_23C34ECDC();
}

uint64_t WorkoutProgram.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A370);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2E7074();
  sub_23C34ECC4();
  LOBYTE(v13) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  sub_23C2E79AC(&qword_256B5A380, MEMORY[0x24BE35058]);
  sub_23C34EC40();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for WorkoutProgram();
    LOBYTE(v13) = 1;
    sub_23C34D86C();
    sub_23C27FEE4(&qword_256B582E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
    sub_23C34EC40();
    LOBYTE(v13) = 2;
    sub_23C34EC10();
    v13 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A388);
    sub_23C2E79F0(&qword_256B5A390, &qword_256B5A398, (uint64_t)&protocol conformance descriptor for WorkoutProgramLinkAnnotation, MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
    v11 = v3 + v9[8];
    LOBYTE(v13) = 4;
    type metadata accessor for WorkoutProgramPreview();
    sub_23C27FEE4(&qword_256B5A3A0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramPreview, (uint64_t)&protocol conformance descriptor for WorkoutProgramPreview);
    sub_23C34EC04();
    v11 = v3 + v9[9];
    LOBYTE(v13) = 5;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC40();
    LOBYTE(v13) = 6;
    sub_23C34EC04();
    LOBYTE(v13) = 7;
    sub_23C34EC40();
    LOBYTE(v13) = 8;
    sub_23C34EC40();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B00);
    sub_23C2E7A74(&qword_256B5A3A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C2E7074()
{
  unint64_t result;

  result = qword_256B5A378;
  if (!qword_256B5A378)
  {
    result = MEMORY[0x24261C66C](&unk_23C357204, &type metadata for WorkoutProgram.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A378);
  }
  return result;
}

uint64_t WorkoutProgram.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  char *v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(uint64_t, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23C34D950();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23C34D86C();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v45 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v42 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v42 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A3B0);
  v18 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for WorkoutProgram();
  MEMORY[0x24BDAC7A8](v57);
  v58 = (uint64_t)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23C2E7074();
  v52 = v20;
  v23 = v56;
  sub_23C34ECB8();
  if (v23)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v24 = (uint64_t)v50;
  v56 = v11;
  LOBYTE(v60) = 0;
  sub_23C2E79AC(&qword_256B5A3B8, MEMORY[0x24BE35060]);
  sub_23C34EBB0();
  v25 = v58;
  sub_23C2894C8((uint64_t)v17, v58, &qword_256B5A360);
  LOBYTE(v60) = 1;
  sub_23C27FEE4(&qword_256B58300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
  v26 = v53;
  sub_23C34EBB0();
  v27 = (int *)v57;
  v28 = v14;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
  v29(v25 + *(int *)(v57 + 20), v28, v26);
  LOBYTE(v60) = 2;
  v30 = sub_23C34EB80();
  v43 = v29;
  v31 = (uint64_t *)(v25 + v27[6]);
  *v31 = v30;
  v31[1] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A388);
  v59 = 3;
  sub_23C2E79F0(&qword_256B5A3C0, &qword_256B5A3C8, (uint64_t)&protocol conformance descriptor for WorkoutProgramLinkAnnotation, MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  *(_QWORD *)(v25 + v27[7]) = v60;
  type metadata accessor for WorkoutProgramPreview();
  LOBYTE(v60) = 4;
  sub_23C27FEE4(&qword_256B5A3D0, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramPreview, (uint64_t)&protocol conformance descriptor for WorkoutProgramPreview);
  sub_23C34EB74();
  sub_23C2894C8(v24, v25 + v27[8], &qword_256B5A368);
  LOBYTE(v60) = 5;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v34 = v48;
  v33 = v49;
  sub_23C34EBB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v25 + v27[9], v34, v33);
  LOBYTE(v60) = 6;
  v35 = (uint64_t)v46;
  sub_23C34EB74();
  sub_23C2894C8(v35, v25 + v27[10], &qword_256B58910);
  LOBYTE(v60) = 7;
  v36 = v56;
  sub_23C34EBB0();
  v37 = v36;
  v38 = v43;
  v43(v25 + v27[11], v37, v53);
  LOBYTE(v60) = 8;
  v39 = v45;
  sub_23C34EBB0();
  v38(v25 + v27[12], v39, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B59B00);
  v59 = 9;
  sub_23C2E7A74(&qword_256B5A3D8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v52, v54);
  v40 = v58;
  *(_QWORD *)(v58 + *(int *)(v57 + 52)) = v60;
  sub_23C2E7AD4(v40, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  return sub_23C283550(v40, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgram);
}

uint64_t sub_23C2E79AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A360);
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2E79F0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A388);
    v10 = sub_23C27FEE4(a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramLinkAnnotation, a3);
    result = MEMORY[0x24261C66C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2E7A74(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B59B00);
    v8 = a2;
    result = MEMORY[0x24261C66C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2E7AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutProgram();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2E7B18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutProgram.init(from:)(a1, a2);
}

uint64_t sub_23C2E7B2C(_QWORD *a1)
{
  return WorkoutProgram.encode(to:)(a1);
}

uint64_t _s20FitnessProductDetail14WorkoutProgramV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  int *v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;

  v67 = sub_23C34D86C();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A4D8);
  MEMORY[0x24BDAC7A8](v5);
  v66 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v64 = (uint64_t)&v59 - v12;
  v13 = type metadata accessor for WorkoutProgramPreview();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A4E0);
  MEMORY[0x24BDAC7A8](v17);
  v70 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
  MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t *)((char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v59 - v25;
  type metadata accessor for WorkoutProgramArtwork();
  sub_23C27FEE4(&qword_256B5A460, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
  if ((sub_23C34DAA0() & 1) == 0)
    goto LABEL_30;
  v61 = v5;
  v27 = (int *)type metadata accessor for WorkoutProgram();
  if ((sub_23C34D800() & 1) == 0)
    goto LABEL_30;
  v28 = v27[6];
  v29 = *(_QWORD *)(a1 + v28);
  v30 = *(_QWORD *)(a1 + v28 + 8);
  v31 = (_QWORD *)(a2 + v28);
  if (v29 == *v31 && v30 == v31[1] || (v32 = sub_23C34EC64(), v33 = 0, (v32 & 1) != 0))
  {
    if ((sub_23C2862C8(*(_QWORD *)(a1 + v27[7]), *(_QWORD *)(a2 + v27[7])) & 1) == 0)
      goto LABEL_30;
    sub_23C28950C(a1 + v27[8], (uint64_t)v26, &qword_256B5A368);
    v59 = a2;
    v60 = v27;
    sub_23C28950C(a2 + v27[8], (uint64_t)v23, &qword_256B5A368);
    v34 = v70;
    v35 = v70 + *(int *)(v17 + 48);
    sub_23C28950C((uint64_t)v26, v70, &qword_256B5A368);
    sub_23C28950C((uint64_t)v23, v35, &qword_256B5A368);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (v36(v34, 1, v13) == 1)
    {
      sub_23C285184((uint64_t)v23, &qword_256B5A368);
      sub_23C285184((uint64_t)v26, &qword_256B5A368);
      if (v36(v35, 1, v13) == 1)
      {
        sub_23C285184(v34, &qword_256B5A368);
        goto LABEL_10;
      }
      goto LABEL_16;
    }
    v47 = v69;
    sub_23C28950C(v34, (uint64_t)v69, &qword_256B5A368);
    if (v36(v35, 1, v13) == 1)
    {
      sub_23C285184((uint64_t)v23, &qword_256B5A368);
      sub_23C285184((uint64_t)v26, &qword_256B5A368);
      sub_23C283550((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
LABEL_16:
      v48 = &qword_256B5A4E0;
      v49 = v34;
LABEL_29:
      sub_23C285184(v49, v48);
      goto LABEL_30;
    }
    sub_23C2E9D38(v35, (uint64_t)v16);
    v50 = v47[1];
    v51 = v16[1];
    if (v50)
    {
      if (v51 && (*v47 == *v16 && v50 == v51 || (sub_23C34EC64() & 1) != 0))
      {
LABEL_22:
        v52 = MEMORY[0x24261B040]((char *)v47 + *(int *)(v13 + 20), (char *)v16 + *(int *)(v13 + 20));
        sub_23C283550((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
        sub_23C285184((uint64_t)v23, &qword_256B5A368);
        sub_23C285184((uint64_t)v26, &qword_256B5A368);
        sub_23C283550((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
        sub_23C285184(v34, &qword_256B5A368);
        if ((v52 & 1) == 0)
          goto LABEL_30;
LABEL_10:
        v38 = v59;
        v37 = v60;
        v39 = a1;
        if ((MEMORY[0x24261B040](a1 + v60[9], v59 + v60[9]) & 1) != 0)
        {
          v40 = v64;
          sub_23C28950C(a1 + v37[10], v64, &qword_256B58910);
          v41 = v68;
          sub_23C28950C(v38 + v37[10], v68, &qword_256B58910);
          v42 = v66;
          v43 = v66 + *(int *)(v61 + 48);
          sub_23C28950C(v40, v66, &qword_256B58910);
          sub_23C28950C(v41, v43, &qword_256B58910);
          v44 = v65;
          v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
          v46 = v67;
          if (v45(v42, 1, v67) == 1)
          {
            sub_23C285184(v41, &qword_256B58910);
            sub_23C285184(v40, &qword_256B58910);
            if (v45(v43, 1, v46) == 1)
            {
              sub_23C285184(v42, &qword_256B58910);
LABEL_33:
              v58 = v60;
              if ((sub_23C34D800() & 1) != 0 && (sub_23C34D800() & 1) != 0)
              {
                v33 = sub_23C28645C(*(_QWORD **)(v39 + v58[13]), *(_QWORD **)(v38 + v58[13]));
                return v33 & 1;
              }
              goto LABEL_30;
            }
            goto LABEL_28;
          }
          v53 = v63;
          sub_23C28950C(v42, v63, &qword_256B58910);
          if (v45(v43, 1, v46) == 1)
          {
            sub_23C285184(v41, &qword_256B58910);
            sub_23C285184(v40, &qword_256B58910);
            (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v53, v46);
LABEL_28:
            v48 = &qword_256B5A4D8;
            v49 = v42;
            goto LABEL_29;
          }
          v55 = v62;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v62, v43, v46);
          sub_23C27FEE4(&qword_256B5A4E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C8]);
          v56 = sub_23C34E850();
          v57 = *(void (**)(char *, uint64_t))(v44 + 8);
          v57(v55, v46);
          sub_23C285184(v68, &qword_256B58910);
          sub_23C285184(v40, &qword_256B58910);
          v57((char *)v53, v46);
          sub_23C285184(v42, &qword_256B58910);
          if ((v56 & 1) != 0)
            goto LABEL_33;
        }
LABEL_30:
        v33 = 0;
        return v33 & 1;
      }
    }
    else if (!v51)
    {
      goto LABEL_22;
    }
    sub_23C283550((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
    sub_23C285184((uint64_t)v23, &qword_256B5A368);
    sub_23C285184((uint64_t)v26, &qword_256B5A368);
    sub_23C283550((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
    v49 = v34;
    v48 = &qword_256B5A368;
    goto LABEL_29;
  }
  return v33 & 1;
}

char *initializeBufferWithCopyOfBuffer for WorkoutProgram(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *);
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
    if (swift_getEnumCaseMultiPayload() == 1)
      v7 = (uint64_t *)&unk_256B5A3E8;
    else
      v7 = (uint64_t *)&unk_256B5A3E0;
    v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23C34D86C();
    v44 = *(_QWORD *)(v12 - 8);
    v45 = *(void (**)(char *, char *))(v44 + 16);
    v46 = v12;
    v45(v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = &a1[v13];
    v16 = &a2[v13];
    v17 = *((_QWORD *)v16 + 1);
    v18 = *(_QWORD *)&a2[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    *(_QWORD *)&a1[v14] = v18;
    v19 = a3[8];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for WorkoutProgramPreview();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v27 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v27;
      v28 = *(int *)(v22 + 20);
      v29 = &v20[v28];
      v43 = &v21[v28];
      v30 = sub_23C34D950();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      v31(v29, v43, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v32 = a3[9];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[10];
    v37 = &a1[v36];
    v38 = &a2[v36];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(&a2[v36], 1, v46))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      v40 = (void (*)(char *, char *, uint64_t))v45;
    }
    else
    {
      v41 = v38;
      v40 = (void (*)(char *, char *, uint64_t))v45;
      ((void (*)(char *, char *, uint64_t))v45)(v37, v41, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v37, 0, 1, v46);
    }
    ((void (*)(char *, char *, uint64_t))v45)(&a1[a3[11]], &a2[a3[11]], v46);
    v40(&a1[a3[12]], &a2[a3[12]], v46);
    *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutProgram(uint64_t a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = (uint64_t *)&unk_256B5A3E8;
  else
    v4 = (uint64_t *)&unk_256B5A3E0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  v6 = a1 + a2[5];
  v7 = sub_23C34D86C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  v11 = type metadata accessor for WorkoutProgramPreview();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 20);
    v13 = sub_23C34D950();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + a2[9];
  v15 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = a1 + a2[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7))
    v9(v16, v7);
  v9(a1 + a2[11], v7);
  v9(a1 + a2[12], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutProgram(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  const void *v39;
  char *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B5A3E8;
  else
    v6 = (uint64_t *)&unk_256B5A3E0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23C34D86C();
  v42 = *(_QWORD *)(v11 - 8);
  v43 = *(void (**)(uint64_t, uint64_t))(v42 + 16);
  v44 = v11;
  v43(v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  v17 = *(_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + v13) = v17;
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = type metadata accessor for WorkoutProgramPreview();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = v20[1];
    *v19 = *v20;
    v19[1] = v25;
    v26 = *(int *)(v21 + 20);
    v27 = (char *)v19 + v26;
    v41 = (char *)v20 + v26;
    v28 = sub_23C34D950();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v27, v41, v28);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  v34 = a3[10];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(a2 + v34, 1, v44))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v38 = (void (*)(uint64_t, uint64_t, uint64_t))v43;
  }
  else
  {
    v39 = v36;
    v38 = (void (*)(uint64_t, uint64_t, uint64_t))v43;
    ((void (*)(void *, const void *, uint64_t))v43)(v35, v39, v44);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v35, 0, 1, v44);
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(a1 + a3[11], a2 + a3[11], v44);
  v38(a1 + a3[12], a2 + a3[12], v44);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutProgram(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B5A360);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B5A3E8;
    else
      v6 = (uint64_t *)&unk_256B5A3E0;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23C34D86C();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24);
  v48(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = type metadata accessor for WorkoutProgramPreview();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      *v16 = *v17;
      v16[1] = v17[1];
      v23 = *(int *)(v18 + 20);
      v45 = (char *)v17 + v23;
      v46 = (char *)v16 + v23;
      v24 = sub_23C34D950();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v46, v45, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v22)
  {
    sub_23C283550((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
LABEL_11:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_12;
  }
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(int *)(v18 + 20);
  v41 = (char *)v16 + v40;
  v42 = (char *)v17 + v40;
  v43 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
LABEL_12:
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[10];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  v35 = v34(a1 + v31, 1, v11);
  v36 = v34((uint64_t)v33, 1, v11);
  if (!v35)
  {
    if (!v36)
    {
      v44 = (uint64_t)v32;
      v38 = v48;
      v48(v44, (uint64_t)v33, v11);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v32, v11);
    goto LABEL_17;
  }
  if (v36)
  {
LABEL_17:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v32, v33, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v32, 0, 1, v11);
LABEL_18:
  v38 = v48;
LABEL_19:
  v38(a1 + a3[11], a2 + a3[11], v11);
  v38(a1 + a3[12], a2 + a3[12], v11);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WorkoutProgram(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  char *v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B5A3E8;
  else
    v6 = (uint64_t *)&unk_256B5A3E0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23C34D86C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v14 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[8];
  v16 = (_OWORD *)(a1 + v15);
  v17 = (_OWORD *)(a2 + v15);
  v18 = type metadata accessor for WorkoutProgramPreview();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v21 = *(int *)(v18 + 20);
    v33 = (char *)v16 + v21;
    v22 = (char *)v17 + v21;
    v23 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v33, v22, v23);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = a3[10];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v28, 1, v11))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v13((uint64_t)v29, (uint64_t)v30, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  v13(a1 + a3[11], a2 + a3[11], v11);
  v13(a1 + a3[12], a2 + a3[12], v11);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for WorkoutProgram(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_23C285184(a1, &qword_256B5A360);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B5A3E8;
    else
      v6 = (uint64_t *)&unk_256B5A3E0;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23C34D86C();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40);
  v50(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for WorkoutProgramPreview();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v25 = *(int *)(v20 + 20);
      v26 = (char *)v18 + v25;
      v27 = (char *)v19 + v25;
      v28 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v24)
  {
    sub_23C283550((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutProgramPreview);
LABEL_11:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_12;
  }
  v43 = v19[1];
  *v18 = *v19;
  v18[1] = v43;
  swift_bridgeObjectRelease();
  v44 = *(int *)(v20 + 20);
  v45 = (char *)v18 + v44;
  v46 = (char *)v19 + v44;
  v47 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
LABEL_12:
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23C34D950();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  v34 = a3[10];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  v38 = v37(a1 + v34, 1, v11);
  v39 = v37((uint64_t)v36, 1, v11);
  if (!v38)
  {
    if (!v39)
    {
      v48 = (uint64_t)v35;
      v41 = v50;
      v50(v48, (uint64_t)v36, v11);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v49 + 8))(v35, v11);
    goto LABEL_17;
  }
  if (v39)
  {
LABEL_17:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v35, v36, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v35, 0, 1, v11);
LABEL_18:
  v41 = v50;
LABEL_19:
  v41(a1 + a3[11], a2 + a3[11], v11);
  v41(a1 + a3[12], a2 + a3[12], v11);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutProgram()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E935C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23C34D86C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[8];
    }
    else
    {
      v17 = sub_23C34D950();
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[9];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[10];
      }
    }
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutProgram()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2E948C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A360);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23C34D86C();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A368);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v17 = sub_23C34D950();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[9];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[10];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C2E95AC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23C2E96CC();
  if (v0 <= 0x3F)
  {
    sub_23C34D86C();
    if (v1 <= 0x3F)
    {
      sub_23C2906B4(319, &qword_256B5A468, (void (*)(uint64_t))type metadata accessor for WorkoutProgramPreview);
      if (v2 <= 0x3F)
      {
        sub_23C34D950();
        if (v3 <= 0x3F)
        {
          sub_23C2906B4(319, (unint64_t *)&qword_256B5A470, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23C2E96CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B5A458)
  {
    type metadata accessor for WorkoutProgramArtwork();
    sub_23C27FEE4(&qword_256B5A460, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutProgramArtwork, (uint64_t)&protocol conformance descriptor for WorkoutProgramArtwork);
    v0 = sub_23C34DAB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B5A458);
  }
}

uint64_t getEnumTagSinglePayload for WorkoutProgram.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutProgram.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23C2E9820 + 4 * byte_23C35703F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23C2E9854 + 4 * byte_23C35703A[v4]))();
}

uint64_t sub_23C2E9854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E985C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2E9864);
  return result;
}

uint64_t sub_23C2E9870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2E9878);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23C2E987C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2E9884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutProgram.CodingKeys()
{
  return &type metadata for WorkoutProgram.CodingKeys;
}

unint64_t sub_23C2E98A4()
{
  unint64_t result;

  result = qword_256B5A4C0;
  if (!qword_256B5A4C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3571DC, &type metadata for WorkoutProgram.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A4C0);
  }
  return result;
}

unint64_t sub_23C2E98EC()
{
  unint64_t result;

  result = qword_256B5A4C8;
  if (!qword_256B5A4C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35714C, &type metadata for WorkoutProgram.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A4C8);
  }
  return result;
}

unint64_t sub_23C2E9934()
{
  unint64_t result;

  result = qword_256B5A4D0;
  if (!qword_256B5A4D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357174, &type metadata for WorkoutProgram.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A4D0);
  }
  return result;
}

uint64_t sub_23C2E9978(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C361620 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736B6E696CLL && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77656976657270 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x55676E6972616873 && a2 == 0xEA00000000004C52 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023C361A80)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23C2E9D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutProgramPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EditorialDetailState.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EditorialDetailState.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EditorialDetailState();
  return sub_23C282F90(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLayout);
}

uint64_t type metadata accessor for EditorialDetailState()
{
  uint64_t result;

  result = qword_256B5A5A0;
  if (!qword_256B5A5A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EditorialDetailState.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EditorialDetailState() + 24);
  v4 = sub_23C34DA34();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EditorialDetailState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EditorialDetailState();
  return sub_23C282F90(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
}

uint64_t EditorialDetailState.loadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EditorialDetailState() + 28);
  return sub_23C2E9ED4(a1, v3);
}

uint64_t sub_23C2E9ED4(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for EditorialDetailLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*EditorialDetailState.loadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for EditorialDetailState();
  return nullsub_1;
}

uint64_t EditorialDetailState.init(identifier:layout:loadState:locale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *v10;
  char *v11;
  uint64_t v12;

  *a6 = a1;
  a6[1] = a2;
  v10 = (int *)type metadata accessor for EditorialDetailState();
  sub_23C2851C0(a3, (uint64_t)a6 + v10[5], (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLayout);
  sub_23C2851C0(a4, (uint64_t)a6 + v10[7], (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  v11 = (char *)a6 + v10[6];
  v12 = sub_23C34DA34();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a5, v12);
}

uint64_t sub_23C2E9FDC(char a1)
{
  return *(_QWORD *)&aIdentifilayout_0[8 * a1];
}

uint64_t sub_23C2E9FFC()
{
  char *v0;

  return sub_23C2E9FDC(*v0);
}

uint64_t sub_23C2EA004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2EC52C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2EA028()
{
  sub_23C2EA290();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EA050()
{
  sub_23C2EA290();
  return sub_23C34ECDC();
}

uint64_t EditorialDetailState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A4F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2EA290();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34EC10();
  if (!v1)
  {
    type metadata accessor for EditorialDetailState();
    v8[14] = 1;
    type metadata accessor for EditorialDetailLayout();
    sub_23C27FEE4(&qword_256B5A500, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailLayout, (uint64_t)&protocol conformance descriptor for EditorialDetailLayout);
    sub_23C34EC40();
    v8[13] = 2;
    sub_23C34DA34();
    sub_23C27FEE4(&qword_256B576D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C34EC40();
    v8[12] = 3;
    type metadata accessor for EditorialDetailLoadState();
    sub_23C27FEE4(&qword_256B5A508, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailLoadState, (uint64_t)&protocol conformance descriptor for EditorialDetailLoadState);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2EA290()
{
  unint64_t result;

  result = qword_256B5A4F8;
  if (!qword_256B5A4F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C357444, &type metadata for EditorialDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A4F8);
  }
  return result;
}

uint64_t EditorialDetailState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t State;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v23 = a2;
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C34DA34();
  v5 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  v28 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for EditorialDetailLayout();
  MEMORY[0x24BDAC7A8](v29);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A510);
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditorialDetailState();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2EA290();
  v31 = v11;
  v15 = (uint64_t)v32;
  sub_23C34ECB8();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v30;
  v32 = a1;
  v36 = 0;
  *v14 = sub_23C34EB80();
  v14[1] = v17;
  v35 = 1;
  sub_23C27FEE4(&qword_256B5A518, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailLayout, (uint64_t)&protocol conformance descriptor for EditorialDetailLayout);
  sub_23C34EBB0();
  v18 = v12;
  sub_23C2851C0((uint64_t)v8, (uint64_t)v14 + *(int *)(v12 + 20), (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLayout);
  v34 = 2;
  sub_23C27FEE4(&qword_256B57708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v19 = v26;
  v20 = v27;
  v29 = 0;
  sub_23C34EBB0();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v14 + *(int *)(v18 + 24), v19, v20);
  v33 = 3;
  sub_23C27FEE4(&qword_256B5A520, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailLoadState, (uint64_t)&protocol conformance descriptor for EditorialDetailLoadState);
  v21 = (uint64_t)v25;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v16);
  sub_23C2851C0(v21, (uint64_t)v14 + *(int *)(v18 + 28), (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  sub_23C282F90((uint64_t)v14, v23, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_23C283550((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailState);
}

uint64_t sub_23C2EA708@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialDetailState.init(from:)(a1, a2);
}

uint64_t sub_23C2EA71C(_QWORD *a1)
{
  return EditorialDetailState.encode(to:)(a1);
}

uint64_t EditorialDetailState.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t State;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for EditorialDetailState();
  sub_23C34DC38();
  sub_23C27FEE4(&qword_256B5A528, (uint64_t (*)(uint64_t))MEMORY[0x24BE34B98], MEMORY[0x24BE34BB0]);
  sub_23C34E838();
  type metadata accessor for EditorialDetailLayout();
  sub_23C34EC88();
  sub_23C34DA34();
  sub_23C27FEE4(&qword_256B5A530, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23C34E838();
  sub_23C282F90(v1 + *(int *)(v9 + 28), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 2, v10))
    return sub_23C34EC88();
  sub_23C2851C0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  sub_23C34EC88();
  EditorialDetailContent.hash(into:)(a1);
  return sub_23C283550((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
}

uint64_t EditorialDetailState.hashValue.getter()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailState.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2EA980()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailState.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2EA9C0()
{
  __int128 v1[4];

  sub_23C34EC7C();
  EditorialDetailState.hash(into:)(v1);
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail09EditorialC5StateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_23C34EC64() & 1) != 0)
    && (v5 = (int *)type metadata accessor for EditorialDetailState(),
        v6 = v5[5],
        v7 = (char *)a1 + v6,
        v8 = (char *)a2 + v6,
        (MEMORY[0x24261B310]((char *)a1 + v6, (char *)a2 + v6) & 1) != 0)
    && (v9 = type metadata accessor for EditorialDetailLayout(), v7[*(int *)(v9 + 20)] == v8[*(int *)(v9 + 20)])
    && (MEMORY[0x24261B124]((char *)a1 + v5[6], (char *)a2 + v5[6]) & 1) != 0)
  {
    return _s20FitnessProductDetail09EditorialC9LoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5[7], (uint64_t)a2 + v5[7]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23C2EAACC()
{
  return sub_23C27FEE4(&qword_256B5A540, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailState, (uint64_t)&protocol conformance descriptor for EditorialDetailState);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialDetailState(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t State;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *__dst;
  uint64_t v59;
  uint64_t v60;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34DC38();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = type metadata accessor for EditorialDetailLayout();
    v9[*(int *)(v13 + 20)] = v10[*(int *)(v13 + 20)];
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23C34DA34();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 2, v21))
    {
      State = type metadata accessor for EditorialDetailLoadState();
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      v59 = v22;
      v60 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v25 = (uint64_t *)&unk_256B5A168;
      else
        v25 = (uint64_t *)&unk_256B5A160;
      v26 = __swift_instantiateConcreteTypeFromMangledName(v25);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v19, v20, v26);
      swift_storeEnumTagMultiPayload();
      v27 = (int *)type metadata accessor for EditorialDetailContent();
      *(_QWORD *)&v19[v27[5]] = *(_QWORD *)&v20[v27[5]];
      v28 = v27[6];
      v29 = &v19[v28];
      v30 = &v20[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = v27[7];
      v33 = &v19[v32];
      v34 = &v20[v32];
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v36 = v27[8];
      __dst = &v19[v36];
      v37 = &v20[v36];
      v38 = type metadata accessor for EditorialPreview();
      v57 = *(_QWORD *)(v38 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v37, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v41 = *((_QWORD *)v37 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v37;
        *((_QWORD *)__dst + 1) = v41;
        v42 = *(int *)(v38 + 20);
        v56 = &__dst[v42];
        v43 = &v37[v42];
        v44 = sub_23C34D950();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v56, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v38);
      }
      v46 = v27[9];
      v47 = &v19[v46];
      v48 = &v20[v46];
      v49 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      v50 = v27[10];
      v51 = &v19[v50];
      v52 = &v20[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      *(_QWORD *)&v19[v27[11]] = *(_QWORD *)&v20[v27[11]];
      v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v19, 0, 2, v60);
    }
  }
  return v4;
}

uint64_t destroy for EditorialDetailState(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23C34DC38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 2, v9);
  if (!(_DWORD)result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v11 = (uint64_t *)&unk_256B5A168;
    else
      v11 = (uint64_t *)&unk_256B5A160;
    v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
    v13 = type metadata accessor for EditorialDetailContent();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v8 + *(int *)(v13 + 32);
    v15 = type metadata accessor for EditorialPreview();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      v16 = v14 + *(int *)(v15 + 20);
      v17 = sub_23C34D950();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
    v18 = v8 + *(int *)(v13 + 36);
    v19 = sub_23C34D950();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for EditorialDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t State;
  uint64_t *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *__dst;
  uint64_t v57;
  uint64_t v58;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DC38();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = type metadata accessor for EditorialDetailLayout();
  v8[*(int *)(v12 + 20)] = v9[*(int *)(v12 + 20)];
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 2, v20))
  {
    State = type metadata accessor for EditorialDetailLoadState();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v57 = v21;
    v58 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v23 = (uint64_t *)&unk_256B5A168;
    else
      v23 = (uint64_t *)&unk_256B5A160;
    v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
    swift_storeEnumTagMultiPayload();
    v25 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&v18[v25[5]] = *(_QWORD *)&v19[v25[5]];
    v26 = v25[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v25[7];
    v31 = &v18[v30];
    v32 = &v19[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v25[8];
    __dst = &v18[v34];
    v35 = &v19[v34];
    v36 = type metadata accessor for EditorialPreview();
    v55 = *(_QWORD *)(v36 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = *((_QWORD *)v35 + 1);
      *(_QWORD *)__dst = *(_QWORD *)v35;
      *((_QWORD *)__dst + 1) = v39;
      v40 = *(int *)(v36 + 20);
      v54 = &__dst[v40];
      v41 = &v35[v40];
      v42 = sub_23C34D950();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v54, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v36);
    }
    v44 = v25[9];
    v45 = &v18[v44];
    v46 = &v19[v44];
    v47 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = v25[10];
    v49 = &v18[v48];
    v50 = &v19[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    *(_QWORD *)&v18[v25[11]] = *(_QWORD *)&v19[v25[11]];
    v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52(v18, 0, 2, v58);
  }
  return a1;
}

_QWORD *assignWithCopy for EditorialDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t State;
  uint64_t *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  char *__dst;
  char *__dsta;
  uint64_t v88;
  char *v89;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = type metadata accessor for EditorialDetailLayout();
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 2, v18);
  v22 = v20(v17, 2, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_23C285184((uint64_t)v16, &qword_256B5A538);
      goto LABEL_10;
    }
    if (a1 != a2)
    {
      sub_23C285184((uint64_t)v16, &qword_256B5A0C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v37 = (uint64_t *)&unk_256B5A168;
      else
        v37 = (uint64_t *)&unk_256B5A160;
      v38 = __swift_instantiateConcreteTypeFromMangledName(v37);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v16, v17, v38);
      swift_storeEnumTagMultiPayload();
    }
    v39 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&v16[v39[5]] = *(_QWORD *)&v17[v39[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v40 = v39[6];
    v41 = &v16[v40];
    v42 = &v17[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v43 = v39[7];
    v44 = &v16[v43];
    v45 = &v17[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = v39[8];
    v47 = &v16[v46];
    v48 = &v17[v46];
    v49 = type metadata accessor for EditorialPreview();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    v52 = v51(v47, 1, v49);
    v53 = v51(v48, 1, v49);
    if (v52)
    {
      if (!v53)
      {
        *(_QWORD *)v47 = *(_QWORD *)v48;
        *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
        v54 = *(int *)(v49 + 20);
        __dsta = &v48[v54];
        v89 = &v47[v54];
        v55 = sub_23C34D950();
        v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v89, __dsta, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
LABEL_24:
        v70 = v39[9];
        v71 = &v16[v70];
        v72 = &v17[v70];
        v73 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 24))(v71, v72, v73);
        v74 = v39[10];
        v75 = &v16[v74];
        v76 = &v17[v74];
        *(_QWORD *)v75 = *(_QWORD *)v76;
        *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v16[v39[11]] = *(_QWORD *)&v17[v39[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v53)
      {
        *(_QWORD *)v47 = *(_QWORD *)v48;
        *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v78 = *(int *)(v49 + 20);
        v79 = &v47[v78];
        v80 = &v48[v78];
        v81 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v79, v80, v81);
        goto LABEL_24;
      }
      sub_23C283550((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    }
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_24;
  }
  if (v22)
  {
LABEL_10:
    State = type metadata accessor for EditorialDetailLoadState();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    return a1;
  }
  v88 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v23 = (uint64_t *)&unk_256B5A168;
  else
    v23 = (uint64_t *)&unk_256B5A160;
  v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v16, v17, v24);
  swift_storeEnumTagMultiPayload();
  v25 = (int *)type metadata accessor for EditorialDetailContent();
  *(_QWORD *)&v16[v25[5]] = *(_QWORD *)&v17[v25[5]];
  v26 = v25[6];
  v27 = &v16[v26];
  v28 = &v17[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  v29 = v25[7];
  v30 = &v16[v29];
  v31 = &v17[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  v32 = v25[8];
  __dst = &v16[v32];
  v33 = &v17[v32];
  v34 = type metadata accessor for EditorialPreview();
  v83 = *(_QWORD *)(v34 - 8);
  v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v84(v33, 1, v34))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)v33;
    *((_QWORD *)__dst + 1) = *((_QWORD *)v33 + 1);
    v82 = v34;
    v57 = *(int *)(v34 + 20);
    v85 = &__dst[v57];
    v58 = &v33[v57];
    v59 = sub_23C34D950();
    v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v60(v85, v58, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(__dst, 0, 1, v82);
  }
  v61 = v25[9];
  v62 = &v16[v61];
  v63 = &v17[v61];
  v64 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
  v65 = v25[10];
  v66 = &v16[v65];
  v67 = &v17[v65];
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
  *(_QWORD *)&v16[v25[11]] = *(_QWORD *)&v17[v25[11]];
  v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68(v16, 0, 2, v18);
  return a1;
}

_OWORD *initializeWithTake for EditorialDetailState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t State;
  uint64_t *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v38;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = type metadata accessor for EditorialDetailLayout();
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 2, v18))
  {
    State = type metadata accessor for EditorialDetailLoadState();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v21 = (uint64_t *)&unk_256B5A168;
    else
      v21 = (uint64_t *)&unk_256B5A160;
    v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
    swift_storeEnumTagMultiPayload();
    v23 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&v16[v23[5]] = *(_QWORD *)&v17[v23[5]];
    *(_OWORD *)&v16[v23[6]] = *(_OWORD *)&v17[v23[6]];
    *(_OWORD *)&v16[v23[7]] = *(_OWORD *)&v17[v23[7]];
    v24 = v23[8];
    v25 = &v16[v24];
    v26 = &v17[v24];
    v27 = type metadata accessor for EditorialPreview();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
      v30 = *(int *)(v27 + 20);
      v38 = &v25[v30];
      v31 = &v26[v30];
      v32 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v38, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v33 = v23[9];
    v34 = &v16[v33];
    v35 = &v17[v33];
    v36 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    *(_OWORD *)&v16[v23[10]] = *(_OWORD *)&v17[v23[10]];
    *(_QWORD *)&v16[v23[11]] = *(_QWORD *)&v17[v23[11]];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 2, v18);
  }
  return a1;
}

_QWORD *assignWithTake for EditorialDetailState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t State;
  uint64_t *v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for EditorialDetailLayout();
  v8[*(int *)(v11 + 20)] = v9[*(int *)(v11 + 20)];
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 2, v19);
  v23 = v21(v18, 2, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_23C285184((uint64_t)v17, &qword_256B5A538);
      goto LABEL_10;
    }
    if (a1 != a2)
    {
      sub_23C285184((uint64_t)v17, &qword_256B5A0C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v34 = (uint64_t *)&unk_256B5A168;
      else
        v34 = (uint64_t *)&unk_256B5A160;
      v35 = __swift_instantiateConcreteTypeFromMangledName(v34);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v17, v18, v35);
      swift_storeEnumTagMultiPayload();
    }
    v36 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&v17[v36[5]] = *(_QWORD *)&v18[v36[5]];
    swift_bridgeObjectRelease();
    v37 = v36[6];
    v38 = &v17[v37];
    v39 = &v18[v37];
    v41 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = v41;
    *((_QWORD *)v38 + 1) = v40;
    swift_bridgeObjectRelease();
    v42 = v36[7];
    v43 = &v17[v42];
    v44 = &v18[v42];
    v46 = *(_QWORD *)v44;
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = v46;
    *((_QWORD *)v43 + 1) = v45;
    swift_bridgeObjectRelease();
    v47 = v36[8];
    v48 = &v17[v47];
    v49 = &v18[v47];
    v50 = type metadata accessor for EditorialPreview();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    v53 = v52(v48, 1, v50);
    v54 = v52(v49, 1, v50);
    if (v53)
    {
      if (!v54)
      {
        *(_OWORD *)v48 = *(_OWORD *)v49;
        v55 = *(int *)(v50 + 20);
        v56 = &v48[v55];
        v57 = &v49[v55];
        v58 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
LABEL_24:
        v67 = v36[9];
        v68 = &v17[v67];
        v69 = &v18[v67];
        v70 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
        v71 = v36[10];
        v72 = &v17[v71];
        v73 = &v18[v71];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        *(_QWORD *)v72 = v75;
        *((_QWORD *)v72 + 1) = v74;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v17[v36[11]] = *(_QWORD *)&v18[v36[11]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v54)
      {
        v77 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v77;
        swift_bridgeObjectRelease();
        v78 = *(int *)(v50 + 20);
        v79 = &v48[v78];
        v80 = &v49[v78];
        v81 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 40))(v79, v80, v81);
        goto LABEL_24;
      }
      sub_23C283550((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    }
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_24;
  }
  if (v23)
  {
LABEL_10:
    State = type metadata accessor for EditorialDetailLoadState();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    return a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v24 = (uint64_t *)&unk_256B5A168;
  else
    v24 = (uint64_t *)&unk_256B5A160;
  v25 = __swift_instantiateConcreteTypeFromMangledName(v24);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v17, v18, v25);
  swift_storeEnumTagMultiPayload();
  v26 = (int *)type metadata accessor for EditorialDetailContent();
  *(_QWORD *)&v17[v26[5]] = *(_QWORD *)&v18[v26[5]];
  *(_OWORD *)&v17[v26[6]] = *(_OWORD *)&v18[v26[6]];
  *(_OWORD *)&v17[v26[7]] = *(_OWORD *)&v18[v26[7]];
  v27 = v26[8];
  v28 = &v17[v27];
  v29 = &v18[v27];
  v30 = type metadata accessor for EditorialPreview();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
    v59 = *(int *)(v30 + 20);
    v82 = &v28[v59];
    v60 = &v29[v59];
    v61 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v82, v60, v61);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v62 = v26[9];
  v63 = &v17[v62];
  v64 = &v18[v62];
  v65 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  *(_OWORD *)&v17[v26[10]] = *(_OWORD *)&v18[v26[10]];
  *(_QWORD *)&v17[v26[11]] = *(_QWORD *)&v18[v26[11]];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 2, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialDetailState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2EC14C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t State;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for EditorialDetailLayout();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      State = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_23C34DA34();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        State = v12;
        v11 = a3[6];
      }
      else
      {
        State = type metadata accessor for EditorialDetailLoadState();
        v9 = *(_QWORD *)(State - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, State);
  }
}

uint64_t storeEnumTagSinglePayload for EditorialDetailState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2EC21C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t State;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for EditorialDetailLayout();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      State = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_23C34DA34();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        State = v12;
        v11 = a4[6];
      }
      else
      {
        State = type metadata accessor for EditorialDetailLoadState();
        v9 = *(_QWORD *)(State - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, State);
  }
  return result;
}

uint64_t sub_23C2EC2DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for EditorialDetailLayout();
  if (v1 <= 0x3F)
  {
    result = sub_23C34DA34();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for EditorialDetailLoadState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2EC3D4 + 4 * byte_23C357265[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2EC408 + 4 * byte_23C357260[v4]))();
}

uint64_t sub_23C2EC408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2EC410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2EC418);
  return result;
}

uint64_t sub_23C2EC424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2EC42CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2EC430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2EC438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailState.CodingKeys()
{
  return &type metadata for EditorialDetailState.CodingKeys;
}

unint64_t sub_23C2EC458()
{
  unint64_t result;

  result = qword_256B5A5E0;
  if (!qword_256B5A5E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35741C, &type metadata for EditorialDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A5E0);
  }
  return result;
}

unint64_t sub_23C2EC4A0()
{
  unint64_t result;

  result = qword_256B5A5E8;
  if (!qword_256B5A5E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35738C, &type metadata for EditorialDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A5E8);
  }
  return result;
}

unint64_t sub_23C2EC4E8()
{
  unint64_t result;

  result = qword_256B5A5F0;
  if (!qword_256B5A5F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3573B4, &type metadata for EditorialDetailState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A5F0);
  }
  return result;
}

uint64_t sub_23C2EC52C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t EditorialArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C28950C(v1, a1, &qword_256B57E18);
}

uint64_t EditorialArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EditorialArtwork();
  return sub_23C28950C(v1 + *(int *)(v3 + 20), a1, &qword_256B57E20);
}

uint64_t type metadata accessor for EditorialArtwork()
{
  uint64_t result;

  result = qword_256B5A688;
  if (!qword_256B5A688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EditorialArtwork.init(backgroundColor:templateURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_23C2894C8(a1, a3, &qword_256B57E18);
  v5 = type metadata accessor for EditorialArtwork();
  return sub_23C2894C8(a2, a3 + *(int *)(v5 + 20), &qword_256B57E20);
}

uint64_t sub_23C2EC7B8()
{
  sub_23C2EC98C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EC7E0()
{
  sub_23C2EC98C();
  return sub_23C34ECDC();
}

uint64_t EditorialArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A5F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2EC98C();
  sub_23C34ECC4();
  v8[15] = 0;
  sub_23C34DA94();
  sub_23C27FEE4(&qword_256B58100, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C34EC04();
  if (!v1)
  {
    type metadata accessor for EditorialArtwork();
    v8[14] = 1;
    sub_23C34D950();
    sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC04();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C2EC98C()
{
  unint64_t result;

  result = qword_256B5A600;
  if (!qword_256B5A600)
  {
    result = MEMORY[0x24261C66C](&unk_23C3576D4, &type metadata for EditorialArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A600);
  }
  return result;
}

uint64_t EditorialArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v22 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A608);
  v8 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EditorialArtwork();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2EC98C();
  sub_23C34ECB8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v14 = v8;
  v15 = (uint64_t)v13;
  v16 = (uint64_t)v23;
  sub_23C34DA94();
  v27 = 0;
  sub_23C27FEE4(&qword_256B58118, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  v18 = (uint64_t)v24;
  v17 = v25;
  sub_23C34EB74();
  sub_23C2894C8(v18, v15, &qword_256B57E18);
  sub_23C34D950();
  v26 = 1;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EB74();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v17);
  sub_23C2894C8(v16, v15 + *(int *)(v11 + 20), &qword_256B57E20);
  sub_23C2ECCAC(v15, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_23C2ECCF0(v15);
}

uint64_t sub_23C2ECCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditorialArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2ECCF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EditorialArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2ECD2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialArtwork.init(from:)(a1, a2);
}

uint64_t sub_23C2ECD40(_QWORD *a1)
{
  return EditorialArtwork.encode(to:)(a1);
}

uint64_t EditorialArtwork.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  char *v19;

  v1 = v0;
  v2 = sub_23C34D950();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C34DA94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C28950C(v1, (uint64_t)v14, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v15 = type metadata accessor for EditorialArtwork();
  sub_23C28950C(v1 + *(int *)(v15 + 20), (uint64_t)v7, &qword_256B57E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
    return sub_23C34EC94();
  v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
  sub_23C34EC94();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
}

uint64_t EditorialArtwork.hashValue.getter()
{
  sub_23C34EC7C();
  EditorialArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2ED010()
{
  sub_23C34EC7C();
  EditorialArtwork.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2ED050()
{
  sub_23C34EC7C();
  EditorialArtwork.hash(into:)();
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail16EditorialArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = sub_23C34D950();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58200);
  MEMORY[0x24BDAC7A8](v51);
  v57 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v47 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t)&v47 - v11;
  v12 = sub_23C34DA94();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v50 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58208);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v47 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v47 - v25;
  v52 = a1;
  sub_23C28950C(a1, (uint64_t)&v47 - v25, &qword_256B57E18);
  v54 = a2;
  sub_23C28950C(a2, (uint64_t)v23, &qword_256B57E18);
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_23C28950C((uint64_t)v26, (uint64_t)v17, &qword_256B57E18);
  sub_23C28950C((uint64_t)v23, v27, &qword_256B57E18);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v28((uint64_t)v17, 1, v12) != 1)
  {
    sub_23C28950C((uint64_t)v17, (uint64_t)v20, &qword_256B57E18);
    if (v28(v27, 1, v12) != 1)
    {
      v31 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v50, v27, v12);
      sub_23C27FEE4(&qword_256B58218, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
      v32 = sub_23C34E850();
      v33 = *(void (**)(char *, uint64_t))(v13 + 8);
      v33(v31, v12);
      sub_23C285184((uint64_t)v23, &qword_256B57E18);
      sub_23C285184((uint64_t)v26, &qword_256B57E18);
      v33(v20, v12);
      sub_23C285184((uint64_t)v17, &qword_256B57E18);
      if ((v32 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    sub_23C285184((uint64_t)v23, &qword_256B57E18);
    sub_23C285184((uint64_t)v26, &qword_256B57E18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_6:
    v29 = &qword_256B58208;
    v30 = (uint64_t)v17;
LABEL_14:
    sub_23C285184(v30, v29);
    return 0;
  }
  sub_23C285184((uint64_t)v23, &qword_256B57E18);
  sub_23C285184((uint64_t)v26, &qword_256B57E18);
  if (v28(v27, 1, v12) != 1)
    goto LABEL_6;
  sub_23C285184((uint64_t)v17, &qword_256B57E18);
LABEL_8:
  v34 = type metadata accessor for EditorialArtwork();
  v35 = v55;
  sub_23C28950C(v52 + *(int *)(v34 + 20), v55, &qword_256B57E20);
  v36 = v53;
  sub_23C28950C(v54 + *(int *)(v34 + 20), v53, &qword_256B57E20);
  v37 = v57;
  v38 = v57 + *(int *)(v51 + 48);
  sub_23C28950C(v35, v57, &qword_256B57E20);
  sub_23C28950C(v36, v38, &qword_256B57E20);
  v39 = v56;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  v41 = v58;
  if (v40(v37, 1, v58) == 1)
  {
    sub_23C285184(v36, &qword_256B57E20);
    sub_23C285184(v35, &qword_256B57E20);
    if (v40(v38, 1, v41) == 1)
    {
      sub_23C285184(v37, &qword_256B57E20);
      return 1;
    }
    goto LABEL_13;
  }
  v42 = v49;
  sub_23C28950C(v37, v49, &qword_256B57E20);
  if (v40(v38, 1, v41) == 1)
  {
    sub_23C285184(v36, &qword_256B57E20);
    sub_23C285184(v35, &qword_256B57E20);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
LABEL_13:
    v29 = &qword_256B58200;
    v30 = v37;
    goto LABEL_14;
  }
  v44 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v48, v38, v41);
  sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v45 = sub_23C34E850();
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v44, v41);
  sub_23C285184(v36, &qword_256B57E20);
  sub_23C285184(v35, &qword_256B57E20);
  v46((char *)v42, v41);
  sub_23C285184(v37, &qword_256B57E20);
  return (v45 & 1) != 0;
}

uint64_t sub_23C2ED670()
{
  return sub_23C27FEE4(&qword_256B5A610, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
}

uint64_t sub_23C2ED69C()
{
  return sub_23C27FEE4(&qword_256B5A618, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
}

uint64_t sub_23C2ED6C8()
{
  return sub_23C27FEE4(&qword_256B5A620, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
}

uint64_t sub_23C2ED6F4()
{
  return sub_23C27FEE4(&qword_256B5A628, (uint64_t (*)(uint64_t))type metadata accessor for EditorialArtwork, (uint64_t)&protocol conformance descriptor for EditorialArtwork);
}

uint64_t getEnumTagSinglePayload for EditorialArtwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2ED72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EditorialArtwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2ED7B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for EditorialArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2ED884 + 4 * byte_23C3574E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2ED8B8 + 4 * byte_23C3574E0[v4]))();
}

uint64_t sub_23C2ED8B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2ED8C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2ED8C8);
  return result;
}

uint64_t sub_23C2ED8D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2ED8DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2ED8E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2ED8E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialArtwork.CodingKeys()
{
  return &type metadata for EditorialArtwork.CodingKeys;
}

unint64_t sub_23C2ED908()
{
  unint64_t result;

  result = qword_256B5A6C0;
  if (!qword_256B5A6C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3576AC, &type metadata for EditorialArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A6C0);
  }
  return result;
}

unint64_t sub_23C2ED950()
{
  unint64_t result;

  result = qword_256B5A6C8;
  if (!qword_256B5A6C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35761C, &type metadata for EditorialArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A6C8);
  }
  return result;
}

unint64_t sub_23C2ED998()
{
  unint64_t result;

  result = qword_256B5A6D0;
  if (!qword_256B5A6D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357644, &type metadata for EditorialArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A6D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReversedTitleIconLabelStyle()
{
  return &type metadata for ReversedTitleIconLabelStyle;
}

uint64_t sub_23C2ED9EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2ED9FC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  char *v23;

  v23 = a1;
  v1 = sub_23C34E0A0();
  v22 = *(_QWORD *)(v1 - 8);
  v2 = v22;
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - v6;
  v8 = sub_23C34E0B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - v13;
  sub_23C34E0C4();
  sub_23C34E0AC();
  v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v4, v7, v1);
  v17 = v23;
  v15(v23, v11, v8);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A6E0);
  v16(&v17[*(int *)(v18 + 48)], v4, v1);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v7, v1);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  v19(v4, v1);
  return ((uint64_t (*)(char *, uint64_t))v20)(v11, v8);
}

uint64_t sub_23C2EDB9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  *(_QWORD *)a1 = sub_23C34DF5C();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A6D8);
  return sub_23C2ED9FC((char *)(a1 + *(int *)(v4 + 44)));
}

unint64_t sub_23C2EDBF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B5A6E8;
  if (!qword_256B5A6E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A6F0);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_256B5A6E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutScheduleBannerLabelStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutScheduleBannerLabelStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2EDD2C + 4 * byte_23C357795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2EDD60 + 4 * byte_23C357790[v4]))();
}

uint64_t sub_23C2EDD60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2EDD68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2EDD70);
  return result;
}

uint64_t sub_23C2EDD7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2EDD84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2EDD88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2EDD90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutScheduleBannerLabelStyle()
{
  return &type metadata for WorkoutScheduleBannerLabelStyle;
}

uint64_t sub_23C2EDDAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C2EDDBC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C34EA30();
    v31 = (void *)sub_23C34E13C();
    sub_23C34DCBC();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_23C34DE84();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_23C289550(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23C2EDF9C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  const void *v13;
  const void *v14;
  uint64_t v15;
  void *v24;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v14 = v13;
  v15 = a9;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C34EA30();
    v24 = (void *)sub_23C34E13C();
    sub_23C34DCBC();

    v15 = a9;
  }
  sub_23C34DE84();
  memcpy((void *)v15, v14, 0x158uLL);
  *(_OWORD *)(v15 + 408) = v31;
  *(_OWORD *)(v15 + 424) = v32;
  *(_OWORD *)(v15 + 440) = v33;
  *(_OWORD *)(v15 + 344) = v27;
  *(_OWORD *)(v15 + 360) = v28;
  *(_OWORD *)(v15 + 376) = v29;
  *(_OWORD *)(v15 + 392) = v30;
  return sub_23C2EEB4C((uint64_t)v14);
}

double sub_23C2EE14C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23C2EE1A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256B5A748, &qword_256B5A750).n128_u64[0];
  return result;
}

__n128 sub_23C2EE1A4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C34EA30();
    v28 = (void *)sub_23C34E13C();
    sub_23C34DCBC();

    v19 = a17;
  }
  sub_23C34DE84();
  sub_23C28950C(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_23C2EE370@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = sub_23C34E520();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A6F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A700);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A708);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = sub_23C34DF5C();
  *((_QWORD *)v9 + 1) = 0x4024000000000000;
  v9[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A710);
  sub_23C2EE608(a1, (uint64_t)&v9[*(int *)(v16 + 44)]);
  LOBYTE(a1) = sub_23C34E178();
  sub_23C28950C((uint64_t)v9, (uint64_t)v12, &qword_256B5A6F8);
  v17 = &v12[*(int *)(v10 + 36)];
  *v17 = a1;
  *(_OWORD *)(v17 + 8) = xmmword_23C357830;
  *(_OWORD *)(v17 + 24) = xmmword_23C357830;
  v17[40] = 0;
  sub_23C285184((uint64_t)v9, &qword_256B5A6F8);
  v18 = sub_23C34E6F4();
  sub_23C2EE1A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v18, v19, &qword_256B5A700, &qword_256B5A708);
  sub_23C285184((uint64_t)v12, &qword_256B5A700);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3C28], v3);
  v20 = MEMORY[0x24261BC64](v6, 0.149019608, 0.149019608, 0.160784314, 1.0);
  LOBYTE(v12) = sub_23C34E178();
  v21 = v25;
  sub_23C28950C((uint64_t)v15, v25, &qword_256B5A708);
  v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5A718) + 36);
  *(_QWORD *)v22 = v20;
  *(_BYTE *)(v22 + 8) = (_BYTE)v12;
  return sub_23C285184((uint64_t)v15, &qword_256B5A708);
}

uint64_t sub_23C2EE608@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v48 = a1;
  v58 = a2;
  v55 = sub_23C34E25C();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v51 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23C34E0B8();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A720);
  MEMORY[0x24BDAC7A8](v50);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)&v45 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A728);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23C34E0A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A730);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A738);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v45 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v47 = (uint64_t)&v45 - v23;
  sub_23C34E0AC();
  v24 = sub_23C34E208();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
  v25 = sub_23C34E22C();
  sub_23C285184((uint64_t)v10, &qword_256B5A728);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  v27 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  *v27 = KeyPath;
  v27[1] = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v48 & 1) != 0)
    v28 = sub_23C34E544();
  else
    v28 = sub_23C34E55C();
  v29 = v28;
  sub_23C28950C((uint64_t)v17, (uint64_t)v21, &qword_256B5A730);
  *(_QWORD *)&v21[*(int *)(v46 + 36)] = v29;
  sub_23C285184((uint64_t)v17, &qword_256B5A730);
  v30 = v47;
  sub_23C2894C8((uint64_t)v21, v47, &qword_256B5A738);
  v31 = v52;
  sub_23C34E0C4();
  sub_23C34E1D8();
  v32 = v53;
  v33 = v51;
  v34 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v51, *MEMORY[0x24BDF17C8], v55);
  v35 = sub_23C34E28C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  v36 = swift_getKeyPath();
  v37 = v54;
  v38 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v5, v31, v56);
  v39 = (uint64_t *)&v5[*(int *)(v50 + 36)];
  *v39 = v36;
  v39[1] = v35;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
  v40 = v57;
  sub_23C2894C8((uint64_t)v5, v57, &qword_256B5A720);
  v41 = v49;
  sub_23C28950C(v30, v49, &qword_256B5A738);
  sub_23C28950C(v40, (uint64_t)v5, &qword_256B5A720);
  v42 = v58;
  sub_23C28950C(v41, v58, &qword_256B5A738);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A740);
  sub_23C28950C((uint64_t)v5, v42 + *(int *)(v43 + 48), &qword_256B5A720);
  sub_23C285184(v40, &qword_256B5A720);
  sub_23C285184(v30, &qword_256B5A738);
  sub_23C285184((uint64_t)v5, &qword_256B5A720);
  return sub_23C285184(v41, &qword_256B5A738);
}

uint64_t sub_23C2EEAA4@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_23C2EE370(*v1, a1);
}

uint64_t sub_23C2EEAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DF14();
  *a1 = result;
  return result;
}

uint64_t sub_23C2EEAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34DF14();
  *a1 = result;
  return result;
}

uint64_t sub_23C2EEAFC()
{
  swift_retain();
  return sub_23C34DF20();
}

uint64_t sub_23C2EEB24()
{
  swift_retain();
  return sub_23C34DF20();
}

uint64_t sub_23C2EEB4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 256);
  v3 = *(_QWORD *)(a1 + 264);
  v4 = *(_QWORD *)(a1 + 272);
  v5 = *(_QWORD *)(a1 + 280);
  v6 = *(_QWORD *)(a1 + 288);
  v7 = *(_QWORD *)(a1 + 296);
  v8 = *(_QWORD *)(a1 + 304);
  v9 = *(_QWORD *)(a1 + 312);
  v11 = *(_OWORD *)(a1 + 320);
  sub_23C2C0E2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192));
  sub_23C2BED4C(v2, v3, v4, v5, v6, v7, v8, v9, v11, SBYTE8(v11));
  return a1;
}

unint64_t sub_23C2EEC44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B5A758;
  if (!qword_256B5A758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A718);
    v2[0] = sub_23C2EECC8();
    v2[1] = sub_23C28943C(&qword_256B58E30, &qword_256B58D30, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5A758);
  }
  return result;
}

unint64_t sub_23C2EECC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B5A760;
  if (!qword_256B5A760)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A708);
    v2[0] = sub_23C2EED34();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5A760);
  }
  return result;
}

unint64_t sub_23C2EED34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B5A768;
  if (!qword_256B5A768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A700);
    v2[0] = sub_23C28943C(&qword_256B5A770, &qword_256B5A6F8, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5A768);
  }
  return result;
}

uint64_t TrainerTipGalleryEnvironment.fetchTrainerTipGalleryDetail.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t TrainerTipGalleryEnvironment.fetchTrainerTipGalleryList.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t TrainerTipGalleryEnvironment.makeTrainerTipJournalsUpdatedStream.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t TrainerTipGalleryEnvironment.refreshCanvas.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t TrainerTipGalleryEnvironment.requestCatalogSync.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t TrainerTipGalleryEnvironment.init(fetchTrainerTipGalleryDetail:fetchTrainerTipGalleryList:makeTrainerTipJournalsUpdatedStream:refreshCanvas:requestCatalogSync:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t destroy for TrainerTipGalleryEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TrainerTipGalleryEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TrainerTipGalleryEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for TrainerTipGalleryEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryEnvironment()
{
  return &type metadata for TrainerTipGalleryEnvironment;
}

uint64_t sub_23C2EF16C(char a1)
{
  return *(_QWORD *)&aFetched_10[8 * a1];
}

uint64_t sub_23C2EF18C()
{
  char *v0;

  return sub_23C2EF16C(*v0);
}

uint64_t sub_23C2EF194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2F1D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2EF1B8()
{
  sub_23C2F032C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EF1E0()
{
  sub_23C2F032C();
  return sub_23C34ECDC();
}

uint64_t sub_23C2EF20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2F1EB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C2EF234()
{
  sub_23C2F043C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EF25C()
{
  sub_23C2F043C();
  return sub_23C34ECDC();
}

uint64_t sub_23C2EF284()
{
  sub_23C2F03F8();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EF2AC()
{
  sub_23C2F03F8();
  return sub_23C34ECDC();
}

uint64_t sub_23C2EF2D4()
{
  sub_23C2F03B4();
  return sub_23C34ECD0();
}

uint64_t sub_23C2EF2FC()
{
  sub_23C2F03B4();
  return sub_23C34ECDC();
}

uint64_t EditorialDetailLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t State;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A778);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A780);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A788);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v24);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A790);
  v33 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2F032C();
  sub_23C34ECC4();
  sub_23C2F0370(v32, (uint64_t)v13);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 2, v17);
  if (v18)
  {
    if (v18 == 1)
    {
      v35 = 1;
      sub_23C2F03F8();
      sub_23C34EBD4();
      v20 = v25;
      v19 = v26;
    }
    else
    {
      v36 = 2;
      sub_23C2F03B4();
      v6 = v28;
      sub_23C34EBD4();
      v20 = v30;
      v19 = v31;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
  }
  else
  {
    sub_23C2851C0((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    v34 = 0;
    sub_23C2F043C();
    sub_23C34EBD4();
    sub_23C27FEE4(&qword_256B5A7B8, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailContent, (uint64_t)&protocol conformance descriptor for EditorialDetailContent);
    v21 = v29;
    sub_23C34EC40();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v21);
    sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
  }
}

uint64_t EditorialDetailLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t State;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  void (**v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  char v51;
  char v52;
  char v53;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A7C0);
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (void (**)(char *, uint64_t))((char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A7C8);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A7D0);
  v40 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A7D8);
  v8 = *(void (***)(char *, uint64_t))(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v37 - v15;
  v17 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23C2F032C();
  v18 = (uint64_t)v50;
  sub_23C34ECB8();
  if (v18)
    goto LABEL_9;
  v19 = State;
  v38 = v13;
  v20 = v47;
  v21 = v48;
  v50 = v16;
  v22 = sub_23C34EBBC();
  if (*(_QWORD *)(v22 + 16) != 1)
  {
    v26 = sub_23C34EAC0();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v28 = v19;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    v8[1](v10, v7);
LABEL_9:
    v32 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  if (*(_BYTE *)(v22 + 32))
  {
    if (*(_BYTE *)(v22 + 32) == 1)
    {
      v52 = 1;
      sub_23C2F03F8();
      v23 = v44;
      sub_23C34EB38();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v41);
      swift_bridgeObjectRelease();
      v8[1](v10, v7);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
      v25 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v50, 1, 2, v24);
    }
    else
    {
      v53 = 2;
      sub_23C2F03B4();
      v30 = v45;
      sub_23C34EB38();
      (*(void (**)(_QWORD, uint64_t))(v42 + 8))(v30, v43);
      swift_bridgeObjectRelease();
      v8[1](v10, v7);
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
      v25 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v50, 2, 2, v36);
    }
    v32 = (uint64_t)v49;
    v29 = v46;
  }
  else
  {
    v45 = v8;
    v51 = 0;
    sub_23C2F043C();
    sub_23C34EB38();
    v29 = v46;
    type metadata accessor for EditorialDetailContent();
    sub_23C27FEE4(&qword_256B5A7E0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailContent, (uint64_t)&protocol conformance descriptor for EditorialDetailContent);
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    v45[1](v10, v7);
    v32 = (uint64_t)v49;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
    v34 = (uint64_t)v38;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v38, 0, 2, v33);
    v35 = v34;
    v25 = (uint64_t)v50;
    sub_23C2851C0(v35, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  }
  sub_23C2851C0(v25, v29, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t sub_23C2EFC00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialDetailLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C2EFC14(_QWORD *a1)
{
  return EditorialDetailLoadState.encode(to:)(a1);
}

uint64_t EditorialDetailLoadState.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t State;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C2F0370(v2, (uint64_t)v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10))
    return sub_23C34EC88();
  sub_23C2851C0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  sub_23C34EC88();
  EditorialDetailContent.hash(into:)(a1);
  return sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
}

uint64_t EditorialDetailLoadState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t State;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11[4];

  v1 = v0;
  v2 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34EC7C();
  sub_23C2F0370(v1, (uint64_t)v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 2, v8))
  {
    sub_23C34EC88();
  }
  else
  {
    sub_23C2851C0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    sub_23C34EC88();
    EditorialDetailContent.hash(into:)(v11);
    sub_23C283550((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  }
  return sub_23C34ECAC();
}

uint64_t sub_23C2EFE80(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C2F0370(v2, (uint64_t)v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10))
    return sub_23C34EC88();
  sub_23C2851C0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  sub_23C34EC88();
  EditorialDetailContent.hash(into:)(a1);
  return sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
}

uint64_t sub_23C2EFF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11[4];

  v1 = v0;
  v2 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C34EC7C();
  sub_23C2F0370(v1, (uint64_t)v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 2, v8))
  {
    sub_23C34EC88();
  }
  else
  {
    sub_23C2851C0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    sub_23C34EC88();
    EditorialDetailContent.hash(into:)(v11);
    sub_23C283550((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  }
  return sub_23C34ECAC();
}

uint64_t _s20FitnessProductDetail09EditorialC9LoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t State;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  char v18;
  uint64_t v20;

  v4 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A8C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v12[*(int *)(v13 + 48)];
  sub_23C2F0370(a1, (uint64_t)v12);
  sub_23C2F0370(a2, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v17 = v16(v12, 2, v15);
  if (!v17)
  {
    sub_23C2F0370((uint64_t)v12, (uint64_t)v9);
    if (!v16((char *)v14, 2, v15))
    {
      sub_23C2851C0(v14, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
      v18 = _s20FitnessProductDetail09EditorialC7ContentV2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
      sub_23C283550((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
      sub_23C283550((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
      sub_23C283550((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
      return v18 & 1;
    }
    sub_23C283550((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v14, 2, v15) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v14, 2, v15) != 2)
  {
LABEL_9:
    sub_23C285184((uint64_t)v12, &qword_256B5A8C0);
    v18 = 0;
    return v18 & 1;
  }
  sub_23C283550((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  v18 = 1;
  return v18 & 1;
}

uint64_t type metadata accessor for EditorialDetailLoadState()
{
  uint64_t result;

  result = qword_256B5A860;
  if (!qword_256B5A860)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C2F032C()
{
  unint64_t result;

  result = qword_256B5A798;
  if (!qword_256B5A798)
  {
    result = MEMORY[0x24261C66C](&unk_23C357D14, &type metadata for EditorialDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A798);
  }
  return result;
}

uint64_t sub_23C2F0370(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for EditorialDetailLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_23C2F03B4()
{
  unint64_t result;

  result = qword_256B5A7A0;
  if (!qword_256B5A7A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357CC4, &type metadata for EditorialDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A7A0);
  }
  return result;
}

unint64_t sub_23C2F03F8()
{
  unint64_t result;

  result = qword_256B5A7A8;
  if (!qword_256B5A7A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C357C74, &type metadata for EditorialDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A7A8);
  }
  return result;
}

unint64_t sub_23C2F043C()
{
  unint64_t result;

  result = qword_256B5A7B0;
  if (!qword_256B5A7B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357C24, &type metadata for EditorialDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A7B0);
  }
  return result;
}

uint64_t sub_23C2F0480()
{
  return sub_23C27FEE4(&qword_256B5A7E8, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailLoadState, (uint64_t)&protocol conformance descriptor for EditorialDetailLoadState);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialDetailLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  void (*v39)(uint64_t *, _QWORD, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  _QWORD *__dst;
  uint64_t v44;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v44 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v10 = (uint64_t *)&unk_256B5A168;
      else
        v10 = (uint64_t *)&unk_256B5A160;
      v11 = __swift_instantiateConcreteTypeFromMangledName(v10);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      v12 = (int *)type metadata accessor for EditorialDetailContent();
      *(uint64_t *)((char *)a1 + v12[5]) = *(uint64_t *)((char *)a2 + v12[5]);
      v13 = v12[6];
      v14 = (uint64_t *)((char *)a1 + v13);
      v15 = (uint64_t *)((char *)a2 + v13);
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      v17 = v12[7];
      v18 = (uint64_t *)((char *)a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      v20 = v19[1];
      *v18 = *v19;
      v18[1] = v20;
      v21 = v12[8];
      __dst = (uint64_t *)((char *)a1 + v21);
      v22 = (uint64_t *)((char *)a2 + v21);
      v23 = type metadata accessor for EditorialPreview();
      v42 = *(_QWORD *)(v23 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v26 = v22[1];
        *__dst = *v22;
        __dst[1] = v26;
        v27 = *(int *)(v23 + 20);
        v41 = (char *)__dst + v27;
        v28 = (char *)v22 + v27;
        v29 = sub_23C34D950();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v41, v28, v29);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v23);
      }
      v31 = v12[9];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      v35 = v12[10];
      v36 = (uint64_t *)((char *)a1 + v35);
      v37 = (uint64_t *)((char *)a2 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      *(uint64_t *)((char *)a1 + v12[11]) = *(uint64_t *)((char *)a2 + v12[11]);
      v39 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v44 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for EditorialDetailLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = (uint64_t *)&unk_256B5A168;
    else
      v4 = (uint64_t *)&unk_256B5A160;
    v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = type metadata accessor for EditorialDetailContent();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = a1 + *(int *)(v6 + 32);
    v8 = type metadata accessor for EditorialPreview();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_23C34D950();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = a1 + *(int *)(v6 + 36);
    v12 = sub_23C34D950();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for EditorialDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char *__dst;
  uint64_t v42;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v42 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v8 = (uint64_t *)&unk_256B5A168;
    else
      v8 = (uint64_t *)&unk_256B5A160;
    v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
    v10 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&a1[v10[5]] = *(_QWORD *)&a2[v10[5]];
    v11 = v10[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = v10[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v10[8];
    __dst = &a1[v19];
    v20 = &a2[v19];
    v21 = type metadata accessor for EditorialPreview();
    v40 = *(_QWORD *)(v21 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = *((_QWORD *)v20 + 1);
      *(_QWORD *)__dst = *(_QWORD *)v20;
      *((_QWORD *)__dst + 1) = v24;
      v25 = *(int *)(v21 + 20);
      v39 = &__dst[v25];
      v26 = &v20[v25];
      v27 = sub_23C34D950();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v39, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v21);
    }
    v29 = v10[9];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    v33 = v10[10];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithCopy for EditorialDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *__dst;
  uint64_t v74;
  char *v75;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C285184((uint64_t)a1, &qword_256B5A538);
      goto LABEL_10;
    }
    if (a1 != a2)
    {
      sub_23C285184((uint64_t)a1, &qword_256B5A0C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v25 = (uint64_t *)&unk_256B5A168;
      else
        v25 = (uint64_t *)&unk_256B5A160;
      v26 = __swift_instantiateConcreteTypeFromMangledName(v25);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      swift_storeEnumTagMultiPayload();
    }
    v27 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&a1[v27[5]] = *(_QWORD *)&a2[v27[5]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = v27[6];
    v29 = &a1[v28];
    v30 = &a2[v28];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = v27[7];
    v32 = &a1[v31];
    v33 = &a2[v31];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = v27[8];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = type metadata accessor for EditorialPreview();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v35, 1, v37);
    v41 = v39(v36, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
        v42 = *(int *)(v37 + 20);
        v43 = &v35[v42];
        v75 = &v36[v42];
        v44 = sub_23C34D950();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v43, v75, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_24:
        v59 = v27[9];
        v60 = &a1[v59];
        v61 = &a2[v59];
        v62 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
        v63 = v27[10];
        v64 = &a1[v63];
        v65 = &a2[v63];
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v67 = *(int *)(v37 + 20);
        v68 = &v35[v67];
        v69 = &v36[v67];
        v70 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
        goto LABEL_24;
      }
      sub_23C283550((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    }
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v74 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v11 = (uint64_t *)&unk_256B5A168;
  else
    v11 = (uint64_t *)&unk_256B5A160;
  v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  swift_storeEnumTagMultiPayload();
  v13 = (int *)type metadata accessor for EditorialDetailContent();
  *(_QWORD *)&a1[v13[5]] = *(_QWORD *)&a2[v13[5]];
  v14 = v13[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = v13[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  v20 = v13[8];
  __dst = &a1[v20];
  v21 = &a2[v20];
  v22 = type metadata accessor for EditorialPreview();
  v72 = *(_QWORD *)(v22 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *(_QWORD *)__dst = *(_QWORD *)v21;
    *((_QWORD *)__dst + 1) = *((_QWORD *)v21 + 1);
    v46 = *(int *)(v22 + 20);
    v71 = &__dst[v46];
    v47 = &v21[v46];
    v48 = sub_23C34D950();
    v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
    swift_bridgeObjectRetain();
    v49(v71, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v22);
  }
  v50 = v13[9];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  v54 = v13[10];
  v55 = &a1[v54];
  v56 = &a2[v54];
  *(_QWORD *)v55 = *(_QWORD *)v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  *(_QWORD *)&a1[v13[11]] = *(_QWORD *)&a2[v13[11]];
  v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(a1, 0, 2, v6);
  return a1;
}

char *initializeWithTake for EditorialDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v8 = (uint64_t *)&unk_256B5A168;
    else
      v8 = (uint64_t *)&unk_256B5A160;
    v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
    v10 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&a1[v10[5]] = *(_QWORD *)&a2[v10[5]];
    *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
    *(_OWORD *)&a1[v10[7]] = *(_OWORD *)&a2[v10[7]];
    v11 = v10[8];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = type metadata accessor for EditorialPreview();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v17 = *(int *)(v14 + 20);
      v18 = &v12[v17];
      v19 = &v13[v17];
      v20 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v21 = v10[9];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *(_OWORD *)&a1[v10[10]] = *(_OWORD *)&a2[v10[10]];
    *(_QWORD *)&a1[v10[11]] = *(_QWORD *)&a2[v10[11]];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithTake for EditorialDetailLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C285184((uint64_t)a1, &qword_256B5A538);
      goto LABEL_10;
    }
    if (a1 != a2)
    {
      sub_23C285184((uint64_t)a1, &qword_256B5A0C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v20 = (uint64_t *)&unk_256B5A168;
      else
        v20 = (uint64_t *)&unk_256B5A160;
      v21 = __swift_instantiateConcreteTypeFromMangledName(v20);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      swift_storeEnumTagMultiPayload();
    }
    v22 = (int *)type metadata accessor for EditorialDetailContent();
    *(_QWORD *)&a1[v22[5]] = *(_QWORD *)&a2[v22[5]];
    swift_bridgeObjectRelease();
    v23 = v22[6];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v27 = *(_QWORD *)v25;
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = v27;
    *((_QWORD *)v24 + 1) = v26;
    swift_bridgeObjectRelease();
    v28 = v22[7];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v32 = *(_QWORD *)v30;
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = v32;
    *((_QWORD *)v29 + 1) = v31;
    swift_bridgeObjectRelease();
    v33 = v22[8];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = type metadata accessor for EditorialPreview();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v39 = v38(v34, 1, v36);
    v40 = v38(v35, 1, v36);
    if (v39)
    {
      if (!v40)
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
        v41 = *(int *)(v36 + 20);
        v42 = &v34[v41];
        v43 = &v35[v41];
        v44 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_24:
        v54 = v22[9];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
        v58 = v22[10];
        v59 = &a1[v58];
        v60 = &a2[v58];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = v62;
        *((_QWORD *)v59 + 1) = v61;
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v22[11]] = *(_QWORD *)&a2[v22[11]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v40)
      {
        v64 = *((_QWORD *)v35 + 1);
        *(_QWORD *)v34 = *(_QWORD *)v35;
        *((_QWORD *)v34 + 1) = v64;
        swift_bridgeObjectRelease();
        v65 = *(int *)(v36 + 20);
        v66 = &v34[v65];
        v67 = &v35[v65];
        v68 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 40))(v66, v67, v68);
        goto LABEL_24;
      }
      sub_23C283550((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for EditorialPreview);
    }
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_24;
  }
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v11 = (uint64_t *)&unk_256B5A168;
  else
    v11 = (uint64_t *)&unk_256B5A160;
  v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  swift_storeEnumTagMultiPayload();
  v13 = (int *)type metadata accessor for EditorialDetailContent();
  *(_QWORD *)&a1[v13[5]] = *(_QWORD *)&a2[v13[5]];
  *(_OWORD *)&a1[v13[6]] = *(_OWORD *)&a2[v13[6]];
  *(_OWORD *)&a1[v13[7]] = *(_OWORD *)&a2[v13[7]];
  v14 = v13[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for EditorialPreview();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v45 = *(int *)(v17 + 20);
    v46 = &v15[v45];
    v47 = &v16[v45];
    v48 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v49 = v13[9];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_23C34D950();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  *(_OWORD *)&a1[v13[10]] = *(_OWORD *)&a2[v13[10]];
  *(_QWORD *)&a1[v13[11]] = *(_QWORD *)&a2[v13[11]];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditorialDetailLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2F179C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2F17F8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C2F1850(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23C2F188C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23C2F18D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EditorialDetailContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C2F1970 + 4 * byte_23C3578C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C2F19A4 + 4 * byte_23C3578C0[v4]))();
}

uint64_t sub_23C2F19A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F19AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2F19B4);
  return result;
}

uint64_t sub_23C2F19C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2F19C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C2F19CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F19D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailLoadState.CodingKeys()
{
  return &type metadata for EditorialDetailLoadState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C2F1A30 + 4 * byte_23C3578CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C2F1A50 + 4 * byte_23C3578CF[v4]))();
}

_BYTE *sub_23C2F1A30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C2F1A50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2F1A58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2F1A60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C2F1A68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C2F1A70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailLoadState.FetchedCodingKeys()
{
  return &type metadata for EditorialDetailLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailLoadState.FetchingCodingKeys()
{
  return &type metadata for EditorialDetailLoadState.FetchingCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailLoadState.IdleCodingKeys()
{
  return &type metadata for EditorialDetailLoadState.IdleCodingKeys;
}

unint64_t sub_23C2F1AB0()
{
  unint64_t result;

  result = qword_256B5A870;
  if (!qword_256B5A870)
  {
    result = MEMORY[0x24261C66C](&unk_23C357B44, &type metadata for EditorialDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A870);
  }
  return result;
}

unint64_t sub_23C2F1AF8()
{
  unint64_t result;

  result = qword_256B5A878;
  if (!qword_256B5A878)
  {
    result = MEMORY[0x24261C66C](&unk_23C357BFC, &type metadata for EditorialDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A878);
  }
  return result;
}

unint64_t sub_23C2F1B40()
{
  unint64_t result;

  result = qword_256B5A880;
  if (!qword_256B5A880)
  {
    result = MEMORY[0x24261C66C](&unk_23C357AB4, &type metadata for EditorialDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A880);
  }
  return result;
}

unint64_t sub_23C2F1B88()
{
  unint64_t result;

  result = qword_256B5A888;
  if (!qword_256B5A888)
  {
    result = MEMORY[0x24261C66C](&unk_23C357ADC, &type metadata for EditorialDetailLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A888);
  }
  return result;
}

unint64_t sub_23C2F1BD0()
{
  unint64_t result;

  result = qword_256B5A890;
  if (!qword_256B5A890)
  {
    result = MEMORY[0x24261C66C](&unk_23C357A64, &type metadata for EditorialDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A890);
  }
  return result;
}

unint64_t sub_23C2F1C18()
{
  unint64_t result;

  result = qword_256B5A898;
  if (!qword_256B5A898)
  {
    result = MEMORY[0x24261C66C](&unk_23C357A8C, &type metadata for EditorialDetailLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A898);
  }
  return result;
}

unint64_t sub_23C2F1C60()
{
  unint64_t result;

  result = qword_256B5A8A0;
  if (!qword_256B5A8A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357A14, &type metadata for EditorialDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A8A0);
  }
  return result;
}

unint64_t sub_23C2F1CA8()
{
  unint64_t result;

  result = qword_256B5A8A8;
  if (!qword_256B5A8A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C357A3C, &type metadata for EditorialDetailLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A8A8);
  }
  return result;
}

unint64_t sub_23C2F1CF0()
{
  unint64_t result;

  result = qword_256B5A8B0;
  if (!qword_256B5A8B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357B6C, &type metadata for EditorialDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A8B0);
  }
  return result;
}

unint64_t sub_23C2F1D38()
{
  unint64_t result;

  result = qword_256B5A8B8;
  if (!qword_256B5A8B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C357B94, &type metadata for EditorialDetailLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A8B8);
  }
  return result;
}

uint64_t sub_23C2F1D7C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64656863746566 && a2 == 0xE700000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C2F1EB0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C2F1F34()
{
  return 0x746E65746E6F63;
}

id static UIColor.keyTint.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0);
}

void static Color.keyTint.getter()
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0);
  JUMPOUT(0x24261BC10);
}

void static ShapeStyle<>.keyTint.getter()
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0);
  JUMPOUT(0x24261BC10);
}

__n128 WorkoutDetailLayout.contentMargins.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t WorkoutDetailLayout.dynamicTypeSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

double WorkoutDetailLayout.sectionDensityFactor.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(double *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 16) = v3;
  return result;
}

void WorkoutDetailLayout.sizeClass.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

double WorkoutDetailLayout.init(contentMargins:dynamicTypeSize:sectionDensityFactor:sizeClass:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, double *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  double v6;
  double result;
  uint64_t v8;
  char v9;
  __int128 v10;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = *a3;
  result = a3[1];
  v8 = *((_QWORD *)a3 + 2);
  v9 = *a4;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v10;
  *(_BYTE *)(a5 + 32) = v5;
  *(_BYTE *)(a5 + 33) = a2;
  *(double *)(a5 + 40) = v6;
  *(double *)(a5 + 48) = result;
  *(_QWORD *)(a5 + 56) = v8;
  *(_BYTE *)(a5 + 64) = v9;
  return result;
}

uint64_t sub_23C2F207C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2F20B4 + 4 * byte_23C357DA0[a1]))(0xD000000000000014, 0x800000023C361AD0);
}

uint64_t sub_23C2F20B4()
{
  return 0x4D746E65746E6F63;
}

uint64_t sub_23C2F20D8()
{
  return 0x73616C43657A6973;
}

uint64_t sub_23C2F20F4()
{
  return 0x5463696D616E7964;
}

uint64_t sub_23C2F2118()
{
  unsigned __int8 *v0;

  return sub_23C2F207C(*v0);
}

uint64_t sub_23C2F2120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2F2E60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C2F2144()
{
  sub_23C2F28F8();
  return sub_23C34ECD0();
}

uint64_t sub_23C2F216C()
{
  sub_23C2F28F8();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailLayout.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A8C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v9 = *((_BYTE *)v1 + 32);
  v24 = *((unsigned __int8 *)v1 + 33);
  v10 = *((_QWORD *)v1 + 5);
  v11 = *((_QWORD *)v1 + 6);
  v22 = *((_QWORD *)v1 + 7);
  v23 = v10;
  HIDWORD(v21) = *((unsigned __int8 *)v1 + 64);
  v12 = a1[3];
  v13 = a1;
  v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_23C2F28F8();
  sub_23C34ECC4();
  v28 = v25;
  v29 = v7;
  v30 = v8;
  v31 = v9;
  v27 = 0;
  sub_23C2F293C();
  v16 = v26;
  sub_23C34EC04();
  if (!v16)
  {
    v18 = v22;
    v17 = v23;
    v19 = BYTE4(v21);
    LOBYTE(v28) = v24;
    v27 = 1;
    sub_23C2F2980();
    sub_23C34EC40();
    *(_QWORD *)&v28 = v17;
    *((_QWORD *)&v28 + 1) = v11;
    v29 = v18;
    v27 = 2;
    sub_23C2F29C4();
    sub_23C34EC40();
    LOBYTE(v28) = v19;
    v27 = 3;
    sub_23C2F2A08();
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v15);
}

uint64_t WorkoutDetailLayout.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A8F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2F28F8();
  sub_23C34ECB8();
  if (!v2)
  {
    v23 = 0;
    sub_23C2F2A4C();
    sub_23C34EB74();
    v20 = v25;
    v21 = v24;
    v9 = v27;
    v22 = v26;
    v10 = v28;
    v23 = 1;
    sub_23C2F2A90();
    sub_23C34EBB0();
    v18 = v10;
    v19 = v9;
    LOBYTE(v10) = v24;
    v23 = 2;
    sub_23C2F2AD4();
    sub_23C34EBB0();
    v12 = v24;
    v13 = v25;
    v17 = v26;
    v23 = 3;
    sub_23C2F2B18();
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v24;
    v15 = v20;
    *(_QWORD *)a2 = v21;
    *(_QWORD *)(a2 + 8) = v15;
    v16 = v19;
    *(_QWORD *)(a2 + 16) = v22;
    *(_QWORD *)(a2 + 24) = v16;
    *(_BYTE *)(a2 + 32) = v18;
    *(_BYTE *)(a2 + 33) = v10;
    *(_QWORD *)(a2 + 40) = v12;
    *(_QWORD *)(a2 + 48) = v13;
    *(_QWORD *)(a2 + 56) = v17;
    *(_BYTE *)(a2 + 64) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C2F2608@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetailLayout.init(from:)(a1, a2);
}

uint64_t sub_23C2F261C(_QWORD *a1)
{
  return WorkoutDetailLayout.encode(to:)(a1);
}

uint64_t WorkoutDetailLayout.hash(into:)()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_23C2F2B5C(v0, (uint64_t)v2);
  sub_23C28A884();
  sub_23C34EC88();
  sub_23C34EC88();
  sub_23C34ECA0();
  sub_23C34EC88();
  return sub_23C34EC88();
}

uint64_t WorkoutDetailLayout.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_23C2F2B5C(v0, (uint64_t)v2);
  sub_23C34EC7C();
  sub_23C28A884();
  sub_23C34EC88();
  sub_23C34EC88();
  sub_23C34ECA0();
  sub_23C34EC88();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C2F2778()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_23C2F2B5C(v0, (uint64_t)v2);
  sub_23C34EC7C();
  sub_23C28A884();
  sub_23C34EC88();
  sub_23C34EC88();
  sub_23C34ECA0();
  sub_23C34EC88();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail07WorkoutC6LayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  int v7;
  _BOOL8 result;
  _BOOL4 v10;

  v3 = *(unsigned __int8 *)(a1 + 33);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(unsigned __int8 *)(a1 + 64);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32))
      return 0;
  }
  else
  {
    result = 0;
    if ((*(_BYTE *)(a2 + 32) & 1) != 0
      || (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) != 0)
    {
      return result;
    }
  }
  v10 = v3 == *(unsigned __int8 *)(a2 + 33) && v4 == *(_QWORD *)(a2 + 40);
  if (v5 != *(double *)(a2 + 48))
    v10 = 0;
  if (v6 != *(_QWORD *)(a2 + 56))
    v10 = 0;
  return v7 == *(unsigned __int8 *)(a2 + 64) && v10;
}

unint64_t sub_23C2F28F8()
{
  unint64_t result;

  result = qword_256B5A8D0;
  if (!qword_256B5A8D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C357F58, &type metadata for WorkoutDetailLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A8D0);
  }
  return result;
}

unint64_t sub_23C2F293C()
{
  unint64_t result;

  result = qword_256B5A8D8;
  if (!qword_256B5A8D8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMargins, &type metadata for WorkoutDetailContentMargins);
    atomic_store(result, (unint64_t *)&qword_256B5A8D8);
  }
  return result;
}

unint64_t sub_23C2F2980()
{
  unint64_t result;

  result = qword_256B5A8E0;
  if (!qword_256B5A8E0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailDynamicTypeSize, &type metadata for WorkoutDetailDynamicTypeSize);
    atomic_store(result, (unint64_t *)&qword_256B5A8E0);
  }
  return result;
}

unint64_t sub_23C2F29C4()
{
  unint64_t result;

  result = qword_256B5A8E8;
  if (!qword_256B5A8E8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSectionDensityFactor, &type metadata for WorkoutDetailSectionDensityFactor);
    atomic_store(result, (unint64_t *)&qword_256B5A8E8);
  }
  return result;
}

unint64_t sub_23C2F2A08()
{
  unint64_t result;

  result = qword_256B5A8F0;
  if (!qword_256B5A8F0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSizeClass, &type metadata for WorkoutDetailSizeClass);
    atomic_store(result, (unint64_t *)&qword_256B5A8F0);
  }
  return result;
}

unint64_t sub_23C2F2A4C()
{
  unint64_t result;

  result = qword_256B5A900;
  if (!qword_256B5A900)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMargins, &type metadata for WorkoutDetailContentMargins);
    atomic_store(result, (unint64_t *)&qword_256B5A900);
  }
  return result;
}

unint64_t sub_23C2F2A90()
{
  unint64_t result;

  result = qword_256B5A908;
  if (!qword_256B5A908)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailDynamicTypeSize, &type metadata for WorkoutDetailDynamicTypeSize);
    atomic_store(result, (unint64_t *)&qword_256B5A908);
  }
  return result;
}

unint64_t sub_23C2F2AD4()
{
  unint64_t result;

  result = qword_256B5A910;
  if (!qword_256B5A910)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSectionDensityFactor, &type metadata for WorkoutDetailSectionDensityFactor);
    atomic_store(result, (unint64_t *)&qword_256B5A910);
  }
  return result;
}

unint64_t sub_23C2F2B18()
{
  unint64_t result;

  result = qword_256B5A918;
  if (!qword_256B5A918)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSizeClass, &type metadata for WorkoutDetailSizeClass);
    atomic_store(result, (unint64_t *)&qword_256B5A918);
  }
  return result;
}

uint64_t sub_23C2F2B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C2F2BA8()
{
  unint64_t result;

  result = qword_256B5A920;
  if (!qword_256B5A920)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailLayout, &type metadata for WorkoutDetailLayout);
    atomic_store(result, (unint64_t *)&qword_256B5A920);
  }
  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WorkoutDetailLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 64);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailLayout()
{
  return &type metadata for WorkoutDetailLayout;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2F2D08 + 4 * byte_23C357DA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2F2D3C + 4 * byte_23C357DA4[v4]))();
}

uint64_t sub_23C2F2D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F2D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2F2D4CLL);
  return result;
}

uint64_t sub_23C2F2D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2F2D60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2F2D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F2D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailLayout.CodingKeys()
{
  return &type metadata for WorkoutDetailLayout.CodingKeys;
}

unint64_t sub_23C2F2D8C()
{
  unint64_t result;

  result = qword_256B5A928;
  if (!qword_256B5A928)
  {
    result = MEMORY[0x24261C66C](&unk_23C357F30, &type metadata for WorkoutDetailLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A928);
  }
  return result;
}

unint64_t sub_23C2F2DD4()
{
  unint64_t result;

  result = qword_256B5A930;
  if (!qword_256B5A930)
  {
    result = MEMORY[0x24261C66C](&unk_23C357EA0, &type metadata for WorkoutDetailLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A930);
  }
  return result;
}

unint64_t sub_23C2F2E1C()
{
  unint64_t result;

  result = qword_256B5A938;
  if (!qword_256B5A938)
  {
    result = MEMORY[0x24261C66C](&unk_23C357EC8, &type metadata for WorkoutDetailLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A938);
  }
  return result;
}

uint64_t sub_23C2F2E60(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361AD0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73616C43657A6973 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t WorkoutDetail.accessibility.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WorkoutDetail.activityTypes.getter()
{
  type metadata accessor for WorkoutDetail();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WorkoutDetail()
{
  uint64_t result;

  result = qword_256B5AA68;
  if (!qword_256B5AA68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutDetail.additionalLanguages.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 24);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetail();
  return sub_23C282F90(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
}

uint64_t WorkoutDetail.artworkCropCode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetail();
  return sub_23C28950C(v1 + *(int *)(v3 + 32), a1, &qword_256B58ED8);
}

uint64_t WorkoutDetail.contributors.getter()
{
  type metadata accessor for WorkoutDetail();
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutDetail.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 40);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.descriptionShorthand.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 44);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.detail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 48);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetail() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetail.mediaType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutDetail() + 56));
}

uint64_t WorkoutDetail.musicPlaylistIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetail() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetail.musicPlaylistURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetail();
  return sub_23C28950C(v1 + *(int *)(v3 + 64), a1, &qword_256B57E20);
}

uint64_t WorkoutDetail.musicTracks.getter()
{
  type metadata accessor for WorkoutDetail();
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutDetail.previewStreamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutDetail();
  return sub_23C28950C(v1 + *(int *)(v3 + 72), a1, &qword_256B57E20);
}

uint64_t WorkoutDetail.previewStreamingProgramIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetail() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetail.primaryLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 80);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 84);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 88);
  v4 = sub_23C34D950();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.streamingProgramIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutDetail() + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutDetail.summary.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 96);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutDetail() + 100);
  v4 = sub_23C34D86C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutDetail.trainers.getter()
{
  type metadata accessor for WorkoutDetail();
  return swift_bridgeObjectRetain();
}

uint64_t WorkoutDetail.bookmarkStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WorkoutDetail();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 108));
  return result;
}

uint64_t WorkoutDetail.bookmarkStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for WorkoutDetail();
  *(_BYTE *)(v1 + *(int *)(result + 108)) = v2;
  return result;
}

uint64_t (*WorkoutDetail.bookmarkStatus.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WorkoutDetail();
  return nullsub_1;
}

uint64_t WorkoutDetail.downloadStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  __int16 v6;

  result = type metadata accessor for WorkoutDetail();
  v4 = (uint64_t *)(v1 + *(int *)(result + 112));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  LOBYTE(v4) = *((_BYTE *)v4 + 10);
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 10) = (_BYTE)v4;
  return result;
}

uint64_t WorkoutDetail.downloadStatus.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = *((_WORD *)a1 + 4);
  v4 = *((_BYTE *)a1 + 10);
  result = type metadata accessor for WorkoutDetail();
  v6 = v1 + *(int *)(result + 112);
  *(_QWORD *)v6 = v2;
  *(_WORD *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 10) = v4;
  return result;
}

uint64_t (*WorkoutDetail.downloadStatus.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WorkoutDetail();
  return nullsub_1;
}

uint64_t WorkoutDetail.init(accessibility:activityTypes:additionalLanguages:artwork:artworkCropCode:bookmarkStatus:contributors:description:descriptionShorthand:detail:downloadStatus:identifier:mediaType:musicPlaylistIdentifier:musicPlaylistURL:musicTracks:previewStreamingURL:previewStreamingProgramIdentifier:primaryLanguage:sharingURL:streamingURL:streamingProgramIdentifier:summary:title:trainers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  char v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  _QWORD *v45;
  uint64_t result;
  char v49;
  __int16 v50;
  uint64_t v51;

  v34 = *a6;
  v51 = *a12;
  v49 = *((_BYTE *)a12 + 10);
  v50 = *((_WORD *)a12 + 4);
  v35 = (int *)type metadata accessor for WorkoutDetail();
  v36 = a9 + v35[28];
  v37 = sub_23C34D86C();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32);
  v38(a9, a1, v37);
  *(_QWORD *)(a9 + v35[5]) = a2;
  v38(a9 + v35[6], a3, v37);
  sub_23C286C3C(a4, a9 + v35[7]);
  sub_23C2894C8(a5, a9 + v35[8], &qword_256B58ED8);
  *(_BYTE *)(a9 + v35[27]) = v34;
  *(_QWORD *)(a9 + v35[9]) = a7;
  v38(a9 + v35[10], a8, v37);
  v38(a9 + v35[11], a10, v37);
  v38(a9 + v35[12], a11, v37);
  v39 = (_QWORD *)(a9 + v35[13]);
  *v39 = a13;
  v39[1] = a14;
  *(_QWORD *)v36 = v51;
  *(_WORD *)(v36 + 8) = v50;
  *(_BYTE *)(v36 + 10) = v49;
  *(_BYTE *)(a9 + v35[14]) = a15;
  v40 = (_QWORD *)(a9 + v35[15]);
  *v40 = a16;
  v40[1] = a17;
  sub_23C2894C8(a18, a9 + v35[16], &qword_256B57E20);
  *(_QWORD *)(a9 + v35[17]) = a19;
  sub_23C2894C8(a20, a9 + v35[18], &qword_256B57E20);
  v41 = (_QWORD *)(a9 + v35[19]);
  *v41 = a21;
  v41[1] = a22;
  v38(a9 + v35[20], a23, v37);
  v42 = a9 + v35[21];
  v43 = sub_23C34D950();
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32);
  v44(v42, a24, v43);
  v44(a9 + v35[22], a25, v43);
  v45 = (_QWORD *)(a9 + v35[23]);
  *v45 = a26;
  v45[1] = a27;
  v38(a9 + v35[24], a28, v37);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v38)(a9 + v35[25], a29, v37);
  *(_QWORD *)(a9 + v35[26]) = a30;
  return result;
}

uint64_t sub_23C2F39EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C2F3A24 + 4 * byte_23C357FB0[a1]))(0xD000000000000013, 0x800000023C361AF0);
}

uint64_t sub_23C2F3A24()
{
  return 0x6269737365636361;
}

uint64_t sub_23C2F3A48()
{
  return 0x7974697669746361;
}

uint64_t sub_23C2F3A6C()
{
  return 0x6B726F77747261;
}

uint64_t sub_23C2F3A84()
{
  return 0x436B726F77747261;
}

uint64_t sub_23C2F3AA8()
{
  return 0x75626972746E6F63;
}

uint64_t sub_23C2F3AC8()
{
  return 0x7470697263736564;
}

uint64_t sub_23C2F3AE8(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23C2F3C18()
{
  return 0x7972616D6D7573;
}

uint64_t sub_23C2F3C30()
{
  return 0x656C746974;
}

uint64_t sub_23C2F3C44()
{
  return 0x7372656E69617274;
}

uint64_t sub_23C2F3C5C()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t sub_23C2F3C94()
{
  unsigned __int8 *v0;

  return sub_23C2F39EC(*v0);
}

uint64_t sub_23C2F3C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C2F9C54(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C2F3CC0(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_23C2F3CCC()
{
  sub_23C2F4500();
  return sub_23C34ECD0();
}

uint64_t sub_23C2F3CF4()
{
  sub_23C2F4500();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A940);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2F4500();
  sub_23C34ECC4();
  LOBYTE(v17) = 0;
  sub_23C34D86C();
  sub_23C27FEE4(&qword_256B582E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
  sub_23C34EC40();
  if (!v2)
  {
    v9 = type metadata accessor for WorkoutDetail();
    v17 = *(_QWORD *)(v3 + *(int *)(v9 + 20));
    v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A950);
    sub_23C2F5998(&qword_256B5A958, MEMORY[0x24BEE1E90], MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
    LOBYTE(v17) = 2;
    sub_23C34EC40();
    v16 = (int *)v9;
    LOBYTE(v17) = 3;
    type metadata accessor for WorkoutDetailArtwork();
    sub_23C27FEE4(&qword_256B57DF8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
    sub_23C34EC40();
    LOBYTE(v17) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    sub_23C2C40AC(&qword_256B59230, MEMORY[0x24BE379F0]);
    sub_23C34EC40();
    v10 = v16;
    v17 = *(_QWORD *)(v3 + v16[9]);
    v20 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A960);
    sub_23C2F59F8(&qword_256B5A968, (uint64_t (*)(void))sub_23C2F4544, MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
    LOBYTE(v17) = 6;
    sub_23C34EC40();
    LOBYTE(v17) = 7;
    sub_23C34EC40();
    LOBYTE(v17) = 8;
    sub_23C34EC40();
    LOBYTE(v17) = 9;
    sub_23C34EC10();
    LOBYTE(v17) = *(_BYTE *)(v3 + v10[14]);
    v20 = 10;
    sub_23C2F4588();
    sub_23C34EC04();
    LOBYTE(v17) = 11;
    sub_23C34EBE0();
    LOBYTE(v17) = 12;
    sub_23C34D950();
    v15 = sub_23C27FEE4(&qword_256B58108, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C34EC04();
    v17 = *(_QWORD *)(v3 + v16[17]);
    v20 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A980);
    sub_23C2F5AE8(&qword_256B5A988, &qword_256B5A990, (uint64_t)&protocol conformance descriptor for WorkoutDetailMusicTrack, MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
    LOBYTE(v17) = 14;
    sub_23C34EC04();
    LOBYTE(v17) = 15;
    sub_23C34EBE0();
    LOBYTE(v17) = 16;
    sub_23C34EC40();
    LOBYTE(v17) = 17;
    sub_23C34EC40();
    LOBYTE(v17) = 18;
    sub_23C34EC40();
    LOBYTE(v17) = 19;
    sub_23C34EBE0();
    LOBYTE(v17) = 20;
    sub_23C34EC40();
    LOBYTE(v17) = 21;
    sub_23C34EC40();
    v17 = *(_QWORD *)(v3 + v16[26]);
    v20 = 22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B590A0);
    sub_23C2F45CC(&qword_256B5A998, &qword_256B5A9A0, (uint64_t)&protocol conformance descriptor for WorkoutDetailTrainer, MEMORY[0x24BEE12A0]);
    sub_23C34EC40();
    LOBYTE(v17) = *(_BYTE *)(v3 + v16[27]);
    v20 = 23;
    sub_23C2F4650();
    sub_23C34EC40();
    v11 = (uint64_t *)(v3 + v16[28]);
    v12 = *v11;
    v13 = *((_WORD *)v11 + 4);
    LOBYTE(v11) = *((_BYTE *)v11 + 10);
    v17 = v12;
    v18 = v13;
    v19 = (char)v11;
    v20 = 24;
    sub_23C2F4694();
    sub_23C34EC04();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C2F4500()
{
  unint64_t result;

  result = qword_256B5A948;
  if (!qword_256B5A948)
  {
    result = MEMORY[0x24261C66C](&unk_23C3582B4, &type metadata for WorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5A948);
  }
  return result;
}

unint64_t sub_23C2F4544()
{
  unint64_t result;

  result = qword_256B5A970;
  if (!qword_256B5A970)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContributor, &type metadata for WorkoutDetailContributor);
    atomic_store(result, (unint64_t *)&qword_256B5A970);
  }
  return result;
}

unint64_t sub_23C2F4588()
{
  unint64_t result;

  result = qword_256B5A978;
  if (!qword_256B5A978)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMediaType, &type metadata for WorkoutDetailContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B5A978);
  }
  return result;
}

uint64_t sub_23C2F45CC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B590A0);
    v10 = sub_23C27FEE4(a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailTrainer, a3);
    result = MEMORY[0x24261C66C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2F4650()
{
  unint64_t result;

  result = qword_256B5A9A8;
  if (!qword_256B5A9A8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for BookmarkStatus, &type metadata for BookmarkStatus);
    atomic_store(result, (unint64_t *)&qword_256B5A9A8);
  }
  return result;
}

unint64_t sub_23C2F4694()
{
  unint64_t result;

  result = qword_256B5A9B0;
  if (!qword_256B5A9B0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, (unint64_t *)&qword_256B5A9B0);
  }
  return result;
}

uint64_t WorkoutDetail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(uint64_t, char *, uint64_t);
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(uint64_t, char *, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  int *v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  __int16 v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  __int16 v108;
  char v109;
  char v110;

  v88 = a2;
  v103 = sub_23C34D950();
  v97 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v86 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v84 = (char *)&v80 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v6);
  v89 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v90 = (uint64_t)&v80 - v9;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  MEMORY[0x24BDAC7A8](v93);
  v92 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for WorkoutDetailArtwork();
  MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_23C34D86C();
  v104 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v87 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v85 = (char *)&v80 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v80 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v91 = (char *)&v80 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v80 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v80 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v80 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v96 = (char *)&v80 - v29;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A9B8);
  v30 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v32 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for WorkoutDetail();
  MEMORY[0x24BDAC7A8](v33);
  v105 = (uint64_t)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v35;
  v36 = v105 + v35[28];
  *(_QWORD *)v36 = 0;
  *(_WORD *)(v36 + 8) = 0;
  *(_BYTE *)(v36 + 10) = 1;
  v37 = a1[3];
  v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_23C2F4500();
  v98 = v32;
  v38 = v101;
  sub_23C34ECB8();
  if (v38)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
  v39 = v27;
  v101 = v24;
  v81 = v21;
  v80 = (_QWORD *)v36;
  v82 = v30;
  LOBYTE(v107) = 0;
  v40 = sub_23C27FEE4(&qword_256B58300, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
  v41 = v96;
  v42 = v100;
  sub_23C34EBB0();
  v44 = v105;
  v45 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 32);
  v45(v105, v41, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A950);
  v110 = 1;
  sub_23C2F5998(&qword_256B5A9C0, MEMORY[0x24BEE1EB8], MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  v46 = v106;
  v96 = (char *)v45;
  *(_QWORD *)(v44 + v106[5]) = v107;
  LOBYTE(v107) = 2;
  sub_23C34EBB0();
  ((void (*)(uint64_t, char *, uint64_t))v96)(v44 + v46[6], v39, v42);
  LOBYTE(v107) = 3;
  sub_23C27FEE4(&qword_256B57E08, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailArtwork, (uint64_t)&protocol conformance descriptor for WorkoutDetailArtwork);
  v47 = (uint64_t)v94;
  sub_23C34EBB0();
  sub_23C286C3C(v47, v44 + v46[7]);
  LOBYTE(v107) = 4;
  sub_23C2C40AC(&qword_256B59250, MEMORY[0x24BE379F8]);
  v48 = (uint64_t)v92;
  sub_23C34EBB0();
  v95 = v40;
  sub_23C2894C8(v48, v44 + v46[8], &qword_256B58ED8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A960);
  v110 = 5;
  sub_23C2F59F8(&qword_256B5A9C8, (uint64_t (*)(void))sub_23C2F5A60, MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  *(_QWORD *)(v44 + v46[9]) = v107;
  LOBYTE(v107) = 6;
  v49 = v101;
  sub_23C34EBB0();
  v50 = v49;
  v51 = (void (*)(uint64_t, char *, uint64_t))v96;
  ((void (*)(uint64_t, char *, uint64_t))v96)(v44 + v46[10], v50, v42);
  LOBYTE(v107) = 7;
  v52 = v81;
  sub_23C34EBB0();
  v51(v44 + v46[11], v52, v42);
  LOBYTE(v107) = 8;
  v53 = v91;
  sub_23C34EBB0();
  v54 = v53;
  v55 = v42;
  v51(v44 + v46[12], v54, v42);
  LOBYTE(v107) = 9;
  v56 = sub_23C34EB80();
  v57 = (uint64_t *)(v105 + v106[13]);
  *v57 = v56;
  v57[1] = v58;
  v110 = 10;
  sub_23C2F5AA4();
  sub_23C34EB74();
  *(_BYTE *)(v105 + v106[14]) = v107;
  LOBYTE(v107) = 11;
  v59 = sub_23C34EB50();
  v60 = (uint64_t *)(v105 + v106[15]);
  *v60 = v59;
  v60[1] = v61;
  LOBYTE(v107) = 12;
  sub_23C27FEE4(&qword_256B58120, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C34EB74();
  sub_23C2894C8(v90, v105 + v106[16], &qword_256B57E20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A980);
  v110 = 13;
  sub_23C2F5AE8(&qword_256B5A9E0, &qword_256B5A9E8, (uint64_t)&protocol conformance descriptor for WorkoutDetailMusicTrack, MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  *(_QWORD *)(v105 + v106[17]) = v107;
  LOBYTE(v107) = 14;
  sub_23C34EB74();
  sub_23C2894C8(v89, v105 + v106[18], &qword_256B57E20);
  LOBYTE(v107) = 15;
  v62 = sub_23C34EB50();
  v63 = (uint64_t *)(v105 + v106[19]);
  *v63 = v62;
  v63[1] = v64;
  LOBYTE(v107) = 16;
  sub_23C34EBB0();
  ((void (*)(uint64_t, char *, uint64_t))v96)(v105 + v106[20], v83, v42);
  LOBYTE(v107) = 17;
  sub_23C34EBB0();
  v65 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
  v65(v105 + v106[21], v84, v103);
  LOBYTE(v107) = 18;
  sub_23C34EBB0();
  v65(v105 + v106[22], v86, v103);
  LOBYTE(v107) = 19;
  v66 = sub_23C34EB50();
  v67 = (uint64_t *)(v105 + v106[23]);
  *v67 = v66;
  v67[1] = v68;
  LOBYTE(v107) = 20;
  sub_23C34EBB0();
  ((void (*)(uint64_t, char *, uint64_t))v96)(v105 + v106[24], v85, v55);
  LOBYTE(v107) = 21;
  sub_23C34EBB0();
  ((void (*)(uint64_t, char *, uint64_t))v96)(v105 + v106[25], v87, v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B590A0);
  v110 = 22;
  sub_23C2F45CC(&qword_256B5A9F0, &qword_256B5A9F8, (uint64_t)&protocol conformance descriptor for WorkoutDetailTrainer, MEMORY[0x24BEE12D0]);
  sub_23C34EBB0();
  v101 = 0;
  *(_QWORD *)(v105 + v106[26]) = v107;
  v110 = 23;
  sub_23C2F5B6C();
  v69 = v101;
  sub_23C34EBB0();
  v101 = v69;
  if (v69
    || (*(_BYTE *)(v105 + v106[27]) = v107, v110 = 24, sub_23C2F5BB0(), v70 = v101, sub_23C34EB74(), (v101 = v70) != 0))
  {
    (*(void (**)(char *, uint64_t))(v82 + 8))(v98, v99);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    v71 = v105;
    v72 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
    v72(v105, v55);
    v73 = v106;
    swift_bridgeObjectRelease();
    v72(v71 + v73[6], v55);
    sub_23C283550(v71 + v73[7], (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
    sub_23C285184(v71 + v73[8], &qword_256B58ED8);
    swift_bridgeObjectRelease();
    v72(v71 + v73[10], v55);
    v72(v71 + v73[11], v55);
    v72(v71 + v73[12], v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23C285184(v71 + v73[16], &qword_256B57E20);
    swift_bridgeObjectRelease();
    sub_23C285184(v71 + v73[18], &qword_256B57E20);
    swift_bridgeObjectRelease();
    v72(v71 + v73[20], v55);
    v74 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v75 = v103;
    v74(v71 + v73[21], v103);
    v74(v71 + v73[22], v75);
    swift_bridgeObjectRelease();
    v72(v71 + v73[24], v55);
    v72(v105 + v106[25], v55);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v82 + 8))(v98, v99);
    v76 = v108;
    v77 = v109;
    v78 = v80;
    *v80 = v107;
    *((_WORD *)v78 + 4) = v76;
    *((_BYTE *)v78 + 10) = v77;
    v79 = v105;
    sub_23C282F90(v105, v88, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetail);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    return sub_23C283550(v79, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetail);
  }
}

uint64_t sub_23C2F5998(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A950);
    v8 = a2;
    result = MEMORY[0x24261C66C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C2F59F8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A960);
    v8 = a2();
    result = MEMORY[0x24261C66C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2F5A60()
{
  unint64_t result;

  result = qword_256B5A9D0;
  if (!qword_256B5A9D0)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContributor, &type metadata for WorkoutDetailContributor);
    atomic_store(result, (unint64_t *)&qword_256B5A9D0);
  }
  return result;
}

unint64_t sub_23C2F5AA4()
{
  unint64_t result;

  result = qword_256B5A9D8;
  if (!qword_256B5A9D8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMediaType, &type metadata for WorkoutDetailContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B5A9D8);
  }
  return result;
}

uint64_t sub_23C2F5AE8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5A980);
    v10 = sub_23C27FEE4(a2, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailMusicTrack, a3);
    result = MEMORY[0x24261C66C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C2F5B6C()
{
  unint64_t result;

  result = qword_256B5AA00;
  if (!qword_256B5AA00)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for BookmarkStatus, &type metadata for BookmarkStatus);
    atomic_store(result, (unint64_t *)&qword_256B5AA00);
  }
  return result;
}

unint64_t sub_23C2F5BB0()
{
  unint64_t result;

  result = qword_256B5AA08;
  if (!qword_256B5AA08)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for DownloadStatus, &type metadata for DownloadStatus);
    atomic_store(result, (unint64_t *)&qword_256B5AA08);
  }
  return result;
}

uint64_t sub_23C2F5BF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetail.init(from:)(a1, a2);
}

uint64_t sub_23C2F5C08(_QWORD *a1)
{
  return WorkoutDetail.encode(to:)(a1);
}

uint64_t WorkoutDetail.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);

  v2 = v1;
  v48 = sub_23C34D950();
  v50 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v46 = (uint64_t)&v44 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v44 - v10;
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23C34D86C();
  v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_23C27FEE4(&qword_256B58308, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C34E838();
  v18 = (int *)type metadata accessor for WorkoutDetail();
  v19 = *(_QWORD *)(v1 + v18[5]);
  sub_23C34EC88();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = v19 + 32;
    do
    {
      v21 += 8;
      sub_23C34EC88();
      --v20;
    }
    while (v20);
  }
  v22 = v17;
  sub_23C34E838();
  v23 = v1 + v18[7];
  sub_23C28950C(v23, (uint64_t)v16, &qword_256B57E18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v24 = v44;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v44, v16, v11);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  v25 = v48;
  v26 = (uint64_t)v45;
  v27 = type metadata accessor for WorkoutDetailArtwork();
  sub_23C28950C(v23 + *(int *)(v27 + 20), v26, &qword_256B57E20);
  v28 = v50;
  v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  if (v51(v26, 1, v25) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
    v48 = v22;
    v30 = v49;
    v29(v49, v26, v25);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v25);
  }
  v31 = (uint64_t)v47;
  sub_23C34E8B0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  sub_23C27FEE4(&qword_256B59258, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35138]);
  sub_23C34DC98();
  v32 = *(_QWORD *)(v2 + v18[9]);
  swift_bridgeObjectRetain();
  sub_23C2F6EC0(a1, v32);
  swift_bridgeObjectRelease();
  sub_23C34E838();
  sub_23C34E838();
  sub_23C34E838();
  swift_bridgeObjectRetain();
  sub_23C34E8B0();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v2 + v18[14]) == 4)
  {
    sub_23C34EC94();
  }
  else
  {
    sub_23C34EC94();
    sub_23C34EC88();
  }
  if (*(_QWORD *)(v2 + v18[15] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  v33 = v50;
  v34 = v51;
  v35 = v46;
  sub_23C28950C(v2 + v18[16], v46, &qword_256B57E20);
  if (v34(v35, 1, v25) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v36 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v49, v35, v25);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    v37 = v36;
    v34 = v51;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v25);
  }
  v38 = *(_QWORD *)(v2 + v18[17]);
  swift_bridgeObjectRetain();
  sub_23C2F6A5C(a1, v38);
  swift_bridgeObjectRelease();
  sub_23C28950C(v2 + v18[18], v31, &qword_256B57E20);
  if (v34(v31, 1, v25) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    v39 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v49, v31, v25);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v25);
  }
  if (*(_QWORD *)(v2 + v18[19] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34E838();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  sub_23C34E838();
  if (*(_QWORD *)(v2 + v18[23] + 8))
  {
    sub_23C34EC94();
    swift_bridgeObjectRetain();
    sub_23C34E8B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C34EC94();
  }
  sub_23C34E838();
  sub_23C34E838();
  v40 = *(_QWORD *)(v2 + v18[26]);
  swift_bridgeObjectRetain();
  sub_23C2F6548(a1, v40);
  swift_bridgeObjectRelease();
  sub_23C34EC88();
  v41 = v2 + v18[28];
  if (*(_BYTE *)(v41 + 10) == 1)
    return sub_23C34EC94();
  v43 = *(_WORD *)(v41 + 8);
  sub_23C34EC94();
  if ((v43 & 0x100) != 0)
    return sub_23C34EC88();
  sub_23C34EC88();
  if ((v43 & 1) != 0)
    return sub_23C34EC94();
  sub_23C34EC94();
  return sub_23C34ECA0();
}

uint64_t WorkoutDetail.hashValue.getter()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutDetail.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2F64CC()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutDetail.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2F650C()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutDetail.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2F6548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = sub_23C34D950();
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23C34DA94();
  v8 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v37 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutDetailArtwork();
  v45 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v47 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57BB0);
  MEMORY[0x24BDAC7A8](v15);
  v44 = (uint64_t)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for WorkoutDetailTrainer();
  v17 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a2 + 16);
  result = sub_23C34EC88();
  if (v20)
  {
    v22 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v43 = *(_QWORD *)(v17 + 72);
    v46 = v8;
    v36 = v13;
    do
    {
      sub_23C282F90(v22, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
      v23 = v44;
      sub_23C28950C((uint64_t)v19, v44, &qword_256B57BB0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v23, 1, v13) == 1)
      {
        sub_23C34EC94();
      }
      else
      {
        v24 = v47;
        sub_23C286C3C(v23, v47);
        sub_23C34EC94();
        sub_23C28950C(v24, (uint64_t)v12, &qword_256B57E18);
        v25 = v40;
        v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v40);
        v27 = v41;
        if (v26 == 1)
        {
          sub_23C34EC94();
        }
        else
        {
          v28 = v12;
          v29 = v37;
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v28, v25);
          sub_23C34EC94();
          sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
          sub_23C34E838();
          v30 = v29;
          v12 = v28;
          v13 = v36;
          (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v25);
        }
        v31 = v39;
        sub_23C28950C(v47 + *(int *)(v13 + 20), v39, &qword_256B57E20);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v31, 1, v27) == 1)
        {
          sub_23C34EC94();
        }
        else
        {
          v32 = v42;
          v33 = v38;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v38, v31, v27);
          sub_23C34EC94();
          sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
          sub_23C34E838();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v27);
        }
        v8 = v46;
        v34 = v47;
        sub_23C34E8B0();
        sub_23C283550(v34, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailArtwork);
      }
      if (*(_QWORD *)&v19[*(int *)(v48 + 20) + 8])
      {
        sub_23C34EC94();
        swift_bridgeObjectRetain();
        v8 = v46;
        sub_23C34E8B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23C34EC94();
      }
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      result = sub_23C283550((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailTrainer);
      v22 += v43;
      --v20;
    }
    while (v20);
  }
  return result;
}

uint64_t sub_23C2F6A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = sub_23C34D950();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C34DA94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
  MEMORY[0x24BDAC7A8](v11);
  v35 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutDetailMusicTrack();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  v17 = *(_QWORD *)(a2 + 16);
  result = sub_23C34EC88();
  v36 = v17;
  if (v17)
  {
    v19 = v33 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v32 = *(_QWORD *)(v14 + 72);
    v33 = v13;
    v28 = v9;
    v29 = v8;
    do
    {
      sub_23C282F90(v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      v22 = (uint64_t)&v16[*(int *)(v13 + 20)];
      v23 = v35;
      sub_23C28950C(v22, v35, &qword_256B57E18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v23, 1, v8) == 1)
      {
        sub_23C34EC94();
      }
      else
      {
        v24 = v30;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v30, v23, v8);
        sub_23C34EC94();
        sub_23C27FEE4(&qword_256B57EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
        sub_23C34E838();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
      }
      v25 = v34;
      v26 = type metadata accessor for WorkoutDetailArtwork();
      sub_23C28950C(v22 + *(int *)(v26 + 20), (uint64_t)v7, &qword_256B57E20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v25) == 1)
      {
        sub_23C34EC94();
      }
      else
      {
        v20 = v31;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v31, v7, v25);
        sub_23C34EC94();
        sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        sub_23C34E838();
        v21 = v20;
        v9 = v28;
        v8 = v29;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v25);
      }
      sub_23C34E8B0();
      v13 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
      sub_23C27FEE4(&qword_256B59258, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35138]);
      sub_23C34DC98();
      sub_23C34EC94();
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      result = sub_23C283550((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailMusicTrack);
      v19 += v32;
      --v36;
    }
    while (v36);
  }
  return result;
}

uint64_t sub_23C2F6EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23C34EC88();
  if (v3)
  {
    v5 = (_QWORD *)(a2 + 40);
    do
    {
      if (*v5)
      {
        sub_23C34EC94();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23C34E8B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23C34EC94();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v5 += 6;
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23C34E8B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      --v3;
    }
    while (v3);
  }
  return result;
}

BOOL _s20FitnessProductDetail07WorkoutC0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  _BOOL8 result;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  __int16 v75;
  __int16 v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;

  v4 = sub_23C34D950();
  v86 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v85 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58200);
  MEMORY[0x24BDAC7A8](v6);
  v84 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v77 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
  MEMORY[0x24BDAC7A8](v11);
  v83 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v77 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v77 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v77 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v77 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v77 - v26;
  if ((sub_23C34D800() & 1) == 0)
    return 0;
  v82 = v4;
  v28 = (int *)type metadata accessor for WorkoutDetail();
  if (!sub_23C285A60(*(_QWORD **)(a1 + v28[5]), *(_QWORD **)(a2 + v28[5])))
    return 0;
  if ((sub_23C34D800() & 1) == 0)
    return 0;
  if ((_s20FitnessProductDetail07WorkoutC7ArtworkV2eeoiySbAC_ACtFZ_0(a1 + v28[7], a2 + v28[7]) & 1) == 0)
    return 0;
  v29 = v28[8];
  v80 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(a2 + v29);
  v81 = (void (*)(char *, uint64_t))(a1 + v29);
  v79 = sub_23C34DAC4();
  sub_23C27FEE4(&qword_256B57BC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35140]);
  v78 = v28;
  sub_23C27FEE4(&qword_256B57BC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE35120], MEMORY[0x24BE35148]);
  if ((sub_23C34DCA4() & 1) == 0)
    return 0;
  v30 = v78;
  if ((sub_23C285ACC(*(_QWORD *)(a1 + v78[9]), *(_QWORD *)(a2 + v78[9])) & 1) == 0
    || (sub_23C34D800() & 1) == 0
    || (sub_23C34D800() & 1) == 0
    || (sub_23C34D800() & 1) == 0)
  {
    return 0;
  }
  v31 = v30[13];
  v32 = *(_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a1 + v31 + 8);
  v34 = (_QWORD *)(a2 + v31);
  if (v32 == *v34 && v33 == v34[1] || (v35 = sub_23C34EC64(), result = 0, (v35 & 1) != 0))
  {
    v37 = v30[14];
    v38 = *(unsigned __int8 *)(a1 + v37);
    v39 = *(unsigned __int8 *)(a2 + v37);
    if (v38 == 4)
    {
      if (v39 != 4)
        return 0;
    }
    else
    {
      result = 0;
      if (v39 == 4 || v38 != v39)
        return result;
    }
    v40 = v30[15];
    v41 = (_QWORD *)(a1 + v40);
    v42 = *(_QWORD *)(a1 + v40 + 8);
    v43 = (_QWORD *)(a2 + v40);
    v44 = v43[1];
    if (v42)
    {
      if (!v44)
        return 0;
      if (*v41 != *v43 || v42 != v44)
      {
        v45 = sub_23C34EC64();
        result = 0;
        if ((v45 & 1) == 0)
          return result;
      }
    }
    else if (v44)
    {
      return 0;
    }
    sub_23C28950C(a1 + v30[16], (uint64_t)v27, &qword_256B57E20);
    sub_23C28950C(a2 + v30[16], (uint64_t)v24, &qword_256B57E20);
    v46 = (uint64_t)&v10[*(int *)(v6 + 48)];
    sub_23C28950C((uint64_t)v27, (uint64_t)v10, &qword_256B57E20);
    v81 = (void (*)(char *, uint64_t))v46;
    sub_23C28950C((uint64_t)v24, v46, &qword_256B57E20);
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
    if (v47((uint64_t)v10, 1, v82) == 1)
    {
      sub_23C285184((uint64_t)v24, &qword_256B57E20);
      sub_23C285184((uint64_t)v27, &qword_256B57E20);
      if (v47((uint64_t)v81, 1, v82) == 1)
      {
        v80 = v47;
        sub_23C285184((uint64_t)v10, &qword_256B57E20);
LABEL_33:
        v50 = v78;
        if ((sub_23C285C18(*(_QWORD *)(a1 + v78[17]), *(_QWORD *)(a2 + v78[17])) & 1) == 0)
          return 0;
        sub_23C28950C(a1 + v50[18], (uint64_t)v18, &qword_256B57E20);
        sub_23C28950C(a2 + v50[18], (uint64_t)v15, &qword_256B57E20);
        v51 = v84;
        v52 = v84 + *(int *)(v6 + 48);
        sub_23C28950C((uint64_t)v18, v84, &qword_256B57E20);
        sub_23C28950C((uint64_t)v15, v52, &qword_256B57E20);
        if (v80(v51, 1, v82) == 1)
        {
          sub_23C285184((uint64_t)v15, &qword_256B57E20);
          sub_23C285184((uint64_t)v18, &qword_256B57E20);
          if (v80(v52, 1, v82) == 1)
          {
            sub_23C285184(v84, &qword_256B57E20);
            goto LABEL_41;
          }
        }
        else
        {
          sub_23C28950C(v84, v83, &qword_256B57E20);
          if (v80(v52, 1, v82) != 1)
          {
            v54 = v85;
            v53 = v86;
            v55 = v82;
            (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v85, v52, v82);
            sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
            v56 = v83;
            v57 = sub_23C34E850();
            v58 = *(void (**)(char *, uint64_t))(v53 + 8);
            v58(v54, v55);
            sub_23C285184((uint64_t)v15, &qword_256B57E20);
            sub_23C285184((uint64_t)v18, &qword_256B57E20);
            v58((char *)v56, v55);
            sub_23C285184(v84, &qword_256B57E20);
            if ((v57 & 1) == 0)
              return 0;
LABEL_41:
            v59 = v78[19];
            v60 = (_QWORD *)(a1 + v59);
            v61 = *(_QWORD *)(a1 + v59 + 8);
            v62 = (_QWORD *)(a2 + v59);
            v63 = v62[1];
            if (v61)
            {
              if (!v63)
                return 0;
              if (*v60 != *v62 || v61 != v63)
              {
                v64 = sub_23C34EC64();
                result = 0;
                if ((v64 & 1) == 0)
                  return result;
              }
            }
            else if (v63)
            {
              return 0;
            }
            if ((sub_23C34D800() & 1) == 0
              || (MEMORY[0x24261B040](a1 + v78[21], a2 + v78[21]) & 1) == 0
              || (MEMORY[0x24261B040](a1 + v78[22], a2 + v78[22]) & 1) == 0)
            {
              return 0;
            }
            v65 = v78[23];
            v66 = (_QWORD *)(a1 + v65);
            v67 = *(_QWORD *)(a1 + v65 + 8);
            v68 = (_QWORD *)(a2 + v65);
            v69 = v68[1];
            if (v67)
            {
              if (!v69)
                return 0;
              if (*v66 != *v68 || v67 != v69)
              {
                v70 = sub_23C34EC64();
                result = 0;
                if ((v70 & 1) == 0)
                  return result;
              }
            }
            else if (v69)
            {
              return 0;
            }
            if ((sub_23C34D800() & 1) == 0
              || (sub_23C34D800() & 1) == 0
              || (sub_23C285EC0(*(_QWORD *)(a1 + v78[26]), *(_QWORD *)(a2 + v78[26])) & 1) == 0
              || *(unsigned __int8 *)(a1 + v78[27]) != *(unsigned __int8 *)(a2 + v78[27]))
            {
              return 0;
            }
            v71 = v78[28];
            v72 = a1 + v71;
            v73 = *(_BYTE *)(a1 + v71 + 10);
            v74 = a2 + v71;
            LOBYTE(v75) = *(_BYTE *)(v74 + 10);
            if ((v73 & 1) == 0)
            {
              if ((*(_BYTE *)(v74 + 10) & 1) != 0)
                return 0;
              v76 = *(_WORD *)(v72 + 8);
              v75 = *(_WORD *)(v74 + 8);
              if ((v76 & 0x100) != 0)
                return (*(_WORD *)(v74 + 8) & 0x100) != 0;
              if ((*(_WORD *)(v74 + 8) & 0x100) != 0)
                return 0;
              if ((v76 & 1) == 0)
                return (v75 & 1) == 0 && *(double *)v72 == *(double *)v74;
            }
            return (v75 & 1) != 0;
          }
          sub_23C285184((uint64_t)v15, &qword_256B57E20);
          sub_23C285184((uint64_t)v18, &qword_256B57E20);
          (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v83, v82);
        }
        v48 = v84;
LABEL_31:
        sub_23C285184(v48, &qword_256B58200);
        return 0;
      }
    }
    else
    {
      sub_23C28950C((uint64_t)v10, (uint64_t)v21, &qword_256B57E20);
      v80 = v47;
      if (v47((uint64_t)v81, 1, v82) != 1)
      {
        v49 = v82;
        (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v86 + 32))(v85, v81, v82);
        sub_23C27FEE4(&qword_256B58210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
        LODWORD(v79) = sub_23C34E850();
        v81 = *(void (**)(char *, uint64_t))(v86 + 8);
        v81(v85, v49);
        sub_23C285184((uint64_t)v24, &qword_256B57E20);
        sub_23C285184((uint64_t)v27, &qword_256B57E20);
        v81(v21, v49);
        sub_23C285184((uint64_t)v10, &qword_256B57E20);
        if ((v79 & 1) == 0)
          return 0;
        goto LABEL_33;
      }
      sub_23C285184((uint64_t)v24, &qword_256B57E20);
      sub_23C285184((uint64_t)v27, &qword_256B57E20);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v82);
    }
    v48 = (uint64_t)v10;
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_23C2F7908()
{
  return sub_23C27FEE4(qword_256B57790, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetail, (uint64_t)&protocol conformance descriptor for WorkoutDetail);
}

char *initializeBufferWithCopyOfBuffer for WorkoutDetail(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34D86C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    swift_bridgeObjectRetain();
    v8(v10, v11, v7);
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_23C34DA94();
    v16 = *(_QWORD *)(v15 - 8);
    v76 = v7;
    v77 = v8;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = type metadata accessor for WorkoutDetailArtwork();
    v20 = *(int *)(v19 + 20);
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = sub_23C34D950();
    v24 = *(_QWORD *)(v23 - 8);
    v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v75(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = *(int *)(v19 + 24);
    v27 = &v13[v26];
    v28 = &v14[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = a3[8];
    v31 = &a1[v30];
    v32 = &a2[v30];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = sub_23C34DAC4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      v34 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v34;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v35 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
    v36 = &a1[v35];
    v37 = &a2[v35];
    swift_bridgeObjectRetain();
    v77(v36, v37, v76);
    v77(&a1[a3[11]], &a2[a3[11]], v76);
    v77(&a1[a3[12]], &a2[a3[12]], v76);
    v38 = a3[13];
    v39 = a3[14];
    v40 = &a1[v38];
    v41 = &a2[v38];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    a1[v39] = a2[v39];
    v43 = a3[15];
    v44 = a3[16];
    v45 = &a1[v43];
    v46 = &a2[v43];
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v48 = &a1[v44];
    v49 = &a2[v44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75(v49, 1, v23))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v48, v49, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v48, 0, 1, v23);
    }
    v51 = a3[18];
    *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
    v52 = &a1[v51];
    v53 = &a2[v51];
    swift_bridgeObjectRetain();
    if (v75(v53, 1, v23))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v52, v53, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v52, 0, 1, v23);
    }
    v55 = a3[19];
    v56 = a3[20];
    v57 = &a1[v55];
    v58 = &a2[v55];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = &a1[v56];
    v61 = &a2[v56];
    swift_bridgeObjectRetain();
    v77(v60, v61, v76);
    v62 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v62(&a1[a3[21]], &a2[a3[21]], v23);
    v62(&a1[a3[22]], &a2[a3[22]], v23);
    v63 = a3[23];
    v64 = a3[24];
    v65 = &a1[v63];
    v66 = &a2[v63];
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v68 = &a1[v64];
    v69 = &a2[v64];
    swift_bridgeObjectRetain();
    v77(v68, v69, v76);
    v77(&a1[a3[25]], &a2[a3[25]], v76);
    v70 = a3[27];
    *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
    a1[v70] = a2[v70];
    v71 = a3[28];
    v72 = &a1[v71];
    v73 = &a2[v71];
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *(_DWORD *)(v72 + 7) = *(_DWORD *)(v73 + 7);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutDetail(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v4 = sub_23C34D86C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + a2[6], v4);
  v6 = a1 + a2[7];
  v7 = sub_23C34DA94();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = v6 + *(int *)(type metadata accessor for WorkoutDetailArtwork() + 20);
  v10 = sub_23C34D950();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  v13 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_23C34DAC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v5(a1 + a2[10], v4);
  v5(a1 + a2[11], v4);
  v5(a1 + a2[12], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1 + a2[16];
  if (!v12(v15, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
  swift_bridgeObjectRelease();
  v16 = a1 + a2[18];
  if (!v12(v16, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v10);
  swift_bridgeObjectRelease();
  v5(a1 + a2[20], v4);
  v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v17(a1 + a2[21], v10);
  v17(a1 + a2[22], v10);
  swift_bridgeObjectRelease();
  v5(a1 + a2[24], v4);
  v5(a1 + a2[25], v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_bridgeObjectRetain();
  v7(v9, v10, v6);
  v11 = a3[7];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = sub_23C34DA94();
  v15 = *(_QWORD *)(v14 - 8);
  v74 = v6;
  v75 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = type metadata accessor for WorkoutDetailArtwork();
  v18 = *(int *)(v17 + 20);
  v19 = &v12[v18];
  v20 = &v13[v18];
  v21 = sub_23C34D950();
  v22 = *(_QWORD *)(v21 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v73(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = *(int *)(v17 + 24);
  v25 = &v12[v24];
  v26 = &v13[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = a3[8];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = sub_23C34DAC4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  else
  {
    v32 = v30[1];
    *v29 = *v30;
    v29[1] = v32;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v33 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v34 = a1 + v33;
  v35 = a2 + v33;
  swift_bridgeObjectRetain();
  v75(v34, v35, v74);
  v75(a1 + a3[11], a2 + a3[11], v74);
  v75(a1 + a3[12], a2 + a3[12], v74);
  v36 = a3[13];
  v37 = a3[14];
  v38 = (_QWORD *)(a1 + v36);
  v39 = (_QWORD *)(a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  *(_BYTE *)(a1 + v37) = *(_BYTE *)(a2 + v37);
  v41 = a3[15];
  v42 = a3[16];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (void *)(a1 + v42);
  v47 = (void *)(a2 + v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73((char *)v47, 1, v21))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v46, v47, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v46, 0, 1, v21);
  }
  v49 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v50 = (void *)(a1 + v49);
  v51 = (void *)(a2 + v49);
  swift_bridgeObjectRetain();
  if (v73((char *)v51, 1, v21))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v50, v51, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v50, 0, 1, v21);
  }
  v53 = a3[19];
  v54 = a3[20];
  v55 = (_QWORD *)(a1 + v53);
  v56 = (_QWORD *)(a2 + v53);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = a1 + v54;
  v59 = a2 + v54;
  swift_bridgeObjectRetain();
  v75(v58, v59, v74);
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v60(a1 + a3[21], a2 + a3[21], v21);
  v60(a1 + a3[22], a2 + a3[22], v21);
  v61 = a3[23];
  v62 = a3[24];
  v63 = (_QWORD *)(a1 + v61);
  v64 = (_QWORD *)(a2 + v61);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  v66 = a1 + v62;
  v67 = a2 + v62;
  swift_bridgeObjectRetain();
  v75(v66, v67, v74);
  v75(a1 + a3[25], a2 + a3[25], v74);
  v68 = a3[27];
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(a2 + v68);
  v69 = a3[28];
  v70 = a1 + v69;
  v71 = a2 + v69;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *(_DWORD *)(v70 + 7) = *(_DWORD *)(v71 + 7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69 = v7;
  v70 = v6;
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v68 = type metadata accessor for WorkoutDetailArtwork();
  v17 = *(int *)(v68 + 20);
  v18 = &v9[v17];
  v71 = v10;
  v19 = &v10[v17];
  v20 = sub_23C34D950();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v72 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22;
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (v24)
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = v21;
    }
    else
    {
      v29 = v19;
      v26 = v21;
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v29, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  else if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    v28 = v19;
    v26 = v21;
    memcpy(v18, v28, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v30 = v19;
    v26 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v30, v20);
  }
  v31 = *(int *)(v68 + 24);
  v32 = &v9[v31];
  v33 = &v71[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v34 = a3[8];
    v35 = (_QWORD *)(a1 + v34);
    v36 = (_QWORD *)(a2 + v34);
    sub_23C285184(a1 + v34, &qword_256B58ED8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_23C34DAC4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69(a1 + a3[10], a2 + a3[10], v70);
  v69(a1 + a3[11], a2 + a3[11], v70);
  v69(a1 + a3[12], a2 + a3[12], v70);
  v38 = a3[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v41 = a3[15];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[16];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  v47 = v72(a1 + v44, 1, v20);
  v48 = v72((uint64_t)v46, 1, v20);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v45, v46, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v45, 0, 1, v20);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v45, v20);
LABEL_25:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 24))(v45, v46, v20);
LABEL_26:
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = a3[18];
  v51 = (void *)(a1 + v50);
  v52 = (const void *)(a2 + v50);
  v53 = v72(a1 + v50, 1, v20);
  v54 = v72((uint64_t)v52, 1, v20);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 24))(v51, v52, v20);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v51, v20);
    goto LABEL_31;
  }
  if (v54)
  {
LABEL_31:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(v51, v52, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v51, 0, 1, v20);
LABEL_32:
  v56 = a3[19];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69(a1 + a3[20], a2 + a3[20], v70);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v59(a1 + a3[21], a2 + a3[21], v20);
  v59(a1 + a3[22], a2 + a3[22], v20);
  v60 = a3[23];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (_QWORD *)(a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69(a1 + a3[24], a2 + a3[24], v70);
  v69(a1 + a3[25], a2 + a3[25], v70);
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  v63 = a3[28];
  v64 = a1 + v63;
  v65 = (uint64_t *)(a2 + v63);
  v66 = *v65;
  *(_DWORD *)(v64 + 7) = *(_DWORD *)((char *)v65 + 7);
  *(_QWORD *)v64 = v66;
  return a1;
}

uint64_t initializeWithTake for WorkoutDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v45 = v7;
  v7(a1 + v8, a2 + v8, v6);
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = sub_23C34DA94();
  v13 = *(_QWORD *)(v12 - 8);
  v47 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = type metadata accessor for WorkoutDetailArtwork();
  v16 = *(int *)(v15 + 20);
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = sub_23C34D950();
  v20 = *(_QWORD *)(v19 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v46(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_OWORD *)&v10[*(int *)(v15 + 24)] = *(_OWORD *)&v11[*(int *)(v15 + 24)];
  v22 = a3[8];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_23C34DAC4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v27 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v45(a1 + v27, a2 + v27, v47);
  v45(a1 + a3[11], a2 + a3[11], v47);
  v45(a1 + a3[12], a2 + a3[12], v47);
  v28 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  if (v46((char *)(a2 + v29), 1, v19))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v30, v31, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v30, 0, 1, v19);
  }
  v33 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  if (v46((char *)(a2 + v33), 1, v19))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v34, v35, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
  }
  v37 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  v45(a1 + v37, a2 + v37, v47);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v38(a1 + a3[21], a2 + a3[21], v19);
  v38(a1 + a3[22], a2 + a3[22], v19);
  v39 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  v45(a1 + v39, a2 + v39, v47);
  v45(a1 + a3[25], a2 + a3[25], v47);
  v40 = a3[27];
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[28];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_DWORD *)(v42 + 7) = *(_DWORD *)(v43 + 7);
  return a1;
}

uint64_t assignWithTake for WorkoutDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23C34D86C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v77 = v7;
  v78 = v6;
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = sub_23C34DA94();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E18);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v75 = type metadata accessor for WorkoutDetailArtwork();
  v76 = v10;
  v17 = *(int *)(v75 + 20);
  v18 = &v9[v17];
  v19 = &v10[v17];
  v20 = sub_23C34D950();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22;
  v24 = v22(v19, 1, v20);
  v79 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  v26 = *(int *)(v75 + 24);
  v27 = &v9[v26];
  v28 = &v76[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v31 = a3[8];
    v32 = (void *)(a1 + v31);
    v33 = (const void *)(a2 + v31);
    sub_23C285184(a1 + v31, &qword_256B58ED8);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = sub_23C34DAC4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v77(a1 + a3[10], a2 + a3[10], v78);
  v77(a1 + a3[11], a2 + a3[11], v78);
  v77(a1 + a3[12], a2 + a3[12], v78);
  v36 = a3[13];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[16];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = v80(a1 + v46, 1, v20);
  v50 = v80((uint64_t)v48, 1, v20);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, const void *, uint64_t))(v79 + 32))(v47, v48, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v47, 0, 1, v20);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v79 + 8))(v47, v20);
LABEL_22:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, const void *, uint64_t))(v79 + 40))(v47, v48, v20);
LABEL_23:
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v52 = a3[18];
  v53 = (void *)(a1 + v52);
  v54 = (const void *)(a2 + v52);
  v55 = v80(a1 + v52, 1, v20);
  v56 = v80((uint64_t)v54, 1, v20);
  if (v55)
  {
    if (v56)
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      v58 = v79;
    }
    else
    {
      v58 = v79;
      (*(void (**)(void *, const void *, uint64_t))(v79 + 32))(v53, v54, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v53, 0, 1, v20);
    }
  }
  else
  {
    v58 = v79;
    if (v56)
    {
      (*(void (**)(void *, uint64_t))(v79 + 8))(v53, v20);
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v79 + 40))(v53, v54, v20);
    }
  }
  v60 = a3[19];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)(a2 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  v77(a1 + a3[20], a2 + a3[20], v78);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 40);
  v65(a1 + a3[21], a2 + a3[21], v20);
  v65(a1 + a3[22], a2 + a3[22], v20);
  v66 = a3[23];
  v67 = (_QWORD *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  v77(a1 + a3[24], a2 + a3[24], v78);
  v77(a1 + a3[25], a2 + a3[25], v78);
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  v71 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  v72 = a1 + v71;
  v73 = a2 + v71;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_DWORD *)(v72 + 7) = *(_DWORD *)(v73 + 7);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDetail()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2F9644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23C34D86C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for WorkoutDetailArtwork();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[8];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[16];
        }
        else
        {
          v8 = sub_23C34D950();
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[21];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetail()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C2F976C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_23C34D86C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for WorkoutDetailArtwork();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58ED8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B57E20);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[16];
        }
        else
        {
          v10 = sub_23C34D950();
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[21];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C2F9884()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23C34D86C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WorkoutDetailArtwork();
    if (v1 <= 0x3F)
    {
      sub_23C2C5798();
      if (v2 <= 0x3F)
      {
        sub_23C2F99CC();
        if (v3 <= 0x3F)
        {
          sub_23C34D950();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23C2F99CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B581B8[0])
  {
    sub_23C34D950();
    v0 = sub_23C34EA48();
    if (!v1)
      atomic_store(v0, qword_256B581B8);
  }
}

uint64_t getEnumTagSinglePayload for WorkoutDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutDetail.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_23C2F9AFC + 4 * byte_23C357FCE[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_23C2F9B30 + 4 * byte_23C357FC9[v4]))();
}

uint64_t sub_23C2F9B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F9B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2F9B40);
  return result;
}

uint64_t sub_23C2F9B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2F9B54);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_23C2F9B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2F9B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetail.CodingKeys()
{
  return &type metadata for WorkoutDetail.CodingKeys;
}

unint64_t sub_23C2F9B80()
{
  unint64_t result;

  result = qword_256B5AB00;
  if (!qword_256B5AB00)
  {
    result = MEMORY[0x24261C66C](&unk_23C35828C, &type metadata for WorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB00);
  }
  return result;
}

unint64_t sub_23C2F9BC8()
{
  unint64_t result;

  result = qword_256B5AB08;
  if (!qword_256B5AB08)
  {
    result = MEMORY[0x24261C66C](&unk_23C3581FC, &type metadata for WorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB08);
  }
  return result;
}

unint64_t sub_23C2F9C10()
{
  unint64_t result;

  result = qword_256B5AB10;
  if (!qword_256B5AB10)
  {
    result = MEMORY[0x24261C66C](&unk_23C358224, &type metadata for WorkoutDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB10);
  }
  return result;
}

uint64_t sub_23C2F9C54(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6269737365636361 && a2 == 0xED00007974696C69;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xED00007365707954 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C361AF0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x436B726F77747261 && a2 == 0xEF65646F43706F72 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x75626972746E6F63 && a2 == 0xEC00000073726F74 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361B10 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023C361B30 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C361B50 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x617254636973756DLL && a2 == 0xEB00000000736B63 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C361B70 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000023C361B90 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4C7972616D697270 && a2 == 0xEF65676175676E61 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x55676E6972616873 && a2 == 0xEA00000000004C52 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023C361A60 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x7372656E69617274 && a2 == 0xE800000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEE00737574617453 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEE00737574617453)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 24;
    else
      return 25;
  }
}

double WorkoutDetailContentMargins.bottom.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double WorkoutDetailContentMargins.leading.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double WorkoutDetailContentMargins.top.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double WorkoutDetailContentMargins.trailing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void WorkoutDetailContentMargins.init(top:leading:bottom:trailing:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a4;
  a1[1] = a3;
  a1[2] = a2;
  a1[3] = a5;
}

uint64_t sub_23C2FA660(char a1)
{
  return *(_QWORD *)&aBottom_2[8 * a1];
}

uint64_t sub_23C2FA680()
{
  char *v0;

  return sub_23C2FA660(*v0);
}

uint64_t sub_23C2FA688()
{
  sub_23C2FA898();
  return sub_23C34ECD0();
}

uint64_t sub_23C2FA6B0()
{
  sub_23C2FA898();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailContentMargins.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v11 = v1[2];
  v10 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2FA898();
  sub_23C34ECC4();
  v14 = v9;
  HIBYTE(v13) = 0;
  sub_23C2C8F30();
  sub_23C34EC40();
  if (!v2)
  {
    v14 = v8;
    HIBYTE(v13) = 1;
    sub_23C34EC40();
    v14 = v11;
    HIBYTE(v13) = 2;
    sub_23C34EC40();
    v14 = v10;
    HIBYTE(v13) = 3;
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23C2FA898()
{
  unint64_t result;

  result = qword_256B5AB20;
  if (!qword_256B5AB20)
  {
    result = MEMORY[0x24261C66C](&unk_23C3584D0, &type metadata for WorkoutDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB20);
  }
  return result;
}

uint64_t WorkoutDetailContentMargins.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2FA898();
  sub_23C34ECB8();
  if (!v2)
  {
    HIBYTE(v14) = 0;
    sub_23C2C917C();
    sub_23C34EBB0();
    v9 = v15;
    HIBYTE(v14) = 1;
    sub_23C34EBB0();
    v10 = v15;
    HIBYTE(v14) = 2;
    sub_23C34EBB0();
    v12 = v15;
    HIBYTE(v14) = 3;
    sub_23C34EBB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C2FAAE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return WorkoutDetailContentMargins.init(from:)(a1, a2);
}

uint64_t sub_23C2FAAF8(_QWORD *a1)
{
  return WorkoutDetailContentMargins.encode(to:)(a1);
}

uint64_t WorkoutDetailContentMargins.hash(into:)()
{
  sub_23C34ECA0();
  sub_23C34ECA0();
  sub_23C34ECA0();
  return sub_23C34ECA0();
}

uint64_t WorkoutDetailContentMargins.hashValue.getter()
{
  sub_23C34EC7C();
  WorkoutDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2FABC0()
{
  sub_23C34EC7C();
  WorkoutDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C2FAC0C()
{
  sub_23C34EC7C();
  WorkoutDetailContentMargins.hash(into:)();
  return sub_23C34ECAC();
}

unint64_t sub_23C2FAC54()
{
  unint64_t result;

  result = qword_256B5AB30;
  if (!qword_256B5AB30)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMargins, &type metadata for WorkoutDetailContentMargins);
    atomic_store(result, (unint64_t *)&qword_256B5AB30);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMargins()
{
  return &type metadata for WorkoutDetailContentMargins;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailContentMargins.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C2FACF4 + 4 * byte_23C358315[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C2FAD28 + 4 * byte_23C358310[v4]))();
}

uint64_t sub_23C2FAD28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2FAD30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2FAD38);
  return result;
}

uint64_t sub_23C2FAD44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2FAD4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C2FAD50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2FAD58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMargins.CodingKeys()
{
  return &type metadata for WorkoutDetailContentMargins.CodingKeys;
}

unint64_t sub_23C2FAD78()
{
  unint64_t result;

  result = qword_256B5AB38;
  if (!qword_256B5AB38)
  {
    result = MEMORY[0x24261C66C](&unk_23C3584A8, &type metadata for WorkoutDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB38);
  }
  return result;
}

unint64_t sub_23C2FADC0()
{
  unint64_t result;

  result = qword_256B5AB40;
  if (!qword_256B5AB40)
  {
    result = MEMORY[0x24261C66C](&unk_23C358418, &type metadata for WorkoutDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB40);
  }
  return result;
}

unint64_t sub_23C2FAE08()
{
  unint64_t result;

  result = qword_256B5AB48;
  if (!qword_256B5AB48)
  {
    result = MEMORY[0x24261C66C](&unk_23C358440, &type metadata for WorkoutDetailContentMargins.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AB48);
  }
  return result;
}

uint64_t EditorialDetailFeature.environment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 56) = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

__n128 EditorialDetailFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

uint64_t EditorialDetailFeature.dispose(localState:sharedState:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for EditorialDetailState() + 28);
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 2, 2, v2);
}

void EditorialDetailFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t State;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t (*v22)(_QWORD);
  char *v23;
  _QWORD v24[3];
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v31 = a2;
  v32 = a4;
  v30 = a3;
  v5 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v5);
  v24[0] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A8C0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for EditorialDetailLoadState();
  MEMORY[0x24BDAC7A8](State);
  v24[1] = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)v24 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB50);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23C34D950();
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B48);
  v28 = *(_QWORD *)(v15 - 8);
  v29 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v24[2] = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v18 = type metadata accessor for EditorialDetailAction();
  MEMORY[0x24BDAC7A8](v18);
  v20 = v4[1];
  v33 = *v4;
  v34 = v20;
  v21 = v4[3];
  v35 = v4[2];
  v36 = v21;
  sub_23C282F90(v32, (uint64_t)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  v23 = (char *)sub_23C2FB198 + 4 * word_23C358570[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C2FB198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 - 184) + *(int *)(type metadata accessor for EditorialDetailState() + 28);
  sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  sub_23C2FC0B4(v0, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 2, v3);
}

unint64_t sub_23C2FB858()
{
  unint64_t result;

  result = qword_256B5AB58;
  if (!qword_256B5AB58)
  {
    result = MEMORY[0x24261C66C](&unk_23C358650, &type metadata for EditorialDetailFeature.TaskIdentifier);
    atomic_store(result, &qword_256B5AB58);
  }
  return result;
}

uint64_t sub_23C2FB89C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = sub_23C34E964();
  v2[3] = sub_23C34E958();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23C2FB910;
  return v6();
}

uint64_t sub_23C2FB910()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23C34E940();
  return swift_task_switch();
}

uint64_t sub_23C2FB998()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2FB9CC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2FBA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  v7[2] = sub_23C34E964();
  v7[3] = sub_23C34E958();
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v12 = (_QWORD *)swift_task_alloc();
  v7[4] = v12;
  *v12 = v7;
  v12[1] = sub_23C2FBA98;
  return v14(a5, a6, a7);
}

uint64_t sub_23C2FBA98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23C34E940();
  return swift_task_switch();
}

uint64_t sub_23C2FBB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23C34E988();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23C34E97C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23C285184(a1, &qword_256B5AB50);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23C34E940();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_23C2FBC54(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v4[2] = a1;
  v4[3] = type metadata accessor for EditorialDetailAction();
  v4[4] = swift_task_alloc();
  type metadata accessor for EditorialDetailContent();
  v8 = swift_task_alloc();
  v4[5] = v8;
  v4[6] = sub_23C34E964();
  v4[7] = sub_23C34E958();
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(int *)*a2 + *a2);
  v9 = (_QWORD *)swift_task_alloc();
  v4[8] = v9;
  *v9 = v4;
  v9[1] = sub_23C2FBD38;
  return v11(v8, a3, a4);
}

uint64_t sub_23C2FBD38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 80) = sub_23C34E940();
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_23C2FBDC4()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C282F90(v0[5], v0[4], (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABB0);
  *v1 = v0;
  v1[1] = sub_23C2FBE50;
  return sub_23C34E76C();
}

uint64_t sub_23C2FBE50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailAction);
  return swift_task_switch();
}

uint64_t sub_23C2FBEB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2FBF08()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C2FBF50()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2FBF94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 2;
  v6 = v1[10];
  v5 = v1[11];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C2A1EC8;
  return sub_23C2FBC54(a1, v4, v6, v5);
}

uint64_t sub_23C2FBFFC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C2FC050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2 + *(int *)(type metadata accessor for EditorialDetailState() + 28);
  sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailLoadState);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A538);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 2, 2, v3);
}

uint64_t sub_23C2FC0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditorialDetailContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2FC0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23C34D950();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23C2FC194(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C34D950() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (uint64_t)(v1 + 4);
  v8 = v1[12];
  v9 = v1[13];
  v10 = (uint64_t)v1 + ((v4 + 112) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23C2D2F88;
  return sub_23C2FBA00(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23C2FC23C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C2FC278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C2D2F88;
  return sub_23C2FB89C(a1, v1 + 16);
}

uint64_t sub_23C2FC2CC()
{
  return sub_23C27FEE4(&qword_256B5AB98, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailAction, (uint64_t)&protocol conformance descriptor for EditorialDetailAction);
}

uint64_t sub_23C2FC2F8()
{
  return sub_23C27FEE4(&qword_256B5ABA0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailAction, (uint64_t)&protocol conformance descriptor for EditorialDetailAction);
}

uint64_t sub_23C2FC324()
{
  return sub_23C27FEE4(&qword_256B5A540, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailState, (uint64_t)&protocol conformance descriptor for EditorialDetailState);
}

ValueMetadata *type metadata accessor for EditorialDetailFeature()
{
  return &type metadata for EditorialDetailFeature;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C2FC3AC + 4 * byte_23C358581[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C2FC3E0 + 4 * byte_23C35857C[v4]))();
}

uint64_t sub_23C2FC3E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2FC3E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C2FC3F0);
  return result;
}

uint64_t sub_23C2FC3FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C2FC404);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C2FC408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C2FC410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailFeature.TaskIdentifier()
{
  return &type metadata for EditorialDetailFeature.TaskIdentifier;
}

unint64_t sub_23C2FC430()
{
  unint64_t result;

  result = qword_256B5ABA8;
  if (!qword_256B5ABA8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358628, &type metadata for EditorialDetailFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B5ABA8);
  }
  return result;
}

__n128 WorkoutDetailFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v4;
  return result;
}

void sub_23C2FC490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = sub_23C34D950();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for WorkoutDetailFeature.TaskIdentifier();
  MEMORY[0x24BDAC7A8](v2);
  sub_23C282F90(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_23C2FC55C + 4 * byte_23C358690[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C2FC55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  sub_23C34EC88();
  sub_23C27FEE4(&qword_256B57EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23C34E838();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

uint64_t sub_23C2FC660()
{
  sub_23C34EC7C();
  sub_23C2FC490();
  return sub_23C34ECAC();
}

uint64_t sub_23C2FC6A0()
{
  sub_23C34EC7C();
  sub_23C2FC490();
  return sub_23C34ECAC();
}

void WorkoutDetailFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t (*v27)(_QWORD);
  char *v28;
  _QWORD v29[9];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v34 = a3;
  v35 = a4;
  v29[1] = a2;
  v31 = sub_23C34D950();
  v36 = *(_QWORD *)(v31 - 8);
  v5 = *(_QWORD *)(v36 + 64);
  MEMORY[0x24BDAC7A8](v31);
  v29[3] = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v29[7] = (char *)v29 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v29[2] = (char *)v29 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v29[6] = (char *)v29 - v11;
  v30 = type metadata accessor for WorkoutDetailFeature.TaskIdentifier();
  MEMORY[0x24BDAC7A8](v30);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v29[8] = (char *)v29 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B38);
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v29[5] = (char *)v29 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v29[4] = (char *)v29 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v23 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v23);
  v25 = v4[1];
  v37 = *v4;
  v38 = v25;
  v26 = v4[3];
  v39 = v4[2];
  v40 = v26;
  sub_23C282F90(v35, (uint64_t)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v27);
  v28 = (char *)sub_23C2FC978 + 4 * word_23C358696[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C2FC978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v3 = *(_QWORD *)(v2 - 168);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  *(_QWORD *)(v2 - 248) = v4;
  v5 = *(_QWORD *)(v2 - 240);
  v6 = *(_QWORD *)(v2 - 208);
  v4(v5, v1, v6);
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC8);
  v8 = *(_QWORD *)(v2 - 256);
  *(_QWORD *)(v2 - 232) = v8 + v7[12];
  *(_QWORD *)(v2 - 280) = v8 + v7[16];
  *(_QWORD *)(v2 - 176) = v8 + v7[20];
  *(_QWORD *)(v2 - 264) = v8 + v7[24];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v0, v5, v6);
  swift_storeEnumTagMultiPayload();
  sub_23C282F90(v0, *(_QWORD *)(v2 - 224), (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailFeature.TaskIdentifier);
  sub_23C27FEE4(&qword_256B5ABB8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailFeature.TaskIdentifier, (uint64_t)&unk_23C358788);
  sub_23C34EA78();
  sub_23C2FD334(v0);
  v10 = *MEMORY[0x24BE2B570];
  v11 = sub_23C34E790();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(*(_QWORD *)(v2 - 280), v10, v11);
  v12 = *(_QWORD *)(v2 - 272);
  v9(v12, v5, v6);
  v13 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = (char *)swift_allocObject();
  v15 = *(_OWORD *)(v2 - 144);
  *((_OWORD *)v14 + 1) = *(_OWORD *)(v2 - 160);
  *((_OWORD *)v14 + 2) = v15;
  v16 = *(_OWORD *)(v2 - 112);
  *((_OWORD *)v14 + 3) = *(_OWORD *)(v2 - 128);
  *((_OWORD *)v14 + 4) = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 - 248))(&v14[v13], v12, v6);
  v17 = *(_QWORD **)(v2 - 264);
  *v17 = &unk_256B5ABF0;
  v17[1] = v14;
  sub_23C2FBFFC(v2 - 160);
  sub_23C34E970();
  v18 = *MEMORY[0x24BE2B558];
  v19 = sub_23C34E784();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(*(_QWORD *)(v2 - 176), v18, v19);
  v21 = *(_QWORD *)(v2 - 200);
  v20 = *(_QWORD *)(v2 - 192);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v8, *MEMORY[0x24BE2B438], v20);
  v22 = *(unint64_t **)(v2 - 184);
  v23 = *v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_23C2A250C(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
  v25 = *(_QWORD *)(v23 + 16);
  v24 = *(_QWORD *)(v23 + 24);
  if (v25 >= v24 >> 1)
    v23 = sub_23C2A250C(v24 > 1, v25 + 1, 1, v23);
  *(_QWORD *)(v23 + 16) = v25 + 1;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 32))(v23+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v25, *(_QWORD *)(v2 - 256), v20);
  *v22 = v23;
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 168) + 8))(*(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 208));
}

uint64_t type metadata accessor for WorkoutDetailFeature.TaskIdentifier()
{
  uint64_t result;

  result = qword_256B5AC90;
  if (!qword_256B5AC90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C2FD334(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutDetailFeature.TaskIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2FD370(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v4[2] = sub_23C34E964();
  v4[3] = sub_23C34E958();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(*(int *)*a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_23C2FBA98;
  return v10(a3, a4);
}

uint64_t sub_23C2FD3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23C34E964();
  v3[3] = sub_23C34E958();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23C2FB910;
  return v8(a3);
}

uint64_t sub_23C2FD47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v5[2] = sub_23C34E964();
  v5[3] = sub_23C34E958();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v10 = (_QWORD *)swift_task_alloc();
  v5[4] = v10;
  *v10 = v5;
  v10[1] = sub_23C2FBA98;
  return v12(a3, a4, a5);
}

uint64_t sub_23C2FD514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v4[2] = sub_23C34E964();
  v4[3] = sub_23C34E958();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_23C2FBA98;
  return v10(a3, a4);
}

uint64_t sub_23C2FD5A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C2D2F88;
  return sub_23C2FD514(a1, v4, v6, v5);
}

uint64_t sub_23C2FD614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23C34D950();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23C2FD6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C34D950() - 8) + 80);
  v5 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = v1 + ((v4 + 96) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23C2D2F88;
  return sub_23C2FD47C(a1, v5, v6, v7, v8);
}

uint64_t sub_23C2FD738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23C34D950();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23C2FD7C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C34D950() - 8) + 80);
  v5 = v1 + 16;
  v6 = v1 + ((v4 + 80) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C2A1EC8;
  return sub_23C2FD3FC(a1, v5, v6);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C2FD888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 2;
  v6 = v1[10];
  v5 = v1[11];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C2D2F88;
  return sub_23C2FD370(a1, v4, v6, v5);
}

uint64_t sub_23C2FD8F0()
{
  return sub_23C27FEE4(&qword_256B5AC08, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailAction, (uint64_t)&protocol conformance descriptor for WorkoutDetailAction);
}

uint64_t sub_23C2FD91C()
{
  return sub_23C27FEE4(&qword_256B5AC10, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailAction, (uint64_t)&protocol conformance descriptor for WorkoutDetailAction);
}

uint64_t sub_23C2FD948()
{
  return sub_23C27FEE4(qword_256B5AC18, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailState, (uint64_t)&protocol conformance descriptor for WorkoutDetailState);
}

ValueMetadata *type metadata accessor for WorkoutDetailFeature()
{
  return &type metadata for WorkoutDetailFeature;
}

uint64_t *sub_23C2FD984(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23C34D950();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23C2FDAEC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
LABEL_4:
      v3 = sub_23C34D950();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
    case 3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_23C2FDB80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23C34D950();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_6;
    case 1u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      goto LABEL_6;
    case 2u:
    case 3u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_23C2FDCB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23C2FD334((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23C34D950();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        goto LABEL_7;
      case 2u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_23C2FDE10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23C34D950();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23C2FDEF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23C2FD334((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5ABD0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23C34D950();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C2FDFE8()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[8];

  result = sub_23C34D950();
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    v2[6] = &unk_23C358748;
    v2[7] = &unk_23C358748;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23C2FE074()
{
  return sub_23C27FEE4(&qword_256B5ACC8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutDetailFeature.TaskIdentifier, (uint64_t)&unk_23C358760);
}

void sub_23C2FE0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[6];

  v4 = sub_23C34D950();
  v19[4] = *(_QWORD *)(v4 - 8);
  v19[5] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v19[3] = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v19[2] = (char *)v19 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v19[1] = (char *)v19 - v9;
  v10 = type metadata accessor for WorkoutDetailFeature.TaskIdentifier();
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACD0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v19 + *(int *)(v16 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C282F90(a1, (uint64_t)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailFeature.TaskIdentifier);
  sub_23C282F90(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailFeature.TaskIdentifier);
  v18 = (char *)sub_23C2FE260 + 4 * byte_23C3586B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C2FE260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_23C282F90(v0, v2, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutDetailFeature.TaskIdentifier);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 96) + 8))(v2, *(_QWORD *)(v3 - 88));
    sub_23C2FE51C(v0);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 96);
    v7 = *(_QWORD *)(v3 - 88);
    v8 = *(_QWORD *)(v3 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v1, v7);
    v4 = MEMORY[0x24261B040](v2, v8);
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(v8, v7);
    v9(v2, v7);
    sub_23C2FD334(v0);
  }
  return v4 & 1;
}

uint64_t sub_23C2FE51C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C2FE560(char a1)
{
  return *(_QWORD *)&aIdle_13[8 * a1];
}

uint64_t sub_23C2FE580()
{
  char *v0;

  return sub_23C2FE560(*v0);
}

uint64_t sub_23C2FE588()
{
  sub_23C2FF6D4();
  return sub_23C34ECD0();
}

uint64_t sub_23C2FE5B0()
{
  sub_23C2FF6D4();
  return sub_23C34ECDC();
}

uint64_t sub_23C2FE5D8()
{
  sub_23C2FF75C();
  return sub_23C34ECD0();
}

uint64_t sub_23C2FE600()
{
  sub_23C2FF75C();
  return sub_23C34ECDC();
}

uint64_t sub_23C2FE628()
{
  sub_23C2FF7A0();
  return sub_23C34ECD0();
}

uint64_t sub_23C2FE650()
{
  sub_23C2FF7A0();
  return sub_23C34ECDC();
}

uint64_t sub_23C2FE678()
{
  sub_23C2FF7E4();
  return sub_23C34ECD0();
}

uint64_t sub_23C2FE6A0()
{
  sub_23C2FF7E4();
  return sub_23C34ECDC();
}

uint64_t WorkoutContextMenuPreviewLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACD8);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACE0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACE8);
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5ACF0);
  v34 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C2FF6D4();
  sub_23C34ECC4();
  sub_23C2FF718(v33, (uint64_t)v14);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 2, v4);
  if (v18)
  {
    if (v18 == 1)
    {
      v35 = 0;
      sub_23C2FF7E4();
      sub_23C34EBD4();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      v36 = 1;
      sub_23C2FF7A0();
      v23 = v26;
      sub_23C34EBD4();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v28);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
  else
  {
    v19 = v29;
    sub_23C2851C0((uint64_t)v14, v29, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
    v37 = 2;
    sub_23C2FF75C();
    v20 = v30;
    sub_23C34EBD4();
    sub_23C27FEE4(&qword_256B588C8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewContent, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewContent);
    v21 = v32;
    sub_23C34EC40();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v21);
    sub_23C283550(v19, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v15);
  }
}

uint64_t WorkoutContextMenuPreviewLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t State;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AD18);
  v4 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  v53 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AD20);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AD28);
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AD30);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - v18;
  v20 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23C2FF6D4();
  v58 = v13;
  v21 = v60;
  sub_23C34ECB8();
  if (!v21)
  {
    v22 = v55;
    v23 = v56;
    v46 = v16;
    v47 = v19;
    v24 = v57;
    v60 = v11;
    v25 = sub_23C34EBBC();
    v26 = (char *)v25;
    if (*(_QWORD *)(v25 + 16) == 1)
    {
      v27 = v58;
      v28 = v60;
      if (*(_BYTE *)(v25 + 32))
      {
        if (*(_BYTE *)(v25 + 32) != 1)
        {
          v63 = 2;
          sub_23C2FF75C();
          v36 = v27;
          sub_23C34EB38();
          v37 = v54;
          v40 = type metadata accessor for WorkoutContextMenuPreviewContent();
          v56 = v26;
          v41 = v40;
          sub_23C27FEE4(&qword_256B588E8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewContent, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewContent);
          v42 = (uint64_t)v46;
          v43 = v52;
          sub_23C34EBB0();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v43);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v10);
          v44 = (uint64_t)v59;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v42, 0, 2, v41);
          v30 = (uint64_t)v47;
          sub_23C2851C0(v42, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
LABEL_12:
          sub_23C2851C0(v30, v37, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
          return __swift_destroy_boxed_opaque_existential_1(v44);
        }
        v62 = 1;
        sub_23C2FF7A0();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
        v29 = type metadata accessor for WorkoutContextMenuPreviewContent();
        v30 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v47, 2, 2, v29);
      }
      else
      {
        v61 = 0;
        sub_23C2FF7E4();
        sub_23C34EB38();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v49);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v10);
        v39 = type metadata accessor for WorkoutContextMenuPreviewContent();
        v30 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v47, 1, 2, v39);
      }
      v44 = (uint64_t)v59;
      v37 = v54;
      goto LABEL_12;
    }
    v31 = v10;
    v32 = sub_23C34EAC0();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v34 = State;
    v35 = v58;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v31);
  }
  v44 = (uint64_t)v59;
  return __swift_destroy_boxed_opaque_existential_1(v44);
}

uint64_t sub_23C2FEFA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutContextMenuPreviewLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C2FEFB8(_QWORD *a1)
{
  return WorkoutContextMenuPreviewLoadState.encode(to:)(a1);
}

uint64_t WorkoutContextMenuPreviewLoadState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t State;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v34 = a1;
  v31 = sub_23C34D86C();
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - v7;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v9 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C2FF718((uint64_t)v35, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 2, v15))
    return sub_23C34EC88();
  v35 = v5;
  v30 = v2;
  sub_23C2851C0((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
  sub_23C34EC88();
  sub_23C28950C((uint64_t)v18, (uint64_t)v14, &qword_256B58908);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v32);
  v23 = v33;
  if (v22 == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    sub_23C2FF828((uint64_t)v14, (uint64_t)v11);
    sub_23C34EC94();
    sub_23C34DAAC();
    sub_23C285184((uint64_t)v11, &qword_256B588F0);
  }
  sub_23C28950C((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v8, &qword_256B58910);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v26 = v31;
  v27 = v25(v8, 1, v31);
  v28 = v30;
  if (v27 == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v30, v8, v26);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B58308, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v26);
  }
  v29 = (uint64_t)v35;
  sub_23C28950C((uint64_t)&v18[*(int *)(v15 + 24)], (uint64_t)v35, &qword_256B58910);
  if (v25((char *)v29, 1, v26) == 1)
  {
    sub_23C34EC94();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v28, v29, v26);
    sub_23C34EC94();
    sub_23C27FEE4(&qword_256B58308, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
    sub_23C34E838();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v26);
  }
  return sub_23C283550((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
}

uint64_t WorkoutContextMenuPreviewLoadState.hashValue.getter()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutContextMenuPreviewLoadState.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2FF410()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutContextMenuPreviewLoadState.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

uint64_t sub_23C2FF450()
{
  _BYTE v1[72];

  sub_23C34EC7C();
  WorkoutContextMenuPreviewLoadState.hash(into:)((uint64_t)v1);
  return sub_23C34ECAC();
}

BOOL _s20FitnessProductDetail34WorkoutContextMenuPreviewLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t State;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  MEMORY[0x24BDAC7A8](State);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_23C2FF718(a1, (uint64_t)v14);
  sub_23C2FF718(a2, v15);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v17 = v16(v14, 2, v4);
  if (!v17)
  {
    sub_23C2FF718((uint64_t)v14, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      sub_23C2851C0(v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      v18 = _s20FitnessProductDetail32WorkoutContextMenuPreviewContentV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v7);
      sub_23C283550((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      sub_23C283550((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
      return v18;
    }
    sub_23C283550((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v15, 2, v4) != 1)
      goto LABEL_9;
  }
  else if (v16((char *)v15, 2, v4) != 2)
  {
LABEL_9:
    sub_23C285184((uint64_t)v14, &qword_256B5AE10);
    return 0;
  }
  sub_23C283550((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewLoadState);
  return 1;
}

uint64_t type metadata accessor for WorkoutContextMenuPreviewLoadState()
{
  uint64_t result;

  result = qword_256B5ADB0;
  if (!qword_256B5ADB0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C2FF6D4()
{
  unint64_t result;

  result = qword_256B5ACF8;
  if (!qword_256B5ACF8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358C24, &type metadata for WorkoutContextMenuPreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ACF8);
  }
  return result;
}

uint64_t sub_23C2FF718(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutContextMenuPreviewLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_23C2FF75C()
{
  unint64_t result;

  result = qword_256B5AD00;
  if (!qword_256B5AD00)
  {
    result = MEMORY[0x24261C66C](&unk_23C358BD4, &type metadata for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AD00);
  }
  return result;
}

unint64_t sub_23C2FF7A0()
{
  unint64_t result;

  result = qword_256B5AD08;
  if (!qword_256B5AD08)
  {
    result = MEMORY[0x24261C66C](&unk_23C358B84, &type metadata for WorkoutContextMenuPreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AD08);
  }
  return result;
}

unint64_t sub_23C2FF7E4()
{
  unint64_t result;

  result = qword_256B5AD10;
  if (!qword_256B5AD10)
  {
    result = MEMORY[0x24261C66C](&unk_23C358B34, &type metadata for WorkoutContextMenuPreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AD10);
  }
  return result;
}

uint64_t sub_23C2FF828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C2FF870()
{
  return sub_23C27FEE4(&qword_256B5AD38, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutContextMenuPreviewLoadState, (uint64_t)&protocol conformance descriptor for WorkoutContextMenuPreviewLoadState);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutContextMenuPreviewLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for WorkoutContextMenuPreviewContent();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v13 = &qword_256B58900;
        else
          v13 = &qword_256B588F8;
        v14 = __swift_instantiateConcreteTypeFromMangledName(v13);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      v15 = *(int *)(v7 + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23C34D86C();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v22 = *(int *)(v7 + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      if (v20(v24, 1, v18))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutContextMenuPreviewLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for WorkoutContextMenuPreviewContent();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v5 = &qword_256B58900;
      else
        v5 = &qword_256B588F8;
      v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    }
    v7 = a1 + *(int *)(v2 + 20);
    v8 = sub_23C34D86C();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = a1 + *(int *)(v2 + 24);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v11, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

char *initializeWithCopy for WorkoutContextMenuPreviewLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v11 = &qword_256B58900;
      else
        v11 = &qword_256B588F8;
      v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v13 = *(int *)(v6 + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23C34D86C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = *(int *)(v6 + 24);
    v21 = &a1[v20];
    v22 = &a2[v20];
    if (v18(v22, 1, v16))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v22, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutContextMenuPreviewLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      goto LABEL_7;
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v21 = &qword_256B58900;
        else
          v21 = &qword_256B588F8;
        v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_23C285184((uint64_t)a1, &qword_256B588F0);
          if (swift_getEnumCaseMultiPayload() == 1)
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v38 = *(int *)(v6 + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_23C34D86C();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        v44 = v43(v39, 1, v41);
        v45 = v43(v40, 1, v41);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_36:
            v47 = *(int *)(v6 + 24);
            v48 = &a1[v47];
            a2 += v47;
            v49 = v43(&a1[v47], 1, v41);
            v50 = v43(a2, 1, v41);
            if (v49)
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v48, a2, v41);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v41);
                return a1;
              }
            }
            else
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v48, a2, v41);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v41);
            }
            v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v15 = v48;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
        }
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C285184((uint64_t)a1, &qword_256B588F0);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v15 = a1;
LABEL_8:
    memcpy(v15, a2, v14);
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v23 = &qword_256B58900;
    else
      v23 = &qword_256B588F8;
    v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v25 = *(int *)(v6 + 20);
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23C34D86C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = *(int *)(v6 + 24);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v30(v34, 1, v28))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *initializeWithTake for WorkoutContextMenuPreviewLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v11 = &qword_256B58900;
      else
        v11 = &qword_256B588F8;
      v12 = __swift_instantiateConcreteTypeFromMangledName(v11);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    v13 = *(int *)(v6 + 20);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_23C34D86C();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = *(int *)(v6 + 24);
    v21 = &a1[v20];
    v22 = &a2[v20];
    if (v18(v22, 1, v16))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutContextMenuPreviewLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;

  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutContextMenuPreviewContent);
      goto LABEL_7;
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v18(a1, 1, v16);
    v20 = v18(a2, 1, v16);
    if (v19)
    {
      if (!v20)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
          v21 = &qword_256B58900;
        else
          v21 = &qword_256B588F8;
        v22 = __swift_instantiateConcreteTypeFromMangledName(v21);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_23C285184((uint64_t)a1, &qword_256B588F0);
          if (swift_getEnumCaseMultiPayload() == 1)
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58900);
          else
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F8);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(a1, a2, v51);
          swift_storeEnumTagMultiPayload();
        }
LABEL_30:
        v38 = *(int *)(v6 + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = sub_23C34D86C();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        v44 = v43(v39, 1, v41);
        v45 = v43(v40, 1, v41);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_36:
            v47 = *(int *)(v6 + 24);
            v48 = &a1[v47];
            a2 += v47;
            v49 = v43(&a1[v47], 1, v41);
            v50 = v43(a2, 1, v41);
            if (v49)
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v48, a2, v41);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v48, 0, 1, v41);
                return a1;
              }
            }
            else
            {
              if (!v50)
              {
                (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v48, a2, v41);
                return a1;
              }
              (*(void (**)(char *, uint64_t))(v42 + 8))(v48, v41);
            }
            v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58910) - 8) + 64);
            v15 = v48;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v42 + 40))(v39, v40, v41);
            goto LABEL_36;
          }
          (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
        }
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        goto LABEL_36;
      }
      sub_23C285184((uint64_t)a1, &qword_256B588F0);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_30;
  }
  if (v10)
  {
LABEL_7:
    v14 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v15 = a1;
LABEL_8:
    memcpy(v15, a2, v14);
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B588F0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58908);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v23 = &qword_256B58900;
    else
      v23 = &qword_256B588F8;
    v24 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v25 = *(int *)(v6 + 20);
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23C34D86C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v32 = *(int *)(v6 + 24);
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v30(v34, 1, v28))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58910);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v33, v34, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v28);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutContextMenuPreviewLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C300BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C300C34(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C300C88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23C300CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutContextMenuPreviewContent();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23C300D00()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WorkoutContextMenuPreviewContent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C300DA0 + 4 * byte_23C3587D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C300DD4 + 4 * byte_23C3587D0[v4]))();
}

uint64_t sub_23C300DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C300DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C300DE4);
  return result;
}

uint64_t sub_23C300DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C300DF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C300DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C300E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewLoadState.CodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewLoadState.IdleCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewLoadState.FetchingCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C300E80 + 4 * byte_23C3587DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C300EA0 + 4 * byte_23C3587DF[v4]))();
}

_BYTE *sub_23C300E80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C300EA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C300EA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C300EB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C300EB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C300EC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys()
{
  return &type metadata for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys;
}

unint64_t sub_23C300EE0()
{
  unint64_t result;

  result = qword_256B5ADC0;
  if (!qword_256B5ADC0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3589B4, &type metadata for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADC0);
  }
  return result;
}

unint64_t sub_23C300F28()
{
  unint64_t result;

  result = qword_256B5ADC8;
  if (!qword_256B5ADC8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358B0C, &type metadata for WorkoutContextMenuPreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADC8);
  }
  return result;
}

unint64_t sub_23C300F70()
{
  unint64_t result;

  result = qword_256B5ADD0;
  if (!qword_256B5ADD0)
  {
    result = MEMORY[0x24261C66C](&unk_23C358A2C, &type metadata for WorkoutContextMenuPreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADD0);
  }
  return result;
}

unint64_t sub_23C300FB8()
{
  unint64_t result;

  result = qword_256B5ADD8;
  if (!qword_256B5ADD8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358A54, &type metadata for WorkoutContextMenuPreviewLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADD8);
  }
  return result;
}

unint64_t sub_23C301000()
{
  unint64_t result;

  result = qword_256B5ADE0;
  if (!qword_256B5ADE0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3589DC, &type metadata for WorkoutContextMenuPreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADE0);
  }
  return result;
}

unint64_t sub_23C301048()
{
  unint64_t result;

  result = qword_256B5ADE8;
  if (!qword_256B5ADE8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358A04, &type metadata for WorkoutContextMenuPreviewLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADE8);
  }
  return result;
}

unint64_t sub_23C301090()
{
  unint64_t result;

  result = qword_256B5ADF0;
  if (!qword_256B5ADF0)
  {
    result = MEMORY[0x24261C66C](&unk_23C358924, &type metadata for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADF0);
  }
  return result;
}

unint64_t sub_23C3010D8()
{
  unint64_t result;

  result = qword_256B5ADF8;
  if (!qword_256B5ADF8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35894C, &type metadata for WorkoutContextMenuPreviewLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5ADF8);
  }
  return result;
}

unint64_t sub_23C301120()
{
  unint64_t result;

  result = qword_256B5AE00;
  if (!qword_256B5AE00)
  {
    result = MEMORY[0x24261C66C](&unk_23C358A7C, &type metadata for WorkoutContextMenuPreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE00);
  }
  return result;
}

unint64_t sub_23C301168()
{
  unint64_t result;

  result = qword_256B5AE08;
  if (!qword_256B5AE08)
  {
    result = MEMORY[0x24261C66C](&unk_23C358AA4, &type metadata for WorkoutContextMenuPreviewLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE08);
  }
  return result;
}

uint64_t sub_23C3011AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3011E4 + 4 * byte_23C358CB0[a1]))(0xD000000000000012, 0x800000023C361BC0);
}

uint64_t sub_23C3011E4()
{
  return 0x6F43646564616F6CLL;
}

uint64_t sub_23C301208()
{
  return 0x7070615465726F6DLL;
}

uint64_t sub_23C301224(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23C30124C()
{
  return 0x6570704177656976;
}

uint64_t sub_23C30126C(char a1)
{
  if ((a1 & 1) != 0)
    return 7107189;
  else
    return 0x696669746E656469;
}

uint64_t sub_23C3012A0()
{
  unsigned __int8 *v0;

  return sub_23C3011AC(*v0);
}

uint64_t sub_23C3012A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30490C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3012CC()
{
  sub_23C301CA4();
  return sub_23C34ECD0();
}

uint64_t sub_23C3012F4()
{
  sub_23C301CA4();
  return sub_23C34ECDC();
}

uint64_t sub_23C30131C()
{
  sub_23C301E80();
  return sub_23C34ECD0();
}

uint64_t sub_23C301344()
{
  sub_23C301E80();
  return sub_23C34ECDC();
}

uint64_t sub_23C30136C()
{
  sub_23C301E3C();
  return sub_23C34ECD0();
}

uint64_t sub_23C301394()
{
  sub_23C301E3C();
  return sub_23C34ECDC();
}

uint64_t sub_23C3013BC()
{
  sub_23C301DF8();
  return sub_23C34ECD0();
}

uint64_t sub_23C3013E4()
{
  sub_23C301DF8();
  return sub_23C34ECDC();
}

uint64_t sub_23C30140C()
{
  char *v0;

  return sub_23C30126C(*v0);
}

uint64_t sub_23C301414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C304B98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C301438()
{
  sub_23C301DB4();
  return sub_23C34ECD0();
}

uint64_t sub_23C301460()
{
  sub_23C301DB4();
  return sub_23C34ECDC();
}

uint64_t sub_23C301488()
{
  sub_23C301D70();
  return sub_23C34ECD0();
}

uint64_t sub_23C3014B0()
{
  sub_23C301D70();
  return sub_23C34ECDC();
}

uint64_t sub_23C3014D8()
{
  sub_23C301D2C();
  return sub_23C34ECD0();
}

uint64_t sub_23C301500()
{
  sub_23C301D2C();
  return sub_23C34ECDC();
}

void EditorialDetailAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE18);
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE20);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE28);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C34D950();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v23 - v11;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE30);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE38);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v28 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE40);
  MEMORY[0x24BDAC7A8](v16);
  v17 = type metadata accessor for EditorialDetailAction();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE48);
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C301CA4();
  v47 = v21;
  sub_23C34ECC4();
  sub_23C301CE8(v46, (uint64_t)v19);
  v22 = (char *)sub_23C301868 + 4 * byte_23C358CB6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C301868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0;
  v3 = *(_QWORD *)(v1 - 288);
  sub_23C2851C0(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  *(_BYTE *)(v1 - 71) = 1;
  sub_23C301E3C();
  v4 = *(_QWORD *)(v1 - 264);
  v5 = *(_QWORD *)(v1 - 104);
  v6 = *(_QWORD *)(v1 - 96);
  sub_23C34EBD4();
  sub_23C27FEE4(&qword_256B5A7B8, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailContent, (uint64_t)&protocol conformance descriptor for EditorialDetailContent);
  v7 = *(_QWORD *)(v1 - 240);
  sub_23C34EC40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8))(v4, v7);
  sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 120) + 8))(v5, v6);
}

uint64_t type metadata accessor for EditorialDetailAction()
{
  uint64_t result;

  result = qword_256B5AF38;
  if (!qword_256B5AF38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C301CA4()
{
  unint64_t result;

  result = qword_256B5AE50;
  if (!qword_256B5AE50)
  {
    result = MEMORY[0x24261C66C](&unk_23C359458, &type metadata for EditorialDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE50);
  }
  return result;
}

uint64_t sub_23C301CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EditorialDetailAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C301D2C()
{
  unint64_t result;

  result = qword_256B5AE58;
  if (!qword_256B5AE58)
  {
    result = MEMORY[0x24261C66C](&unk_23C359408, &type metadata for EditorialDetailAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE58);
  }
  return result;
}

unint64_t sub_23C301D70()
{
  unint64_t result;

  result = qword_256B5AE60;
  if (!qword_256B5AE60)
  {
    result = MEMORY[0x24261C66C](&unk_23C3593B8, &type metadata for EditorialDetailAction.SocialMediaLinkTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE60);
  }
  return result;
}

unint64_t sub_23C301DB4()
{
  unint64_t result;

  result = qword_256B5AE68;
  if (!qword_256B5AE68)
  {
    result = MEMORY[0x24261C66C](&unk_23C359368, &type metadata for EditorialDetailAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE68);
  }
  return result;
}

unint64_t sub_23C301DF8()
{
  unint64_t result;

  result = qword_256B5AE70;
  if (!qword_256B5AE70)
  {
    result = MEMORY[0x24261C66C](&unk_23C359318, &type metadata for EditorialDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE70);
  }
  return result;
}

unint64_t sub_23C301E3C()
{
  unint64_t result;

  result = qword_256B5AE78;
  if (!qword_256B5AE78)
  {
    result = MEMORY[0x24261C66C](&unk_23C3592C8, &type metadata for EditorialDetailAction.LoadedContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE78);
  }
  return result;
}

unint64_t sub_23C301E80()
{
  unint64_t result;

  result = qword_256B5AE80;
  if (!qword_256B5AE80)
  {
    result = MEMORY[0x24261C66C](&unk_23C359278, &type metadata for EditorialDetailAction.FilterButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AE80);
  }
  return result;
}

uint64_t EditorialDetailAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  _QWORD v37[5];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE88);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE90);
  v6 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  v47 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AE98);
  v37[3] = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v54 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AEA0);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AEA8);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AEB0);
  v37[4] = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v48 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5AEB8);
  v52 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for EditorialDetailAction();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v37 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v37 - v23;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v37 - v26;
  v28 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_23C301CA4();
  v56 = v15;
  v29 = v59;
  sub_23C34ECB8();
  if (!v29)
  {
    v37[1] = v24;
    v37[2] = v18;
    v37[0] = v21;
    v59 = v27;
    v30 = v56;
    v31 = v57;
    v32 = sub_23C34EBBC();
    if (*(_QWORD *)(v32 + 16) == 1)
      __asm { BR              X10 }
    v33 = sub_23C34EAC0();
    swift_allocError();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v35 = v16;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v31);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t sub_23C30287C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EditorialDetailAction.init(from:)(a1, a2);
}

void sub_23C302890(_QWORD *a1)
{
  EditorialDetailAction.encode(to:)(a1);
}

void EditorialDetailAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_23C34D950();
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for EditorialDetailAction();
  MEMORY[0x24BDAC7A8](v4);
  sub_23C301CE8(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_23C3029BC + 4 * byte_23C358CC8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C3029BC()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23C2851C0(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
  sub_23C34EC88();
  EditorialDetailContent.hash(into:)(v0);
  return sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
}

uint64_t EditorialDetailAction.hashValue.getter()
{
  sub_23C34EC7C();
  EditorialDetailAction.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C302B78()
{
  sub_23C34EC7C();
  EditorialDetailAction.hash(into:)();
  return sub_23C34ECAC();
}

uint64_t sub_23C302BB8()
{
  sub_23C34EC7C();
  EditorialDetailAction.hash(into:)();
  return sub_23C34ECAC();
}

void _s20FitnessProductDetail09EditorialC6ActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[4];

  v4 = sub_23C34D950();
  v18[2] = *(_QWORD *)(v4 - 8);
  v18[3] = v4;
  MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v18[1] = (char *)v18 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v18[0] = (char *)v18 - v8;
  v9 = type metadata accessor for EditorialDetailContent();
  MEMORY[0x24BDAC7A8](v9);
  v10 = type metadata accessor for EditorialDetailAction();
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B000);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v18 + *(int *)(v15 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C301CE8(a1, (uint64_t)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23C301CE8(a2, (uint64_t)v16);
  v17 = (char *)sub_23C302DB8 + 4 * byte_23C358CCE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C302DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23C301CE8(v0, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    sub_23C304C78(v0);
    v4 = 0;
  }
  else
  {
    sub_23C2851C0(v1, v3, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    v4 = _s20FitnessProductDetail09EditorialC7ContentV2eeoiySbAC_ACtFZ_0(v2, v3);
    sub_23C283550(v3, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    sub_23C283550(v2, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailContent);
    sub_23C283550(v0, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailAction);
  }
  return v4 & 1;
}

uint64_t sub_23C303094()
{
  return sub_23C27FEE4(&qword_256B5AEC0, (uint64_t (*)(uint64_t))type metadata accessor for EditorialDetailAction, (uint64_t)&protocol conformance descriptor for EditorialDetailAction);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditorialDetailAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v26 = sub_23C34D950();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      swift_bridgeObjectRetain();
      v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v8 = (uint64_t *)&unk_256B5A168;
      else
        v8 = (uint64_t *)&unk_256B5A160;
      v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      v10 = (int *)type metadata accessor for EditorialDetailContent();
      *(uint64_t *)((char *)a1 + v10[5]) = *(uint64_t *)((char *)a2 + v10[5]);
      v11 = v10[6];
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      v14 = v13[1];
      *v12 = *v13;
      v12[1] = v14;
      v15 = v10[7];
      v16 = (uint64_t *)((char *)a1 + v15);
      v17 = (uint64_t *)((char *)a2 + v15);
      v18 = v17[1];
      *v16 = *v17;
      v16[1] = v18;
      v19 = v10[8];
      __dst = (uint64_t *)((char *)a1 + v19);
      v20 = (uint64_t *)((char *)a2 + v19);
      v21 = type metadata accessor for EditorialPreview();
      v46 = *(_QWORD *)(v21 - 8);
      v22 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v46 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v32 = v20[1];
        *__dst = *v20;
        __dst[1] = v32;
        v33 = *(int *)(v21 + 20);
        v45 = (char *)__dst + v33;
        v34 = (char *)v20 + v33;
        v35 = sub_23C34D950();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v45, v34, v35);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v21);
      }
      v37 = v10[9];
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      v41 = v10[10];
      v42 = (uint64_t *)((char *)a1 + v41);
      v43 = (uint64_t *)((char *)a2 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      *(uint64_t *)((char *)a1 + v10[11]) = *(uint64_t *)((char *)a2 + v10[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for EditorialDetailAction(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
LABEL_11:
      v12 = sub_23C34D950();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v3 = (uint64_t *)&unk_256B5A168;
      else
        v3 = (uint64_t *)&unk_256B5A160;
      v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = type metadata accessor for EditorialDetailContent();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(v5 + 32);
      v7 = type metadata accessor for EditorialPreview();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
      {
        swift_bridgeObjectRelease();
        v8 = v6 + *(int *)(v7 + 20);
        v9 = sub_23C34D950();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
      v10 = a1 + *(int *)(v5 + 36);
      v11 = sub_23C34D950();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for EditorialDetailAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  _QWORD *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v23 = sub_23C34D950();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      goto LABEL_14;
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v7 = (uint64_t *)&unk_256B5A168;
      else
        v7 = (uint64_t *)&unk_256B5A160;
      v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      v9 = (int *)type metadata accessor for EditorialDetailContent();
      *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
      v10 = v9[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = v12[1];
      *v11 = *v12;
      v11[1] = v13;
      v14 = v9[7];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      v18 = v9[8];
      __dst = (_QWORD *)((char *)a1 + v18);
      v19 = (_QWORD *)((char *)a2 + v18);
      v20 = type metadata accessor for EditorialPreview();
      v44 = *(_QWORD *)(v20 - 8);
      v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21(v19, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v29 = v19[1];
        *__dst = *v19;
        __dst[1] = v29;
        v30 = *(int *)(v20 + 20);
        v43 = (char *)__dst + v30;
        v31 = (char *)v19 + v30;
        v32 = sub_23C34D950();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v43, v31, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v20);
      }
      v34 = v9[9];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      v38 = v9[10];
      v39 = (_QWORD *)((char *)a1 + v38);
      v40 = (_QWORD *)((char *)a2 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for EditorialDetailAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  char *v38;
  uint64_t v39;
  _QWORD *__dst;

  if (a1 == a2)
    return a1;
  sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailAction);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v21 = sub_23C34D950();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      goto LABEL_15;
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v7 = (uint64_t *)&unk_256B5A168;
      else
        v7 = (uint64_t *)&unk_256B5A160;
      v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      v9 = (int *)type metadata accessor for EditorialDetailContent();
      *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
      v10 = v9[6];
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      *v11 = *v12;
      v11[1] = v12[1];
      v13 = v9[7];
      v14 = (_QWORD *)((char *)a1 + v13);
      v15 = (_QWORD *)((char *)a2 + v13);
      *v14 = *v15;
      v14[1] = v15[1];
      v16 = v9[8];
      __dst = (_QWORD *)((char *)a1 + v16);
      v17 = (_QWORD *)((char *)a2 + v16);
      v18 = type metadata accessor for EditorialPreview();
      v39 = *(_QWORD *)(v18 - 8);
      v19 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        *__dst = *v17;
        __dst[1] = v17[1];
        v26 = *(int *)(v18 + 20);
        v38 = (char *)__dst + v26;
        v27 = (char *)v17 + v26;
        v28 = sub_23C34D950();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v38, v27, v28);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v18);
      }
      v30 = v9[9];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      v34 = v9[10];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (_QWORD *)((char *)a2 + v34);
      *v35 = *v36;
      v35[1] = v36[1];
      *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for EditorialDetailAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = sub_23C34D950();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      goto LABEL_14;
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v7 = (uint64_t *)&unk_256B5A168;
      else
        v7 = (uint64_t *)&unk_256B5A160;
      v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      v9 = (int *)type metadata accessor for EditorialDetailContent();
      *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
      *(_OWORD *)((char *)a1 + v9[6]) = *(_OWORD *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      v10 = v9[8];
      v11 = (_OWORD *)((char *)a1 + v10);
      v12 = (_OWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for EditorialPreview();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        v21 = *(int *)(v13 + 20);
        v22 = (char *)v11 + v21;
        v23 = (char *)v12 + v21;
        v24 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v25 = v9[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      *(_OWORD *)((char *)a1 + v9[10]) = *(_OWORD *)((char *)a2 + v9[10]);
      *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
      goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for EditorialDetailAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  if (a1 == a2)
    return a1;
  sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for EditorialDetailAction);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = sub_23C34D950();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5AB70) + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      goto LABEL_15;
    case 0:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v7 = (uint64_t *)&unk_256B5A168;
      else
        v7 = (uint64_t *)&unk_256B5A160;
      v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      v9 = (int *)type metadata accessor for EditorialDetailContent();
      *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
      *(_OWORD *)((char *)a1 + v9[6]) = *(_OWORD *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      v10 = v9[8];
      v11 = (_OWORD *)((char *)a1 + v10);
      v12 = (_OWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for EditorialPreview();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5A0C8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        v21 = *(int *)(v13 + 20);
        v22 = (char *)v11 + v21;
        v23 = (char *)v12 + v21;
        v24 = sub_23C34D950();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      v25 = v9[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      *(_OWORD *)((char *)a1 + v9[10]) = *(_OWORD *)((char *)a2 + v9[10]);
      *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_23C3040E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  result = type metadata accessor for EditorialDetailContent();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = sub_23C34D950();
    if (v2 <= 0x3F)
    {
      v3 = *(_QWORD *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      v6 = &v4;
      v7 = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C3041D0 + 4 * byte_23C358CD9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C304204 + 4 * byte_23C358CD4[v4]))();
}

uint64_t sub_23C304204(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30420C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C304214);
  return result;
}

uint64_t sub_23C304220(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C304228);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C30422C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C304234(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.CodingKeys()
{
  return &type metadata for EditorialDetailAction.CodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.FilterButtonTappedCodingKeys()
{
  return &type metadata for EditorialDetailAction.FilterButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.LoadedContentCodingKeys()
{
  return &type metadata for EditorialDetailAction.LoadedContentCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.MoreTappedCodingKeys()
{
  return &type metadata for EditorialDetailAction.MoreTappedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for EditorialDetailAction.PreviewButtonTappedCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3042D0 + 4 * byte_23C358CE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C304304 + 4 * byte_23C358CDE[v4]))();
}

uint64_t sub_23C304304(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30430C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C304314);
  return result;
}

uint64_t sub_23C304320(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C304328);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C30432C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C304334(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.PreviewButtonTappedCodingKeys()
{
  return &type metadata for EditorialDetailAction.PreviewButtonTappedCodingKeys;
}

uint64_t _s20FitnessProductDetail21EditorialDetailActionO23LoadedContentCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C304390 + 4 * byte_23C358CE8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3043B0 + 4 * byte_23C358CED[v4]))();
}

_BYTE *sub_23C304390(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3043B0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3043B8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3043C0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3043C8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3043D0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.SocialMediaLinkTappedCodingKeys()
{
  return &type metadata for EditorialDetailAction.SocialMediaLinkTappedCodingKeys;
}

ValueMetadata *type metadata accessor for EditorialDetailAction.ViewAppearedCodingKeys()
{
  return &type metadata for EditorialDetailAction.ViewAppearedCodingKeys;
}

unint64_t sub_23C304400()
{
  unint64_t result;

  result = qword_256B5AF70;
  if (!qword_256B5AF70)
  {
    result = MEMORY[0x24261C66C](&unk_23C358F88, &type metadata for EditorialDetailAction.SocialMediaLinkTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF70);
  }
  return result;
}

unint64_t sub_23C304448()
{
  unint64_t result;

  result = qword_256B5AF78;
  if (!qword_256B5AF78)
  {
    result = MEMORY[0x24261C66C](&unk_23C359040, &type metadata for EditorialDetailAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF78);
  }
  return result;
}

unint64_t sub_23C304490()
{
  unint64_t result;

  result = qword_256B5AF80;
  if (!qword_256B5AF80)
  {
    result = MEMORY[0x24261C66C](&unk_23C359148, &type metadata for EditorialDetailAction.LoadedContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF80);
  }
  return result;
}

unint64_t sub_23C3044D8()
{
  unint64_t result;

  result = qword_256B5AF88;
  if (!qword_256B5AF88)
  {
    result = MEMORY[0x24261C66C](&unk_23C359250, &type metadata for EditorialDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF88);
  }
  return result;
}

unint64_t sub_23C304520()
{
  unint64_t result;

  result = qword_256B5AF90;
  if (!qword_256B5AF90)
  {
    result = MEMORY[0x24261C66C](&unk_23C359170, &type metadata for EditorialDetailAction.FilterButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF90);
  }
  return result;
}

unint64_t sub_23C304568()
{
  unint64_t result;

  result = qword_256B5AF98;
  if (!qword_256B5AF98)
  {
    result = MEMORY[0x24261C66C](&unk_23C359198, &type metadata for EditorialDetailAction.FilterButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AF98);
  }
  return result;
}

unint64_t sub_23C3045B0()
{
  unint64_t result;

  result = qword_256B5AFA0;
  if (!qword_256B5AFA0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3590B8, &type metadata for EditorialDetailAction.LoadedContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFA0);
  }
  return result;
}

unint64_t sub_23C3045F8()
{
  unint64_t result;

  result = qword_256B5AFA8;
  if (!qword_256B5AFA8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3590E0, &type metadata for EditorialDetailAction.LoadedContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFA8);
  }
  return result;
}

unint64_t sub_23C304640()
{
  unint64_t result;

  result = qword_256B5AFB0;
  if (!qword_256B5AFB0)
  {
    result = MEMORY[0x24261C66C](&unk_23C359068, &type metadata for EditorialDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFB0);
  }
  return result;
}

unint64_t sub_23C304688()
{
  unint64_t result;

  result = qword_256B5AFB8;
  if (!qword_256B5AFB8)
  {
    result = MEMORY[0x24261C66C](&unk_23C359090, &type metadata for EditorialDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFB8);
  }
  return result;
}

unint64_t sub_23C3046D0()
{
  unint64_t result;

  result = qword_256B5AFC0;
  if (!qword_256B5AFC0)
  {
    result = MEMORY[0x24261C66C](&unk_23C358FB0, &type metadata for EditorialDetailAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFC0);
  }
  return result;
}

unint64_t sub_23C304718()
{
  unint64_t result;

  result = qword_256B5AFC8;
  if (!qword_256B5AFC8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358FD8, &type metadata for EditorialDetailAction.PreviewButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFC8);
  }
  return result;
}

unint64_t sub_23C304760()
{
  unint64_t result;

  result = qword_256B5AFD0;
  if (!qword_256B5AFD0)
  {
    result = MEMORY[0x24261C66C](&unk_23C358EF8, &type metadata for EditorialDetailAction.SocialMediaLinkTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFD0);
  }
  return result;
}

unint64_t sub_23C3047A8()
{
  unint64_t result;

  result = qword_256B5AFD8;
  if (!qword_256B5AFD8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358F20, &type metadata for EditorialDetailAction.SocialMediaLinkTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFD8);
  }
  return result;
}

unint64_t sub_23C3047F0()
{
  unint64_t result;

  result = qword_256B5AFE0;
  if (!qword_256B5AFE0)
  {
    result = MEMORY[0x24261C66C](&unk_23C358EA8, &type metadata for EditorialDetailAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFE0);
  }
  return result;
}

unint64_t sub_23C304838()
{
  unint64_t result;

  result = qword_256B5AFE8;
  if (!qword_256B5AFE8)
  {
    result = MEMORY[0x24261C66C](&unk_23C358ED0, &type metadata for EditorialDetailAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFE8);
  }
  return result;
}

unint64_t sub_23C304880()
{
  unint64_t result;

  result = qword_256B5AFF0;
  if (!qword_256B5AFF0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3591C0, &type metadata for EditorialDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFF0);
  }
  return result;
}

unint64_t sub_23C3048C8()
{
  unint64_t result;

  result = qword_256B5AFF8;
  if (!qword_256B5AFF8)
  {
    result = MEMORY[0x24261C66C](&unk_23C3591E8, &type metadata for EditorialDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5AFF8);
  }
  return result;
}

uint64_t sub_23C30490C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023C361BC0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43646564616F6CLL && a2 == 0xED0000746E65746ELL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7070615465726F6DLL && a2 == 0xEA00000000006465 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C361BE0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C361C00 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23C304B98(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C304C78(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B000);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static WorkoutDetailSectionDensityFactor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t WorkoutDetailSectionDensityFactor.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double WorkoutDetailSectionDensityFactor.spacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t WorkoutDetailSectionDensityFactor.span.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WorkoutDetailSectionDensityFactor.init(count:span:spacing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(_QWORD *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_23C304D18(char a1)
{
  return *(_QWORD *)&aCount_0[8 * a1];
}

uint64_t sub_23C304D38()
{
  char *v0;

  return sub_23C304D18(*v0);
}

uint64_t sub_23C304D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3054C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C304D64()
{
  sub_23C304F24();
  return sub_23C34ECD0();
}

uint64_t sub_23C304D8C()
{
  sub_23C304F24();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailSectionDensityFactor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B008);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C304F24();
  sub_23C34ECC4();
  v14 = 0;
  sub_23C34EC34();
  if (!v2)
  {
    v13 = v8;
    v12 = 1;
    sub_23C2C8F30();
    sub_23C34EC40();
    v11 = 2;
    sub_23C34EC34();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23C304F24()
{
  unint64_t result;

  result = qword_256B5B010;
  if (!qword_256B5B010)
  {
    result = MEMORY[0x24261C66C](&unk_23C359678, &type metadata for WorkoutDetailSectionDensityFactor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B010);
  }
  return result;
}

uint64_t WorkoutDetailSectionDensityFactor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B018);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C304F24();
  sub_23C34ECB8();
  if (!v2)
  {
    v15 = 0;
    v9 = sub_23C34EBA4();
    v13[15] = 1;
    sub_23C2C917C();
    sub_23C34EBB0();
    v11 = v14;
    v13[14] = 2;
    v12 = sub_23C34EBA4();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C305104@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return WorkoutDetailSectionDensityFactor.init(from:)(a1, a2);
}

uint64_t sub_23C305118(_QWORD *a1)
{
  return WorkoutDetailSectionDensityFactor.encode(to:)(a1);
}

uint64_t WorkoutDetailSectionDensityFactor.hash(into:)()
{
  sub_23C34EC88();
  sub_23C34ECA0();
  return sub_23C34EC88();
}

uint64_t WorkoutDetailSectionDensityFactor.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  sub_23C34ECA0();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C3051E4()
{
  sub_23C34EC88();
  sub_23C34ECA0();
  return sub_23C34EC88();
}

uint64_t sub_23C30522C()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  sub_23C34ECA0();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

unint64_t sub_23C305298()
{
  unint64_t result;

  result = qword_256B5B020;
  if (!qword_256B5B020)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailSectionDensityFactor, &type metadata for WorkoutDetailSectionDensityFactor);
    atomic_store(result, (unint64_t *)&qword_256B5B020);
  }
  return result;
}

BOOL sub_23C3052DC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

ValueMetadata *type metadata accessor for WorkoutDetailSectionDensityFactor()
{
  return &type metadata for WorkoutDetailSectionDensityFactor;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailSectionDensityFactor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C305370 + 4 * byte_23C3594B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3053A4 + 4 * byte_23C3594B0[v4]))();
}

uint64_t sub_23C3053A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3053AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3053B4);
  return result;
}

uint64_t sub_23C3053C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3053C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3053CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3053D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailSectionDensityFactor.CodingKeys()
{
  return &type metadata for WorkoutDetailSectionDensityFactor.CodingKeys;
}

unint64_t sub_23C3053F4()
{
  unint64_t result;

  result = qword_256B5B028;
  if (!qword_256B5B028)
  {
    result = MEMORY[0x24261C66C](&unk_23C359650, &type metadata for WorkoutDetailSectionDensityFactor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B028);
  }
  return result;
}

unint64_t sub_23C30543C()
{
  unint64_t result;

  result = qword_256B5B030;
  if (!qword_256B5B030)
  {
    result = MEMORY[0x24261C66C](&unk_23C3595C0, &type metadata for WorkoutDetailSectionDensityFactor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B030);
  }
  return result;
}

unint64_t sub_23C305484()
{
  unint64_t result;

  result = qword_256B5B038;
  if (!qword_256B5B038)
  {
    result = MEMORY[0x24261C66C](&unk_23C3595E8, &type metadata for WorkoutDetailSectionDensityFactor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B038);
  }
  return result;
}

uint64_t sub_23C3054C8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851879539 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t WorkoutScheduleView.init(store:textViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C286DF0;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C30565C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t WorkoutScheduleView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B040);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[1];
  v11 = *v1;
  v12 = v6;
  v13 = *((_QWORD *)v1 + 4);
  sub_23C305774((uint64_t)&v11, (uint64_t)v5);
  v7 = swift_allocObject();
  v8 = v12;
  *(_OWORD *)(v7 + 16) = v11;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 48) = v13;
  sub_23C28950C((uint64_t)v5, a1, &qword_256B5B040);
  v9 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5B048) + 36));
  *v9 = sub_23C30631C;
  v9[1] = (uint64_t (*)())v7;
  v9[2] = 0;
  v9[3] = 0;
  sub_23C287FE0((uint64_t)&v11);
  return sub_23C285184((uint64_t)v5, &qword_256B5B040);
}

uint64_t sub_23C305774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t State;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  ValueMetadata *v77;
  uint64_t v78;
  unint64_t v79;
  __int128 v80;

  v73 = a2;
  v58 = sub_23C34DA70();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v55 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0B0);
  v60 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v59 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0D8);
  v62 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)&v49 - v7;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0E0);
  MEMORY[0x24BDAC7A8](v67);
  v69 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutSchedule();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0A8);
  MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v64 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v63 = (uint64_t)&v49 - v16;
  v75 = __swift_instantiateConcreteTypeFromMangledName(qword_256B5B0E8);
  MEMORY[0x24BDAC7A8](v75);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutScheduleLoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)a1;
  v22 = *(_QWORD *)(a1 + 8);
  v24 = *(unsigned __int8 *)(a1 + 16);
  sub_23C287FE0(a1);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0C8);
  sub_23C28943C(&qword_256B5B0D0, &qword_256B5B0C8, MEMORY[0x24BE2B5E8]);
  v54 = v23;
  v53 = v22;
  v52 = v24;
  v51 = v25;
  sub_23C34DD58();
  sub_23C306790(a1);
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) == 1)
  {
    sub_23C34E6E8();
    sub_23C34DD88();
    v26 = (char)v77;
    v27 = v78;
    v28 = v79;
    *(_QWORD *)v18 = v76;
    v18[8] = v26;
    *((_QWORD *)v18 + 2) = v27;
    v18[24] = v28;
    *((_OWORD *)v18 + 2) = v80;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B078);
    sub_23C30653C();
    sub_23C306650();
    return sub_23C34E004();
  }
  else
  {
    v50 = v18;
    v30 = v63;
    sub_23C281C88((uint64_t)v21, v63);
    v31 = v64;
    sub_23C28950C(v30, v64, &qword_256B578A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v31, 1, v66) == 1)
    {
      sub_23C285184(v31, &qword_256B578A0);
      swift_storeEnumTagMultiPayload();
      v32 = sub_23C28943C(&qword_256B5B0B8, &qword_256B5B0B0, MEMORY[0x24BDF41A8]);
      v33 = sub_23C306718();
      v76 = v70;
      v77 = &type metadata for WorkoutScheduleBannerLabelStyle;
      v78 = v32;
      v79 = v33;
      swift_getOpaqueTypeConformance2();
      v34 = (uint64_t)v71;
      sub_23C34E004();
    }
    else
    {
      v35 = v68;
      v36 = sub_23C3067CC(v31, v68);
      MEMORY[0x24BDAC7A8](v36);
      *(&v49 - 2) = a1;
      *(&v49 - 1) = v35;
      v37 = v59;
      sub_23C34E5B0();
      sub_23C287FE0(a1);
      sub_23C34DD58();
      sub_23C306790(a1);
      swift_getKeyPath();
      v38 = v55;
      sub_23C34E79C();
      swift_release();
      swift_release();
      v39 = sub_23C34DA40();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v58);
      LOBYTE(v76) = v39 & 1;
      v40 = sub_23C28943C(&qword_256B5B0B8, &qword_256B5B0B0, MEMORY[0x24BDF41A8]);
      v41 = sub_23C306718();
      v42 = v57;
      v43 = v70;
      sub_23C34E3AC();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v43);
      v44 = v62;
      v45 = v30;
      v46 = v61;
      v47 = v72;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v42, v72);
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v69, v46, v47);
      swift_storeEnumTagMultiPayload();
      v76 = v43;
      v77 = &type metadata for WorkoutScheduleBannerLabelStyle;
      v78 = v40;
      v79 = v41;
      swift_getOpaqueTypeConformance2();
      v34 = (uint64_t)v71;
      sub_23C34E004();
      v48 = v46;
      v30 = v45;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v47);
      sub_23C283550(v68, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutSchedule);
    }
    sub_23C28950C(v34, (uint64_t)v50, &qword_256B5B0A8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B078);
    sub_23C30653C();
    sub_23C306650();
    sub_23C34E004();
    sub_23C285184(v34, &qword_256B5B0A8);
    return sub_23C285184(v30, &qword_256B578A0);
  }
}

uint64_t sub_23C305F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(char *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v30 = a2;
  v31 = a3;
  v4 = sub_23C34DA34();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23C34DA70();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23C34D86C();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(char *))(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = v10;
  sub_23C287FE0(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0C8);
  sub_23C28943C(&qword_256B5B0D0, &qword_256B5B0C8, MEMORY[0x24BE2B5E8]);
  sub_23C34DD58();
  sub_23C306790(a1);
  swift_getKeyPath();
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C287FE0(a1);
  sub_23C34DD58();
  sub_23C306790(a1);
  swift_getKeyPath();
  v11 = (uint64_t)v21;
  sub_23C34E79C();
  swift_release();
  swift_release();
  sub_23C2C6324(v11, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v11, v29);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v27);
  v12 = v23(v9);
  v14 = v13;
  LOBYTE(v11) = v15;
  v17 = v16;
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v9, v26);
  v19 = v31;
  *v31 = v12;
  v19[1] = v14;
  *((_BYTE *)v19 + 16) = v11 & 1;
  v19[3] = v17;
  return result;
}

uint64_t sub_23C3061C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C34E598();
  *a1 = result;
  return result;
}

uint64_t sub_23C3061FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for WorkoutScheduleAction();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C287FE0(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B0C8);
  sub_23C28943C(&qword_256B5B0D0, &qword_256B5B0C8, MEMORY[0x24BE2B5E8]);
  sub_23C34DD58();
  sub_23C306790(a1);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B578A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_23C34E7A8();
  swift_release();
  return sub_23C283550((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutScheduleAction);
}

uint64_t sub_23C30631C()
{
  uint64_t v0;

  return sub_23C3061FC(v0 + 16);
}

uint64_t sub_23C306324()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C306334@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t (**v9)();
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B040);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[1];
  v11 = *v1;
  v12 = v6;
  v13 = *((_QWORD *)v1 + 4);
  sub_23C305774((uint64_t)&v11, (uint64_t)v5);
  v7 = swift_allocObject();
  v8 = v12;
  *(_OWORD *)(v7 + 16) = v11;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 48) = v13;
  sub_23C28950C((uint64_t)v5, a1, &qword_256B5B040);
  v9 = (uint64_t (**)())(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B5B048) + 36));
  *v9 = sub_23C306818;
  v9[1] = (uint64_t (*)())v7;
  v9[2] = 0;
  v9[3] = 0;
  sub_23C287FE0((uint64_t)&v11);
  return sub_23C285184((uint64_t)v5, &qword_256B5B040);
}

ValueMetadata *type metadata accessor for WorkoutScheduleView()
{
  return &type metadata for WorkoutScheduleView;
}

uint64_t sub_23C306438()
{
  return sub_23C2BFE70(&qword_256B5B050, &qword_256B5B048, (uint64_t (*)(void))sub_23C30646C, MEMORY[0x24BDF0910]);
}

unint64_t sub_23C30646C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256B5B058;
  if (!qword_256B5B058)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5B040);
    v2 = sub_23C3064D0();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B5B058);
  }
  return result;
}

unint64_t sub_23C3064D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B5B060;
  if (!qword_256B5B060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5B068);
    v2[0] = sub_23C30653C();
    v2[1] = sub_23C306650();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5B060);
  }
  return result;
}

unint64_t sub_23C30653C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B5B070;
  if (!qword_256B5B070)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5B078);
    v2[0] = sub_23C2BFE70(&qword_256B5B080, &qword_256B5B088, (uint64_t (*)(void))sub_23C3065C8, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23C30660C();
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5B070);
  }
  return result;
}

unint64_t sub_23C3065C8()
{
  unint64_t result;

  result = qword_256B5B090;
  if (!qword_256B5B090)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_256B5B090);
  }
  return result;
}

unint64_t sub_23C30660C()
{
  unint64_t result;

  result = qword_256B5B098;
  if (!qword_256B5B098)
  {
    result = MEMORY[0x24261C66C](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_256B5B098);
  }
  return result;
}

unint64_t sub_23C306650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256B5B0A0;
  if (!qword_256B5B0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5B0A8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B5B0B0);
    v2[3] = &type metadata for WorkoutScheduleBannerLabelStyle;
    v2[4] = sub_23C28943C(&qword_256B5B0B8, &qword_256B5B0B0, MEMORY[0x24BDF41A8]);
    v2[5] = sub_23C306718();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24261C66C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B5B0A0);
  }
  return result;
}

unint64_t sub_23C306718()
{
  unint64_t result;

  result = qword_256B5B0C0;
  if (!qword_256B5B0C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C3577C0, &type metadata for WorkoutScheduleBannerLabelStyle);
    atomic_store(result, (unint64_t *)&qword_256B5B0C0);
  }
  return result;
}

uint64_t objectdestroy_2Tm_1()
{
  sub_23C287FCC();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C306790(uint64_t a1)
{
  sub_23C287FCC();
  swift_release();
  return a1;
}

uint64_t sub_23C3067CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutSchedule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C306810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23C305F58(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void static RelatedWorkoutLoadState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v23;
  _QWORD v24[12];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v33 = a8;
  v34 = a6;
  v35 = a7;
  v27 = a2;
  v26 = a1;
  v32 = a20;
  v29 = a19;
  v28 = a18;
  v31 = a17;
  v30 = a16;
  v25 = sub_23C34DBF0();
  MEMORY[0x24BDAC7A8](v25);
  v24[0] = (char *)v24 - v23;
  v24[1] = a3;
  v36 = a3;
  v37 = a4;
  v24[9] = a4;
  v24[10] = a5;
  v38 = a5;
  v39 = v34;
  v40 = v35;
  v41 = v33;
  v24[8] = a9;
  v42 = a9;
  v43 = a10;
  v24[3] = a10;
  v24[4] = a11;
  v44 = a11;
  v45 = a12;
  v24[5] = a12;
  v24[6] = a13;
  v46 = a13;
  v47 = a14;
  v24[7] = a14;
  v24[2] = a15;
  v48 = a15;
  v49 = a16;
  v50 = a17;
  v51 = a18;
  v52 = a19;
  v53 = a20;
  type metadata accessor for RelatedWorkoutLoadState();
}

uint64_t sub_23C3069CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, _QWORD, uint64_t, __n128);
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v23;

  v3 = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v23 - v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (char *)&v23 - v10;
  v13 = (char *)&v23 + *(int *)(v12 + 48) - v10;
  *(_QWORD *)(v2 - 328) = v4;
  v14 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 16);
  v14((char *)&v23 - v10, *(_QWORD *)(v2 - 312), v3, v9);
  ((void (*)(char *, _QWORD, uint64_t))v14)(v13, *(_QWORD *)(v2 - 304), v3);
  v15 = *(uint64_t (**)(char *, uint64_t))(v1 + 48);
  v16 = *(_QWORD *)(v2 - 320);
  v17 = v15(v11, 2);
  if (v17)
  {
    if (v17 == 1)
    {
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v15)(v13, 2, v16) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v15)(v13, 2, v16) == 2)
    {
LABEL_8:
      v19 = 1;
LABEL_11:
      v8 = *(_QWORD *)(v2 - 328);
      goto LABEL_12;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v14)(v6, v11, v3);
    v18 = v16;
    if (!((unsigned int (*)(char *, uint64_t, uint64_t))v15)(v13, 2, v16))
    {
      v20 = *(_QWORD *)(v2 - 416);
      (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v20, v13, v18);
      v19 = sub_23C34DBB4();
      v21 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
      v21(v20, v18);
      v21((uint64_t)v6, v18);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v16);
  }
LABEL_9:
  v19 = 0;
  v3 = TupleTypeMetadata2;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v3);
  return v19 & 1;
}

void type metadata accessor for RelatedWorkoutLoadState()
{
  JUMPOUT(0x24261C5D0);
}

uint64_t sub_23C306C6C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x676E696863746566 && a2 == 0xE800000000000000;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C306DA0(char a1)
{
  return *(_QWORD *)&aFetchingfetche[8 * a1];
}

uint64_t sub_23C306DC0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C306E4C()
{
  char *v0;

  return sub_23C306DA0(*v0);
}

uint64_t sub_23C306EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C306C6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C306F00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3092FC();
  *a1 = result;
  return result;
}

uint64_t sub_23C306F58(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359B48, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C306F8C(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359B48, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C306FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C306DC0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C307024(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359BE8, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C307058(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359BE8, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C30708C@<X0>(_QWORD *a1@<X2>, _BYTE *a2@<X8>)
{
  return sub_23C30710C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C2CDB30, a2);
}

uint64_t sub_23C307098(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359B98, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C3070CC(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359B98, a1);
  return sub_23C34ECDC();
}

uint64_t sub_23C307100@<X0>(_QWORD *a1@<X2>, _BYTE *a2@<X8>)
{
  return sub_23C30710C(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C280400, a2);
}

uint64_t sub_23C30710C@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19]);
  result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_23C307184(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359C38, a1);
  return sub_23C34ECD0();
}

uint64_t sub_23C3071B8(uint64_t a1)
{
  MEMORY[0x24261C66C](&unk_23C359C38, a1);
  return sub_23C34ECDC();
}

void RelatedWorkoutLoadState.encode(to:)()
{
  type metadata accessor for RelatedWorkoutLoadState.IdleCodingKeys();
}

void sub_23C3072EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v17 = MEMORY[0x24261C66C](&unk_23C359C38, a1);
  *(_QWORD *)(v15 - 424) = a1;
  *(_QWORD *)(v15 - 432) = v17;
  v18 = sub_23C34EC4C();
  *(_QWORD *)(v15 - 440) = v18;
  *(_QWORD *)(v15 - 448) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 456) = (char *)&a9 - v19;
  *(_QWORD *)(v15 - 232) = v10;
  *(_QWORD *)(v15 - 224) = v13;
  *(_QWORD *)(v15 - 344) = v10;
  *(_QWORD *)(v15 - 328) = v13;
  *(_QWORD *)(v15 - 216) = v12;
  *(_QWORD *)(v15 - 208) = v9;
  *(_QWORD *)(v15 - 336) = v9;
  v20 = *(_QWORD *)(v15 - 280);
  *(_QWORD *)(v15 - 200) = *(_QWORD *)(v15 - 264);
  *(_QWORD *)(v15 - 192) = v20;
  v21 = *(_QWORD *)(v15 - 72);
  *(_QWORD *)(v15 - 184) = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 176) = v21;
  *(_QWORD *)(v15 - 168) = v11;
  *(_QWORD *)(v15 - 160) = v14;
  v22 = *(_QWORD *)(v15 - 320);
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(v15 - 272);
  *(_QWORD *)(v15 - 144) = v22;
  v23 = *(_QWORD *)(v15 - 288);
  *(_QWORD *)(v15 - 136) = *(_QWORD *)(v15 - 240);
  *(_QWORD *)(v15 - 128) = v23;
  v24 = *(_QWORD *)(v15 - 312);
  *(_QWORD *)(v15 - 120) = *(_QWORD *)(v15 - 248);
  *(_QWORD *)(v15 - 112) = v24;
  v25 = *(_QWORD *)(v15 - 304);
  *(_QWORD *)(v15 - 104) = *(_QWORD *)(v15 - 296);
  *(_QWORD *)(v15 - 96) = v25;
  type metadata accessor for RelatedWorkoutLoadState.FetchedCodingKeys();
}

void sub_23C3073FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v17 = MEMORY[0x24261C66C](&unk_23C359BE8, a1);
  *(_QWORD *)(v15 - 480) = a1;
  *(_QWORD *)(v15 - 488) = v17;
  v18 = sub_23C34EC4C();
  *(_QWORD *)(v15 - 464) = v18;
  *(_QWORD *)(v15 - 496) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 472) = (char *)&a9 - v19;
  *(_QWORD *)(v15 - 232) = v10;
  *(_QWORD *)(v15 - 224) = v14;
  v20 = *(_QWORD *)(v15 - 360);
  *(_QWORD *)(v15 - 216) = v20;
  *(_QWORD *)(v15 - 208) = v9;
  v21 = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 200) = v11;
  *(_QWORD *)(v15 - 192) = v21;
  v22 = *(_QWORD *)(v15 - 72);
  *(_QWORD *)(v15 - 184) = v12;
  *(_QWORD *)(v15 - 176) = v22;
  v23 = *(_QWORD *)(v15 - 368);
  *(_QWORD *)(v15 - 168) = *(_QWORD *)(v15 - 352);
  *(_QWORD *)(v15 - 160) = v23;
  v24 = *(_QWORD *)(v15 - 320);
  *(_QWORD *)(v15 - 152) = v13;
  *(_QWORD *)(v15 - 144) = v24;
  v26 = *(_QWORD *)(v15 - 248);
  v25 = *(_QWORD *)(v15 - 240);
  v27 = *(_QWORD *)(v15 - 288);
  *(_QWORD *)(v15 - 136) = v25;
  *(_QWORD *)(v15 - 128) = v27;
  v28 = *(_QWORD *)(v15 - 296);
  *(_QWORD *)(v15 - 120) = v26;
  *(_QWORD *)(v15 - 112) = v28;
  v29 = *(_QWORD *)(v15 - 312);
  v30 = *(_QWORD *)(v15 - 304);
  *(_QWORD *)(v15 - 104) = v29;
  *(_QWORD *)(v15 - 96) = v30;
  v31 = sub_23C34DBF0();
  *(_QWORD *)(v15 - 400) = v31;
  *(_QWORD *)(v15 - 408) = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v15 - 416) = (char *)&a9 - v32;
  v33 = *(_QWORD *)(v15 - 328);
  *(_QWORD *)(v15 - 232) = *(_QWORD *)(v15 - 344);
  *(_QWORD *)(v15 - 224) = v33;
  v34 = *(_QWORD *)(v15 - 336);
  *(_QWORD *)(v15 - 216) = v20;
  *(_QWORD *)(v15 - 208) = v34;
  v35 = *(_QWORD *)(v15 - 280);
  *(_QWORD *)(v15 - 200) = *(_QWORD *)(v15 - 264);
  *(_QWORD *)(v15 - 192) = v35;
  *(_QWORD *)(v15 - 184) = v21;
  *(_QWORD *)(v15 - 176) = v22;
  *(_QWORD *)(v15 - 168) = *(_QWORD *)(v15 - 352);
  *(_QWORD *)(v15 - 160) = v23;
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(v15 - 272);
  *(_QWORD *)(v15 - 144) = v24;
  v36 = *(_QWORD *)(v15 - 288);
  *(_QWORD *)(v15 - 136) = v25;
  *(_QWORD *)(v15 - 128) = v36;
  *(_QWORD *)(v15 - 120) = v26;
  *(_QWORD *)(v15 - 112) = v29;
  v37 = *(_QWORD *)(v15 - 304);
  *(_QWORD *)(v15 - 104) = *(_QWORD *)(v15 - 296);
  *(_QWORD *)(v15 - 96) = v37;
  type metadata accessor for RelatedWorkoutLoadState.FetchingCodingKeys();
}

void sub_23C3075AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v17 = MEMORY[0x24261C66C](&unk_23C359B98, a1);
  *(_QWORD *)(v15 - 504) = a1;
  *(_QWORD *)(v15 - 512) = v17;
  v18 = sub_23C34EC4C();
  *(_QWORD *)(v15 - 520) = v18;
  *(_QWORD *)(v15 - 528) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 536) = (char *)&a9 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v21 = *(_QWORD *)(v15 - 328);
  *(_QWORD *)(v15 - 232) = *(_QWORD *)(v15 - 344);
  *(_QWORD *)(v15 - 224) = v21;
  v22 = *(_QWORD *)(v15 - 336);
  *(_QWORD *)(v15 - 216) = *(_QWORD *)(v15 - 360);
  *(_QWORD *)(v15 - 208) = v22;
  v23 = *(_QWORD *)(v15 - 280);
  *(_QWORD *)(v15 - 200) = *(_QWORD *)(v15 - 264);
  *(_QWORD *)(v15 - 192) = v23;
  v24 = *(_QWORD *)(v15 - 72);
  *(_QWORD *)(v15 - 184) = *(_QWORD *)(v15 - 256);
  *(_QWORD *)(v15 - 176) = v24;
  v25 = *(_QWORD *)(v15 - 368);
  *(_QWORD *)(v15 - 168) = v9;
  *(_QWORD *)(v15 - 160) = v25;
  *(_QWORD *)(v15 - 152) = *(_QWORD *)(v15 - 272);
  *(_QWORD *)(v15 - 144) = v10;
  *(_QWORD *)(v15 - 136) = *(_QWORD *)(v15 - 240);
  *(_QWORD *)(v15 - 128) = v11;
  *(_QWORD *)(v15 - 120) = *(_QWORD *)(v15 - 248);
  *(_QWORD *)(v15 - 112) = v13;
  *(_QWORD *)(v15 - 104) = v14;
  *(_QWORD *)(v15 - 96) = v12;
  type metadata accessor for RelatedWorkoutLoadState.CodingKeys();
}

uint64_t sub_23C3076CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x24261C66C](&unk_23C359B48, a1);
  v5 = sub_23C34EC4C();
  *(_QWORD *)(v4 - 72) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - v6;
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v4 - 392), *(_QWORD *)(*(_QWORD *)(v4 - 392) + 24));
  v8 = *(_QWORD *)(v4 - 408);
  v9 = *(_QWORD *)(v4 - 400);
  sub_23C34ECC4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v2, *(_QWORD *)(v4 - 384), v1);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v2, 2, v9);
  if (v10)
  {
    if (v10 == 1)
    {
      *(_BYTE *)(v4 - 232) = 0;
      v11 = *(_QWORD *)(v4 - 536);
      sub_23C34EBD4();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 528) + 8))(v11, *(_QWORD *)(v4 - 520));
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v7, v5);
    }
    else
    {
      *(_BYTE *)(v4 - 232) = 2;
      v16 = v5;
      v17 = *(_QWORD *)(v4 - 456);
      sub_23C34EBD4();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 448) + 8))(v17, *(_QWORD *)(v4 - 440));
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v7, v16);
    }
  }
  else
  {
    v13 = *(_QWORD *)(v4 - 496);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)(v4 - 416), v2, v9);
    *(_BYTE *)(v4 - 232) = 1;
    v14 = *(_QWORD *)(v4 - 472);
    sub_23C34EBD4();
    MEMORY[0x24261C66C](MEMORY[0x24BE34A30], v9);
    v15 = *(_QWORD *)(v4 - 464);
    sub_23C34EC40();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v4 - 416), v9);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v7, v5);
  }
}

void type metadata accessor for RelatedWorkoutLoadState.IdleCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutLoadState.FetchedCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutLoadState.FetchingCodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void type metadata accessor for RelatedWorkoutLoadState.CodingKeys()
{
  JUMPOUT(0x24261C5D0);
}

void RelatedWorkoutLoadState.init(from:)()
{
  type metadata accessor for RelatedWorkoutLoadState.IdleCodingKeys();
}

void sub_23C307AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v18 = MEMORY[0x24261C66C](&unk_23C359C38, a1);
  *(_QWORD *)(v16 - 472) = a1;
  *(_QWORD *)(v16 - 488) = v18;
  v19 = sub_23C34EBC8();
  *(_QWORD *)(v16 - 552) = v19;
  *(_QWORD *)(v16 - 568) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 496) = (char *)&a9 - v20;
  *(_QWORD *)(v16 - 368) = v9;
  v21 = *(_QWORD *)(v16 - 320);
  *(_QWORD *)(v16 - 240) = v9;
  *(_QWORD *)(v16 - 232) = v21;
  *(_QWORD *)(v16 - 224) = *(_QWORD *)(v16 - 304);
  *(_QWORD *)(v16 - 216) = v10;
  *(_QWORD *)(v16 - 208) = *(_QWORD *)(v16 - 72);
  *(_QWORD *)(v16 - 200) = v12;
  v22 = *(_QWORD *)(v16 - 280);
  *(_QWORD *)(v16 - 192) = v14;
  *(_QWORD *)(v16 - 184) = v22;
  *(_QWORD *)(v16 - 176) = v15;
  *(_QWORD *)(v16 - 168) = v13;
  *(_QWORD *)(v16 - 400) = v15;
  *(_QWORD *)(v16 - 160) = *(_QWORD *)(v16 - 384);
  *(_QWORD *)(v16 - 152) = v11;
  v23 = *(_QWORD *)(v16 - 360);
  *(_QWORD *)(v16 - 144) = *(_QWORD *)(v16 - 312);
  *(_QWORD *)(v16 - 136) = v23;
  v24 = *(_QWORD *)(v16 - 288);
  *(_QWORD *)(v16 - 128) = *(_QWORD *)(v16 - 296);
  *(_QWORD *)(v16 - 120) = v24;
  v25 = *(_QWORD *)(v16 - 328);
  *(_QWORD *)(v16 - 112) = *(_QWORD *)(v16 - 336);
  *(_QWORD *)(v16 - 104) = v25;
  type metadata accessor for RelatedWorkoutLoadState.FetchedCodingKeys();
}

void sub_23C307BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = MEMORY[0x24261C66C](&unk_23C359BE8, a1);
  *(_QWORD *)(v17 - 504) = a1;
  *(_QWORD *)(v17 - 512) = v19;
  v20 = sub_23C34EBC8();
  *(_QWORD *)(v17 - 544) = v20;
  *(_QWORD *)(v17 - 560) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v17 - 480) = (char *)&a9 - v21;
  v22 = *(_QWORD *)(v17 - 320);
  *(_QWORD *)(v17 - 240) = v9;
  *(_QWORD *)(v17 - 232) = v22;
  *(_QWORD *)(v17 - 224) = v10;
  *(_QWORD *)(v17 - 216) = v11;
  *(_QWORD *)(v17 - 416) = v11;
  v23 = *(_QWORD *)(v17 - 344);
  *(_QWORD *)(v17 - 208) = *(_QWORD *)(v17 - 72);
  *(_QWORD *)(v17 - 200) = v23;
  v24 = *(_QWORD *)(v17 - 280);
  *(_QWORD *)(v17 - 192) = *(_QWORD *)(v17 - 352);
  *(_QWORD *)(v17 - 184) = v24;
  v25 = *(_QWORD *)(v17 - 392);
  *(_QWORD *)(v17 - 176) = v16;
  *(_QWORD *)(v17 - 168) = v25;
  v26 = *(_QWORD *)(v17 - 376);
  *(_QWORD *)(v17 - 160) = v14;
  *(_QWORD *)(v17 - 152) = v26;
  *(_QWORD *)(v17 - 144) = v13;
  *(_QWORD *)(v17 - 136) = v12;
  v27 = *(_QWORD *)(v17 - 288);
  *(_QWORD *)(v17 - 128) = *(_QWORD *)(v17 - 296);
  *(_QWORD *)(v17 - 120) = v27;
  *(_QWORD *)(v17 - 112) = *(_QWORD *)(v17 - 336);
  *(_QWORD *)(v17 - 104) = v15;
  type metadata accessor for RelatedWorkoutLoadState.FetchingCodingKeys();
}

void sub_23C307CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v18 = MEMORY[0x24261C66C](&unk_23C359B98, a1);
  *(_QWORD *)(v16 - 440) = a1;
  *(_QWORD *)(v16 - 520) = v18;
  v19 = sub_23C34EBC8();
  *(_QWORD *)(v16 - 576) = v19;
  *(_QWORD *)(v16 - 584) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 528) = (char *)&a9 - v20;
  *(_QWORD *)(v16 - 240) = *(_QWORD *)(v16 - 368);
  *(_QWORD *)(v16 - 232) = v12;
  *(_QWORD *)(v16 - 224) = *(_QWORD *)(v16 - 304);
  *(_QWORD *)(v16 - 216) = v11;
  *(_QWORD *)(v16 - 208) = *(_QWORD *)(v16 - 72);
  *(_QWORD *)(v16 - 200) = v9;
  v21 = *(_QWORD *)(v16 - 280);
  *(_QWORD *)(v16 - 192) = *(_QWORD *)(v16 - 352);
  *(_QWORD *)(v16 - 184) = v21;
  v22 = *(_QWORD *)(v16 - 392);
  *(_QWORD *)(v16 - 176) = *(_QWORD *)(v16 - 400);
  *(_QWORD *)(v16 - 168) = v22;
  *(_QWORD *)(v16 - 160) = *(_QWORD *)(v16 - 384);
  *(_QWORD *)(v16 - 152) = v15;
  v23 = *(_QWORD *)(v16 - 360);
  *(_QWORD *)(v16 - 144) = *(_QWORD *)(v16 - 312);
  *(_QWORD *)(v16 - 136) = v23;
  *(_QWORD *)(v16 - 128) = v13;
  *(_QWORD *)(v16 - 120) = v14;
  v24 = *(_QWORD *)(v16 - 328);
  *(_QWORD *)(v16 - 112) = v10;
  *(_QWORD *)(v16 - 104) = v24;
  type metadata accessor for RelatedWorkoutLoadState.CodingKeys();
}

void sub_23C307DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v8 - 432) = MEMORY[0x24261C66C](&unk_23C359B48, a1);
  v9 = sub_23C34EBC8();
  *(_QWORD *)(v8 - 448) = v9;
  *(_QWORD *)(v8 - 464) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *(_QWORD *)(v8 - 320);
  *(_QWORD *)(v8 - 240) = *(_QWORD *)(v8 - 368);
  *(_QWORD *)(v8 - 232) = v10;
  *(_QWORD *)(v8 - 224) = *(_QWORD *)(v8 - 304);
  *(_QWORD *)(v8 - 216) = *(_QWORD *)(v8 - 416);
  *(_QWORD *)(v8 - 208) = *(_QWORD *)(v8 - 72);
  *(_QWORD *)(v8 - 200) = *(_QWORD *)(v8 - 344);
  *(_QWORD *)(v8 - 192) = v2;
  v11 = *(_QWORD *)(v8 - 400);
  *(_QWORD *)(v8 - 184) = v1;
  *(_QWORD *)(v8 - 176) = v11;
  *(_QWORD *)(v8 - 168) = v5;
  *(_QWORD *)(v8 - 160) = v6;
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v8 - 376);
  *(_QWORD *)(v8 - 144) = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 136) = v7;
  *(_QWORD *)(v8 - 128) = *(_QWORD *)(v8 - 296);
  *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 288);
  *(_QWORD *)(v8 - 112) = v4;
  *(_QWORD *)(v8 - 104) = v3;
  type metadata accessor for RelatedWorkoutLoadState();
}

uint64_t sub_23C307EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[96];

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v68[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v68[-v8];
  v10 = *(_QWORD **)(v2 - 408);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v2 - 456) = v1;
  v11 = *(_QWORD *)(v2 - 424);
  sub_23C34ECB8();
  if (v11)
    goto LABEL_10;
  *(_QWORD *)(v2 - 608) = v6;
  *(_QWORD *)(v2 - 600) = v9;
  *(_QWORD *)(v2 - 592) = v4;
  *(_QWORD *)(v2 - 424) = a1;
  v12 = *(_QWORD *)(v2 - 280);
  *(_QWORD *)(v2 - 432) = 0;
  v13 = *(_QWORD *)(v2 - 448);
  v14 = *(_QWORD *)(v2 - 456);
  *(_QWORD *)(v2 - 240) = sub_23C34EBBC();
  v15 = sub_23C34E934();
  MEMORY[0x24261C66C](MEMORY[0x24BEE12C8], v15);
  *(_QWORD *)(v2 - 272) = sub_23C34EA60();
  *(_QWORD *)(v2 - 264) = v16;
  *(_QWORD *)(v2 - 256) = v17;
  *(_QWORD *)(v2 - 248) = v18;
  v19 = sub_23C34EA54();
  MEMORY[0x24261C66C](MEMORY[0x24BEE2190], v19);
  sub_23C34EA00();
  v20 = *(unsigned __int8 *)(v2 - 240);
  if (v20 != 3)
  {
    v21 = *(_OWORD *)(v2 - 272);
    v22 = *(_OWORD *)(v2 - 256);
    *(_OWORD *)(v2 - 624) = v21;
    *(_OWORD *)(v2 - 240) = v21;
    *(_OWORD *)(v2 - 224) = v22;
    if ((sub_23C34EA18() & 1) != 0)
    {
      if (v20)
      {
        if (v20 == 1)
        {
          *(_BYTE *)(v2 - 240) = 1;
          v23 = *(_QWORD *)(v2 - 480);
          v24 = v14;
          v25 = *(_QWORD *)(v2 - 432);
          sub_23C34EB38();
          if (v25)
            goto LABEL_9;
          v45 = *(_QWORD *)(v2 - 320);
          *(_QWORD *)(v2 - 240) = *(_QWORD *)(v2 - 368);
          *(_QWORD *)(v2 - 232) = v45;
          v46 = *(_QWORD *)(v2 - 416);
          *(_QWORD *)(v2 - 224) = *(_QWORD *)(v2 - 304);
          *(_QWORD *)(v2 - 216) = v46;
          v47 = *(_QWORD *)(v2 - 352);
          *(_QWORD *)(v2 - 208) = *(_QWORD *)(v2 - 72);
          *(_QWORD *)(v2 - 200) = v47;
          *(_QWORD *)(v2 - 192) = *(_QWORD *)(v2 - 344);
          *(_QWORD *)(v2 - 184) = v12;
          v48 = *(_QWORD *)(v2 - 392);
          *(_QWORD *)(v2 - 176) = *(_QWORD *)(v2 - 400);
          *(_QWORD *)(v2 - 168) = v48;
          v49 = *(_QWORD *)(v2 - 376);
          *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 384);
          *(_QWORD *)(v2 - 152) = v49;
          v50 = *(_QWORD *)(v2 - 360);
          *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 312);
          *(_QWORD *)(v2 - 136) = v50;
          v51 = *(_QWORD *)(v2 - 336);
          *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 296);
          *(_QWORD *)(v2 - 120) = v51;
          v52 = *(_QWORD *)(v2 - 328);
          *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 288);
          *(_QWORD *)(v2 - 104) = v52;
          v53 = sub_23C34DBF0();
          MEMORY[0x24261C66C](MEMORY[0x24BE34A38], v53);
          v54 = *(_QWORD *)(v2 - 608);
          v55 = *(_QWORD *)(v2 - 544);
          sub_23C34EBB0();
          v56 = *(_QWORD *)(v2 - 464);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 560) + 8))(v23, v55);
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v24, v13);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v54, 0, 2, v53);
          v66 = *(_QWORD *)(v2 - 592);
          v42 = *(_QWORD *)(v2 - 600);
          v67 = *(_QWORD *)(v2 - 424);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v42, v54, v67);
LABEL_19:
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v66 + 32))(*(_QWORD *)(v2 - 536), v42, v67);
          v29 = *(_QWORD *)(v2 - 408);
          return __swift_destroy_boxed_opaque_existential_1(v29);
        }
        *(_BYTE *)(v2 - 240) = 2;
        v43 = *(_QWORD *)(v2 - 496);
        v44 = *(_QWORD *)(v2 - 432);
        sub_23C34EB38();
        if (v44)
          goto LABEL_9;
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 568) + 8))(v43, *(_QWORD *)(v2 - 552));
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 464) + 8))(v14, v13);
        v57 = *(_QWORD *)(v2 - 320);
        *(_QWORD *)(v2 - 240) = *(_QWORD *)(v2 - 368);
        *(_QWORD *)(v2 - 232) = v57;
        v58 = *(_QWORD *)(v2 - 416);
        *(_QWORD *)(v2 - 224) = *(_QWORD *)(v2 - 304);
        *(_QWORD *)(v2 - 216) = v58;
        v59 = *(_QWORD *)(v2 - 352);
        *(_QWORD *)(v2 - 208) = *(_QWORD *)(v2 - 72);
        *(_QWORD *)(v2 - 200) = v59;
        *(_QWORD *)(v2 - 192) = *(_QWORD *)(v2 - 344);
        *(_QWORD *)(v2 - 184) = v12;
        v60 = *(_QWORD *)(v2 - 392);
        *(_QWORD *)(v2 - 176) = *(_QWORD *)(v2 - 400);
        *(_QWORD *)(v2 - 168) = v60;
        v61 = *(_QWORD *)(v2 - 376);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 384);
        *(_QWORD *)(v2 - 152) = v61;
        v62 = *(_QWORD *)(v2 - 360);
        *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 312);
        *(_QWORD *)(v2 - 136) = v62;
        v63 = *(_QWORD *)(v2 - 336);
        *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 296);
        *(_QWORD *)(v2 - 120) = v63;
        v64 = *(_QWORD *)(v2 - 328);
        *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 288);
        *(_QWORD *)(v2 - 104) = v64;
        v65 = sub_23C34DBF0();
        v42 = *(_QWORD *)(v2 - 600);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v42, 2, 2, v65);
      }
      else
      {
        *(_BYTE *)(v2 - 240) = 0;
        v31 = *(_QWORD *)(v2 - 528);
        v32 = *(_QWORD *)(v2 - 432);
        sub_23C34EB38();
        if (v32)
          goto LABEL_9;
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 584) + 8))(v31, *(_QWORD *)(v2 - 576));
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 464) + 8))(v14, v13);
        v33 = *(_QWORD *)(v2 - 320);
        *(_QWORD *)(v2 - 240) = *(_QWORD *)(v2 - 368);
        *(_QWORD *)(v2 - 232) = v33;
        v34 = *(_QWORD *)(v2 - 416);
        *(_QWORD *)(v2 - 224) = *(_QWORD *)(v2 - 304);
        *(_QWORD *)(v2 - 216) = v34;
        v35 = *(_QWORD *)(v2 - 352);
        *(_QWORD *)(v2 - 208) = *(_QWORD *)(v2 - 72);
        *(_QWORD *)(v2 - 200) = v35;
        *(_QWORD *)(v2 - 192) = *(_QWORD *)(v2 - 344);
        *(_QWORD *)(v2 - 184) = v12;
        v36 = *(_QWORD *)(v2 - 392);
        *(_QWORD *)(v2 - 176) = *(_QWORD *)(v2 - 400);
        *(_QWORD *)(v2 - 168) = v36;
        v37 = *(_QWORD *)(v2 - 376);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 384);
        *(_QWORD *)(v2 - 152) = v37;
        v38 = *(_QWORD *)(v2 - 360);
        *(_QWORD *)(v2 - 144) = *(_QWORD *)(v2 - 312);
        *(_QWORD *)(v2 - 136) = v38;
        v39 = *(_QWORD *)(v2 - 336);
        *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 296);
        *(_QWORD *)(v2 - 120) = v39;
        v40 = *(_QWORD *)(v2 - 328);
        *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 288);
        *(_QWORD *)(v2 - 104) = v40;
        v41 = sub_23C34DBF0();
        v42 = *(_QWORD *)(v2 - 600);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v42, 1, 2, v41);
      }
      v67 = *(_QWORD *)(v2 - 424);
      v66 = *(_QWORD *)(v2 - 592);
      goto LABEL_19;
    }
  }
  v26 = sub_23C34EAC0();
  swift_allocError();
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
  *v28 = *(_QWORD *)(v2 - 424);
  sub_23C34EB44();
  sub_23C34EAB4();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
  swift_willThrow();
LABEL_9:
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 464) + 8))(v14, v13);
  v10 = *(_QWORD **)(v2 - 408);
LABEL_10:
  v29 = (uint64_t)v10;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

void sub_23C308688()
{
  RelatedWorkoutLoadState.init(from:)();
}

void sub_23C3086E0()
{
  RelatedWorkoutLoadState.encode(to:)();
}

void sub_23C3086F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static RelatedWorkoutLoadState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9], a3[10], a3[11], a3[12], a3[13], a3[14], a3[15], a3[16], a3[17], a3[18],
    a3[19]);
}

uint64_t sub_23C308734(char a1)
{
  return a1 & 1;
}

uint64_t sub_23C308744()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C34DBF0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23C3087F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23C34DBF0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23C308918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_23C34DBF0();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_23C3089D0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23C34DBF0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23C308AD0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23C34DBF0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_23C308C1C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23C34DBF0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23C308D1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_23C34DBF0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23C308E68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C308E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23C34DBF0();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23C308F1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C308F28(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_23C34DBF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C308FDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23C34DBF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23C309074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23C34DBF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23C309114(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C309160 + 4 * byte_23C3597E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C309194 + 4 * byte_23C3597E0[v4]))();
}

uint64_t sub_23C309194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30919C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3091A4);
  return result;
}

uint64_t sub_23C3091B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3091B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3091BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3091C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3091D0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C309210 + 4 * byte_23C3597EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C309230 + 4 * byte_23C3597EF[v4]))();
}

_BYTE *sub_23C309210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C309230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C309238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C309240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C309248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C309250(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23C30925C()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C30926C()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C30927C()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C30928C()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C30929C()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C3092AC()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C3092BC()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C3092CC()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C3092DC()
{
  JUMPOUT(0x24261C66CLL);
}

void sub_23C3092EC()
{
  JUMPOUT(0x24261C66CLL);
}

uint64_t sub_23C3092FC()
{
  return 3;
}

uint64_t sub_23C309304()
{
  return 0x7470697263736564;
}

uint64_t sub_23C309320(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C30935C + 4 * byte_23C359CC0[a1]))(0xD000000000000017, 0x800000023C361C40);
}

uint64_t sub_23C30935C()
{
  return 0x4164694477656976;
}

uint64_t sub_23C309380()
{
  return 0x7070615465726F6DLL;
}

unint64_t sub_23C30939C()
{
  return 0xD000000000000014;
}

uint64_t sub_23C3093B8()
{
  return 0x5472656E69617274;
}

uint64_t sub_23C3093DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C79616C70;
  else
    return 0x6564496B63617274;
}

uint64_t sub_23C309428()
{
  unsigned __int8 *v0;

  return sub_23C309320(*v0);
}

uint64_t sub_23C309430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30B5AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C309454()
{
  sub_23C309D08();
  return sub_23C34ECD0();
}

uint64_t sub_23C30947C()
{
  sub_23C309D08();
  return sub_23C34ECDC();
}

uint64_t sub_23C3094A4()
{
  sub_23C309E5C();
  return sub_23C34ECD0();
}

uint64_t sub_23C3094CC()
{
  sub_23C309E5C();
  return sub_23C34ECDC();
}

uint64_t sub_23C3094F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30B7E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C309520()
{
  sub_23C309E18();
  return sub_23C34ECD0();
}

uint64_t sub_23C309548()
{
  sub_23C309E18();
  return sub_23C34ECDC();
}

uint64_t sub_23C309570()
{
  char *v0;

  return sub_23C3093DC(*v0);
}

uint64_t sub_23C309578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30B894(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C30959C()
{
  sub_23C309DD4();
  return sub_23C34ECD0();
}

uint64_t sub_23C3095C4()
{
  sub_23C309DD4();
  return sub_23C34ECDC();
}

unint64_t sub_23C3095EC()
{
  return 0xD000000000000011;
}

uint64_t sub_23C309608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30B9A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C309630()
{
  sub_23C309D90();
  return sub_23C34ECD0();
}

uint64_t sub_23C309658()
{
  sub_23C309D90();
  return sub_23C34ECDC();
}

uint64_t sub_23C309680()
{
  sub_23C309EA0();
  return sub_23C34ECD0();
}

uint64_t sub_23C3096A8()
{
  sub_23C309EA0();
  return sub_23C34ECDC();
}

void WorkoutDetailAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B370);
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v25 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B378);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B380);
  v18 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23C34D950();
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v22 = (char *)&v18 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B388);
  v20 = *(_QWORD *)(v11 - 8);
  v21 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B390);
  MEMORY[0x24BDAC7A8](v19);
  v12 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B398);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C309D08();
  v36 = v16;
  sub_23C34ECC4();
  sub_23C309D4C(v35, (uint64_t)v14);
  v17 = (char *)sub_23C309978 + 4 * byte_23C359CC5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C309978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 - 144);
  v2 = *(_QWORD *)(v1 - 136);
  v4 = *(_QWORD *)(v1 - 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v0, v2);
  *(_BYTE *)(v1 - 69) = 2;
  sub_23C309E18();
  v5 = *(_QWORD *)(v1 - 216);
  v7 = *(_QWORD *)(v1 - 104);
  v6 = *(_QWORD *)(v1 - 96);
  sub_23C34EBD4();
  sub_23C30A7C4(&qword_256B58108, MEMORY[0x24BDCDAE0]);
  v8 = *(_QWORD *)(v1 - 208);
  sub_23C34EC40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 256) + 8))(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v7, v6);
}

uint64_t type metadata accessor for WorkoutDetailAction()
{
  uint64_t result;

  result = qword_256B5B470;
  if (!qword_256B5B470)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C309D08()
{
  unint64_t result;

  result = qword_256B5B3A0;
  if (!qword_256B5B3A0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A348, &type metadata for WorkoutDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3A0);
  }
  return result;
}

uint64_t sub_23C309D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutDetailAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C309D90()
{
  unint64_t result;

  result = qword_256B5B3A8;
  if (!qword_256B5B3A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A2F8, &type metadata for WorkoutDetailAction.TrainerTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3A8);
  }
  return result;
}

unint64_t sub_23C309DD4()
{
  unint64_t result;

  result = qword_256B5B3B0;
  if (!qword_256B5B3B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A2A8, &type metadata for WorkoutDetailAction.NavigateToMusicTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3B0);
  }
  return result;
}

unint64_t sub_23C309E18()
{
  unint64_t result;

  result = qword_256B5B3B8;
  if (!qword_256B5B3B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A258, &type metadata for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3B8);
  }
  return result;
}

unint64_t sub_23C309E5C()
{
  unint64_t result;

  result = qword_256B5B3C0;
  if (!qword_256B5B3C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A208, &type metadata for WorkoutDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3C0);
  }
  return result;
}

unint64_t sub_23C309EA0()
{
  unint64_t result;

  result = qword_256B5B3C8;
  if (!qword_256B5B3C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A1B8, &type metadata for WorkoutDetailAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B3C8);
  }
  return result;
}

uint64_t WorkoutDetailAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  _QWORD v34[8];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v43 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3D0);
  v39 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v47 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3D8);
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v46 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3E0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3E8);
  v34[6] = *(_QWORD *)(v7 - 8);
  v34[7] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3F0);
  v34[4] = *(_QWORD *)(v9 - 8);
  v34[5] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B3F8);
  v44 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WorkoutDetailAction();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v34 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v34 - v23;
  v25 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_23C309D08();
  v48 = v12;
  v26 = v51;
  sub_23C34ECB8();
  if (!v26)
  {
    v34[2] = v21;
    v34[0] = v15;
    v34[1] = v18;
    v34[3] = v24;
    v51 = v13;
    v28 = v48;
    v27 = v49;
    v29 = sub_23C34EBBC();
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = sub_23C34EAC0();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v32 = v51;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v27);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
}

uint64_t sub_23C30A780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutDetailAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C30A7C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C34D950();
    result = MEMORY[0x24261C66C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C30A804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutDetailAction.init(from:)(a1, a2);
}

void sub_23C30A818(_QWORD *a1)
{
  WorkoutDetailAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutDetailAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_23C34D950();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for WorkoutDetailAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return swift_bridgeObjectRelease();
    case 1:
      swift_bridgeObjectRelease();
      a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
      goto LABEL_7;
    case 0:
LABEL_7:
      v3 = sub_23C34D950();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for WorkoutDetailAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23C34D950();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for WorkoutDetailAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23C30AC28((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23C34D950();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C30AC28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutDetailAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for WorkoutDetailAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23C34D950();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23C34D950();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for WorkoutDetailAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23C30AC28((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B58EE0) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23C34D950();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23C34D950();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C30AE3C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char *v4;
  void *v5;

  result = sub_23C34D950();
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v4 = &v2;
    v5 = &unk_23C359D58;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C30AF10 + 4 * byte_23C359CD4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C30AF44 + 4 * byte_23C359CCF[v4]))();
}

uint64_t sub_23C30AF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30AF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C30AF54);
  return result;
}

uint64_t sub_23C30AF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C30AF68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C30AF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30AF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.CodingKeys()
{
  return &type metadata for WorkoutDetailAction.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.ViewDidAppearCodingKeys()
{
  return &type metadata for WorkoutDetailAction.ViewDidAppearCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.MoreTappedCodingKeys()
{
  return &type metadata for WorkoutDetailAction.MoreTappedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys()
{
  return &type metadata for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutDetailAction.NavigateToMusicTrackCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C30B010 + 4 * byte_23C359CDE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C30B044 + 4 * byte_23C359CD9[v4]))();
}

uint64_t sub_23C30B044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30B04C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C30B054);
  return result;
}

uint64_t sub_23C30B060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C30B068);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C30B06C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30B074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.NavigateToMusicTrackCodingKeys()
{
  return &type metadata for WorkoutDetailAction.NavigateToMusicTrackCodingKeys;
}

uint64_t _s20FitnessProductDetail19WorkoutDetailActionO33NavigateToMusicPlaylistCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C30B0D0 + 4 * byte_23C359CE3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C30B0F0 + 4 * byte_23C359CE8[v4]))();
}

_BYTE *sub_23C30B0D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C30B0F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C30B0F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C30B100(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C30B108(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C30B110(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailAction.TrainerTappedCodingKeys()
{
  return &type metadata for WorkoutDetailAction.TrainerTappedCodingKeys;
}

unint64_t sub_23C30B130()
{
  unint64_t result;

  result = qword_256B5B4A8;
  if (!qword_256B5B4A8)
  {
    result = MEMORY[0x24261C66C](&unk_23C359EC8, &type metadata for WorkoutDetailAction.TrainerTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4A8);
  }
  return result;
}

unint64_t sub_23C30B178()
{
  unint64_t result;

  result = qword_256B5B4B0;
  if (!qword_256B5B4B0)
  {
    result = MEMORY[0x24261C66C](&unk_23C359F80, &type metadata for WorkoutDetailAction.NavigateToMusicTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4B0);
  }
  return result;
}

unint64_t sub_23C30B1C0()
{
  unint64_t result;

  result = qword_256B5B4B8;
  if (!qword_256B5B4B8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A038, &type metadata for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4B8);
  }
  return result;
}

unint64_t sub_23C30B208()
{
  unint64_t result;

  result = qword_256B5B4C0;
  if (!qword_256B5B4C0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A190, &type metadata for WorkoutDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4C0);
  }
  return result;
}

unint64_t sub_23C30B250()
{
  unint64_t result;

  result = qword_256B5B4C8;
  if (!qword_256B5B4C8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A0B0, &type metadata for WorkoutDetailAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4C8);
  }
  return result;
}

unint64_t sub_23C30B298()
{
  unint64_t result;

  result = qword_256B5B4D0;
  if (!qword_256B5B4D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A0D8, &type metadata for WorkoutDetailAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4D0);
  }
  return result;
}

unint64_t sub_23C30B2E0()
{
  unint64_t result;

  result = qword_256B5B4D8;
  if (!qword_256B5B4D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A060, &type metadata for WorkoutDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4D8);
  }
  return result;
}

unint64_t sub_23C30B328()
{
  unint64_t result;

  result = qword_256B5B4E0;
  if (!qword_256B5B4E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A088, &type metadata for WorkoutDetailAction.MoreTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4E0);
  }
  return result;
}

unint64_t sub_23C30B370()
{
  unint64_t result;

  result = qword_256B5B4E8;
  if (!qword_256B5B4E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C359FA8, &type metadata for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4E8);
  }
  return result;
}

unint64_t sub_23C30B3B8()
{
  unint64_t result;

  result = qword_256B5B4F0;
  if (!qword_256B5B4F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C359FD0, &type metadata for WorkoutDetailAction.NavigateToMusicPlaylistCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4F0);
  }
  return result;
}

unint64_t sub_23C30B400()
{
  unint64_t result;

  result = qword_256B5B4F8;
  if (!qword_256B5B4F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C359EF0, &type metadata for WorkoutDetailAction.NavigateToMusicTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B4F8);
  }
  return result;
}

unint64_t sub_23C30B448()
{
  unint64_t result;

  result = qword_256B5B500;
  if (!qword_256B5B500)
  {
    result = MEMORY[0x24261C66C](&unk_23C359F18, &type metadata for WorkoutDetailAction.NavigateToMusicTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B500);
  }
  return result;
}

unint64_t sub_23C30B490()
{
  unint64_t result;

  result = qword_256B5B508;
  if (!qword_256B5B508)
  {
    result = MEMORY[0x24261C66C](&unk_23C359E38, &type metadata for WorkoutDetailAction.TrainerTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B508);
  }
  return result;
}

unint64_t sub_23C30B4D8()
{
  unint64_t result;

  result = qword_256B5B510;
  if (!qword_256B5B510)
  {
    result = MEMORY[0x24261C66C](&unk_23C359E60, &type metadata for WorkoutDetailAction.TrainerTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B510);
  }
  return result;
}

unint64_t sub_23C30B520()
{
  unint64_t result;

  result = qword_256B5B518;
  if (!qword_256B5B518)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A100, &type metadata for WorkoutDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B518);
  }
  return result;
}

unint64_t sub_23C30B568()
{
  unint64_t result;

  result = qword_256B5B520;
  if (!qword_256B5B520)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A128, &type metadata for WorkoutDetailAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B520);
  }
  return result;
}

uint64_t sub_23C30B5AC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4164694477656976 && a2 == 0xED00007261657070;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7070615465726F6DLL && a2 == 0xEA00000000006465 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023C361C40 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361C60 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5472656E69617274 && a2 == 0xED00006465707061)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23C30B7E0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7473696C79616C70 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C30B874()
{
  return 0x7473696C79616C70;
}

uint64_t sub_23C30B894(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6564496B63617274 && a2 == 0xEF7265696669746ELL;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473696C79616C70 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C30B9A4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C361C80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t TrainerTipGalleryState.detailLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C282F90(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
}

uint64_t TrainerTipGalleryState.detailLoadState.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23C30BB30(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
}

uint64_t (*TrainerTipGalleryState.detailLoadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TrainerTipGalleryState.listLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TrainerTipGalleryState();
  return sub_23C282F90(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
}

uint64_t type metadata accessor for TrainerTipGalleryState()
{
  uint64_t result;

  result = qword_256B5B5C8;
  if (!qword_256B5B5C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TrainerTipGalleryState.listLoadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TrainerTipGalleryState();
  return sub_23C30BB30(a1, v1 + *(int *)(v3 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
}

uint64_t sub_23C30BB30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*TrainerTipGalleryState.listLoadState.modify())(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for TrainerTipGalleryState();
  return nullsub_1;
}

uint64_t TrainerTipGalleryState.init(detailLoadState:listLoadState:locale:layout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;

  sub_23C2851C0(a1, a5, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
  v9 = (int *)type metadata accessor for TrainerTipGalleryState();
  sub_23C2851C0(a2, a5 + v9[5], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
  v10 = a5 + v9[6];
  v11 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
  return sub_23C2851C0(a4, a5 + v9[7], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryLayout);
}

uint64_t sub_23C30BC48(char a1)
{
  return *(_QWORD *)&aDetaillolistlo[8 * a1];
}

uint64_t sub_23C30BC68()
{
  char *v0;

  return sub_23C30BC48(*v0);
}

uint64_t sub_23C30BC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C30D518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C30BC94()
{
  sub_23C30BF2C();
  return sub_23C34ECD0();
}

uint64_t sub_23C30BCBC()
{
  sub_23C30BF2C();
  return sub_23C34ECDC();
}

uint64_t TrainerTipGalleryState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B528);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C30BF2C();
  sub_23C34ECC4();
  v8[15] = 0;
  type metadata accessor for TrainerTipGalleryDetailLoadState();
  sub_23C27FEE4(&qword_256B5B538, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryDetailLoadState, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryDetailLoadState);
  sub_23C34EC40();
  if (!v1)
  {
    type metadata accessor for TrainerTipGalleryState();
    v8[14] = 1;
    type metadata accessor for TrainerTipGalleryListLoadState();
    sub_23C27FEE4(&qword_256B5B540, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryListLoadState, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryListLoadState);
    sub_23C34EC40();
    v8[13] = 2;
    sub_23C34DA34();
    sub_23C27FEE4(&qword_256B576D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C34EC40();
    v8[12] = 3;
    type metadata accessor for TrainerTipGalleryLayout();
    sub_23C27FEE4(&qword_256B5B548, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryLayout, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryLayout);
    sub_23C34EC40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C30BF2C()
{
  unint64_t result;

  result = qword_256B5B530;
  if (!qword_256B5B530)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A51C, &type metadata for TrainerTipGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B530);
  }
  return result;
}

uint64_t TrainerTipGalleryState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t State;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v22 = a2;
  v23 = type metadata accessor for TrainerTipGalleryLayout();
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C34DA34();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for TrainerTipGalleryListLoadState();
  MEMORY[0x24BDAC7A8](State);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TrainerTipGalleryDetailLoadState();
  MEMORY[0x24BDAC7A8](v27);
  v30 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B550);
  v9 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TrainerTipGalleryState();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C30BF2C();
  v31 = v11;
  v15 = (uint64_t)v33;
  sub_23C34ECB8();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = (uint64_t)v14;
  v33 = a1;
  v17 = v28;
  v18 = v29;
  v37 = 0;
  sub_23C27FEE4(&qword_256B5B558, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryDetailLoadState, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryDetailLoadState);
  sub_23C34EBB0();
  sub_23C2851C0(v30, v16, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
  v36 = 1;
  sub_23C27FEE4(&qword_256B5B560, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryListLoadState, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryListLoadState);
  sub_23C34EBB0();
  v30 = v12;
  sub_23C2851C0((uint64_t)v7, v16 + *(int *)(v12 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryListLoadState);
  v35 = 2;
  sub_23C27FEE4(&qword_256B57708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v19 = v25;
  sub_23C34EBB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + *(int *)(v30 + 24), v19, v18);
  v34 = 3;
  sub_23C27FEE4(&qword_256B5B568, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryLayout, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryLayout);
  v20 = (uint64_t)v24;
  sub_23C34EBB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v32);
  sub_23C2851C0(v20, v16 + *(int *)(v30 + 28), (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryLayout);
  sub_23C282F90(v16, v22, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_23C283550(v16, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryState);
}

uint64_t sub_23C30C404@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrainerTipGalleryState.init(from:)(a1, a2);
}

uint64_t sub_23C30C418(_QWORD *a1)
{
  return TrainerTipGalleryState.encode(to:)(a1);
}

uint64_t static TrainerTipGalleryState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  _s20FitnessProductDetail017TrainerTipGalleryC9LoadStateO2eeoiySbAC_ACtFZ_0(a1, a2);
  if ((v4 & 1) != 0)
  {
    v5 = type metadata accessor for TrainerTipGalleryState();
    _s20FitnessProductDetail30TrainerTipGalleryListLoadStateO2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v5 + 20), a2 + *(int *)(v5 + 20));
    if ((v6 & 1) != 0 && (MEMORY[0x24261B124](a1 + *(int *)(v5 + 24), a2 + *(int *)(v5 + 24)) & 1) != 0)
      JUMPOUT(0x24261B310);
  }
  return 0;
}

uint64_t sub_23C30C4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;

  _s20FitnessProductDetail017TrainerTipGalleryC9LoadStateO2eeoiySbAC_ACtFZ_0(a1, a2);
  if ((v6 & 1) != 0)
  {
    _s20FitnessProductDetail30TrainerTipGalleryListLoadStateO2eeoiySbAC_ACtFZ_0(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
    if ((v7 & 1) != 0 && (MEMORY[0x24261B124](a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24)) & 1) != 0)
      JUMPOUT(0x24261B310);
  }
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainerTipGalleryState(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t State;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TrainerTipGalleryDetail();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      State = type metadata accessor for TrainerTipGalleryDetailLoadState();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      v11 = sub_23C34D86C();
      v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12((uint64_t *)((char *)a1 + *(int *)(v7 + 20)), (uint64_t *)((char *)a2 + *(int *)(v7 + 20)), v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
    v13 = a3[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TrainerTipGalleryList();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for TrainerTipGalleryListLoadState();
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_23C34DA1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      v20(v14, 0, 3, v16);
    }
    v21 = a3[6];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23C34DA34();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = a3[7];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_23C34DC38();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for TrainerTipGalleryState(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for TrainerTipGalleryDetail();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 3, v4))
  {
    v5 = sub_23C34D86C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(a1, v5);
    v6(a1 + *(int *)(v4 + 20), v5);
  }
  v7 = a1 + a2[5];
  v8 = type metadata accessor for TrainerTipGalleryList();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 3, v8))
  {
    v9 = sub_23C34DA1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    swift_bridgeObjectRelease();
  }
  v10 = a1 + a2[6];
  v11 = sub_23C34DA34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[7];
  v13 = sub_23C34DC38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

char *initializeWithCopy for TrainerTipGalleryState(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t State;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    State = type metadata accessor for TrainerTipGalleryDetailLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v9 = sub_23C34D86C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TrainerTipGalleryList();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 3, v14))
  {
    v16 = type metadata accessor for TrainerTipGalleryListLoadState();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_23C34DA1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
    swift_bridgeObjectRetain();
    v18(v12, 0, 3, v14);
  }
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

char *assignWithCopy for TrainerTipGalleryState(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t State;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_23C34D86C();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
LABEL_6:
    State = type metadata accessor for TrainerTipGalleryDetailLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    goto LABEL_7;
  }
  v34 = sub_23C34D86C();
  v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24);
  v35(a1, a2, v34);
  v35(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v34);
LABEL_7:
  v14 = a3[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TrainerTipGalleryList();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 3, v17);
  v21 = v19(v16, 3, v17);
  if (!v20)
  {
    if (!v21)
    {
      v36 = sub_23C34DA1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v15, v16, v36);
      *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v24 = type metadata accessor for TrainerTipGalleryListLoadState();
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v22 = sub_23C34DA1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v15, v16, v22);
  *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  swift_bridgeObjectRetain();
  v23(v15, 0, 3, v17);
LABEL_13:
  v25 = a3[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

char *initializeWithTake for TrainerTipGalleryState(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t State;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    State = type metadata accessor for TrainerTipGalleryDetailLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v9 = sub_23C34D86C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TrainerTipGalleryList();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 3, v14))
  {
    v16 = type metadata accessor for TrainerTipGalleryListLoadState();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_23C34DA1C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
  }
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[7];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

char *assignWithTake for TrainerTipGalleryState(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t State;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;

  v6 = type metadata accessor for TrainerTipGalleryDetail();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_23C34D86C();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      v12(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_23C283550((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
LABEL_6:
    State = type metadata accessor for TrainerTipGalleryDetailLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    goto LABEL_7;
  }
  v33 = sub_23C34D86C();
  v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40);
  v34(a1, a2, v33);
  v34(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v33);
LABEL_7:
  v14 = a3[5];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TrainerTipGalleryList();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 3, v17);
  v21 = v19(v16, 3, v17);
  if (!v20)
  {
    if (!v21)
    {
      v35 = sub_23C34DA1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v15, v16, v35);
      *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_23C283550((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = type metadata accessor for TrainerTipGalleryListLoadState();
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  v22 = sub_23C34DA1C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
  *(_QWORD *)&v15[*(int *)(v17 + 20)] = *(_QWORD *)&v16[*(int *)(v17 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 3, v17);
LABEL_13:
  v24 = a3[6];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23C34DA34();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[7];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23C34DC38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerTipGalleryState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C30D12C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t State;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  v7 = *(_QWORD *)(State - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = State;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for TrainerTipGalleryListLoadState();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_23C34DA34();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = type metadata accessor for TrainerTipGalleryLayout();
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C30D1F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t State;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  State = type metadata accessor for TrainerTipGalleryDetailLoadState();
  v9 = *(_QWORD *)(State - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = State;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for TrainerTipGalleryListLoadState();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_23C34DA34();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = type metadata accessor for TrainerTipGalleryLayout();
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23C30D2B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for TrainerTipGalleryDetailLoadState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TrainerTipGalleryListLoadState();
    if (v2 <= 0x3F)
    {
      result = sub_23C34DA34();
      if (v3 <= 0x3F)
      {
        result = sub_23C34DC38();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C30D3C0 + 4 * byte_23C35A3A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C30D3F4 + 4 * byte_23C35A3A0[v4]))();
}

uint64_t sub_23C30D3F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30D3FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C30D404);
  return result;
}

uint64_t sub_23C30D410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C30D418);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C30D41C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30D424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryState.CodingKeys()
{
  return &type metadata for TrainerTipGalleryState.CodingKeys;
}

unint64_t sub_23C30D444()
{
  unint64_t result;

  result = qword_256B5B608;
  if (!qword_256B5B608)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A4F4, &type metadata for TrainerTipGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B608);
  }
  return result;
}

unint64_t sub_23C30D48C()
{
  unint64_t result;

  result = qword_256B5B610;
  if (!qword_256B5B610)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A464, &type metadata for TrainerTipGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B610);
  }
  return result;
}

unint64_t sub_23C30D4D4()
{
  unint64_t result;

  result = qword_256B5B618;
  if (!qword_256B5B618)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A48C, &type metadata for TrainerTipGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B618);
  }
  return result;
}

uint64_t sub_23C30D518(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6F4C6C6961746564 && a2 == 0xEF65746174536461;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F4C7473696CLL && a2 == 0xED00006574617453 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

__n128 TrainerTipGalleryFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void TrainerTipGalleryFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t State;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t (*v26)(_QWORD);
  char *v27;
  _QWORD v28[15];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v36 = a3;
  v34 = a2;
  State = type metadata accessor for TrainerTipGalleryListLoadState();
  MEMORY[0x24BDAC7A8](State);
  v28[10] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v28[13] = (char *)v28 - v9;
  v10 = type metadata accessor for TrainerTipGalleryDetailLoadState();
  MEMORY[0x24BDAC7A8](v10);
  v28[9] = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v28[12] = (char *)v28 - v13;
  v32 = type metadata accessor for TrainerTipGalleryList();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B58B28);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v28[11] = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v28[14] = (char *)v28 - v16;
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  v29 = type metadata accessor for TrainerTipGalleryDetail();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v21 = type metadata accessor for TrainerTipGalleryAction();
  MEMORY[0x24BDAC7A8](v21);
  v23 = v4[2];
  v24 = v4[4];
  v40 = v4[3];
  v41 = v24;
  v25 = *v4;
  v38 = v4[1];
  v39 = v23;
  v37 = v25;
  sub_23C282F90(a4, (uint64_t)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
  v27 = (char *)sub_23C30D9E8 + 4 * word_23C35A5B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C30D9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  sub_23C2851C0(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  v4 = *(_QWORD *)(v3 - 368);
  sub_23C283550(v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetailLoadState);
  sub_23C282F90(v1, v4, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 400) + 56))(v4, 0, 3, *(_QWORD *)(v3 - 408));
  v6 = *(_OWORD *)(v3 - 240);
  v5 = *(_OWORD *)(v3 - 224);
  v7 = (_OWORD *)(v3 - 256);
  v8 = *(_OWORD *)(v3 - 208);
  v9 = *(_OWORD *)(v3 - 192);
  v7[7] = v5;
  v7[8] = v8;
  v7[9] = v9;
  v10 = *(_OWORD *)(v3 - 256);
  v7[5] = v10;
  v7[6] = v6;
  *(_OWORD *)(v3 - 304) = v5;
  *(_OWORD *)(v3 - 288) = v8;
  *(_OWORD *)(v3 - 272) = v9;
  *(_OWORD *)(v3 - 320) = v6;
  *(_OWORD *)(v3 - 336) = v10;
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B58AC8);
  v12 = v2 + v11[16];
  v13 = v2 + v11[20];
  v14 = (_QWORD *)(v2 + v11[24]);
  *(_BYTE *)(v3 - 337) = 4;
  sub_23C30F85C(v3 - 256);
  sub_23C30E7E4();
  sub_23C34EA78();
  v15 = *MEMORY[0x24BE2B580];
  v16 = sub_23C34E790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v12, v15, v16);
  v17 = *MEMORY[0x24BE2B550];
  v18 = sub_23C34E784();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v13, v17, v18);
  v19 = (_OWORD *)swift_allocObject();
  v20 = *(_OWORD *)(v3 - 288);
  v19[3] = *(_OWORD *)(v3 - 304);
  v19[4] = v20;
  v19[5] = *(_OWORD *)(v3 - 272);
  v21 = *(_OWORD *)(v3 - 320);
  v19[1] = *(_OWORD *)(v3 - 336);
  v19[2] = v21;
  *v14 = &unk_256B5B678;
  v14[1] = v19;
  sub_23C30F85C(v3 - 176);
  sub_23C34E970();
  v22 = *(_QWORD *)(v3 - 376);
  v23 = *(_QWORD *)(v3 - 360);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v2, *MEMORY[0x24BE2B438], v23);
  sub_23C30F8C4(v3 - 256);
  v24 = *(unint64_t **)(v3 - 352);
  v25 = *v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_23C2A2520(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
  v27 = *(_QWORD *)(v25 + 16);
  v26 = *(_QWORD *)(v25 + 24);
  if (v27 >= v26 >> 1)
    v25 = sub_23C2A2520(v26 > 1, v27 + 1, 1, v25);
  *(_QWORD *)(v25 + 16) = v27 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(v25+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v27, v2, v23);
  *v24 = v25;
  return sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
}

unint64_t sub_23C30E7E4()
{
  unint64_t result;

  result = qword_256B5B620;
  if (!qword_256B5B620)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A680, &type metadata for TrainerTipGalleryFeature.TaskIdentifier);
    atomic_store(result, &qword_256B5B620);
  }
  return result;
}

uint64_t sub_23C30E828(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = sub_23C34E964();
  v2[3] = sub_23C34E958();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23C2FB910;
  return v6();
}

uint64_t sub_23C30E8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C2D2F88;
  return sub_23C30E828(a1, v1 + 16);
}

uint64_t sub_23C30E8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = type metadata accessor for TrainerTipGalleryAction();
  *(_QWORD *)(v2 + 112) = swift_task_alloc();
  type metadata accessor for TrainerTipGalleryList();
  *(_QWORD *)(v2 + 120) = swift_task_alloc();
  *(_QWORD *)(v2 + 128) = sub_23C34E964();
  *(_QWORD *)(v2 + 136) = sub_23C34E958();
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(a2 + 16);
  v6 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v4;
  *v4 = v2;
  v4[1] = sub_23C30E9C8;
  return v6(v2 + 56);
}

uint64_t sub_23C30E9C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 176) = sub_23C34E940();
  *(_QWORD *)(v2 + 184) = v3;
  return swift_task_switch();
}

uint64_t sub_23C30EA54()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_23C34E9AC();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v0[24] = sub_23C34E958();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[25] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23C30EBB4;
  return sub_23C34E94C();
}

uint64_t sub_23C30EBB4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C30EC08()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t (*v3)(_QWORD);

  if (*(_BYTE *)(v0 + 232) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 144) + *(_QWORD *)(v0 + 144));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v2;
    *v2 = v0;
    v2[1] = sub_23C30ECC0;
    return v3(*(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_23C30ECC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C30ED20()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C282F90(v0[15], v0[14], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[28] = (uint64_t)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A0);
  *v1 = v0;
  v1[1] = sub_23C30EDAC;
  return sub_23C34E76C();
}

uint64_t sub_23C30EDAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
  return swift_task_switch();
}

uint64_t sub_23C30EE0C()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C283550(v0[15], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
  v0[24] = sub_23C34E958();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[25] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C30EBB4;
  return sub_23C34E94C();
}

uint64_t sub_23C30EEC0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C30EF04()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C30EF54(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2[2] = a1;
  v2[3] = type metadata accessor for TrainerTipGalleryAction();
  v2[4] = swift_task_alloc();
  type metadata accessor for TrainerTipGalleryDetail();
  v4 = swift_task_alloc();
  v2[5] = v4;
  v2[6] = sub_23C34E964();
  v2[7] = sub_23C34E958();
  v7 = (uint64_t (*)(uint64_t))(*(int *)*a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc();
  v2[8] = v5;
  *v5 = v2;
  v5[1] = sub_23C30F020;
  return v7(v4);
}

uint64_t sub_23C30F020()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 80) = sub_23C34E940();
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_23C30F0AC()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C282F90(v0[5], v0[4], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A0);
  *v1 = v0;
  v1[1] = sub_23C30F138;
  return sub_23C34E76C();
}

uint64_t sub_23C30F138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
  return swift_task_switch();
}

uint64_t sub_23C30F198()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryDetail);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C30F1F0()
{
  uint64_t v0;
  _QWORD *v1;

  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A0);
  *v1 = v0;
  v1[1] = sub_23C30F260;
  return sub_23C34E76C();
}

uint64_t sub_23C30F260()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
  return swift_task_switch();
}

uint64_t sub_23C30F2C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  MEMORY[0x24261C588](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C30F310(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2[2] = a1;
  v2[3] = type metadata accessor for TrainerTipGalleryAction();
  v2[4] = swift_task_alloc();
  type metadata accessor for TrainerTipGalleryList();
  v4 = swift_task_alloc();
  v2[5] = v4;
  v2[6] = sub_23C34E964();
  v2[7] = sub_23C34E958();
  v7 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v2[8] = v5;
  *v5 = v2;
  v5[1] = sub_23C30F3DC;
  return v7(v4);
}

uint64_t sub_23C30F3DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 80) = sub_23C34E940();
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_23C30F468()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C282F90(v0[5], v0[4], (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A0);
  *v1 = v0;
  v1[1] = sub_23C30F4F4;
  return sub_23C34E76C();
}

uint64_t sub_23C30F4F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
  return swift_task_switch();
}

uint64_t sub_23C30F554()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryList);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C30F5AC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A0);
  *v1 = v0;
  v1[1] = sub_23C30F61C;
  return sub_23C34E76C();
}

uint64_t sub_23C30F61C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C283550(v1, (uint64_t (*)(_QWORD))type metadata accessor for TrainerTipGalleryAction);
  return swift_task_switch();
}

uint64_t sub_23C30F684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_23C2A1EC8;
  return v5();
}

uint64_t sub_23C30F6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C2A1EC8;
  return sub_23C30E8F4(a1, v1 + 16);
}

uint64_t sub_23C30F734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C2D2F88;
  return sub_23C30F310(a1, v1 + 16);
}

uint64_t sub_23C30F78C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C2D2F88;
  return sub_23C30EF54(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_23C30F7E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23C2D2F88;
  v5 = (uint64_t (*)(void))(**(int **)(v0 + 64) + *(_QWORD *)(v0 + 64));
  v3 = (_QWORD *)swift_task_alloc();
  v2[2] = v3;
  *v3 = v2;
  v3[1] = sub_23C2A1EC8;
  return v5();
}

uint64_t sub_23C30F85C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C30F8C4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C30F974()
{
  return sub_23C27FEE4(&qword_256B5B680, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryAction, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryAction);
}

uint64_t sub_23C30F9A0()
{
  return sub_23C27FEE4(&qword_256B5B688, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryAction, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryAction);
}

uint64_t sub_23C30F9CC()
{
  return sub_23C27FEE4(&qword_256B5B690, (uint64_t (*)(uint64_t))type metadata accessor for TrainerTipGalleryState, (uint64_t)&protocol conformance descriptor for TrainerTipGalleryState);
}

ValueMetadata *type metadata accessor for TrainerTipGalleryFeature()
{
  return &type metadata for TrainerTipGalleryFeature;
}

uint64_t storeEnumTagSinglePayload for TrainerTipGalleryFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C30FA54 + 4 * byte_23C35A5BF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C30FA88 + 4 * byte_23C35A5BA[v4]))();
}

uint64_t sub_23C30FA88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30FA90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C30FA98);
  return result;
}

uint64_t sub_23C30FAA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C30FAACLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C30FAB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C30FAB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrainerTipGalleryFeature.TaskIdentifier()
{
  return &type metadata for TrainerTipGalleryFeature.TaskIdentifier;
}

unint64_t sub_23C30FAD8()
{
  unint64_t result;

  result = qword_256B5B698;
  if (!qword_256B5B698)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A658, &type metadata for TrainerTipGalleryFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B5B698);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t WorkoutDetailContentMediaType.hash(into:)()
{
  return sub_23C34EC88();
}

uint64_t sub_23C30FBA8(char a1)
{
  return *(_QWORD *)&aGuidedwaguided[8 * a1];
}

uint64_t sub_23C30FBC8()
{
  char *v0;

  return sub_23C30FBA8(*v0);
}

uint64_t sub_23C30FBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C31026C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C30FBF4()
{
  sub_23C3100B4();
  return sub_23C34ECD0();
}

uint64_t sub_23C30FC1C()
{
  sub_23C3100B4();
  return sub_23C34ECDC();
}

uint64_t sub_23C30FC44()
{
  sub_23C310180();
  return sub_23C34ECD0();
}

uint64_t sub_23C30FC6C()
{
  sub_23C310180();
  return sub_23C34ECDC();
}

uint64_t sub_23C30FC94()
{
  sub_23C3101C4();
  return sub_23C34ECD0();
}

uint64_t sub_23C30FCBC()
{
  sub_23C3101C4();
  return sub_23C34ECDC();
}

uint64_t sub_23C30FCE4()
{
  sub_23C31013C();
  return sub_23C34ECD0();
}

uint64_t sub_23C30FD0C()
{
  sub_23C31013C();
  return sub_23C34ECDC();
}

uint64_t sub_23C30FD34()
{
  sub_23C3100F8();
  return sub_23C34ECD0();
}

uint64_t sub_23C30FD5C()
{
  sub_23C3100F8();
  return sub_23C34ECDC();
}

uint64_t WorkoutDetailContentMediaType.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

void WorkoutDetailContentMediaType.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6A8);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6B0);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6B8);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6C0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B6C8);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3100B4();
  sub_23C34ECC4();
  __asm { BR              X10 }
}

uint64_t sub_23C30FF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23C3101C4();
  sub_23C34EBD4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

unint64_t sub_23C3100B4()
{
  unint64_t result;

  result = qword_256B5B6D0;
  if (!qword_256B5B6D0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35AB60, &type metadata for WorkoutDetailContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B6D0);
  }
  return result;
}

unint64_t sub_23C3100F8()
{
  unint64_t result;

  result = qword_256B5B6D8;
  if (!qword_256B5B6D8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35AB10, &type metadata for WorkoutDetailContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B6D8);
  }
  return result;
}

unint64_t sub_23C31013C()
{
  unint64_t result;

  result = qword_256B5B6E0;
  if (!qword_256B5B6E0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35AAC0, &type metadata for WorkoutDetailContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B6E0);
  }
  return result;
}

unint64_t sub_23C310180()
{
  unint64_t result;

  result = qword_256B5B6E8;
  if (!qword_256B5B6E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35AA70, &type metadata for WorkoutDetailContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B6E8);
  }
  return result;
}

unint64_t sub_23C3101C4()
{
  unint64_t result;

  result = qword_256B5B6F0;
  if (!qword_256B5B6F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35AA20, &type metadata for WorkoutDetailContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B6F0);
  }
  return result;
}

uint64_t WorkoutDetailContentMediaType.init(from:)(_QWORD *a1)
{
  return sub_23C310418(a1);
}

uint64_t sub_23C31021C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C310418(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23C310244(_QWORD *a1)
{
  unsigned __int8 *v1;

  WorkoutDetailContentMediaType.encode(to:)(a1, *v1);
}

BOOL static WorkoutDetailContentMediaType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C31026C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6157646564697567 && a2 == 0xEA00000000006B6CLL;
  if (v3 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7552646564697567 && a2 == 0xE90000000000006ELL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C310418(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B758);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B760);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B768);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B770);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B778);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23C3100B4();
  v17 = v25;
  sub_23C34ECB8();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_23C34EBBC();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_23C34EAC0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v21 = &type metadata for WorkoutDetailContentMediaType;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_23C31073C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23C310180();
  sub_23C34EB38();
  if (!v0)
    JUMPOUT(0x23C310810);
  JUMPOUT(0x23C3106F0);
}

void sub_23C310780()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23C31013C();
  sub_23C34EB38();
  if (!v0)
    JUMPOUT(0x23C3107C0);
  JUMPOUT(0x23C3106F0);
}

void sub_23C3107CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23C3100F8();
  sub_23C34EB38();
  if (!v0)
    JUMPOUT(0x23C310810);
  JUMPOUT(0x23C3106F0);
}

unint64_t sub_23C310840()
{
  unint64_t result;

  result = qword_256B5B6F8;
  if (!qword_256B5B6F8)
  {
    result = MEMORY[0x24261C66C](&protocol conformance descriptor for WorkoutDetailContentMediaType, &type metadata for WorkoutDetailContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B5B6F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType()
{
  return &type metadata for WorkoutDetailContentMediaType;
}

uint64_t _s20FitnessProductDetail29WorkoutDetailContentMediaTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3108E8 + 4 * byte_23C35A6CD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C31091C + 4 * byte_23C35A6C8[v4]))();
}

uint64_t sub_23C31091C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C310924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C31092CLL);
  return result;
}

uint64_t sub_23C310938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C310940);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C310944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C31094C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType.CodingKeys()
{
  return &type metadata for WorkoutDetailContentMediaType.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType.GuidedWalkCodingKeys()
{
  return &type metadata for WorkoutDetailContentMediaType.GuidedWalkCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType.GuidedRunCodingKeys()
{
  return &type metadata for WorkoutDetailContentMediaType.GuidedRunCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType.MeditationCodingKeys()
{
  return &type metadata for WorkoutDetailContentMediaType.MeditationCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutDetailContentMediaType.VideoCodingKeys()
{
  return &type metadata for WorkoutDetailContentMediaType.VideoCodingKeys;
}

unint64_t sub_23C3109AC()
{
  unint64_t result;

  result = qword_256B5B700;
  if (!qword_256B5B700)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A9F8, &type metadata for WorkoutDetailContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B700);
  }
  return result;
}

unint64_t sub_23C3109F4()
{
  unint64_t result;

  result = qword_256B5B708;
  if (!qword_256B5B708)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A918, &type metadata for WorkoutDetailContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B708);
  }
  return result;
}

unint64_t sub_23C310A3C()
{
  unint64_t result;

  result = qword_256B5B710;
  if (!qword_256B5B710)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A940, &type metadata for WorkoutDetailContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B710);
  }
  return result;
}

unint64_t sub_23C310A84()
{
  unint64_t result;

  result = qword_256B5B718;
  if (!qword_256B5B718)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A8C8, &type metadata for WorkoutDetailContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B718);
  }
  return result;
}

unint64_t sub_23C310ACC()
{
  unint64_t result;

  result = qword_256B5B720;
  if (!qword_256B5B720)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A8F0, &type metadata for WorkoutDetailContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B720);
  }
  return result;
}

unint64_t sub_23C310B14()
{
  unint64_t result;

  result = qword_256B5B728;
  if (!qword_256B5B728)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A878, &type metadata for WorkoutDetailContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B728);
  }
  return result;
}

unint64_t sub_23C310B5C()
{
  unint64_t result;

  result = qword_256B5B730;
  if (!qword_256B5B730)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A8A0, &type metadata for WorkoutDetailContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B730);
  }
  return result;
}

unint64_t sub_23C310BA4()
{
  unint64_t result;

  result = qword_256B5B738;
  if (!qword_256B5B738)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A828, &type metadata for WorkoutDetailContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B738);
  }
  return result;
}

unint64_t sub_23C310BEC()
{
  unint64_t result;

  result = qword_256B5B740;
  if (!qword_256B5B740)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A850, &type metadata for WorkoutDetailContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B740);
  }
  return result;
}

unint64_t sub_23C310C34()
{
  unint64_t result;

  result = qword_256B5B748;
  if (!qword_256B5B748)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A968, &type metadata for WorkoutDetailContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B748);
  }
  return result;
}

unint64_t sub_23C310C7C()
{
  unint64_t result;

  result = qword_256B5B750;
  if (!qword_256B5B750)
  {
    result = MEMORY[0x24261C66C](&unk_23C35A990, &type metadata for WorkoutDetailContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B750);
  }
  return result;
}

BOOL static ProgramDetailDynamicTypeSize.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C310CD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C310D08 + 4 * byte_23C35AC00[a1]))(0xD000000000000014, 0x800000023C361CA0);
}

uint64_t sub_23C310D08()
{
  return 0x616D536172747865;
}

uint64_t sub_23C310D28()
{
  return 0x6C6C616D73;
}

uint64_t sub_23C310D3C()
{
  return 0x6D756964656DLL;
}

uint64_t sub_23C310D50()
{
  return 0x656772616CLL;
}

uint64_t sub_23C310D64()
{
  return 0x72614C6172747865;
}

uint64_t sub_23C310D80()
{
  return 0x7478456172747865;
}

uint64_t sub_23C310DA4()
{
  return 0x6269737365636361;
}

uint64_t sub_23C310E08()
{
  sub_23C311B4C();
  return sub_23C34ECD0();
}

uint64_t sub_23C310E30()
{
  sub_23C311B4C();
  return sub_23C34ECDC();
}

uint64_t sub_23C310E58()
{
  sub_23C311B08();
  return sub_23C34ECD0();
}

uint64_t sub_23C310E80()
{
  sub_23C311B08();
  return sub_23C34ECDC();
}

uint64_t sub_23C310EA8()
{
  sub_23C311AC4();
  return sub_23C34ECD0();
}

uint64_t sub_23C310ED0()
{
  sub_23C311AC4();
  return sub_23C34ECDC();
}

uint64_t sub_23C310EF8()
{
  sub_23C311A80();
  return sub_23C34ECD0();
}

uint64_t sub_23C310F20()
{
  sub_23C311A80();
  return sub_23C34ECDC();
}

uint64_t sub_23C310F48()
{
  sub_23C311A3C();
  return sub_23C34ECD0();
}

uint64_t sub_23C310F70()
{
  sub_23C311A3C();
  return sub_23C34ECDC();
}

uint64_t sub_23C310F98()
{
  unsigned __int8 *v0;

  return sub_23C310CD0(*v0);
}

uint64_t sub_23C310FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C311E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C310FC4()
{
  sub_23C3119F8();
  return sub_23C34ECD0();
}

uint64_t sub_23C310FEC()
{
  sub_23C3119F8();
  return sub_23C34ECDC();
}

uint64_t sub_23C311014()
{
  sub_23C311B90();
  return sub_23C34ECD0();
}

uint64_t sub_23C31103C()
{
  sub_23C311B90();
  return sub_23C34ECDC();
}

uint64_t sub_23C311064()
{
  sub_23C311BD4();
  return sub_23C34ECD0();
}

uint64_t sub_23C31108C()
{
  sub_23C311BD4();
  return sub_23C34ECDC();
}

uint64_t sub_23C3110B4()
{
  sub_23C311C18();
  return sub_23C34ECD0();
}

uint64_t sub_23C3110DC()
{
  sub_23C311C18();
  return sub_23C34ECDC();
}

uint64_t sub_23C311104()
{
  sub_23C311D28();
  return sub_23C34ECD0();
}

uint64_t sub_23C31112C()
{
  sub_23C311D28();
  return sub_23C34ECDC();
}

uint64_t sub_23C311154()
{
  sub_23C311C5C();
  return sub_23C34ECD0();
}

uint64_t sub_23C31117C()
{
  sub_23C311C5C();
  return sub_23C34ECDC();
}

uint64_t sub_23C3111A4()
{
  sub_23C311CA0();
  return sub_23C34ECD0();
}

uint64_t sub_23C3111CC()
{
  sub_23C311CA0();
  return sub_23C34ECDC();
}

uint64_t sub_23C3111F4()
{
  sub_23C311CE4();
  return sub_23C34ECD0();
}

uint64_t sub_23C31121C()
{
  sub_23C311CE4();
  return sub_23C34ECDC();
}

void ProgramDetailDynamicTypeSize.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[3];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v50 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B780);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B788);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B790);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B798);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7A0);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7A8);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v32 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7B0);
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v29 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7B8);
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v26 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7C0);
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7C8);
  v21[2] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v21[1] = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7D0);
  MEMORY[0x24BDAC7A8](v21[0]);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7D8);
  MEMORY[0x24BDAC7A8](v18);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B7E0);
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v20 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3119F8();
  v52 = v20;
  sub_23C34ECC4();
  __asm { BR              X10 }
}

uint64_t sub_23C311654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 92) = 0;
  sub_23C311D28();
  v4 = *(_QWORD *)(v3 - 112);
  v5 = *(_QWORD *)(v3 - 104);
  sub_23C34EBD4();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v4, v5);
}

unint64_t sub_23C3119F8()
{
  unint64_t result;

  result = qword_256B5B7E8;
  if (!qword_256B5B7E8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B704, &type metadata for ProgramDetailDynamicTypeSize.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B7E8);
  }
  return result;
}

unint64_t sub_23C311A3C()
{
  unint64_t result;

  result = qword_256B5B7F0;
  if (!qword_256B5B7F0)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B6B4, &type metadata for ProgramDetailDynamicTypeSize.Accessibility5CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B7F0);
  }
  return result;
}

unint64_t sub_23C311A80()
{
  unint64_t result;

  result = qword_256B5B7F8;
  if (!qword_256B5B7F8)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B664, &type metadata for ProgramDetailDynamicTypeSize.Accessibility4CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B7F8);
  }
  return result;
}

unint64_t sub_23C311AC4()
{
  unint64_t result;

  result = qword_256B5B800;
  if (!qword_256B5B800)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B614, &type metadata for ProgramDetailDynamicTypeSize.Accessibility3CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B800);
  }
  return result;
}

unint64_t sub_23C311B08()
{
  unint64_t result;

  result = qword_256B5B808;
  if (!qword_256B5B808)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B5C4, &type metadata for ProgramDetailDynamicTypeSize.Accessibility2CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B808);
  }
  return result;
}

unint64_t sub_23C311B4C()
{
  unint64_t result;

  result = qword_256B5B810;
  if (!qword_256B5B810)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B574, &type metadata for ProgramDetailDynamicTypeSize.Accessibility1CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B810);
  }
  return result;
}

unint64_t sub_23C311B90()
{
  unint64_t result;

  result = qword_256B5B818;
  if (!qword_256B5B818)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B524, &type metadata for ProgramDetailDynamicTypeSize.ExtraExtraExtraLargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B818);
  }
  return result;
}

unint64_t sub_23C311BD4()
{
  unint64_t result;

  result = qword_256B5B820;
  if (!qword_256B5B820)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B4D4, &type metadata for ProgramDetailDynamicTypeSize.ExtraExtraLargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B820);
  }
  return result;
}

unint64_t sub_23C311C18()
{
  unint64_t result;

  result = qword_256B5B828;
  if (!qword_256B5B828)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B484, &type metadata for ProgramDetailDynamicTypeSize.ExtraLargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B828);
  }
  return result;
}

unint64_t sub_23C311C5C()
{
  unint64_t result;

  result = qword_256B5B830;
  if (!qword_256B5B830)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B434, &type metadata for ProgramDetailDynamicTypeSize.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B830);
  }
  return result;
}

unint64_t sub_23C311CA0()
{
  unint64_t result;

  result = qword_256B5B838;
  if (!qword_256B5B838)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B3E4, &type metadata for ProgramDetailDynamicTypeSize.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B838);
  }
  return result;
}

unint64_t sub_23C311CE4()
{
  unint64_t result;

  result = qword_256B5B840;
  if (!qword_256B5B840)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B394, &type metadata for ProgramDetailDynamicTypeSize.SmallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B840);
  }
  return result;
}

unint64_t sub_23C311D28()
{
  unint64_t result;

  result = qword_256B5B848;
  if (!qword_256B5B848)
  {
    result = MEMORY[0x24261C66C](&unk_23C35B344, &type metadata for ProgramDetailDynamicTypeSize.ExtraSmallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B5B848);
  }
  return result;
}

uint64_t ProgramDetailDynamicTypeSize.init(from:)(_QWORD *a1)
{
  return sub_23C312300(a1);
}

uint64_t sub_23C311D80@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C312300(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23C311DA8(_QWORD *a1)
{
  unsigned __int8 *v1;

  ProgramDetailDynamicTypeSize.encode(to:)(a1, *v1);
}

BOOL static ProgramDetailDynamicTypeSize.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t ProgramDetailDynamicTypeSize.hash(into:)()
{
  return sub_23C34EC88();
}

uint64_t ProgramDetailDynamicTypeSize.hashValue.getter()
{
  sub_23C34EC7C();
  sub_23C34EC88();
  return sub_23C34ECAC();
}

uint64_t sub_23C311E38(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x616D536172747865 && a2 == 0xEA00000000006C6CLL || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C616D73 && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72614C6172747865 && a2 == 0xEA00000000006567 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7478456172747865 && a2 == 0xEF656772614C6172 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023C361CA0 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00317974696C69 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00327974696C69 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00337974696C69 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00347974696C69 || (sub_23C34EC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xEE00357974696C69)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v5 = sub_23C34EC64();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_23C312300(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD v34[4];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B930);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B938);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B940);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B948);
  v34[3] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v60 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B950);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v66 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B958);
  v44 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v58 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B960);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v65 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B968);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v59 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B970);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v64 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B978);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v57 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B980);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v56 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B988);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B5B990);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_23C3119F8();
  v25 = v68;
  sub_23C34ECB8();
  if (!v25)
  {
    v34[2] = v19;
    v34[0] = v17;
    v34[1] = v16;
    v68 = 0;
    v26 = v21;
    v27 = v23;
    v28 = sub_23C34EBBC();
    v29 = v20;
    if (*(_QWORD *)(v28 + 16) == 1)
      __asm { BR              X9 }
    v30 = sub_23C34EAC0();
    swift_allocError();
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B576B0);
    *v32 = &type metadata for ProgramDetailDynamicTypeSize;
    sub_23C34EB44();
    sub_23C34EAB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
}

