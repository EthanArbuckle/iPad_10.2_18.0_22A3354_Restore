void sub_2381C8A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCKOperationConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  CloudKitLibrary();
  result = objc_getClass("CKOperationConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getCKOperationConfigurationClass_block_invoke_cold_1();
  getCKOperationConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CloudKitLibrary()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v1 = 0;
  if (!CloudKitLibraryCore_frameworkLibrary)
  {
    v2 = xmmword_2509F69F0;
    v3 = 0;
    CloudKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CloudKitLibraryCore_frameworkLibrary)
    CloudKitLibrary_cold_1(&v1);
  return CloudKitLibraryCore_frameworkLibrary;
}

Class __getCKContainerClass_block_invoke(uint64_t a1)
{
  Class result;

  CloudKitLibrary();
  result = objc_getClass("CKContainer");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getCKContainerClass_block_invoke_cold_1();
  getCKContainerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKRecordZoneIDClass_block_invoke(uint64_t a1)
{
  Class result;

  CloudKitLibrary();
  result = objc_getClass("CKRecordZoneID");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getCKRecordZoneIDClass_block_invoke_cold_1();
  getCKRecordZoneIDClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKRecordIDClass_block_invoke(uint64_t a1)
{
  Class result;

  CloudKitLibrary();
  result = objc_getClass("CKRecordID");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getCKRecordIDClass_block_invoke_cold_1();
  getCKRecordIDClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKFetchRecordsOperationClass_block_invoke(uint64_t a1)
{
  Class result;

  CloudKitLibrary();
  result = objc_getClass("CKFetchRecordsOperation");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getCKFetchRecordsOperationClass_block_invoke_cold_1();
  getCKFetchRecordsOperationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B82FD50]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2381C8DB0()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EFF88);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EFF88);
  return sub_238238438();
}

_QWORD *sub_2381C8E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v6[14] = a1;
  v6[15] = a2;
  v6[16] = a3;
  return v6;
}

uint64_t sub_2381C8E70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[29] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  v1[30] = swift_task_alloc();
  v1[31] = type metadata accessor for CachedSession();
  v1[32] = swift_task_alloc();
  v2 = sub_23823830C();
  v1[33] = v2;
  v1[34] = *(_QWORD *)(v2 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381C8F28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v14;

  if (qword_2568E9D00 != -1)
    swift_once();
  v1 = sub_238238444();
  *(_QWORD *)(v0 + 296) = __swift_project_value_buffer(v1, (uint64_t)qword_2568EFF88);
  v2 = sub_23823842C();
  v3 = sub_238238870();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2381C6000, v2, v3, "starting submission activity", v4, 2u);
    MEMORY[0x23B82FE28](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 232);

  v6 = *(_QWORD *)(v5 + 112);
  *(_QWORD *)(v0 + 304) = v6;
  if (!v6
    || (v7 = *(_QWORD *)(v0 + 232), v8 = *(_QWORD *)(v7 + 120), (*(_QWORD *)(v0 + 312) = v8) == 0)
    || (v9 = *(_QWORD *)(v7 + 128), (*(_QWORD *)(v0 + 320) = v9) == 0))
  {
    v10 = sub_23823842C();
    v11 = sub_238238894();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_2381C6000, v10, v11, "submission activity skipped due to bad initialization", v12, 2u);
      MEMORY[0x23B82FE28](v12, -1, -1);
    }

    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  if ((sub_238238810() & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_release();
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_2382382DC();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v14;
  *v14 = v0;
  v14[1] = sub_2381C914C;
  return sub_2381DBAE0(50);
}

uint64_t sub_2381C914C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2381C91B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD **)(v0 + 336);
  v2 = v1[2];
  *(_QWORD *)(v0 + 352) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 360) = *(_QWORD *)(**(_QWORD **)(v0 + 312) + 248);
    *(_QWORD *)(v0 + 368) = 0;
    if (v1[2])
    {
      v3 = v1[4];
      *(_QWORD *)(v0 + 376) = v3;
      v4 = v1[5];
      *(_QWORD *)(v0 + 384) = v4;
      swift_bridgeObjectRetain_n();
      v5 = sub_23823842C();
      v6 = sub_238238894();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        v9 = v8;
        *(_DWORD *)v7 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 224) = sub_2381CBC6C(v3, v4, &v9);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v5, v6, "sending events for client type: %{public}s", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v8, -1, -1);
        MEMORY[0x23B82FE28](v7, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_task_switch();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2381C93F4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 360))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384));
  return swift_task_switch();
}

uint64_t sub_2381C943C()
{
  uint64_t *v0;
  _QWORD *v1;

  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[49] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2381C94A0;
  return sub_2381DBD2C(v0[47], v0[48], 50);
}

uint64_t sub_2381C94A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    *(_QWORD *)(v4 + 544) = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 400) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_2381C9530()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  result = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(result + 16);
  *(_QWORD *)(v0 + 408) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 416) = 0;
    if (*(_QWORD *)(result + 16))
    {
      v3 = *(_OWORD *)(result + 32);
      v4 = *(_OWORD *)(result + 48);
      v5 = *(_OWORD *)(result + 64);
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(result + 80);
      *(_OWORD *)(v0 + 32) = v4;
      *(_OWORD *)(v0 + 48) = v5;
      *(_OWORD *)(v0 + 16) = v3;
      sub_2381CC98C(v0 + 16);
      v6 = *(_QWORD *)sub_2381ED608();
      v7 = *(_QWORD *)sub_2381ED5FC();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 424) = v8;
      *v8 = v0;
      v8[1] = sub_2381C9634;
      return sub_2381DB6E0(v0 + 16, v6, v7);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 312);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v0 + 552) = sub_2381CCC54() & 1;
    *(_QWORD *)(v0 + 536) = *(_QWORD *)(*(_QWORD *)v9 + 256);
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_2381C9634(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 432) = a1;
  *(_QWORD *)(v3 + 440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_2381CC9D4(v3 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2381C96DC()
{
  uint64_t v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(_QWORD, _QWORD, _UNKNOWN **);

  v1 = *(double **)(v0 + 432);
  if (*((_QWORD *)v1 + 2))
  {
    v2 = *(_QWORD *)(v0 + 320);
    v3 = *(_QWORD *)(v0 + 280);
    v4 = *(_QWORD *)(v0 + 256);
    v5 = v1[4];
    v7 = *((_QWORD *)v1 + 6);
    v6 = *((_QWORD *)v1 + 7);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 16))(v3, *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
    sub_2381CC98C(v0 + 16);
    swift_bridgeObjectRetain();
    sub_2381F185C(v0 + 16, v7, v6, v3, v4, v5);
    v20 = (uint64_t (*)(_QWORD, _QWORD, _UNKNOWN **))(**(int **)(*(_QWORD *)v2 + 120)
                                                              + *(_QWORD *)(*(_QWORD *)v2 + 120));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v8;
    *v8 = v0;
    v8[1] = sub_2381C98D0;
    return v20(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 248), &off_2509F8700);
  }
  else
  {
    sub_2381CC9D4(v0 + 16);
    result = swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v0 + 416) + 1;
    if (v10 == *(_QWORD *)(v0 + 408))
    {
      swift_bridgeObjectRelease();
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 528) = v11;
      *v11 = v0;
      v11[1] = sub_2381CA290;
      return sub_2381DBD2C(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384), 50);
    }
    else
    {
      *(_QWORD *)(v0 + 416) = v10;
      v12 = *(_QWORD *)(v0 + 400);
      if (v10 >= *(_QWORD *)(v12 + 16))
      {
        __break(1u);
      }
      else
      {
        v13 = v12 + 56 * v10;
        v14 = *(_OWORD *)(v13 + 32);
        v15 = *(_OWORD *)(v13 + 48);
        v16 = *(_OWORD *)(v13 + 64);
        *(_QWORD *)(v0 + 64) = *(_QWORD *)(v13 + 80);
        *(_OWORD *)(v0 + 32) = v15;
        *(_OWORD *)(v0 + 48) = v16;
        *(_OWORD *)(v0 + 16) = v14;
        sub_2381CC98C(v0 + 16);
        v17 = *(_QWORD *)sub_2381ED608();
        v18 = *(_QWORD *)sub_2381ED5FC();
        v19 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 424) = v19;
        *v19 = v0;
        v19[1] = sub_2381C9634;
        return sub_2381DB6E0(v0 + 16, v17, v18);
      }
    }
  }
  return result;
}

uint64_t sub_2381C98D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[57] = a1;
  v4[58] = a2;
  v4[59] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381C9940()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  _QWORD *v33;
  int64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  __int128 v59;
  uint64_t v60[2];

  v1 = v0 + 26;
  if (v0[57])
  {
    v2 = v0[58];
    v3 = *(_QWORD *)(v0[54] + 16);
    v4 = MEMORY[0x24BEE4AF8];
    if (v3)
    {
      v53 = v0[58];
      v5 = MEMORY[0x24BEE4AF8];
      *v1 = MEMORY[0x24BEE4AF8];
      sub_2381CC428(0, v3, 0);
      v6 = 0;
      v4 = *v1;
      do
      {
        v7 = v0[54] + v6;
        v8 = *(_QWORD *)(v7 + 40);
        v9 = *(_QWORD *)(v7 + 48);
        v55 = *(_OWORD *)(v7 + 56);
        v0[26] = v4;
        v10 = *(_QWORD *)(v4 + 16);
        v11 = *(_QWORD *)(v4 + 24);
        v12 = v10 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 >= v11 >> 1)
        {
          sub_2381CC428(v11 > 1, v10 + 1, 1);
          v4 = v0[26];
        }
        *(_QWORD *)(v4 + 16) = v12;
        v13 = v4 + 32 * v10;
        *(_QWORD *)(v13 + 32) = v8;
        *(_QWORD *)(v13 + 40) = v9;
        *(_OWORD *)(v13 + 48) = v55;
        v6 += 40;
        --v3;
      }
      while (v3);
    }
    else
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      if (!v12)
      {
        v26 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRelease();
LABEL_17:
        v0[60] = v26;
        ObjectType = swift_getObjectType();
        v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
        v33 = (_QWORD *)swift_task_alloc();
        v0[61] = (uint64_t)v33;
        *v33 = v0;
        v33[1] = sub_2381C9F38;
        return v58(v26, ObjectType, v2);
      }
      v53 = v0[58];
      v5 = MEMORY[0x24BEE4AF8];
    }
    v25 = v0 + 27;
    v0[27] = v5;
    sub_2381CC40C(0, v12, 0);
    v26 = v0[27];
    v27 = (_OWORD *)(v4 + 48);
    do
    {
      v28 = *((_QWORD *)v27 - 1);
      v57 = *v27;
      *v25 = v26;
      v29 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29 >= v30 >> 1)
      {
        sub_2381CC40C(v30 > 1, v29 + 1, 1);
        v26 = *v25;
      }
      *(_QWORD *)(v26 + 16) = v29 + 1;
      v31 = v26 + 24 * v29;
      *(_QWORD *)(v31 + 32) = v28;
      *(_OWORD *)(v31 + 40) = v57;
      v27 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v0 = v54;
    v2 = v53;
    goto LABEL_17;
  }
  sub_2381CCA58();
  v14 = (void *)swift_allocError();
  swift_willThrow();
  sub_2381CCA1C(v0[32], (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = v14;
  v17 = sub_23823842C();
  v18 = sub_23823887C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = v0[48];
  if (v19)
  {
    v21 = v0[47];
    v22 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v60[0] = v56;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_2381CBC6C(v21, v20, v60);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    swift_getErrorValue();
    v23 = sub_238238C9C();
    v0[25] = sub_2381CBC6C(v23, v24, v60);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v17, v18, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v56, -1, -1);
    MEMORY[0x23B82FE28](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v35 = *(_QWORD *)(v0[54] + 16);
  if (v35)
  {
    v36 = v0 + 18;
    v0[18] = MEMORY[0x24BEE4AF8];
    sub_2381CC428(0, v35, 0);
    v37 = 0;
    v38 = v0[18];
    do
    {
      v39 = v0[54] + v37;
      v40 = *(_QWORD *)(v39 + 40);
      v41 = *(_QWORD *)(v39 + 48);
      v59 = *(_OWORD *)(v39 + 56);
      v0[18] = v38;
      v43 = *(_QWORD *)(v38 + 16);
      v42 = *(_QWORD *)(v38 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= v42 >> 1)
      {
        sub_2381CC428(v42 > 1, v43 + 1, 1);
        v38 = *v36;
      }
      *(_QWORD *)(v38 + 16) = v43 + 1;
      v44 = v38 + 32 * v43;
      *(_QWORD *)(v44 + 32) = v40;
      *(_QWORD *)(v44 + 40) = v41;
      *(_OWORD *)(v44 + 48) = v59;
      v37 += 40;
      --v35;
      v0 = v54;
    }
    while (v35);
    swift_bridgeObjectRelease();
    v45 = *(_QWORD *)(v38 + 16);
    if (v45)
      goto LABEL_25;
  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = MEMORY[0x24BEE4AF8];
    v45 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v45)
    {
LABEL_25:
      v46 = v0 + 19;
      v0[19] = MEMORY[0x24BEE4AF8];
      sub_2381CC3F0(0, v45, 0);
      v47 = v0[19];
      v48 = 32;
      do
      {
        v49 = *(_QWORD *)(v38 + v48);
        *v46 = v47;
        v51 = *(_QWORD *)(v47 + 16);
        v50 = *(_QWORD *)(v47 + 24);
        if (v51 >= v50 >> 1)
        {
          sub_2381CC3F0(v50 > 1, v51 + 1, 1);
          v47 = *v46;
        }
        *(_QWORD *)(v47 + 16) = v51 + 1;
        *(_QWORD *)(v47 + 8 * v51 + 32) = v49;
        v48 += 32;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease();
  v47 = MEMORY[0x24BEE4AF8];
LABEL_32:
  v0[63] = v47;
  v52 = (_QWORD *)swift_task_alloc();
  v0[64] = (uint64_t)v52;
  *v52 = v0;
  v52[1] = sub_2381CA190;
  return sub_2381DB9F8(v47);
}

uint64_t sub_2381C9F38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2381C9FA8()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v20;

  v1 = v0[32];
  swift_unknownObjectRelease();
  sub_2381CCA1C(v1, (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
  v2 = *(_QWORD *)(v0[54] + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
    v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v12)
      goto LABEL_13;
    goto LABEL_9;
  }
  v0[18] = MEMORY[0x24BEE4AF8];
  sub_2381CC428(0, v2, 0);
  v4 = 0;
  v5 = v0[18];
  do
  {
    v6 = v0[54] + v4;
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_QWORD *)(v6 + 48);
    v20 = *(_OWORD *)(v6 + 56);
    v0[18] = v5;
    v10 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= v9 >> 1)
    {
      sub_2381CC428(v9 > 1, v10 + 1, 1);
      v5 = v0[18];
    }
    *(_QWORD *)(v5 + 16) = v10 + 1;
    v11 = v5 + 32 * v10;
    *(_QWORD *)(v11 + 32) = v7;
    *(_QWORD *)(v11 + 40) = v8;
    *(_OWORD *)(v11 + 48) = v20;
    v4 += 40;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  v3 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v5 + 16);
  if (v12)
  {
LABEL_9:
    v13 = v0 + 19;
    v0[19] = v3;
    sub_2381CC3F0(0, v12, 0);
    v3 = v0[19];
    v14 = 32;
    do
    {
      v15 = *(_QWORD *)(v5 + v14);
      *v13 = v3;
      v17 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2381CC3F0(v16 > 1, v17 + 1, 1);
        v3 = *v13;
      }
      *(_QWORD *)(v3 + 16) = v17 + 1;
      *(_QWORD *)(v3 + 8 * v17 + 32) = v15;
      v14 += 32;
      --v12;
    }
    while (v12);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v0[63] = v3;
  v18 = (_QWORD *)swift_task_alloc();
  v0[64] = v18;
  *v18 = v0;
  v18[1] = sub_2381CA190;
  return sub_2381DB9F8(v3);
}

uint64_t sub_2381CA190()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    sub_2381CC9D4(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_2381CA21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)sub_2381ED608();
  v2 = *(_QWORD *)sub_2381ED5FC();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v3;
  *v3 = v0;
  v3[1] = sub_2381C9634;
  return sub_2381DB6E0(v0 + 16, v1, v2);
}

uint64_t sub_2381CA290(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    *(_QWORD *)(v4 + 544) = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v4 + 400) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_2381CA320()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 536))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384), *(unsigned __int8 *)(v0 + 552));
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_2381CA380()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 368) + 1;
  if (v1 == *(_QWORD *)(v0 + 352))
  {
    v2 = *(_QWORD *)(v0 + 288);
    v3 = *(_QWORD *)(v0 + 264);
    v4 = *(_QWORD *)(v0 + 272);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    if ((sub_238238810() & 1) != 0)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      sub_2382382DC();
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 328) = v13;
      *v13 = v0;
      v13[1] = sub_2381C914C;
      sub_2381DBAE0(50);
    }
  }
  else
  {
    *(_QWORD *)(v0 + 368) = v1;
    v5 = *(_QWORD *)(v0 + 336);
    if (v1 >= *(_QWORD *)(v5 + 16))
    {
      __break(1u);
    }
    else
    {
      v6 = v5 + 16 * v1;
      v7 = *(_QWORD *)(v6 + 32);
      *(_QWORD *)(v0 + 376) = v7;
      v8 = *(_QWORD *)(v6 + 40);
      *(_QWORD *)(v0 + 384) = v8;
      swift_bridgeObjectRetain_n();
      v9 = sub_23823842C();
      v10 = sub_238238894();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v14 = v12;
        *(_DWORD *)v11 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 224) = sub_2381CBC6C(v7, v8, &v14);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v9, v10, "sending events for client type: %{public}s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v12, -1, -1);
        MEMORY[0x23B82FE28](v11, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_task_switch();
    }
  }
}

uint64_t sub_2381CA620()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(void **)(v0 + 344);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
  v2 = v1;
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_23823887C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_238238C9C();
    *(_QWORD *)(v0 + 192) = sub_2381CBC6C(v8, v9, &v11);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v4, v5, "error running sendOneMessage submission: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v7, -1, -1);
    MEMORY[0x23B82FE28](v6, -1, -1);

  }
  else
  {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381CA818()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
  v4 = v1;
  v5 = v1;
  v6 = sub_23823842C();
  v7 = sub_23823887C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v18 = v3;
    v9 = swift_slowAlloc();
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v10 = sub_238238C9C();
    *(_QWORD *)(v0 + 192) = sub_2381CBC6C(v10, v11, &v19);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v6, v7, "error running sendOneMessage submission: %s", v8, 0xCu);
    swift_arrayDestroy();
    v12 = v9;
    v3 = v18;
    MEMORY[0x23B82FE28](v12, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);

  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 312);
  if (v2)
  {
    v14 = *(_QWORD *)(v0 + 240);
    v15 = sub_2382387E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v13;
    v16[5] = v3;
    v16[6] = v2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2381CBA70(v14, (uint64_t)&unk_2568E7518, (uint64_t)v16);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381CAAC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264));
  v4 = v1;
  v5 = v1;
  v6 = sub_23823842C();
  v7 = sub_23823887C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v18 = v3;
    v9 = swift_slowAlloc();
    v19 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v10 = sub_238238C9C();
    *(_QWORD *)(v0 + 192) = sub_2381CBC6C(v10, v11, &v19);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v6, v7, "error running sendOneMessage submission: %s", v8, 0xCu);
    swift_arrayDestroy();
    v12 = v9;
    v3 = v18;
    MEMORY[0x23B82FE28](v12, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);

  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 312);
  if (v2)
  {
    v14 = *(_QWORD *)(v0 + 240);
    v15 = sub_2382387E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v13;
    v16[5] = v3;
    v16[6] = v2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2381CBA70(v14, (uint64_t)&unk_2568E7518, (uint64_t)v16);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381CAD70()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v30;
  uint64_t v31;

  v1 = (void *)v0[59];
  sub_2381CCA1C(v0[32], (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_23823887C();
  if (os_log_type_enabled(v4, v5))
  {
    v7 = v0[47];
    v6 = v0[48];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v31 = v9;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_2381CBC6C(v7, v6, &v31);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    v10 = sub_238238C9C();
    v0[25] = sub_2381CBC6C(v10, v11, &v31);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v4, v5, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v9, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = *(_QWORD *)(v0[54] + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v22)
      goto LABEL_16;
    goto LABEL_12;
  }
  v0[18] = MEMORY[0x24BEE4AF8];
  sub_2381CC428(0, v12, 0);
  v14 = 0;
  v15 = v0[18];
  do
  {
    v16 = v0[54] + v14;
    v17 = *(_QWORD *)(v16 + 40);
    v18 = *(_QWORD *)(v16 + 48);
    v30 = *(_OWORD *)(v16 + 56);
    v0[18] = v15;
    v20 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_2381CC428(v19 > 1, v20 + 1, 1);
      v15 = v0[18];
    }
    *(_QWORD *)(v15 + 16) = v20 + 1;
    v21 = v15 + 32 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    *(_OWORD *)(v21 + 48) = v30;
    v14 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(v15 + 16);
  if (v22)
  {
LABEL_12:
    v23 = v0 + 19;
    v0[19] = v13;
    sub_2381CC3F0(0, v22, 0);
    v13 = v0[19];
    v24 = 32;
    do
    {
      v25 = *(_QWORD *)(v15 + v24);
      *v23 = v13;
      v27 = *(_QWORD *)(v13 + 16);
      v26 = *(_QWORD *)(v13 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_2381CC3F0(v26 > 1, v27 + 1, 1);
        v13 = *v23;
      }
      *(_QWORD *)(v13 + 16) = v27 + 1;
      *(_QWORD *)(v13 + 8 * v27 + 32) = v25;
      v24 += 32;
      --v22;
    }
    while (v22);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[63] = v13;
  v28 = (_QWORD *)swift_task_alloc();
  v0[64] = v28;
  *v28 = v0;
  v28[1] = sub_2381CA190;
  return sub_2381DB9F8(v13);
}

uint64_t sub_2381CB118()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v30;
  uint64_t v31;

  swift_unknownObjectRelease();
  v1 = (void *)v0[62];
  sub_2381CCA1C(v0[32], (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_23823887C();
  if (os_log_type_enabled(v4, v5))
  {
    v7 = v0[47];
    v6 = v0[48];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v31 = v9;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_2381CBC6C(v7, v6, &v31);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    v10 = sub_238238C9C();
    v0[25] = sub_2381CBC6C(v10, v11, &v31);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v4, v5, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v9, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = *(_QWORD *)(v0[54] + 16);
  v13 = MEMORY[0x24BEE4AF8];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v22)
      goto LABEL_16;
    goto LABEL_12;
  }
  v0[18] = MEMORY[0x24BEE4AF8];
  sub_2381CC428(0, v12, 0);
  v14 = 0;
  v15 = v0[18];
  do
  {
    v16 = v0[54] + v14;
    v17 = *(_QWORD *)(v16 + 40);
    v18 = *(_QWORD *)(v16 + 48);
    v30 = *(_OWORD *)(v16 + 56);
    v0[18] = v15;
    v20 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_2381CC428(v19 > 1, v20 + 1, 1);
      v15 = v0[18];
    }
    *(_QWORD *)(v15 + 16) = v20 + 1;
    v21 = v15 + 32 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    *(_OWORD *)(v21 + 48) = v30;
    v14 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(v15 + 16);
  if (v22)
  {
LABEL_12:
    v23 = v0 + 19;
    v0[19] = v13;
    sub_2381CC3F0(0, v22, 0);
    v13 = v0[19];
    v24 = 32;
    do
    {
      v25 = *(_QWORD *)(v15 + v24);
      *v23 = v13;
      v27 = *(_QWORD *)(v13 + 16);
      v26 = *(_QWORD *)(v13 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_2381CC3F0(v26 > 1, v27 + 1, 1);
        v13 = *v23;
      }
      *(_QWORD *)(v13 + 16) = v27 + 1;
      *(_QWORD *)(v13 + 8 * v27 + 32) = v25;
      v24 += 32;
      --v22;
    }
    while (v22);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[63] = v13;
  v28 = (_QWORD *)swift_task_alloc();
  v0[64] = v28;
  *v28 = v0;
  v28[1] = sub_2381CA190;
  return sub_2381DB9F8(v13);
}

void sub_2381CB4C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 520);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_23823887C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 520);
    v8 = *(_QWORD *)(v0 + 376);
    v7 = *(_QWORD *)(v0 + 384);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_2381CBC6C(v8, v7, &v24);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    swift_getErrorValue();
    v11 = sub_238238C9C();
    *(_QWORD *)(v9 + 14) = sub_2381CBC6C(v11, v12, &v24);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v4, v5, "failed to remove sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v10, -1, -1);
    MEMORY[0x23B82FE28](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 520);

    swift_bridgeObjectRelease_n();
  }
  v14 = *(_QWORD *)(v0 + 416) + 1;
  if (v14 == *(_QWORD *)(v0 + 408))
  {
    swift_bridgeObjectRelease();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v15;
    *v15 = v0;
    v15[1] = sub_2381CA290;
    sub_2381DBD2C(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384), 50);
  }
  else
  {
    *(_QWORD *)(v0 + 416) = v14;
    v16 = *(_QWORD *)(v0 + 400);
    if (v14 >= *(_QWORD *)(v16 + 16))
    {
      __break(1u);
    }
    else
    {
      v17 = v16 + 56 * v14;
      v18 = *(_OWORD *)(v17 + 32);
      v19 = *(_OWORD *)(v17 + 48);
      v20 = *(_OWORD *)(v17 + 64);
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(v17 + 80);
      *(_OWORD *)(v0 + 32) = v19;
      *(_OWORD *)(v0 + 48) = v20;
      *(_OWORD *)(v0 + 16) = v18;
      sub_2381CC98C(v0 + 16);
      v21 = *(_QWORD *)sub_2381ED608();
      v22 = *(_QWORD *)sub_2381ED5FC();
      v23 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 424) = v23;
      *v23 = v0;
      v23[1] = sub_2381C9634;
      sub_2381DB6E0(v0 + 16, v21, v22);
    }
  }
}

uint64_t sub_2381CB79C()
{
  return 1;
}

uint64_t sub_2381CB7A4()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381CB7E4()
{
  return sub_238238CF0();
}

uint64_t sub_2381CB808()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

unint64_t sub_2381CB844()
{
  return 0xD000000000000014;
}

uint64_t sub_2381CB87C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381CB8B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2381CB8BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 120) + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2381CB914;
  return v4();
}

uint64_t sub_2381CB914()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2381CB95C()
{
  SubmitEventsActivityConfig.activityFlags.unsafeMutableAddressor();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2381CB99C()
{
  uint64_t v0;

  v0 = *(_QWORD *)SubmitEventsActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2381CB9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_2381CB9E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 48) = sub_2381CCC54() & 1;
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)v1 + 256);
  return swift_task_switch();
}

uint64_t sub_2381CBA38()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 40))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381CBA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2382387E0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2382387D4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_2381CCCD0(a1, &qword_2568E7890);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2382387A4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2381CBBBC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2381CBC20;
  return v6(a1);
}

uint64_t sub_2381CBC20()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2381CBC6C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2381CBD3C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2381CCC94((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2381CCC94((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2381CBD3C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23823896C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2381CBEF4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_238238A74();
  if (!v8)
  {
    sub_238238AD4();
    __break(1u);
LABEL_17:
    result = sub_238238B1C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2381CBEF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2381CBF88(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2381CC160(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2381CC160(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2381CBF88(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2381CC0FC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_238238A2C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_238238AD4();
      __break(1u);
LABEL_10:
      v2 = sub_2382386E4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_238238B1C();
    __break(1u);
LABEL_14:
    result = sub_238238AD4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2381CC0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78D0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2381CC160(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

unint64_t sub_2381CC2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_238238CE4();
  sub_238238684();
  v4 = sub_238238D08();
  return sub_2381CC310(a1, a2, v4);
}

unint64_t sub_2381CC310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_238238C0C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_238238C0C() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_2381CC3F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2381CC444(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2381CC40C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2381CC5A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2381CC428(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2381CC724(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2381CC444(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7608);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381CC5A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7600);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381CC724(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7610);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381CC88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2381CC8E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2381CC91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_2381CCDE0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_2381CC98C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2381CC9D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2381CCA1C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2381CCA58()
{
  unint64_t result;

  result = qword_2568E7520;
  if (!qword_2568E7520)
  {
    result = MEMORY[0x23B82FD68](&unk_238239A2C, &type metadata for SubmitEventsActivity.Error);
    atomic_store(result, (unint64_t *)&qword_2568E7520);
  }
  return result;
}

unint64_t sub_2381CCAA0()
{
  unint64_t result;

  result = qword_2568E7528;
  if (!qword_2568E7528)
  {
    result = MEMORY[0x23B82FD68](&unk_23823997C, &type metadata for SubmitEventsActivity.Error);
    atomic_store(result, (unint64_t *)&qword_2568E7528);
  }
  return result;
}

unint64_t sub_2381CCAE8(uint64_t a1)
{
  unint64_t result;

  result = sub_2381CCB0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2381CCB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E7538;
  if (!qword_2568E7538)
  {
    v1 = type metadata accessor for SubmitEventsActivity();
    result = MEMORY[0x23B82FD68](&unk_238239A6C, v1);
    atomic_store(result, (unint64_t *)&qword_2568E7538);
  }
  return result;
}

uint64_t type metadata accessor for SubmitEventsActivity()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for SubmitEventsActivity.Error(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SubmitEventsActivity.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2381CCC08 + 4 * byte_238239970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2381CCC28 + 4 * byte_238239975[v4]))();
}

_BYTE *sub_2381CCC08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2381CCC28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381CCC30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381CCC38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381CCC40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381CCC48(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_2381CCC54()
{
  return 0;
}

ValueMetadata *type metadata accessor for SubmitEventsActivity.Error()
{
  return &type metadata for SubmitEventsActivity.Error;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2381CCC94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2381CCCD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2381CCD0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2381CCD30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2381CB914;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2568E9080 + dword_2568E9080))(a1, v4);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2381CCDEC()
{
  return 0x79745F746E657665;
}

uint64_t sub_2381CCE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x79745F746E657665 && a2 == 0xEB00000000736570)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_238238C0C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2381CCEB8()
{
  return 0;
}

void sub_2381CCEC4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2381CCED0()
{
  sub_2381CDDAC();
  return sub_238238D68();
}

uint64_t sub_2381CCEF8()
{
  sub_2381CDDAC();
  return sub_238238D74();
}

uint64_t sub_2381CCF20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_2381CD0D0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_2381CCF4C()
{
  return 0x675F747069726373;
}

uint64_t sub_2381CCF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x675F747069726373 && a2 == 0xED00007370756F72)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_238238C0C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2381CD028()
{
  sub_2381CDD68();
  return sub_238238D68();
}

uint64_t sub_2381CD050()
{
  sub_2381CDD68();
  return sub_238238D74();
}

_QWORD *sub_2381CD078@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_2381CD304(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2381CD0A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_2381CD448(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_2381CD0D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7680);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381CDDAC();
  sub_238238D2C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_238238D14();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    sub_2381CDE14(v8 + 40 * v9 - 8, (uint64_t)&v11);
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  result = swift_bridgeObjectRelease();
  if (*((_QWORD *)&v12 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    v7 = sub_238238D5C();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7688);
    sub_2381CDEE0(&qword_2568E7690, &qword_2568E7688, (uint64_t (*)(void))sub_2381CDF44);
    sub_238238B94();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2381CD304(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7660);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381CDD68();
  sub_238238D2C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7668);
    sub_2381CDEE0(&qword_2568E7670, &qword_2568E7668, (uint64_t (*)(void))sub_2381CDE9C);
    sub_238238B94();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_2381CD448(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_238238D14();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    sub_2381CDE14(v3 + 40 * v4 - 8, (uint64_t)&v12);
    result = swift_bridgeObjectRelease();
    if (*((_QWORD *)&v13 + 1))
    {
      __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
      v6 = sub_238238D5C();
      v8 = v7;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
      if (v6 == 0x6F736A5F70747468 && v8 == (_QWORD *)0xE90000000000006ELL || (sub_238238C0C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_2381CDE14((uint64_t)a1, (uint64_t)&v12);
        v9 = sub_2381CD0D0(&v12);
        if (!v1)
          v8 = (_QWORD *)v9;
        goto LABEL_14;
      }
      if (v6 == 0x6C61636F6CLL && v8 == (_QWORD *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v10 = sub_238238C0C();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          v8 = 0;
LABEL_14:
          __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
          return (uint64_t)v8;
        }
      }
      sub_2381CDE14((uint64_t)a1, (uint64_t)&v12);
      v11 = sub_2381CD304(&v12);
      if (!v1)
        v8 = v11;
      goto LABEL_14;
    }
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_2381CD684()
{
  unint64_t result;

  result = qword_2568E7620;
  if (!qword_2568E7620)
  {
    result = MEMORY[0x23B82FD68](&unk_238239B1C, &type metadata for StorebagSectionBackendHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7620);
  }
  return result;
}

unint64_t sub_2381CD6CC()
{
  unint64_t result;

  result = qword_2568E7628;
  if (!qword_2568E7628)
  {
    result = MEMORY[0x23B82FD68](&unk_238239BFC, &type metadata for StorebagSectionBackendHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7628);
  }
  return result;
}

unint64_t sub_2381CD714()
{
  unint64_t result;

  result = qword_2568E7630;
  if (!qword_2568E7630)
  {
    result = MEMORY[0x23B82FD68](&unk_238239BD4, &type metadata for StorebagSectionBackendHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7630);
  }
  return result;
}

unint64_t sub_2381CD75C()
{
  unint64_t result;

  result = qword_2568E7638;
  if (!qword_2568E7638)
  {
    result = MEMORY[0x23B82FD68](&unk_238239C4C, &type metadata for StorebagSectionBackendScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7638);
  }
  return result;
}

unint64_t sub_2381CD7A4()
{
  unint64_t result;

  result = qword_2568E7640;
  if (!qword_2568E7640)
  {
    result = MEMORY[0x23B82FD68](&unk_238239D2C, &type metadata for StorebagSectionBackendScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7640);
  }
  return result;
}

unint64_t sub_2381CD7EC()
{
  unint64_t result;

  result = qword_2568E7648;
  if (!qword_2568E7648)
  {
    result = MEMORY[0x23B82FD68](&unk_238239D04, &type metadata for StorebagSectionBackendScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7648);
  }
  return result;
}

uint64_t destroy for StorebagSectionBackendHTTP()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19CloudTelemetryTools26StorebagSectionBackendHTTPVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StorebagSectionBackendHTTP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionBackendHTTP(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP()
{
  return &type metadata for StorebagSectionBackendHTTP;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionBackendHTTP.CodingKeys;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup()
{
  return &type metadata for StorebagSectionBackendScriptGroup;
}

uint64_t _s19CloudTelemetryTools26StorebagSectionBackendHTTPV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2381CDA54 + 4 * asc_238239B10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2381CDA74 + 4 * byte_238239B15[v4]))();
}

_BYTE *sub_2381CDA54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2381CDA74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381CDA7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381CDA84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381CDA8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381CDA94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionBackendScriptGroup.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for StorebagSectionFilter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_2381CDAE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 != 1)
  {
    if (a4)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for StorebagSectionBackend(uint64_t a1)
{
  return sub_2381CDB30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_2381CDB30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 != 1)
  {
    if (a4)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2381CDAE0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2381CDAE0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_2381CDB30(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2381CDB30(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackend(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2381CDD24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2381CDD3C(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackend()
{
  return &type metadata for StorebagSectionBackend;
}

unint64_t sub_2381CDD68()
{
  unint64_t result;

  result = qword_2568E7650;
  if (!qword_2568E7650)
  {
    result = MEMORY[0x23B82FD68](&unk_238239CB4, &type metadata for StorebagSectionBackendScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7650);
  }
  return result;
}

unint64_t sub_2381CDDAC()
{
  unint64_t result;

  result = qword_2568E7658;
  if (!qword_2568E7658)
  {
    result = MEMORY[0x23B82FD68](&unk_238239B84, &type metadata for StorebagSectionBackendHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7658);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2381CDE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B82FD5C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_2381CDE9C()
{
  unint64_t result;

  result = qword_2568E7678;
  if (!qword_2568E7678)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BC38, &type metadata for StorebagSectionClientScriptGroup);
    atomic_store(result, (unint64_t *)&qword_2568E7678);
  }
  return result;
}

uint64_t sub_2381CDEE0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2381CDF44()
{
  unint64_t result;

  result = qword_2568E7698;
  if (!qword_2568E7698)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BAA8, &type metadata for StorebagSectionClientHTTP);
    atomic_store(result, (unint64_t *)&qword_2568E7698);
  }
  return result;
}

uint64_t sub_2381CDF8C(uint64_t a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_238237FA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238238444();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238204B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v13 = sub_23823842C();
  v14 = sub_238238888();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24 = v8;
    v16 = (uint8_t *)v15;
    v23 = swift_slowAlloc();
    v26 = v23;
    v22 = a2;
    *(_DWORD *)v16 = 136446210;
    v21 = v16 + 4;
    sub_2381D49C0(&qword_2568E76A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEF8]);
    v17 = sub_238238C9C();
    v25 = sub_2381CBC6C(v17, v18, &v26);
    sub_238238960();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_2381C6000, v13, v14, v22, v16, 0xCu);
    v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v19, -1, -1);
    MEMORY[0x23B82FE28](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2381CE1DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;

  v2 = sub_238238444();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238204B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = a1;
  v8 = a1;
  v9 = sub_23823842C();
  v10 = sub_238238888();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136446210;
    v16[1] = v11 + 4;
    swift_getErrorValue();
    v13 = sub_238238C9C();
    v16[2] = sub_2381CBC6C(v13, v14, &v17);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v9, v10, "unable to access transparency log (UNKNOWN): %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v12, -1, -1);
    MEMORY[0x23B82FE28](v11, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_2381CE3C4()
{
  return 0xD000000000000018;
}

uint64_t sub_2381CE3E0()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EFFA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EFFA0);
  return sub_238238438();
}

uint64_t sub_2381CE45C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  char v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  int64_t v64;
  char *v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  id v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  unsigned int v78;
  id v79;
  void *v80;
  uint64_t v81;
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t inited;
  void *v95;
  id v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  char *v103;
  uint64_t v104;
  double v105;
  double v106;
  uint64_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  unint64_t v118;
  uint8_t *v119;
  id v120;
  char *v121;
  void *v122;
  unsigned int v123;
  id v124;
  char *v125;
  id v126;
  void *v127;
  id v128;
  id v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  void *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  id v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  char *v160;
  void (*v161)(char *, uint64_t);
  char *v162;
  void (*v163)(char *, uint64_t, uint64_t, uint64_t);
  void (*v164)(char *, uint64_t, uint64_t);
  uint8_t *v165;
  uint64_t v166;
  char *v167;
  id v168[5];

  v147 = a1;
  v168[4] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90C0);
  MEMORY[0x24BDAC7A8](v2);
  v143 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_238238114();
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v146 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_23823830C();
  v142 = *(_QWORD *)(v144 - 8);
  v5 = MEMORY[0x24BDAC7A8](v144);
  v139 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v151 = (char *)&v137 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v149 = (uint64_t)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v152 = (char *)&v137 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v156 = (char *)&v137 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v137 - v15;
  v17 = sub_238238210();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v148 = (char *)&v137 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v137 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v160 = (char *)&v137 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v153 = (char *)&v137 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v137 - v31;
  v154 = (id)objc_opt_self();
  v33 = objc_msgSend(v154, sel_defaultManager);
  v34 = v1 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  swift_beginAccess();
  v164 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v164(v32, v34, v17);
  v35 = (void *)sub_238238198();
  v165 = (uint8_t *)v18;
  v161 = *(void (**)(char *, uint64_t))(v18 + 8);
  v161(v32, v17);
  type metadata accessor for URLResourceKey();
  v36 = (void *)MEMORY[0x24BEE4AF8];
  v145 = v37;
  v38 = (void *)sub_238238750();
  v167 = 0;
  v39 = objc_msgSend(v33, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v35, v38, 0, &v167);

  v40 = v167;
  if (!v39)
  {
    v57 = v40;
    sub_238238150();

    return swift_willThrow();
  }
  v41 = v36;
  v42 = sub_23823875C();

  v168[0] = v41;
  v43 = *(_QWORD *)(v42 + 16);
  v155 = v17;
  v138 = v21;
  v162 = v26;
  *(_QWORD *)&v159 = v43;
  if (v43)
  {
    v44 = 0;
    v157 = 0x800000023823DE50;
    v45 = v165;
    v46 = v153;
    v158 = v42;
    while (v44 < *(_QWORD *)(v42 + 16))
    {
      v47 = (v45[80] + 32) & ~(unint64_t)v45[80];
      v48 = *((_QWORD *)v45 + 9);
      v164(v16, v42 + v47 + v48 * v44, v17);
      v163 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v45 + 7);
      v163(v16, 0, 1, v17);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v45 + 6))(v16, 1, v17) == 1)
      {
        v44 = (unint64_t)v163;
        v26 = v162;
        goto LABEL_18;
      }
      v49 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v45 + 4);
      v50 = v16;
      v49(v46, v16, v17);
      v51 = v46;
      sub_238238180();
      v52 = sub_2381CF54C();
      swift_bridgeObjectRelease();
      if ((v52 & 1) != 0)
      {
        v49(v160, v51, v17);
        v53 = v168[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2381D41E4(0, v53[2] + 1, 1);
          v53 = v168[0];
        }
        v16 = v50;
        v55 = v53[2];
        v54 = v53[3];
        if (v55 >= v54 >> 1)
        {
          sub_2381D41E4(v54 > 1, v55 + 1, 1);
          v53 = v168[0];
        }
        v53[2] = v55 + 1;
        v56 = (char *)v53 + v47 + v55 * v48;
        v17 = v155;
        v49(v56, v160, v155);
        v168[0] = v53;
        v46 = v153;
      }
      else
      {
        v161(v51, v17);
        v46 = v51;
        v16 = v50;
      }
      ++v44;
      v45 = v165;
      v26 = v162;
      v42 = v158;
      if ((_QWORD)v159 == v44)
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_58;
  }
  v163 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v165 + 7);
LABEL_16:
  v44 = (unint64_t)v163;
  v163(v16, 1, 1, v17);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_2381CCCD0((uint64_t)v16, &qword_2568E7840);
  v167 = (char *)v168[0];
  v59 = v150;
  sub_2381CF6A4((unint64_t *)&v167);
  v60 = v59;
  v157 = sub_2381CF728(1, (uint64_t)v167);
  v160 = v62;
  v64 = v63 >> 1;
  v163 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v44;
  v65 = v156;
  if (v61 != v63 >> 1)
  {
    v71 = v61;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v72 = 136446210;
    v159 = v72;
    v158 = MEMORY[0x24BEE4AD8] + 8;
    v66 = v165;
    while (v71 < v64)
    {
      v164(v65, (uint64_t)&v160[*((_QWORD *)v66 + 9) * v71], v17);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v44)(v65, 0, 1, v17);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v66 + 6))(v65, 1, v17) == 1)
        goto LABEL_21;
      v74 = v64;
      (*((void (**)(char *, char *, uint64_t))v66 + 4))(v26, v65, v17);
      v75 = objc_msgSend(v154, sel_defaultManager);
      v76 = (void *)sub_238238198();
      v168[0] = 0;
      v77 = v17;
      v78 = objc_msgSend(v75, sel_removeItemAtURL_error_, v76, v168);

      if (v78)
      {
        v73 = v168[0];
        v161(v26, v77);
        v17 = v77;
        v66 = v165;
        v65 = v156;
        v64 = v74;
      }
      else
      {
        v79 = v168[0];
        v80 = (void *)sub_238238150();

        swift_willThrow();
        if (qword_2568EA690 != -1)
          swift_once();
        v60 = 0;
        v81 = sub_238238444();
        __swift_project_value_buffer(v81, (uint64_t)qword_2568EFFA0);
        v82 = v80;
        v83 = v80;
        v84 = sub_23823842C();
        v85 = sub_23823887C();
        v64 = v74;
        if (os_log_type_enabled(v84, v85))
        {
          v86 = swift_slowAlloc();
          v87 = (void *)swift_slowAlloc();
          v168[0] = v87;
          *(_DWORD *)v86 = v159;
          swift_getErrorValue();
          v88 = sub_238238C9C();
          *(_QWORD *)(v86 + 4) = sub_2381CBC6C(v88, v89, (uint64_t *)v168);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_2381C6000, v84, v85, "failed to erase old log: %{public}s", (uint8_t *)v86, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v87, -1, -1);
          MEMORY[0x23B82FE28](v86, -1, -1);

        }
        else
        {

        }
        v26 = v162;
        v17 = v155;
        v161(v162, v155);
        v44 = (unint64_t)v163;
        v66 = v165;
        v65 = v156;
      }
      if (v64 == ++v71)
        goto LABEL_20;
    }
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  v66 = v165;
LABEL_20:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v65, 1, 1, v17);
LABEL_21:
  swift_unknownObjectRelease();
  v67 = *((_QWORD *)v167 + 2);
  v68 = (uint64_t)v152;
  v69 = v151;
  if (v67)
  {
    v164(v152, (uint64_t)&v167[((v66[80] + 32) & ~(unint64_t)v66[80]) + *((_QWORD *)v66 + 9) * (v67 - 1)], v17);
    v70 = 0;
  }
  else
  {
    v70 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44)(v68, v70, 1, v17);
  swift_bridgeObjectRelease();
  v90 = v149;
  sub_2381D2B00(v68, v149);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v66 + 6))(v90, 1, v17) == 1)
  {
    v91 = &qword_2568E7840;
    v92 = v90;
LABEL_38:
    sub_2381CCCD0(v92, v91);
    return sub_2381D2B48(v68, v147);
  }
  v93 = v148;
  (*((void (**)(char *, uint64_t, uint64_t))v66 + 4))(v148, v90, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v95 = (void *)*MEMORY[0x24BDBCBF0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBF0];
  v96 = v95;
  sub_2381D450C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v97 = v146;
  sub_238238168();
  if (v60)
  {
    swift_bridgeObjectRelease();
    v161(v93, v17);
    return sub_2381CCCD0((uint64_t)v152, &qword_2568E7840);
  }
  swift_bridgeObjectRelease();
  v98 = v143;
  sub_2382380D8();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v97, v141);
  v99 = v142;
  v100 = v144;
  v101 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48))(v98, 1, v144);
  v68 = (uint64_t)v152;
  if (v101 == 1)
  {
    v161(v148, v17);
    v91 = &qword_2568E90C0;
    v92 = (uint64_t)v98;
    goto LABEL_38;
  }
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v69, v98, v100);
  v102 = v69;
  v103 = v139;
  sub_2382382DC();
  v104 = v99;
  sub_2382382F4();
  v106 = v105;
  v107 = v100;
  v108 = *(uint8_t **)(v104 + 8);
  ((void (*)(char *, uint64_t))v108)(v103, v107);
  if (v106 <= 604800.0)
  {
    ((void (*)(char *, uint64_t))v108)(v102, v107);
    v161(v148, v17);
    return sub_2381D2B48(v68, v147);
  }
  v165 = v108;
  if (qword_2568EA690 != -1)
LABEL_59:
    swift_once();
  v109 = sub_238238444();
  v110 = __swift_project_value_buffer(v109, (uint64_t)qword_2568EFFA0);
  v111 = v138;
  v164(v138, (uint64_t)v148, v17);
  v112 = sub_23823842C();
  v113 = sub_238238864();
  if (os_log_type_enabled(v112, v113))
  {
    v114 = (uint8_t *)swift_slowAlloc();
    v115 = (void *)swift_slowAlloc();
    v164 = (void (*)(char *, uint64_t, uint64_t))v110;
    v116 = v115;
    v168[0] = v115;
    *(_DWORD *)v114 = 136446210;
    v117 = sub_238238180();
    v166 = sub_2381CBC6C(v117, v118, (uint64_t *)v168);
    v44 = (unint64_t)v163;
    sub_238238960();
    swift_bridgeObjectRelease();
    v161(v111, v155);
    _os_log_impl(&dword_2381C6000, v112, v113, "aging out log file: %{public}s", v114, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v116, -1, -1);
    MEMORY[0x23B82FE28](v114, -1, -1);
  }
  else
  {
    v161(v111, v17);
  }

  v119 = v165;
  v120 = objc_msgSend(v154, sel_defaultManager);
  v121 = v148;
  v122 = (void *)sub_238238198();
  v168[0] = 0;
  v123 = objc_msgSend(v120, sel_removeItemAtURL_error_, v122, v168);

  if (v123)
  {
    v124 = v168[0];
    ((void (*)(char *, uint64_t))v119)(v151, v144);
    v125 = v121;
  }
  else
  {
    v126 = v168[0];
    v127 = (void *)sub_238238150();

    swift_willThrow();
    v128 = v127;
    v129 = v127;
    v130 = sub_23823842C();
    v131 = sub_23823887C();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = (uint8_t *)swift_slowAlloc();
      v133 = (void *)swift_slowAlloc();
      v168[0] = v133;
      *(_DWORD *)v132 = 136446210;
      v165 = v132 + 4;
      swift_getErrorValue();
      v134 = sub_238238C9C();
      v166 = sub_2381CBC6C(v134, v135, (uint64_t *)v168);
      v44 = (unint64_t)v163;
      sub_238238960();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2381C6000, v130, v131, "failed to erase old log: %{public}s", v132, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v133, -1, -1);
      MEMORY[0x23B82FE28](v132, -1, -1);

    }
    else
    {

    }
    ((void (*)(char *, uint64_t))v119)(v151, v144);
    v125 = v148;
  }
  v136 = v155;
  v161(v125, v155);
  sub_2381CCCD0((uint64_t)v152, &qword_2568E7840);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44)(v147, 1, 1, v136);
}

uint64_t sub_2381CF54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_2382386D8();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_2382386D8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_238238C0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      v2 = sub_2382386D8();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_2382386D8();
  v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9)
    return 1;
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2381CF6A4(unint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_238238210() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_2381D43E0(v3);
  v4 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2381D2B90(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_2381CF728(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_238238210();
    return a2;
  }
  return result;
}

uint64_t sub_2381CF7A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[2] = a1;
  v3 = swift_allocObject();
  v1[3] = v3;
  swift_defaultActor_initialize();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_writeInternalEvents) = 2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_fileDeletionSource) = 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_fileHandleWithNullDevice);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile) = v4;
  v5 = v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  v6 = sub_238238210();
  v1[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[5] = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  return swift_task_switch();
}

uint64_t sub_2381CF888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  sub_2381CF914();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

void sub_2381CF914()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  void (*v70)(uint64_t, uint64_t);
  uint8_t *v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  _QWORD *v78;
  id v79;
  void *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;

  v1 = sub_238237F94();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v81 - v6;
  v8 = sub_238237FA0();
  v90 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v85 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v81 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v89 = (uint64_t *)((char *)&v81 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v88 = (char *)&v81 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v81 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - v22;
  sub_2381D03BC();
  if (v0)
  {
    v93 = v0;
    v24 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    if (swift_dynamicCast())
    {
      v82 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      v82(v21, v23, v8);
      v81 = sub_2381D49C0(&qword_2568E76B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
      sub_238238144();
      sub_238237F88();
      sub_2381D49C0(&qword_2568E76C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAED0]);
      v83 = v23;
      v84 = v8;
      sub_238238738();
      sub_238238738();
      v25 = v91;
      v26 = v92;
      v27 = *(void (**)(char *, uint64_t))(v2 + 8);
      v27(v5, v1);
      v27(v7, v1);
      if (v26 == v25)
      {
        v28 = v82;
        v29 = v84;

        if (qword_2568EA690 != -1)
          swift_once();
        v30 = sub_238238444();
        __swift_project_value_buffer(v30, (uint64_t)qword_2568EFFA0);
        v31 = v88;
        v32 = v29;
        v28(v88, v21, v29);
        v33 = sub_23823842C();
        v34 = sub_238238894();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          v89 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v35 = 138412290;
          sub_238237F58();
          v36 = _swift_stdlib_bridgeErrorToNSError();
          v92 = v36;
          v32 = v29;
          sub_238238960();
          v38 = v89;
          v37 = v90;
          *v89 = v36;
          v39 = *(void (**)(char *, uint64_t))(v37 + 8);
          v39(v31, v32);
          _os_log_impl(&dword_2381C6000, v33, v34, "transparency log - no write permission. %@", v35, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76B0);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v38, -1, -1);
          MEMORY[0x23B82FE28](v35, -1, -1);
        }
        else
        {
          v39 = *(void (**)(char *, uint64_t))(v90 + 8);
          v39(v31, v32);
        }
        v55 = v83;

        sub_2381CDF8C((uint64_t)v21, "unable to access transparency log (PERM): %{public}s");
        sub_238237F58();
        swift_willThrow();
        v39(v21, v32);
        v39(v55, v32);
LABEL_31:

        return;
      }
      v40 = v84;
      v88 = *(char **)(v90 + 8);
      ((void (*)(char *, uint64_t))v88)(v21, v84);
      v41 = (uint64_t)v89;
      v82((char *)v89, v83, v40);
      sub_238238144();
      sub_238237F7C();
      sub_238238738();
      sub_238238738();
      v43 = v91;
      v42 = v92;
      v27(v5, v1);
      v27(v7, v1);
      if (v42 == v43)
      {
        v45 = v83;
        v44 = v84;

        if (qword_2568EA690 != -1)
          swift_once();
        v46 = sub_238238444();
        __swift_project_value_buffer(v46, (uint64_t)qword_2568EFFA0);
        v47 = v86;
        v82(v86, (char *)v41, v44);
        v48 = sub_23823842C();
        v49 = sub_238238894();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v51 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v50 = 138412290;
          sub_238237F58();
          v52 = _swift_stdlib_bridgeErrorToNSError();
          v92 = v52;
          v53 = (void (*)(char *, uint64_t))v88;
          v41 = (uint64_t)v89;
          sub_238238960();
          *v51 = v52;
          v54 = v51;
          v45 = v83;
          v53(v86, v44);
          _os_log_impl(&dword_2381C6000, v48, v49, "transparency log - no space. %@", v50, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76B0);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v54, -1, -1);
          MEMORY[0x23B82FE28](v50, -1, -1);
        }
        else
        {
          v53 = (void (*)(char *, uint64_t))v88;
          ((void (*)(char *, uint64_t))v88)(v47, v44);
        }

        sub_2381CDF8C(v41, "unable to write transparency log (OOS): %{public}s");
        sub_238237F58();
        swift_willThrow();
        v53((char *)v41, v44);
        v53(v45, v44);
        goto LABEL_31;
      }
      v56 = v84;
      ((void (*)(uint64_t, uint64_t))v88)(v41, v84);
      v57 = v87;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v87, v83, v56);
      sub_238238144();
      sub_238237F70();
      sub_238238738();
      sub_238238738();
      v59 = v91;
      v58 = v92;
      v27(v5, v1);
      v27(v7, v1);
      if (v58 == v59)
      {
        v60 = v84;

        if (qword_2568EA690 != -1)
          swift_once();
        v61 = sub_238238444();
        __swift_project_value_buffer(v61, (uint64_t)qword_2568EFFA0);
        v62 = v85;
        v63 = (uint64_t)v87;
        v82(v85, v87, v60);
        v64 = sub_23823842C();
        v65 = sub_238238894();
        if (os_log_type_enabled(v64, v65))
        {
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v66 = 138412290;
          sub_238237F58();
          v68 = _swift_stdlib_bridgeErrorToNSError();
          v92 = v68;
          sub_238238960();
          v69 = v67;
          *v67 = v68;
          v70 = (void (*)(uint64_t, uint64_t))v88;
          ((void (*)(char *, uint64_t))v88)(v62, v60);
          _os_log_impl(&dword_2381C6000, v64, v65, "transparency log - unknown write error. %@", v66, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76B0);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v69, -1, -1);
          v71 = v66;
          v63 = (uint64_t)v87;
          MEMORY[0x23B82FE28](v71, -1, -1);
        }
        else
        {
          v70 = (void (*)(uint64_t, uint64_t))v88;
          ((void (*)(char *, uint64_t))v88)(v62, v60);
        }

        sub_2381CDF8C(v63, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s");
        sub_238237F58();
        swift_willThrow();
        v70(v63, v60);
        goto LABEL_31;
      }
      ((void (*)(char *, uint64_t))v88)(v57, v84);
    }

    if (qword_2568EA690 != -1)
      swift_once();
    v72 = sub_238238444();
    __swift_project_value_buffer(v72, (uint64_t)qword_2568EFFA0);
    v73 = v0;
    v74 = v0;
    v75 = sub_23823842C();
    v76 = sub_238238894();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v77 = 138412290;
      v79 = v0;
      v80 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v93 = v80;
      sub_238238960();
      *v78 = v80;

      _os_log_impl(&dword_2381C6000, v75, v76, "transparency log - unexpected error. %@", v77, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76B0);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v78, -1, -1);
      MEMORY[0x23B82FE28](v77, -1, -1);
    }
    else
    {

    }
    sub_2381CE1DC(v0);
    swift_willThrow();
  }
}

void sub_2381D03BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void **v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  id v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  id *v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  char *v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  void *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void **v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t aBlock;
  unint64_t v124;
  uint64_t (*v125)(uint64_t);
  void *v126;
  uint64_t (*v127)();
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v112 = sub_2382384EC();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v110 = (char *)&v99 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_23823851C();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v107 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_238238900();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v104 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23823830C();
  v115 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_238238210();
  v119 = *(_QWORD *)(v10 - 8);
  v120 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v102 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v99 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v99 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v116 = (char *)&v99 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v99 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v101 = (char *)&v99 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v99 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v117 = (char *)&v99 - v28;
  v122 = v0;
  v29 = (void **)(v0 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
  swift_beginAccess();
  v114 = v29;
  v30 = *v29;
  v31 = (void *)objc_opt_self();
  v32 = v30;
  v33 = objc_msgSend(v31, sel_fileHandleWithNullDevice);
  v118 = sub_2381D2964(0, &qword_2568E7848);
  LOBYTE(v29) = sub_238238948();

  if ((v29 & 1) == 0)
  {
    if (qword_2568EA690 != -1)
      swift_once();
    v34 = sub_238238444();
    __swift_project_value_buffer(v34, (uint64_t)qword_2568EFFA0);
    v35 = sub_23823842C();
    v36 = sub_238238894();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_2381C6000, v35, v36, "witnessed log vanish - refeshing", v37, 2u);
      MEMORY[0x23B82FE28](v37, -1, -1);
    }

  }
  v38 = v122;
  v39 = (uint64_t *)(v122 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_fileDeletionSource);
  swift_beginAccess();
  if (*v39)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_238238924();
    swift_unknownObjectRelease();
    *v39 = 0;
    swift_unknownObjectRelease();
  }
  v103 = v39;
  v40 = v121;
  sub_2381CE45C((uint64_t)v9);
  if (!v40)
  {
    v100 = v22;
    v121 = 0;
    v42 = v119;
    v41 = v120;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v9, 1, v120) == 1)
    {
      sub_2381CCCD0((uint64_t)v9, &qword_2568E7840);
      v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
      v44 = (void *)sub_2382385E8();
      objc_msgSend(v43, sel_setDateFormat_, v44);

      sub_2382382DC();
      v45 = (void *)sub_2382382AC();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v6, v4);
      v46 = objc_msgSend(v43, sel_stringFromDate_, v45);

      sub_23823860C();
      v47 = v38 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
      swift_beginAccess();
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
      v48(v17, v47, v41);
      aBlock = 0;
      v124 = 0xE000000000000000;
      sub_238238A20();
      swift_bridgeObjectRelease();
      aBlock = 0xD00000000000001ALL;
      v124 = 0x800000023823DE50;
      sub_2382386B4();
      swift_bridgeObjectRelease();
      sub_2382386B4();
      v49 = v116;
      sub_2382381B0();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(char *, uint64_t))(v42 + 8);
      v50(v17, v41);
      v51 = v121;
      sub_23823827C();
      if (v51)
      {
        v50(v49, v41);

        return;
      }

      v57 = v100;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v100, v49, v41);
      v58 = (uint64_t)v113;
      v48(v113, (uint64_t)v57, v41);
      v59 = sub_2381D1130(v58);
      v121 = 0;
      v60 = v114;
      v63 = *v114;
      *v114 = v59;

      if (qword_2568EA690 != -1)
        swift_once();
      v64 = sub_238238444();
      __swift_project_value_buffer(v64, (uint64_t)qword_2568EFFA0);
      v65 = v102;
      v48(v102, (uint64_t)v57, v41);
      v66 = sub_23823842C();
      v67 = sub_238238864();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = swift_slowAlloc();
        aBlock = v69;
        *(_DWORD *)v68 = 136446210;
        v70 = sub_2382381EC();
        v130 = sub_2381CBC6C(v70, v71, &aBlock);
        sub_238238960();
        swift_bridgeObjectRelease();
        v72 = v120;
        v50(v65, v120);
        _os_log_impl(&dword_2381C6000, v66, v67, "created new log file at %{public}s", v68, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v69, -1, -1);
        v73 = v68;
        v60 = v114;
        MEMORY[0x23B82FE28](v73, -1, -1);

        v74 = v100;
        v75 = v72;
      }
      else
      {

        v50(v65, v41);
        v74 = v57;
        v75 = v41;
      }
      v50(v74, v75);
      v89 = v106;
      v90 = v105;
      v81 = v104;
    }
    else
    {
      v52 = v117;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v117, v9, v41);
      v53 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      v53(v27, v52, v41);
      v54 = v121;
      v55 = sub_2381D1130((uint64_t)v27);
      v56 = v42;
      if (v54)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v52, v41);
        return;
      }
      v60 = v114;
      v61 = *v114;
      *v114 = v55;

      v62 = *v60;
      sub_238238858();
      v121 = 0;

      if (qword_2568EA690 != -1)
        swift_once();
      v76 = sub_238238444();
      __swift_project_value_buffer(v76, (uint64_t)qword_2568EFFA0);
      v77 = v101;
      v53(v101, v52, v41);
      v78 = sub_23823842C();
      v79 = sub_238238864();
      v80 = os_log_type_enabled(v78, v79);
      v81 = v104;
      if (v80)
      {
        v82 = (uint8_t *)swift_slowAlloc();
        v83 = swift_slowAlloc();
        aBlock = v83;
        *(_DWORD *)v82 = 136446210;
        v84 = sub_2382381EC();
        v129 = sub_2381CBC6C(v84, v85, &aBlock);
        sub_238238960();
        swift_bridgeObjectRelease();
        v86 = v120;
        v87 = *(void (**)(char *, uint64_t))(v119 + 8);
        v87(v77, v120);
        _os_log_impl(&dword_2381C6000, v78, v79, "opened log file at %{public}s", v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v83, -1, -1);
        v88 = v82;
        v60 = v114;
        MEMORY[0x23B82FE28](v88, -1, -1);

        v87(v117, v86);
      }
      else
      {

        v91 = *(void (**)(char *, uint64_t))(v56 + 8);
        v91(v77, v41);
        v91(v52, v41);
      }
      v89 = v106;
      v90 = v105;
    }
    sub_2381D2964(0, &qword_2568E7850);
    objc_msgSend(*v60, sel_fileDescriptor);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7858);
    v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_238239E50;
    sub_2382388F4();
    sub_2382388E8();
    aBlock = v92;
    sub_2381D49C0(&qword_2568E7860, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5810], MEMORY[0x24BEE5820]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7868);
    sub_2381D29E0(&qword_2568E7870, &qword_2568E7868);
    sub_238238990();
    v93 = sub_23823890C();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v81, v89);
    v94 = v103;
    *v103 = v93;
    swift_unknownObjectRelease();
    if (*v94)
    {
      swift_getObjectType();
      v95 = swift_allocObject();
      swift_weakInit();
      v127 = sub_2381D29C0;
      v128 = v95;
      aBlock = MEMORY[0x24BDAC760];
      v124 = 1107296256;
      v125 = sub_2381D14B8;
      v126 = &block_descriptor;
      v96 = _Block_copy(&aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      v97 = v107;
      sub_238238510();
      v98 = v110;
      sub_2381D14E4();
      sub_238238918();
      _Block_release(v96);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v98, v112);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v109);
      swift_release();
      swift_release();
      if (*v94)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_238238930();
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_2381D1130(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_238238198();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_238238210();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_238238150();

    swift_willThrow();
    v9 = sub_238238210();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_2381D1244()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = sub_2382387E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_2381D1384((uint64_t)v2, (uint64_t)&unk_2568E78A0, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_2381D1320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2381D1338()
{
  uint64_t v0;

  sub_2381CF914();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381D1384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_2382387E0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2382387D4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_2381CCCD0(a1, &qword_2568E7890);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2382387A4();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2381D14B8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_2381D14E4()
{
  sub_2382384EC();
  sub_2381D49C0(&qword_2568E7878, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7880);
  sub_2381D29E0(&qword_2568E7888, &qword_2568E7880);
  return sub_238238990();
}

uint64_t sub_2381D1590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void **v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  _QWORD v29[6];
  id v30[2];
  uint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;

  v29[2] = a3;
  v29[3] = a4;
  v29[4] = a1;
  v29[5] = a2;
  v35 = *MEMORY[0x24BDAC8D0];
  v4 = sub_238238648();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23823830C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_238238A20();
  swift_bridgeObjectRelease();
  v31 = 40;
  v32 = 0xE100000000000000;
  sub_2382382DC();
  sub_238238294();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2382386B4();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  sub_2382386B4();
  sub_2382386B4();
  sub_23823863C();
  v12 = sub_238238618();
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  if (v14 >> 60 == 15)
  {
    sub_2381D25E8();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v33 = (void *)v12;
    v34 = (void *)v14;
    sub_238238288();
    sub_23823863C();
    v17 = sub_238238618();
    v19 = v18;
    result = ((uint64_t (*)(char *, uint64_t))v15)(v7, v4);
    if (v19 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      sub_238238288();
      sub_2381D262C(v17, v19);
      v20 = (void **)(v29[0] + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
      swift_beginAccess();
      v21 = *v20;
      v23 = (uint64_t)v33;
      v22 = (unint64_t)v34;
      v30[0] = v33;
      v30[1] = v34;
      v24 = v21;
      sub_2381D2684(v23, v22);
      sub_2381D26C8();
      v25 = v29[1];
      sub_23823884C();
      if (v25)
      {

        sub_2381D2640(v23, v22);
      }
      else
      {
        sub_2381D2640(v23, v22);

        v26 = *v20;
        v30[0] = 0;
        if ((objc_msgSend(v26, sel_synchronizeAndReturnError_, v30) & 1) != 0)
        {
          v27 = v30[0];
        }
        else
        {
          v28 = v30[0];
          sub_238238150();

          swift_willThrow();
        }
      }
      return sub_2381D2640(v23, v22);
    }
  }
  return result;
}

_BYTE *sub_2381D18D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _BYTE *result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void **v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47[2];
  uint64_t v48;
  unint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;

  v43 = a5;
  v44 = a1;
  v45 = a2;
  v52 = *MEMORY[0x24BDAC8D0];
  v42 = sub_238238000();
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_238238648();
  v8 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23823830C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_238204BB4();
  result = (_BYTE *)swift_beginAccess();
  if (*v15 == 1)
  {
    result = sub_238204D68();
    if (*result == 1)
    {
      v39 = v5;
      v40 = v6;
      v48 = 0;
      v49 = 0xE000000000000000;
      sub_238238A20();
      swift_bridgeObjectRelease();
      v48 = 40;
      v49 = 0xE100000000000000;
      sub_2382382DC();
      sub_238238294();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      sub_2382386B4();
      swift_bridgeObjectRelease();
      sub_2382386B4();
      sub_2382386B4();
      sub_2382386B4();
      sub_23823863C();
      v17 = sub_238238618();
      v19 = v18;
      swift_bridgeObjectRelease();
      v20 = *(void (**)(char *, uint64_t))(v8 + 8);
      v20(v10, v46);
      if (v19 >> 60 == 15)
      {
        sub_2381D25E8();
        swift_allocError();
        return (_BYTE *)swift_willThrow();
      }
      else
      {
        v45 = v17;
        v50 = (void *)v17;
        v51 = (void *)v19;
        sub_238238030();
        swift_allocObject();
        sub_238238024();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76D8);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_238239E40;
        sub_238237FF4();
        v48 = v21;
        sub_2381D49C0(&qword_2568E76E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76E8);
        sub_2381D29E0((unint64_t *)&qword_2568E76F0, &qword_2568E76E8);
        sub_238238990();
        sub_23823800C();
        v48 = v43;
        sub_2381D270C();
        swift_bridgeObjectRetain();
        v22 = v40;
        v23 = sub_238238018();
        if (v22)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return (_BYTE *)sub_2381D262C(v45, v19);
        }
        else
        {
          v25 = v23;
          v26 = v24;
          swift_bridgeObjectRelease();
          sub_238238288();
          sub_23823863C();
          v27 = sub_238238618();
          v29 = v28;
          result = (_BYTE *)((uint64_t (*)(char *, uint64_t))v20)(v10, v46);
          if (v29 >> 60 == 15)
          {
            __break(1u);
          }
          else
          {
            sub_238238288();
            sub_2381D262C(v27, v29);
            v30 = (void **)(v39 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
            swift_beginAccess();
            v31 = *v30;
            v33 = (uint64_t)v50;
            v32 = (unint64_t)v51;
            v47[0] = v50;
            v47[1] = v51;
            v34 = v31;
            sub_2381D2684(v33, v32);
            sub_2381D26C8();
            sub_23823884C();
            sub_2381D2640(v33, v32);

            v35 = *v30;
            v47[0] = 0;
            if (objc_msgSend(v35, sel_synchronizeAndReturnError_, v47))
            {
              v36 = v47[0];
              sub_2381D2640(v33, v32);
              sub_2381D2640(v25, v26);
              return (_BYTE *)swift_release();
            }
            else
            {
              v37 = v47[0];
              sub_238238150();

              swift_willThrow();
              sub_2381D2640(v25, v26);
              swift_release();
              return (_BYTE *)sub_2381D2640(v33, v32);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2381D1E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381D1E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_2381D4930(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_2381D1EC8()
{
  sub_2381D289C();
  return sub_238238D68();
}

uint64_t sub_2381D1EF0()
{
  sub_2381D289C();
  return sub_238238D74();
}

uint64_t sub_2381D1F18(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7820);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381D289C();
  sub_238238D50();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
  sub_2381D28E0();
  sub_238238BD0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2381D201C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2381D1F18(a1, *v1);
}

uint64_t sub_2381D2034(uint64_t a1, uint64_t a2)
{
  return sub_2381D217C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_2381D2040(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2382385F4();
  *a2 = 0;
  return result;
}

uint64_t sub_2381D20B4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_238238600();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2381D2130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23823860C();
  v2 = sub_2382385E8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2381D2170(uint64_t a1, uint64_t a2)
{
  return sub_2381D217C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2381D217C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23823860C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2381D21B8()
{
  sub_23823860C();
  sub_238238684();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2381D21F8()
{
  uint64_t v0;

  sub_23823860C();
  sub_238238CE4();
  sub_238238684();
  v0 = sub_238238D08();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2381D2268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23823860C();
  v2 = v1;
  if (v0 == sub_23823860C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2381D22F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2382385E8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2381D2334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23823860C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2381D235C()
{
  sub_2381D49C0(&qword_2568E78F8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23823A6B8);
  sub_2381D49C0((unint64_t *)&unk_2568E7900, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23823A678);
  return sub_238238B28();
}

uint64_t sub_2381D23E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B8);
  v10 = *(_QWORD *)(sub_238238210() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_238238AD4();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_238238210() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2381D43F4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_2381D25E8()
{
  unint64_t result;

  result = qword_2568E76C8;
  if (!qword_2568E76C8)
  {
    result = MEMORY[0x23B82FD68](&unk_238239F50, &type metadata for TransparencyLog.WriteError);
    atomic_store(result, (unint64_t *)&qword_2568E76C8);
  }
  return result;
}

uint64_t sub_2381D262C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2381D2640(a1, a2);
  return a1;
}

uint64_t sub_2381D2640(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2381D2684(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_2381D26C8()
{
  unint64_t result;

  result = qword_2568E76D0;
  if (!qword_2568E76D0)
  {
    result = MEMORY[0x23B82FD68](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2568E76D0);
  }
  return result;
}

unint64_t sub_2381D270C()
{
  unint64_t result;

  result = qword_2568EA698[0];
  if (!qword_2568EA698[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823A040, &type metadata for TransparencyLog.JustEvents);
    atomic_store(result, qword_2568EA698);
  }
  return result;
}

unint64_t sub_2381D2754()
{
  unint64_t result;

  result = qword_2568E76F8;
  if (!qword_2568E76F8)
  {
    result = MEMORY[0x23B82FD68](&unk_238239E78, &type metadata for TransparencyLog.WriteError);
    atomic_store(result, (unint64_t *)&qword_2568E76F8);
  }
  return result;
}

uint64_t sub_2381D279C()
{
  return type metadata accessor for TransparencyLog();
}

uint64_t type metadata accessor for TransparencyLog()
{
  uint64_t result;

  result = qword_2568EA9A0;
  if (!qword_2568EA9A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381D27E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransparencyLog.WriteError()
{
  return &type metadata for TransparencyLog.WriteError;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents()
{
  return &type metadata for TransparencyLog.JustEvents;
}

unint64_t sub_2381D289C()
{
  unint64_t result;

  result = qword_2568EAA30[0];
  if (!qword_2568EAA30[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823A22C, &type metadata for TransparencyLog.JustEvents.CodingKeys);
    atomic_store(result, qword_2568EAA30);
  }
  return result;
}

unint64_t sub_2381D28E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2568E7830;
  if (!qword_2568E7830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E79D0);
    v2 = sub_2381D49C0((unint64_t *)&qword_2568E7838, (uint64_t (*)(uint64_t))type metadata accessor for ServiceEventValue, (uint64_t)&unk_23823A378);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2568E7830);
  }
  return result;
}

uint64_t sub_2381D2964(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2381D299C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2381D29C0()
{
  return sub_2381D1244();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2381D29E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2381D2A20()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2381D2A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2381CB914;
  v3[2] = v2;
  return swift_task_switch();
}

void type metadata accessor for URLResourceKey()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2568E78D8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2568E78D8);
  }
}

uint64_t sub_2381D2B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381D2B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381D2B90(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_238238210();
  v159 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v155 = (char *)&v138 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v154 = (char *)&v138 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v142 = (char *)&v138 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v149 = (char *)&v138 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v144 = (char *)&v138 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  result = sub_238238BDC();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      return sub_2381D3728(0, v20, 1, v158);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = result;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x24BEE4AF8];
    v26 = MEMORY[0x24BEE4AF8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x24BEE4AF8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_2381D39F0(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_2381D41D0((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_238238780();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x24BEE4AF8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_238238180();
    v37 = v36;
    if (v35 == sub_238238180() && v37 == v38)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_238238C0C();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_238238180();
        v48 = v47;
        if (v46 == sub_238238180() && v48 == v49)
          v50 = 0;
        else
          v50 = sub_238238C0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_2381D3FCC(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_2381D3FCC((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_2381D39F0(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_238238180();
          v72 = v71;
          if (v70 == sub_238238180() && v72 == v73)
            break;
          v74 = sub_238238C0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_238238AD4();
  __break(1u);
  return result;
}

uint64_t sub_2381D3728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_238238210();
  v38 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v29 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      v32(v39, v41 + v16 + *v37, v6);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_238238180();
      v22 = v21;
      if (v20 == sub_238238180() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v24 = sub_238238C0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      result = ((uint64_t (*)(char *, uint64_t))v25)(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = v26 + v34 + v16;
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2381D39F0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_238238210();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v54 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v54 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_238238180();
          v45 = v44;
          if (v43 == sub_238238180() && v45 == v46)
            v47 = 0;
          else
            v47 = sub_238238C0C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_2381D40C4(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v15, a4, v8);
        v27 = sub_238238180();
        v29 = v28;
        if (v27 == sub_238238180() && v29 == v30)
          break;
        v32 = sub_238238C0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v15, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v15, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

char *sub_2381D3FCC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2381D40C4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_238238210();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_238238B1C();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2381D41D0(uint64_t a1)
{
  return sub_2381D3FCC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2381D41E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2381D4200(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2381D4200(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B8);
  v10 = *(_QWORD *)(sub_238238210() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_238238210() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381D43E0(unint64_t a1)
{
  return sub_2381D23E0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_2381D43F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_238238210() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381D450C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78C0);
    v3 = sub_238238A14();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_23823860C();
      sub_238238CE4();
      v7 = v6;
      sub_238238684();
      v8 = sub_238238D08();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_23823860C();
        v17 = v16;
        if (v15 == sub_23823860C() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_238238C0C();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_23823860C();
          v24 = v23;
          if (v22 == sub_23823860C() && v24 == v25)
            goto LABEL_3;
          v27 = sub_238238C0C();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t _s19CloudTelemetryTools15TransparencyLogC10WriteErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2381D4778 + 4 * byte_238239E60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2381D4798 + 4 * byte_238239E65[v4]))();
}

_BYTE *sub_2381D4778(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2381D4798(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381D47A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381D47A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2381D47B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2381D47B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents.CodingKeys()
{
  return &type metadata for TransparencyLog.JustEvents.CodingKeys;
}

unint64_t sub_2381D47D8()
{
  unint64_t result;

  result = qword_2568EAB40[0];
  if (!qword_2568EAB40[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823A130, &type metadata for TransparencyLog.JustEvents.CodingKeys);
    atomic_store(result, qword_2568EAB40);
  }
  return result;
}

uint64_t sub_2381D481C()
{
  return sub_2381D49C0(&qword_2568E78E0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23823A170);
}

uint64_t sub_2381D4848()
{
  return sub_2381D49C0(&qword_2568E78E8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23823A640);
}

uint64_t sub_2381D4874()
{
  return sub_2381D49C0(&qword_2568E78F0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23823A1B0);
}

unint64_t sub_2381D48A4()
{
  unint64_t result;

  result = qword_2568EADD0;
  if (!qword_2568EADD0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A0A0, &type metadata for TransparencyLog.JustEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568EADD0);
  }
  return result;
}

unint64_t sub_2381D48EC()
{
  unint64_t result;

  result = qword_2568EADD8[0];
  if (!qword_2568EADD8[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823A0C8, &type metadata for TransparencyLog.JustEvents.CodingKeys);
    atomic_store(result, qword_2568EADD8);
  }
  return result;
}

uint64_t sub_2381D4930(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_238238C0C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2381D49AC()
{
  return 0x73746E657665;
}

uint64_t sub_2381D49C0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B82FD68](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2381D4A00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v2 = v1;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_2381D75CC(v5, (uint64_t)sub_2381D7560, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *(_QWORD *)(v2 + 16) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2381D4A94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  BOOL v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t v60;
  int64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  __int128 v71;
  _OWORD v72[2];
  id v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[40];
  uint64_t v77;

  v3 = v2;
  v6 = type metadata accessor for ServiceEventValue();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (int64_t *)((char *)&v59 - v14);
  sub_2381CCC94(a1, (uint64_t)v76);
  if (swift_dynamicCast())
  {
    v15 = v74;
    *a2 = v73;
    a2[1] = v15;
    goto LABEL_16;
  }
  v67 = v13;
  v68 = v7;
  sub_2381D2964(0, (unint64_t *)&qword_2568E7AF0);
  if (swift_dynamicCast())
  {
    v16 = v73;
    if (*MEMORY[0x24BDBD270])
      v17 = v73 == (id)*MEMORY[0x24BDBD270];
    else
      v17 = 0;
    if (v17)
    {

      *(_BYTE *)a2 = 1;
      goto LABEL_16;
    }
    v18 = (id)*MEMORY[0x24BDBD268];

    if (v18)
    {
      if (v16 == v18)
      {
        *(_BYTE *)a2 = 0;
        goto LABEL_16;
      }
    }
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AF8);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B00);
    if (!swift_dynamicCast())
    {
      sub_2381D9884();
      swift_allocError();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
    }
    v69 = a2;
    v53 = v71;
    v54 = (_QWORD *)sub_2381D85F4(0, *(_QWORD *)(v71 + 16), 0, MEMORY[0x24BEE4AF8]);
    v55 = *(_QWORD *)(v53 + 16);
    if (v55)
    {
      v56 = v53 + 32;
      while (1)
      {
        sub_2381CCC94(v56, (uint64_t)&v73);
        sub_2381D4A94(&v73);
        if (v2)
          break;
        v58 = v54[2];
        v57 = v54[3];
        if (v58 >= v57 >> 1)
          v54 = (_QWORD *)sub_2381D85F4(v57 > 1, v58 + 1, 1, v54);
        v54[2] = v58 + 1;
        sub_2381D7FE8((uint64_t)v10, (uint64_t)v54+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v58);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v73);
        v56 += 32;
        if (!--v55)
          goto LABEL_74;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
    }
LABEL_74:
    swift_bridgeObjectRelease();
    *v69 = v54;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
  }
  v20 = v77;
  v21 = (_QWORD *)sub_2382385A0();
  v22 = 0;
  v23 = *(_QWORD *)(v20 + 64);
  v60 = v20 + 64;
  v63 = v20;
  v24 = 1 << *(_BYTE *)(v20 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v62 = v72;
  v64 = &v75;
  v61 = (unint64_t)(v24 + 63) >> 6;
  v59 = v61 - 1;
  v27 = (uint64_t)v67;
  v28 = (uint64_t)v69;
  while (1)
  {
    if (v26)
    {
      v66 = (v26 - 1) & v26;
      v29 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_28;
    }
    v33 = v22 + 1;
    if (__OFADD__(v22, 1))
      goto LABEL_78;
    if (v33 < v61)
    {
      v34 = *(_QWORD *)(v60 + 8 * v33);
      if (v34)
        goto LABEL_32;
      v22 += 2;
      if (v33 + 1 >= v61)
      {
        v22 = v33;
        goto LABEL_37;
      }
      v34 = *(_QWORD *)(v60 + 8 * v22);
      if (v34)
      {
        ++v33;
        goto LABEL_32;
      }
      if (v33 + 2 < v61)
        break;
    }
LABEL_37:
    v66 = 0;
    memset(v72, 0, sizeof(v72));
    v71 = 0u;
LABEL_38:
    sub_2381DA248((uint64_t)&v71, (uint64_t)&v73, &qword_2568E7B08);
    v35 = v74;
    if (!v74)
    {
      swift_release();
      *a2 = v21;
      goto LABEL_16;
    }
    v36 = v3;
    v37 = v6;
    v38 = (uint64_t)v73;
    sub_2381DA230(v64, &v71);
    sub_2381D4A94(&v71);
    v65 = v36;
    if (v36)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v71);
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
    }
    sub_2381D7FE8(v28, v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70 = v21;
    v41 = sub_2381CC2AC(v38, v35);
    v42 = v21[2];
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    v45 = v40;
    if (v21[3] >= v44)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v21 = v70;
        if ((v40 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        sub_2381D802C();
        v21 = v70;
        if ((v45 & 1) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_2381D7980(v44, isUniquelyReferenced_nonNull_native);
      v46 = sub_2381CC2AC(v38, v35);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_80;
      v41 = v46;
      v21 = v70;
      if ((v45 & 1) != 0)
      {
LABEL_24:
        v27 = (uint64_t)v67;
        sub_2381DA1A4((uint64_t)v67, v21[7] + *(_QWORD *)(v68 + 72) * v41);
        goto LABEL_25;
      }
    }
    v21[(v41 >> 6) + 8] |= 1 << v41;
    v48 = (uint64_t *)(v21[6] + 16 * v41);
    *v48 = v38;
    v48[1] = v35;
    v27 = (uint64_t)v67;
    sub_2381D7FE8((uint64_t)v67, v21[7] + *(_QWORD *)(v68 + 72) * v41);
    v49 = v21[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_77;
    v21[2] = v51;
    swift_bridgeObjectRetain();
LABEL_25:
    v6 = v37;
    v28 = (uint64_t)v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v71);
    v3 = v65;
    v26 = v66;
  }
  v34 = *(_QWORD *)(v60 + 8 * (v33 + 2));
  if (v34)
  {
    v33 += 2;
    goto LABEL_32;
  }
  v52 = v33 + 3;
  if (v33 + 3 >= v61)
  {
    v22 = v33 + 2;
    goto LABEL_37;
  }
  v34 = *(_QWORD *)(v60 + 8 * v52);
  if (v34)
  {
    v33 += 3;
LABEL_32:
    v66 = (v34 - 1) & v34;
    v29 = __clz(__rbit64(v34)) + (v33 << 6);
    v22 = v33;
LABEL_28:
    v30 = *(_QWORD *)(v63 + 56);
    v31 = (_QWORD *)(*(_QWORD *)(v63 + 48) + 16 * v29);
    v32 = v31[1];
    *(_QWORD *)&v71 = *v31;
    *((_QWORD *)&v71 + 1) = v32;
    sub_2381CCC94(v30 + 32 * v29, (uint64_t)v62);
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  while (1)
  {
    v33 = v52 + 1;
    if (__OFADD__(v52, 1))
      break;
    if (v33 >= v61)
    {
      v22 = v59;
      goto LABEL_37;
    }
    v34 = *(_QWORD *)(v60 + 8 * v33);
    ++v52;
    if (v34)
      goto LABEL_32;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_2381D52A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_2381D8E68(a2);
  if (v2)
    return v4;
  else
    return a1;
}

uint64_t sub_2381D52F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for ServiceEventValue();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v16 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_2381D9630(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381D9630(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381D913C((uint64_t)v10, (uint64_t)v7);
        v16 = v15;
        sub_2381CCA1C((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381CCA1C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        v18 = v14-- != 0;
        if ((v16 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v18);
    }
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_2381D5430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BOOL8 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  int64_t v53;

  v4 = type metadata accessor for ServiceEventValue();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v51 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (int64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v11);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = (int64_t *)((char *)&v46 - v15);
  v53 = 0;
  v49 = a1;
  v50 = v9;
  v16 = *(_QWORD *)(a1 + 64);
  v47 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v48 = (unint64_t)(v17 + 63) >> 6;
  v46 = v48 - 1;
  v20 = (uint64_t *)&unk_2568E79F0;
  v21 = (uint64_t)v9;
  while (1)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v23 = v22 | (v53 << 6);
LABEL_8:
      v24 = *(_QWORD *)(v49 + 56);
      v25 = (_QWORD *)(*(_QWORD *)(v49 + 48) + 16 * v23);
      v26 = v25[1];
      *v13 = *v25;
      v13[1] = v26;
      v27 = v24 + *(_QWORD *)(v5 + 72) * v23;
      v28 = __swift_instantiateConcreteTypeFromMangledName(v20);
      sub_2381D9630(v27, (uint64_t)v13 + *(int *)(v28 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 0, 1, v28);
      swift_bridgeObjectRetain();
      v29 = v52;
      goto LABEL_30;
    }
    v30 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v29 = v52;
    if (v30 < v48)
    {
      v31 = *(_QWORD *)(v47 + 8 * v30);
      if (v31)
        goto LABEL_12;
      v32 = v53 + 2;
      ++v53;
      if (v30 + 1 < v48)
      {
        v31 = *(_QWORD *)(v47 + 8 * v32);
        if (v31)
          goto LABEL_15;
        v53 = v30 + 1;
        if (v30 + 2 < v48)
        {
          v31 = *(_QWORD *)(v47 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          v53 = v30 + 2;
          if (v30 + 3 < v48)
          {
            v31 = *(_QWORD *)(v47 + 8 * (v30 + 3));
            if (v31)
            {
              v30 += 3;
              goto LABEL_12;
            }
            v32 = v30 + 4;
            v53 = v30 + 3;
            if (v30 + 4 < v48)
              break;
          }
        }
      }
    }
LABEL_29:
    v33 = __swift_instantiateConcreteTypeFromMangledName(v20);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 1, 1, v33);
    v19 = 0;
LABEL_30:
    sub_2381DA248((uint64_t)v13, (uint64_t)v29, &qword_2568E79D8);
    v34 = __swift_instantiateConcreteTypeFromMangledName(v20);
    v35 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v29, 1, v34);
    v36 = v35 == 1;
    if (v35 == 1)
      return v36;
    v37 = v20;
    v38 = (uint64_t)v29 + *(int *)(v34 + 48);
    v39 = v29;
    v40 = *v29;
    v41 = v39[1];
    sub_2381D7FE8(v38, v21);
    v42 = sub_2381CC2AC(v40, v41);
    LOBYTE(v40) = v43;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      sub_2381CCA1C(v21, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      return 0;
    }
    v44 = v51;
    sub_2381D9630(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v42, v51, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    v45 = sub_2381D913C(v44, v21);
    sub_2381CCA1C(v44, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    result = sub_2381CCA1C(v21, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    v20 = v37;
    if ((v45 & 1) == 0)
      return v36;
  }
  v31 = *(_QWORD *)(v47 + 8 * v32);
  if (v31)
  {
LABEL_15:
    v30 = v32;
LABEL_12:
    v19 = (v31 - 1) & v31;
    v23 = __clz(__rbit64(v31)) + (v30 << 6);
    v53 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v48)
    {
      v53 = v46;
      goto LABEL_29;
    }
    v31 = *(_QWORD *)(v47 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_2381D584C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t (*v15)();
  void *v16;
  int64_t count;
  _QWORD *v18;
  size_t isUniquelyReferenced_nonNull_native;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char isEscapingClosureAtFileLocation;
  xpc_object_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;
  unint64_t v37;

  v4 = type metadata accessor for XPCObject();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ServiceEventValue();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2381D9630(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      *v10 = *v6;
      goto LABEL_7;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      *(_QWORD *)v10 = *(_QWORD *)v6;
      goto LABEL_7;
    case 8u:
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      v12 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v6;
      *((_QWORD *)v10 + 1) = v12;
      goto LABEL_7;
    case 9u:
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      v13 = sub_238238360();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v6, v13);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      v14 = 0;
      v15 = 0;
      break;
    case 0xBu:
      v16 = *(void **)v6;
      count = xpc_array_get_count(*(xpc_object_t *)v6);
      v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || count > v18[3] >> 1)
      {
        if (v18[2] <= count)
          v20 = count;
        else
          v20 = v18[2];
        v18 = (_QWORD *)sub_2381D85F4(isUniquelyReferenced_nonNull_native, v20, 0, v18);
      }
      v37 = (unint64_t)v18;
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = &v37;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = sub_2381D970C;
      *(_QWORD *)(v22 + 24) = v21;
      v35 = sub_2381DA294;
      v36 = v22;
      aBlock = MEMORY[0x24BDAC760];
      v32 = 1107296256;
      v33 = sub_2381D5F98;
      v34 = &block_descriptor_12;
      v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      xpc_array_apply(v16, v23);
      _Block_release(v23);
      swift_unknownObjectRelease();
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x2381D5DC4);
      }
      *(_QWORD *)v10 = v37;
      swift_storeEnumTagMultiPayload();
      v15 = 0;
      v14 = sub_2381D970C;
      break;
    case 0xCu:
      v25 = *(xpc_object_t *)v6;
      v37 = sub_2381D5F9C(MEMORY[0x24BEE4AF8]);
      xpc_dictionary_get_count(v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
      sub_2382385AC();
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = &v37;
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_2381D9684;
      *(_QWORD *)(v27 + 24) = v26;
      v35 = sub_2381D96B0;
      v36 = v27;
      aBlock = MEMORY[0x24BDAC760];
      v32 = 1107296256;
      v33 = sub_2381D5F98;
      v34 = &block_descriptor_0;
      v28 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      xpc_dictionary_apply(v25, v28);
      _Block_release(v28);
      swift_unknownObjectRelease_n();
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      v29 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v29 & 1) != 0)
        goto LABEL_21;
      *(_QWORD *)v10 = v37;
      swift_storeEnumTagMultiPayload();
      v14 = 0;
      v15 = sub_2381D9684;
      break;
    default:
      sub_2381CCA1C(a1, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      sub_2381CCA1C((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  }
  sub_2381D7FE8((uint64_t)v10, a2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  sub_2381D96EC((uint64_t)v14);
  return sub_2381D96EC((uint64_t)v15);
}

uint64_t sub_2381D5DF0(uint64_t a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v9, (uint64_t)v5);
  v10 = type metadata accessor for XPCObject();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2381D584C(v5);
  v12 = type metadata accessor for ServiceEventValue();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v14 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = (_QWORD *)sub_2381D85F4(0, v14[2] + 1, 1, v14);
    *a2 = v14;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    v14 = (_QWORD *)sub_2381D85F4(v16 > 1, v17 + 1, 1, v14);
    *a2 = v14;
  }
  v14[2] = v17 + 1;
  return sub_2381D7FE8((uint64_t)v8, (uint64_t)v14+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v17);
}

unint64_t sub_2381D5F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90A0);
  v6 = sub_238238B10();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2381DA1E8(v12, (uint64_t)v5);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2381CC2AC(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for ServiceEventValue();
    result = sub_2381D7FE8(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2381D612C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for ServiceEventValue();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2382386C0();
  v15 = v14;
  v16 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v16, (uint64_t)v2);
  v17 = type metadata accessor for XPCObject();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v2, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_2381D584C(v2);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    if ((_DWORD)result != 1)
    {
      sub_2381D7FE8((uint64_t)v8, (uint64_t)v12);
      sub_2381D9630((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      sub_2381D6308((uint64_t)v6, v13, v15);
      return sub_2381CCA1C((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2381D6308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ServiceEventValue();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_2381CCCD0(a1, (uint64_t *)&unk_2568E7500);
    sub_2381D8410(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_2381CCCD0((uint64_t)v10, (uint64_t *)&unk_2568E7500);
  }
  else
  {
    sub_2381D7FE8(a1, (uint64_t)v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_2381D8964((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2381D6468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_2381D64B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2381D64E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_2381D64EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_238238BE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2381D6530()
{
  sub_2381D973C();
  return sub_238238D68();
}

uint64_t sub_2381D6558()
{
  sub_2381D973C();
  return sub_238238D74();
}

void sub_2381D6580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  _QWORD v10[6];
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79E0);
  v10[2] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238238360();
  v10[3] = *(_QWORD *)(v3 - 8);
  v10[4] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for ServiceEventValue();
  v10[5] = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  sub_2381D9630(v13, (uint64_t)v10 - v7, v8);
  v13 = v4;
  v9 = (char *)&loc_2381D6724 + *((int *)qword_2381D6D80 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_2381D6734()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_238238D44();
  __swift_mutable_project_boxed_opaque_existential_1(v1 - 120, *(_QWORD *)(v1 - 96));
  sub_238238C30();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(v1 - 120);
}

void sub_2381D6DA0()
{
  sub_2381D6580();
}

unint64_t sub_2381D6DB4()
{
  return 0xD000000000000021;
}

void sub_2381D6DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  char *v12;
  _QWORD v13[12];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v13[8] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v13[7] = (char *)v13 - v4;
  v5 = sub_238238360();
  MEMORY[0x24BDAC7A8](v5);
  v6 = type metadata accessor for ServiceEventValue();
  v13[6] = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v13[10] = (char *)v13 - v9;
  MEMORY[0x24BDAC7A8](v8);
  sub_2381D9630(v0, (uint64_t)v13 - v10, v11);
  v12 = (char *)&loc_2381D6F2C + *((int *)qword_2381D7540 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_2381D6F3C()
{
  uint64_t v0;

  v0 = sub_2382385E8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2381D7560@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0) + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v7 = *a1;
  v6 = a1[1];
  sub_2381D9630(v4, (uint64_t)a2 + *(int *)(v5 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2381D75CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int i;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t result;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v10 = type metadata accessor for ServiceEventValue();
  v58 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v50 = (uint64_t)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t)v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v48 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7B10);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v51 = a1;
  v52 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v53 = v21;
  v54 = 0;
  v55 = v24 & v22;
  v56 = a2;
  v57 = a3;
  v48[1] = a1;
  swift_bridgeObjectRetain();
  v48[0] = a3;
  swift_retain();
  sub_2381D8B20((uint64_t)v19);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  for (i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25);
        ;
        i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_2381DA240();
      return swift_release();
    }
    v32 = *v19;
    v31 = v19[1];
    sub_2381D7FE8((uint64_t)v19 + *(int *)(v25 + 48), (uint64_t)v16);
    v33 = *(_QWORD **)a5;
    v35 = sub_2381CC2AC(v32, v31);
    v36 = v33[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (v33[3] >= v38)
    {
      if ((a4 & 1) != 0)
      {
        v42 = *(_QWORD **)a5;
        if ((v34 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_2381D802C();
        v42 = *(_QWORD **)a5;
        if ((v39 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_2381D7980(v38, a4 & 1);
      v40 = sub_2381CC2AC(v32, v31);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_22;
      v35 = v40;
      v42 = *(_QWORD **)a5;
      if ((v39 & 1) != 0)
      {
LABEL_5:
        v27 = *(_QWORD *)(v58 + 72) * v35;
        v28 = v42[7] + v27;
        v29 = v50;
        sub_2381D9630(v28, v50, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        v30 = v49;
        sub_2381D9630(v29, v49, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381CCA1C(v29, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381CCA1C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        swift_bridgeObjectRelease();
        sub_2381DA1A4(v30, *(_QWORD *)(*(_QWORD *)a5 + 56) + v27);
        goto LABEL_6;
      }
    }
    v42[(v35 >> 6) + 8] |= 1 << v35;
    v43 = (uint64_t *)(v42[6] + 16 * v35);
    *v43 = v32;
    v43[1] = v31;
    sub_2381D7FE8((uint64_t)v16, v42[7] + *(_QWORD *)(v58 + 72) * v35);
    v44 = v42[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_21;
    v42[2] = v46;
LABEL_6:
    sub_2381D8B20((uint64_t)v19);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ServiceEventValue()
{
  uint64_t result;

  result = qword_2568EB260;
  if (!qword_2568EB260)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381D7980(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v40 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90A0);
  v41 = a2;
  v8 = sub_238238B04();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v37 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v39 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v38 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v38)
          goto LABEL_34;
        v22 = v39[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v38)
            goto LABEL_34;
          v22 = v39[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v41 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v7 + 32);
                if (v36 >= 64)
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v36;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v38)
                  goto LABEL_34;
                v22 = v39[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v40 + 72);
      v28 = *(_QWORD *)(v7 + 56) + v27 * v20;
      if ((v41 & 1) != 0)
      {
        sub_2381D7FE8(v28, (uint64_t)v6);
      }
      else
      {
        sub_2381D9630(v28, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        swift_bridgeObjectRetain();
      }
      sub_238238CE4();
      sub_238238684();
      result = sub_238238D08();
      v29 = -1 << *(_BYTE *)(v9 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v14 + 8 * v31);
        }
        while (v35 == -1);
        v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v26;
      v18[1] = v25;
      result = sub_2381D7FE8((uint64_t)v6, *(_QWORD *)(v9 + 56) + v27 * v17);
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_2381D7CDC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AB8);
  v38 = a2;
  v6 = sub_238238B04();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_238238CE4();
    sub_238238684();
    result = sub_238238D08();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2381D7FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_2381D802C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v29 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90A0);
  v4 = *v0;
  v5 = sub_238238AF8();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v6;
    return result;
  }
  v27 = v1;
  result = (void *)(v5 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  v28 = v4 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v11 = 1 << *(_BYTE *)(v4 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v4 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_2381D9630(*(_QWORD *)(v4 + 56) + v21, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    v22 = (_QWORD *)(*(_QWORD *)(v6 + 48) + v17);
    *v22 = v20;
    v22[1] = v19;
    sub_2381D7FE8((uint64_t)v3, *(_QWORD *)(v6 + 56) + v21);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2381D8260()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AB8);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2381D8410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2381CC2AC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2381D802C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for ServiceEventValue();
    v14 = *(_QWORD *)(v13 - 8);
    sub_2381D7FE8(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_2381D8768(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ServiceEventValue();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_2381D8538(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_238238AEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x23B82F378](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

size_t sub_2381D85F4(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  unint64_t v16;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AD0);
  v10 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_29;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  if ((v5 & 1) != 0)
  {
    if (v13 < a4
      || (v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(_QWORD *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

unint64_t sub_2381D8768(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_238238CE4();
        swift_bridgeObjectRetain();
        sub_238238684();
        v9 = sub_238238D08();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ServiceEventValue() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2381D8964(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ServiceEventValue() - 8) + 72) * v12;
        return sub_2381DA1A4(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2381D802C();
      goto LABEL_7;
    }
    sub_2381D7980(v15, a4 & 1);
    v22 = sub_2381CC2AC(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2381D8A98(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_2381D8A98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for ServiceEventValue();
  result = sub_2381D7FE8(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_2381D8B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int64_t v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char **)((char *)&v40 - v11);
  v13 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v40 = v6;
  if (v18)
  {
    v44 = a1;
    v45 = v15;
    v41 = v16;
    v42 = v14;
    v43 = v10;
    v19 = v4;
    v20 = (v18 - 1) & v18;
    v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v13 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    v24 = v13;
    v26 = *v23;
    v25 = v23[1];
    v27 = type metadata accessor for ServiceEventValue();
    sub_2381D9630(v22 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v21, (uint64_t)v12 + *(int *)(v3 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    *v12 = v26;
    v12[1] = v25;
    v4 = v19;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v3);
    v13 = v24;
    swift_bridgeObjectRetain();
    v10 = v43;
    a1 = v44;
    v16 = v41;
    v14 = v42;
    goto LABEL_25;
  }
  v28 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v29 = (unint64_t)(v16 + 64) >> 6;
  if (v28 < v29)
  {
    v30 = *(_QWORD *)(v14 + 8 * v28);
    if (v30)
    {
LABEL_7:
      v41 = v16;
      v42 = v14;
      v43 = v10;
      v44 = a1;
      v19 = v4;
      v20 = (v30 - 1) & v30;
      v21 = __clz(__rbit64(v30)) + (v28 << 6);
      v45 = v28;
      goto LABEL_3;
    }
    v31 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v29)
    {
      v30 = *(_QWORD *)(v14 + 8 * v31);
      if (v30)
      {
LABEL_10:
        v28 = v31;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v29)
      {
        v30 = *(_QWORD *)(v14 + 8 * (v15 + 3));
        if (v30)
        {
          v28 = v15 + 3;
          goto LABEL_7;
        }
        v31 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v29)
        {
          v30 = *(_QWORD *)(v14 + 8 * v31);
          if (v30)
            goto LABEL_10;
          v28 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v29)
          {
            v30 = *(_QWORD *)(v14 + 8 * v28);
            if (v30)
              goto LABEL_7;
            v11 = v29 - 1;
            v32 = v15 + 6;
            while (v29 != v32)
            {
              v30 = *(_QWORD *)(v14 + 8 * v32++);
              if (v30)
              {
                v28 = v32 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v45 = v17;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v20 = 0;
LABEL_25:
  *v1 = v13;
  v1[1] = v14;
  v33 = v45;
  v1[2] = v16;
  v1[3] = v33;
  v1[4] = v20;
  v34 = (void (*)(uint64_t))v1[5];
  sub_2381DA248((uint64_t)v12, (uint64_t)v10, &qword_2568E79D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
  }
  else
  {
    v37 = (uint64_t)v10;
    v38 = (uint64_t)v40;
    sub_2381DA248(v37, (uint64_t)v40, (uint64_t *)&unk_2568E79F0);
    v34(v38);
    sub_2381CCCD0(v38, (uint64_t *)&unk_2568E79F0);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 0, 1, v39);
  }
}

uint64_t sub_2381D8E68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  id v19;
  _BYTE v20[32];
  uint64_t v21;

  v18[0] = a1;
  v21 = *MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for ServiceEventValue();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (_QWORD *)((char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_238238648();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23823863C();
  v8 = sub_238238618();
  v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    sub_2381D9884();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_238238258();
    v19 = 0;
    v14 = objc_msgSend(v12, sel_JSONObjectWithData_options_error_, v13, 0, &v19);

    v15 = v19;
    if (v14)
    {
      sub_238238984();
      swift_unknownObjectRelease();
      v16 = v18[1];
      sub_2381D4A94((uint64_t)v20, v3);
      if (v16)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        sub_2381D262C(v8, v10);
        return swift_bridgeObjectRelease();
      }
      else if (swift_getEnumCaseMultiPayload() == 7)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        sub_2381D262C(v8, v10);
        return v18[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_2381CCA1C((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        sub_2381D9884();
        swift_allocError();
        swift_willThrow();
        sub_2381D262C(v8, v10);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      }
    }
    else
    {
      v17 = v15;
      swift_bridgeObjectRelease();
      sub_238238150();

      swift_willThrow();
      return sub_2381D262C(v8, v10);
    }
  }
}

void sub_2381D913C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[6];
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v2 = sub_238238360();
  v19[2] = *(_QWORD *)(v2 - 8);
  v19[3] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v19[1] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ServiceEventValue();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v19[4] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v19[5] = (char *)v19 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v19 + *(int *)(v15 + 48) - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2381D9630(v20, (uint64_t)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  sub_2381D9630(v21, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  v18 = (char *)sub_2381D9330 + 4 * byte_23823A280[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2381D9330()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  sub_2381D9630(v0, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  v4 = *v2;
  v3 = v2[1];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_2381CCCD0(v0, &qword_2568E7AE8);
    goto LABEL_9;
  }
  if (v4 == *v1 && v3 == v1[1])
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v6 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_12:
    sub_2381CCA1C(v0, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    v7 = 1;
    return v7 & 1;
  }
  sub_2381CCA1C(v0, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
LABEL_9:
  v7 = 0;
  return v7 & 1;
}

uint64_t sub_2381D9630(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2381D9674()
{
  return swift_deallocObject();
}

uint64_t sub_2381D9684()
{
  sub_2381D612C();
  return 1;
}

uint64_t sub_2381D96A0()
{
  return swift_deallocObject();
}

uint64_t sub_2381D96B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_2381D96EC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2381D96FC()
{
  return swift_deallocObject();
}

uint64_t sub_2381D970C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2381D5DF0(a2, *(_QWORD ***)(v2 + 16));
  return 1;
}

uint64_t sub_2381D972C()
{
  return swift_deallocObject();
}

unint64_t sub_2381D973C()
{
  unint64_t result;

  result = qword_2568E79E8;
  if (!qword_2568E79E8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A2D8, &type metadata for ServiceEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E79E8);
  }
  return result;
}

unint64_t sub_2381D9780()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E7838;
  if (!qword_2568E7838)
  {
    v1 = type metadata accessor for ServiceEventValue();
    result = MEMORY[0x23B82FD68](&unk_23823A378, v1);
    atomic_store(result, (unint64_t *)&qword_2568E7838);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_2381D97F4()
{
  unint64_t result;

  result = qword_2568E7A08;
  if (!qword_2568E7A08)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A350, &type metadata for ServiceEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7A08);
  }
  return result;
}

unint64_t sub_2381D983C()
{
  unint64_t result;

  result = qword_2568E7A10;
  if (!qword_2568E7A10)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A328, &type metadata for ServiceEventValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7A10);
  }
  return result;
}

unint64_t sub_2381D9884()
{
  unint64_t result;

  result = qword_2568E7A18;
  if (!qword_2568E7A18)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A410, &type metadata for BadCachedEvent);
    atomic_store(result, (unint64_t *)&qword_2568E7A18);
  }
  return result;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

uint64_t destroy for CachedEvent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CachedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CachedEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for CachedEvent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachedEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachedEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachedEvent()
{
  return &type metadata for CachedEvent;
}

uint64_t *sub_2381D9A90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v10 = sub_238238360();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2381D9BC0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 6:
    case 7:
      result = swift_bridgeObjectRelease();
      break;
    case 5:
      v3 = sub_238238360();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_2381D9C40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      v7 = sub_238238360();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 6u:
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_2381D9D3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        v6 = sub_238238360();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_2381D9E58(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v6 = sub_238238360();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_2381D9EE4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v6 = sub_238238360();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2381D9FA4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2381D9FB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238360();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ServiceEventValue.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServiceEventValue.CodingKeys()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ServiceEventValue.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for ServiceEventValue.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceEventValue.CodingKeys()
{
  return &type metadata for ServiceEventValue.CodingKeys;
}

ValueMetadata *type metadata accessor for BadCachedEvent()
{
  return &type metadata for BadCachedEvent;
}

uint64_t sub_2381DA1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381DA1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_2381DA230(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2381DA240()
{
  return swift_release();
}

uint64_t sub_2381DA248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2381DA29C()
{
  NSString *v0;

  v0 = NSHomeDirectory();
  sub_23823860C();

  sub_238238174();
  return swift_bridgeObjectRelease();
}

BOOL sub_2381DA2F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2381DA310()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381DA354()
{
  return sub_238238CF0();
}

uint64_t sub_2381DA37C()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381DA3BC()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EB278);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EB278);
  return sub_238238438();
}

uint64_t DiskCache.__allocating_init(rootCacheURL:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2381DA494;
  return DiskCache.init(rootCacheURL:)(a1);
}

uint64_t sub_2381DA494(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t DiskCache.init(rootCacheURL:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t inited;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v21;
  char v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v1;
  v5 = v2;
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  v6 = (_QWORD *)(v2 + 160);
  type metadata accessor for SQLiteDB.Location();
  v7 = swift_task_alloc();
  v6[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B30);
  v45 = swift_task_alloc();
  v6[3] = v45;
  v8 = sub_238238210();
  v6[4] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v6[5] = v10;
  v44 = swift_task_alloc();
  v6[6] = v44;
  swift_defaultActor_initialize();
  sub_238205CB8(a1, (void *)0x636163746E657665, (void *)0xEB000000002F6568, v10);
  v43 = v3;
  sub_2382381A4();
  v41 = v9;
  v42 = v8;
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v5 + 216) = v11;
  v40 = v11;
  v11(v10, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v13 = (void *)*MEMORY[0x24BDBCC48];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC48];
  v14 = v13;
  sub_2381D450C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_238238168();
  v15 = v5;
  swift_bridgeObjectRelease();
  v16 = sub_238238114();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v45, 0, 1, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v45, 1, v16) == 1)
  {
    sub_2381DD17C(v45);
    v18 = v7;
LABEL_3:
    type metadata accessor for SQLiteDB();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v18, v44, v42);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v18, 0, 1, v42);
    *(_QWORD *)(v43 + 112) = sub_2381E50FC(v18);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v15 + 224) = v19;
    *v19 = v15;
    v19[1] = sub_2381DABB8;
    v19[3] = v43;
    return swift_task_switch();
  }
  v39 = sub_2382380FC();
  v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v45, v16);
  v18 = v7;
  if ((v22 & 1) != 0)
    goto LABEL_3;
  v23 = v6;
  v24 = sub_238204BB4();
  swift_beginAccess();
  v25 = (*v24 & 1) != 0 ? 0x140000000 : 3221225472;
  if (v39 <= v25)
    goto LABEL_3;
  v26 = v6 - 3;
  v27 = v6 - 1;
  if ((*sub_23820502C() & 1) != 0)
  {
    if (qword_2568EB270 != -1)
      swift_once();
    v28 = sub_238238444();
    __swift_project_value_buffer(v28, (uint64_t)qword_2568EB278);
    v29 = sub_23823842C();
    v30 = sub_23823887C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      *(_DWORD *)v31 = 134349312;
      *v26 = v39;
      sub_238238960();
      *(_WORD *)(v31 + 12) = 2050;
      swift_beginAccess();
      v32 = 3221225472;
      if (*v24)
        v32 = 0x140000000;
      *v27 = v32;
      sub_238238960();
      _os_log_impl(&dword_2381C6000, v29, v30, "cache size %{public}ld exceeded maximum %{public}ld - cache delete overridden", (uint8_t *)v31, 0x16u);
      MEMORY[0x23B82FE28](v31, -1, -1);
    }

    goto LABEL_3;
  }
  if (qword_2568EB270 != -1)
    swift_once();
  v33 = sub_238238444();
  __swift_project_value_buffer(v33, (uint64_t)qword_2568EB278);
  v34 = sub_23823842C();
  v35 = sub_23823887C();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    *(_DWORD *)v36 = 134349312;
    *(v23 - 2) = v39;
    sub_238238960();
    *(_WORD *)(v36 + 12) = 2050;
    swift_beginAccess();
    v37 = 3221225472;
    if (*v24)
      v37 = 0x140000000;
    *(v23 - 4) = v37;
    sub_238238960();
    _os_log_impl(&dword_2381C6000, v34, v35, "cache size %{public}ld exceeded maximum %{public}ld - deleting cache", (uint8_t *)v36, 0x16u);
    MEMORY[0x23B82FE28](v36, -1, -1);
  }

  sub_2381DD1BC();
  swift_allocError();
  *v38 = 1;
  swift_willThrow();
  v40(v44, v42);
  swift_defaultActor_destroy();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(a1, v42);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v15 + 8))();
}

uint64_t sub_2381DABB8(uint64_t a1)
{
  void *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v4 = (_QWORD *)*v2;
  v5 = (_QWORD *)*v2;
  swift_task_dealloc();
  if (v1)
  {

    a1 = 0;
LABEL_4:
    v6 = (_QWORD *)swift_task_alloc();
    v4[29] = v6;
    *v6 = v5;
    v6[1] = sub_2381DACD4;
    v7 = v4[21];
    v6[3] = a1;
    v6[4] = v7;
    return swift_task_switch();
  }
  if (a1 <= 8)
    goto LABEL_4;
  v9 = v4[26];
  v10 = (void (*)(uint64_t, uint64_t))v4[27];
  v11 = v4[24];
  v10(v4[20], v11);
  v10(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v5[1])(v4[21]);
}

uint64_t sub_2381DACD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 248) = *(_QWORD *)(*(_QWORD *)(v2 + 168) + 112);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(void (**)(uint64_t, uint64_t))(v2 + 216);
    v6 = *(_QWORD *)(v2 + 192);
    v5(*(_QWORD *)(v2 + 160), v6);
    v5(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 168));
  }
}

uint64_t sub_2381DADC4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 160);
  sub_2381E5528();
  swift_release();
  swift_willThrow();
  swift_release();
  v2(v1, v3);
  v2(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DiskCache.schemaVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2381DAE84()
{
  _QWORD *v0;
  uint64_t v1;

  v0[4] = *(_QWORD *)(v0[3] + 112);
  v1 = swift_task_alloc();
  v0[5] = v1;
  *(_QWORD *)(v1 + 16) = 0x6E6F6973726576;
  *(_QWORD *)(v1 + 24) = 0xE700000000000000;
  return swift_task_switch();
}

uint64_t sub_2381DAEE8()
{
  uint64_t v0;

  sub_2381E536C(0xD000000000000025, 0x800000023823E500, (void (*)(void))sub_2381DD200);
  *(_QWORD *)(v0 + 48) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2381DAF88()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *DiskCache.currentVersion.unsafeMutableAddressor()
{
  return &static DiskCache.currentVersion;
}

uint64_t sub_2381DAFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DAFE0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _BYTE *v5;

  if (*(_QWORD *)(v0 + 24))
  {
    if (qword_2568EB270 != -1)
      swift_once();
    v1 = sub_238238444();
    __swift_project_value_buffer(v1, (uint64_t)qword_2568EB278);
    v2 = sub_23823842C();
    v3 = sub_238238894();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_2381C6000, v2, v3, "unsupported prior database version - deleting disk cache", v4, 2u);
      MEMORY[0x23B82FE28](v4, -1, -1);
    }

    sub_2381DD1BC();
    swift_allocError();
    *v5 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112);
    return swift_task_switch();
  }
}

uint64_t sub_2381DB120()
{
  uint64_t v0;

  sub_2381E5514();
  *(_QWORD *)(v0 + 48) = 0;
  return swift_task_switch();
}

uint64_t sub_2381DB1A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v1[2] = 0x6E6F6973726576;
  v1[3] = 0xE700000000000000;
  v1[4] = 9;
  return swift_task_switch();
}

uint64_t sub_2381DB208()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_2381E536C(0xD000000000000060, 0x800000023823E9C0, (void (*)(void))sub_2381DE8FC);
  *(_QWORD *)(v0 + 64) = v1;
  if (!v1)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DB2A0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DB2D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2568EB270 != -1)
    swift_once();
  v1 = sub_238238444();
  __swift_project_value_buffer(v1, (uint64_t)qword_2568EB278);
  v2 = sub_23823842C();
  v3 = sub_238238894();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    *(_QWORD *)(v0 + 16) = 9;
    sub_238238960();
    _os_log_impl(&dword_2381C6000, v2, v3, "initialized disk cache with version %lld", v4, 0xCu);
    MEMORY[0x23B82FE28](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DB3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_238239E50;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = &off_2509F7E00;
  v10 = MEMORY[0x24BEE4008];
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = &off_2509F7DC0;
  *(_QWORD *)(v9 + 72) = a4;
  v11 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  swift_bridgeObjectRetain();
  v11(v9);
  result = swift_bridgeObjectRelease();
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

uint64_t sub_2381DB4C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DB4CC(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 40) = a6;
  *(_QWORD *)(v7 + 48) = v6;
  *(_QWORD *)(v7 + 32) = a2;
  *(double *)(v7 + 24) = a3;
  *(_QWORD *)(v7 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2381DB4F0()
{
  _QWORD *v0;
  uint64_t result;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  result = sub_2382382D0();
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    v3 = 0;
LABEL_6:
    v4 = sub_2381DD228(v0[5]);
    v0[7] = 0;
    v0[8] = v5;
    v6 = v4;
    v7 = v5;
    v8 = v0[3];
    v9 = v0[2];
    v0[9] = *(_QWORD *)(v0[6] + 112);
    v10 = (_QWORD *)swift_task_alloc();
    v0[10] = v10;
    v10[2] = v9;
    v10[3] = v8;
    v10[4] = v3;
    v10[5] = v6;
    v10[6] = v7;
    return swift_task_switch();
  }
  if (v2 <= -9.22337204e18)
  {
    __break(1u);
  }
  else if (v2 < 9.22337204e18)
  {
    v3 = (uint64_t)v2;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381DB5FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_2381E536C(0xD0000000000000C4, 0x800000023823E530, (void (*)(void))sub_2381DD5A0);
  *(_QWORD *)(v0 + 88) = v1;
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2381DB6A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DB6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_2381DB6FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[5];
  v1 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v0[7] = *(_QWORD *)(v1 + 112);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  v5[5] = v1;
  return swift_task_switch();
}

uint64_t sub_2381DB764()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B60);
  sub_2381E536C(0xD000000000000185, 0x800000023823E600, (void (*)(void))sub_2381DD734);
  *(_QWORD *)(v0 + 72) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DB80C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2381DB818()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DB84C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t result;
  _BYTE v21[24];
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v11 = swift_allocObject();
  v13 = a2[1];
  v23 = *a2;
  v12 = v23;
  *(_OWORD *)(v11 + 16) = xmmword_23823A4F0;
  *(_OWORD *)(v11 + 32) = v12;
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 64) = &off_2509F7E00;
  v22 = v13;
  *(_QWORD *)(v11 + 96) = v14;
  *(_QWORD *)(v11 + 104) = &off_2509F7E00;
  *(_OWORD *)(v11 + 72) = v13;
  *(_OWORD *)v21 = a2[2];
  *(_QWORD *)&v21[16] = *((_QWORD *)a2 + 6);
  v15 = MEMORY[0x24BEE1328];
  v16 = v21[0];
  *(_QWORD *)(v11 + 136) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v11 + 144) = &off_2509F7D80;
  *(_BYTE *)(v11 + 112) = v16;
  v17 = v21[1];
  *(_QWORD *)(v11 + 176) = v15;
  *(_QWORD *)(v11 + 184) = &off_2509F7D80;
  *(_BYTE *)(v11 + 152) = v17;
  *(_QWORD *)(v11 + 216) = v14;
  *(_QWORD *)(v11 + 224) = &off_2509F7E00;
  *(_OWORD *)(v11 + 192) = *(_OWORD *)&v21[8];
  v18 = MEMORY[0x24BEE4008];
  *(_QWORD *)(v11 + 256) = MEMORY[0x24BEE4008];
  *(_QWORD *)(v11 + 264) = &off_2509F7DC0;
  *(_QWORD *)(v11 + 232) = a3;
  *(_QWORD *)(v11 + 296) = v18;
  *(_QWORD *)(v11 + 304) = &off_2509F7DC0;
  *(_QWORD *)(v11 + 272) = a4;
  v19 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  sub_2381DDE94((uint64_t)&v23);
  sub_2381DDE94((uint64_t)&v22);
  sub_2381DE700((uint64_t)v21);
  v19(v11);
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    v24 = MEMORY[0x24BEE4AF8];
    MEMORY[0x24BDAC7A8](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(_QWORD *)a1 + 144))(sub_2381DE728);
    result = v24;
    *a5 = v24;
  }
  return result;
}

uint64_t sub_2381DB9F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBA10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v0[4] = *(_QWORD *)(v0[3] + 112);
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBA60()
{
  uint64_t v0;

  sub_2381E53D0((void (*)(uint64_t))sub_2381DD750);
  *(_QWORD *)(v0 + 48) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DBAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBAF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v0[5] = *(_QWORD *)(v0[4] + 112);
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBB48()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  sub_2381E536C(0xD000000000000045, 0x800000023823E790, (void (*)(void))sub_2381DD870);
  *(_QWORD *)(v0 + 56) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DBBF0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DBC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v7 = swift_allocObject();
  v8 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v7 + 16) = xmmword_238239E40;
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = &off_2509F7DA0;
  *(_QWORD *)(v7 + 32) = a2;
  (*(void (**)(void))(*(_QWORD *)a1 + 192))();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v10 = MEMORY[0x24BEE4AF8];
    MEMORY[0x24BDAC7A8](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(_QWORD *)a1 + 144))(sub_2381DE530);
    result = v10;
    *a3 = v10;
  }
  return result;
}

uint64_t sub_2381DBD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_2381DBD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 112);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_OWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBDB0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B88);
  sub_2381E536C(0xD000000000000091, 0x800000023823E7E0, (void (*)(void))sub_2381DD888);
  *(_QWORD *)(v0 + 72) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DBE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t result;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_238239E50;
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 64) = &off_2509F7E00;
  v12 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v11 + 32) = a2;
  *(_QWORD *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 104) = &off_2509F7DA0;
  *(_QWORD *)(v11 + 72) = a4;
  v13 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  swift_bridgeObjectRetain();
  v13(v11);
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    v15 = MEMORY[0x24BEE4AF8];
    MEMORY[0x24BDAC7A8](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(_QWORD *)a1 + 144))(sub_2381DE028);
    result = v15;
    *a5 = v15;
  }
  return result;
}

uint64_t sub_2381DBF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DBFB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v0[5] = *(_QWORD *)(v0[4] + 112);
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DC000()
{
  uint64_t v0;

  sub_2381E53D0((void (*)(uint64_t))sub_2381DD8A4);
  *(_QWORD *)(v0 + 56) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DC084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16) != 50)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DC0F8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[7];
  sub_2381E53D0((void (*)(uint64_t))sub_2381DD8A4);
  if (v1)
  {
    v0[9] = v0[8];
    v0[10] = v1;
  }
  else
  {
    v0[7] = 0;
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2381DC17C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DC1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v7 = sub_23823830C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(0xD00000000000004BLL, 0x800000023823EA90, sub_2381DDF1C, v11, MEMORY[0x24BEE4AE0] + 8);
  result = swift_release();
  if (!v3)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(result);
    *a3 = result;
  }
  return result;
}

uint64_t sub_2381DC2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2381DC300()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v0[5] = *(_QWORD *)(v0[4] + 112);
  v2 = swift_task_alloc();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DC350()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7BA0);
  sub_2381E536C(0xD000000000000046, 0x800000023823E880, (void (*)(void))sub_2381DD8BC);
  *(_QWORD *)(v0 + 56) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DC400@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  sub_2381E4B80(&v9, 0, a1, MEMORY[0x24BEE0D00], &off_2509F7DF0);
  v4 = v10;
  if (v10)
  {
    v5 = v9;
    sub_2381E4B80(&v9, 1, a1, MEMORY[0x24BEE4008], &off_2509F7DB0);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C88);
    *a2 = v5;
    a2[1] = v4;
    sub_2382382C4();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
  else
  {
    sub_2381DD1BC();
    swift_allocError();
    *v8 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_2381DC508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2381DC528()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[4];
  v2 = v0[6];
  if (v1)
  {
    v3 = v0[5];
    v5 = v0[2];
    v4 = v0[3];
    v0[7] = *(_QWORD *)(v2 + 112);
    v6 = (_QWORD *)swift_task_alloc();
    v0[8] = v6;
    v6[2] = v3;
    v6[3] = v5;
    v6[4] = v4;
    v6[5] = v1;
  }
  else
  {
    v7 = v0[2];
    v0[10] = *(_QWORD *)(v2 + 112);
    v8 = swift_task_alloc();
    v0[11] = v8;
    *(_QWORD *)(v8 + 16) = v7;
  }
  return swift_task_switch();
}

uint64_t sub_2381DC5C4()
{
  uint64_t v0;

  sub_2381E536C(0xD0000000000000A8, 0x800000023823E910, (void (*)(void))sub_2381DDB44);
  *(_QWORD *)(v0 + 72) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DC65C()
{
  uint64_t v0;

  sub_2381E536C(0xD000000000000038, 0x800000023823E8D0, (void (*)(void))sub_2381DDA60);
  *(_QWORD *)(v0 + 96) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DC6F4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DC724()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DC754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2381DC76C()
{
  _QWORD *v0;

  v0[4] = *(_QWORD *)(v0[3] + 112);
  v0[5] = 0;
  return swift_task_switch();
}

uint64_t sub_2381DC788()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_2381E53D0((void (*)(uint64_t))sub_2381DC83C);
  *(_QWORD *)(v0 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2381DC7F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) != 50)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2381DC830()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DC83C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), _QWORD, uint64_t))(*(_QWORD *)a1 + 128))(0xD00000000000001DLL, 0x800000023823EA70, sub_2381DC8BC, 0, MEMORY[0x24BEE4AE0] + 8);
  if (!v2)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(result);
    *a2 = result;
  }
  return result;
}

uint64_t sub_2381DC8BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)a1 + 176))();
}

uint64_t sub_2381DC8E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2381DC8FC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[4] = *(_QWORD *)(v0[3] + 112);
  v1 = swift_task_alloc();
  v0[5] = v1;
  *(_QWORD *)(v1 + 16) = 0x554E447473616CLL;
  *(_QWORD *)(v1 + 24) = 0xE700000000000000;
  return swift_task_switch();
}

uint64_t sub_2381DC960()
{
  uint64_t v0;

  sub_2381E536C(0xD000000000000025, 0x800000023823E500, (void (*)(void))sub_2381DDC6C);
  *(_QWORD *)(v0 + 48) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 16) != 0);
}

uint64_t sub_2381DCA08()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
  if (swift_dynamicCast() && !*(_BYTE *)(v0 + 56))
  {

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
  else
  {

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2381DCAC4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_2381DCAE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(unsigned __int8 *)(v0 + 48);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 112);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  v2[2] = 0x554E447473616CLL;
  v2[3] = 0xE700000000000000;
  v2[4] = v1;
  return swift_task_switch();
}

uint64_t sub_2381DCB4C()
{
  uint64_t v0;

  sub_2381E536C(0xD000000000000060, 0x800000023823E9C0, (void (*)(void))sub_2381DDC94);
  *(_QWORD *)(v0 + 40) = 0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381DCBE4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381DCC18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2381DCC30()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 112);
  return swift_task_switch();
}

uint64_t sub_2381DCC4C()
{
  uint64_t v0;

  sub_2381E536C(0x4D5555434156, 0xE600000000000000, (void (*)(void))sub_2381DE910);
  *(_QWORD *)(v0 + 32) = 0;
  return swift_task_switch();
}

uint64_t sub_2381DCCD0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DiskCache.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DiskCache.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DiskCache.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t static DiskCache.currentVersion.getter()
{
  return 9;
}

_QWORD *sub_2381DCD38(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2381DE240(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2381DCE58(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9940);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2381DE34C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2381DCF64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C90);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2381DE43C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2381DD08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  void (*v14)(uint64_t);
  _QWORD *result;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_238239E40;
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 64) = &off_2509F7E00;
  *(_QWORD *)(v13 + 32) = a2;
  *(_QWORD *)(v13 + 40) = a3;
  v14 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  swift_bridgeObjectRetain();
  v14(v13);
  result = (_QWORD *)swift_bridgeObjectRelease();
  if (!v6)
  {
    result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a1 + 160))(&v16, a4, a5);
    *a6 = v16;
  }
  return result;
}

uint64_t sub_2381DD17C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2381DD1BC()
{
  unint64_t result;

  result = qword_2568E7B48;
  if (!qword_2568E7B48)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A5A0, &type metadata for DiskCacheError);
    atomic_store(result, (unint64_t *)&qword_2568E7B48);
  }
  return result;
}

_QWORD *sub_2381DD200@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2381DD08C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), MEMORY[0x24BEE4008], (uint64_t)&off_2509F7DB0, a2);
}

uint64_t sub_2381DD228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_238238648();
  MEMORY[0x24BDAC7A8](v3);
  sub_238238030();
  swift_allocObject();
  sub_238238024();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
  sub_2381D28E0();
  sub_238238018();
  if (!v1)
  {
    v5 = v4;
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2381DD5A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t result;
  _BYTE v18[24];
  __int128 v19;
  __int128 v20;

  v3 = v1;
  v5 = (__int128 *)v3[2];
  v6 = v3[3];
  v8 = v3[4];
  v7 = v3[5];
  v9 = v3[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23823A4E0;
  v20 = *v5;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 64) = &off_2509F7E00;
  *(_OWORD *)(v10 + 32) = *v5;
  v19 = v5[1];
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = &off_2509F7E00;
  *(_OWORD *)(v10 + 72) = v5[1];
  *(_OWORD *)v18 = v5[2];
  *(_QWORD *)&v18[16] = *((_QWORD *)v5 + 6);
  v12 = v18[0];
  v13 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v10 + 136) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v10 + 144) = &off_2509F7D80;
  *(_BYTE *)(v10 + 112) = v12;
  v14 = v18[1];
  *(_QWORD *)(v10 + 176) = v13;
  *(_QWORD *)(v10 + 184) = &off_2509F7D80;
  *(_BYTE *)(v10 + 152) = v14;
  *(_QWORD *)(v10 + 216) = v11;
  *(_QWORD *)(v10 + 224) = &off_2509F7E00;
  *(_OWORD *)(v10 + 192) = *(_OWORD *)&v18[8];
  *(_QWORD *)(v10 + 256) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v10 + 264) = &off_2509F7DE0;
  v15 = MEMORY[0x24BEE4008];
  *(_QWORD *)(v10 + 232) = v6;
  *(_QWORD *)(v10 + 296) = v15;
  *(_QWORD *)(v10 + 304) = &off_2509F7DC0;
  *(_QWORD *)(v10 + 272) = v8;
  *(_QWORD *)(v10 + 336) = v11;
  *(_QWORD *)(v10 + 344) = &off_2509F7E00;
  *(_QWORD *)(v10 + 312) = v7;
  *(_QWORD *)(v10 + 320) = v9;
  v16 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  sub_2381DDE94((uint64_t)&v20);
  sub_2381DDE94((uint64_t)&v19);
  sub_2381DE700((uint64_t)v18);
  swift_bridgeObjectRetain();
  v16(v10);
  result = swift_bridgeObjectRelease();
  if (!v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

uint64_t sub_2381DD734@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2381DB84C(a1, *(__int128 **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_2381DD750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t);

  v3 = v1;
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    return (*(uint64_t (**)(void))(*(_QWORD *)a1 + 144))();
  v12 = *(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(_QWORD *)a1 + 128);
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    v9 = *(_QWORD *)(v5 + 8 * v7 + 32);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v9;
    v12(0xD000000000000038, 0x800000023823EAE0, sub_2381DE658, v10, v8);
    if (v2)
      break;
    swift_release();
    if (v6 == ++v7)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(void))(*(_QWORD *)a1 + 144))();
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2381DD870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2381DBC24(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2381DD888@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2381DBE58(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_2381DD8A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2381DC1B0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_2381DD8BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void (*v9)(uint64_t (*)@<X0>(uint64_t@<X0>, _QWORD *@<X8>), _QWORD, uint64_t);
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v3 = v1;
  v5 = *(__int128 **)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_238239E50;
  v12 = *v5;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = &off_2509F7E00;
  *(_OWORD *)(v6 + 32) = *v5;
  v11 = v5[1];
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = &off_2509F7E00;
  *(_OWORD *)(v6 + 72) = v5[1];
  v8 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  sub_2381DDE94((uint64_t)&v12);
  sub_2381DDE94((uint64_t)&v11);
  v8(v6);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v9 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, _QWORD *@<X8>), _QWORD, uint64_t))(*(_QWORD *)a1 + 152);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7BA0);
    v9(sub_2381DC400, 0, v10);
  }
}

uint64_t sub_2381DDA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t result;
  __int128 v10;
  __int128 v11;

  v3 = v1;
  v5 = *(__int128 **)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_238239E50;
  v11 = *v5;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = &off_2509F7E00;
  *(_OWORD *)(v6 + 32) = *v5;
  v10 = v5[1];
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = &off_2509F7E00;
  *(_OWORD *)(v6 + 72) = v5[1];
  v8 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  sub_2381DDE94((uint64_t)&v11);
  sub_2381DDE94((uint64_t)&v10);
  v8(v6);
  result = swift_bridgeObjectRelease();
  if (!v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

uint64_t sub_2381DDB44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t result;
  __int128 v14;
  __int128 v15;

  v3 = v1;
  v5 = (__int128 *)v3[3];
  v7 = v3[4];
  v6 = v3[5];
  v8 = getTimeIntervalSince1970(Date:)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23823A500;
  v10 = MEMORY[0x24BEE0D00];
  v15 = *v5;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = &off_2509F7E00;
  *(_OWORD *)(v9 + 32) = *v5;
  v14 = v5[1];
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = &off_2509F7E00;
  *(_OWORD *)(v9 + 72) = v5[1];
  *(_QWORD *)(v9 + 136) = v10;
  *(_QWORD *)(v9 + 144) = &off_2509F7E00;
  v11 = MEMORY[0x24BEE4008];
  *(_QWORD *)(v9 + 112) = v7;
  *(_QWORD *)(v9 + 120) = v6;
  *(_QWORD *)(v9 + 176) = v11;
  *(_QWORD *)(v9 + 184) = &off_2509F7DC0;
  *(_QWORD *)(v9 + 152) = v8;
  v12 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 192);
  sub_2381DDE94((uint64_t)&v15);
  sub_2381DDE94((uint64_t)&v14);
  swift_bridgeObjectRetain();
  v12(v9);
  result = swift_bridgeObjectRelease();
  if (!v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

_QWORD *sub_2381DDC6C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_2381DD08C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), MEMORY[0x24BEE1768], (uint64_t)&off_2509F7D90, a2);
}

uint64_t sub_2381DDC94(uint64_t a1)
{
  uint64_t *v1;

  return sub_2381DB3E8(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_2381DDCB4()
{
  unint64_t result;

  result = qword_2568E7BD0;
  if (!qword_2568E7BD0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A538, &type metadata for DiskCacheError);
    atomic_store(result, (unint64_t *)&qword_2568E7BD0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiskCacheError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DiskCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2381DDDE0 + 4 * byte_23823A525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2381DDE14 + 4 * byte_23823A520[v4]))();
}

uint64_t sub_2381DDE14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381DDE1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381DDE24);
  return result;
}

uint64_t sub_2381DDE30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381DDE38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2381DDE3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381DDE44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381DDE50(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2381DDE58(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DiskCacheError()
{
  return &type metadata for DiskCacheError;
}

uint64_t type metadata accessor for DiskCache()
{
  return objc_opt_self();
}

uint64_t sub_2381DDE94(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2381DDEBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23823830C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2381DDF1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23823830C();
  result = sub_2382382D0();
  v5 = 0;
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
    goto LABEL_5;
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v5 = (uint64_t)v4;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v6 = swift_allocObject();
  v7 = MEMORY[0x24BEE4008];
  *(_OWORD *)(v6 + 16) = xmmword_238239E40;
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = &off_2509F7DC0;
  *(_QWORD *)(v6 + 32) = v5;
  (*(void (**)(void))(*(_QWORD *)a1 + 192))();
  result = swift_bridgeObjectRelease();
  if (!v1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

uint64_t sub_2381DE028(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[3];
  uint64_t v30;
  uint64_t *v31;

  v3 = (uint64_t *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  sub_2381E4B80(&v27, 0, a1, MEMORY[0x24BEE0D00], &off_2509F7DF0);
  v6 = v28;
  if (!v28)
    goto LABEL_9;
  v7 = v27;
  sub_2381E4B80(&v27, 3, a1, MEMORY[0x24BEE0D00], &off_2509F7DF0);
  if (!v28)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    sub_2381DD1BC();
    swift_allocError();
    *v25 = 0;
    return swift_willThrow();
  }
  v26 = v7;
  v31 = v3;
  sub_2381E4B80(&v27, 1, a1, MEMORY[0x24BEE1328], &off_2509F7D70);
  v8 = v27;
  sub_2381E4B80(&v27, 2, a1, MEMORY[0x24BEE1328], &off_2509F7D70);
  v9 = sub_238215E28(v8, v27);
  v11 = v10;
  v13 = v12;
  v14 = v9 & 0x101;
  swift_bridgeObjectRetain();
  v15 = v14;
  v16 = v31;
  sub_238215E48(v4, v5, v26, v6, v15, v11, v13, (uint64_t)v29);
  v17 = (_QWORD *)*v16;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v16 = (uint64_t)v17;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_2381DCF64(0, v17[2] + 1, 1, v17);
    v17 = (_QWORD *)result;
    *v16 = result;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_2381DCF64((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    v17 = (_QWORD *)result;
    *v16 = result;
  }
  v17[2] = v20 + 1;
  v21 = &v17[7 * v20];
  v22 = v29[0];
  v23 = v29[1];
  v24 = v29[2];
  v21[10] = v30;
  *((_OWORD *)v21 + 3) = v23;
  *((_OWORD *)v21 + 4) = v24;
  *((_OWORD *)v21 + 2) = v22;
  return result;
}

uint64_t sub_2381DE240(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7CA0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381DE34C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381DE43C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381DE530(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(uint64_t **)(v1 + 16);
  sub_2381E4B80(&v11, 0, a1, MEMORY[0x24BEE0D00], &off_2509F7DF0);
  v3 = v12;
  if (v12)
  {
    v4 = v11;
    v5 = (_QWORD *)*v2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v2 = (uint64_t)v5;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_2381DCE58(0, v5[2] + 1, 1, v5);
      v5 = (_QWORD *)result;
      *v2 = result;
    }
    v8 = v5[2];
    v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      result = (uint64_t)sub_2381DCE58((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
      v5 = (_QWORD *)result;
      *v2 = result;
    }
    v5[2] = v8 + 1;
    v9 = &v5[2 * v8];
    v9[4] = v4;
    v9[5] = v3;
  }
  else
  {
    sub_2381DD1BC();
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381DE648()
{
  return swift_deallocObject();
}

uint64_t sub_2381DE658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = v1;
  v5 = *(_QWORD *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C80);
  v6 = swift_allocObject();
  v7 = MEMORY[0x24BEE4008];
  *(_OWORD *)(v6 + 16) = xmmword_238239E40;
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = &off_2509F7DC0;
  *(_QWORD *)(v6 + 32) = v5;
  (*(void (**)(void))(*(_QWORD *)a1 + 192))();
  result = swift_bridgeObjectRelease();
  if (!v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176))(result);
  return result;
}

uint64_t sub_2381DE700(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2381DE728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _BYTE *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23[2];

  v4 = *(uint64_t **)(v1 + 16);
  sub_2381E4B80(v23, 2, a1, MEMORY[0x24BEE0D00], &off_2509F7DF0);
  if (v23[1])
  {
    sub_2381E4B80(v23, 0, a1, MEMORY[0x24BEE13C8], &off_2509F7DD0);
    v5 = v23[0];
    sub_2381E4B80(v23, 1, a1, MEMORY[0x24BEE4008], &off_2509F7DB0);
    result = sub_2381D52A8(v23[0], 0x4D656E4F646E6553);
    if (!v2)
    {
      v10 = result;
      v11 = v7;
      v12 = v8;
      v13 = v9;
      v14 = (_QWORD *)*v4;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v4 = (uint64_t)v14;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_2381DCD38(0, v14[2] + 1, 1, v14);
        v14 = (_QWORD *)result;
        *v4 = result;
      }
      v15 = v14[2];
      v16 = v14[3];
      v17 = v15 + 1;
      if (v15 >= v16 >> 1)
      {
        v22 = v15 + 1;
        v20 = v14;
        v21 = v14[2];
        result = (uint64_t)sub_2381DCD38((_QWORD *)(v16 > 1), v15 + 1, 1, v20);
        v15 = v21;
        v17 = v22;
        v14 = (_QWORD *)result;
        *v4 = result;
      }
      v14[2] = v17;
      v18 = &v14[5 * v15];
      v18[4] = v5;
      v18[5] = v10;
      v18[6] = v11;
      v18[7] = v12;
      v18[8] = v13;
    }
  }
  else
  {
    sub_2381DD1BC();
    swift_allocError();
    *v19 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381DE8FC(uint64_t a1)
{
  return sub_2381DDC94(a1);
}

uint64_t sub_2381DE910(uint64_t a1)
{
  return sub_2381DC8BC(a1);
}

uint64_t sub_2381DE924()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EFFD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EFFD8);
  return sub_238238438();
}

void sub_2381DE9A0()
{
  qword_2568EFFF0 = MEMORY[0x24BEE4AF8];
}

void sub_2381DE9B4()
{
  qword_2568EFFF8 = MEMORY[0x24BEE4B08];
}

void sub_2381DE9C8()
{
  qword_2568F0000 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_2381DE9DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2568E7CB0 + dword_2568E7CB0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2381CCDE0;
  return v3();
}

uint64_t sub_2381DEA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_238238CE4();
    sub_238238684();
    v6 = sub_238238D08();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_238238C0C() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_238238C0C() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2381DEB68()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381DEB84()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  return v0;
}

uint64_t sub_2381DEBB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 88) + *(_QWORD *)(*(_QWORD *)v0 + 88));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2381CB914;
  return v4();
}

uint64_t sub_2381DEC10()
{
  PostInstallActivityConfig.activityFlags.unsafeMutableAddressor();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2381DEC50()
{
  uint64_t v0;

  v0 = *(_QWORD *)PostInstallActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_2381DEC80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23823815C();
  v0[18] = v1;
  v0[19] = *(_QWORD *)(v1 - 8);
  v0[20] = swift_task_alloc();
  v2 = sub_238238210();
  v0[21] = v2;
  v0[22] = *(_QWORD *)(v2 - 8);
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  v0[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381DED64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unsigned int v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  BOOL v77;
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  int64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  int64_t v117;
  _QWORD *v118;
  int v119;
  uint64_t v120[3];

  v120[1] = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t)(v0 + 8);
  v108 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_2568EB618 != -1)
LABEL_76:
    swift_once();
  v2 = *(_QWORD *)(qword_2568EFFF0 + 16);
  v3 = &loc_238239000;
  v114 = v0;
  if (v2)
  {
    v105 = v1;
    v107 = v0 + 16;
    v115 = v0[22];
    v112 = v0[19];
    v111 = *MEMORY[0x24BDCD790];
    v4 = (_QWORD *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      v10 = v0[26];
      v12 = v0[20];
      v11 = v0[21];
      v13 = v0[18];
      v15 = *(v4 - 1);
      v14 = *v4;
      v118 = v4;
      swift_bridgeObjectRetain();
      sub_2381DA29C();
      v0[14] = v15;
      v0[15] = v14;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v112 + 104))(v12, v111, v13);
      sub_2381DFC14();
      sub_238238204();
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v12, v13);
      v16 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
      v16(v10, v11);
      swift_bridgeObjectRelease();
      if ((sub_2382381BC() & 1) != 0)
        break;
      v0 = v114;
      if (qword_2568EB610 != -1)
        swift_once();
      v33 = v114[27];
      v34 = v114[24];
      v35 = v114[21];
      v36 = sub_238238444();
      __swift_project_value_buffer(v36, (uint64_t)qword_2568EFFD8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v34, v33, v35);
      v37 = sub_23823842C();
      v38 = sub_238238870();
      v39 = os_log_type_enabled(v37, v38);
      v40 = v114[27];
      v41 = v114[24];
      v42 = v114[21];
      if (!v39)
      {

        v16(v41, v42);
        v43 = v40;
        v44 = v42;
LABEL_15:
        v16(v43, v44);
        goto LABEL_5;
      }
      v5 = swift_slowAlloc();
      v6 = v16;
      v7 = swift_slowAlloc();
      v120[0] = v7;
      *(_DWORD *)v5 = 136446210;
      v8 = sub_2382381EC();
      *(_QWORD *)(v5 + 4) = sub_2381CBC6C(v8, v9, v120);
      swift_bridgeObjectRelease();
      v6(v41, v42);
      _os_log_impl(&dword_2381C6000, v37, v38, "skipping %{public}s", (uint8_t *)v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v7, -1, -1);
      v0 = v114;
      MEMORY[0x23B82FE28](v5, -1, -1);

      v6(v40, v42);
LABEL_5:
      v4 = v118 + 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        v1 = v105;
        v3 = (_QWORD *)&loc_238239000;
        goto LABEL_24;
      }
    }
    v0 = v114;
    if (qword_2568EB610 != -1)
      swift_once();
    v17 = v114[27];
    v18 = v114[25];
    v19 = v114[21];
    v20 = sub_238238444();
    __swift_project_value_buffer(v20, (uint64_t)qword_2568EFFD8);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16);
    v21(v18, v17, v19);
    v22 = sub_23823842C();
    v23 = sub_238238894();
    v24 = os_log_type_enabled(v22, v23);
    v25 = v114[25];
    v26 = v114[21];
    if (v24)
    {
      v27 = swift_slowAlloc();
      v28 = v2;
      v29 = swift_slowAlloc();
      v120[0] = v29;
      *(_DWORD *)v27 = 136446210;
      v30 = sub_2382381EC();
      *(_QWORD *)(v27 + 4) = sub_2381CBC6C(v30, v31, v120);
      swift_bridgeObjectRelease();
      v16(v25, v26);
      _os_log_impl(&dword_2381C6000, v22, v23, "removing %{public}s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy();
      v32 = v29;
      v2 = v28;
      MEMORY[0x23B82FE28](v32, -1, -1);
      v0 = v114;
      MEMORY[0x23B82FE28](v27, -1, -1);
    }
    else
    {
      v16(v114[25], v114[21]);
    }

    v45 = (void *)sub_238238198();
    v0[16] = 0;
    v46 = objc_msgSend(v108, sel_removeItemAtURL_error_, v45, v107);

    v47 = (void *)v0[16];
    v48 = v0[27];
    if (!v46)
    {
      v106 = v2;
      v51 = v0[23];
      v52 = v0[21];
      v53 = v47;
      v54 = (void *)sub_238238150();

      swift_willThrow();
      v21(v51, v48, v52);
      v55 = v54;
      v56 = v54;
      v57 = sub_23823842C();
      v58 = sub_23823887C();
      v59 = os_log_type_enabled(v57, v58);
      v60 = v0[27];
      v61 = v0[23];
      v62 = v0[21];
      if (v59)
      {
        v63 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        v120[0] = v64;
        *(_DWORD *)v63 = 136446466;
        v65 = sub_2382381EC();
        *(_QWORD *)(v63 + 4) = sub_2381CBC6C(v65, v66, v120);
        swift_bridgeObjectRelease();
        v16(v61, v62);
        *(_WORD *)(v63 + 12) = 2082;
        swift_getErrorValue();
        v67 = sub_238238C9C();
        *(_QWORD *)(v63 + 14) = sub_2381CBC6C(v67, v68, v120);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2381C6000, v57, v58, "failed removing %{public}s: %{public}s", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v64, -1, -1);
        MEMORY[0x23B82FE28](v63, -1, -1);

      }
      else
      {

        v16(v61, v62);
      }

      v16(v60, v62);
      v2 = v106;
      goto LABEL_5;
    }
    v49 = v0[21];
    v50 = v47;
    v43 = v48;
    v44 = v49;
    goto LABEL_15;
  }
LABEL_24:
  v69 = sub_238204C68();
  swift_beginAccess();
  v70 = objc_msgSend((id)*v69, sel_dictionaryRepresentation);
  v71 = sub_238238588();

  v110 = v71 + 64;
  v72 = -1 << *(_BYTE *)(v71 + 32);
  if (-v72 < 64)
    v73 = ~(-1 << -(char)v72);
  else
    v73 = -1;
  v74 = v73 & *(_QWORD *)(v71 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v75 = 0;
  v113 = (unint64_t)(63 - v72) >> 6;
  v119 = v3[299];
  v109 = v71;
  while (1)
  {
    if (v74)
    {
      v116 = (v74 - 1) & v74;
      v117 = v75;
      v76 = __clz(__rbit64(v74)) | (v75 << 6);
      goto LABEL_47;
    }
    v77 = __OFADD__(v75, 1);
    v78 = v75 + 1;
    if (v77)
    {
      __break(1u);
      goto LABEL_76;
    }
    if (v78 >= v113)
      goto LABEL_74;
    v79 = *(_QWORD *)(v110 + 8 * v78);
    if (!v79)
      break;
LABEL_46:
    v116 = (v79 - 1) & v79;
    v117 = v78;
    v76 = __clz(__rbit64(v79)) + (v78 << 6);
LABEL_47:
    v81 = (uint64_t *)(*(_QWORD *)(v71 + 48) + 16 * v76);
    v83 = *v81;
    v82 = v81[1];
    v84 = qword_2568EB610;
    swift_bridgeObjectRetain();
    if (v84 != -1)
      swift_once();
    v85 = sub_238238444();
    __swift_project_value_buffer(v85, (uint64_t)qword_2568EFFD8);
    swift_bridgeObjectRetain_n();
    v86 = sub_23823842C();
    v87 = sub_238238870();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = swift_slowAlloc();
      v89 = swift_slowAlloc();
      v120[0] = v89;
      *(_DWORD *)v88 = v119;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v88 + 4) = sub_2381CBC6C(v83, v82, v120);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v86, v87, "default set: %{public}s", (uint8_t *)v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v89, -1, -1);
      MEMORY[0x23B82FE28](v88, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (qword_2568EB620 != -1)
      swift_once();
    if ((sub_2381DEA34(v83, v82, qword_2568EFFF8) & 1) != 0)
    {
      swift_bridgeObjectRetain_n();
      v90 = sub_23823842C();
      v91 = sub_238238894();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = swift_slowAlloc();
        v93 = swift_slowAlloc();
        v120[0] = v93;
        *(_DWORD *)v92 = v119;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v92 + 4) = sub_2381CBC6C(v83, v82, v120);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v90, v91, "removing default %{public}s", (uint8_t *)v92, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v93, -1, -1);
        MEMORY[0x23B82FE28](v92, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v103 = (id)*v69;
      v1 = sub_2382385E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v103, sel_removeObjectForKey_, v1);

    }
    else
    {
      if (qword_2568EB628 != -1)
        swift_once();
      v1 = qword_2568F0000;
      v94 = *(_QWORD *)(qword_2568F0000 + 16);
      if (v94)
      {
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v95 = v1 + 40;
        do
        {
          swift_bridgeObjectRetain();
          v1 = sub_2382386F0();
          swift_bridgeObjectRelease();
          if ((v1 & 1) != 0)
          {
            swift_bridgeObjectRetain_n();
            v97 = sub_23823842C();
            v98 = sub_238238894();
            if (os_log_type_enabled(v97, v98))
            {
              v99 = swift_slowAlloc();
              v100 = v69;
              v101 = swift_slowAlloc();
              v120[0] = v101;
              *(_DWORD *)v99 = v119;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v99 + 4) = sub_2381CBC6C(v83, v82, v120);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_2381C6000, v97, v98, "removing default %{public}s", (uint8_t *)v99, 0xCu);
              swift_arrayDestroy();
              v102 = v101;
              v69 = v100;
              MEMORY[0x23B82FE28](v102, -1, -1);
              MEMORY[0x23B82FE28](v99, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            v1 = (uint64_t)(id)*v69;
            v96 = (void *)sub_2382385E8();
            objc_msgSend((id)v1, sel_removeObjectForKey_, v96);

          }
          v95 += 16;
          --v94;
        }
        while (v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v0 = v114;
        v71 = v109;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v74 = v116;
    v75 = v117;
  }
  v80 = v78 + 1;
  if (v78 + 1 >= v113)
    goto LABEL_74;
  v79 = *(_QWORD *)(v110 + 8 * v80);
  if (v79)
    goto LABEL_45;
  v80 = v78 + 2;
  if (v78 + 2 >= v113)
    goto LABEL_74;
  v79 = *(_QWORD *)(v110 + 8 * v80);
  if (v79)
    goto LABEL_45;
  v80 = v78 + 3;
  if (v78 + 3 >= v113)
    goto LABEL_74;
  v79 = *(_QWORD *)(v110 + 8 * v80);
  if (v79)
    goto LABEL_45;
  v80 = v78 + 4;
  if (v78 + 4 >= v113)
    goto LABEL_74;
  v79 = *(_QWORD *)(v110 + 8 * v80);
  if (v79)
    goto LABEL_45;
  v80 = v78 + 5;
  if (v78 + 5 >= v113)
    goto LABEL_74;
  v79 = *(_QWORD *)(v110 + 8 * v80);
  if (v79)
  {
LABEL_45:
    v78 = v80;
    goto LABEL_46;
  }
  while (1)
  {
    v78 = v80 + 1;
    if (__OFADD__(v80, 1))
      __break(1u);
    if (v78 >= v113)
      break;
    v79 = *(_QWORD *)(v110 + 8 * v78);
    ++v80;
    if (v79)
      goto LABEL_46;
  }
LABEL_74:
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

unint64_t sub_2381DFB8C(uint64_t a1)
{
  unint64_t result;

  result = sub_2381DFBB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2381DFBB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E7CC0;
  if (!qword_2568E7CC0)
  {
    v1 = type metadata accessor for PostInstallActivity();
    result = MEMORY[0x23B82FD68](&unk_23823A700, v1);
    atomic_store(result, (unint64_t *)&qword_2568E7CC0);
  }
  return result;
}

uint64_t type metadata accessor for PostInstallActivity()
{
  return objc_opt_self();
}

unint64_t sub_2381DFC14()
{
  unint64_t result;

  result = qword_2568E7D70;
  if (!qword_2568E7D70)
  {
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2568E7D70);
  }
  return result;
}

uint64_t sub_2381DFC58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  void *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(uint64_t *, char *, uint64_t);
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  __int128 v18[2];
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;

  v16 = a5;
  v21 = type metadata accessor for StorebagSectionMaybeShared(0, a2, a3, a4);
  v17 = *(_QWORD *)(v21 - 8);
  v7 = MEMORY[0x24BDAC7A8](v21);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v16 - v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_238238D20();
  if (v5)
  {

    v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_2381DFE50((uint64_t)v18);
    sub_2381CDE14((uint64_t)a1, (uint64_t)v20);
    sub_238238834();
    v12 = v21;
    swift_storeEnumTagMultiPayload();
    v13 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 32);
    v13(v11, v9, v12);
  }
  else
  {
    sub_2381DFE90(v18, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    *v11 = sub_238238C18();
    v11[1] = v14;
    v12 = v21;
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    v13 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 32);
  }
  v13(v16, (char *)v11, v12);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t type metadata accessor for StorebagSectionMaybeShared(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StorebagSectionMaybeShared);
}

uint64_t sub_2381DFE50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7D78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2381DFE90(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2381DFEA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_2381DFC58(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

void sub_2381DFEC4(char *a1)
{
  sub_2381DFED0(*a1);
}

void sub_2381DFED0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2381DFF10(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2381DFF94 + 4 * byte_23823A772[a2]))(7955819);
}

uint64_t sub_2381DFF94(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7955819 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2381E0068()
{
  char *v0;

  sub_2381E0070(*v0);
}

void sub_2381E0070(char a1)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_2381E00B8()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_2381E0148()
{
  __asm { BR              X10 }
}

uint64_t sub_2381E017C()
{
  sub_238238684();
  return swift_bridgeObjectRelease();
}

void sub_2381E01F8(uint64_t a1)
{
  char *v1;

  sub_2381E0200(a1, *v1);
}

void sub_2381E0200(uint64_t a1, char a2)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_2381E0244()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

uint64_t sub_2381E02D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381E0FC4();
  *a1 = result;
  return result;
}

uint64_t sub_2381E0300()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2381E0328 + 4 * byte_23823A78A[*v0]))();
}

void sub_2381E0328(_QWORD *a1@<X8>)
{
  *a1 = 7955819;
  a1[1] = 0xE300000000000000;
}

void sub_2381E033C(_QWORD *a1@<X8>)
{
  *a1 = 0x7365756C6176;
  a1[1] = 0xE600000000000000;
}

void sub_2381E0354(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

void sub_2381E036C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F69746361;
  a1[1] = 0xE600000000000000;
}

void sub_2381E0384(_QWORD *a1@<X8>)
{
  *a1 = 0x6F697469646E6F63;
  a1[1] = 0xE90000000000006ELL;
}

uint64_t sub_2381E03A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2381E03CC + 4 * byte_23823A790[*v0]))(1937335659, 0xE400000000000000);
}

uint64_t sub_2381E03CC()
{
  return 7955819;
}

uint64_t sub_2381E03DC()
{
  return 0x7365756C6176;
}

uint64_t sub_2381E03F0()
{
  return 0x65756C6176;
}

uint64_t sub_2381E0404()
{
  return 0x6E6F69746361;
}

uint64_t sub_2381E0418()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_2381E0434@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381E0FC4();
  *a1 = result;
  return result;
}

void sub_2381E0458(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2381E0464()
{
  sub_2381E23DC();
  return sub_238238D68();
}

uint64_t sub_2381E048C()
{
  sub_2381E23DC();
  return sub_238238D74();
}

_QWORD *sub_2381E04B4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = result[2];
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = sub_2381DCE58(result, v10, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (_QWORD *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v7 = v3[2];
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

__n128 sub_2381E059C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_2381E072C(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

BOOL sub_2381E05EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2381E0600()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2381E062C + 4 * byte_23823A796[*v0]))(0x6E6F69746361, 0xE600000000000000);
}

uint64_t sub_2381E062C()
{
  return 1937335659;
}

uint64_t sub_2381E063C()
{
  return 0x7365756C6176;
}

uint64_t sub_2381E064C()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_2381E0668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2381E2868(a1, a2);
  *a3 = result;
  return result;
}

void sub_2381E068C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2381E0698()
{
  sub_2381E2420();
  return sub_238238D68();
}

uint64_t sub_2381E06C0()
{
  sub_2381E2420();
  return sub_238238D74();
}

double sub_2381E06E8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_2381E0CB8(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_2381E072C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  _QWORD *v50;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7DC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381E23DC();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v42 = a2;
  v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  LOBYTE(v49) = 0;
  sub_2381E2464();
  sub_238238B58();
  if (v43)
    sub_2381E04B4(v43);
  LOBYTE(v49) = 1;
  sub_238238B94();
  sub_2381E04B4(v43);
  LOBYTE(v43) = 1;
  v9 = sub_238238B7C();
  v40 = v10;
  v11 = v50;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v11 = sub_2381DCE58(0, v11[2] + 1, 1, v11);
  v14 = v11[2];
  v13 = v11[3];
  v15 = v14 + 1;
  if (v14 >= v13 >> 1)
  {
    v39 = v14 + 1;
    v37 = sub_2381DCE58((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    v15 = v39;
    v11 = v37;
  }
  v11[2] = v15;
  v16 = &v11[2 * v14];
  v17 = v40;
  v16[4] = v41;
  v16[5] = v17;
  v50 = v11;
  v49 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v48 = 2;
  sub_238238B58();
  if (v43)
    sub_2381E04B4(v43);
  v48 = 3;
  sub_238238B94();
  sub_2381E04B4(v43);
  LOBYTE(v43) = 3;
  v19 = sub_238238B7C();
  v21 = v20;
  v41 = v19;
  v22 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_2381DCE58(0, v22[2] + 1, 1, v22);
  v24 = v22[2];
  v23 = v22[3];
  if (v24 >= v23 >> 1)
    v22 = sub_2381DCE58((_QWORD *)(v23 > 1), v24 + 1, 1, v22);
  v22[2] = v24 + 1;
  v25 = &v22[2 * v24];
  v25[4] = v41;
  v25[5] = v21;
  v49 = v22;
  v26 = v50;
  LOBYTE(v43) = 4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_238238B7C();
  v29 = v28;
  v40 = v27;
  v48 = 5;
  sub_2381E2524();
  swift_bridgeObjectRetain();
  v41 = v29;
  sub_238238B58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v30 = v43;
  v31 = v44;
  v32 = v45;
  v33 = v46;
  v39 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v41;
  swift_bridgeObjectRetain();
  sub_2381E2568((uint64_t)v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v39;
  result = sub_2381E25B8((uint64_t)v30, v31);
  v36 = v42;
  *v42 = v26;
  v36[1] = v22;
  v36[2] = v40;
  v36[3] = v34;
  v36[4] = v30;
  v36[5] = v31;
  v36[6] = v32;
  v36[7] = v33;
  v36[8] = v35;
  return result;
}

uint64_t sub_2381E0CB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7DA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381E2420();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v21) = 0;
  v9 = sub_238238B7C();
  v11 = v10;
  v18 = v9;
  v19 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  v20 = 1;
  sub_2381E2464();
  swift_bridgeObjectRetain();
  sub_238238B58();
  v20 = 2;
  v17 = v21;
  swift_bridgeObjectRetain();
  sub_238238B58();
  v12 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7DB0);
  v20 = 3;
  sub_2381E24C0();
  swift_bridgeObjectRetain();
  sub_238238B58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v17;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v16 = v19;
  *v19 = v18;
  v16[1] = v11;
  v16[2] = v14;
  v16[3] = v12;
  v16[4] = v13;
  return result;
}

uint64_t sub_2381E0FC4()
{
  unint64_t v0;

  v0 = sub_238238B34();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_2381E1010()
{
  unint64_t result;

  result = qword_2568E7D80;
  if (!qword_2568E7D80)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A814, &type metadata for StorebagSectionFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7D80);
  }
  return result;
}

unint64_t sub_2381E1058()
{
  unint64_t result;

  result = qword_2568E7D88;
  if (!qword_2568E7D88)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A92C, &type metadata for StorebagSectionFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7D88);
  }
  return result;
}

unint64_t sub_2381E10A0()
{
  unint64_t result;

  result = qword_2568E7D90;
  if (!qword_2568E7D90)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A904, &type metadata for StorebagSectionFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7D90);
  }
  return result;
}

uint64_t sub_2381E10E4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2381E10EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2381E115C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = a2[1];
      *v3 = *a2;
      v3[1] = v11;
      *((_BYTE *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_2381E1274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_2381E12BC + 4 * byte_23823A79F[v5]))();
  }
}

_QWORD *sub_2381E1314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

_QWORD *sub_2381E13EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_OWORD *sub_2381E1584(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_2381E1658(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_2381E17E4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2381E18A8 + 4 * byte_23823A7C2[(v4 - 1)]))();
}

void sub_2381E18F4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_2381E1A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2381E1AE4 + 4 * byte_23823A7D0[v3]))();
}

void sub_2381E1B2C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t destroy for StorebagSectionFilter(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for StorebagSectionFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    v7 = a2[7];
    a1[6] = a2[6];
    a1[7] = v7;
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v8;
    a1[8] = a2[8];
  }
  return a1;
}

_QWORD *assignWithCopy for StorebagSectionFilter(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2 + 4;
  v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2381E1E84((uint64_t)(a1 + 4));
      v7 = a2[8];
      v8 = *((_OWORD *)a2 + 3);
      *v4 = *v5;
      *((_OWORD *)a1 + 3) = v8;
      a1[8] = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    *v4 = v9;
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

uint64_t sub_2381E1E84(uint64_t a1)
{
  destroy for StorebagSectionCondition();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionFilter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    sub_2381E1E84(a1 + 32);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    return a1;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionFilter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter()
{
  return &type metadata for StorebagSectionFilter;
}

uint64_t getEnumTagSinglePayload for StorebagSectionFilter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionFilter.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2381E211C + 4 * byte_23823A7DA[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2381E2150 + 4 * byte_23823A7D5[v4]))();
}

uint64_t sub_2381E2150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E2158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381E2160);
  return result;
}

uint64_t sub_2381E216C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381E2174);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2381E2178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E2180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2381E218C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter.CodingKeys()
{
  return &type metadata for StorebagSectionFilter.CodingKeys;
}

uint64_t destroy for StorebagSectionCondition()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StorebagSectionCondition(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StorebagSectionCondition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StorebagSectionCondition(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionCondition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionCondition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition()
{
  return &type metadata for StorebagSectionCondition;
}

unint64_t sub_2381E23DC()
{
  unint64_t result;

  result = qword_2568E7D98;
  if (!qword_2568E7D98)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A8B4, &type metadata for StorebagSectionFilter.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E7D98);
  }
  return result;
}

unint64_t sub_2381E2420()
{
  unint64_t result;

  result = qword_2568EBC30[0];
  if (!qword_2568EBC30[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823AB04, &type metadata for StorebagSectionCondition.CodingKeys);
    atomic_store(result, qword_2568EBC30);
  }
  return result;
}

unint64_t sub_2381E2464()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2568E7DA8;
  if (!qword_2568E7DA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E7B78);
    v2 = MEMORY[0x24BEE0D38];
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568E7DA8);
  }
  return result;
}

unint64_t sub_2381E24C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2568E7DB8;
  if (!qword_2568E7DB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E7DB0);
    v2 = sub_2381E2524();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568E7DB8);
  }
  return result;
}

unint64_t sub_2381E2524()
{
  unint64_t result;

  result = qword_2568E7DC0;
  if (!qword_2568E7DC0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A97C, &type metadata for StorebagSectionCondition);
    atomic_store(result, (unint64_t *)&qword_2568E7DC0);
  }
  return result;
}

uint64_t sub_2381E2568(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2381E25B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B82FD14](a1, v6, a5);
}

uint64_t getEnumTagSinglePayload for StorebagSectionCondition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionCondition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2381E2710 + 4 * byte_23823A7E4[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2381E2744 + 4 * byte_23823A7DF[v4]))();
}

uint64_t sub_2381E2744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E274C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381E2754);
  return result;
}

uint64_t sub_2381E2760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381E2768);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2381E276C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E2774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition.CodingKeys()
{
  return &type metadata for StorebagSectionCondition.CodingKeys;
}

unint64_t sub_2381E2794()
{
  unint64_t result;

  result = qword_2568EBD40[0];
  if (!qword_2568EBD40[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823AADC, &type metadata for StorebagSectionCondition.CodingKeys);
    atomic_store(result, qword_2568EBD40);
  }
  return result;
}

unint64_t sub_2381E27DC()
{
  unint64_t result;

  result = qword_2568EBE50;
  if (!qword_2568EBE50)
  {
    result = MEMORY[0x23B82FD68](&unk_23823AA4C, &type metadata for StorebagSectionCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568EBE50);
  }
  return result;
}

unint64_t sub_2381E2824()
{
  unint64_t result;

  result = qword_2568EBE58[0];
  if (!qword_2568EBE58[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823AA74, &type metadata for StorebagSectionCondition.CodingKeys);
    atomic_store(result, qword_2568EBE58);
  }
  return result;
}

uint64_t sub_2381E2868(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937335659 && a2 == 0xE400000000000000 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_238238C0C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

BOOL static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SessionConfiguration.Availability.hash(into:)()
{
  return sub_238238CF0();
}

uint64_t SessionConfiguration.Availability.hashValue.getter()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381E2A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for SessionConfiguration.Backend(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2381E2BF4(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2381CCA1C((uint64_t)v7, type metadata accessor for SessionConfiguration.Backend);
    return 0x6C61636F6CLL;
  }
  else
  {
    sub_2381E2C38((uint64_t)v7, (uint64_t)v4);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_2381CCA1C((uint64_t)v4, type metadata accessor for SessionConfiguration.BackendHTTP);
  }
  return v8;
}

uint64_t type metadata accessor for SessionConfiguration.BackendHTTP(uint64_t a1)
{
  return sub_2381E2BC0(a1, (uint64_t *)&unk_2568EBFF0);
}

uint64_t type metadata accessor for SessionConfiguration.Backend(uint64_t a1)
{
  return sub_2381E2BC0(a1, (uint64_t *)&unk_2568EBFE0);
}

uint64_t sub_2381E2BC0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381E2BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionConfiguration.Backend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381E2C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381E2C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(double *)(a7 + 16) = a8;
  v13 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  v14 = a7 + v13[6];
  v15 = sub_238238210();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a3, v15);
  *(_QWORD *)(a7 + v13[7]) = a4;
  *(_BYTE *)(a7 + v13[8]) = a5;
  *(_BYTE *)(a7 + v13[9]) = a6;
  return result;
}

uint64_t variable initialization expression of SessionConfiguration.deferred()
{
  return 0;
}

uint64_t variable initialization expression of SessionConfiguration.version()
{
  return 1701736302;
}

uint64_t sub_2381E2D2C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

void sub_2381E2D3C(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = v1;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = 1701736302;
  *(_QWORD *)(a1 + 32) = 0xE400000000000000;
}

unint64_t sub_2381E2D68()
{
  unint64_t result;

  result = qword_2568E7DD0;
  if (!qword_2568E7DD0)
  {
    result = MEMORY[0x23B82FD68](&protocol conformance descriptor for SessionConfiguration.Availability, &type metadata for SessionConfiguration.Availability);
    atomic_store(result, (unint64_t *)&qword_2568E7DD0);
  }
  return result;
}

uint64_t destroy for SessionConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Storebag(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Storebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration()
{
  return &type metadata for SessionConfiguration;
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration.Availability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2381E2FF4 + 4 * byte_23823AB65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2381E3028 + 4 * byte_23823AB60[v4]))();
}

uint64_t sub_2381E3028(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E3030(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381E3038);
  return result;
}

uint64_t sub_2381E3044(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381E304CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2381E3050(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E3058(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.Availability()
{
  return &type metadata for SessionConfiguration.Availability;
}

_QWORD *sub_2381E3074(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      v8 = a2[2];
      a1[1] = v7;
      a1[2] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      v12 = v11[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_238238210();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(_QWORD *)((char *)a1 + v11[7]) = *(_QWORD *)((char *)a2 + v11[7]);
      *((_BYTE *)a1 + v11[8]) = *((_BYTE *)a2 + v11[8]);
      *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2381E31AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = a1 + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    v3 = sub_238238210();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2381E3230(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    v8 = v7[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_238238210();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
    *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
    *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2381E3334(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v5 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      v6 = v5[6];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_238238210();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
      *((_BYTE *)a1 + v5[8]) = *((_BYTE *)a2 + v5[8]);
      *((_BYTE *)a1 + v5[9]) = *((_BYTE *)a2 + v5[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2381E3460(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    v7 = v6[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_238238210();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
    *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_2381E353C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      v7 = v6[6];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_238238210();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      *((_BYTE *)a1 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2381E3630()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionConfiguration.BackendHTTP(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_2381E369C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_238238210();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2381E3774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2381E37D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_238238210();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2381E387C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_238238210();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t sub_2381E393C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

_QWORD *sub_2381E39D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_238238210();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t sub_2381E3A74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381E3A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_238238210();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2381E3AFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381E3B08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_238238210();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2381E3B7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *assignWithCopy for SessionConfiguration.BackendLocal(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration.BackendLocal(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionConfiguration.BackendLocal()
{
  return &type metadata for SessionConfiguration.BackendLocal;
}

const char *sub_2381E3CCC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const char *result;
  uint64_t v6;

  v4 = 0x6F727245204C5153;
  if (a3)
    v4 = a2;
  v6 = v4;
  swift_bridgeObjectRetain();
  sub_2382386B4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = sqlite3_errstr(a1);
  if (result)
  {
    sub_2382386C0();
    swift_bridgeObjectRetain();
    sub_2382386B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (const char *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

const char *sub_2381E3DA4()
{
  uint64_t v0;

  return sub_2381E3CCC(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_2381E3DB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2381E3DE8 + 4 * byte_23823ACA0[a1]))(0xD00000000000001ALL, 0x800000023823EBE0);
}

uint64_t sub_2381E3DE8(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_2381E3E10()
{
  return 0x6465736F6C63;
}

uint64_t sub_2381E3E24(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2381E3E5C + 4 * byte_23823ACA4[a1]))(0xD00000000000001ALL, 0x800000023823EBE0);
}

uint64_t sub_2381E3E5C(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_2381E3E84()
{
  return 0x6465736F6C63;
}

uint64_t sub_2381E3E98()
{
  unsigned __int8 *v0;

  return sub_2381E3E24(*v0);
}

uint64_t sub_2381E3EA0()
{
  unsigned __int8 *v0;

  return sub_2381E3DB0(*v0);
}

uint64_t type metadata accessor for SQLiteDB.Location()
{
  uint64_t result;

  result = qword_2568EC490;
  if (!qword_2568EC490)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381E3EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381E3F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  sqlite3 *v13;
  uint64_t v14;
  sqlite3 *ppDb[2];

  v2 = v1;
  ppDb[1] = *(sqlite3 **)MEMORY[0x24BDAC8D0];
  v4 = sub_238238210();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)ppDb - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SQLiteDB.Location();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)ppDb - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + 24) = 0;
  ppDb[0] = 0;
  sub_2381E3EE4(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_2382381EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11 = sub_23823866C();
  swift_bridgeObjectRelease();
  v12 = sqlite3_open_v2((const char *)(v11 + 32), ppDb, 32774, 0);
  swift_release();
  v13 = ppDb[0];
  if (!ppDb[0] || v12)
  {
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v14 = v12;
    *(_QWORD *)(v14 + 8) = 0xD000000000000017;
    *(_QWORD *)(v14 + 16) = 0x800000023823EE90;
    swift_willThrow();
    sub_2381E5330(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_2381E5330(a1);
    *(_QWORD *)(v2 + 16) = v13;
  }
  return v2;
}

uint64_t sub_2381E4148()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    *(_BYTE *)(v0 + 24) = 1;
    sqlite3_close_v2(*(sqlite3 **)(v0 + 16));
  }
  return swift_deallocClassInstance();
}

uint64_t sub_2381E417C()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;

  v1 = sqlite3_expanded_sql(*(sqlite3_stmt **)(v0 + 16));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_2382386C0();
  sqlite3_free(v2);
  return v3;
}

uint64_t sub_2381E41D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = v0;
  v2 = sqlite3_step(*(sqlite3_stmt **)(v0 + 16));
  if (v2 == 101)
  {
    swift_beginAccess();
    *(_BYTE *)(v0 + 24) = 1;
    return 0;
  }
  else
  {
    v3 = v2;
    if (v2 == 100)
    {
      swift_retain();
    }
    else
    {
      sub_238238A20();
      v4 = swift_bridgeObjectRelease();
      strcpy((char *)v8, "Statement ((");
      BYTE5(v8[1]) = 0;
      HIWORD(v8[1]) = -5120;
      (*(void (**)(uint64_t))(*(_QWORD *)v0 + 96))(v4);
      sub_2382386B4();
      swift_bridgeObjectRelease();
      sub_2382386B4();
      v5 = v8[0];
      v1 = v8[1];
      sub_2381E4468();
      swift_allocError();
      *(_DWORD *)v6 = v3;
      *(_QWORD *)(v6 + 8) = v5;
      *(_QWORD *)(v6 + 16) = v1;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_2381E430C(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v4;
  int v5;
  uint64_t v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v4 = *(sqlite3_stmt **)(v1 + 16);
  while (1)
  {
    v5 = sqlite3_step(v4);
    if (v5 != 100)
      break;
    v6 = swift_retain();
    a1(v6);
    result = swift_release();
    if (v2)
      return result;
  }
  v8 = v5;
  if (v5 == 101)
  {
    result = swift_beginAccess();
    *(_BYTE *)(v1 + 24) = 1;
  }
  else
  {
    sub_238238A20();
    v9 = swift_bridgeObjectRelease();
    strcpy((char *)v13, "Statement ((");
    BYTE5(v13[1]) = 0;
    HIWORD(v13[1]) = -5120;
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 96))(v9);
    sub_2382386B4();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    v10 = v13[0];
    v11 = v13[1];
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v12 = v8;
    *(_QWORD *)(v12 + 8) = v10;
    *(_QWORD *)(v12 + 16) = v11;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_2381E4468()
{
  unint64_t result;

  result = qword_2568E7F00;
  if (!qword_2568E7F00)
  {
    result = MEMORY[0x23B82FD68](&unk_23823AD24, &type metadata for SQLError);
    atomic_store(result, (unint64_t *)&qword_2568E7F00);
  }
  return result;
}

uint64_t sub_2381E44AC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE *v10;
  uint64_t v11;
  sqlite3_stmt *v12;
  int v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v5 = v3;
  result = sub_2381E41D4();
  if (!v4)
  {
    if (result)
    {
      a1(result);
      v11 = sub_2381E41D4();
      swift_release();
      if (v11)
      {
        v12 = *(sqlite3_stmt **)(v5 + 16);
        do
          v13 = sqlite3_step(v12);
        while (v13 == 100);
        v14 = v13;
        if (v13 == 101)
        {
          swift_beginAccess();
          *(_BYTE *)(v5 + 24) = 1;
          sub_2381E46D8();
          swift_allocError();
          *v15 = 1;
          swift_willThrow();
          swift_release();
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a3, a2);
        }
        sub_238238A20();
        v16 = swift_bridgeObjectRelease();
        strcpy((char *)v20, "Statement ((");
        BYTE5(v20[1]) = 0;
        HIWORD(v20[1]) = -5120;
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 96))(v16);
        sub_2382386B4();
        swift_bridgeObjectRelease();
        sub_2382386B4();
        v17 = v20[0];
        v18 = v20[1];
        sub_2381E4468();
        swift_allocError();
        *(_DWORD *)v19 = v14;
        *(_QWORD *)(v19 + 8) = v17;
        *(_QWORD *)(v19 + 16) = v18;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a3, a2);
      }
      return swift_release();
    }
    sub_2381E46D8();
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_2381E46D8()
{
  unint64_t result;

  result = qword_2568E7F08;
  if (!qword_2568E7F08)
  {
    result = MEMORY[0x23B82FD68](&unk_23823AE3C, &type metadata for DBError);
    atomic_store(result, (unint64_t *)&qword_2568E7F08);
  }
  return result;
}

uint64_t sub_2381E471C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v4[3] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t))(*(_QWORD *)v2 + 152))(sub_2381E4754, v4, a1);
}

uint64_t sub_2381E4754(uint64_t a1)
{
  return sub_2381E47D0(a1);
}

uint64_t sub_2381E4768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t (*)(uint64_t), _QWORD *, uint64_t);
  uint64_t v4;
  _QWORD v6[4];

  v6[3] = a2;
  v6[2] = a1;
  v3 = *(uint64_t (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t))(*(_QWORD *)v2 + 152);
  v4 = sub_238238954();
  return v3(sub_2381E4754, v6, v4);
}

uint64_t sub_2381E47D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v5;
  _BYTE *v7;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  if (sqlite3_column_count(*(sqlite3_stmt **)(a1 + 16)) == 1)
  {
    v4 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 8);
    v5 = swift_retain();
    return v4(v5, 0, v3, v2);
  }
  else
  {
    sub_2381E46D8();
    swift_allocError();
    *v7 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_2381E4874()
{
  uint64_t v0;
  _BYTE *v1;
  sqlite3_stmt *v2;
  int v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v1 = (_BYTE *)v0;
  v2 = *(sqlite3_stmt **)(v0 + 16);
  do
    v3 = sqlite3_step(v2);
  while (v3 == 100);
  v4 = v3;
  if (v3 == 101)
  {
    result = swift_beginAccess();
    v1[24] = 1;
  }
  else
  {
    sub_238238A20();
    v6 = swift_bridgeObjectRelease();
    strcpy((char *)v10, "Statement ((");
    BYTE5(v10[1]) = 0;
    HIWORD(v10[1]) = -5120;
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 96))(v6);
    sub_2382386B4();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    v7 = v10[0];
    v8 = v10[1];
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v9 = v4;
    *(_QWORD *)(v9 + 8) = v7;
    *(_QWORD *)(v9 + 16) = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E499C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, a1, v4, v5);
}

uint64_t sub_2381E4A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  __int128 v8[2];
  _OWORD v9[3];
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 32;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v6 == v3)
    {
      v6 = v3;
      memset(v9, 0, sizeof(v9));
    }
    else
    {
      if (v6 >= v3)
        goto LABEL_11;
      sub_2381CDE14(v4 + 40 * v6, (uint64_t)v8);
      *(_QWORD *)&v9[0] = v6;
      sub_2381DFE90(v8, (uint64_t)v9 + 8);
      ++v6;
    }
    sub_2381E4B14((uint64_t)v9, (uint64_t)&v10);
    if (!v12)
      return swift_bridgeObjectRelease();
    v7 = v10;
    sub_2381DFE90(&v11, (uint64_t)v9);
    result = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)v1 + 184))(result, v9);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    if (v2)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2381E4B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7F10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381E4B5C()
{
  uint64_t v0;

  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_2381E4B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v8(a2, a1, a3, a4);
}

uint64_t sub_2381E4BE4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_2381E4C14(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_2381E4C50())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2381E4C90(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_2381E4CC4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v3 + 96))() & 1) != 0)
  {
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v6 = 1;
    *(_QWORD *)(v6 + 8) = 0xD00000000000001DLL;
    *(_QWORD *)(v6 + 16) = 0x800000023823EC20;
    return swift_willThrow();
  }
  else
  {
    result = sub_2381E4DAC();
    if (!v4)
    {
      a3();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2381E4DAC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  sqlite3_stmt *v6;
  uint64_t result;
  uint64_t v8;
  sqlite3_stmt *v9[2];

  v9[1] = *(sqlite3_stmt **)MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 112);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    sub_2381E46D8();
    swift_allocError();
    *v2 = 3;
  }
  else
  {
    v9[0] = 0;
    v3 = sub_23823866C();
    v4 = *(_QWORD *)(v3 + 16);
    if (v4 >> 31)
      __break(1u);
    v5 = sqlite3_prepare_v2(*(sqlite3 **)(v1 + 16), (const char *)(v3 + 32), v4, v9, 0);
    swift_release();
    v6 = v9[0];
    if (v9[0] && !v5)
    {
      type metadata accessor for SQLiteDB.Statement();
      result = swift_allocObject();
      *(_BYTE *)(result + 24) = 0;
      *(_QWORD *)(result + 16) = v6;
      return result;
    }
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v8 = v5;
    *(_QWORD *)(v8 + 8) = 0xD00000000000001BLL;
    *(_QWORD *)(v8 + 16) = 0x800000023823EEB0;
  }
  return swift_willThrow();
}

sqlite3_int64 sub_2381E4EEC()
{
  uint64_t v0;

  return sqlite3_changes64(*(sqlite3 **)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 112) + 16));
}

uint64_t sub_2381E4EFC()
{
  return sub_2381E500C();
}

uint64_t sub_2381E4F20()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  sqlite3 *v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    sub_2381E46D8();
    swift_allocError();
    *v2 = 3;
  }
  else
  {
    v3 = *(sqlite3 **)(v1 + 16);
    v4 = sub_23823866C();
    v5 = sqlite3_exec(v3, (const char *)(v4 + 32), 0, 0, 0);
    result = swift_release();
    if (!v5)
      return result;
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v7 = v5;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
  }
  return swift_willThrow();
}

uint64_t sub_2381E4FE4()
{
  return sub_2381E500C();
}

uint64_t sub_2381E500C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))() & 1) != 0)
  {
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v2 = 1;
    *(_QWORD *)(v2 + 8) = 0xD00000000000001DLL;
    *(_QWORD *)(v2 + 16) = 0x800000023823EC20;
    return swift_willThrow();
  }
  else
  {
    result = sub_2381E4F20();
    if (!v1)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 104))(1);
  }
  return result;
}

uint64_t sub_2381E50D8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2381E50FC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2381E5148(a1);
  return v2;
}

uint64_t sub_2381E5148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  sqlite3 *v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  int v15;
  int v16;
  uint64_t v18;

  v3 = v1;
  v5 = type metadata accessor for SQLiteDB.Location();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  sub_2381E3EE4(a1, (uint64_t)v7);
  type metadata accessor for SQLiteDB.DBHandle();
  v8 = swift_allocObject();
  sub_2381E3F28((uint64_t)v7);
  if (!v2)
  {
    v9 = *(sqlite3 **)(v8 + 16);
    v10 = sqlite3_exec(v9, "PRAGMA journal_mode=WAL;", 0, 0, 0);
    if (v10)
    {
      v11 = v10;
      sub_2381E4468();
      swift_allocError();
      *(_DWORD *)v12 = v11;
      v13 = 0xD000000000000014;
      v14 = "Failed to enable WAL";
    }
    else
    {
      v15 = sqlite3_exec(v9, "PRAGMA foreign_keys=ON;", 0, 0, 0);
      if (!v15)
      {
        sub_2381E5330(a1);
        *(_QWORD *)(v3 + 112) = v8;
        return v3;
      }
      v16 = v15;
      v13 = 0xD000000000000013;
      sub_2381E4468();
      swift_allocError();
      *(_DWORD *)v12 = v16;
      v14 = "Failed to enable FK";
    }
    *(_QWORD *)(v12 + 8) = v13;
    *(_QWORD *)(v12 + 16) = (unint64_t)(v14 - 32) | 0x8000000000000000;
    swift_willThrow();
    swift_release();
  }
  swift_defaultActor_destroy();
  sub_2381E5330(a1);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for SQLiteDB.DBHandle()
{
  return objc_opt_self();
}

uint64_t sub_2381E5330(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2381E536C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t result;

  result = sub_2381E4DAC();
  if (!v3)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_2381E53D0(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  type metadata accessor for SQLiteDB.Transaction();
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v1;
  swift_retain();
  sub_2381E4F20();
  if (!v2)
  {
    a1(v4);
    swift_beginAccess();
    if ((*(_BYTE *)(v4 + 24) & 1) == 0)
      sub_2381E4F20();
  }
  return swift_release();
}

uint64_t type metadata accessor for SQLiteDB.Transaction()
{
  return objc_opt_self();
}

uint64_t sub_2381E5514()
{
  return sub_2381E4F20();
}

uint64_t sub_2381E5528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 112);
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    *(_BYTE *)(v1 + 24) = 1;
    return sqlite3_close_v2(*(sqlite3 **)(v1 + 16));
  }
  return result;
}

uint64_t sub_2381E5548()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381E556C(uint64_t result, uint64_t a2, char a3)
{
  int v3;
  uint64_t v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3 & 1);
  if ((_DWORD)result)
  {
    v3 = result;
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v4 = v3;
    *(_QWORD *)(v4 + 8) = 0xD000000000000012;
    *(_QWORD *)(v4 + 16) = 0x800000023823ECE0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E5608@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  int v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    result = swift_release();
    *a3 = v4 > 0;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381E5670(uint64_t a1, uint64_t a2)
{
  char *v2;

  return sub_2381E556C(a1, a2, *v2);
}

uint64_t sub_2381E5688(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000 || a3 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_9;
  if (a3 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3);
  if ((_DWORD)result)
  {
    v3 = result;
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v4 = v3;
    *(_QWORD *)(v4 + 8) = 0xD000000000000012;
    *(_QWORD *)(v4 + 16) = 0x800000023823ECE0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E5738@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381E579C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_2381E5688(a1, a2, *v2);
}

uint64_t sub_2381E57B4(uint64_t result, uint64_t a2, sqlite3_int64 a3)
{
  int v3;
  uint64_t v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  result = sqlite3_bind_int64(*(sqlite3_stmt **)(result + 16), a2, a3);
  if ((_DWORD)result)
  {
    v3 = result;
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v4 = v3;
    *(_QWORD *)(v4 + 8) = 0xD000000000000014;
    *(_QWORD *)(v4 + 16) = 0x800000023823ED00;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E584C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, sqlite3_int64 *a3@<X8>)
{
  sqlite3_int64 v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    v4 = sqlite3_column_int64(*(sqlite3_stmt **)(result + 16), a2);
    result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381E58AC(uint64_t a1, uint64_t a2)
{
  sqlite3_int64 *v2;

  return sub_2381E57B4(a1, a2, *v2);
}

uint64_t sub_2381E58C4(uint64_t result, uint64_t a2, double a3)
{
  int v3;
  uint64_t v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  result = sqlite3_bind_double(*(sqlite3_stmt **)(result + 16), a2, a3);
  if ((_DWORD)result)
  {
    v3 = result;
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v4 = v3;
    *(_QWORD *)(v4 + 8) = 0xD000000000000015;
    *(_QWORD *)(v4 + 16) = 0x800000023823ED20;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E595C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  double v4;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    v4 = sqlite3_column_double(*(sqlite3_stmt **)(result + 16), a2);
    result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381E59BC(uint64_t a1, uint64_t a2)
{
  double *v2;

  return sub_2381E58C4(a1, a2, *v2);
}

uint64_t sub_2381E59D4(sqlite3_stmt *a1, uint64_t a2)
{
  unint64_t v2;
  const char *v3;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_23823866C();
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v2 = *(_QWORD *)(v6 + 16);
  if (!(v2 >> 31))
  {
    v3 = (const char *)(v6 + 32);
    a1 = (sqlite3_stmt *)*((_QWORD *)a1 + 2);
    if (qword_2568EC000 == -1)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  swift_once();
LABEL_5:
  v7 = sqlite3_bind_text(a1, a2, v3, v2, (void (__cdecl *)(void *))qword_2568EC008);
  result = swift_release();
  if (v7)
  {
    sub_2381E4468();
    swift_allocError();
    *(_DWORD *)v9 = v7;
    *(_QWORD *)(v9 + 8) = 0xD000000000000015;
    *(_QWORD *)(v9 + 16) = 0x800000023823ED40;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2381E5AF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (sqlite3_column_text(*(sqlite3_stmt **)(result + 16), a2))
  {
    v4 = sub_2382386CC();
    v6 = v5;
    result = swift_release();
  }
  else
  {
    result = swift_release();
    v4 = 0;
    v6 = 0;
  }
  *a3 = v4;
  a3[1] = v6;
  return result;
}

uint64_t sub_2381E5B70(sqlite3_stmt *a1, uint64_t a2)
{
  return sub_2381E59D4(a1, a2);
}

void sub_2381E5B88()
{
  qword_2568EC008 = -1;
}

unint64_t sub_2381E5BA0()
{
  unint64_t result;

  result = qword_2568E7F18;
  if (!qword_2568E7F18)
  {
    result = MEMORY[0x23B82FD68](&unk_23823AD64, &type metadata for DBError);
    atomic_store(result, (unint64_t *)&qword_2568E7F18);
  }
  return result;
}

uint64_t destroy for SessionHierarchyItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19CloudTelemetryTools8SQLErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLError()
{
  return &type metadata for SQLError;
}

uint64_t storeEnumTagSinglePayload for DBError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2381E5DB4 + 4 * byte_23823ACAD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2381E5DE8 + 4 * byte_23823ACA8[v4]))();
}

uint64_t sub_2381E5DE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E5DF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381E5DF8);
  return result;
}

uint64_t sub_2381E5E04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381E5E0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2381E5E10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381E5E18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DBError()
{
  return &type metadata for DBError;
}

uint64_t type metadata accessor for SQLiteDB()
{
  return objc_opt_self();
}

uint64_t *sub_2381E5E54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_238238210();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_2381E5F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_238238210();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_2381E5F84(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_238238210();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_2381E6028(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_238238210();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_2381E6118(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_238238210();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_2381E61BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_238238210();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_2381E62AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381E62B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_238238210();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_2381E6304()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381E6310(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_238238210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2381E6360(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238238210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_2381E6398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238238210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_2381E63D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SQLiteDB.Statement()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SQLiteDB.Row()
{
  return &type metadata for SQLiteDB.Row;
}

uint64_t sub_2381E6468()
{
  uint64_t *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v18[3];

  v0 = sub_238204C68();
  swift_beginAccess();
  v1 = (id)*v0;
  v2 = (void *)sub_2382385E8();
  v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  v4 = 1;
  switch((unint64_t)v3)
  {
    case 0uLL:
      goto LABEL_8;
    case 1uLL:
      v4 = 0;
      goto LABEL_13;
    case 2uLL:
      goto LABEL_13;
    case 3uLL:
      v4 = 2;
      goto LABEL_13;
    case 4uLL:
      v4 = 3;
LABEL_13:
      if (qword_2568EC4A0 != -1)
        swift_once();
      v10 = sub_238238444();
      __swift_project_value_buffer(v10, (uint64_t)qword_2568F0008);
      v11 = sub_23823842C();
      v12 = sub_238238864();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        v18[0] = (id)v14;
        *(_DWORD *)v13 = 136446466;
        v15 = sub_238238654();
        sub_2381CBC6C(v15, v16, (uint64_t *)v18);
        sub_238238960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_238238960();
        _os_log_impl(&dword_2381C6000, v11, v12, "overriding environmentType to %{public}s (%{public}ld) from defaults", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v14, -1, -1);
        MEMORY[0x23B82FE28](v13, -1, -1);
      }

      break;
    default:
      if (qword_2568EC4A0 != -1)
        swift_once();
      v5 = sub_238238444();
      __swift_project_value_buffer(v5, (uint64_t)qword_2568F0008);
      v6 = sub_23823842C();
      v7 = sub_23823887C();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v8 = 134349056;
        v18[0] = v3;
        sub_238238960();
        _os_log_impl(&dword_2381C6000, v6, v7, "invalid environmentType override from defaults: %{public}ld", v8, 0xCu);
        MEMORY[0x23B82FE28](v8, -1, -1);
      }

LABEL_8:
      v9 = sub_238204BB4();
      swift_beginAccess();
      if (*v9)
        v4 = 1;
      else
        v4 = 3;
      break;
  }
  return v4;
}

_QWORD *sub_2381E67AC(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v17 = *(_BYTE *)(a3 + v5 + 32);
    a1(&v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v8 = v16;
    if (v16)
    {
      v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_2381E8A8C(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_2381E8A8C((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      v6[2] = v11 + 1;
      v7 = &v6[2 * v11];
      *((_BYTE *)v7 + 32) = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v13 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2381E68FC()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381E6940()
{
  return sub_238238CF0();
}

uint64_t sub_2381E696C()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t sub_2381E69AC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2381EB090(*a1);
  *a2 = result;
  return result;
}

void sub_2381E69D4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_2381E69E4(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509F8018;
}

uint64_t sub_2381E69F4()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0008);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0008);
  return sub_238238438();
}

uint64_t sub_2381E6A68(char a1)
{
  return *(_QWORD *)&aDevelopmappleI[8 * a1];
}

uint64_t sub_2381E6A88()
{
  char *v0;

  return sub_2381E6A68(*v0);
}

uint64_t sub_2381E6A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = sub_2381EB25C(a1, a2);
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

void sub_2381E6ACC(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2381E6AD8()
{
  sub_2381ECFB8();
  return sub_238238D68();
}

uint64_t sub_2381E6B00()
{
  sub_2381ECFB8();
  return sub_238238D74();
}

double sub_2381E6B28@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_2381EB660(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_2381E6B6C(char a1)
{
  if (!a1)
    return 0xD00000000000001DLL;
  if (a1 == 1)
    return 0xD000000000000025;
  return 0xD000000000000010;
}

unint64_t sub_2381E6BCC()
{
  char *v0;

  return sub_2381E6B6C(*v0);
}

uint64_t sub_2381E6BD4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v10;
  char v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  unint64_t v20;
  uint64_t v21;

  sub_238238138();
  swift_allocObject();
  sub_23823812C();
  sub_2381EB0C8();
  sub_238238120();
  if (v4)
  {
    sub_2381D2640(a1, a2);
    return swift_release();
  }
  else
  {
    v10 = v20;
    if (*(_QWORD *)(v21 + 16) && (sub_2381E9678(a3), (v11 & 1) != 0))
      v12 = swift_bridgeObjectRetain();
    else
      v12 = sub_2381E6D94(MEMORY[0x24BEE4AF8]);
    if (v19)
      v13 = 86400;
    else
      v13 = v18;
    v15 = v12;
    if (v20)
    {
      swift_bridgeObjectRetain();
      v14 = v17;
      swift_bridgeObjectRetain();
      sub_2381D2640(a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = v17;
      swift_bridgeObjectRetain();
      v10 = sub_2381E6EDC(MEMORY[0x24BEE4AF8]);
      sub_2381D2640(a1, a2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    *(_QWORD *)a4 = v15;
    *(_DWORD *)(a4 + 8) = v13;
    *(_QWORD *)(a4 + 16) = v16;
    *(_QWORD *)(a4 + 24) = v14;
    *(_QWORD *)(a4 + 32) = v10;
  }
  return result;
}

unint64_t sub_2381E6D94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E83C0);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 72);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 5);
    v6 = *((_QWORD *)v4 - 4);
    v7 = *((_QWORD *)v4 - 3);
    v8 = *((_QWORD *)v4 - 2);
    v9 = *((_QWORD *)v4 - 1);
    v10 = *v4;
    swift_bridgeObjectRetain();
    sub_2381CDAE0(v7, v8, v9, v10);
    result = sub_2381CC2AC(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = v2[7] + 32 * result;
    *(_QWORD *)v14 = v7;
    *(_QWORD *)(v14 + 8) = v8;
    *(_QWORD *)(v14 + 16) = v9;
    *(_BYTE *)(v14 + 24) = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 48;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2381E6EDC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83B8);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2381CC2AC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v7;
    *(_BYTE *)(v12 + 8) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 32;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2381E7004@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  double v65;
  int v66;
  uint64_t v67;
  BOOL v68;
  BOOL v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  int v87;
  _BOOL4 v88;
  _BOOL4 v89;
  void *v90;
  uint64_t v91;
  _QWORD *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  BOOL v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  double *v122;
  _QWORD *v123;
  uint64_t v124;
  double v125;
  uint64_t v126;
  uint64_t v127;
  char v129;
  BOOL v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  __int128 v138;
  unsigned __int8 v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  BOOL v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  unint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  _BOOL4 v164;
  uint8_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unsigned __int8 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  BOOL v196;
  BOOL v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  unint64_t v211;
  unint64_t v212;
  int64_t v213;
  uint64_t v214;
  _OWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char v236;
  uint64_t result;
  __int128 v238;
  _OWORD *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  _OWORD *v243;
  char *v244;
  uint64_t v245;
  __int128 v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _QWORD *v250;
  uint64_t v251;
  _QWORD *v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  int64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unint64_t v277;
  int64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  __int128 v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  uint64_t v307;
  _QWORD v308[2];
  __int128 v309;
  __int128 v310;

  v3 = v2;
  v243 = a2;
  v5 = sub_238238444();
  v273 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v272 = (char *)&v240 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SessionConfiguration.Backend(0);
  v248 = *(_QWORD *)(v7 - 8);
  v249 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v252 = (char **)((char *)&v240 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v242 = (uint64_t)&v240 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v241 = (uint64_t)&v240 - v12;
  v13 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  MEMORY[0x24BDAC7A8](v13);
  v240 = (char *)&v240 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  MEMORY[0x24BDAC7A8](v15);
  v260 = (char *)&v240 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_238238210();
  v264 = *(_QWORD *)(v17 - 8);
  v265 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v245 = (uint64_t)&v240 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v244 = (char *)&v240 - v20;
  v21 = sub_23823839C();
  v282 = *(_QWORD *)(v21 - 8);
  v283 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v263 = (char *)&v240 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v269 = (char *)&v240 - v24;
  v25 = sub_2382383B4();
  v280 = *(_QWORD *)(v25 - 8);
  v281 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v262 = (char *)&v240 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v268 = (char *)&v240 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E82E8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v261 = (char *)&v240 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v240 - v32;
  v34 = a1[3];
  v35 = a1[4];
  v266 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v35 + 8))(v308, v34, v35);
  v310 = v309;
  v36 = *((_QWORD *)&v309 + 1);
  v37 = v309;
  swift_bridgeObjectRetain();
  sub_2381CC9D4((uint64_t)v308);
  v250 = v3;
  v38 = *v3;
  v39 = v36;
  v40 = *(_QWORD *)(v38 + 64);
  v267 = v38 + 64;
  v41 = 1 << *(_BYTE *)(v38 + 32);
  v42 = -1;
  if (v41 < 64)
    v42 = ~(-1 << v41);
  v43 = v42 & v40;
  v270 = (unint64_t)(v41 + 63) >> 6;
  v257 = &v294;
  swift_bridgeObjectRetain();
  v44 = v43;
  v45 = 0;
  v251 = 0;
  *(_QWORD *)&v46 = 136315138;
  v256 = v46;
  v255 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v46 = 136446210;
  v246 = v46;
  v253 = MEMORY[0x24BEE4AF8];
  v247 = MEMORY[0x24BEE4AF8];
  v276 = v5;
  v279 = v33;
  v288 = v37;
  v258 = v38;
  v292 = v39;
  while (1)
  {
LABEL_7:
    if (v44)
    {
      v49 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      v50 = v49 | (v45 << 6);
    }
    else
    {
      if (__OFADD__(v45++, 1))
        goto LABEL_258;
      if (v45 >= v270)
      {
LABEL_253:
        swift_release();
        sub_2381EC924((uint64_t)&v310);
        v234 = v250[2];
        v235 = v250[3];
        swift_bridgeObjectRetain();
        v236 = sub_2381CCC54();
        result = sub_2381E2D2C(v247, v253, v236 & 1, v234, v235, (uint64_t)&v295);
        v238 = v296;
        v239 = v243;
        *v243 = v295;
        v239[1] = v238;
        *((_QWORD *)v239 + 4) = v297;
        return result;
      }
      v52 = *(_QWORD *)(v267 + 8 * v45);
      if (!v52)
      {
        v53 = v45 + 1;
        if (v45 + 1 >= v270)
          goto LABEL_253;
        v52 = *(_QWORD *)(v267 + 8 * v53);
        if (!v52)
        {
          v53 = v45 + 2;
          if (v45 + 2 >= v270)
            goto LABEL_253;
          v52 = *(_QWORD *)(v267 + 8 * v53);
          if (!v52)
          {
            v53 = v45 + 3;
            if (v45 + 3 >= v270)
              goto LABEL_253;
            v52 = *(_QWORD *)(v267 + 8 * v53);
            if (!v52)
            {
              while (1)
              {
                v45 = v53 + 1;
                if (__OFADD__(v53, 1))
                  goto LABEL_261;
                if (v45 >= v270)
                  goto LABEL_253;
                v52 = *(_QWORD *)(v267 + 8 * v45);
                ++v53;
                if (v52)
                  goto LABEL_19;
              }
            }
          }
        }
        v45 = v53;
      }
LABEL_19:
      v44 = (v52 - 1) & v52;
      v50 = __clz(__rbit64(v52)) + (v45 << 6);
    }
    v54 = *(_QWORD *)(v38 + 56) + 32 * v50;
    v55 = *(_QWORD *)(v54 + 8);
    v285 = *(_QWORD *)v54;
    v56 = *(_QWORD *)(v54 + 16);
    v57 = *(unsigned __int8 *)(v54 + 24);
    if (v57)
      break;
    *(_QWORD *)&v291 = *(_QWORD *)(v56 + 16);
    if (!(_QWORD)v291)
      continue;
    v277 = v44;
    v278 = v45;
    v74 = (uint64_t *)(*(_QWORD *)(v38 + 48) + 16 * v50);
    v75 = v74[1];
    v254 = *v74;
    v284 = v75;
    swift_bridgeObjectRetain();
    v271 = v55;
    sub_2381CDAE0(v285, v55, v56, 0);
    swift_bridgeObjectRetain();
    if (!*(_QWORD *)(v56 + 16))
    {
LABEL_254:
      __break(1u);
LABEL_255:
      __break(1u);
LABEL_256:
      __break(1u);
LABEL_257:
      __break(1u);
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
LABEL_261:
      __break(1u);
LABEL_262:
      __break(1u);
LABEL_263:
      __break(1u);
      goto LABEL_264;
    }
    v76 = 0;
    v289 = v56;
    v290 = v56 + 32;
    while (2)
    {
      v77 = (__int128 *)(v290 + 200 * v76);
      v295 = *v77;
      v78 = v77[1];
      v79 = v77[2];
      v80 = v77[4];
      v298 = v77[3];
      v299 = v80;
      v296 = v78;
      v297 = v79;
      v81 = v77[5];
      v82 = v77[6];
      v83 = v77[8];
      v302 = v77[7];
      v303 = v83;
      v300 = v81;
      v301 = v82;
      v84 = v77[9];
      v85 = v77[10];
      v86 = v77[11];
      v307 = *((_QWORD *)v77 + 24);
      v305 = v85;
      v306 = v86;
      v304 = v84;
      if (__PAIR128__(v39, v37) != v295 && (sub_238238C0C() & 1) == 0)
        goto LABEL_134;
      v87 = BYTE8(v306);
      if (BYTE8(v306) == 2)
      {
        sub_2381EC6A8((uint64_t)&v295);
        v88 = 0;
      }
      else
      {
        sub_2381EC6A8((uint64_t)&v295);
        v88 = sub_2381F6114(v87 & 1);
      }
      v89 = BYTE9(v306) != 2 && sub_2381F6114(BYTE9(v306) & 1);
      if (((sub_23820506C() | v88) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_2381EC77C((uint64_t)&v295);
        if (qword_2568EC4A0 != -1)
          swift_once();
        __swift_project_value_buffer(v5, (uint64_t)qword_2568F0008);
        v161 = v284;
        swift_bridgeObjectRetain();
        v162 = sub_23823842C();
        v163 = sub_238238870();
        v164 = os_log_type_enabled(v162, v163);
        v38 = v258;
        if (v164)
        {
          v165 = (uint8_t *)swift_slowAlloc();
          v166 = swift_slowAlloc();
          v294 = v166;
          *(_DWORD *)v165 = v246;
          swift_bridgeObjectRetain();
          v293 = sub_2381CBC6C(v254, v161, &v294);
          v33 = v279;
          v37 = v288;
          sub_238238960();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2381C6000, v162, v163, "skipping %{public}s: dnu disabled", v165, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v166, -1, -1);
          MEMORY[0x23B82FE28](v165, -1, -1);

          v167 = v285;
          v168 = v271;
          v169 = v289;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v167 = v285;
          v168 = v271;
          v169 = v56;
        }
        sub_2381CDB30(v167, v168, v169, 0);
        goto LABEL_200;
      }
      LODWORD(v286) = v89;
      LODWORD(v287) = v87;
      v90 = (void *)sub_2382385E8();
      v91 = MGCopyAnswer();

      if (!v91)
        goto LABEL_263;
      v92 = (_QWORD *)*((_QWORD *)&v299 + 1);
      type metadata accessor for CFString();
      v93 = (void *)swift_dynamicCastUnknownClassUnconditional();
      v94 = sub_23823860C();
      v96 = v95;

      if (v92)
      {
        v97 = v92[2];
        if (!v97)
          goto LABEL_73;
        if ((v92[4] != v94 || v92[5] != v96) && (sub_238238C0C() & 1) == 0)
        {
          v56 = v289;
          if (v97 == 1)
            goto LABEL_76;
          if ((v92[6] != v94 || v92[7] != v96) && (sub_238238C0C() & 1) == 0)
          {
            if (v97 == 2)
            {
LABEL_76:
              swift_bridgeObjectRelease();
              sub_2381EC77C((uint64_t)&v295);
              v39 = v292;
              goto LABEL_134;
            }
            v149 = v92 + 9;
            v150 = 2;
            while (1)
            {
              v151 = v150 + 1;
              if (__OFADD__(v150, 1))
                goto LABEL_259;
              v152 = *(v149 - 1) == v94 && *v149 == v96;
              if (v152 || (sub_238238C0C() & 1) != 0)
                break;
              v149 += 2;
              ++v150;
              if (v151 == v97)
                goto LABEL_138;
            }
            v37 = v288;
          }
        }
      }
      v98 = (_QWORD *)v299;
      if ((_QWORD)v299)
      {
        v99 = *(_QWORD *)(v299 + 16);
        if (v99)
        {
          v100 = *(_QWORD *)(v299 + 32) == v94 && *(_QWORD *)(v299 + 40) == v96;
          if (!v100 && (sub_238238C0C() & 1) == 0)
          {
            if (v99 == 1)
              goto LABEL_78;
            if ((v98[6] != v94 || v98[7] != v96) && (sub_238238C0C() & 1) == 0)
            {
              if (v99 == 2)
                goto LABEL_78;
              swift_bridgeObjectRetain();
              v153 = v98 + 9;
              v154 = 2;
              while (1)
              {
                v155 = v154 + 1;
                if (__OFADD__(v154, 1))
                  goto LABEL_260;
                v156 = *(v153 - 1) == v94 && *v153 == v96;
                if (v156 || (sub_238238C0C() & 1) != 0)
                  break;
                v153 += 2;
                ++v154;
                if (v155 == v99)
                {
                  swift_bridgeObjectRelease();
                  v33 = v279;
                  goto LABEL_78;
                }
              }
              swift_bridgeObjectRelease();
              v33 = v279;
              v37 = v288;
            }
          }
LABEL_73:
          swift_bridgeObjectRelease();
LABEL_74:
          sub_2381EC77C((uint64_t)&v295);
          goto LABEL_133;
        }
      }
LABEL_78:
      swift_bridgeObjectRelease();
      v101 = (_QWORD *)v306;
      if ((_QWORD)v306)
      {
        swift_bridgeObjectRetain();
        v102 = v268;
        sub_238238384();
        v103 = v269;
        sub_2382383A8();
        (*(void (**)(char *, uint64_t))(v280 + 8))(v102, v281);
        sub_238238390();
        (*(void (**)(char *, uint64_t))(v282 + 8))(v103, v283);
        v104 = sub_238238378();
        v105 = *(_QWORD *)(v104 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v33, 1, v104) == 1)
        {
          swift_bridgeObjectRelease();
          sub_2381EC77C((uint64_t)&v295);
          sub_2381CCCD0((uint64_t)v33, &qword_2568E82E8);
          goto LABEL_132;
        }
        v106 = sub_23823836C();
        v108 = v107;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v33, v104);
        v109 = v101[2];
        if (!v109)
        {
          swift_bridgeObjectRelease();
LABEL_138:
          swift_bridgeObjectRelease();
          sub_2381EC77C((uint64_t)&v295);
          goto LABEL_132;
        }
        if (v101[4] == v106 && v101[5] == v108 || (sub_238238C0C() & 1) != 0)
          goto LABEL_85;
        v37 = v288;
        if (v109 == 1)
          goto LABEL_166;
        if (v101[6] == v106 && v101[7] == v108 || (sub_238238C0C() & 1) != 0)
        {
LABEL_85:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v109 == 2)
          {
LABEL_166:
            swift_bridgeObjectRelease();
            goto LABEL_73;
          }
          swift_bridgeObjectRetain();
          v157 = v101 + 9;
          v158 = 2;
          while (1)
          {
            v159 = v158 + 1;
            if (__OFADD__(v158, 1))
              goto LABEL_262;
            v160 = *(v157 - 1) == v106 && *v157 == v108;
            if (v160 || (sub_238238C0C() & 1) != 0)
              break;
            v157 += 2;
            ++v158;
            if (v159 == v109)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v33 = v279;
              v37 = v288;
              goto LABEL_74;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
      }
      v110 = v262;
      sub_238238384();
      v111 = v263;
      sub_2382383A8();
      (*(void (**)(char *, uint64_t))(v280 + 8))(v110, v281);
      v112 = (uint64_t)v261;
      sub_238238390();
      (*(void (**)(char *, uint64_t))(v282 + 8))(v111, v283);
      v113 = sub_238238378();
      v114 = *(_QWORD *)(v113 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113) == 1)
      {
        sub_2381CCCD0(v112, &qword_2568E82E8);
        goto LABEL_121;
      }
      v115 = v307;
      v116 = sub_23823836C();
      v118 = v117;
      v119 = v112;
      v120 = v115;
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v119, v113);
      if (!v115 || (v274 = *(_QWORD *)(v115 + 16)) == 0)
      {
LABEL_120:
        swift_bridgeObjectRelease();
LABEL_121:
        if (BYTE8(v297))
          v125 = 1.0;
        else
          v125 = *(double *)&v297;
        goto LABEL_124;
      }
      v275 = v115 + 32;
      swift_bridgeObjectRetain();
      v121 = 0;
      v259 = v115;
      while (1)
      {
        if (v121 >= *(_QWORD *)(v120 + 16))
          goto LABEL_256;
        v122 = (double *)(v275 + 16 * v121);
        v123 = *(_QWORD **)v122;
        v124 = *(_QWORD *)(*(_QWORD *)v122 + 16);
        if (!v124)
          goto LABEL_92;
        v125 = v122[1];
        v126 = v123[4];
        v127 = v123[5];
        swift_bridgeObjectRetain();
        if (v126 == v116 && v127 == v118)
          goto LABEL_182;
        v129 = sub_238238C0C();
        swift_bridgeObjectRetain_n();
        if ((v129 & 1) != 0)
          goto LABEL_181;
        if (v124 != 1)
          break;
LABEL_91:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v120 = v259;
LABEL_92:
        if (++v121 == v274)
        {
          swift_bridgeObjectRelease();
          goto LABEL_120;
        }
      }
      v130 = v123[6] == v116 && v123[7] == v118;
      if (!v130 && (sub_238238C0C() & 1) == 0)
      {
        if (v124 != 2)
        {
          if (v123[8] == v116 && v123[9] == v118 || (sub_238238C0C() & 1) != 0)
            goto LABEL_181;
          if (v124 != 3)
          {
            v131 = v123 + 11;
            v132 = 3;
            while (1)
            {
              v133 = v132 + 1;
              if (__OFADD__(v132, 1))
                goto LABEL_257;
              v134 = *(v131 - 1) == v116 && *v131 == v118;
              if (v134 || (sub_238238C0C() & 1) != 0)
                goto LABEL_181;
              v131 += 2;
              ++v132;
              if (v133 == v124)
                goto LABEL_91;
            }
          }
        }
        goto LABEL_91;
      }
LABEL_181:
      swift_bridgeObjectRelease_n();
LABEL_182:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_124:
      v135 = v266[3];
      v136 = v266[4];
      __swift_project_boxed_opaque_existential_1(v266, v135);
      if ((*(double (**)(uint64_t, uint64_t))(v136 + 24))(v135, v136) >= v125)
      {
        swift_bridgeObjectRelease();
        sub_2381EC77C((uint64_t)&v295);
        sub_2381CDB30(v285, v271, v289, 0);
        swift_bridgeObjectRelease();
        v5 = v276;
        v33 = v279;
        v37 = v288;
        v38 = v258;
LABEL_200:
        v39 = v292;
        goto LABEL_6;
      }
      v137 = BYTE9(v305);
      v138 = v303;
      v139 = v304;
      v140 = v296;
      v141 = (uint64_t)v260;
      sub_2382381F8();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v141, 1, v265) == 1)
      {
        sub_2381CCCD0(v141, &qword_2568E7840);
        if (qword_2568EC4A0 != -1)
          swift_once();
        v5 = v276;
        v142 = __swift_project_value_buffer(v276, (uint64_t)qword_2568F0008);
        v144 = v272;
        v143 = v273;
        (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v272, v142, v5);
        sub_2381EC6A8((uint64_t)&v295);
        v145 = sub_23823842C();
        v146 = sub_23823887C();
        if (os_log_type_enabled(v145, v146))
        {
          v147 = (uint8_t *)swift_slowAlloc();
          v148 = swift_slowAlloc();
          v294 = v148;
          *(_DWORD *)v147 = v256;
          swift_bridgeObjectRetain();
          v293 = sub_2381CBC6C(v140, *((unint64_t *)&v140 + 1), &v294);
          v5 = v276;
          sub_238238960();
          swift_bridgeObjectRelease();
          sub_2381EC77C((uint64_t)&v295);
          sub_2381EC77C((uint64_t)&v295);
          _os_log_impl(&dword_2381C6000, v145, v146, "invalid URL \"%s\"", v147, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v148, -1, -1);
          MEMORY[0x23B82FE28](v147, -1, -1);

          (*(void (**)(char *, uint64_t))(v273 + 8))(v272, v5);
        }
        else
        {
          sub_2381EC77C((uint64_t)&v295);
          sub_2381EC77C((uint64_t)&v295);

          (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v5);
        }
        v33 = v279;
LABEL_132:
        v37 = v288;
LABEL_133:
        v39 = v292;
        v56 = v289;
LABEL_134:
        if (++v76 == (_QWORD)v291)
        {
          swift_bridgeObjectRelease();
          sub_2381CDB30(v285, v271, v56, 0);
          swift_bridgeObjectRelease();
          v38 = v258;
          goto LABEL_6;
        }
        if (v76 >= *(_QWORD *)(v56 + 16))
          goto LABEL_254;
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
    v192 = v264;
    v191 = v265;
    v193 = v244;
    (*(void (**)(char *, uint64_t, uint64_t))(v264 + 32))(v244, v141, v265);
    v194 = v250[4];
    sub_2381EB124();
    v195 = sub_2381EBDF4(v138, *((uint64_t *)&v138 + 1), v139, v194);
    sub_2381EB148();
    (*(void (**)(uint64_t, char *, uint64_t))(v192 + 16))(v245, v193, v191);
    v196 = sub_2381F6114((v137 == 2) | v137 & 1);
    v197 = (_DWORD)v287 != 2 && sub_2381F6114(v287 & 1);
    v201 = (uint64_t)v240;
    v33 = v279;
    v37 = v288;
    sub_2381EC77C((uint64_t)&v295);
    sub_2381E2C7C(v254, v284, v245, v195, v196, v197, v201, v125);
    v5 = v276;
    if ((v286 & 1) != 0)
    {
      sub_2381EC8A4(v201, v241);
      swift_storeEnumTagMultiPayload();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v292;
      v203 = v289;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        v204 = v253;
      else
        v204 = sub_2381E8DB0(0, *(_QWORD *)(v253 + 16) + 1, 1, v253);
      v206 = *(_QWORD *)(v204 + 16);
      v205 = *(_QWORD *)(v204 + 24);
      v207 = v206 + 1;
      if (v206 >= v205 >> 1)
      {
        v208 = sub_2381E8DB0(v205 > 1, v206 + 1, 1, v204);
        v209 = v241;
        v253 = v208;
      }
      else
      {
        v253 = v204;
        v208 = v204;
        v209 = v241;
      }
    }
    else
    {
      sub_2381EC8A4(v201, v242);
      swift_storeEnumTagMultiPayload();
      v210 = swift_isUniquelyReferenced_nonNull_native();
      v39 = v292;
      v203 = v289;
      if ((v210 & 1) != 0)
        v211 = v247;
      else
        v211 = sub_2381E8DB0(0, *(_QWORD *)(v247 + 16) + 1, 1, v247);
      v206 = *(_QWORD *)(v211 + 16);
      v212 = *(_QWORD *)(v211 + 24);
      v207 = v206 + 1;
      if (v206 >= v212 >> 1)
      {
        v208 = sub_2381E8DB0(v212 > 1, v206 + 1, 1, v211);
        v209 = v242;
        v247 = v208;
      }
      else
      {
        v247 = v211;
        v208 = v211;
        v209 = v242;
      }
    }
    *(_QWORD *)(v208 + 16) = v207;
    sub_2381ED34C(v209, v208+ ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80))+ *(_QWORD *)(v248 + 72) * v206, type metadata accessor for SessionConfiguration.Backend);
    sub_2381CDB30(v285, v271, v203, 0);
    sub_2381EC8E8(v201);
    (*(void (**)(char *, uint64_t))(v264 + 8))(v244, v265);
    v38 = v258;
LABEL_6:
    v44 = v277;
    v45 = v278;
  }
  if (v57 != 1)
    goto LABEL_7;
  v277 = v44;
  v278 = v45;
  v58 = v285;
  sub_2381CDAE0(v285, v55, v56, 1);
  swift_bridgeObjectRetain();
  v59 = sub_238204BB4();
  swift_beginAccess();
  if ((*v59 & 1) == 0)
  {
    sub_2381CDB30(v58, v55, v56, 1);
    v47 = v58;
    v48 = v55;
LABEL_5:
    sub_2381CDB30(v47, v48, v56, 1);
    goto LABEL_6;
  }
  v271 = v55;
  v60 = *(_QWORD *)(v58 + 16);
  if (!v60)
  {
    v170 = v271;
    sub_2381CDB30(v58, v271, v56, 1);
    v47 = v58;
    v48 = v170;
    goto LABEL_5;
  }
  v289 = v56;
  v61 = 0;
  *(_QWORD *)&v291 = v58 + 32;
  while (1)
  {
    v62 = v291 + 72 * v61;
    v63 = *(_QWORD **)v62;
    v64 = *(_QWORD *)(*(_QWORD *)v62 + 16);
    if (!v64)
      goto LABEL_25;
    v65 = *(double *)(v62 + 8);
    v66 = *(unsigned __int8 *)(v62 + 16);
    v290 = *(_QWORD *)(v62 + 24);
    v275 = *(_QWORD *)(v62 + 32);
    LODWORD(v284) = *(unsigned __int8 *)(v62 + 40);
    v67 = *(_QWORD *)(v62 + 56);
    v286 = *(_QWORD *)(v62 + 48);
    LODWORD(v287) = *(unsigned __int8 *)(v62 + 64);
    v68 = v63[4] == v37 && v63[5] == v39;
    if (v68 || (sub_238238C0C() & 1) != 0)
      break;
    if (v64 != 1)
    {
      v69 = v63[6] == v37 && v63[7] == v39;
      if (v69 || (sub_238238C0C() & 1) != 0)
        break;
      if (v64 != 2)
      {
        v70 = v63 + 9;
        v71 = 2;
        do
        {
          v72 = v71 + 1;
          if (__OFADD__(v71, 1))
            goto LABEL_255;
          if (*(v70 - 1) == v288 && *v70 == v292)
          {
            v37 = v288;
            goto LABEL_203;
          }
          if ((sub_238238C0C() & 1) != 0)
          {
            v37 = v288;
            goto LABEL_203;
          }
          v70 += 2;
          ++v71;
        }
        while (v72 != v64);
      }
    }
LABEL_25:
    ++v61;
    v33 = v279;
    v37 = v288;
    v39 = v292;
    if (v61 == v60)
    {
      v198 = v285;
      v199 = v271;
      v200 = v289;
      sub_2381CDB30(v285, v271, v289, 1);
      sub_2381CDB30(v198, v199, v200, 1);
      v5 = v276;
      v38 = v258;
      goto LABEL_6;
    }
  }
LABEL_203:
  v171 = v290;
  if (v66)
    v65 = 1.0;
  v173 = v266[3];
  v172 = v266[4];
  __swift_project_boxed_opaque_existential_1(v266, v173);
  *(_QWORD *)&v291 = *(_QWORD *)(v172 + 24);
  swift_bridgeObjectRetain();
  v174 = v171;
  v175 = v275;
  v176 = v284;
  sub_2381EB10C(v174, v275, v284);
  sub_2381EB124();
  if (((double (*)(uint64_t, uint64_t))v291)(v173, v172) >= v65)
  {
    swift_bridgeObjectRelease();
    sub_2381EB130(v290, v175, v176);
    sub_2381EB148();
    v187 = v285;
    v188 = v271;
    v189 = v289;
    sub_2381CDB30(v285, v271, v289, 1);
    sub_2381CDB30(v187, v188, v189, 1);
    v5 = v276;
    v44 = v277;
    v38 = v258;
    v39 = v292;
    v45 = v278;
    v33 = v279;
    goto LABEL_7;
  }
  *(_QWORD *)&v291 = v67;
  v177 = v250[4];
  v274 = sub_2381EBDF4(v290, v175, v176, v177);
  v38 = v258;
  v178 = v285;
  if ((v287 & 1) == 0)
  {
    v190 = v286;
    swift_bridgeObjectRetain();
    v186 = v190;
    v33 = v279;
    goto LABEL_231;
  }
  v179 = v286;
  v33 = v279;
  if (!*(_QWORD *)(v177 + 16))
  {
LABEL_230:
    v186 = MEMORY[0x24BEE4AF8];
    goto LABEL_231;
  }
  v180 = v291;
  swift_bridgeObjectRetain();
  v181 = sub_2381CC2AC(v179, v180);
  if ((v182 & 1) == 0)
  {
    sub_2381EB148();
    goto LABEL_230;
  }
  v183 = *(_QWORD *)(v177 + 56) + 16 * v181;
  v184 = *(_QWORD *)v183;
  v185 = *(unsigned __int8 *)(v183 + 8);
  swift_bridgeObjectRetain();
  sub_2381EB148();
  swift_bridgeObjectRelease();
  v186 = MEMORY[0x24BEE4AF8];
  v68 = v185 == 1;
  v38 = v258;
  if (!v68)
  {
LABEL_231:
    swift_bridgeObjectRelease();
    v184 = v186;
  }
  sub_2381EB130(v290, v275, v284);
  sub_2381EB148();
  v213 = *(_QWORD *)(v184 + 16);
  if (v213)
  {
    *(_QWORD *)&v295 = MEMORY[0x24BEE4AF8];
    sub_2381EABD0(0, v213, 0);
    v214 = v295;
    v287 = v184;
    v215 = (_OWORD *)(v184 + 64);
    do
    {
      v217 = *((_QWORD *)v215 - 4);
      v216 = *((_QWORD *)v215 - 3);
      LODWORD(v290) = *((unsigned __int8 *)v215 - 16);
      v218 = *((_QWORD *)v215 - 1);
      v291 = *v215;
      *(_QWORD *)&v295 = v214;
      v220 = *(_QWORD *)(v214 + 16);
      v219 = *(_QWORD *)(v214 + 24);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v220 >= v219 >> 1)
      {
        sub_2381EABD0(v219 > 1, v220 + 1, 1);
        v214 = v295;
      }
      v215 += 3;
      *(_QWORD *)(v214 + 16) = v220 + 1;
      v221 = v214 + (v220 << 6);
      *(_QWORD *)(v221 + 32) = v217;
      *(_QWORD *)(v221 + 40) = v216;
      *(_QWORD *)(v221 + 48) = v217;
      *(_QWORD *)(v221 + 56) = v216;
      *(_BYTE *)(v221 + 64) = v290;
      *(_QWORD *)(v221 + 72) = v218;
      *(_OWORD *)(v221 + 80) = v291;
      --v213;
    }
    while (v213);
    swift_bridgeObjectRelease();
    v56 = v289;
    sub_2381CDB30(v285, v271, v289, 1);
    v33 = v279;
    v37 = v288;
    v38 = v258;
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = v289;
    sub_2381CDB30(v178, v271, v289, 1);
    v214 = MEMORY[0x24BEE4AF8];
  }
  v5 = v276;
  if (*(_QWORD *)(v214 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E82F0);
    v222 = sub_238238B10();
  }
  else
  {
    v222 = MEMORY[0x24BEE4B00];
  }
  *(_QWORD *)&v295 = v222;
  v223 = swift_bridgeObjectRetain();
  v224 = v251;
  sub_2381E9324(v223, 1, &v295);
  v251 = v224;
  if (!v224)
  {
    swift_bridgeObjectRelease();
    v226 = nullsub_1(v274, v295, v225);
    v227 = v252;
    *v252 = v228;
    v227[1] = v226;
    v227[2] = v229;
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v39 = v292;
      v230 = v253;
    }
    else
    {
      v230 = sub_2381E8DB0(0, *(_QWORD *)(v253 + 16) + 1, 1, v253);
      v39 = v292;
    }
    v232 = *(_QWORD *)(v230 + 16);
    v231 = *(_QWORD *)(v230 + 24);
    if (v232 >= v231 >> 1)
      v230 = sub_2381E8DB0(v231 > 1, v232 + 1, 1, v230);
    *(_QWORD *)(v230 + 16) = v232 + 1;
    v233 = (*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80);
    v253 = v230;
    sub_2381ED34C((uint64_t)v252, v230 + v233 + *(_QWORD *)(v248 + 72) * v232, type metadata accessor for SessionConfiguration.Backend);
    v47 = v285;
    v48 = v271;
    goto LABEL_5;
  }
LABEL_264:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

_QWORD *sub_2381E8A8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8358);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2381EB154(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2381E8B98(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8350);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2381EB57C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2381E8C90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2381EBCE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381E8DB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8388);
  v10 = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_238238AD4();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2381ED234(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void sub_2381E8FB8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned __int8 v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned __int8 v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v7 = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  v10 = sub_2381E9678(v7);
  v12 = v9[2];
  v13 = (v11 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_24;
  v15 = v10;
  v16 = v11;
  v17 = v9[3];
  swift_bridgeObjectRetain();
  if (v17 >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2381E96D4();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_BYTE *)(v22[6] + v15) = v7;
    *(_QWORD *)(v22[7] + 8 * v15) = v8;
    v23 = v22[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v25;
    v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = (_QWORD *)(a1 + 56);
    while (1)
    {
      v29 = *v27;
      v28 = *((_BYTE *)v27 - 8);
      v30 = (_QWORD *)*a3;
      v31 = sub_2381E9678(v28);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        break;
      v36 = v31;
      v37 = v32;
      v38 = v30[3];
      swift_bridgeObjectRetain();
      if (v38 < v35)
      {
        sub_2381E9A70(v35, 1);
        v39 = sub_2381E9678(v28);
        if ((v37 & 1) != (v40 & 1))
          goto LABEL_26;
        v36 = v39;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v41 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(_BYTE *)(v41[6] + v36) = v28;
      *(_QWORD *)(v41[7] + 8 * v36) = v29;
      v42 = v41[2];
      v24 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v24)
        goto LABEL_25;
      v41[2] = v43;
      v27 += 2;
      if (!--v26)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_2381E9A70(v14, a2 & 1);
  v18 = sub_2381E9678(v7);
  if ((v16 & 1) == (v19 & 1))
  {
    v15 = v18;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_238238C90();
  __break(1u);
LABEL_27:
  sub_238238A20();
  sub_2382386B4();
  sub_238238AC8();
  sub_2382386B4();
  sub_238238AE0();
  __break(1u);
}

void sub_2381E9324(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v36;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v31 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = 0;
  v30 = v3;
  while (1)
  {
    if (v6 >= *(_QWORD *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_238238C90();
      __break(1u);
      goto LABEL_24;
    }
    v36 = *(_OWORD *)(v3 + v5 + 80);
    v7 = *(_BYTE *)(v3 + v5 + 64);
    v8 = *(_QWORD *)(v3 + v5 + 72);
    v10 = *(_QWORD *)(v3 + v5 + 48);
    v9 = *(_QWORD *)(v3 + v5 + 56);
    v12 = *(_QWORD *)(v3 + v5 + 32);
    v11 = *(_QWORD *)(v3 + v5 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v11)
      goto LABEL_18;
    v32 = v10;
    v33 = v9;
    v13 = (_QWORD *)*a3;
    v15 = sub_2381CC2AC(v12, v11);
    v16 = v13[2];
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_21;
    v19 = v14;
    if (v13[3] < v18)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_2381E9874();
      if ((v19 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v23 = (uint64_t *)(v22[6] + 16 * v15);
    *v23 = v12;
    v23[1] = v11;
    v24 = v22[7] + 48 * v15;
    *(_QWORD *)v24 = v32;
    *(_QWORD *)(v24 + 8) = v33;
    *(_BYTE *)(v24 + 16) = v7;
    *(_QWORD *)(v24 + 24) = v8;
    *(_OWORD *)(v24 + 32) = v36;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_22;
    ++v6;
    v22[2] = v27;
    v5 += 64;
    a2 = 1;
    v3 = v30;
    if (v31 == v6)
      goto LABEL_18;
  }
  sub_2381E9D3C(v18, a2 & 1);
  v20 = sub_2381CC2AC(v12, v11);
  if ((v19 & 1) != (v21 & 1))
    goto LABEL_23;
  v15 = v20;
  if ((v19 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v28 = (void *)swift_allocError();
  swift_willThrow();
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_238238A20();
  sub_2382386B4();
  sub_238238AC8();
  sub_2382386B4();
  sub_238238AE0();
  __break(1u);
}

unint64_t sub_2381E9678(unsigned __int8 a1)
{
  uint64_t v2;

  sub_238238CE4();
  sub_238238CF0();
  v2 = sub_238238D08();
  return sub_2381EA098(a1, v2);
}

void *sub_2381E96D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8348);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2381E9874()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E82F0);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v27 = *(_OWORD *)(v21 + 32);
    *v26 = v19;
    v26[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v28 = v22;
    *(_QWORD *)(v28 + 8) = v23;
    *(_BYTE *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    *(_OWORD *)(v28 + 32) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2381E9A70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8348);
  result = sub_238238B04();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_238238CE4();
      sub_238238CF0();
      result = sub_238238D08();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_2381E9D3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E82F0);
  v40 = a2;
  v6 = sub_238238B04();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 48 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      v41 = *(_QWORD *)(v32 + 24);
      v42 = *(_OWORD *)(v32 + 32);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_238238CE4();
      sub_238238684();
      result = sub_238238D08();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_BYTE *)(v19 + 16) = v35;
      *(_QWORD *)(v19 + 24) = v41;
      *(_OWORD *)(v19 + 32) = v42;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2381EA098(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_2381EA138(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_238238CE4();
  swift_bridgeObjectRetain();
  sub_238238684();
  v8 = sub_238238D08();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_238238C0C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_238238C0C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2381EA5C0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2381EA2E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83A0);
  v3 = sub_2382389FC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_238238CE4();
      sub_238238684();
      result = sub_238238D08();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2381EA5C0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2381EA2E4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2381EA758();
      goto LABEL_22;
    }
    sub_2381EA908();
  }
  v11 = *v4;
  sub_238238CE4();
  sub_238238684();
  result = sub_238238D08();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_238238C0C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_238238C84();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_238238C0C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_2381EA758()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83A0);
  v2 = *v0;
  v3 = sub_2382389F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2381EA908()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83A0);
  v3 = sub_2382389FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_238238CE4();
    swift_bridgeObjectRetain();
    sub_238238684();
    result = sub_238238D08();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2381EABB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2381EABEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2381EABD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2381EADCC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2381EABEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AD0);
  v10 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381EADCC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8390);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8398);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381EAF54(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23823806C();
  if (!result || (result = sub_238238090(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_238238084();
      sub_238238564();
      sub_2381D49C0((unint64_t *)&qword_2568E82C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_238238528();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2381EB018(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_2381DFE90(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_2381EB090(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return (0x302010004uLL >> (8 * a1));
}

uint64_t sub_2381EB0B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2381D2684(a1, a2);
  return a1;
}

unint64_t sub_2381EB0C8()
{
  unint64_t result;

  result = qword_2568EC4A8[0];
  if (!qword_2568EC4A8[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B268, &type metadata for Storebag._StorebagRoot);
    atomic_store(result, qword_2568EC4A8);
  }
  return result;
}

uint64_t sub_2381EB10C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_2381EB124();
  return result;
}

uint64_t sub_2381EB124()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2381EB130(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_2381EB148();
  return result;
}

uint64_t sub_2381EB148()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2381EB154(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8360);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381EB25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  char v7;
  char v8;
  char v9;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_238238C0C() & 1) != 0)
    return 4;
  if (a1 == 0x5F68736572666572 && a2 == 0xED0000656C637963 || (sub_238238C0C() & 1) != 0)
    return 5;
  if (a1 == 0x765F646572616873 && a2 == 0xEC00000073656C61 || (sub_238238C0C() & 1) != 0)
    return 6;
  if (a1 == 0x6D706F6C65766564 && a2 == 0xEB00000000746E65)
  {
    v4 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    return v4;
  }
  v6 = sub_238238C0C();
  swift_bridgeObjectRelease();
  v4 = 0;
  if ((v6 & 1) != 0)
    return v4;
  if (a1 == 0x6E695F656C707061 && a2 == 0xEE006C616E726574)
  {
    v4 = 1;
    swift_bridgeObjectRelease();
    return v4;
  }
  v7 = sub_238238C0C();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    return 1;
  if (a1 == 1684366707 && a2 == 0xE400000000000000)
  {
    v4 = 2;
    swift_bridgeObjectRelease();
    return v4;
  }
  v8 = sub_238238C0C();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return 2;
  v4 = 3;
  if (a1 == 0x657361656C6572 && a2 == 0xE700000000000000)
    goto LABEL_17;
  v9 = sub_238238C0C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 3;
  else
    return 7;
}

char *sub_2381EB57C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381EB660@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8328);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381ECFB8();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = v6;
  v27 = a2;
  LOBYTE(v32) = 4;
  v10 = sub_238238B7C();
  v12 = v11;
  LOBYTE(v32) = 5;
  swift_bridgeObjectRetain();
  v25 = sub_238238B64();
  v26 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8330);
  v31 = 6;
  sub_2381ED184(&qword_2568E8338, &qword_2568E8330, (uint64_t (*)(void))sub_2381ECFFC);
  sub_238238B58();
  v24 = v32;
  swift_bridgeObjectRetain();
  v13 = sub_238238BAC();
  if (*(_QWORD *)(v13 + 16))
  {
    v23[1] = v5;
    v23[2] = v12;
    swift_bridgeObjectRetain();
    v28 = v13;
    __asm { BR              X8 }
  }
  v14 = MEMORY[0x24BEE4AF8];
  v15 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v15);
  v23[-2] = v8;
  v16 = sub_2381E67AC((void (*)(uint64_t *__return_ptr, char *))sub_2381ED040, (uint64_t)&v23[-4], v14);
  swift_bridgeObjectRelease();
  if (v16[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8348);
    v17 = sub_238238B10();
  }
  else
  {
    v17 = MEMORY[0x24BEE4B00];
  }
  v32 = v17;
  v18 = swift_bridgeObjectRetain();
  sub_2381E8FB8(v18, 1, &v32);
  swift_bridgeObjectRelease();
  v19 = v32;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v5);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_release();
  v20 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v21 = v27;
  *v27 = v26;
  v21[1] = v12;
  v22 = BYTE4(v25);
  *((_DWORD *)v21 + 4) = v25;
  *((_BYTE *)v21 + 20) = v22 & 1;
  v21[3] = v20;
  v21[4] = v19;
  return result;
}

uint64_t sub_2381EBCE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E83B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381EBDF4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  _UNKNOWN **v54;
  void (*v55)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>);
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v57;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[5];
  uint64_t v80;
  _QWORD *v81;

  v8 = ~a3;
  v78 = type metadata accessor for ServiceEventValue();
  v9 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v11 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v8)
    goto LABEL_9;
  if ((a3 & 1) == 0)
  {
    sub_2381EB124();
    goto LABEL_10;
  }
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_9;
  sub_2381EB124();
  v12 = sub_2381CC2AC(a1, a2);
  if ((v13 & 1) == 0)
  {
    sub_2381EB130(a1, a2, a3);
    goto LABEL_9;
  }
  v14 = *(_QWORD *)(a4 + 56) + 16 * v12;
  v15 = *(_QWORD *)v14;
  v16 = *(unsigned __int8 *)(v14 + 8);
  swift_bridgeObjectRetain();
  sub_2381EB130(a1, a2, a3);
  if (v16)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    a1 = MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
  a1 = v15;
LABEL_10:
  result = (uint64_t)sub_2381E8C90(0, *(_QWORD *)(a1 + 16), 0, MEMORY[0x24BEE4AF8]);
  v81 = (_QWORD *)result;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v19 = 0;
    v20 = a1 + 32;
    v65 = "Swift/NativeDictionary.swift";
    v64 = 0x800000023823EFB0;
    v67 = v18;
    v68 = a1;
    v66 = a1 + 32;
    while (1)
    {
      if (v19 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      v24 = (uint64_t *)(v20 + 72 * v19);
      if (!v24[5])
        break;
LABEL_14:
      if (++v19 == v18)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v81;
      }
    }
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    v69 = v19;
    v70 = v27;
    v29 = v24[4];
    v30 = v24[6];
    v31 = v24[7];
    v32 = v24[8];
    swift_bridgeObjectRetain();
    v76 = v26;
    swift_bridgeObjectRetain();
    v71 = v28;
    swift_bridgeObjectRetain();
    v72 = v29;
    v73 = v32;
    v74 = v31;
    v75 = v30;
    sub_2381E2568(v29, 0);
    swift_bridgeObjectRetain();
    v33 = sub_238238840();
    v80 = v33;
    v34 = *(_QWORD *)(v25 + 16);
    v77 = v25;
    if (v34)
    {
      v35 = (uint64_t *)(v25 + 40);
      do
      {
        v36 = *(v35 - 1);
        v37 = *v35;
        swift_bridgeObjectRetain();
        sub_2381EA138(v79, v36, v37);
        swift_bridgeObjectRelease();
        v35 += 2;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      v39 = v80;
    }
    else
    {
      v39 = v33;
      swift_bridgeObjectRelease();
    }
    v19 = v69;
    v40 = v76;
    v41 = *(_QWORD *)(v76 + 16);
    if (v41)
    {
      v69 = v39;
      v79[0] = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_2381EABB4(0, v41, 0);
      v42 = v79[0];
      v43 = (uint64_t *)(v40 + 40);
      do
      {
        v44 = *v43;
        *v11 = *(v43 - 1);
        v11[1] = v44;
        swift_storeEnumTagMultiPayload();
        v79[0] = v42;
        v45 = *(_QWORD *)(v42 + 16);
        v46 = *(_QWORD *)(v42 + 24);
        swift_bridgeObjectRetain();
        if (v45 >= v46 >> 1)
        {
          sub_2381EABB4(v46 > 1, v45 + 1, 1);
          v42 = v79[0];
        }
        v43 += 2;
        *(_QWORD *)(v42 + 16) = v45 + 1;
        sub_2381ED34C((uint64_t)v11, v42+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v45, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      v39 = v69;
    }
    else
    {
      v42 = MEMORY[0x24BEE4AF8];
    }
    v47 = nullsub_1(v39, v42, v38);
    v49 = v48;
    v50 = v70;
    v51 = v71;
    if (v70 == 0x776F6C6C61 && v71 == 0xE500000000000000 || (sub_238238C0C() & 1) != 0)
    {
      v52 = v47;
      swift_bridgeObjectRelease();
      v53 = &type metadata for EventAllowFilter;
      v54 = &off_2509F99E0;
      goto LABEL_33;
    }
    if (v50 == 0x65766F6D6572 && v51 == 0xE600000000000000 || (sub_238238C0C() & 1) != 0)
    {
      v52 = v47;
      swift_bridgeObjectRelease();
      v53 = &type metadata for EventRemoveFilter;
      v54 = &off_2509F99F8;
      goto LABEL_33;
    }
    if (v50 == 0x363532616873 && v51 == 0xE600000000000000 || (sub_238238C0C() & 1) != 0)
    {
      v52 = v47;
      swift_bridgeObjectRelease();
      v53 = &type metadata for EventSHA256KeyFilter;
      v54 = &off_2509F9A10;
      goto LABEL_33;
    }
    if (v50 == 0x73696C6574696877 && v51 == 0xEF7365756C615674 || (sub_238238C0C() & 1) != 0)
    {
      v52 = v47;
      swift_bridgeObjectRelease();
      v53 = &type metadata for EventAllowValuesFilter;
      v54 = &off_2509F9A28;
      goto LABEL_33;
    }
    if (v50 == 0x73696C6B63616C62 && v51 == 0xEF7365756C615674 || (sub_238238C0C() & 1) != 0)
    {
      v52 = v47;
      swift_bridgeObjectRelease();
      v53 = &type metadata for EventDenyValuesFilter;
      v54 = &off_2509F9A40;
      goto LABEL_33;
    }
    if (v50 == 0xD000000000000018 && v51 == v64)
    {
      v52 = v47;
    }
    else
    {
      if ((sub_238238C0C() & 1) == 0)
      {
        if (v50 == 0x646E65707061 && v51 == 0xE600000000000000 || (sub_238238C0C() & 1) != 0)
        {
          v52 = v47;
          swift_bridgeObjectRelease();
          v53 = &type metadata for EventAppendToKeyFilter;
          v54 = &off_2509F9A70;
        }
        else
        {
          if (v50 != 0x646E6570657270 || v51 != 0xE700000000000000)
          {
            v61 = sub_238238C0C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2381E25B8(v72, 0);
            if ((v61 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              result = swift_bridgeObjectRelease();
LABEL_13:
              v18 = v67;
              a1 = v68;
              v20 = v66;
              goto LABEL_14;
            }
            v52 = v47;
            v53 = &type metadata for EventPrependToKeyFilter;
            v54 = &off_2509F9A88;
LABEL_34:
            v55 = (void (*)(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>))v54[1];
            v79[3] = (uint64_t)v53;
            v79[4] = (uint64_t)v54;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
            v55(v52, v49, boxed_opaque_existential_1);
            v57 = v81;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              isUniquelyReferenced_nonNull_native = (uint64_t)sub_2381E8C90(0, v57[2] + 1, 1, v57);
              v57 = (_QWORD *)isUniquelyReferenced_nonNull_native;
              v81 = (_QWORD *)isUniquelyReferenced_nonNull_native;
            }
            v60 = v57[2];
            v59 = v57[3];
            if (v60 >= v59 >> 1)
            {
              isUniquelyReferenced_nonNull_native = (uint64_t)sub_2381E8C90((_QWORD *)(v59 > 1), v60 + 1, 1, v57);
              v57 = (_QWORD *)isUniquelyReferenced_nonNull_native;
              v81 = (_QWORD *)isUniquelyReferenced_nonNull_native;
            }
            MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
            v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, uint64_t *, ValueMetadata *))(v23 + 16))(v22, boxed_opaque_existential_1, v53);
            sub_2381EB018(v60, (uint64_t)v22, (uint64_t *)&v81, (uint64_t)v53, (uint64_t)v54);
            v81 = v57;
            result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
            goto LABEL_13;
          }
          v52 = v47;
          swift_bridgeObjectRelease();
          v53 = &type metadata for EventPrependToKeyFilter;
          v54 = &off_2509F9A88;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2381E25B8(v72, 0);
        goto LABEL_34;
      }
      v52 = v47;
    }
    swift_bridgeObjectRelease();
    v53 = &type metadata for EventInsertStringKeyFilter;
    v54 = &off_2509F9A58;
    goto LABEL_33;
  }
  v62 = result;
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_2381EC6A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2381EB124();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2381EC77C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2381EB148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for CFString()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2568E8320)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2568E8320);
  }
}

uint64_t sub_2381EC8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381EC8E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2381EC924(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2381EC950()
{
  unint64_t result;

  result = qword_2568E82F8;
  if (!qword_2568E82F8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B044, &type metadata for StorebagEnvironment);
    atomic_store(result, (unint64_t *)&qword_2568E82F8);
  }
  return result;
}

uint64_t sub_2381EC994()
{
  return sub_2381EC9C0(&qword_2568E8300, &qword_2568E8308, MEMORY[0x24BEE12E0]);
}

uint64_t sub_2381EC9C0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B82FD68](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2381ECA04()
{
  unint64_t result;

  result = qword_2568E8310;
  if (!qword_2568E8310)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B11C, &type metadata for Storebag.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8310);
  }
  return result;
}

unint64_t sub_2381ECA4C()
{
  unint64_t result;

  result = qword_2568E8318;
  if (!qword_2568E8318)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B1CC, &type metadata for Storebag.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8318);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StorebagEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2381ECADC + 4 * byte_23823B021[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2381ECB10 + 4 * byte_23823B01C[v4]))();
}

uint64_t sub_2381ECB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ECB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381ECB20);
  return result;
}

uint64_t sub_2381ECB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381ECB34);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2381ECB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ECB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagEnvironment()
{
  return &type metadata for StorebagEnvironment;
}

uint64_t destroy for Storebag()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Storebag()
{
  return &type metadata for Storebag;
}

uint64_t getEnumTagSinglePayload for Storebag.Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Storebag.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2381ECDB4 + 4 * byte_23823B02B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2381ECDE8 + 4 * byte_23823B026[v4]))();
}

uint64_t sub_2381ECDE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ECDF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381ECDF8);
  return result;
}

uint64_t sub_2381ECE04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381ECE0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2381ECE10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ECE18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Storebag.Error()
{
  return &type metadata for Storebag.Error;
}

uint64_t destroy for Storebag._StorebagRoot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot()
{
  return &type metadata for Storebag._StorebagRoot;
}

unint64_t sub_2381ECFB8()
{
  unint64_t result;

  result = qword_2568EC930[0];
  if (!qword_2568EC930[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B2EC, &type metadata for Storebag._StorebagRoot.CodingKeys);
    atomic_store(result, qword_2568EC930);
  }
  return result;
}

unint64_t sub_2381ECFFC()
{
  unint64_t result;

  result = qword_2568E8340;
  if (!qword_2568E8340)
  {
    result = MEMORY[0x23B82FD68](&unk_23823CB5C, &type metadata for StorebagSharedValue);
    atomic_store(result, (unint64_t *)&qword_2568E8340);
  }
  return result;
}

uint64_t sub_2381ED040@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;

  v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8328);
  sub_2381ED140();
  sub_238238B94();
  if (v2)
  {

    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8370);
    sub_2381ED184(&qword_2568E8378, &qword_2568E8370, (uint64_t (*)(void))sub_2381ED1F0);
    result = sub_238238B94();
    *a2 = v4;
    a2[1] = v6;
  }
  else
  {
    result = sub_2381D2640(v6, v7);
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

unint64_t sub_2381ED140()
{
  unint64_t result;

  result = qword_2568E8368;
  if (!qword_2568E8368)
  {
    result = MEMORY[0x23B82FD68](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2568E8368);
  }
  return result;
}

uint64_t sub_2381ED184(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x24BEE0D38];
    v8[1] = v7;
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE04E0], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2381ED1F0()
{
  unint64_t result;

  result = qword_2568E8380;
  if (!qword_2568E8380)
  {
    result = MEMORY[0x23B82FD68](&unk_238239D7C, &type metadata for StorebagSectionBackend);
    atomic_store(result, (unint64_t *)&qword_2568E8380);
  }
  return result;
}

uint64_t sub_2381ED234(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381ED34C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t getEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
  {
    v6 = *a1;
    if (v6 >= 4)
      v7 = v6 - 3;
    else
      v7 = 0;
    if (v7 >= 4)
      return v7 - 3;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2381ED41C + 4 * byte_23823B030[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2381ED4C8 + 4 * byte_23823B03A[v5]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2381ED4FC + 4 * byte_23823B035[v5]))();
}

uint64_t sub_2381ED4FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ED504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381ED50CLL);
  return result;
}

uint64_t sub_2381ED518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381ED520);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2381ED524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ED52C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381ED538(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_2381ED54C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot.CodingKeys()
{
  return &type metadata for Storebag._StorebagRoot.CodingKeys;
}

unint64_t sub_2381ED570()
{
  unint64_t result;

  result = qword_2568ECA40;
  if (!qword_2568ECA40)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B29C, &type metadata for Storebag._StorebagRoot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568ECA40);
  }
  return result;
}

unint64_t sub_2381ED5B8()
{
  unint64_t result;

  result = qword_2568ECA48[0];
  if (!qword_2568ECA48[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B2C4, &type metadata for Storebag._StorebagRoot.CodingKeys);
    atomic_store(result, qword_2568ECA48);
  }
  return result;
}

void *sub_2381ED5FC()
{
  return &unk_23823B3F0;
}

void *sub_2381ED608()
{
  return &unk_23823B3F8;
}

uint64_t sub_2381ED614()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0020);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0020);
  return sub_238238438();
}

uint64_t sub_2381ED690(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14;

  swift_allocObject();
  v14 = sub_2381F0C60(a1, a2, a3, a4, a5, a6, a7);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_2381ED72C(char a1)
{
  return *(_QWORD *)&aPosttimeclient[8 * a1];
}

uint64_t sub_2381ED74C()
{
  char *v0;

  return sub_2381ED72C(*v0);
}

uint64_t sub_2381ED754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2381F0E44(a1, a2);
  *a3 = result;
  return result;
}

void sub_2381ED778(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2381ED784()
{
  sub_2381F14B8();
  return sub_238238D68();
}

uint64_t sub_2381ED7AC()
{
  sub_2381F14B8();
  return sub_238238D74();
}

uint64_t sub_2381ED7D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;

  v12 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E84E8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381F14B8();
  sub_238238D50();
  v16 = 0;
  sub_238238BC4();
  if (!v4)
  {
    v15 = 1;
    sub_238238BB8();
    v14 = a4;
    v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E84F0);
    sub_2381F14FC();
    sub_238238BD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2381ED950(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2381ED7D4(a1, v1[1], v1[2], v1[3]);
}

uint64_t sub_2381ED970(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[37] = a1;
  v2[38] = v1;
  v3 = sub_238238360();
  v2[39] = v3;
  v2[40] = *(_QWORD *)(v3 - 8);
  v2[41] = swift_task_alloc();
  v4 = type metadata accessor for ServiceEventValue();
  v2[42] = v4;
  v2[43] = *(_QWORD *)(v4 - 8);
  v2[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v5 = sub_238238210();
  v2[47] = v5;
  v2[48] = *(_QWORD *)(v5 - 8);
  v2[49] = swift_task_alloc();
  v6 = sub_238237FE8();
  v2[50] = v6;
  v2[51] = *(_QWORD *)(v6 - 8);
  v2[52] = swift_task_alloc();
  v7 = sub_238238000();
  v2[53] = v7;
  v2[54] = *(_QWORD *)(v7 - 8);
  v2[55] = swift_task_alloc();
  v8 = sub_23823830C();
  v2[56] = v8;
  v2[57] = *(_QWORD *)(v8 - 8);
  v2[58] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381EDB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  __int128 v35;
  uint64_t v36[16];

  v36[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  swift_retain();
  v3 = sub_2381F0F80(v1, v2);
  swift_release();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_OWORD *)(v3 + 40);
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      v7 = *((_QWORD *)v5 - 1);
      v35 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36[0] = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2381CC40C(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v36[0];
      }
      v9 = *(_QWORD *)(v6 + 16);
      v8 = *(_QWORD *)(v6 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_2381CC40C(v8 > 1, v9 + 1, 1);
        v6 = v36[0];
      }
      *(_QWORD *)(v6 + 16) = v9 + 1;
      v10 = v6 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v7;
      *(_OWORD *)(v10 + 40) = v35;
      v5 = (_OWORD *)((char *)v5 + 24);
      --v4;
    }
    while (v4);
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __asm { BR              X0 }
  }
  if (qword_2568ECAD0 != -1)
    swift_once();
  v11 = sub_238238444();
  *(_QWORD *)(v0 + 472) = __swift_project_value_buffer(v11, (uint64_t)qword_2568F0020);
  swift_retain_n();
  swift_retain();
  v12 = sub_23823842C();
  v13 = sub_238238894();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v36[0] = v15;
    *(_DWORD *)v14 = 134349314;
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v6 + 16);
    sub_238238960();
    swift_release();
    *(_WORD *)(v14 + 12) = 2082;
    sub_2381D49C0(&qword_2568E83D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v16 = sub_238238BE8();
    *(_QWORD *)(v0 + 288) = sub_2381CBC6C(v16, v17, v36);
    sub_238238960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v12, v13, "submitting %{public}ld events to %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v15, -1, -1);
    MEMORY[0x23B82FE28](v14, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release();
  }
  v19 = *(_QWORD *)(v0 + 456);
  v18 = *(_QWORD *)(v0 + 464);
  v20 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 304);
  sub_2382382DC();
  v22 = getTimeIntervalSince1970(Date:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  v23 = *(_QWORD *)(v21 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID);
  v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID + 8);
  v34 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_2381EFE7C(v6);
  swift_release();
  sub_238238030();
  swift_allocObject();
  *(_QWORD *)(v0 + 480) = sub_238238024();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76D8);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_238239E40;
  sub_238237FF4();
  *(_QWORD *)(v0 + 264) = v26;
  sub_2381D49C0(&qword_2568E76E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E76E8);
  sub_2381F11AC();
  sub_238238990();
  sub_23823800C();
  *(double *)(v0 + 104) = (double)v22;
  *(_QWORD *)(v0 + 112) = v34;
  *(_QWORD *)(v0 + 120) = v24;
  *(_QWORD *)(v0 + 128) = v25;
  sub_2381F11F8();
  v27 = sub_238238018();
  *(_QWORD *)(v0 + 488) = 0;
  *(_QWORD *)(v0 + 496) = v27;
  *(_QWORD *)(v0 + 504) = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = sub_238204BB4();
  swift_beginAccess();
  if (*v29 == 1 && *sub_238204D68() == 1
    || (v30 = *(_QWORD *)(v0 + 304),
        (*(_BYTE *)(v30 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_skipLogging) & 1) != 0))
  {
    v31 = *(_QWORD *)(v0 + 504);
    (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 384) + 16))(*(_QWORD *)(v0 + 392));
    sub_238237FB8();
    __asm { BR              X10 }
  }
  *(_QWORD *)(v0 + 512) = *(_QWORD *)(v30 + 120);
  v32 = (_QWORD *)(v30 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_name);
  *(_QWORD *)(v0 + 520) = *v32;
  *(_QWORD *)(v0 + 528) = v32[1];
  return swift_task_switch();
}

uint64_t sub_2381EED94()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[61];
  sub_2381D1590(v0[65], v0[66], v0[62], v0[63]);
  v0[67] = v1;
  return swift_task_switch();
}

void sub_2381EEE3C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[63];
  (*(void (**)(_QWORD))(v0[48] + 16))(v0[49]);
  sub_238237FB8();
  __asm { BR              X10 }
}

void sub_2381EEF0C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v3 = *(_QWORD *)(v1 + 504);
  *(_QWORD *)(v1 + 592) = *(_QWORD *)(v1 + 496);
  *(_WORD *)(v1 + 600) = v3;
  *(_BYTE *)(v1 + 602) = BYTE2(v3);
  *(_BYTE *)(v1 + 603) = BYTE3(v3);
  *(_BYTE *)(v1 + 604) = BYTE4(v3);
  *(_BYTE *)(v1 + 605) = BYTE5(v3);
  sub_2381F01B4((Bytef *)(v1 + 592), v1 + 592 + BYTE6(v3), (_OWORD *)(v2 - 96));
  v8 = v0;
  v9 = *(_QWORD *)(v1 + 496);
  v10 = *(_QWORD *)(v1 + 504);
  sub_2381D2640(v9, v10);
  sub_2381D2640(v9, v10);
  if (v0)
  {
    v11 = v0;
    v12 = v0;
    v13 = sub_23823842C();
    v14 = sub_23823887C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_QWORD *)(v2 - 96) = v16;
      *(_DWORD *)v15 = 136446210;
      swift_getErrorValue();
      v17 = sub_238238C9C();
      *(_QWORD *)(v1 + 256) = sub_2381CBC6C(v17, v18, (uint64_t *)(v2 - 96));
      sub_238238960();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2381C6000, v13, v14, "failed to compress payload: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v16, -1, -1);
      MEMORY[0x23B82FE28](v15, -1, -1);

    }
    else
    {

    }
    v4 = 0;
    v6 = *(_QWORD *)(v1 + 496);
    v7 = *(_QWORD *)(v1 + 504);
    v5 = 0xF000000000000000;
  }
  else
  {
    v4 = *(_QWORD *)(v2 - 96);
    v5 = *(_QWORD *)(v2 - 88);
    if (v5 >> 60 == 15)
      v6 = *(_QWORD *)(v1 + 496);
    else
      v6 = *(_QWORD *)(v2 - 96);
    if (v5 >> 60 == 15)
      v7 = *(_QWORD *)(v1 + 504);
    else
      v7 = *(_QWORD *)(v2 - 88);
  }
  *(_QWORD *)(v1 + 552) = v5;
  *(_QWORD *)(v1 + 544) = v4;
  sub_2381D2684(v6, v7);
  sub_238237FD0();
  sub_238237FAC();
  if (v5 >> 60 != 15)
    sub_238237FDC();
  sub_238237FDC();
  sub_238237FDC();
  sub_238237FC4();
  if (v19 >> 60 != 15)
    __asm { BR              X10 }
  sub_2381D262C(v4, v5);
  __break(1u);
  JUMPOUT(0x2381EFA3CLL);
}

uint64_t sub_2381EFA6C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  void *v9;

  v8 = *v4;
  *(_QWORD *)(*v4 + 584) = v3;
  swift_task_dealloc();
  v9 = *(void **)(v8 + 568);
  if (!v3)
  {
    sub_2381D2640(a1, a2);

  }
  return swift_task_switch();
}

uint64_t sub_2381EFB58()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  v6 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 400);

  swift_release();
  sub_2381D2640(v4, v3);
  sub_2381D262C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381EFC78()
{
  uint64_t v0;

  sub_2381D2640(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381EFD5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  v6 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 416);
  v7 = *(_QWORD *)(v0 + 400);

  swift_release();
  sub_2381D2640(v4, v3);
  sub_2381D262C(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381EFE7C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_2381F0688(0, v1, 0);
    v2 = v9;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1)
        sub_2381F0688(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2381EFF48()
{
  swift_bridgeObjectRetain();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  sub_238238210();
  sub_2381D49C0(&qword_2568E83D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_238238BE8();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  return 8744;
}

uint64_t sub_2381F002C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_url;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_2381F0110()
{
  sub_2381F002C();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381F0128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 176) + *(_QWORD *)(*(_QWORD *)v1 + 176));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2381CB914;
  return v6(a1);
}

uint64_t sub_2381F018C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 184))();
}

uint64_t sub_2381F01B4@<X0>(Bytef *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uLong v4;
  unint64_t v5;
  int v6;
  int v7;
  int *v8;
  uLong v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  z_stream strm;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  memset(&strm.total_in, 0, 20);
  v4 = a2 - (_QWORD)a1;
  memset(&strm.total_out, 0, 32);
  if (a1)
    v5 = a2 - (_QWORD)a1;
  else
    v5 = 0;
  memset(&strm.zfree, 0, 20);
  strm.adler = 0;
  strm.reserved = 0;
  if ((v5 & 0x8000000000000000) != 0 || HIDWORD(v5))
  {
    sub_238238AD4();
    __break(1u);
    JUMPOUT(0x2381F056CLL);
  }
  strm.avail_in = v5;
  if (!a1)
    __break(1u);
  strm.next_in = a1;
  v6 = deflateInit2_(&strm, -1, 8, 31, 8, 0, "1.2.12", 112);
  if (v6)
  {
    v7 = v6;
    sub_2381F1560();
    swift_allocError();
    *v8 = v7;
    return swift_willThrow();
  }
  v10 = deflateBound(&strm, v4);
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = sub_2381F15A4(v10);
  v18 = v11;
  sub_2381F08E8((uint64_t)&v17);
  if (v12 == 1)
  {
    if ((strm.total_out & 0x8000000000000000) == 0)
    {
      sub_23823824C();
      __asm { BR              X11 }
    }
    goto LABEL_18;
  }
  if (qword_2568ECAD0 != -1)
LABEL_19:
    swift_once();
  v13 = sub_238238444();
  __swift_project_value_buffer(v13, (uint64_t)qword_2568F0020);
  v14 = sub_23823842C();
  v15 = sub_238238888();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 67240192;
    sub_238238960();
    _os_log_impl(&dword_2381C6000, v14, v15, "zlib returned unexpected status %{public}d", v16, 8u);
    MEMORY[0x23B82FE28](v16, -1, -1);
  }

  *a3 = xmmword_23823B3C0;
  sub_2381D2640(v17, v18);
  return deflateEnd(&strm);
}

uint64_t sub_2381F058C@<X0>(z_streamp strm@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, _DWORD *a4@<X8>)
{
  uLong v5;
  uLong total_out;
  BOOL v7;
  uLong v8;
  uint64_t result;

  if (a2)
    v5 = a3 - a2;
  else
    v5 = 0;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_13;
  total_out = strm->total_out;
  v7 = v5 >= total_out;
  v8 = v5 - total_out;
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (!HIDWORD(v8))
  {
    strm->avail_out = v8;
    if (!a2)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if ((total_out & 0x8000000000000000) == 0)
    {
      strm->next_out = (Bytef *)(a2 + total_out);
      result = deflate(strm, 4);
      *a4 = result;
      return result;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  result = sub_238238AD4();
  __break(1u);
  return result;
}

uint64_t sub_2381F0688(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2381F06A4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2381F06A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2568E8508);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381F082C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, _OWORD *a5@<X8>)
{
  uint64_t result;
  Bytef *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Bytef *v16;
  uint64_t v17;

  result = sub_23823806C();
  v11 = (Bytef *)result;
  if (result)
  {
    result = sub_238238090();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  v14 = sub_238238084();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = &v11[v15];
  if (v11)
    v17 = (uint64_t)v16;
  else
    v17 = 0;
  sub_2381F01B4(v11, v17, a5);
  return sub_2381D2640(a3, a4);
}

void sub_2381F08E8(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2381F0944@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  z_stream *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;

  v27 = v23;
  LOWORD(v28) = a1;
  BYTE2(v28) = BYTE2(a1);
  HIBYTE(v28) = BYTE3(a1);
  v29 = BYTE4(a1);
  v30 = BYTE5(a1);
  v31 = BYTE6(a1);
  result = sub_2381F058C(v22, (uint64_t)&v27, (uint64_t)&v27 + BYTE6(a1), &v26);
  if (!v20)
    result = v26;
  v25 = v28 | ((unint64_t)v29 << 32) | ((unint64_t)v30 << 40) | ((unint64_t)v31 << 48);
  *v21 = v27;
  v21[1] = v25;
  return result;
}

uint64_t sub_2381F0BC0(uint64_t a1, uint64_t a2, uint64_t a3, z_stream *a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;

  result = sub_23823806C();
  if (!result)
    goto LABEL_12;
  v9 = result;
  result = sub_238238090();
  v10 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v13 = sub_238238084();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  result = sub_2381F058C(a4, v9 + v10, v9 + v10 + v14, &v15);
  if (!v4)
    return v15;
  return result;
}

uint64_t sub_2381F0C60(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36[7];
  _OWORD v37[5];
  uint64_t v38;

  v8 = v7;
  swift_defaultActor_initialize();
  v16 = (_QWORD *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID);
  *v16 = a5;
  v16[1] = a6;
  *(_QWORD *)(v8 + 112) = a3;
  *(_QWORD *)(v8 + 120) = a1;
  v17 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  v18 = (char *)a4 + v17[6];
  v19 = v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_url;
  v20 = sub_238238210();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v18, v20);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_options) = a7;
  v21 = a2[3];
  v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 16);
  swift_retain();
  swift_retain();
  v24 = a7;
  v25 = v23(v21, v22);
  v27 = v26;
  v28 = a2[3];
  v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(v36, v28, v29);
  sub_23820B310(v25, v27, v36, *((_BYTE *)a4 + v17[8]), (uint64_t)v37);
  v30 = v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders;
  v31 = v37[3];
  *(_OWORD *)(v30 + 32) = v37[2];
  *(_OWORD *)(v30 + 48) = v31;
  *(_OWORD *)(v30 + 64) = v37[4];
  *(_QWORD *)(v30 + 80) = v38;
  v32 = v37[1];
  *(_OWORD *)v30 = v37[0];
  *(_OWORD *)(v30 + 16) = v32;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_filters) = *(_QWORD *)((char *)a4 + v17[7]);
  v33 = a4[1];
  v34 = (_QWORD *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_name);
  *v34 = *a4;
  v34[1] = v33;
  LOBYTE(v23) = *((_BYTE *)a4 + v17[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2381CCA1C((uint64_t)a4, type metadata accessor for SessionConfiguration.BackendHTTP);
  *(_BYTE *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_skipLogging) = (_BYTE)v23;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v8;
}

uint64_t sub_2381F0E44(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656D695474736F70 && a2 == 0xE800000000000000;
  if (v3 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E65696C63 && a2 == 0xE800000000000000 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_238238C0C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2381F0F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v33 = MEMORY[0x24BEE4AF8];
    sub_2381CC40C(0, v4, 0);
    v8 = 0;
    v5 = v33;
    v9 = a1 + 32;
    v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_filters);
    v23 = v10;
    v24 = v10 + 32;
    v22 = v4;
    while (1)
    {
      v11 = (uint64_t *)(v9 + 24 * v8);
      v12 = *v11;
      v25 = *(_OWORD *)(v11 + 1);
      v31 = *v11;
      v32 = v25;
      v13 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
        break;
      v17 = v25;
LABEL_9:
      v33 = v5;
      v19 = *(_QWORD *)(v5 + 16);
      v18 = *(_QWORD *)(v5 + 24);
      if (v19 >= v18 >> 1)
      {
        v27 = v17;
        sub_2381CC40C(v18 > 1, v19 + 1, 1);
        v17 = v27;
        v5 = v33;
      }
      ++v8;
      *(_QWORD *)(v5 + 16) = v19 + 1;
      v20 = v5 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v12;
      *(_OWORD *)(v20 + 40) = v17;
      if (v8 == v4)
        return v5;
    }
    v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v24;
    while (1)
    {
      sub_2381CDE14(v14, (uint64_t)v28);
      v16 = v29;
      v15 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3)
        break;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v23;
        swift_bridgeObjectRelease();
        v12 = v31;
        v17 = v32;
        v5 = v26;
        v9 = a1 + 32;
        v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_2381F11AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E76F0;
  if (!qword_2568E76F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E76E8);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2568E76F0);
  }
  return result;
}

unint64_t sub_2381F11F8()
{
  unint64_t result;

  result = qword_2568ECAD8[0];
  if (!qword_2568ECAD8[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B534, &type metadata for BackendHTTP.POSTData);
    atomic_store(result, qword_2568ECAD8);
  }
  return result;
}

uint64_t sub_2381F123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381F1284()
{
  return type metadata accessor for BackendHTTP();
}

uint64_t type metadata accessor for BackendHTTP()
{
  uint64_t result;

  result = qword_2568ECC60;
  if (!qword_2568ECC60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381F12C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s9ZLibErrorOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s9ZLibErrorOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *_s9ZLibErrorOMa()
{
  return &_s9ZLibErrorON;
}

_QWORD *assignWithCopy for BackendHTTP.POSTData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BackendHTTP.POSTData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData()
{
  return &type metadata for BackendHTTP.POSTData;
}

unint64_t sub_2381F14B8()
{
  unint64_t result;

  result = qword_2568ECCF0;
  if (!qword_2568ECCF0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B620, &type metadata for BackendHTTP.POSTData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568ECCF0);
  }
  return result;
}

unint64_t sub_2381F14FC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2568E84F8;
  if (!qword_2568E84F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E84F0);
    v2 = sub_2381D28E0();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568E84F8);
  }
  return result;
}

unint64_t sub_2381F1560()
{
  unint64_t result;

  result = qword_2568E8500;
  if (!qword_2568E8500)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B460, &_s9ZLibErrorON);
    atomic_store(result, (unint64_t *)&qword_2568E8500);
  }
  return result;
}

uint64_t sub_2381F15A4(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_23823809C();
      swift_allocObject();
      sub_238238078();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_238238240();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BackendHTTP.POSTData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2381F168C + 4 * byte_23823B3E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2381F16C0 + 4 * byte_23823B3E0[v4]))();
}

uint64_t sub_2381F16C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F16C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381F16D0);
  return result;
}

uint64_t sub_2381F16DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381F16E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2381F16E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F16F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData.CodingKeys()
{
  return &type metadata for BackendHTTP.POSTData.CodingKeys;
}

unint64_t sub_2381F1710()
{
  unint64_t result;

  result = qword_2568ECE00[0];
  if (!qword_2568ECE00[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B5F8, &type metadata for BackendHTTP.POSTData.CodingKeys);
    atomic_store(result, qword_2568ECE00);
  }
  return result;
}

unint64_t sub_2381F1758()
{
  unint64_t result;

  result = qword_2568ECF10;
  if (!qword_2568ECF10)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B568, &type metadata for BackendHTTP.POSTData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568ECF10);
  }
  return result;
}

unint64_t sub_2381F17A0()
{
  unint64_t result;

  result = qword_2568ECF18[0];
  if (!qword_2568ECF18[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823B590, &type metadata for BackendHTTP.POSTData.CodingKeys);
    atomic_store(result, qword_2568ECF18);
  }
  return result;
}

uint64_t sub_2381F17E4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClientIdentity(a2, a1);
  return a2;
}

uint64_t type metadata accessor for CachedSession()
{
  uint64_t result;

  result = qword_2568ED020;
  if (!qword_2568ED020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381F185C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a5 + 48) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a5 + 56) = a2;
  *(_QWORD *)(a5 + 64) = a3;
  *(double *)(a5 + 72) = a6;
  v9 = type metadata accessor for CachedSession();
  v10 = a5 + *(int *)(v9 + 28);
  v11 = sub_23823830C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a4, v11);
  v13 = a5 + *(int *)(v9 + 32);
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_2381F18EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2381F17E4(v1, a1);
}

uint64_t sub_2381F18F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_2381F1924()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t sub_2381F192C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_23823830C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

unint64_t sub_2381F196C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + *(int *)(a1 + 32)) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 32) + 4) << 32);
}

uint64_t sub_2381F1994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[8];

  v13[7] = *MEMORY[0x24BDAC8D0];
  v3 = sub_238238564();
  v13[2] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_238238558();
  v13[4] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v13[3] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238238648();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v13[1] = v4;
    sub_23823863C();
    sub_238238618();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v11 >> 60 != 15)
    {
      sub_2381F1D88();
      sub_238238540();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x2381F1D64);
  }
  return arc4random_uniform(0x2710u);
}

unint64_t sub_2381F1D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E82C8;
  if (!qword_2568E82C8)
  {
    v1 = sub_238238564();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BDC6AE8], v1);
    atomic_store(result, (unint64_t *)&qword_2568E82C8);
  }
  return result;
}

int8x16_t *sub_2381F1DD0@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, int8x8_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  int8x8_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  int8x16_t *v9;
  int8x16_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t *v14;
  uint64_t v15;

  if (!result
    || (a2 - (uint64_t)result >= 0 ? (v3 = a2 - (_QWORD)result) : (v3 = a2 - (_QWORD)result + 7),
        (unint64_t)(a2 - (_QWORD)result + 7) < 0xF))
  {
    *a3 = 0;
    return result;
  }
  v4 = ((v3 >> 3) - 1) & 0x1FFFFFFFFFFFFFFFLL;
  if (v4 >= 3)
  {
    v7 = v4 + 1;
    v8 = (v4 + 1) & 0x3FFFFFFFFFFFFFFCLL;
    v6 = &result->i64[v8];
    v9 = result + 1;
    v10 = 0uLL;
    v11 = v8;
    v12 = 0uLL;
    do
    {
      v10 = veorq_s8(v9[-1], v10);
      v12 = veorq_s8(*v9, v12);
      v9 += 2;
      v11 -= 4;
    }
    while (v11);
    v13 = veorq_s8(v12, v10);
    v5 = veor_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL));
    if (v7 == v8)
      goto LABEL_14;
  }
  else
  {
    v5 = 0;
    v6 = (uint64_t *)result;
  }
  v14 = (uint64_t *)((char *)result->i64 + (v3 & 0xFFFFFFFFFFFFFFF8));
  do
  {
    v15 = *v6++;
    *(_QWORD *)&v5 ^= v15;
  }
  while (v6 != v14);
LABEL_14:
  *a3 = v5;
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionUser(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SessionUser(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_2381F1EE0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2381F1EFC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionUser()
{
  return &type metadata for SessionUser;
}

_QWORD *sub_2381F1F2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[7];
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = *(int *)(a3 + 28);
    v21 = a1 + v12;
    v13 = (uint64_t)a2 + v12;
    *(_QWORD *)(a1 + 56) = v10;
    v14 = sub_23823830C();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v21, v13, v14);
    v16 = *(int *)(a3 + 32);
    v17 = (char *)v4 + v16;
    v18 = (uint64_t)a2 + v16;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = *(_BYTE *)(v18 + 4);
  }
  return v4;
}

uint64_t sub_2381F2048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23823830C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2381F20A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + 56) = v8;
  v13 = sub_23823830C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v15 = *(int *)(a3 + 32);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  return a1;
}

uint64_t sub_2381F2198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 4);
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = v13;
  return a1;
}

uint64_t sub_2381F22B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  v11 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  return a1;
}

uint64_t sub_2381F2358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  return a1;
}

uint64_t sub_2381F2430()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381F243C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23823830C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_2381F24B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381F24C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23823830C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2381F2538()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23823830C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Session()
{
  return objc_opt_self();
}

void *sub_2381F25EC()
{
  void *v0;
  void *result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;

  v0 = dlopen("../../AppleInternal/Library/Frameworks/CloudTelemetryLocalBackend.framework/CloudTelemetryLocalBackend", 1);
  if (v0)
  {
    result = dlsym(v0, "initLocalBackend");
  }
  else
  {
    if (dlerror())
    {
      v2 = sub_2382386C0();
      v4 = v3;
    }
    else
    {
      v4 = 0xE700000000000000;
      v2 = 0x6E776F6E6B6E75;
    }
    if (qword_2568ED038 != -1)
      swift_once();
    v5 = sub_238238444();
    __swift_project_value_buffer(v5, (uint64_t)qword_2568F0078);
    swift_bridgeObjectRetain();
    v6 = sub_23823842C();
    v7 = sub_23823887C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v10 = v9;
      *(_DWORD *)v8 = 136446210;
      swift_bridgeObjectRetain();
      sub_2381CBC6C(v2, v4, &v10);
      sub_238238960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v6, v7, "failed to load CloudTelemetryTTR framework: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v9, -1, -1);
      MEMORY[0x23B82FE28](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = 0;
  }
  off_2568F0070 = result;
  return result;
}

uint64_t sub_2381F27D4()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0078);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0078);
  return sub_238238438();
}

uint64_t sub_2381F2854(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_2381F28A8(a1, a2, a3);
  return v6;
}

_QWORD *sub_2381F28A8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v22;
  _QWORD v24[7];

  v4 = v3;
  swift_defaultActor_initialize();
  v4[16] = sub_2381F424C(a2);
  v4[17] = a1;
  swift_bridgeObjectRelease();
  v8 = a3[3];
  v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v24, v8, v9);
  v11 = v24[0];
  v10 = v24[1];
  swift_bridgeObjectRetain();
  sub_2381CC9D4((uint64_t)v24);
  v4[14] = v11;
  v4[15] = v10;
  v12 = sub_238204BB4();
  swift_beginAccess();
  if (*v12 == 1)
  {
    if (qword_2568ED030 != -1)
      swift_once();
    v13 = (uint64_t (*)(uint64_t))off_2568F0070;
    if (off_2568F0070)
    {
      v14 = a3[3];
      v15 = a3[4];
      __swift_project_boxed_opaque_existential_1(a3, v14);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      if ((v16 & 0x100000000) != 0)
        v16 = 0;
      else
        v16 = v16;
      v4[18] = (id)v13(v16);
      if (qword_2568ED038 != -1)
        swift_once();
      v17 = sub_238238444();
      __swift_project_value_buffer(v17, (uint64_t)qword_2568F0078);
      v18 = sub_23823842C();
      v19 = sub_238238894();
      if (!os_log_type_enabled(v18, v19))
        goto LABEL_18;
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "initialized CloudTelemetryTTR framework";
    }
    else
    {
      v4[18] = 0;
      if (qword_2568ED038 != -1)
        swift_once();
      v22 = sub_238238444();
      __swift_project_value_buffer(v22, (uint64_t)qword_2568F0078);
      v18 = sub_23823842C();
      v19 = sub_23823887C();
      if (!os_log_type_enabled(v18, v19))
        goto LABEL_18;
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "failed to initialize CloudTelemetryTTR framework";
    }
    _os_log_impl(&dword_2381C6000, v18, v19, v21, v20, 2u);
    MEMORY[0x23B82FE28](v20, -1, -1);
LABEL_18:

    goto LABEL_19;
  }
  v4[18] = 0;
LABEL_19:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  return v4;
}

uint64_t sub_2381F2B28(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *v1;
  v2[13] = *(_QWORD *)(type metadata accessor for ServiceEventValue() - 8);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381F2BC0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BOOL8 v56;
  char v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  int64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;

  v1 = sub_238204BB4();
  swift_beginAccess();
  if (*v1 != 1)
    goto LABEL_76;
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  swift_retain();
  v4 = sub_2381F44B0(v2, v3);
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (_OWORD *)(v4 + 40);
    v7 = MEMORY[0x24BEE4AF8];
    do
    {
      v8 = *((_QWORD *)v6 - 1);
      v98 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v100 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2381CC40C(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v100;
      }
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_2381CC40C(v9 > 1, v10 + 1, 1);
        v7 = v100;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      v11 = v7 + 24 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 40) = v98;
      v6 = (_OWORD *)((char *)v6 + 24);
      --v5;
    }
    while (v5);
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v0 + 136) = v7;
  v12 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRelease();
  v13 = *(void **)(v12 + 144);
  *(_QWORD *)(v0 + 144) = v13;
  if (!v13)
    goto LABEL_73;
  v14 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v0 + 152) = v14;
  if (!v14)
    goto LABEL_73;
  *(_QWORD *)(v0 + 160) = 0;
  v15 = *(_QWORD *)(v0 + 136);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v13;
  if (!v16)
    goto LABEL_72;
  v18 = (uint64_t *)(v0 + 64);
  v19 = sub_2381F46D4();
  v20 = 0;
  v21 = MEMORY[0x24BEE0D00];
  v22 = -1;
  while (2)
  {
    v23 = *(_QWORD *)(v15 + 24 * v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *v18 = sub_2382385A0();
    v24 = *(_QWORD *)(v23 + 64);
    v94 = v23 + 64;
    v96 = v23;
    v25 = -1 << *(_BYTE *)(v23 + 32);
    v26 = (_QWORD *)swift_bridgeObjectRelease();
    v97 = 0;
    if (-v25 < 64)
      v27 = ~(-1 << -(char)v25);
    else
      v27 = -1;
    v28 = v27 & v24;
    v95 = (unint64_t)(63 - v25) >> 6;
    while (1)
    {
      v31 = &unk_2568E79F0;
      if (v28)
      {
        v99 = (v28 - 1) & v28;
        v32 = __clz(__rbit64(v28)) | (v97 << 6);
LABEL_23:
        v33 = *(_QWORD **)(v0 + 120);
        v34 = *(_QWORD *)(v0 + 104);
        v35 = (_QWORD *)(*(_QWORD *)(v96 + 48) + 16 * v32);
        v36 = v35[1];
        *v33 = *v35;
        v33[1] = v36;
        v37 = *(_QWORD *)(v96 + 56) + *(_QWORD *)(v34 + 72) * v32;
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
        sub_2381CC88C(v37, (uint64_t)v33 + *(int *)(v38 + 48));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 0, 1, v38);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
      v39 = v97 + 1;
      if (__OFADD__(v97, 1))
      {
        __break(1u);
        goto LABEL_84;
      }
      if (v39 < v95)
      {
        v40 = *(_QWORD *)(v94 + 8 * v39);
        if (v40)
          goto LABEL_27;
        v41 = v97 + 2;
        ++v97;
        if (v39 + 1 < v95)
        {
          v40 = *(_QWORD *)(v94 + 8 * v41);
          if (v40)
            goto LABEL_30;
          v97 = v39 + 1;
          if (v39 + 2 < v95)
          {
            v40 = *(_QWORD *)(v94 + 8 * (v39 + 2));
            if (v40)
            {
              v39 += 2;
LABEL_27:
              v99 = (v40 - 1) & v40;
              v32 = __clz(__rbit64(v40)) + (v39 << 6);
              v97 = v39;
              goto LABEL_23;
            }
            v41 = v39 + 3;
            v97 = v39 + 2;
            if (v39 + 3 < v95)
            {
              v40 = *(_QWORD *)(v94 + 8 * v41);
              if (!v40)
              {
                while (1)
                {
                  v39 = v41 + 1;
                  if (__OFADD__(v41, 1))
                    break;
                  if (v39 >= v95)
                  {
                    v97 = v95 - 1;
                    goto LABEL_41;
                  }
                  v40 = *(_QWORD *)(v94 + 8 * v39);
                  ++v41;
                  if (v40)
                    goto LABEL_27;
                }
                __break(1u);
                goto LABEL_93;
              }
LABEL_30:
              v39 = v41;
              goto LABEL_27;
            }
          }
        }
      }
LABEL_41:
      v42 = *(_QWORD *)(v0 + 120);
      v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
      v99 = 0;
LABEL_42:
      v44 = *(_QWORD *)(v0 + 128);
      sub_2381F123C(*(_QWORD *)(v0 + 120), v44);
      v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45) == 1)
        break;
      v46 = v21;
      v47 = v19;
      v48 = *(uint64_t **)(v0 + 128);
      v50 = *v48;
      v49 = v48[1];
      sub_2381D7FE8((uint64_t)v48 + *(int *)(v45 + 48), *(_QWORD *)(v0 + 112));
      sub_2381D6DD0();
      v22 = v51;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = *(_QWORD *)(v0 + 64);
      *(_QWORD *)(v0 + 64) = 0x8000000000000000;
      *(_QWORD *)(v0 + 72) = v53;
      v55 = sub_2381CC2AC(v50, v49);
      v39 = *(_QWORD *)(v53 + 16);
      v56 = (v54 & 1) == 0;
      v26 = (_QWORD *)(v39 + v56);
      if (__OFADD__(v39, v56))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        v69 = 2;
LABEL_86:
        v79 = (v39 - 1) & v39;
        v78 = __clz(__rbit64(v39)) + (v69 << 6);
LABEL_87:
        *(_QWORD *)(v0 + 176) = v69;
        *(_QWORD *)(v0 + 184) = v79;
        v81 = (uint64_t *)(v26[6] + 16 * v78);
        v25 = *v81;
        v31 = (void *)v81[1];
        *(_QWORD *)(v0 + 192) = v31;
        v82 = *(void **)(v26[7] + 8 * v78);
        *(_QWORD *)(v0 + 200) = v82;
        v83 = qword_2568ED038;
        swift_bridgeObjectRetain();
        v22 = v82;
        if (v83 == -1)
        {
LABEL_88:
          v84 = sub_238238444();
          __swift_project_value_buffer(v84, (uint64_t)qword_2568F0078);
          swift_bridgeObjectRetain_n();
          v85 = sub_23823842C();
          v86 = sub_238238894();
          if (os_log_type_enabled(v85, v86))
          {
            v87 = swift_slowAlloc();
            v88 = swift_slowAlloc();
            v100 = v88;
            *(_DWORD *)v87 = 136446210;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v87 + 4) = sub_2381CBC6C(v25, (unint64_t)v31, &v100);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2381C6000, v85, v86, "running TTR rule \"%{public}s\"", (uint8_t *)v87, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B82FE28](v88, -1, -1);
            MEMORY[0x23B82FE28](v87, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          v89 = *(_QWORD *)(v0 + 144);
          v90 = *(_QWORD *)(v0 + 88);
          v91 = *(_QWORD *)(v0 + 96);
          sub_2381F4710();
          v92 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 208) = v92;
          v92[2] = v22;
          v92[3] = v89;
          v92[4] = v0 + 64;
          v92[5] = v90;
          v92[6] = v25;
          v92[7] = v31;
          v92[8] = v91;
          v93 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 216) = v93;
          *v93 = v0;
          v93[1] = sub_2381F35B0;
          return sub_238238BF4();
        }
LABEL_93:
        swift_once();
        goto LABEL_88;
      }
      v25 = v54;
      if (*(_QWORD *)(v53 + 24) >= (uint64_t)v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v26 = sub_2381D8260();
      }
      else
      {
        sub_2381D7CDC((uint64_t)v26, isUniquelyReferenced_nonNull_native);
        v26 = (_QWORD *)sub_2381CC2AC(v50, v49);
        if ((v25 & 1) != (v57 & 1))
          return sub_238238C90();
        v55 = (unint64_t)v26;
      }
      v58 = *(_QWORD **)(v0 + 72);
      if ((v25 & 1) != 0)
      {
        v29 = v58[7];
        v25 = 8 * v55;

        *(_QWORD *)(v29 + 8 * v55) = v22;
      }
      else
      {
        v58[(v55 >> 6) + 8] |= 1 << v55;
        v59 = (uint64_t *)(v58[6] + 16 * v55);
        *v59 = v50;
        v59[1] = v49;
        *(_QWORD *)(v58[7] + 8 * v55) = v22;
        v60 = v58[2];
        v61 = __OFADD__(v60, 1);
        v39 = v60 + 1;
        if (v61)
          goto LABEL_81;
        v58[2] = v39;
        swift_bridgeObjectRetain();
      }
      v30 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 64) = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (_QWORD *)sub_2381F4788(v30);
      v19 = v47;
      v21 = v46;
      v28 = v99;
    }
    v62 = *(_QWORD *)(v0 + 88);
    swift_release();
    v63 = *(_QWORD *)(v62 + 128);
    *(_QWORD *)(v0 + 168) = v63;
    v64 = *(_BYTE *)(v63 + 32);
    *(_BYTE *)(v0 + 224) = v64;
    v65 = -1 << v64;
    if (-(-1 << v64) < 64)
      v66 = ~(-1 << -(char)v65);
    else
      v66 = -1;
    v67 = v66 & *(_QWORD *)(v63 + 64);
    v26 = (_QWORD *)swift_bridgeObjectRetain();
    if (v67)
    {
      v69 = 0;
      v78 = __clz(__rbit64(v67));
      v79 = (v67 - 1) & v67;
      goto LABEL_87;
    }
    v68 = 63 - v65;
    v69 = 1;
    if ((unint64_t)(63 - v65) > 0x7F)
    {
      v39 = v26[9];
      if (v39)
        goto LABEL_86;
      if (v68 >= 0xC0)
      {
        v39 = v26[10];
        if (v39)
          goto LABEL_82;
        if (v68 >= 0x100)
        {
          v39 = v26[11];
          if (!v39)
          {
            if (v68 >= 0x140)
            {
              v39 = v26[12];
              if (v39)
              {
                v69 = 4;
                goto LABEL_86;
              }
              v70 = 0;
              v71 = v68 >> 6;
              if (v68 >> 6 <= 5)
                v71 = 5;
              v72 = v71 - 5;
              while (v72 != v70)
              {
                v39 = v26[v70++ + 13];
                if (v39)
                {
                  v69 = v70 + 4;
                  goto LABEL_86;
                }
              }
            }
            goto LABEL_70;
          }
LABEL_84:
          v69 = 3;
          goto LABEL_86;
        }
      }
    }
LABEL_70:
    v73 = *(_QWORD *)(v0 + 152);
    v74 = *(_QWORD *)(v0 + 160);
    swift_release();
    swift_bridgeObjectRelease();
    if (v74 + 1 == v73)
    {
      v80 = *(void **)(v0 + 144);
      swift_release();

      goto LABEL_74;
    }
    v20 = *(_QWORD *)(v0 + 160) + 1;
    *(_QWORD *)(v0 + 160) = v20;
    v15 = *(_QWORD *)(v0 + 136);
    v18 = (uint64_t *)(v0 + 64);
    v22 = -1;
    if (v20 < *(_QWORD *)(v15 + 16))
      continue;
    break;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  swift_release();
LABEL_74:
  swift_beginAccess();
  v75 = (void (*)(uint64_t))off_2568F0090;
  if (off_2568F0090)
  {
    v76 = swift_retain();
    v75(v76);
    sub_2381D96EC((uint64_t)v75);
  }
LABEL_76:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381F35B0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381F3624()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;

  v73 = (uint64_t *)(v1 + 64);

  v3 = *(_QWORD *)(v1 + 176);
  v4 = *(_QWORD *)(v1 + 184);
  if (v4)
  {
    v5 = *(_QWORD *)(v1 + 168);
LABEL_3:
    v6 = (v4 - 1) & v4;
    v7 = __clz(__rbit64(v4)) | (v3 << 6);
LABEL_4:
    *(_QWORD *)(v1 + 176) = v3;
    *(_QWORD *)(v1 + 184) = v6;
    v8 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v7);
    v9 = *v8;
    v0 = v8[1];
    *(_QWORD *)(v1 + 192) = v0;
    v10 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v7);
    *(_QWORD *)(v1 + 200) = v10;
    v11 = qword_2568ED038;
    swift_bridgeObjectRetain();
    v2 = v10;
    if (v11 == -1)
      goto LABEL_5;
    goto LABEL_78;
  }
  v9 = -1;
LABEL_12:
  v22 = __OFADD__(v3++, 1);
  if (v22)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v23 = (unint64_t)((1 << *(_BYTE *)(v1 + 224)) + 63) >> 6;
  v5 = *(_QWORD *)(v1 + 168);
  if (v3 < v23)
  {
    v24 = v5 + 64;
    v25 = *(_QWORD *)(v5 + 64 + 8 * v3);
    if (v25)
      goto LABEL_68;
    v26 = v3 + 1;
    if (v3 + 1 < v23)
    {
      v25 = *(_QWORD *)(v24 + 8 * v26);
      if (v25)
        goto LABEL_67;
      v26 = v3 + 2;
      if (v3 + 2 < v23)
      {
        v25 = *(_QWORD *)(v24 + 8 * v26);
        if (v25)
        {
LABEL_67:
          v3 = v26;
          goto LABEL_68;
        }
        v3 += 3;
        if (v3 < v23)
        {
          v25 = *(_QWORD *)(v24 + 8 * v3);
          if (!v25)
          {
            while (1)
            {
              v26 = v3 + 1;
              if (__OFADD__(v3, 1))
                break;
              if (v26 >= v23)
                goto LABEL_25;
              v25 = *(_QWORD *)(v24 + 8 * v26);
              ++v3;
              if (v25)
                goto LABEL_67;
            }
LABEL_77:
            __break(1u);
LABEL_78:
            swift_once();
LABEL_5:
            v12 = sub_238238444();
            __swift_project_value_buffer(v12, (uint64_t)qword_2568F0078);
            swift_bridgeObjectRetain_n();
            v13 = sub_23823842C();
            v14 = sub_238238894();
            if (os_log_type_enabled(v13, v14))
            {
              v15 = swift_slowAlloc();
              v16 = swift_slowAlloc();
              v78 = v16;
              *(_DWORD *)v15 = 136446210;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v15 + 4) = sub_2381CBC6C(v9, v0, &v78);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_2381C6000, v13, v14, "running TTR rule \"%{public}s\"", (uint8_t *)v15, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B82FE28](v16, -1, -1);
              MEMORY[0x23B82FE28](v15, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            v65 = *(_QWORD *)(v1 + 144);
            v66 = *(_QWORD *)(v1 + 88);
            v67 = *(_QWORD *)(v1 + 96);
            sub_2381F4710();
            v68 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v1 + 208) = v68;
            v68[2] = v2;
            v68[3] = v65;
            v68[4] = v73;
            v68[5] = v66;
            v68[6] = v9;
            v68[7] = v0;
            v68[8] = v67;
            v69 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v1 + 216) = v69;
            *v69 = v1;
            v69[1] = sub_2381F35B0;
            return sub_238238BF4();
          }
LABEL_68:
          v6 = (v25 - 1) & v25;
          v7 = __clz(__rbit64(v25)) + (v3 << 6);
          goto LABEL_4;
        }
      }
    }
  }
LABEL_25:
  v0 = *(_QWORD *)(v1 + 152);
  v27 = *(_QWORD *)(v1 + 160);
  swift_release();
  swift_bridgeObjectRelease();
  if (v27 + 1 != v0)
  {
    v28 = *(_QWORD *)(v1 + 160) + 1;
    *(_QWORD *)(v1 + 160) = v28;
    v29 = *(_QWORD *)(v1 + 136);
    if (v28 >= *(_QWORD *)(v29 + 16))
      goto LABEL_76;
    v30 = *(_QWORD *)(v29 + 24 * v28 + 48);
    sub_2381F46D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *v73 = sub_2382385A0();
    v0 = *(_QWORD *)(v30 + 64);
    v74 = v30 + 64;
    v76 = v30;
    v2 = -1 << *(_BYTE *)(v30 + 32);
    result = swift_bridgeObjectRelease();
    v77 = 0;
    if (-(uint64_t)v2 < 64)
      v32 = ~(-1 << -(char)v2);
    else
      v32 = -1;
    v9 = v32 & v0;
    v75 = (63 - v2) >> 6;
    while (!v9)
    {
      v42 = v77 + 1;
      if (__OFADD__(v77, 1))
        goto LABEL_74;
      if (v42 < v75)
      {
        v43 = *(_QWORD *)(v74 + 8 * v42);
        if (v43)
          goto LABEL_39;
        v44 = v77 + 2;
        ++v77;
        if (v42 + 1 < v75)
        {
          v43 = *(_QWORD *)(v74 + 8 * v44);
          if (v43)
            goto LABEL_42;
          v77 = v42 + 1;
          if (v42 + 2 < v75)
          {
            v43 = *(_QWORD *)(v74 + 8 * (v42 + 2));
            if (v43)
            {
              v42 += 2;
              goto LABEL_39;
            }
            v44 = v42 + 3;
            v77 = v42 + 2;
            if (v42 + 3 < v75)
            {
              v43 = *(_QWORD *)(v74 + 8 * v44);
              if (!v43)
              {
                while (1)
                {
                  v42 = v44 + 1;
                  if (__OFADD__(v44, 1))
                    break;
                  if (v42 >= v75)
                  {
                    v77 = v75 - 1;
                    goto LABEL_53;
                  }
                  v43 = *(_QWORD *)(v74 + 8 * v42);
                  ++v44;
                  if (v43)
                    goto LABEL_39;
                }
                __break(1u);
                return result;
              }
LABEL_42:
              v42 = v44;
LABEL_39:
              v9 = (v43 - 1) & v43;
              v36 = __clz(__rbit64(v43)) + (v42 << 6);
              v77 = v42;
LABEL_35:
              v37 = *(_QWORD **)(v1 + 120);
              v38 = *(_QWORD *)(v1 + 104);
              v39 = (_QWORD *)(*(_QWORD *)(v76 + 48) + 16 * v36);
              v40 = v39[1];
              *v37 = *v39;
              v37[1] = v40;
              v2 = *(_QWORD *)(v76 + 56) + *(_QWORD *)(v38 + 72) * v36;
              v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
              sub_2381CC88C(v2, (uint64_t)v37 + *(int *)(v41 + 48));
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v37, 0, 1, v41);
              swift_bridgeObjectRetain();
              goto LABEL_54;
            }
          }
        }
      }
LABEL_53:
      v45 = *(_QWORD *)(v1 + 120);
      v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
      v9 = 0;
LABEL_54:
      v0 = *(_QWORD *)(v1 + 128);
      sub_2381F123C(*(_QWORD *)(v1 + 120), v0);
      v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E79F0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v0, 1, v47) == 1)
      {
        v17 = *(_QWORD *)(v1 + 88);
        swift_release();
        v18 = *(_QWORD *)(v17 + 128);
        *(_QWORD *)(v1 + 168) = v18;
        v19 = *(_BYTE *)(v18 + 32);
        *(_BYTE *)(v1 + 224) = v19;
        v20 = 1 << v19;
        v9 = -1;
        if (v20 < 64)
          v21 = ~(-1 << v20);
        else
          v21 = -1;
        v4 = v21 & *(_QWORD *)(v18 + 64);
        v5 = swift_bridgeObjectRetain();
        v3 = 0;
        if (v4)
          goto LABEL_3;
        goto LABEL_12;
      }
      v48 = *(uint64_t **)(v1 + 128);
      v50 = *v48;
      v49 = v48[1];
      sub_2381D7FE8((uint64_t)v48 + *(int *)(v47 + 48), *(_QWORD *)(v1 + 112));
      sub_2381D6DD0();
      v0 = v51;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = *(_QWORD *)(v1 + 64);
      *(_QWORD *)(v1 + 64) = 0x8000000000000000;
      *(_QWORD *)(v1 + 72) = v53;
      v2 = sub_2381CC2AC(v50, v49);
      v55 = *(_QWORD *)(v53 + 16);
      v56 = (v54 & 1) == 0;
      v57 = v55 + v56;
      if (__OFADD__(v55, v56))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v58 = v54;
      if (*(_QWORD *)(v53 + 24) >= v57)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2381D8260();
      }
      else
      {
        sub_2381D7CDC(v57, isUniquelyReferenced_nonNull_native);
        v59 = sub_2381CC2AC(v50, v49);
        if ((v58 & 1) != (v60 & 1))
          return sub_238238C90();
        v2 = v59;
      }
      v61 = *(_QWORD **)(v1 + 72);
      if ((v58 & 1) != 0)
      {
        v33 = v61[7];
        v2 *= 8;

        *(_QWORD *)(v33 + v2) = v0;
      }
      else
      {
        v61[(v2 >> 6) + 8] |= 1 << v2;
        v62 = (uint64_t *)(v61[6] + 16 * v2);
        *v62 = v50;
        v62[1] = v49;
        *(_QWORD *)(v61[7] + 8 * v2) = v0;
        v63 = v61[2];
        v22 = __OFADD__(v63, 1);
        v64 = v63 + 1;
        if (v22)
          goto LABEL_73;
        v61[2] = v64;
        swift_bridgeObjectRetain();
      }
      v34 = *(_QWORD *)(v1 + 112);
      *(_QWORD *)(v1 + 64) = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = sub_2381F4788(v34);
    }
    v35 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v36 = v35 | (v77 << 6);
    goto LABEL_35;
  }
  v70 = *(void **)(v1 + 144);
  swift_release();

  swift_beginAccess();
  v71 = (void (*)(uint64_t))off_2568F0090;
  if (off_2568F0090)
  {
    v72 = swift_retain();
    v71(v72);
    sub_2381D96EC((uint64_t)v71);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_2381F3E6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD aBlock[6];

  v23 = a8;
  v24 = a7;
  v21 = a1;
  v22 = a6;
  v25 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2568E8728);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  swift_dynamicCastObjCClassUnconditional();
  aBlock[0] = 0;
  sub_2381F46D4();
  sub_23823857C();
  if (aBlock[0])
  {
    swift_bridgeObjectRetain();
    v20 = sub_238238570();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_2382385E8();
    v13 = (void *)sub_238238570();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v8);
    v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject();
    v17 = v24;
    *(_QWORD *)(v16 + 16) = v22;
    *(_QWORD *)(v16 + 24) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v11, v8);
    *(_QWORD *)(v16 + v15) = v23;
    aBlock[4] = sub_2381F4848;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2381F40C4;
    aBlock[3] = &block_descriptor_1;
    v18 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v19 = (void *)v20;
    objc_msgSend(v25, sel_handleEvent_sender_ruleConfig_withReplyBlock_, v20, v12, v13, v18);
    _Block_release(v18);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2381F40C4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_2381F4100()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381F413C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2381CB914;
  return v6(a1);
}

unint64_t sub_2381F41A0()
{
  sub_238238A20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

unint64_t sub_2381F422C()
{
  return sub_2381F41A0();
}

uint64_t sub_2381F424C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _BYTE v29[32];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AB8);
  result = sub_238238AF8();
  v3 = (_QWORD *)result;
  v4 = 0;
  v28 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v26 = v6;
  v27 = (unint64_t)(v8 + 63) >> 6;
  v11 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    v20 = (__int128 *)(*(_QWORD *)(v28 + 56) + 48 * i);
    *(_OWORD *)v29 = v20[1];
    *(_OWORD *)&v29[16] = v20[2];
    v30 = *v20;
    v31 = *(_OWORD *)&v29[8];
    v32 = *(_QWORD *)&v29[24];
    swift_bridgeObjectRetain();
    sub_2381DDE94((uint64_t)&v30);
    sub_2381DDE94((uint64_t)&v31);
    sub_2381F4A54((uint64_t)&v32);
    v21 = sub_238210E60();
    sub_2381EC924((uint64_t)&v30);
    sub_2381EC924((uint64_t)&v31);
    result = sub_2381F4A7C((uint64_t)&v32);
    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v22 = (_QWORD *)(v3[6] + 16 * i);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v27)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v27)
        return (uint64_t)v3;
      v15 = *(_QWORD *)(v26 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v27)
          return (uint64_t)v3;
        v15 = *(_QWORD *)(v26 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v27)
    return (uint64_t)v3;
  v15 = *(_QWORD *)(v26 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v27)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v26 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2381F44B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v33 = MEMORY[0x24BEE4AF8];
    sub_2381CC40C(0, v4, 0);
    v8 = 0;
    v5 = v33;
    v9 = a1 + 32;
    v10 = *(_QWORD *)(a2 + 136);
    v23 = v10;
    v24 = v10 + 32;
    v22 = v4;
    while (1)
    {
      v11 = (uint64_t *)(v9 + 24 * v8);
      v12 = *v11;
      v25 = *(_OWORD *)(v11 + 1);
      v31 = *v11;
      v32 = v25;
      v13 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
        break;
      v17 = v25;
LABEL_9:
      v33 = v5;
      v19 = *(_QWORD *)(v5 + 16);
      v18 = *(_QWORD *)(v5 + 24);
      if (v19 >= v18 >> 1)
      {
        v27 = v17;
        sub_2381CC40C(v18 > 1, v19 + 1, 1);
        v17 = v27;
        v5 = v33;
      }
      ++v8;
      *(_QWORD *)(v5 + 16) = v19 + 1;
      v20 = v5 + 24 * v19;
      *(_QWORD *)(v20 + 32) = v12;
      *(_OWORD *)(v20 + 40) = v17;
      if (v8 == v4)
        return v5;
    }
    v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v24;
    while (1)
    {
      sub_2381CDE14(v14, (uint64_t)v28);
      v16 = v29;
      v15 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3)
        break;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v23;
        swift_bridgeObjectRelease();
        v12 = v31;
        v17 = v32;
        v5 = v26;
        v9 = a1 + 32;
        v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_2381F46D4()
{
  unint64_t result;

  result = qword_2568E7A00;
  if (!qword_2568E7A00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568E7A00);
  }
  return result;
}

unint64_t sub_2381F4710()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E8648;
  if (!qword_2568E8648)
  {
    v1 = type metadata accessor for BackendLocal();
    result = MEMORY[0x23B82FD68](&unk_23823B770, v1);
    atomic_store(result, (unint64_t *)&qword_2568E8648);
  }
  return result;
}

uint64_t type metadata accessor for BackendLocal()
{
  return objc_opt_self();
}

void sub_2381F4774(uint64_t a1)
{
  uint64_t v1;

  sub_2381F3E6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_2381F4788(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2381F47C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568E8728);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2381F4848()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(qword_2568E8728);
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  if (qword_2568ED038 != -1)
    swift_once();
  v3 = sub_238238444();
  __swift_project_value_buffer(v3, (uint64_t)qword_2568F0078);
  swift_bridgeObjectRetain_n();
  v4 = sub_23823842C();
  v5 = sub_238238864();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136446466;
    swift_bridgeObjectRetain();
    sub_2381CBC6C(v2, v1, &v9);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 1026;
    sub_238238960();
    _os_log_impl(&dword_2381C6000, v4, v5, "TTR rule \"%{public}s\" processed event with status: %{BOOL,public}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v7, -1, -1);
    MEMORY[0x23B82FE28](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_instantiateConcreteTypeFromMangledName(qword_2568E8728);
  return sub_2382387BC();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2381F4A54(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2381F4A7C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2381F4AA4()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F00A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F00A0);
  return sub_238238438();
}

uint64_t sub_2381F4B18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = 0;
  v3 = v2 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_location;
  v4 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

void sub_2381F4B90(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_238205CB8(a1, (void *)0x656C74746F726874, (void *)0xEA00000000002F73, a2);
}

id sub_2381F4BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  int v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  id v24;
  void *v25;
  NSObject *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v1 = OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state);
  if (!v2)
  {
    v9 = sub_238238228();
    v11 = v10;
    v12 = (void *)objc_opt_self();
    sub_2381D2684(v9, v11);
    v13 = (void *)sub_238238258();
    sub_2381D2640(v9, v11);
    *(_QWORD *)&v27 = 0;
    v14 = objc_msgSend(v12, sel_propertyListWithData_options_format_error_, v13, 0, 0, &v27);

    if (v14)
    {
      v15 = (id)v27;
      sub_238238984();
      sub_2381D2640(v9, v11);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AF8);
      v16 = swift_dynamicCast();
      v17 = v26;
      if (!v16)
        v17 = 0;
    }
    else
    {
      v24 = (id)v27;
      v25 = (void *)sub_238238150();

      swift_willThrow();
      sub_2381D2640(v9, v11);

      v17 = 0;
    }
    *(_QWORD *)(v0 + v1) = v17;
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v0 + v1);
    if (!v2)
      return 0;
  }
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v3 = sub_2381CC2AC(0xD000000000000011, 0x800000023823F2E0);
  if ((v4 & 1) == 0)
    goto LABEL_17;
  sub_2381CCC94(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v27);
  sub_2381F5A20();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_17;
  if (!*(_QWORD *)(v2 + 16)
    || (v5 = sub_2381CC2AC(0xD000000000000012, 0x800000023823F300), (v6 & 1) == 0)
    || (sub_2381CCC94(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v27), (swift_dynamicCast() & 1) == 0))
  {

LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_2568ED140 != -1)
      swift_once();
    v18 = sub_238238444();
    __swift_project_value_buffer(v18, (uint64_t)qword_2568F00A0);
    v19 = sub_23823842C();
    v20 = sub_23823887C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_2381C6000, v19, v20, "failed to decode throttle state", v21, 2u);
      MEMORY[0x23B82FE28](v21, -1, -1);
    }
    v22 = 0;
    goto LABEL_23;
  }
  if (*(_QWORD *)(v2 + 16) && (v7 = sub_2381CC2AC(0x756F437972746572, 0xEC0000007265746ELL), (v8 & 1) != 0))
  {
    sub_2381CCC94(*(_QWORD *)(v2 + 56) + 32 * v7, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
  {

    sub_2381F60D4((uint64_t)&v27);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_18;
  }
  v19 = v26;
  -[NSObject doubleValue](v26, sel_doubleValue);
  -[NSObject doubleValue](v26, sel_doubleValue);
  v22 = -[NSObject integerValue](v26, sel_integerValue);

LABEL_23:
  return v22;
}

void sub_2381F501C(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  unint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  id v11;
  char v12;
  id v13;
  char v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _OWORD v28[2];
  __int128 v29;
  unint64_t v30;
  uint64_t v31;

  v4 = v3;
  v31 = *MEMORY[0x24BDAC8D0];
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a2);
  v8 = sub_2381F5A20();
  v30 = v8;
  *(_QWORD *)&v29 = v7;
  sub_2381DA230(&v29, v28);
  v9 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2381F5D58(v28, 0xD000000000000011, 0x800000023823F2E0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a3);
  v30 = v8;
  *(_QWORD *)&v29 = v11;
  sub_2381DA230(&v29, v28);
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_2381F5D58(v28, 0xD000000000000012, 0x800000023823F300, v12);
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a1);
  v30 = v8;
  *(_QWORD *)&v29 = v13;
  sub_2381DA230(&v29, v28);
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_2381F5D58(v28, 0x756F437972746572, 0xEC0000007265746ELL, v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_238238570();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v29 = 0;
  v17 = objc_msgSend(v15, sel_dataWithPropertyList_format_options_error_, v16, 100, 0, &v29);

  v18 = (id)v29;
  if (v17)
  {
    v19 = sub_238238270();
    v21 = v20;

    sub_2381D2684(v19, v21);
    sub_23823827C();
    sub_2381D2640(v19, v21);
    sub_2381D2640(v19, v21);
  }
  else
  {
    v22 = v18;
    v23 = (void *)sub_238238150();

    swift_willThrow();
    if (qword_2568ED140 != -1)
      swift_once();
    v24 = sub_238238444();
    __swift_project_value_buffer(v24, (uint64_t)qword_2568F00A0);
    v25 = sub_23823842C();
    v26 = sub_23823887C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_2381C6000, v25, v26, "failed to encode throttle", v27, 2u);
      MEMORY[0x23B82FE28](v27, -1, -1);
    }

  }
}

uint64_t sub_2381F54B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2381F5518()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = 0;
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v2 = (void *)sub_238238198();
  *(_QWORD *)(v0 + 16) = 0;
  v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v0 + 16);

  v4 = *(void **)(v0 + 16);
  if (v3)
  {
    v5 = v4;
  }
  else
  {
    v6 = v4;
    v7 = (void *)sub_238238150();

    swift_willThrow();
    if (qword_2568ED140 != -1)
      swift_once();
    v8 = sub_238238444();
    __swift_project_value_buffer(v8, (uint64_t)qword_2568F00A0);
    v9 = sub_23823842C();
    v10 = sub_23823887C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2381C6000, v9, v10, "failed to clear throttle", v11, 2u);
      MEMORY[0x23B82FE28](v11, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381F56DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_23823830C();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381F573C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _BOOL8 v10;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_2381F4BBC();
  v5 = v4;
  v7 = v6;
  sub_2382382DC();
  sub_2382382D0();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = 1;
  if (v5 != 0.0)
    v10 = v7 == 0.0 || v9 + 3600.0 < v5 || v5 + v7 < v9;
  swift_task_dealloc();
  return (*(uint64_t (**)(_BOOL8))(v0 + 8))(v10);
}

uint64_t sub_2381F57F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_23823830C();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381F5854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  double v5;
  double v6;
  uint64_t result;
  double v8;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (int64_t)sub_2381F4BBC();
  sub_2382382DC();
  sub_2382382D0();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  result = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = 86400.0;
    if ((double)(v4 ^ 2) <= 86400.0)
      v8 = (double)(v4 ^ 2);
    sub_2381F501C(result, v6, v8);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_2381F5900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_location;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2381F595C()
{
  return type metadata accessor for Throttle();
}

uint64_t type metadata accessor for Throttle()
{
  uint64_t result;

  result = qword_2568ED1E0;
  if (!qword_2568ED1E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381F59A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_2381F5A20()
{
  unint64_t result;

  result = qword_2568E7AF0;
  if (!qword_2568E7AF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568E7AF0);
  }
  return result;
}

uint64_t sub_2381F5A5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8838);
  v6 = sub_238238B04();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_2381DA230(v24, v35);
      }
      else
      {
        sub_2381CCC94((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_238238CE4();
      sub_238238684();
      result = sub_238238D08();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_2381DA230(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_2381F5D58(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_2381DA230(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2381F5EF0();
      goto LABEL_7;
    }
    sub_2381F5A5C(v15, a4 & 1);
    v21 = sub_2381CC2AC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2381F5E88(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_238238C90();
  __break(1u);
  return result;
}

_OWORD *sub_2381F5E88(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2381DA230(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_2381F5EF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8838);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_2381CCC94(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_2381DA230(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2381F60D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_2381F6114(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t sub_2381F6128@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2381F6D24(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_2381F6154(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2381F618C + 4 * byte_23823B880[a1]))(0x79745F746E657665, 0xEA00000000006570);
}

uint64_t sub_2381F618C()
{
  return 0x6C72755F74736F70;
}

unint64_t sub_2381F61A4()
{
  return 0xD000000000000012;
}

uint64_t sub_2381F63A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2381F6154(*a1);
  v5 = v4;
  if (v3 == sub_2381F6154(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2381F642C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2381F6490(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2381F64F0 + 4 * byte_23823B899[a2]))(0xD000000000000012);
}

uint64_t sub_2381F64F0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000012 && v1 == 0x800000023823F360)
    v2 = 1;
  else
    v2 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_2381F659C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_238238CE4();
  sub_2381F6154(v1);
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_2381F65FC(char a1)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_2381F6654()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

uint64_t sub_2381F66C4()
{
  unsigned __int8 *v0;

  sub_2381F6154(*v0);
  sub_238238684();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2381F6704()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_238238CE4();
  sub_2381F6154(v1);
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_2381F6760(uint64_t a1, char a2)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_2381F67B4()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

uint64_t sub_2381F6824@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381F6EBC();
  *a1 = result;
  return result;
}

uint64_t sub_2381F6850@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2381F6154(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2381F6878()
{
  unsigned __int8 *v0;

  return sub_2381F6154(*v0);
}

uint64_t sub_2381F6880@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381F6EBC();
  *a1 = result;
  return result;
}

void sub_2381F68A4(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_2381F68B0()
{
  sub_2381F9250();
  return sub_238238D68();
}

uint64_t sub_2381F68D8()
{
  sub_2381F9250();
  return sub_238238D74();
}

__n128 sub_2381F6900@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[12];
  uint64_t v11;

  sub_2381F6F0C(a1, (uint64_t)v10);
  if (!v2)
  {
    v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_QWORD *)(a2 + 192) = v11;
    v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2381F6980()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6F687365726874;
  else
    return 0x7972746E756F63;
}

uint64_t sub_2381F69C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2381F7C90(a1, a2);
  *a3 = result;
  return result;
}

void sub_2381F69E4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2381F69F0()
{
  sub_2381F92D4();
  return sub_238238D68();
}

uint64_t sub_2381F6A18()
{
  sub_2381F92D4();
  return sub_238238D74();
}

void sub_2381F6A40(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  double v5;

  v5 = sub_2381F7D8C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

void sub_2381F6A6C(char *a1)
{
  sub_2381F642C(*a1);
}

void sub_2381F6A78()
{
  char *v0;

  sub_2381F65FC(*v0);
}

void sub_2381F6A80()
{
  __asm { BR              X10 }
}

uint64_t sub_2381F6AC4()
{
  sub_238238684();
  return swift_bridgeObjectRelease();
}

void sub_2381F6B20(uint64_t a1)
{
  char *v1;

  sub_2381F6760(a1, *v1);
}

uint64_t sub_2381F6B28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381F7F48();
  *a1 = result;
  return result;
}

uint64_t sub_2381F6B54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2381F6B8C + 4 * byte_23823B8B1[*v0]))();
}

void sub_2381F6B8C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000023823F360;
}

void sub_2381F6BAC(_QWORD *a1@<X8>)
{
  *a1 = 0x737265746C6966;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2381F6BDC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2381F6C14 + 4 * byte_23823B8B5[*v0]))(0x79745F746E657665, 0xEB00000000736570);
}

unint64_t sub_2381F6C14()
{
  return 0xD000000000000012;
}

uint64_t sub_2381F6C30()
{
  return 0x737265746C6966;
}

uint64_t sub_2381F6C48()
{
  return 0x73747069726373;
}

uint64_t sub_2381F6C60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2381F7F48();
  *a1 = result;
  return result;
}

uint64_t sub_2381F6C84()
{
  sub_2381F920C();
  return sub_238238D68();
}

uint64_t sub_2381F6CAC()
{
  sub_2381F920C();
  return sub_238238D74();
}

__n128 sub_2381F6CD4@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  char v7;

  sub_2381F7F90(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_BYTE *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_2381F6D24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD v9[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_238238D20();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v4 = sub_238238C24();
    if (!v4)
    {
      v3 = 1;
      goto LABEL_10;
    }
    if (v4 == 1)
    {
      v3 = 0;
LABEL_10:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return v3;
    }
    v6 = sub_238238A68();
    swift_allocError();
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(qword_2568E88F8);
    *v8 = &type metadata for StorebagBool;
    v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_238238D14();
    sub_238238A5C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v8, *MEMORY[0x24BEE26D0], v6);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_2381F6EBC()
{
  unint64_t v0;

  v0 = sub_238238C6C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15)
    return 21;
  else
    return v0;
}

uint64_t sub_2381F6F0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _BYTE v90[7];
  uint64_t v91;
  char v92;
  char v93;
  int v94;
  __int16 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  int v105;
  __int16 v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  _BYTE v110[7];
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  int v115;
  __int16 v116;
  uint64_t v117;
  char v118;
  char v119;
  char v120;
  int v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  int v126;
  char v127;
  int v128;
  __int16 v129;
  _BYTE v130[7];
  char v131;
  int v132;
  __int16 v133;
  char v134;
  int v135;
  __int16 v136;
  char v137;
  _BYTE v138[7];
  char v139;
  _QWORD *v140;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E88C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v140 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2381F9250();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
  LOBYTE(v84) = 0;
  v10 = sub_238238B7C();
  v12 = v11;
  LOBYTE(v84) = 1;
  swift_bridgeObjectRetain();
  v63 = sub_238238B7C();
  v64 = v10;
  LOBYTE(v84) = 2;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_238238B4C();
  v70 = v14;
  v62 = v15;
  v139 = v16 & 1;
  LOBYTE(v84) = 3;
  LODWORD(v14) = v16;
  v61 = sub_238238B70();
  v59 = v17;
  v60 = v14;
  v137 = v17 & 1;
  LOBYTE(v71) = 4;
  v18 = sub_2381F9318();
  sub_238238B58();
  v57 = v18;
  v56 = v84;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  LOBYTE(v71) = 5;
  v58 = sub_2381F935C((unint64_t *)&qword_2568E7DA8, &qword_2568E7B78, MEMORY[0x24BEE0D38]);
  sub_238238B58();
  LOBYTE(v71) = 6;
  v55 = v84;
  swift_bridgeObjectRetain();
  sub_238238B58();
  v54 = v19;
  v20 = v84;
  LOBYTE(v84) = 7;
  v21 = v20;
  swift_bridgeObjectRetain();
  v52 = sub_238238B40();
  v53 = v21;
  v23 = v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E88D0);
  LOBYTE(v71) = 8;
  sub_2381F935C(&qword_2568E88D8, &qword_2568E88D0, MEMORY[0x24BEE1798]);
  v69 = v23;
  swift_bridgeObjectRetain();
  v67 = v24;
  sub_238238B58();
  LOBYTE(v71) = 9;
  v68 = v84;
  swift_bridgeObjectRetain();
  sub_238238B58();
  v25 = v84;
  LOBYTE(v84) = 10;
  v67 = v25;
  swift_bridgeObjectRetain();
  v50 = sub_238238B70();
  v51 = v26;
  v134 = v26 & 1;
  LOBYTE(v71) = 11;
  sub_238238B58();
  v49 = v84;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8880);
  LOBYTE(v71) = 12;
  sub_2381F9294(&qword_2568E88A0, &qword_2568E8880);
  sub_238238B94();
  v27 = v84;
  v131 = v86;
  LOBYTE(v84) = 13;
  v65 = v85;
  v66 = v27;
  v48 = v86;
  sub_2381EB124();
  v47 = sub_238238B40();
  v29 = v28;
  LOBYTE(v71) = 14;
  swift_bridgeObjectRetain();
  sub_238238B58();
  v46 = v84;
  LOBYTE(v71) = 15;
  sub_238238B58();
  v45 = v84;
  LOBYTE(v71) = 16;
  sub_238238B58();
  LOBYTE(v71) = 17;
  v58 = v84;
  swift_bridgeObjectRetain();
  sub_238238B58();
  LODWORD(v54) = v84;
  LOBYTE(v71) = 18;
  sub_238238B58();
  v44 = v84;
  LOBYTE(v71) = 19;
  sub_238238B58();
  LODWORD(v57) = v84;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E88E0);
  v124 = 20;
  sub_2381F93B0();
  sub_238238B58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v43 = v125;
  *(_QWORD *)&v71 = v64;
  *((_QWORD *)&v71 + 1) = v12;
  *(_QWORD *)&v72 = v63;
  *((_QWORD *)&v72 + 1) = v70;
  *(_QWORD *)&v73 = v62;
  BYTE8(v73) = v60 & 1;
  *(_QWORD *)&v74 = v61;
  BYTE8(v74) = v59 & 1;
  BYTE9(v74) = v56;
  *(_QWORD *)&v75 = v55;
  *((_QWORD *)&v75 + 1) = v53;
  *(_QWORD *)&v76 = v52;
  *((_QWORD *)&v76 + 1) = v69;
  *(_QWORD *)&v77 = v68;
  *((_QWORD *)&v77 + 1) = v67;
  *(_QWORD *)&v78 = v50;
  BYTE8(v78) = v51 & 1;
  BYTE9(v78) = v49;
  *(_QWORD *)&v79 = v66;
  *((_QWORD *)&v79 + 1) = v65;
  LOBYTE(v80) = v48;
  *((_QWORD *)&v80 + 1) = v47;
  *(_QWORD *)&v81 = v29;
  v42 = v29;
  BYTE8(v81) = v46;
  BYTE9(v81) = v45;
  *(_QWORD *)&v82 = v58;
  BYTE8(v82) = v54;
  BYTE9(v82) = v44;
  BYTE10(v82) = v57;
  v83 = v125;
  sub_2381EC6A8((uint64_t)&v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2381EB148();
  swift_bridgeObjectRelease();
  v30 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v53;
  swift_bridgeObjectRelease();
  v32 = v69;
  swift_bridgeObjectRelease();
  v33 = v68;
  swift_bridgeObjectRelease();
  v34 = v67;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
  v84 = v64;
  v85 = v12;
  v86 = v63;
  v87 = v30;
  v88 = v62;
  v89 = v139;
  *(_DWORD *)v90 = *(_DWORD *)v138;
  *(_DWORD *)&v90[3] = *(_DWORD *)&v138[3];
  v91 = v61;
  v92 = v137;
  v93 = v56;
  v94 = v135;
  v95 = v136;
  v96 = v55;
  v97 = v31;
  v98 = v52;
  v99 = v32;
  v100 = v33;
  v101 = v34;
  v102 = v50;
  v103 = v134;
  v104 = v49;
  v105 = v132;
  v106 = v133;
  v107 = v66;
  v108 = v65;
  v109 = v131;
  *(_DWORD *)&v110[3] = *(_DWORD *)&v130[3];
  *(_DWORD *)v110 = *(_DWORD *)v130;
  v111 = v47;
  v112 = v42;
  v113 = v46;
  v114 = v45;
  v116 = v129;
  v115 = v128;
  v117 = v58;
  v118 = v54;
  v119 = v44;
  v120 = v57;
  v122 = v127;
  v121 = v126;
  v123 = v43;
  result = sub_2381EC77C((uint64_t)&v84);
  v36 = v82;
  *(_OWORD *)(a2 + 160) = v81;
  *(_OWORD *)(a2 + 176) = v36;
  *(_QWORD *)(a2 + 192) = v83;
  v37 = v78;
  *(_OWORD *)(a2 + 96) = v77;
  *(_OWORD *)(a2 + 112) = v37;
  v38 = v80;
  *(_OWORD *)(a2 + 128) = v79;
  *(_OWORD *)(a2 + 144) = v38;
  v39 = v74;
  *(_OWORD *)(a2 + 32) = v73;
  *(_OWORD *)(a2 + 48) = v39;
  v40 = v76;
  *(_OWORD *)(a2 + 64) = v75;
  *(_OWORD *)(a2 + 80) = v40;
  v41 = v72;
  *(_OWORD *)a2 = v71;
  *(_OWORD *)(a2 + 16) = v41;
  return result;
}

uint64_t sub_2381F7C90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_238238C0C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_2381F7D8C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v9;
  _BYTE v10[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E88B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381F92D4();
  sub_238238D2C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
    v10[15] = 0;
    sub_2381F935C((unint64_t *)&qword_2568E7DA8, &qword_2568E7B78, MEMORY[0x24BEE0D38]);
    sub_238238B94();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_238238B88();
    v2 = v9;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2381F7F48()
{
  unint64_t v0;

  v0 = sub_238238B34();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2381F7F90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  int v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8898);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2381F920C();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  v32 = 0;
  sub_2381F935C((unint64_t *)&qword_2568E7DA8, &qword_2568E7B78, MEMORY[0x24BEE0D38]);
  sub_238238B94();
  v9 = v28;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_238238B4C();
  v31 = v11;
  v27 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8880);
  v32 = 2;
  sub_2381F9294(&qword_2568E88A0, &qword_2568E8880);
  sub_238238B58();
  v12 = v28;
  v13 = v29;
  HIDWORD(v23) = v30;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E88A8);
  v25 = v13;
  v32 = 3;
  v26 = v12;
  v14 = v13;
  LOBYTE(v13) = BYTE4(v23);
  sub_2381EB10C(v12, v14, BYTE4(v23));
  sub_2381F9294(&qword_2568E88B0, &qword_2568E88A8);
  sub_238238B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v28;
  v16 = v29;
  v17 = v30;
  sub_2381EB124();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  v18 = v26;
  v19 = v13;
  v20 = v25;
  sub_2381EB130(v26, v25, v19);
  result = sub_2381EB148();
  v22 = v27;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v22;
  *(_BYTE *)(a2 + 16) = v31 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v20;
  *(_BYTE *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v15;
  *(_QWORD *)(a2 + 56) = v16;
  *(_BYTE *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_2381F82D8()
{
  unint64_t result;

  result = qword_2568E8848;
  if (!qword_2568E8848)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B8D8, &type metadata for StorebagBool);
    atomic_store(result, (unint64_t *)&qword_2568E8848);
  }
  return result;
}

unint64_t sub_2381F8320()
{
  unint64_t result;

  result = qword_2568E8850;
  if (!qword_2568E8850)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B968, &type metadata for StorebagSectionClientHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8850);
  }
  return result;
}

unint64_t sub_2381F8368()
{
  unint64_t result;

  result = qword_2568E8858;
  if (!qword_2568E8858)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BA80, &type metadata for StorebagSectionClientHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8858);
  }
  return result;
}

unint64_t sub_2381F83B0()
{
  unint64_t result;

  result = qword_2568E8860;
  if (!qword_2568E8860)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BA58, &type metadata for StorebagSectionClientHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8860);
  }
  return result;
}

unint64_t sub_2381F83F8()
{
  unint64_t result;

  result = qword_2568E8868;
  if (!qword_2568E8868)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BAF8, &type metadata for StorebagSectionClientScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8868);
  }
  return result;
}

unint64_t sub_2381F8440()
{
  unint64_t result;

  result = qword_2568E8870;
  if (!qword_2568E8870)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BC10, &type metadata for StorebagSectionClientScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8870);
  }
  return result;
}

unint64_t sub_2381F8488()
{
  unint64_t result;

  result = qword_2568E8878;
  if (!qword_2568E8878)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BBE8, &type metadata for StorebagSectionClientScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8878);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagBool()
{
  return &type metadata for StorebagBool;
}

uint64_t destroy for StorebagSectionClientHTTP()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2381EB148();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 128);
  v10 = *(_QWORD *)(a2 + 136);
  v13 = *(_BYTE *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2381EB124();
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = v10;
  *(_BYTE *)(a1 + 144) = v13;
  v11 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v11;
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v6;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  v7 = *(_QWORD *)(a2 + 128);
  v8 = *(_QWORD *)(a2 + 136);
  v9 = *(_BYTE *)(a2 + 144);
  sub_2381EB124();
  *(_QWORD *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 136) = v8;
  *(_BYTE *)(a1 + 144) = v9;
  sub_2381EB148();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v6 = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = v6;
  sub_2381EB148();
  v7 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP()
{
  return &type metadata for StorebagSectionClientHTTP;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_2381F8B7C + 4 * byte_23823B8BE[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_2381F8BB0 + 4 * byte_23823B8B9[v4]))();
}

uint64_t sub_2381F8BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F8BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381F8BC0);
  return result;
}

uint64_t sub_2381F8BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381F8BD4);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_2381F8BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F8BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionClientHTTP.CodingKeys;
}

_QWORD *initializeBufferWithCopyOfBuffer for StorebagSectionPerCountrySampling(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StorebagSectionPerCountrySampling()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StorebagSectionPerCountrySampling(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for StorebagSectionPerCountrySampling(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling()
{
  return &type metadata for StorebagSectionPerCountrySampling;
}

uint64_t destroy for StorebagSectionClientScriptGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) != 255)
    sub_2381EB148();
  return sub_2381EB148();
}

uint64_t initializeWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 32);
    sub_2381EB124();
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    *(_BYTE *)(a1 + 40) = v5 & 1;
  }
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_BYTE *)(a2 + 64);
  sub_2381EB124();
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  char v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (__int128 *)(a1 + 24);
  v6 = (__int128 *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      v9 = *v6;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *v5 = v9;
    }
    else
    {
      v13 = v7 & 1;
      v14 = *(_QWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a2 + 32);
      sub_2381EB124();
      *(_QWORD *)(a1 + 24) = v14;
      *(_QWORD *)(a1 + 32) = v15;
      *(_BYTE *)(a1 + 40) = v13;
    }
  }
  else if (v7 == 255)
  {
    sub_2381F8F70(a1 + 24);
    v8 = *(_BYTE *)(a2 + 40);
    *v5 = *v6;
    *(_BYTE *)(a1 + 40) = v8;
  }
  else
  {
    v10 = v7 & 1;
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    sub_2381EB124();
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_BYTE *)(a1 + 40) = v10;
    sub_2381EB148();
  }
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  v18 = *(_BYTE *)(a2 + 64);
  sub_2381EB124();
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  *(_BYTE *)(a1 + 64) = v18;
  sub_2381EB148();
  return a1;
}

uint64_t sub_2381F8F70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  int v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 != 255)
    {
      *(_OWORD *)(a1 + 24) = *v4;
      *(_BYTE *)(a1 + 40) = v5 & 1;
      sub_2381EB148();
      goto LABEL_6;
    }
    sub_2381F8F70(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
LABEL_6:
  v6 = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = v6;
  sub_2381EB148();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup()
{
  return &type metadata for StorebagSectionClientScriptGroup;
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientScriptGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2381F918C + 4 * byte_23823B8C8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2381F91C0 + 4 * byte_23823B8C3[v4]))();
}

uint64_t sub_2381F91C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F91C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381F91D0);
  return result;
}

uint64_t sub_2381F91DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381F91E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2381F91E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F91F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionClientScriptGroup.CodingKeys;
}

unint64_t sub_2381F920C()
{
  unint64_t result;

  result = qword_2568E8888;
  if (!qword_2568E8888)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BB98, &type metadata for StorebagSectionClientScriptGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8888);
  }
  return result;
}

unint64_t sub_2381F9250()
{
  unint64_t result;

  result = qword_2568E8890;
  if (!qword_2568E8890)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BA08, &type metadata for StorebagSectionClientHTTP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8890);
  }
  return result;
}

uint64_t sub_2381F9294(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B82FD68](&unk_23823A7EC, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2381F92D4()
{
  unint64_t result;

  result = qword_2568EDB00[0];
  if (!qword_2568EDB00[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823BDBC, &type metadata for StorebagSectionPerCountrySampling.CodingKeys);
    atomic_store(result, qword_2568EDB00);
  }
  return result;
}

unint64_t sub_2381F9318()
{
  unint64_t result;

  result = qword_2568E88C8;
  if (!qword_2568E88C8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823B940, &type metadata for StorebagBool);
    atomic_store(result, (unint64_t *)&qword_2568E88C8);
  }
  return result;
}

uint64_t sub_2381F935C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2381F93B0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2568E88E8;
  if (!qword_2568E88E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E88E0);
    v2 = sub_2381F9414();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568E88E8);
  }
  return result;
}

unint64_t sub_2381F9414()
{
  unint64_t result;

  result = qword_2568E88F0;
  if (!qword_2568E88F0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BAD0, &type metadata for StorebagSectionPerCountrySampling);
    atomic_store(result, (unint64_t *)&qword_2568E88F0);
  }
  return result;
}

uint64_t _s19CloudTelemetryTools12StorebagBoolOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2381F94A4 + 4 * byte_23823B8D2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2381F94D8 + 4 * byte_23823B8CD[v4]))();
}

uint64_t sub_2381F94D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F94E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2381F94E8);
  return result;
}

uint64_t sub_2381F94F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2381F94FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2381F9500(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2381F9508(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling.CodingKeys()
{
  return &type metadata for StorebagSectionPerCountrySampling.CodingKeys;
}

unint64_t sub_2381F9528()
{
  unint64_t result;

  result = qword_2568EDC10[0];
  if (!qword_2568EDC10[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823BD94, &type metadata for StorebagSectionPerCountrySampling.CodingKeys);
    atomic_store(result, qword_2568EDC10);
  }
  return result;
}

unint64_t sub_2381F9570()
{
  unint64_t result;

  result = qword_2568EDD20;
  if (!qword_2568EDD20)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BD04, &type metadata for StorebagSectionPerCountrySampling.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568EDD20);
  }
  return result;
}

unint64_t sub_2381F95B8()
{
  unint64_t result;

  result = qword_2568EDD28[0];
  if (!qword_2568EDD28[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823BD2C, &type metadata for StorebagSectionPerCountrySampling.CodingKeys);
    atomic_store(result, qword_2568EDD28);
  }
  return result;
}

uint64_t sub_2381F960C()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F00B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F00B8);
  return sub_238238438();
}

uint64_t sub_2381F9690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  return swift_task_switch();
}

uint64_t sub_2381F96AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD *, _QWORD, _QWORD, _QWORD);

  v3 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD))(**(int **)(**(_QWORD **)(v0[18] + 112) + 232)
                                                                + *(_QWORD *)(**(_QWORD **)(v0[18] + 112) + 232));
  v1 = (_QWORD *)swift_task_alloc();
  v0[19] = v1;
  *v1 = v0;
  v1[1] = sub_2381F9724;
  return v3(v0 + 2, v0[15], v0[16], v0[17]);
}

uint64_t sub_2381F9724()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  int *v7;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v5 = *(int **)(**(_QWORD **)(v2 + 144) + 128);
  v7 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v6;
  *v6 = v3;
  v6[1] = sub_2381F97D0;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))v7)(v2 + 16, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_2381F97D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 168) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 176) = a2;
    *(_QWORD *)(v6 + 184) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_2381F9848()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 16);
  sub_2381F4A7C(v0 + 112);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 24);
  sub_2381F4A7C(v0 + 96);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 40);
  sub_2381EC924(v0 + 56);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176));
}

uint64_t sub_2381F98AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 16);
  sub_2381F4A7C(v0 + 88);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 24);
  sub_2381F4A7C(v0 + 104);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 40);
  sub_2381EC924(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381F990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381F9980()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t);
  int *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t (*v28)(uint64_t);
  uint64_t (*v29)(uint64_t);

  v1 = **(_QWORD **)(v0 + 216);
  *(_QWORD *)(v0 + 208) = v1;
  *(_QWORD *)(v0 + 280) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 288) = v2;
  if (v2)
  {
    if (v2 == 1)
    {
      v3 = *(_QWORD *)(v0 + 272);
      v5 = *(_QWORD *)(v0 + 248);
      v4 = *(_QWORD *)(v0 + 256);
      v7 = *(_QWORD *)(v0 + 232);
      v6 = *(_QWORD *)(v0 + 240);
      v8 = *(_QWORD *)(v0 + 224);
      *(_QWORD *)(v0 + 192) = v7;
      *(_QWORD *)(v0 + 200) = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(boxed_opaque_existential_1, v8, v7);
      sub_2381D9630(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
      v29 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v5 + 152) + *(_QWORD *)(*(_QWORD *)v5 + 152));
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v10;
      *v10 = v0;
      v10[1] = sub_2381F9BCC;
      v11 = v0 + 72;
      v12 = v29;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 248);
      v14 = *(_QWORD *)(v0 + 256);
      v16 = *(_QWORD *)(v0 + 240);
      v17 = sub_2381FB2C8(0, v2, 0, MEMORY[0x24BEE4AF8]);
      v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      *(_QWORD *)(v0 + 328) = v18;
      v19 = *(int **)(*(_QWORD *)v15 + 152);
      *(_QWORD *)(v0 + 336) = v19;
      v20 = *(_DWORD *)(v14 + 80);
      *(_DWORD *)(v0 + 392) = v20;
      *(_QWORD *)(v0 + 344) = v17;
      *(_QWORD *)(v0 + 352) = 1;
      v21 = *(_QWORD *)(v0 + 264);
      v23 = *(_QWORD *)(v0 + 232);
      v22 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 224);
      v25 = *(_QWORD *)(v0 + 280) + ((v20 + 32) & ~(unint64_t)v20);
      swift_bridgeObjectRetain();
      sub_2381D9630(v25, v21, type metadata accessor for SessionConfiguration.Backend);
      *(_QWORD *)(v0 + 152) = v23;
      *(_QWORD *)(v0 + 160) = v22;
      v26 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v26, v24, v23);
      v18(v23, v22);
      v28 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 360) = v27;
      *v27 = v0;
      v27[1] = sub_2381F9D1C;
      v11 = v0 + 16;
      v12 = v28;
    }
    return v12(v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_2381F9BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t **v3;
  uint64_t *v6;

  v6 = *v3;
  (*v3)[38] = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_2381CCA1C(v6[34], type metadata accessor for SessionConfiguration.Backend);
  }
  else
  {
    v6[39] = a2;
    v6[40] = a1;
  }
  sub_2381CC9D4((uint64_t)(v6 + 9));
  return swift_task_switch();
}

uint64_t sub_2381F9C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v0 + 248) + 144))(v0 + 168, v1, *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 312));
  v4 = v3;
  swift_bridgeObjectRelease();
  sub_2381CCA1C(v1, type metadata accessor for SessionConfiguration.Backend);
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v4);
}

uint64_t sub_2381F9D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 368) = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_2381CC9D4(v6 + 16);
    sub_2381F4A7C(v6 + 208);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v6 + 376) = a2;
    *(_QWORD *)(v6 + 384) = a1;
    sub_2381CC9D4(v6 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_2381F9DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t);

  v1 = *(_QWORD *)(v0 + 344);
  v2 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v0 + 248) + 144))(v0 + 128, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 376));
  v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD **)(v0 + 344);
  if (v6 >= v5 >> 1)
    v7 = sub_2381FB2C8((_QWORD *)(v5 > 1), v6 + 1, 1, *(_QWORD **)(v0 + 344));
  v8 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 264);
  v7[2] = v6 + 1;
  v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  result = sub_2381CCA1C(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_2381F4A7C(v0 + 208);
    type metadata accessor for BackendGroup();
    v13 = sub_2381FF6BC((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8))(v13, &off_2509F9148);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(v0 + 344) = v7;
    *(_QWORD *)(v0 + 352) = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      v16 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      v15 = *(int **)(v0 + 336);
      v18 = *(_QWORD *)(v0 + 232);
      v17 = *(_QWORD *)(v0 + 240);
      v19 = *(_QWORD *)(v0 + 224);
      sub_2381D9630(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(_QWORD *)(*(_QWORD *)(v0 + 256) + 72) * v14, *(_QWORD *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(_QWORD *)(v0 + 152) = v18;
      *(_QWORD *)(v0 + 160) = v17;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
      v16(v18, v17);
      v22 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 360) = v21;
      *v21 = v0;
      v21[1] = sub_2381F9D1C;
      return v22(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_2381F9FD0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381FA014()
{
  uint64_t v0;

  sub_2381CCA1C(*(_QWORD *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381FA06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381FA0E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, uint64_t);
  int *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t (*v30)(uint64_t);

  v1 = *(_QWORD **)(v0 + 216);
  v2 = v1[1];
  *(_QWORD *)(v0 + 208) = v2;
  *(_QWORD *)(v0 + 280) = v2;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 288) = v3;
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = *(_QWORD *)(v0 + 272);
      v6 = *(_QWORD *)(v0 + 248);
      v5 = *(_QWORD *)(v0 + 256);
      v8 = *(_QWORD *)(v0 + 232);
      v7 = *(_QWORD *)(v0 + 240);
      v9 = *(_QWORD *)(v0 + 224);
      *(_QWORD *)(v0 + 192) = v8;
      *(_QWORD *)(v0 + 200) = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v9, v8);
      sub_2381D9630(v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
      v30 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v6 + 152) + *(_QWORD *)(*(_QWORD *)v6 + 152));
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v11;
      *v11 = v0;
      v11[1] = sub_2381F9BCC;
      v12 = v0 + 72;
      v13 = v30;
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 248);
      v15 = *(_QWORD *)(v0 + 256);
      v17 = *(_QWORD *)(v0 + 240);
      v18 = sub_2381FB2C8(0, *(_QWORD *)(*v1 + 16), 0, MEMORY[0x24BEE4AF8]);
      v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(_QWORD *)(v0 + 328) = v19;
      v20 = *(int **)(*(_QWORD *)v16 + 152);
      *(_QWORD *)(v0 + 336) = v20;
      v21 = *(_DWORD *)(v15 + 80);
      *(_DWORD *)(v0 + 392) = v21;
      *(_QWORD *)(v0 + 344) = v18;
      *(_QWORD *)(v0 + 352) = 1;
      v22 = *(_QWORD *)(v0 + 264);
      v24 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v0 + 240);
      v25 = *(_QWORD *)(v0 + 224);
      v26 = *(_QWORD *)(v0 + 280) + ((v21 + 32) & ~(unint64_t)v21);
      swift_bridgeObjectRetain();
      sub_2381D9630(v26, v22, type metadata accessor for SessionConfiguration.Backend);
      *(_QWORD *)(v0 + 152) = v24;
      *(_QWORD *)(v0 + 160) = v23;
      v27 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v27, v25, v24);
      v19(v24, v23);
      v29 = (uint64_t (*)(uint64_t))((char *)v20 + *v20);
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 360) = v28;
      *v28 = v0;
      v28[1] = sub_2381FA334;
      v12 = v0 + 16;
      v13 = v29;
    }
    return v13(v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
}

uint64_t sub_2381FA334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 368) = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_2381CC9D4(v6 + 16);
    sub_2381F4A7C(v6 + 208);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v6 + 376) = a2;
    *(_QWORD *)(v6 + 384) = a1;
    sub_2381CC9D4(v6 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_2381FA3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t);

  v1 = *(_QWORD *)(v0 + 344);
  v2 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v0 + 248) + 144))(v0 + 128, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 376));
  v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD **)(v0 + 344);
  if (v6 >= v5 >> 1)
    v7 = sub_2381FB2C8((_QWORD *)(v5 > 1), v6 + 1, 1, *(_QWORD **)(v0 + 344));
  v8 = *(_QWORD *)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 264);
  v7[2] = v6 + 1;
  v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  result = sub_2381CCA1C(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_2381F4A7C(v0 + 208);
    type metadata accessor for BackendGroup();
    v13 = sub_2381FF6BC((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8))(v13, &off_2509F9148);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(v0 + 344) = v7;
    *(_QWORD *)(v0 + 352) = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      v16 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      v15 = *(int **)(v0 + 336);
      v18 = *(_QWORD *)(v0 + 232);
      v17 = *(_QWORD *)(v0 + 240);
      v19 = *(_QWORD *)(v0 + 224);
      sub_2381D9630(*(_QWORD *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(_QWORD *)(*(_QWORD *)(v0 + 256) + 72) * v14, *(_QWORD *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(_QWORD *)(v0 + 152) = v18;
      *(_QWORD *)(v0 + 160) = v17;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
      v16(v18, v17);
      v22 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 360) = v21;
      *v21 = v0;
      v21[1] = sub_2381FA334;
      return v22(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_2381FA5E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *__return_ptr, uint64_t, uint64_t);
  unsigned int v28;
  int v29;
  id v30;
  uint64_t v32[2];
  _QWORD v33[5];
  _QWORD v34[4];
  unsigned __int8 v35;
  unsigned __int8 v36;

  v5 = v4;
  v10 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v32 - v14;
  v16 = type metadata accessor for SessionConfiguration.Backend(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2381D9630(a2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *((_QWORD *)v18 + 1);
    v21 = *((_QWORD *)v18 + 2);
    type metadata accessor for BackendLocal();
    sub_2381CDE14((uint64_t)a1, (uint64_t)v34);
    return sub_2381F2854(v20, v21, v34);
  }
  else
  {
    sub_2381E2C38((uint64_t)v18, (uint64_t)v15);
    v32[1] = type metadata accessor for BackendHTTP();
    v23 = *(_QWORD *)(v5 + 128);
    sub_2381CDE14((uint64_t)a1, (uint64_t)v33);
    sub_2381D9630((uint64_t)v15, (uint64_t)v13, type metadata accessor for SessionConfiguration.BackendHTTP);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    v32[0] = a4;
    v24 = a3;
    v26 = a1[3];
    v25 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    v27 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 8);
    swift_retain();
    v27(v34, v26, v25);
    v28 = v35;
    LODWORD(v26) = v36;
    swift_bridgeObjectRetain();
    sub_2381CC9D4((uint64_t)v34);
    if ((_DWORD)v26)
      v29 = 256;
    else
      v29 = 0;
    v30 = sub_23822F864(v29 | v28);
    swift_release();
    swift_bridgeObjectRelease();
    v22 = sub_2381ED690(v23, v33, v5, v13, v24, v32[0], v30);
    sub_2381CCA1C((uint64_t)v15, type metadata accessor for SessionConfiguration.BackendHTTP);
  }
  return v22;
}

uint64_t sub_2381FA874(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_238238360();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7BA0);
  v2[15] = swift_task_alloc();
  v4 = sub_23823830C();
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381FA948()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(**(_QWORD **)(*(_QWORD *)(v0 + 88) + 112) + 264)
                         + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v0 + 88) + 112) + 264));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_2381FA9A8;
  return v3();
}

uint64_t sub_2381FA9A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381FAA00()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[23] = *(_QWORD *)(v0[11] + 120);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2381FAA60;
  return sub_2381DC2E4(v0[15], v0[10]);
}

uint64_t sub_2381FAA60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381FAAC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(char **)(v0 + 120);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7C88);
  v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  v5 = *(_QWORD *)(v0 + 128);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 96);
    sub_2381FB3D4((uint64_t)v2);
    sub_238238354();
    v10 = sub_238238318();
    v12 = v11;
    *(_QWORD *)(v0 + 248) = v10;
    *(_QWORD *)(v0 + 256) = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_bridgeObjectRetain();
    sub_2382382DC();
    sub_2382382A0();
    v13 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    *(_QWORD *)(v0 + 264) = v13;
    v13(v6, v5);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v14;
    *v14 = v0;
    v14[1] = sub_2381FB054;
    v15 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = v10;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 160);
    v20 = *(_QWORD *)v2;
    v19 = *((_QWORD *)v2 + 1);
    (*(void (**)(_QWORD, char *, _QWORD))(v1 + 32))(*(_QWORD *)(v0 + 168), &v2[*(int *)(v3 + 48)], *(_QWORD *)(v0 + 128));
    sub_2382382DC();
    v21 = sub_2382382B8();
    v22 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    *(_QWORD *)(v0 + 208) = v22;
    v22(v18, v5);
    if ((v21 & 1) != 0)
    {
      v22(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v20, v19);
    }
    swift_bridgeObjectRelease();
    if (qword_2568EDDB0 != -1)
      swift_once();
    v24 = *(_QWORD *)(v0 + 80);
    v25 = sub_238238444();
    __swift_project_value_buffer(v25, (uint64_t)qword_2568F00B8);
    sub_2381CC98C(v24);
    sub_2381CC98C(v24);
    v26 = sub_23823842C();
    v27 = sub_238238894();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 80);
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136446210;
      v33 = *(_OWORD *)(v29 + 16);
      v32 = *(_OWORD *)(v29 + 32);
      v34 = *(_OWORD *)v29;
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(v29 + 48);
      *(_OWORD *)(v0 + 32) = v33;
      *(_OWORD *)(v0 + 48) = v32;
      *(_OWORD *)(v0 + 16) = v34;
      sub_2381FB414();
      v35 = sub_238238BE8();
      *(_QWORD *)(v0 + 72) = sub_2381CBC6C(v35, v36, &v45);
      sub_238238960();
      swift_bridgeObjectRelease();
      sub_2381CC9D4(v29);
      sub_2381CC9D4(v29);
      _os_log_impl(&dword_2381C6000, v26, v27, "CID expired for %{public}s, refreshing", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v31, -1, -1);
      MEMORY[0x23B82FE28](v30, -1, -1);
    }
    else
    {
      sub_2381CC9D4(*(_QWORD *)(v0 + 80));
      sub_2381CC9D4(v29);
    }

    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 128);
    v40 = *(_QWORD *)(v0 + 104);
    v39 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 96);
    sub_238238354();
    v42 = sub_238238318();
    v12 = v43;
    *(_QWORD *)(v0 + 216) = v42;
    *(_QWORD *)(v0 + 224) = v43;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    swift_bridgeObjectRetain();
    sub_2382382DC();
    sub_2382382A0();
    v22(v37, v38);
    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v44;
    *v44 = v0;
    v44[1] = sub_2381FAF18;
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = v42;
  }
  return sub_2381DC508(v16, v17, v12, v15);
}

uint64_t sub_2381FAF18()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2381FAFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_2381FB054()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 264);
  v3 = *(_QWORD *)(*v1 + 144);
  v4 = *(_QWORD *)(*v1 + 128);
  v5 = *v1;
  *(_QWORD *)(v5 + 280) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 256);
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v5 + 248);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v8, v6);
  }
}

uint64_t sub_2381FB15C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381FB1D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381FB254()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_2381FB2C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8A08);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2381FB478(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381FB3D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2381FB414()
{
  unint64_t result;

  result = qword_2568E8920;
  if (!qword_2568E8920)
  {
    result = MEMORY[0x23B82FD68](&unk_23823CC10, &type metadata for ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_2568E8920);
  }
  return result;
}

uint64_t type metadata accessor for SubmissionCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_2381FB478(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8A10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_2381FB580()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F00D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F00D0);
  return sub_238238438();
}

void sub_2381FB600(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_2381FB650()
{
  sub_238238A20();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  return 0xD00000000000001FLL;
}

void sub_2381FB758()
{
  uint64_t v0;

  sub_2381FB600(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t type metadata accessor for StorebagCloudKitSigningConfiguration()
{
  uint64_t result;

  result = qword_2568EDF50;
  if (!qword_2568EDF50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2381FB7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v5 = sub_238238210();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  type metadata accessor for Throttle();
  sub_2381F4B90(a1, (uint64_t)v11);
  if (v2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v13(a2, v11, v5);
  sub_238205CB8(a1, (void *)0x72756769666E6F63, (void *)0xEF2F736E6F697461, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  v14 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2 + *(int *)(v14 + 20), v9, v5);
}

uint64_t sub_2381FB908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t inited;
  void *v26;
  id v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  double v55;
  unint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char v60;
  id v61;
  void *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  char v67;
  char v68;
  char v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  id v77;
  void *v78;
  unsigned int v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  NSObject *v87;
  int v88;
  uint8_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  char v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v112 = *MEMORY[0x24BDAC8D0];
  v103 = sub_23823830C();
  v104 = *(_QWORD *)(v103 - 8);
  v0 = MEMORY[0x24BDAC7A8](v103);
  v101 = (char *)&v95 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v102 = (char *)&v95 - v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v95 - v4;
  v6 = sub_238238114();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90C0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v95 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v95 - v17;
  v19 = sub_238238210();
  v20 = *(_QWORD *)(v19 - 8);
  v105 = v19;
  v106 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_2382381A4();
  v23 = v22;
  v24 = sub_2382381BC();
  v96 = v16;
  v97 = v7;
  v98 = v13;
  v100 = v5;
  v99 = v18;
  if ((v24 & 1) == 0)
  {
    if (qword_2568EDE40 != -1)
      swift_once();
    v29 = sub_238238444();
    __swift_project_value_buffer(v29, (uint64_t)qword_2568F00D0);
    v30 = sub_23823842C();
    v31 = sub_238238864();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_2381C6000, v30, v31, "configuration does not exist", v32, 2u);
      MEMORY[0x23B82FE28](v32, -1, -1);
    }

    v33 = v105;
    v34 = *(void (**)(char *, uint64_t))(v106 + 8);
    v35 = v23;
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v26 = (void *)*MEMORY[0x24BDBCBE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBE0];
  v27 = v26;
  sub_2381D450C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  v28 = v22;
  sub_238238168();
  swift_bridgeObjectRelease();
  v37 = v96;
  sub_2382380F0();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v6);
  v38 = v104;
  v39 = v103;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48))(v37, 1, v103);
  if ((_DWORD)result != 1)
  {
    v41 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v99, v37, v39);
    v43 = v105;
    v42 = v106;
    v44 = (uint64_t)v98;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v39);
    sub_2381FF59C(v41, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v44, 1, v39) == 1)
    {
      sub_2381CCCD0(v44, &qword_2568E90C0);
      if (qword_2568EDE40 != -1)
        swift_once();
      v45 = sub_238238444();
      __swift_project_value_buffer(v45, (uint64_t)qword_2568F00D0);
      v46 = sub_23823842C();
      v47 = sub_23823887C();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_2381C6000, v46, v47, "unable to determine configuration creation date", v48, 2u);
        MEMORY[0x23B82FE28](v48, -1, -1);
      }

LABEL_29:
      sub_2381CCCD0(v41, &qword_2568E90C0);
      v34 = *(void (**)(char *, uint64_t))(v42 + 8);
LABEL_30:
      v35 = v28;
      v33 = v43;
LABEL_8:
      v34(v35, v33);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v100, v44, v39);
    v36 = sub_238238228();
    v50 = v49;
    v51 = (void *)objc_opt_self();
    sub_2381D2684(v36, v50);
    v52 = (void *)sub_238238258();
    *(_QWORD *)&v110 = 0;
    v53 = objc_msgSend(v51, sel_propertyListWithData_options_format_error_, v52, 0, 0, &v110);

    if (v53)
    {
      v54 = (id)v110;
      sub_238238984();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AF8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v55 = v108;
        if (*(_QWORD *)(*(_QWORD *)&v108 + 16))
        {
          v56 = sub_2381CC2AC(0xD000000000000016, 0x800000023823F820);
          v57 = v100;
          v58 = v102;
          v59 = v101;
          if ((v60 & 1) != 0)
          {
            sub_2381CCC94(*(_QWORD *)(*(_QWORD *)&v55 + 56) + 32 * v56, (uint64_t)&v110);
          }
          else
          {
            v110 = 0u;
            v111 = 0u;
          }
        }
        else
        {
          v110 = 0u;
          v111 = 0u;
          v57 = v100;
          v58 = v102;
          v59 = v101;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v111 + 1))
        {
          v67 = swift_dynamicCast();
          if ((v67 & 1) != 0)
          {
            v109 = 0;
            if (v108 > 31536000.0 || v108 < 3600.0)
            {
              v108 = 86400.0;
              v109 = 0;
            }
            goto LABEL_41;
          }
          v108 = 0.0;
          v68 = v67 ^ 1;
        }
        else
        {
          sub_2381CCCD0((uint64_t)&v110, &qword_2568E8840);
          v108 = 0.0;
          v68 = 1;
        }
        v109 = v68;
LABEL_41:
        sub_2382382A0();
        sub_2382382DC();
        v69 = sub_2382382B8();
        v70 = *(void (**)(char *, uint64_t))(v104 + 8);
        v71 = v59;
        v72 = v103;
        v70(v71, v103);
        if ((v69 & 1) == 0)
        {
          sub_2381D2640(v36, v50);
          v70(v58, v72);
          v70(v57, v72);
          sub_2381CCCD0(v41, &qword_2568E90C0);
          (*(void (**)(char *, uint64_t))(v106 + 8))(v28, v43);
          return v36;
        }
        if (qword_2568EDE40 != -1)
          swift_once();
        v73 = sub_238238444();
        __swift_project_value_buffer(v73, (uint64_t)qword_2568F00D0);
        v74 = sub_23823842C();
        v75 = sub_238238894();
        if (os_log_type_enabled(v74, v75))
        {
          v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v76 = 0;
          _os_log_impl(&dword_2381C6000, v74, v75, "removing expired config", v76, 2u);
          MEMORY[0x23B82FE28](v76, -1, -1);
        }

        v77 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v78 = (void *)sub_238238198();
        *(_QWORD *)&v110 = 0;
        v79 = objc_msgSend(v77, sel_removeItemAtURL_error_, v78, &v110);

        if (v79)
        {
          v80 = (id)v110;
          sub_2381D2640(v36, v50);
          sub_2381D2640(v36, v50);
          v81 = v103;
          v70(v102, v103);
          v70(v100, v81);
          v82 = v41;
        }
        else
        {
          v83 = (id)v110;
          v84 = (void *)sub_238238150();

          swift_willThrow();
          v85 = v84;
          v86 = v84;
          v87 = sub_23823842C();
          v88 = sub_238238864();
          if (os_log_type_enabled(v87, (os_log_type_t)v88))
          {
            v89 = (uint8_t *)swift_slowAlloc();
            v104 = swift_slowAlloc();
            *(_QWORD *)&v110 = v104;
            *(_DWORD *)v89 = 136446210;
            v101 = (char *)(v89 + 4);
            swift_getErrorValue();
            v90 = sub_238238C9C();
            v107 = sub_2381CBC6C(v90, v91, (uint64_t *)&v110);
            sub_238238960();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_2381C6000, v87, (os_log_type_t)v88, "failed to remove expired configuration: %{public}s", v89, 0xCu);
            v92 = v104;
            swift_arrayDestroy();
            MEMORY[0x23B82FE28](v92, -1, -1);
            MEMORY[0x23B82FE28](v89, -1, -1);
            sub_2381D2640(v36, v50);

            sub_2381D2640(v36, v50);
            v93 = v103;
            v70(v102, v103);
            v70(v100, v93);
            sub_2381CCCD0((uint64_t)v99, &qword_2568E90C0);
            (*(void (**)(char *, uint64_t))(v106 + 8))(v28, v105);
            return 0;
          }
          sub_2381D2640(v36, v50);

          sub_2381D2640(v36, v50);
          v94 = v103;
          v70(v102, v103);
          v70(v100, v94);
          v82 = (uint64_t)v99;
        }
        sub_2381CCCD0(v82, &qword_2568E90C0);
        v34 = *(void (**)(char *, uint64_t))(v106 + 8);
        goto LABEL_30;
      }
    }
    else
    {
      v61 = (id)v110;
      v62 = (void *)sub_238238150();

      swift_willThrow();
    }
    if (qword_2568EDE40 != -1)
      swift_once();
    v63 = sub_238238444();
    __swift_project_value_buffer(v63, (uint64_t)qword_2568F00D0);
    v64 = sub_23823842C();
    v65 = sub_23823887C();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_2381C6000, v64, v65, "failed to parse configuration", v66, 2u);
      MEMORY[0x23B82FE28](v66, -1, -1);
    }
    sub_2381D2640(v36, v50);

    sub_2381D2640(v36, v50);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v100, v39);
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_2381FC6AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[16] = v0;
  v2 = sub_238237FE8();
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7840);
  v1[20] = swift_task_alloc();
  v3 = sub_238238210();
  v1[21] = v3;
  v1[22] = *(_QWORD *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2381FC7A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  unint64_t v10;

  v1 = sub_2381FB908();
  if (v2 >> 60 == 15)
  {
    v3 = *(_QWORD *)(v0 + 200);
    type metadata accessor for Throttle();
    sub_2382381B0();
    v4 = sub_2381F4B18(v3);
    *(_QWORD *)(v0 + 208) = v4;
    v5 = *(int **)(*(_QWORD *)v4 + 160);
    v6 = *v5;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v7;
    *v7 = v0;
    v7[1] = sub_2381FC90C;
    return ((uint64_t (*)(void))((char *)v5 + v6))();
  }
  else
  {
    v9 = v1;
    v10 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v9, v10);
  }
}

uint64_t sub_2381FC90C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 320) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2381FC994()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  if ((*(_BYTE *)(v0 + 320) & 1) != 0)
  {
    if (qword_2568EDE40 != -1)
      swift_once();
    v1 = sub_238238444();
    *(_QWORD *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_2568F00D0);
    v2 = sub_23823842C();
    v3 = sub_238238894();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_2381C6000, v2, v3, "fetching configuration from server", v4, 2u);
      MEMORY[0x23B82FE28](v4, -1, -1);
    }
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 160);

    sub_2382381F8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 32))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
      RequestOptions.globalRequestOptions.unsafeMutableAddressor();
      swift_beginAccess();
      v8 = (void *)objc_opt_self();
      swift_retain();
      v9 = objc_msgSend(v8, sel_mainBundle);
      v10 = objc_msgSend(v9, sel_bundleIdentifier);

      if (v10)
      {
        v12 = *(_QWORD *)(v0 + 192);
        v11 = *(_QWORD *)(v0 + 200);
        v13 = *(_QWORD *)(v0 + 168);
        v14 = *(_QWORD *)(v0 + 176);
        sub_23823860C();

        v15 = sub_238215E28(1, 1);
        v16 = sub_23822F864(v15 & 0x101);
        *(_QWORD *)(v0 + 232) = v16;
        swift_bridgeObjectRelease();
        swift_release();
        objc_msgSend(v16, sel_setTlsPinning_, 1);
        *(_QWORD *)(v0 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0FFD8]), sel_init);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
        sub_238237FB8();
        v17 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 248) = v17;
        *v17 = v0;
        v17[1] = sub_2381FCDC8;
        sub_2382388A0();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    if (qword_2568EDE40 != -1)
      swift_once();
    v18 = sub_238238444();
    __swift_project_value_buffer(v18, (uint64_t)qword_2568F00D0);
    v19 = sub_23823842C();
    v20 = sub_238238894();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_2381C6000, v19, v20, "configuration fetch throttled", v21, 2u);
      MEMORY[0x23B82FE28](v21, -1, -1);
    }

    sub_2381FE538();
    swift_allocError();
    *(_QWORD *)v22 = 0;
    *(_QWORD *)(v22 + 8) = 0;
    *(_BYTE *)(v22 + 16) = 3;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2381FCDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v5 = (_QWORD *)*v4;
  v5[32] = a1;
  v5[33] = a2;
  v5[34] = a3;
  v5[35] = v3;
  swift_task_dealloc();
  v6 = (void *)v5[30];
  (*(void (**)(_QWORD, _QWORD))(v5[18] + 8))(v5[19], v5[17]);

  return swift_task_switch();
}

uint64_t sub_2381FCE9C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  unint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t (*v44)();
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50[2];

  v50[1] = *MEMORY[0x24BDAC8D0];
  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(id *)(v0 + 272);
    if ((uint64_t)objc_msgSend(v2, sel_statusCode) < 200 || (uint64_t)objc_msgSend(v2, sel_statusCode) >= 300)
    {
      v17 = *(_QWORD *)(v0 + 264);
      v18 = *(void **)(v0 + 272);
      v19 = *(_QWORD *)(v0 + 256);
      v20 = *(void **)(v0 + 232);
      v21 = *(_QWORD *)(v0 + 176);
      v22 = objc_msgSend(v2, sel_statusCode);
      sub_2381FE538();
      v10 = (void *)swift_allocError();
      *(_QWORD *)v23 = v22;
      *(_QWORD *)(v23 + 8) = 0;
      *(_BYTE *)(v23 + 16) = 2;
      swift_willThrow();

      sub_2381D2640(v19, v17);
      v16 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      goto LABEL_13;
    }

  }
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_238238258();
  *(_QWORD *)(v0 + 104) = 0;
  v6 = objc_msgSend(v4, sel_propertyListWithData_options_format_error_, v5, 0, 0, v0 + 104);

  v7 = *(void **)(v0 + 104);
  if (!v6)
  {
    v24 = *(_QWORD *)(v0 + 264);
    v25 = *(void **)(v0 + 272);
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(void **)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 176);
    v29 = v7;
    v10 = (void *)sub_238238150();

    swift_willThrow();
    v30 = v26;
LABEL_12:
    sub_2381D2640(v30, v24);

    v16 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    goto LABEL_13;
  }
  v8 = v7;
  sub_238238984();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AF8);
  if (!swift_dynamicCast())
  {
    v24 = *(_QWORD *)(v0 + 264);
    v25 = *(void **)(v0 + 272);
    v31 = *(_QWORD *)(v0 + 256);
    v27 = *(void **)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 176);
    sub_2381FE538();
    v10 = (void *)swift_allocError();
    *(_QWORD *)v32 = 0xD000000000000028;
    *(_QWORD *)(v32 + 8) = 0x800000023823F620;
    *(_BYTE *)(v32 + 16) = 0;
    swift_willThrow();
    v30 = v31;
    goto LABEL_12;
  }
  v9 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_2382381A4();
  sub_23823827C();
  if (!v9)
  {
    v46 = *(_QWORD *)(v0 + 208);
    v47 = *(_QWORD *)(v0 + 184);
    v48 = *(_QWORD *)(v0 + 168);
    v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8);
    *(_QWORD *)(v0 + 288) = v49;
    v49(v47, v48);
    v41 = *(int **)(*(_QWORD *)v46 + 152);
    v42 = *v41;
    v43 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v43;
    v44 = sub_2381FD3A4;
    goto LABEL_17;
  }
  v10 = v9;
  v11 = *(void **)(v0 + 272);
  v12 = *(void **)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  sub_2381D2640(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));

  v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v16(v13, v15);
LABEL_13:
  *(_QWORD *)(v0 + 304) = v10;
  v16(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));
  v33 = v10;
  v34 = v10;
  v35 = sub_23823842C();
  v36 = sub_238238894();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v50[0] = v38;
    *(_DWORD *)v37 = 136315138;
    swift_getErrorValue();
    v39 = sub_238238C9C();
    *(_QWORD *)(v0 + 96) = sub_2381CBC6C(v39, v40, v50);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v35, v36, "failed to fetch configuration from server with error (%s)", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v38, -1, -1);
    MEMORY[0x23B82FE28](v37, -1, -1);
  }
  else
  {

  }
  v41 = *(int **)(**(_QWORD **)(v0 + 208) + 168);
  v42 = *v41;
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v43;
  v44 = sub_2381FD574;
LABEL_17:
  *v43 = v0;
  v43[1] = v44;
  return ((uint64_t (*)(void))((char *)v41 + v42))();
}

uint64_t sub_2381FD3A4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381FD424()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void (*v4)(uint64_t, uint64_t);
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_23823842C();
  v2 = sub_238238894();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2381C6000, v1, v2, "successfully fetched configuration from server", v3, 2u);
    MEMORY[0x23B82FE28](v3, -1, -1);
  }
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
  v5 = *(void **)(v0 + 272);
  v6 = *(void **)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 168);

  swift_release();
  v4(v7, v8);
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v9, v10);
}

uint64_t sub_2381FD574()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2381FD5F4()
{
  uint64_t v0;

  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2381FD6B0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, _QWORD);
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 176);

  v2 = *(void (**)(_QWORD, _QWORD))(v1 + 8);
  v3 = *(void **)(v0 + 280);
  *(_QWORD *)(v0 + 304) = v3;
  v2(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));
  v4 = v3;
  v5 = v3;
  v6 = sub_23823842C();
  v7 = sub_238238894();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16[0] = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v10 = sub_238238C9C();
    *(_QWORD *)(v0 + 96) = sub_2381CBC6C(v10, v11, v16);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v6, v7, "failed to fetch configuration from server with error (%s)", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v9, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);
  }
  else
  {

  }
  v12 = *(int **)(**(_QWORD **)(v0 + 208) + 168);
  v13 = *v12;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v14;
  *v14 = v0;
  v14[1] = sub_2381FD574;
  return ((uint64_t (*)(void))((char *)v12 + v13))();
}

unint64_t sub_2381FD8C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8AD0);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_2381FE57C((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2381FD9C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v1;
  *v1 = v0;
  v1[1] = sub_2381FDA38;
  return sub_2381FC6AC();
}

uint64_t sub_2381FDA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 296) = a1;
  *(_QWORD *)(v4 + 304) = a2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_2381FDAF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  const char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_238238258();
  *(_QWORD *)(v0 + 232) = 0;
  v3 = objc_msgSend(v1, sel_propertyListWithData_options_format_error_, v2, 0, 0, v0 + 232);

  v4 = *(void **)(v0 + 232);
  if (!v3)
  {
    v9 = v4;
    v10 = (void *)sub_238238150();

    swift_willThrow();
    goto LABEL_7;
  }
  v5 = v4;
  sub_238238984();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v12 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    sub_2381FE538();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000028;
    *(_QWORD *)(v13 + 8) = 0x800000023823F620;
LABEL_72:
    *(_BYTE *)(v13 + 16) = 0;
    swift_willThrow();
    sub_2381D2640(v12, v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 264);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2381CC2AC(0x67616265726F7453, 0xE800000000000000), (v8 & 1) != 0))
  {
    sub_2381CCC94(*(_QWORD *)(v6 + 56) + 32 * v7, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 136))
  {
    sub_2381CCCD0(v0 + 112, &qword_2568E8840);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    v12 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    sub_2381FE538();
    swift_allocError();
    v17 = "failed to parse configuration, missing or unexpected type for Storebag key";
    v18 = 0xD00000000000004ALL;
LABEL_71:
    *(_QWORD *)v13 = v18;
    *(_QWORD *)(v13 + 8) = (unint64_t)(v17 - 32) | 0x8000000000000000;
    goto LABEL_72;
  }
  v14 = *(_QWORD *)(v0 + 256);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_2381CC2AC(0x676E696E676953, 0xE700000000000000), (v16 & 1) != 0))
  {
    sub_2381CCC94(*(_QWORD *)(v14 + 56) + 32 * v15, v0 + 176);
  }
  else
  {
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 200))
  {
    sub_2381CCCD0(v0 + 176, &qword_2568E8840);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    v12 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    sub_2381FE538();
    swift_allocError();
    v17 = "failed to parse configuration, missing or unexpected type for Signing key";
    v18 = 0xD000000000000049;
    goto LABEL_71;
  }
  v19 = *(_QWORD *)(v0 + 248);
  if (*(_QWORD *)(v19 + 16) && (v20 = sub_2381CC2AC(0x6D6E6F7269766E45, 0xEB00000000746E65), (v21 & 1) != 0))
  {
    sub_2381CCC94(*(_QWORD *)(v19 + 56) + 32 * v20, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_2381CCCD0(v0 + 16, &qword_2568E8840);
    goto LABEL_70;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_70:
    v12 = *(_QWORD *)(v0 + 296);
    v11 = *(_QWORD *)(v0 + 304);
    sub_2381FE538();
    swift_allocError();
    v17 = "failed to parse configuration, missing or unexpected type for Environment key";
    v18 = 0xD00000000000004DLL;
    goto LABEL_71;
  }
  v22 = *(_QWORD *)(v0 + 240);
  v47 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = sub_2381CC2AC(0x64756F6C4369, 0xE600000000000000);
    if ((v24 & 1) != 0)
    {
      sub_2381CCC94(*(_QWORD *)(v22 + 56) + 32 * v23, v0 + 144);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v25 = sub_2381FEA30(*(_QWORD *)(v0 + 280));
        swift_bridgeObjectRelease();
        sub_2381FE258(v25);
      }
    }
  }
  v26 = sub_238204BB4();
  swift_beginAccess();
  if (*v26 == 1)
  {
    v27 = (_OWORD *)(v0 + 80);
    v46 = v22 + 64;
    v28 = -1;
    v29 = -1 << *(_BYTE *)(v22 + 32);
    if (-v29 < 64)
      v28 = ~(-1 << -(char)v29);
    v30 = v28 & *(_QWORD *)(v22 + 64);
    v31 = (unint64_t)(63 - v29) >> 6;
    swift_bridgeObjectRetain();
    v32 = 0;
    while (1)
    {
      do
      {
        if (v30)
        {
          v33 = __clz(__rbit64(v30));
          v30 &= v30 - 1;
          v34 = v33 | (v32 << 6);
        }
        else
        {
          v35 = v32 + 1;
          if (__OFADD__(v32, 1))
          {
            __break(1u);
            goto LABEL_76;
          }
          if (v35 >= v31)
            goto LABEL_73;
          v36 = *(_QWORD *)(v46 + 8 * v35);
          ++v32;
          if (!v36)
          {
            v32 = v35 + 1;
            if (v35 + 1 >= v31)
              goto LABEL_73;
            v36 = *(_QWORD *)(v46 + 8 * v32);
            if (!v36)
            {
              v32 = v35 + 2;
              if (v35 + 2 >= v31)
                goto LABEL_73;
              v36 = *(_QWORD *)(v46 + 8 * v32);
              if (!v36)
              {
                v32 = v35 + 3;
                if (v35 + 3 >= v31)
                  goto LABEL_73;
                v36 = *(_QWORD *)(v46 + 8 * v32);
                if (!v36)
                {
                  v32 = v35 + 4;
                  if (v35 + 4 >= v31)
                    goto LABEL_73;
                  v36 = *(_QWORD *)(v46 + 8 * v32);
                  if (!v36)
                  {
                    v37 = v35 + 5;
                    if (v37 >= v31)
                    {
LABEL_73:
                      swift_release();
                      goto LABEL_74;
                    }
                    v36 = *(_QWORD *)(v46 + 8 * v37);
                    if (!v36)
                    {
                      while (1)
                      {
                        v32 = v37 + 1;
                        if (__OFADD__(v37, 1))
                          break;
                        if (v32 >= v31)
                          goto LABEL_73;
                        v36 = *(_QWORD *)(v46 + 8 * v32);
                        ++v37;
                        if (v36)
                          goto LABEL_56;
                      }
LABEL_76:
                      __break(1u);
                    }
                    v32 = v37;
                  }
                }
              }
            }
          }
LABEL_56:
          v30 = (v36 - 1) & v36;
          v34 = __clz(__rbit64(v36)) + (v32 << 6);
        }
        v38 = (uint64_t *)(*(_QWORD *)(v22 + 48) + 16 * v34);
        v39 = *v38;
        v40 = v38[1];
        v41 = *v38 == 0x64756F6C4369 && v40 == 0xE600000000000000;
      }
      while (v41 || (sub_238238C0C() & 1) != 0);
      if (!*(_QWORD *)(v22 + 16))
        break;
      swift_bridgeObjectRetain();
      v42 = sub_2381CC2AC(v39, v40);
      if ((v43 & 1) != 0)
      {
        sub_2381CCC94(*(_QWORD *)(v22 + 56) + 32 * v42, v0 + 80);
      }
      else
      {
        *v27 = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 104))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v44 = sub_2381FEA30(*(_QWORD *)(v0 + 272));
          swift_bridgeObjectRelease();
          sub_2381FE258(v44);
        }
      }
      else
      {
LABEL_36:
        sub_2381CCCD0(v0 + 80, &qword_2568E8840);
      }
    }
    *v27 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    goto LABEL_36;
  }
LABEL_74:
  sub_2381D2640(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 304));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
}

uint64_t sub_2381FE258(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_238238AEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238238AEC();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x23B82F378](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_2381FE744(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_238238AEC();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_238238768();
  }
  __break(1u);
  return result;
}

uint64_t sub_2381FE410(uint64_t a1)
{
  MEMORY[0x23B82FD68](&unk_23823BF88, a1);
  return sub_238238420();
}

uint64_t sub_2381FE44C()
{
  MEMORY[0x23B82FD68](&unk_23823BF88);
  return sub_238238414();
}

uint64_t sub_2381FE494(uint64_t a1, uint64_t a2)
{
  sub_238238CE4();
  MEMORY[0x23B82FD68](&unk_23823BF88, a2);
  sub_238238414();
  return sub_238238D08();
}

uint64_t sub_2381FE4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B82FD68](&unk_23823BF88, a3);
  return sub_238238408();
}

unint64_t sub_2381FE538()
{
  unint64_t result;

  result = qword_2568E8A28;
  if (!qword_2568E8A28)
  {
    result = MEMORY[0x23B82FD68](&unk_23823BEBC, &type metadata for StorebagCloudKitSigningConfiguration.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8A28);
  }
  return result;
}

unint64_t sub_2381FE57C(uint64_t a1)
{
  uint64_t v2;

  sub_238238CE4();
  type metadata accessor for CFString();
  sub_2381D49C0(&qword_2568E8AD8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23823BF88);
  sub_238238414();
  v2 = sub_238238D08();
  return sub_2381FE604(a1, v2);
}

unint64_t sub_2381FE604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString();
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_2381D49C0(&qword_2568E8AD8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23823BF88);
    v7 = v6;
    v8 = sub_238238408();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_238238408();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_2381FE744(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_238238AEC();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_238238AEC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2381FF50C();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8AB0);
          v12 = sub_2381FE93C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SecKey(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

void (*sub_2381FE93C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2381FE9BC(v6, a2, a3);
  return sub_2381FE990;
}

void sub_2381FE990(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_2381FE9BC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B82F36C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2381FEA28;
  }
  __break(1u);
  return result;
}

void sub_2381FEA28(id *a1)
{

}

uint64_t sub_2381FEA30(uint64_t a1)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t inited;
  id v19;
  id v20;
  id v21;
  id v22;
  const __CFData *v23;
  const __CFDictionary *v24;
  SecKeyRef v25;
  __SecKey *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD v39[4];
  uint64_t v40;

  v2 = 0;
  v3 = 0;
  v40 = MEMORY[0x24BEE4AF8];
  v38 = xmmword_238239E50;
  v39[0] = 0x654B63696C627550;
  v39[1] = 0xEF34366573614279;
  v39[2] = 0xD000000000000012;
  v39[3] = 0x800000023823F740;
  v35 = (void *)*MEMORY[0x24BDE9050];
  v34 = (void *)*MEMORY[0x24BDE9080];
  v33 = (void *)*MEMORY[0x24BDE9028];
  v32 = (void *)*MEMORY[0x24BDE9038];
  do
  {
    v4 = v2;
    if (!*(_QWORD *)(a1 + 16))
    {
      v36 = 0u;
      v37 = 0u;
LABEL_3:
      sub_2381CCCD0((uint64_t)&v36, &qword_2568E8840);
      goto LABEL_4;
    }
    v5 = &v39[2 * v3];
    v6 = *v5;
    v7 = v5[1];
    swift_bridgeObjectRetain();
    v8 = sub_2381CC2AC(v6, v7);
    if ((v9 & 1) != 0)
    {
      sub_2381CCC94(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v36);
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v37 + 1))
      goto LABEL_3;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = sub_238238234();
      if (v11 >> 60 == 15)
      {
        if (qword_2568EDE40 != -1)
          swift_once();
        v12 = sub_238238444();
        __swift_project_value_buffer(v12, (uint64_t)qword_2568F00D0);
        v13 = sub_23823842C();
        v14 = sub_23823887C();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_2381C6000, v13, v14, "failed to parse configuration, failed to read public key data", v15, 2u);
          MEMORY[0x23B82FE28](v15, -1, -1);
        }
        swift_bridgeObjectRelease();

      }
      else
      {
        v16 = v10;
        v17 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8AC0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_238239E50;
        *(_QWORD *)(inited + 32) = v35;
        *(_QWORD *)(inited + 40) = v34;
        *(_QWORD *)(inited + 48) = v33;
        *(_QWORD *)(inited + 56) = v32;
        v19 = v35;
        v20 = v34;
        v21 = v33;
        v22 = v32;
        sub_2381EB0B4(v16, v17);
        sub_2381FD8C0(inited);
        v23 = (const __CFData *)sub_238238258();
        type metadata accessor for CFString();
        sub_2381D49C0(&qword_2568E8AC8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23823BFB4);
        v24 = (const __CFDictionary *)sub_238238570();
        swift_bridgeObjectRelease();
        v25 = SecKeyCreateWithData(v23, v24, 0);

        if (v25)
        {
          sub_2381D262C(v16, v17);
          sub_2381D262C(v16, v17);
          swift_bridgeObjectRelease();
          v26 = v25;
          MEMORY[0x23B82F06C]();
          if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_238238774();
          sub_23823878C();
          sub_238238768();

        }
        else
        {
          if (qword_2568EDE40 != -1)
            swift_once();
          v27 = sub_238238444();
          __swift_project_value_buffer(v27, (uint64_t)qword_2568F00D0);
          v28 = sub_23823842C();
          v29 = sub_23823887C();
          if (os_log_type_enabled(v28, v29))
          {
            v30 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v30 = 0;
            _os_log_impl(&dword_2381C6000, v28, v29, "failed to parse configuration, failed to decode public key", v30, 2u);
            MEMORY[0x23B82FE28](v30, -1, -1);
            sub_2381D262C(v16, v17);

            sub_2381D262C(v16, v17);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_2381D262C(v16, v17);
            sub_2381D262C(v16, v17);
            swift_bridgeObjectRelease();

          }
        }
      }
    }
LABEL_4:
    v2 = 1;
    v3 = 1;
  }
  while ((v4 & 1) == 0);
  swift_arrayDestroy();
  return v40;
}

uint64_t *sub_2381FEF34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_238238210();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_2381FEFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_238238210();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_2381FF038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_238238210();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_2381FF0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_238238210();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_2381FF118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_238238210();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_2381FF188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_238238210();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_2381FF1F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381FF204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238238210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2381FF240()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2381FF24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238238210();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2381FF28C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2381FF2F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1)
{
  return sub_2381FF320(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2381FF320(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19CloudTelemetryTools36StorebagCloudKitSigningConfigurationV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2381FF2F8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2381FF2F8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2381FF320(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2381FF320(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2381FF4B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_2381FF4D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSigningConfiguration.Error()
{
  return &type metadata for StorebagCloudKitSigningConfiguration.Error;
}

void type metadata accessor for SecKey(uint64_t a1)
{
  sub_2381FF558(a1, &qword_2568E8AE0);
}

unint64_t sub_2381FF50C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E8AB8;
  if (!qword_2568E8AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E8AB0);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2568E8AB8);
  }
  return result;
}

void sub_2381FF558(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_2381FF59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2381FF5E4()
{
  return sub_2381D49C0(&qword_2568E8AC8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23823BFB4);
}

uint64_t sub_2381FF610()
{
  return sub_2381D49C0((unint64_t *)&unk_2568E8AE8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_23823BF58);
}

uint64_t sub_2381FF63C()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EE0E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EE0E8);
  return sub_238238438();
}

uint64_t sub_2381FF6BC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = a1;
  return v2;
}

uint64_t sub_2381FF6F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return swift_task_switch();
}

uint64_t sub_2381FF718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 112) + 16))
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    sub_238200C64(&qword_2568E8AF8, v2, (uint64_t (*)(uint64_t))type metadata accessor for BackendGroup, (uint64_t)&unk_23823C0B4);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v6[2] = v3;
    v6[3] = v5;
    v6[4] = v4;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v7;
    *v7 = v0;
    v7[1] = sub_2381FF844;
    return sub_238238A80();
  }
  else
  {
    sub_2381FFE40();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2381FF844()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t type metadata accessor for BackendGroup()
{
  return objc_opt_self();
}

uint64_t sub_2381FF8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  return swift_task_switch();
}

uint64_t sub_2381FF8E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v1 = v0[18];
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  v26 = *(_QWORD *)(v3 + 16);
  if (v26)
  {
    v23 = v0 + 7;
    swift_bridgeObjectRetain();
    v4 = 0;
    v25 = v0;
    v24 = v3;
    do
    {
      v5 = v0[19];
      v27 = v0[20];
      v6 = v0[18];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
      v7 = swift_task_alloc();
      v8 = sub_2382387E0();
      v29 = *(_OWORD *)(v3 + 16 * v4 + 32);
      v9 = *(_QWORD *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = 0;
      *(_OWORD *)(v10 + 32) = v29;
      *(_QWORD *)(v10 + 48) = v5;
      *(_QWORD *)(v10 + 56) = v6;
      *(_QWORD *)(v10 + 64) = v27;
      v11 = swift_task_alloc();
      v28 = v7;
      sub_23820089C(v7, v11);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8);
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((_DWORD)v7 == 1)
      {
        sub_2381CCCD0(v11, &qword_2568E7890);
      }
      else
      {
        sub_2382387D4();
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
      }
      v3 = v24;
      swift_task_dealloc();
      if (*(_QWORD *)(v10 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v12 = sub_2382387A4();
        v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        v12 = 0;
        v14 = 0;
      }
      v0 = v25;
      v15 = *(_QWORD *)v25[17];
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = &unk_2568E8C08;
      *(_QWORD *)(v16 + 24) = v10;
      v17 = (_QWORD *)(v14 | v12);
      if (v14 | v12)
      {
        v17 = v23;
        *v23 = 0;
        v23[1] = 0;
        v25[9] = v12;
        v25[10] = v14;
      }
      ++v4;
      v25[14] = 1;
      v25[15] = v17;
      v25[16] = v15;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      sub_2381CCCD0(v28, &qword_2568E7890);
      swift_task_dealloc();
    }
    while (v26 != v4);
    swift_bridgeObjectRelease();
  }
  v0[21] = sub_238200C64(&qword_2568E8AF8, v2, (uint64_t (*)(uint64_t))type metadata accessor for BackendGroup, (uint64_t)&unk_23823C0B4);
  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v18 = (_QWORD *)swift_task_alloc();
    v0[22] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8C18);
    *v18 = v0;
    v18[1] = sub_2381FFCAC;
    return sub_2382387C8();
  }
  else
  {
    if (v0[18])
    {
      swift_getObjectType();
      v20 = sub_2382387A4();
      v22 = v21;
    }
    else
    {
      v20 = 0;
      v22 = 0;
    }
    v0[23] = v20;
    v0[24] = v22;
    return swift_task_switch();
  }
}

uint64_t sub_2381FFCAC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2381FFCF4()
{
  return swift_taskGroup_wait_next_throwing();
}

uint64_t sub_2381FFD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 200) = v0;
  if (!v0)
  {
    if ((*(_BYTE *)(v1 + 208) & 1) != 0)
      return (*(uint64_t (**)(void))(v1 + 8))();
    if (*(_QWORD *)(v1 + 144))
    {
      swift_getObjectType();
      v3 = sub_2382387A4();
      v5 = v4;
    }
    else
    {
      v3 = 0;
      v5 = 0;
    }
    *(_QWORD *)(v1 + 184) = v3;
    *(_QWORD *)(v1 + 192) = v5;
  }
  return swift_task_switch();
}

uint64_t sub_2381FFDAC()
{
  return swift_unexpectedError();
}

uint64_t sub_2381FFDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v5 = *(_QWORD *)(v2 + 32);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_2381CB914;
  *(_QWORD *)(v6 + 160) = v5;
  *(_OWORD *)(v6 + 144) = v7;
  *(_QWORD *)(v6 + 136) = a2;
  return swift_task_switch();
}

unint64_t sub_2381FFE40()
{
  unint64_t result;

  result = qword_2568E8B10;
  if (!qword_2568E8B10)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C074, &type metadata for BackendGroup.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8B10);
  }
  return result;
}

uint64_t sub_2381FFE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v7[18] = a5;
  v7[19] = a7;
  v7[17] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8C20);
  v7[20] = swift_task_alloc();
  v10 = sub_238237FA0();
  v7[21] = v10;
  v7[22] = *(_QWORD *)(v10 - 8);
  v7[23] = swift_task_alloc();
  v11 = sub_2382383F0();
  v7[24] = v11;
  v7[25] = *(_QWORD *)(v11 - 8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8C28);
  v7[28] = swift_task_alloc();
  v12 = sub_2382383FC();
  v7[29] = v12;
  v7[30] = *(_QWORD *)(v12 - 8);
  v7[31] = swift_task_alloc();
  ObjectType = swift_getObjectType();
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v14 = (_QWORD *)swift_task_alloc();
  v7[32] = v14;
  *v14 = v7;
  v14[1] = sub_2381FFFE4;
  return v16(a6, ObjectType, a5);
}

uint64_t sub_2381FFFE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2382000A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 152) + 112;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v3 = sub_23820098C(v2, v1);
  result = swift_unknownObjectRelease();
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_238200AF4(v3, v5);
    swift_endAccess();
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_23820015C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2382001DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  char v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  char v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 104) = v1;
  v2 = *(_QWORD *)(v0 + 176);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
  v4 = swift_dynamicCast();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 168);
    v5(v9, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v9, v8);
    LOBYTE(v9) = sub_238237F64();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if ((v9 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 160);
    v5(v10, 1, 1, *(_QWORD *)(v0 + 168));
    sub_2381CCCD0(v10, &qword_2568E8C20);
  }
  v11 = *(void **)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 80) = v11;
  v13 = v11;
  v14 = swift_dynamicCast();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v14 & 1) != 0)
  {
    v16 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 248);
    v43 = v16;
    v18 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 192);
    v44 = *(_QWORD *)(v0 + 200);
    v15(v18, 0, 1, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v17, v18, v19);
    sub_238200C64(&qword_2568E8C30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    sub_238238144();
    sub_2382383E4();
    sub_238200C64(&qword_2568E8C38, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5F0]);
    sub_238238738();
    sub_238238738();
    v24 = *(_QWORD *)(v0 + 120);
    v23 = *(_QWORD *)(v0 + 128);
    v25 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v25(v21, v22);
    v25(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v17, v19);
    if (v24 == v23)
    {
LABEL_7:

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 224);
    v15(v27, 1, 1, *(_QWORD *)(v0 + 232));
    sub_2381CCCD0(v27, &qword_2568E8C28);
  }
  if (qword_2568EE0E0 != -1)
    swift_once();
  v28 = *(void **)(v0 + 264);
  v29 = sub_238238444();
  __swift_project_value_buffer(v29, (uint64_t)qword_2568EE0E8);
  v30 = v28;
  swift_unknownObjectRetain();
  v31 = v28;
  swift_unknownObjectRetain();
  v32 = sub_23823842C();
  v33 = sub_23823887C();
  v34 = os_log_type_enabled(v32, v33);
  v35 = *(void **)(v0 + 264);
  if (v34)
  {
    v42 = *(_OWORD *)(v0 + 136);
    v36 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v45 = v37;
    *(_DWORD *)v36 = 136446466;
    *(_OWORD *)(v0 + 64) = v42;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8A10);
    v38 = sub_238238654();
    *(_QWORD *)(v0 + 88) = sub_2381CBC6C(v38, v39, &v45);
    sub_238238960();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    swift_getErrorValue();
    v40 = sub_238238C9C();
    *(_QWORD *)(v0 + 112) = sub_2381CBC6C(v40, v41, &v45);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v32, v33, "disabling backend '%{public}s' which returned error: %{public}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v37, -1, -1);
    MEMORY[0x23B82FE28](v36, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();

  }
  return swift_task_switch();
}

uint64_t sub_2382006F4()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

unint64_t sub_23820071C()
{
  unint64_t result;

  result = qword_2568E8B18;
  if (!qword_2568E8B18)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C00C, &type metadata for BackendGroup.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8B18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BackendGroup.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2382007A0 + 4 * byte_23823C000[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2382007C0 + 4 * byte_23823C005[v4]))();
}

_BYTE *sub_2382007A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2382007C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2382007C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2382007D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2382007D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2382007E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BackendGroup.Error()
{
  return &type metadata for BackendGroup.Error;
}

uint64_t sub_2382007FC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238200838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[4];
  v3 = v0[5];
  v5 = v0[6];
  v4 = v0[7];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_2381CCDE0;
  return sub_2381FFE84((uint64_t)v6, v7, v8, v2, v3, v5, v4);
}

uint64_t sub_23820089C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2382008E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238200908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2381CB914;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2568E8C00 + dword_2568E8C00))(a1, v4);
}

_QWORD *sub_238200978(_QWORD *a1)
{
  return sub_2381FB2C8(0, a1[2], 0, a1);
}

uint64_t sub_23820098C(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD **)result;
  v3 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (!v3)
    return 0;
  v5 = (_QWORD *)result;
  v6 = 0;
  v7 = 0;
  while (v2[v6 + 4] != a2)
  {
    ++v7;
    v6 += 2;
    if (v3 == v7)
      return *(_QWORD *)(*(_QWORD *)result + 16);
  }
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  while (v8 != v3)
  {
    if (v8 >= v3)
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    v9 = v2[v6 + 6];
    if (v9 != a2)
    {
      if (v8 != v7)
      {
        if (v7 >= v3)
          goto LABEL_25;
        v10 = v2[v6 + 7];
        v13 = *(_OWORD *)&v2[2 * v7 + 4];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v2 = sub_238200978(v2);
        v11 = &v2[2 * v7];
        v11[4] = v9;
        v11[5] = v10;
        result = swift_unknownObjectRelease();
        if (v8 >= v2[2])
          goto LABEL_26;
        *(_OWORD *)&v2[v6 + 6] = v13;
        result = swift_unknownObjectRelease();
        *v5 = v2;
      }
      if (__OFADD__(v7++, 1))
        goto LABEL_24;
      v3 = v2[2];
    }
LABEL_11:
    ++v8;
    v6 += 2;
  }
  return v7;
}

uint64_t sub_238200AF4(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_2381FB2C8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8A10);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_238238B1C();
  __break(1u);
  return result;
}

uint64_t sub_238200C64(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B82FD68](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_238200CA4()
{
  _BYTE *v0;

  if (*v0)
    return 0x727574616E676973;
  else
    return 6775138;
}

uint64_t sub_238200CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2382012E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_238200D00()
{
  sub_238201578();
  return sub_238238D68();
}

uint64_t sub_238200D28()
{
  sub_238201578();
  return sub_238238D74();
}

uint64_t sub_238200D50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2382013CC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_238200D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE *v9;

  sub_238238138();
  swift_allocObject();
  sub_23823812C();
  sub_238200EF0();
  sub_238238120();
  if (!v2
    && ((a2 = sub_238238234(),
         v5 = v4,
         v6 = sub_238238234(),
         v8 = v7,
         swift_bridgeObjectRelease(),
         swift_bridgeObjectRelease(),
         v5 >> 60 == 15)
     || v8 >> 60 == 15))
  {
    sub_2381ECA4C();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    swift_release();
    sub_2381D262C(v6, v8);
    sub_2381D262C(a2, v5);
  }
  else
  {
    swift_release();
  }
  return a2;
}

unint64_t sub_238200EF0()
{
  unint64_t result;

  result = qword_2568EE300[0];
  if (!qword_2568EE300[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823C154, &type metadata for RawStorebag._EncodedRawStorebag);
    atomic_store(result, qword_2568EE300);
  }
  return result;
}

uint64_t sub_238200F34()
{
  return sub_23823827C();
}

uint64_t destroy for RawStorebag(uint64_t a1)
{
  sub_2381D2640(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return sub_2381D2640(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t *initializeWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_2381D2684(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v7 = a2[2];
  v6 = a2[3];
  sub_2381D2684(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_2381D2684(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2381D2640(v6, v7);
  v9 = a2[2];
  v8 = a2[3];
  sub_2381D2684(v9, v8);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_2381D2640(v10, v11);
  return a1;
}

uint64_t *assignWithTake for RawStorebag(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2381D2640(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_2381D2640(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RawStorebag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag()
{
  return &type metadata for RawStorebag;
}

uint64_t destroy for RawStorebag._EncodedRawStorebag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RawStorebag._EncodedRawStorebag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RawStorebag._EncodedRawStorebag(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for RawStorebag._EncodedRawStorebag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag()
{
  return &type metadata for RawStorebag._EncodedRawStorebag;
}

uint64_t sub_2382012E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6775138 && a2 == 0xE300000000000000;
  if (v2 || (sub_238238C0C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_238238C0C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2382013CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8C40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_238201578();
  sub_238238D2C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_238238B7C();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_238238B7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_238201578()
{
  unint64_t result;

  result = qword_2568EE390[0];
  if (!qword_2568EE390[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823C240, &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys);
    atomic_store(result, qword_2568EE390);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_238201608 + 4 * byte_23823C125[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23820163C + 4 * asc_23823C120[v4]))();
}

uint64_t sub_23820163C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238201644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23820164CLL);
  return result;
}

uint64_t sub_238201658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238201660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_238201664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23820166C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag.CodingKeys()
{
  return &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys;
}

unint64_t sub_23820168C()
{
  unint64_t result;

  result = qword_2568EE4A0[0];
  if (!qword_2568EE4A0[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823C218, &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys);
    atomic_store(result, qword_2568EE4A0);
  }
  return result;
}

unint64_t sub_2382016D4()
{
  unint64_t result;

  result = qword_2568EE5B0;
  if (!qword_2568EE5B0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C188, &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568EE5B0);
  }
  return result;
}

unint64_t sub_23820171C()
{
  unint64_t result;

  result = qword_2568EE5B8[0];
  if (!qword_2568EE5B8[0])
  {
    result = MEMORY[0x23B82FD68](&unk_23823C1B0, &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys);
    atomic_store(result, qword_2568EE5B8);
  }
  return result;
}

id sub_238201760()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CKSoftLinkAssetFetch), sel_init);
  qword_2568F00E8 = (uint64_t)result;
  return result;
}

uint64_t sub_238201790()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F00F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F00F0);
  return sub_238238438();
}

uint64_t sub_238201808(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = 0xD000000000000010;
  if (a2)
  {
    if (a2 == 1)
    {
      return 0x64616F6C6E776F64;
    }
    else
    {
      sub_238238A20();
      swift_bridgeObjectRelease();
      sub_2382386B4();
      return 0xD00000000000001FLL;
    }
  }
  return v2;
}

uint64_t sub_2382018D0()
{
  uint64_t *v0;

  return sub_238201808(*v0, v0[1]);
}

uint64_t sub_2382018D8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_238201920(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttlesByName);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_238201970())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2382019B4(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_238201A00(a1);
  return v2;
}

uint64_t sub_238201A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v15;
  _QWORD v16[2];

  v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238238210();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v16 - v12;
  type metadata accessor for Throttle();
  sub_2381F4B90(a1, (uint64_t)v13);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    type metadata accessor for StorebagCloudKitSource();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL, v13, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    sub_2381FB7A0((uint64_t)v11, (uint64_t)v6);
    sub_238201C18((uint64_t)v6, v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
    v15 = sub_238201C5C(MEMORY[0x24BEE4AF8]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttlesByName) = v15;
  }
  return v1;
}

uint64_t type metadata accessor for StorebagCloudKitSource()
{
  uint64_t result;

  result = qword_2568EE750;
  if (!qword_2568EE750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_238201C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_238201C5C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D30);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_2381CC2AC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static StorebagCloudKitSource.setContainerPtr(object:)(uint64_t a1)
{
  if (qword_2568EE640 != -1)
    swift_once();
  return objc_msgSend((id)qword_2568F00E8, sel_setContainerPtr_, a1);
}

uint64_t sub_238201DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[57] = a3;
  v4[58] = v3;
  v4[55] = a1;
  v4[56] = a2;
  v5 = sub_238238648();
  v4[59] = v5;
  v4[60] = *(_QWORD *)(v5 - 8);
  v4[61] = swift_task_alloc();
  sub_238238210();
  v4[62] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[63] = v6;
  *v6 = v4;
  v6[1] = sub_238201EA4;
  return sub_2381FD9C8();
}

uint64_t sub_238201EA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 512) = a1;
  *(_QWORD *)(v3 + 520) = v1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_238201F7C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _QWORD);
  uint64_t *v13;
  uint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 512);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_238238AEC();
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    sub_2382044A0();
    swift_allocError();
    *v24 = 0xD000000000000043;
    v23 = 0x800000023823FA80;
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_3:
  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 464) + 104);
  v3 = swift_bridgeObjectRetain();
  v4 = v2(v3);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_2381CC2AC(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448));
    if ((v6 & 1) != 0)
      goto LABEL_7;
  }
  v7 = *(_QWORD *)(v0 + 496);
  v8 = *(_QWORD *)(v0 + 464);
  v10 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 448);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238238A20();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  type metadata accessor for Throttle();
  sub_2382386B4();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v11 = sub_2381F4B18(v7);
  v12 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 120))(v0 + 184);
  v14 = v13;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = *v14;
  *v14 = 0x8000000000000000;
  sub_238204344(v11, v10, v9, isUniquelyReferenced_nonNull_native);
  *v14 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12(v0 + 184, 0);
  v16 = swift_bridgeObjectRetain();
  v4 = v2(v16);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_2381CC2AC(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 448));
    if ((v17 & 1) != 0)
    {
LABEL_7:
      v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 528) = v18;
      v19 = *(int **)(*(_QWORD *)v18 + 160);
      v20 = *v19;
      swift_retain();
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 536) = v21;
      *v21 = v0;
      v21[1] = sub_23820236C;
      return ((uint64_t (*)(void))((char *)v19 + v20))();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_238238A20();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  v23 = 0x800000023823F8E0;
  sub_2382044A0();
  swift_allocError();
  *v24 = 0xD00000000000001ELL;
LABEL_11:
  v24[1] = v23;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23820236C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 712) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2382023F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  __int16 v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  if ((*(_BYTE *)(v0 + 712) & 1) != 0)
  {
    if (qword_2568EE640 != -1)
      swift_once();
    v1 = (void *)qword_2568F00E8;
    v2 = sub_2382385E8();
    *(_QWORD *)(v0 + 544) = v2;
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    v3 = (void *)objc_opt_self();
    swift_retain();
    v4 = objc_msgSend(v3, sel_mainBundle);
    v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      sub_23823860C();

      v6 = sub_238215E28(1, 1);
      v7 = sub_23822F864(v6 & 0x101);
      *(_QWORD *)(v0 + 552) = v7;
      swift_release();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 56) = v0 + 152;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_2382026C8;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_238203BA8;
      v9[3] = &block_descriptor_2;
      v9[4] = v8;
      objc_msgSend(v1, sel_fetchAssetWithTeamID_options_completionHandler_, v2, v7, v9);
      swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_238238A20();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    sub_2382044A0();
    swift_allocError();
    *v10 = 0xD00000000000001DLL;
    v10[1] = 0x800000023823F900;
    swift_willThrow();
    swift_release_n();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2382026C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 560) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_238202774()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  unint64_t v18;
  _QWORD *v19;
  __SecKey *v20;
  uint64_t v21;
  unint64_t v22;
  __SecKey *i;
  __SecKey *v24;
  const __CFString *v25;
  const __CFData *v26;
  int v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  __SecKey *v31;
  const __CFData *v32;
  const __CFData *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  id v64;
  void *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  _QWORD *v88;
  unint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v1 = *(void **)(v0 + 552);
  v2 = *(void **)(v0 + 544);
  v4 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 568) = v4;
  *(_QWORD *)(v0 + 576) = v3;
  v5 = *(_QWORD *)(v0 + 176);

  if (!v5
    || (v6 = sub_238238234(),
        v8 = v7,
        swift_bridgeObjectRelease(),
        *(_QWORD *)(v0 + 584) = v6,
        *(_QWORD *)(v0 + 592) = v8,
        v8 >> 60 == 15))
  {
    swift_bridgeObjectRelease();
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v10 = 0;
    v10[1] = 0xE000000000000000;
    swift_willThrow();
    v11 = v4;
    v12 = v3;
LABEL_4:
    sub_2381D262C(v11, v12);
    goto LABEL_5;
  }
  v18 = *(_QWORD *)(v0 + 512);
  if (v3 >> 60 == 15)
  {
    sub_2381D2684(v6, v8);
    swift_bridgeObjectRelease();
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v19 = 0;
    v19[1] = 0xE000000000000000;
    swift_willThrow();
    sub_2381D262C(v6, v8);
    v11 = v6;
    v12 = v8;
    goto LABEL_4;
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2381EB0B4(v6, v8);
    sub_2381EB0B4(v4, v3);
    v20 = (__SecKey *)sub_238238AEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(__SecKey **)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_2381EB0B4(v6, v8);
    sub_2381EB0B4(v4, v3);
  }
  v21 = *(_QWORD *)(v0 + 512);
  v99 = v6;
  if (!v20)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v67 = 0;
    v67[1] = 0xE000000000000000;
    swift_willThrow();
    sub_2381D262C(v99, v8);
    sub_2381D262C(v4, v3);
    sub_2381D262C(v4, v3);
    v11 = v99;
    v12 = v8;
    goto LABEL_4;
  }
  v22 = v21 & 0xC000000000000001;
  if ((v21 & 0xC000000000000001) != 0)
    goto LABEL_46;
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    __break(1u);
  for (i = (__SecKey *)*(id *)(v21 + 32); ; i = (__SecKey *)MEMORY[0x23B82F36C](0))
  {
    v24 = i;
    v25 = (const __CFString *)*MEMORY[0x24BDE9350];
    v98 = v4;
    v4 = sub_238238258();
    v97 = v8;
    v26 = (const __CFData *)sub_238238258();
    v27 = SecKeyVerifySignature(v24, v25, (CFDataRef)v4, v26, 0);

    if (v27)
      break;
    v8 = 0;
    v28 = *(_QWORD *)(v0 + 512);
    v93 = v28 + 40;
    v95 = v28 & 0xFFFFFFFFFFFFFF8;
    v29 = (char *)v20 - 1;
    while (1)
    {
      if (v29 == (char *)v8)
      {
        v8 = v97;
        v4 = v98;
        goto LABEL_36;
      }
      v30 = v8 + 1;
      if (v22)
      {
        v31 = (__SecKey *)MEMORY[0x23B82F36C](v8 + 1, *(_QWORD *)(v0 + 512));
      }
      else
      {
        if (v30 >= *(_QWORD *)(v95 + 16))
          goto LABEL_45;
        v31 = (__SecKey *)*(id *)(v93 + 8 * v8);
      }
      v20 = v31;
      if (__OFADD__(v30, 1))
        break;
      v32 = (const __CFData *)sub_238238258();
      v33 = (const __CFData *)sub_238238258();
      v4 = SecKeyVerifySignature(v20, v25, v32, v33, 0);

      ++v8;
      if ((_DWORD)v4)
        goto LABEL_25;
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    ;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  v34 = (void *)objc_opt_self();
  v35 = v98;
  v36 = (void *)sub_238238258();
  v37 = objc_msgSend(v34, sel_gzipDecode_, v36);

  if (!v37)
  {
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v63 = 0;
    v63[1] = 0xE000000000000000;
    swift_willThrow();
    sub_2381D262C(v99, v97);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v98, v3);
    v11 = v99;
    v12 = v97;
    goto LABEL_4;
  }
  v38 = sub_238238270();
  v40 = v39;

  *(_QWORD *)(v0 + 600) = v38;
  *(_QWORD *)(v0 + 608) = v40;
  v41 = (void *)objc_opt_self();
  sub_2381D2684(v38, v40);
  v42 = (void *)sub_238238258();
  *(_QWORD *)(v0 + 416) = 0;
  v43 = objc_msgSend(v41, sel_JSONObjectWithData_options_error_, v42, 0, v0 + 416);

  v44 = *(void **)(v0 + 416);
  if (!v43)
  {
    v64 = v44;
    v65 = (void *)sub_238238150();

    swift_willThrow();
    goto LABEL_33;
  }
  v45 = v44;
  sub_238238984();
  swift_unknownObjectRelease();
  sub_2382044E4();
  v35 = v98;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_33:
    sub_238238A20();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v66 = 0xD000000000000019;
    v66[1] = 0x800000023823F950;
    swift_willThrow();
    sub_2381D262C(v99, v97);
    sub_2381D262C(v35, v3);
    sub_2381D262C(v35, v3);
    sub_2381D262C(v99, v97);
LABEL_34:
    sub_2381D2640(v38, v40);
    sub_2381D2640(v38, v40);
    goto LABEL_5;
  }
  v46 = *(void **)(v0 + 408);
  *(_QWORD *)(v0 + 616) = v46;
  v47 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 432) = 0;
  v48 = v46;
  v49 = objc_msgSend(v47, sel_dataWithPropertyList_format_options_error_, v48, 100, 0, v0 + 432);
  v50 = *(id *)(v0 + 432);
  if (!v49)
  {
    v68 = v50;
    v69 = (void *)sub_238238150();

    swift_willThrow();
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v70 = 0;
    v70[1] = 0xE000000000000000;
    swift_willThrow();
    sub_2381D262C(v99, v97);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v99, v97);

    goto LABEL_34;
  }
  v90 = v47;
  v91 = v48;
  v51 = *(_QWORD *)(v0 + 488);
  v92 = *(_QWORD *)(v0 + 480);
  v94 = *(_QWORD *)(v0 + 472);
  v96 = (id *)(v0 + 424);
  v52 = sub_238238270();
  v54 = v53;

  *(_QWORD *)(v0 + 624) = v52;
  *(_QWORD *)(v0 + 632) = v54;
  sub_2381D2684(v52, v54);
  v89 = v54;
  v55 = sub_238238264();
  v56 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 336) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 312) = v55;
  *(_QWORD *)(v0 + 320) = v57;
  sub_2381DA230((_OWORD *)(v0 + 312), (_OWORD *)(v0 + 344));
  v58 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2381F5D58((_OWORD *)(v0 + 344), 6775138, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v0 + 400) = v58;
  swift_bridgeObjectRelease();
  sub_23823863C();
  v60 = sub_238238618();
  v62 = v61;
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v51, v94);
  if (v62 >> 60 == 15)
  {
    sub_238203D6C(0x727574616E676973, 0xE900000000000065, (_OWORD *)(v0 + 216));
    sub_2381F60D4(v0 + 216);
  }
  else
  {
    v71 = sub_238238264();
    v73 = v72;
    sub_2381D262C(v60, v62);
    *(_QWORD *)(v0 + 304) = v56;
    *(_QWORD *)(v0 + 280) = v71;
    *(_QWORD *)(v0 + 288) = v73;
    sub_2381DA230((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 120));
    v74 = *(_QWORD *)(v0 + 400);
    v75 = swift_isUniquelyReferenced_nonNull_native();
    sub_2381F5D58((_OWORD *)(v0 + 120), 0x727574616E676973, 0xE900000000000065, v75);
    *(_QWORD *)(v0 + 400) = v74;
    swift_bridgeObjectRelease();
  }
  v76 = (void *)sub_238238570();
  swift_bridgeObjectRelease();
  *v96 = 0;
  v77 = objc_msgSend(v90, sel_dataWithPropertyList_format_options_error_, v76, 100, 0, v96);

  v78 = *v96;
  if (v77)
  {
    v79 = *(_QWORD *)(v0 + 520);
    v80 = sub_238238270();
    v82 = v81;

    *(_QWORD *)(v0 + 640) = v80;
    *(_QWORD *)(v0 + 648) = v82;
    sub_2381D2684(v80, v82);
    v9 = v79;
    *(_QWORD *)(v0 + 656) = sub_238200D7C(v80, v82);
    *(_QWORD *)(v0 + 664) = v83;
    *(_QWORD *)(v0 + 672) = v84;
    *(_QWORD *)(v0 + 680) = v85;
    if (!v79)
    {
      sub_238200F34();
      v13 = *(int **)(**(_QWORD **)(v0 + 528) + 152);
      v14 = *v13;
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 688) = v15;
      v16 = sub_238203730;
      goto LABEL_6;
    }
    sub_2381D262C(v99, v97);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v99, v97);
    sub_2381D2640(v38, v40);
    sub_2381D2640(v38, v40);

    sub_2381D2640(v52, v89);
    sub_2381D2640(v52, v89);
    sub_2381D2640(v80, v82);
    sub_2381D2640(v80, v82);
  }
  else
  {
    v86 = v78;
    v87 = (void *)sub_238238150();

    swift_willThrow();
    sub_238238A20();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382386B4();
    sub_2382044A0();
    v9 = swift_allocError();
    *v88 = 0;
    v88[1] = 0xE000000000000000;
    swift_willThrow();
    sub_2381D262C(v99, v97);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v98, v3);
    sub_2381D262C(v99, v97);
    sub_2381D2640(v38, v40);
    sub_2381D2640(v38, v40);

    sub_2381D2640(v52, v89);
    sub_2381D2640(v52, v89);
  }
LABEL_5:
  *(_QWORD *)(v0 + 696) = v9;
  v13 = *(int **)(**(_QWORD **)(v0 + 528) + 168);
  v14 = *v13;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 704) = v15;
  v16 = sub_2382039F4;
LABEL_6:
  *v15 = v0;
  v15[1] = v16;
  return ((uint64_t (*)(void))((char *)v13 + v14))();
}

uint64_t sub_238203730()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2382037B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  NSObject *v20;
  void *v21;

  if (qword_2568EE648 != -1)
    swift_once();
  v1 = sub_238238444();
  __swift_project_value_buffer(v1, (uint64_t)qword_2568F00F0);
  v2 = sub_23823842C();
  v3 = sub_238238894();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2381C6000, v2, v3, "sucessfully fetched storebag from server", v4, 2u);
    MEMORY[0x23B82FE28](v4, -1, -1);
  }
  v17 = *(_QWORD *)(v0 + 672);
  v18 = *(_QWORD *)(v0 + 680);
  v15 = *(_QWORD *)(v0 + 656);
  v16 = *(_QWORD *)(v0 + 664);
  v5 = *(_QWORD *)(v0 + 648);
  v6 = *(_QWORD *)(v0 + 640);
  v19 = *(_QWORD *)(v0 + 632);
  v20 = v2;
  v7 = *(_QWORD *)(v0 + 624);
  v8 = *(_QWORD *)(v0 + 608);
  v9 = *(_QWORD *)(v0 + 600);
  v10 = *(_QWORD *)(v0 + 592);
  v11 = *(_QWORD *)(v0 + 584);
  v12 = *(_QWORD *)(v0 + 576);
  v21 = *(void **)(v0 + 616);
  v13 = *(_QWORD *)(v0 + 568);
  swift_release();
  sub_2381D262C(v13, v12);
  sub_2381D262C(v11, v10);
  sub_2381D2640(v9, v8);
  sub_2381D2640(v15, v16);
  sub_2381D2640(v17, v18);
  sub_2381D2640(v6, v5);
  sub_2381D2640(v7, v19);

  sub_2381D2640(v6, v5);
  sub_2381D2640(v7, v19);

  sub_2381D2640(v9, v8);
  sub_2381D262C(v13, v12);
  sub_2381D262C(v11, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2382039F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238203A74()
{
  uint64_t v0;

  swift_willThrow();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238203AFC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 552);
  v2 = *(void **)(v0 + 544);
  swift_willThrow();

  *(_QWORD *)(v0 + 696) = *(_QWORD *)(v0 + 560);
  v3 = *(int **)(**(_QWORD **)(v0 + 528) + 168);
  v4 = *v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 704) = v5;
  *v5 = v0;
  v5[1] = sub_2382039F4;
  return ((uint64_t (*)(void))((char *)v3 + v4))();
}

uint64_t sub_238203BA8(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t *v19;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    swift_allocError();
    *v6 = a4;
    v7 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  if (!a2)
  {
    v18 = a3;
    v12 = 0;
    v14 = 0xF000000000000000;
    if (a3)
      goto LABEL_5;
LABEL_7:
    v15 = 0;
    v17 = 0;
    goto LABEL_8;
  }
  v10 = a2;
  v11 = a3;
  v12 = sub_238238270();
  v14 = v13;

  if (!a3)
    goto LABEL_7;
LABEL_5:
  v15 = sub_23823860C();
  v17 = v16;

LABEL_8:
  v19 = *(uint64_t **)(*(_QWORD *)(v4 + 64) + 40);
  *v19 = v12;
  v19[1] = v14;
  v19[2] = v15;
  v19[3] = v17;
  return swift_continuation_throwingResume();
}

uint64_t StorebagCloudKitSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_238204520(v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StorebagCloudKitSource.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_238204520(v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_238203D6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2381CC2AC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2381F5EF0();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_2381DA230((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_238204170(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_238203E5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D30);
  v36 = a2;
  v6 = sub_238238B04();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_238238CE4();
    sub_238238684();
    result = sub_238238D08();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_238204170(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_238238CE4();
        swift_bridgeObjectRetain();
        sub_238238684();
        v10 = sub_238238D08();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_238204344(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_238204858();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_238203E5C(v15, a4 & 1);
  v21 = sub_2381CC2AC(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_238238C90();
  __break(1u);
  return result;
}

unint64_t sub_2382044A0()
{
  unint64_t result;

  result = qword_2568E8C50;
  if (!qword_2568E8C50)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C2E8, &type metadata for StorebagCloudKitSource.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8C50);
  }
  return result;
}

unint64_t sub_2382044E4()
{
  unint64_t result;

  result = qword_2568E8C58;
  if (!qword_2568E8C58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568E8C58);
  }
  return result;
}

uint64_t sub_238204520(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238204560()
{
  return type metadata accessor for StorebagCloudKitSource();
}

uint64_t sub_238204568()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StorebagCloudKitSigningConfiguration();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t destroy for StorebagCloudKitSource.Error(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19CloudTelemetryTools22StorebagCloudKitSourceC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for StorebagCloudKitSource.Error(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagCloudKitSource.Error(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_238204810(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_238204828(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSource.Error()
{
  return &type metadata for StorebagCloudKitSource.Error;
}

void *sub_238204858()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D30);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL static Mode.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Mode.hash(into:)()
{
  return sub_238238CF0();
}

uint64_t Mode.hashValue.getter()
{
  sub_238238CE4();
  sub_238238CF0();
  return sub_238238D08();
}

uint64_t variable initialization expression of Daemon.mode()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.clientBundleID()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.diskCache()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.sessionCoord()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.submissionCoord()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.transparencyLog()
{
  return 0;
}

uint64_t Daemon.disabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Daemon.disabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*Daemon.disabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_238204AD8()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0120);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0120);
  return sub_238238438();
}

uint64_t sub_238204B48()
{
  uint64_t v0;

  if (qword_2568EE760 != -1)
    swift_once();
  v0 = sub_238238444();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2568F0120);
}

uint64_t sub_238204B90()
{
  uint64_t result;

  result = os_variant_has_internal_diagnostics();
  byte_2568F0138 = result;
  return result;
}

char *sub_238204BB4()
{
  if (qword_2568EE768 != -1)
    swift_once();
  return &byte_2568F0138;
}

void sub_238204BF4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_2382385E8();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    qword_2568F0140 = (uint64_t)v2;
  else
    __break(1u);
}

uint64_t *sub_238204C68()
{
  if (qword_2568EE770 != -1)
    swift_once();
  return &qword_2568F0140;
}

void sub_238204CA8()
{
  id v0;
  void *v1;
  unsigned __int8 v2;

  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2568F0140;
  v1 = (void *)sub_2382385E8();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_2568F0148 = v2;
}

char *sub_238204D68()
{
  if (qword_2568EE778 != -1)
    swift_once();
  return &byte_2568F0148;
}

void sub_238204DA8()
{
  id v0;
  void *v1;
  unsigned __int8 v2;
  BOOL v3;
  id v4;
  void *v5;
  id v6;

  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_2568F0140;
  v1 = (void *)sub_2382385E8();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if ((v2 & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    v4 = (id)qword_2568F0140;
    v5 = (void *)sub_2382385E8();
    v6 = objc_msgSend(v4, sel_integerForKey_, v5);

    v3 = v6 == (id)5;
  }
  byte_2568F0149 = v3;
}

char *sub_238204ED4()
{
  if (qword_2568EE780 != -1)
    swift_once();
  return &byte_2568F0149;
}

void sub_238204F14()
{
  id v0;
  void *v1;
  unsigned __int8 v2;

  if (qword_2568EE768 != -1)
    swift_once();
  swift_beginAccess();
  if (byte_2568F0138 == 1)
  {
    if (qword_2568EE770 != -1)
      swift_once();
    swift_beginAccess();
    v0 = (id)qword_2568F0140;
    v1 = (void *)sub_2382385E8();
    v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  }
  else
  {
    v2 = 0;
  }
  byte_2568F014A = v2;
}

char *sub_23820502C()
{
  if (qword_2568EE788 != -1)
    swift_once();
  return &byte_2568F014A;
}

uint64_t sub_23820506C()
{
  return DiagnosticLogSubmissionEnabled();
}

void sub_238205080()
{
  uint64_t v0;
  id v1;
  id v2;

  if (!*(_BYTE *)v0)
  {
    sub_238238A20();
    swift_bridgeObjectRelease();
    v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v2 = objc_msgSend(v1, sel_bundleIdentifier);

    if (v2)
    {
      sub_23823860C();

      sub_2382386B4();
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(_BYTE *)v0 == 1)
  {
    sub_238238A20();
    sub_2382386B4();
    if (*(_QWORD *)(v0 + 16))
    {
      swift_bridgeObjectRetain();
      sub_2382386B4();
LABEL_7:
      swift_bridgeObjectRelease();
      sub_2382386B4();
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_2382051FC()
{
  uint64_t v0;
  id v1;
  id v2;

  if (!*(_BYTE *)v0)
  {
    sub_238238A20();
    swift_bridgeObjectRelease();
    v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v2 = objc_msgSend(v1, sel_bundleIdentifier);

    if (v2)
    {
      sub_23823860C();

      sub_2382386B4();
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(_BYTE *)v0 == 1)
  {
    sub_238238A20();
    sub_2382386B4();
    if (*(_QWORD *)(v0 + 16))
    {
      swift_bridgeObjectRetain();
      sub_2382386B4();
LABEL_7:
      swift_bridgeObjectRelease();
      sub_2382386B4();
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_238205378(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t inited;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  unsigned int v43;
  char *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(uint64_t, uint64_t);
  char v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89[8];

  v89[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_238237F94();
  v77 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v78 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v83 = (char *)&v71 - v6;
  v82 = sub_238237FA0();
  v84 = *(_QWORD *)(v82 - 8);
  v7 = MEMORY[0x24BDAC7A8](v82);
  v74 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v71 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v76 = (char *)&v71 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v80 = (char *)&v71 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B30);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_238238210();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v81 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v71 - v21;
  sub_2381DA29C();
  sub_2382051FC();
  sub_2382381A4();
  swift_bridgeObjectRelease();
  v85 = *(void (**)(char *, uint64_t))(v18 + 8);
  v85(v22, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v24 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC60];
  v25 = v24;
  sub_2381D450C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  v86 = a1;
  sub_238238168();
  if (v1)
  {

    swift_bridgeObjectRelease();
    v26 = sub_238238114();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v16, 1, 1, v26);
LABEL_5:
    sub_2381CCCD0((uint64_t)v16, &qword_2568E7B30);
    goto LABEL_6;
  }
  v27 = v17;
  swift_bridgeObjectRelease();
  v28 = sub_238238114();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v16, 0, 1, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28) == 1)
  {
    v17 = v27;
    goto LABEL_5;
  }
  v58 = sub_2382380CC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
  v17 = v27;
  if ((v58 & 1) == 0)
  {
LABEL_6:
    if (qword_2568EE760 != -1)
      swift_once();
    v79 = 0;
    v30 = sub_238238444();
    __swift_project_value_buffer(v30, (uint64_t)qword_2568F0120);
    v31 = v81;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v81, v86, v17);
    v32 = sub_23823842C();
    v33 = sub_238238864();
    v34 = os_log_type_enabled(v32, v33);
    v75 = v3;
    if (v34)
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v89[0] = v36;
      *(_DWORD *)v35 = 136446210;
      v37 = sub_2382381EC();
      v88 = sub_2381CBC6C(v37, v38, (uint64_t *)v89);
      sub_238238960();
      swift_bridgeObjectRelease();
      v85(v31, v17);
      _os_log_impl(&dword_2381C6000, v32, v33, "creating log directory at %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v36, -1, -1);
      MEMORY[0x23B82FE28](v35, -1, -1);
    }
    else
    {
      v85(v31, v17);
    }

    v39 = v82;
    v40 = v84;
    v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v42 = (void *)sub_238238198();
    v89[0] = 0;
    v43 = objc_msgSend(v41, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v42, 1, 0, v89);

    v44 = v83;
    if (v43)
    {
      v45 = v89[0];
      return;
    }
    v46 = v89[0];
    v47 = (void *)sub_238238150();

    swift_willThrow();
    v89[0] = v47;
    v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    v49 = v80;
    if (swift_dynamicCast())
    {
      v82 = v17;
      v50 = (uint64_t)v76;
      v72 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      v72(v76, v49, v39);
      v81 = (char *)sub_2381D49C0(&qword_2568E76B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
      sub_238238144();
      v51 = v78;
      sub_238237F88();
      v52 = sub_2381D49C0(&qword_2568E76C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAED0]);
      v53 = v75;
      sub_238238738();
      v79 = v52;
      sub_238238738();
      v55 = v87;
      v54 = v88;
      v56 = *(void (**)(char *, uint64_t))(v77 + 8);
      v56(v51, v53);
      v56(v44, v53);
      if (v54 == v55)
      {

        sub_238223E78(v50);
        v57 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
        v57(v50, v39);
LABEL_20:
        v85(v86, v82);
        v57((uint64_t)v80, v39);
LABEL_21:
        v64 = v89[0];
LABEL_26:

        return;
      }
      v77 = *(_QWORD *)(v84 + 8);
      ((void (*)(uint64_t, uint64_t))v77)(v50, v39);
      v59 = v73;
      v72(v73, v80, v39);
      v60 = v83;
      v61 = (uint64_t)v59;
      sub_238238144();
      sub_238237F7C();
      sub_238238738();
      sub_238238738();
      v62 = v87;
      v63 = v88;
      v56(v51, v53);
      v56(v60, v53);
      if (v63 == v62)
      {

        sub_238223E58(v61);
        v57 = (void (*)(uint64_t, uint64_t))v77;
        ((void (*)(uint64_t, uint64_t))v77)(v61, v39);
        goto LABEL_20;
      }
      v65 = v61;
      v66 = (void (*)(uint64_t, uint64_t))v77;
      ((void (*)(uint64_t, uint64_t))v77)(v65, v39);
      v67 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v74, v80, v39);
      sub_238238144();
      sub_238237F70();
      sub_238238738();
      sub_238238738();
      v69 = v87;
      v68 = v88;
      v56(v67, v53);
      v56(v60, v53);
      if (v68 == v69)
      {

        v70 = v74;
        sub_238223E98(v74);
        v66(v70, v39);
        v85(v86, v82);
        goto LABEL_21;
      }
      v66(v74, v39);
      v17 = v82;
    }

    sub_238224174(v47);
    v85(v86, v17);
    v64 = v47;
    goto LABEL_26;
  }
}

uint64_t sub_238205C80()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D88);
  result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(_BYTE *)(result + 16) = 0;
  qword_2568F0150 = result;
  return result;
}

void sub_238205CB8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  char v27;
  uint64_t v28;
  uint64_t inited;
  void *v30;
  id v31;
  id v32;
  void *v33;
  unsigned int v34;
  id v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void (*v66)(uint64_t, char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82[12];

  v76 = a1;
  v79 = a4;
  v82[10] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_238237F94();
  v69 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v66 - v10;
  v74 = sub_238237FA0();
  v77 = *(_QWORD *)(v74 - 8);
  v11 = MEMORY[0x24BDAC7A8](v74);
  v67 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v66 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v66 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v78 = (char *)&v66 - v18;
  v19 = sub_238238114();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v71 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B30);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2568EE790 != -1)
    swift_once();
  v68 = v15;
  v70 = v7;
  swift_beginAccess();
  v25 = qword_2568F0150;
  v26 = (os_unfair_lock_s *)(qword_2568F0150 + 20);
  swift_retain();
  os_unfair_lock_lock(v26);
  if (v4)
  {
    os_unfair_lock_unlock(v26);
    __break(1u);
  }
  else
  {
    v27 = *(_BYTE *)(v25 + 16);
    os_unfair_lock_unlock(v26);
    swift_release();
    if ((v27 & 1) != 0)
    {
      sub_238223D04();
      return;
    }
    v82[0] = a2;
    v82[1] = a3;
    swift_bridgeObjectRetain();
    sub_2382386B4();
    v28 = v79;
    sub_2382381A4();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_238239E40;
    v30 = (void *)*MEMORY[0x24BDBCC60];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCC60];
    v31 = v30;
    sub_2381D450C(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey();
    swift_arrayDestroy();
    sub_238238168();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19) == 1)
    {
      sub_2381CCCD0((uint64_t)v24, &qword_2568E7B30);
      goto LABEL_8;
    }
    v53 = sub_2382380CC();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    if ((v53 & 1) == 0)
    {
LABEL_8:
      v32 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v33 = (void *)sub_238238198();
      v82[0] = 0;
      v34 = objc_msgSend(v32, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v33, 1, 0, v82);

      if (v34)
      {
        v35 = v82[0];
        v36 = v71;
        sub_238238108();
        sub_2382380E4();
        sub_23823818C();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v36, v19);
        return;
      }
      v37 = v82[0];
      v38 = (void *)sub_238238150();

      swift_willThrow();
      v39 = (uint64_t)v75;
      v82[0] = v38;
      v40 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
      v41 = v78;
      v42 = v74;
      v43 = swift_dynamicCast();
      v45 = v72;
      v44 = v73;
      if (v43)
      {
        v76 = 0;
        v66 = *(void (**)(uint64_t, char *, uint64_t))(v77 + 16);
        v66(v39, v41, v42);
        v75 = (char *)sub_2381D49C0(&qword_2568E76B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
        sub_238238144();
        sub_238237F88();
        v46 = sub_2381D49C0(&qword_2568E76C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAED0]);
        v47 = v70;
        sub_238238738();
        v71 = (char *)v46;
        sub_238238738();
        v49 = v80;
        v48 = v81;
        v50 = *(void (**)(char *, uint64_t))(v69 + 8);
        v50(v44, v47);
        v50(v45, v47);
        if (v48 == v49)
        {

          sub_238223E78(v39);
          v51 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
          v51(v39, v42);
          v52 = sub_238238210();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v79, v52);
          v51((uint64_t)v78, v42);
LABEL_19:
          v64 = v82[0];
LABEL_22:

          return;
        }
        v69 = *(_QWORD *)(v77 + 8);
        ((void (*)(uint64_t, uint64_t))v69)(v39, v42);
        v54 = (uint64_t)v68;
        v66((uint64_t)v68, v78, v42);
        v55 = v54;
        sub_238238144();
        sub_238237F7C();
        sub_238238738();
        sub_238238738();
        v57 = v80;
        v56 = v81;
        v50(v44, v47);
        v50(v45, v47);
        if (v56 == v57)
        {

          sub_238223E58(v55);
          v58 = (void (*)(char *, uint64_t))v69;
          ((void (*)(uint64_t, uint64_t))v69)(v55, v42);
          v59 = sub_238238210();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v79, v59);
          v58(v78, v42);
          goto LABEL_19;
        }
        ((void (*)(uint64_t, uint64_t))v69)(v55, v42);
        v60 = (uint64_t)v67;
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v67, v78, v42);
        sub_238238144();
        sub_238237F70();
        sub_238238738();
        sub_238238738();
        v62 = v80;
        v61 = v81;
        v50(v44, v47);
        v50(v45, v47);
        if (v61 == v62)
        {

          sub_238223E98(v60);
          ((void (*)(uint64_t, uint64_t))v69)(v60, v42);
          v63 = sub_238238210();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v79, v63);
          goto LABEL_19;
        }
        ((void (*)(uint64_t, uint64_t))v69)(v60, v42);
        v28 = v79;
      }

      sub_238224174(v38);
      v65 = sub_238238210();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v28, v65);
      v64 = v38;
      goto LABEL_22;
    }
  }
}

uint64_t Daemon.init(mode:clientBundleID:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 584) = a4;
  *(_QWORD *)(v4 + 576) = a3;
  *(_BYTE *)(v4 + 76) = a2;
  *(_QWORD *)(v4 + 568) = a1;
  v5 = sub_238238210();
  *(_QWORD *)(v4 + 592) = v5;
  *(_QWORD *)(v4 + 600) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 608) = swift_task_alloc();
  *(_QWORD *)(v4 + 616) = swift_task_alloc();
  *(_QWORD *)(v4 + 624) = swift_task_alloc();
  *(_QWORD *)(v4 + 632) = swift_task_alloc();
  *(_QWORD *)(v4 + 640) = swift_task_alloc();
  *(_QWORD *)(v4 + 648) = swift_task_alloc();
  *(_QWORD *)(v4 + 656) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238206674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void (*v11)(uint64_t, uint64_t);
  void *v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v34;
  void *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54[3];

  v54[2] = *MEMORY[0x24BDAC8D0];
  v1 = qword_2568EE760;
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  v2 = sub_238238444();
  *(_QWORD *)(v0 + 664) = __swift_project_value_buffer(v2, (uint64_t)qword_2568F0120);
  v3 = sub_23823842C();
  v4 = sub_238238894();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2381C6000, v3, v4, "starting CloudTelemetryService", v5, 2u);
    MEMORY[0x23B82FE28](v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);

  *(_BYTE *)(v0 + 872) = 0;
  v9 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 672) = v9;
  v10 = objc_msgSend(v9, sel_defaultManager);
  sub_2381DA29C();
  sub_2382381E0();
  v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 680) = v11;
  v11(v6, v8);
  v12 = (void *)sub_2382385E8();
  swift_bridgeObjectRelease();
  LOBYTE(v6) = objc_msgSend(v10, sel_fileExistsAtPath_, v12);

  if ((v6 & 1) != 0)
  {
    v13 = *(char **)(v0 + 648);
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 76);
    *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_BYTE *)(v0 + 72) = 0;
    swift_bridgeObjectRetain();
    sub_238205378(v13);
    swift_bridgeObjectRelease();
    type metadata accessor for TransparencyLog();
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 688) = v32;
    *v32 = v0;
    v32[1] = sub_2382071D0;
    return sub_2381CF7A8(*(_QWORD *)(v0 + 648));
  }
  v14 = sub_23823842C();
  v15 = sub_238238888();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 656);
    v50 = *(_QWORD *)(v0 + 592);
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v54[0] = v18;
    *(_DWORD *)v17 = 136380675;
    sub_2381DA29C();
    v19 = sub_2382381E0();
    v21 = v20;
    v11(v16, v50);
    *(_QWORD *)(v0 + 528) = sub_2381CBC6C(v19, v21, v54);
    sub_238238960();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v14, v15, "reporting disabled due to missing home directory: %{private}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v18, -1, -1);
    MEMORY[0x23B82FE28](v17, -1, -1);
  }

  *(_BYTE *)(v0 + 872) = 1;
  v22 = sub_23823842C();
  v23 = sub_238238888();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_2381C6000, v22, v23, "reporting disabled due to startup failure.", v24, 2u);
    MEMORY[0x23B82FE28](v24, -1, -1);
  }

  *(_BYTE *)(v0 + 872) = 1;
  *(_OWORD *)(v0 + 776) = 0u;
  *(_OWORD *)(v0 + 792) = 0u;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v25 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v26 = (_QWORD *)swift_allocObject();
    v26[3] = 0;
    v26[4] = 0;
    v26[2] = 0;
    swift_beginAccess();
    v27 = *v25;
    *v25 = (uint64_t)&unk_2568E8D48;
    v25[1] = (uint64_t)v26;
    sub_2381D96EC(v27);
    if (qword_2568EE798 != -1)
      swift_once();
    v28 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      v29 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v29;
      if (v29)
        goto LABEL_16;
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v29;
      if (v29)
      {
LABEL_16:
        if (v29 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v30 = *(_QWORD *)(v0 + 808);
        if ((v30 & 0xC000000000000001) != 0)
        {
          v31 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v31 = *(_QWORD *)(v30 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v31;
        *(_BYTE *)(v0 + 77) = *(_BYTE *)(v0 + 872);
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v31 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v53 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v54, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v34 = (id)qword_2568F0140;
  v35 = (void *)sub_2382385E8();
  v36 = objc_msgSend(v34, sel_valueForKey_, v35);

  if (v36)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v54, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v54, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v54, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v37 = sub_23823842C();
  v38 = sub_238238894();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v54[0] = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = sub_23820ABBC(v53);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v41, v42, v54);
    sub_238238960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v37, v38, "started CloudTelemetryService%s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v40, -1, -1);
    MEMORY[0x23B82FE28](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  v43 = *(_QWORD *)(v0 + 800);
  v49 = *(_QWORD *)(v0 + 792);
  v51 = *(_QWORD *)(v0 + 784);
  v44 = *(_QWORD *)(v0 + 584);
  v47 = *(_QWORD *)(v0 + 576);
  v48 = *(_QWORD *)(v0 + 776);
  v46 = *(_BYTE *)(v0 + 76);
  v45 = *(_QWORD *)(v0 + 568);
  v52 = *(_BYTE *)(v0 + 872);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v45 = v46;
  *(_QWORD *)(v45 + 8) = v47;
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v49;
  *(_QWORD *)(v45 + 32) = v48;
  *(_QWORD *)(v45 + 40) = v43;
  *(_QWORD *)(v45 + 48) = v51;
  *(_BYTE *)(v45 + 56) = v52;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2382071D0(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)

  else
    *(_QWORD *)(v4 + 696) = a1;
  return swift_task_switch();
}

uint64_t sub_23820728C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;
  void (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v0 + 704) = *(_QWORD *)(v0 + 696);
  v8 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  v4 = *(_QWORD *)(v0 + 576);
  v5 = *(_BYTE *)(v0 + 76);
  *(_QWORD *)(v0 + 712) = type metadata accessor for DiskCache();
  *(_BYTE *)(v0 + 80) = v5;
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = v3;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_BYTE *)(v0 + 136) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2381DA29C();
  sub_238205080();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v8(v1, v2);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v6;
  *v6 = v0;
  v6[1] = sub_2382073CC;
  return DiskCache.__allocating_init(rootCacheURL:)(*(_QWORD *)(v0 + 640));
}

uint64_t sub_2382073CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 728) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 736) = a1;
  return swift_task_switch();
}

uint64_t sub_238207484()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42[3];

  v42[2] = *MEMORY[0x24BDAC8D0];
  v1 = (_BYTE *)(v0 + 872);
  v2 = *(_QWORD *)(v0 + 736);
  *(_QWORD *)(v0 + 744) = v2;
  v3 = *(_QWORD *)(v0 + 704);
  swift_retain();
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = sub_23823842C();
    v6 = sub_238238888();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_2381C6000, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      MEMORY[0x23B82FE28](v7, -1, -1);
    }

    *v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    v15 = *(_QWORD *)(v0 + 656);
    v16 = *(_QWORD *)(v0 + 592);
    v17 = *(_QWORD *)(v0 + 584);
    v18 = *(_QWORD *)(v0 + 576);
    v19 = *(_BYTE *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(_BYTE *)(v0 + 272) = v19;
    *(_QWORD *)(v0 + 280) = v18;
    *(_QWORD *)(v0 + 288) = v17;
    *(_QWORD *)(v0 + 296) = v2;
    *(_QWORD *)(v0 + 304) = 0;
    *(_QWORD *)(v0 + 312) = 0;
    *(_QWORD *)(v0 + 320) = v3;
    *(_BYTE *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2381DA29C();
    sub_238205080();
    sub_2382381B0();
    swift_bridgeObjectRelease();
    v39(v15, v16);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 752) = v20;
    *v20 = v0;
    v20[1] = sub_238207CF0;
    return sub_2382296E0(0, v2, *(_QWORD *)(v0 + 632));
  }
  *(_QWORD *)(v0 + 800) = 0;
  *(_QWORD *)(v0 + 792) = v2;
  *(_QWORD *)(v0 + 784) = v3;
  *(_QWORD *)(v0 + 776) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v9 = (_QWORD *)swift_allocObject();
    v9[3] = 0;
    v9[4] = 0;
    v9[2] = v2;
    swift_beginAccess();
    v10 = *v8;
    *v8 = (uint64_t)&unk_2568E8D48;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_2381D96EC(v10);
    if (qword_2568EE798 != -1)
      swift_once();
    v11 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v12;
      if (v12)
        goto LABEL_15;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v13 = *(_QWORD *)(v0 + 808);
        if ((v13 & 0xC000000000000001) != 0)
        {
          v14 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v14 = *(_QWORD *)(v13 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v14;
        *(_BYTE *)(v0 + 77) = *v1;
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v14 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v41 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v42, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2568F0140;
  v23 = (void *)sub_2382385E8();
  v24 = objc_msgSend(v22, sel_valueForKey_, v23);

  if (v24)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v42, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v42, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v42, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v25 = sub_23823842C();
  v26 = sub_238238894();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v42[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_23820ABBC(v41);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v29, v30, v42);
    sub_238238960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v25, v26, "started CloudTelemetryService%s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v28, -1, -1);
    MEMORY[0x23B82FE28](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  v31 = *(_QWORD *)(v0 + 800);
  v37 = *(_QWORD *)(v0 + 792);
  v38 = *(_QWORD *)(v0 + 784);
  v32 = *(_QWORD *)(v0 + 584);
  v35 = *(_QWORD *)(v0 + 576);
  v36 = *(_QWORD *)(v0 + 776);
  v34 = *(_BYTE *)(v0 + 76);
  v33 = *(_QWORD *)(v0 + 568);
  v40 = *(_BYTE *)(v0 + 872);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v33 = v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = v37;
  *(_QWORD *)(v33 + 32) = v36;
  *(_QWORD *)(v33 + 40) = v31;
  *(_QWORD *)(v33 + 48) = v38;
  *(_BYTE *)(v33 + 56) = v40;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238207CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 760) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 768) = a1;
  return swift_task_switch();
}

uint64_t sub_238207DA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34[3];

  v34[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 768);
  if (*(_BYTE *)(v0 + 872) == 1)
  {
    v2 = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 744);
    v4 = *(_QWORD *)(v0 + 704);
    if (!v1)
    {
      swift_release();
      result = swift_release();
      __break(1u);
      return result;
    }
    type metadata accessor for SubmissionCoordinator();
    swift_retain();
    swift_retain();
    swift_retain();
    v2 = sub_2381C8E20(v1, v3, v4);
  }
  v5 = *(_QWORD *)(v0 + 744);
  v6 = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 800) = v2;
  *(_QWORD *)(v0 + 792) = v5;
  *(_QWORD *)(v0 + 784) = v6;
  *(_QWORD *)(v0 + 776) = v1;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v7 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v1;
    v8[4] = v2;
    swift_beginAccess();
    v9 = *v7;
    *v7 = (uint64_t)&unk_2568E8D48;
    v7[1] = (uint64_t)v8;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_2381D96EC(v9);
    if (qword_2568EE798 != -1)
      swift_once();
    v10 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v11;
      if (v11)
        goto LABEL_10;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v11;
      if (v11)
      {
LABEL_10:
        if (v11 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v12 = *(_QWORD *)(v0 + 808);
        if ((v12 & 0xC000000000000001) != 0)
        {
          v13 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v13 = *(_QWORD *)(v12 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v13;
        *(_BYTE *)(v0 + 77) = *(_BYTE *)(v0 + 872);
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v13 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v33 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v34, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v15 = (id)qword_2568F0140;
  v16 = (void *)sub_2382385E8();
  v17 = objc_msgSend(v15, sel_valueForKey_, v16);

  if (v17)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v34, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v34, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v34, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v18 = sub_23823842C();
  v19 = sub_238238894();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v34[0] = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = sub_23820ABBC(v33);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v22, v23, v34);
    sub_238238960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v18, v19, "started CloudTelemetryService%s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v21, -1, -1);
    MEMORY[0x23B82FE28](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  v24 = *(_QWORD *)(v0 + 800);
  v30 = *(_QWORD *)(v0 + 792);
  v31 = *(_QWORD *)(v0 + 784);
  v25 = *(_QWORD *)(v0 + 584);
  v28 = *(_QWORD *)(v0 + 576);
  v29 = *(_QWORD *)(v0 + 776);
  v27 = *(_BYTE *)(v0 + 76);
  v26 = *(_QWORD *)(v0 + 568);
  v32 = *(_BYTE *)(v0 + 872);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v26 = v27;
  *(_QWORD *)(v26 + 8) = v28;
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = v30;
  *(_QWORD *)(v26 + 32) = v29;
  *(_QWORD *)(v26 + 40) = v24;
  *(_QWORD *)(v26 + 48) = v31;
  *(_BYTE *)(v26 + 56) = v32;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2382084EC()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 840))(*(unsigned __int8 *)(v0 + 77));
  return swift_task_switch();
}

uint64_t sub_23820855C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26[3];

  v26[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD *)(v0 + 816);
  swift_release();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    v25 = MEMORY[0x24BEE4B08];
    if (qword_2568EE778 != -1)
      swift_once();
    if (byte_2568F0148 == 1)
    {
      sub_2381EA138(v26, 0xD000000000000011, 0x800000023823FCF0);
      swift_bridgeObjectRelease();
    }
    if (qword_2568EE770 != -1)
      swift_once();
    swift_beginAccess();
    v3 = (id)qword_2568F0140;
    v4 = (void *)sub_2382385E8();
    v5 = objc_msgSend(v3, sel_valueForKey_, v4);

    if (v5)
    {
      sub_238238984();
      swift_unknownObjectRelease();
      sub_2381CCCD0(v0 + 336, &qword_2568E8840);
      sub_2381EA138(v26, 0xD000000000000013, 0x800000023823FCD0);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 336) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
      sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    }
    if (qword_2568EE780 != -1)
      swift_once();
    if (byte_2568F0149 == 1)
    {
      sub_2381EA138(v26, 0x6976654474736574, 0xEA00000000006563);
      swift_bridgeObjectRelease();
    }
    if (qword_2568EE788 != -1)
      swift_once();
    if (byte_2568F014A == 1)
    {
      sub_2381EA138(v26, 0xD000000000000014, 0x800000023823FCB0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    v9 = sub_23823842C();
    v10 = sub_238238894();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v26[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = sub_23820ABBC(v25);
      *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v13, v14, v26);
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v9, v10, "started CloudTelemetryService%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v12, -1, -1);
      MEMORY[0x23B82FE28](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_release();
    swift_release();
    v15 = *(_QWORD *)(v0 + 800);
    v22 = *(_QWORD *)(v0 + 792);
    v23 = *(_QWORD *)(v0 + 784);
    v16 = *(_QWORD *)(v0 + 584);
    v20 = *(_QWORD *)(v0 + 576);
    v21 = *(_QWORD *)(v0 + 776);
    v19 = *(_BYTE *)(v0 + 76);
    v17 = *(_QWORD *)(v0 + 568);
    v24 = *(_BYTE *)(v0 + 872);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_BYTE *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v22;
    *(_QWORD *)(v17 + 32) = v21;
    *(_QWORD *)(v17 + 40) = v15;
    *(_QWORD *)(v17 + 48) = v23;
    *(_BYTE *)(v17 + 56) = v24;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 824) + 1;
    *(_QWORD *)(v0 + 824) = v6;
    v7 = *(_QWORD *)(v0 + 808);
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x23B82F36C]();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 832) = v8;
    *(_BYTE *)(v0 + 77) = *(_BYTE *)(v0 + 872);
    *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v8 + 160);
    return swift_task_switch();
  }
}

uint64_t sub_238208B28()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;

  *(_QWORD *)(v0 + 704) = 0;
  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  v2 = *(_QWORD *)(v0 + 656);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 584);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_BYTE *)(v0 + 76);
  *(_QWORD *)(v0 + 712) = type metadata accessor for DiskCache();
  *(_BYTE *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v5;
  *(_QWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_BYTE *)(v0 + 136) = 0;
  swift_bridgeObjectRetain();
  sub_2381DA29C();
  sub_238205080();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v7;
  *v7 = v0;
  v7[1] = sub_2382073CC;
  return DiskCache.__allocating_init(rootCacheURL:)(*(_QWORD *)(v0 + 640));
}

uint64_t sub_238208C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 856) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 864) = a1;
  return swift_task_switch();
}

uint64_t sub_238208D0C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42[3];

  v42[2] = *MEMORY[0x24BDAC8D0];
  v1 = (_BYTE *)(v0 + 872);
  v2 = *(_QWORD *)(v0 + 864);

  *(_QWORD *)(v0 + 744) = v2;
  v3 = *(_QWORD *)(v0 + 704);
  swift_retain();
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = sub_23823842C();
    v6 = sub_238238888();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_2381C6000, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      MEMORY[0x23B82FE28](v7, -1, -1);
    }

    *v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    v15 = *(_QWORD *)(v0 + 656);
    v16 = *(_QWORD *)(v0 + 592);
    v17 = *(_QWORD *)(v0 + 584);
    v18 = *(_QWORD *)(v0 + 576);
    v19 = *(_BYTE *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(_BYTE *)(v0 + 272) = v19;
    *(_QWORD *)(v0 + 280) = v18;
    *(_QWORD *)(v0 + 288) = v17;
    *(_QWORD *)(v0 + 296) = v2;
    *(_QWORD *)(v0 + 304) = 0;
    *(_QWORD *)(v0 + 312) = 0;
    *(_QWORD *)(v0 + 320) = v3;
    *(_BYTE *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2381DA29C();
    sub_238205080();
    sub_2382381B0();
    swift_bridgeObjectRelease();
    v39(v15, v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 752) = v20;
    *v20 = v0;
    v20[1] = sub_238207CF0;
    return sub_2382296E0(0, v2, *(_QWORD *)(v0 + 632));
  }
  *(_QWORD *)(v0 + 800) = 0;
  *(_QWORD *)(v0 + 792) = v2;
  *(_QWORD *)(v0 + 784) = v3;
  *(_QWORD *)(v0 + 776) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v9 = (_QWORD *)swift_allocObject();
    v9[3] = 0;
    v9[4] = 0;
    v9[2] = v2;
    swift_beginAccess();
    v10 = *v8;
    *v8 = (uint64_t)&unk_2568E8D48;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_2381D96EC(v10);
    if (qword_2568EE798 != -1)
      swift_once();
    v11 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v12;
      if (v12)
        goto LABEL_15;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v13 = *(_QWORD *)(v0 + 808);
        if ((v13 & 0xC000000000000001) != 0)
        {
          v14 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v14 = *(_QWORD *)(v13 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v14;
        *(_BYTE *)(v0 + 77) = *v1;
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v14 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v41 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v42, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2568F0140;
  v23 = (void *)sub_2382385E8();
  v24 = objc_msgSend(v22, sel_valueForKey_, v23);

  if (v24)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v42, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v42, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v42, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v25 = sub_23823842C();
  v26 = sub_238238894();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v42[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_23820ABBC(v41);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v29, v30, v42);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v25, v26, "started CloudTelemetryService%s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v28, -1, -1);
    MEMORY[0x23B82FE28](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  v37 = *(_QWORD *)(v0 + 784);
  v38 = *(_QWORD *)(v0 + 800);
  v35 = *(_QWORD *)(v0 + 776);
  v36 = *(_QWORD *)(v0 + 792);
  v31 = *(_QWORD *)(v0 + 584);
  v34 = *(_QWORD *)(v0 + 576);
  v33 = *(_BYTE *)(v0 + 76);
  v32 = *(_QWORD *)(v0 + 568);
  v40 = *(_BYTE *)(v0 + 872);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v32 = v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = v36;
  *(_QWORD *)(v32 + 32) = v35;
  *(_QWORD *)(v32 + 40) = v38;
  *(_QWORD *)(v32 + 48) = v37;
  *(_BYTE *)(v32 + 56) = v40;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238209574()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  char *v44;
  uint64_t v45[2];

  v45[1] = *MEMORY[0x24BDAC8D0];
  v44 = (char *)(v0 + 872);
  v1 = *(void **)(v0 + 728);
  *(_QWORD *)(v0 + 496) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
  if (!swift_dynamicCast()
    || (*(_BYTE *)(v0 + 73) = *(_BYTE *)(v0 + 75), *(_BYTE *)(v0 + 74) = 1, sub_2381DDCB4(), (sub_2382385DC() & 1) == 0))
  {
    v3 = *(void **)(v0 + 728);
    v4 = v3;
    v5 = v3;
    v6 = sub_23823842C();
    v7 = sub_23823887C();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(void **)(v0 + 728);
    if (v8)
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v45[0] = v11;
      *(_DWORD *)v10 = 136446210;
      swift_getErrorValue();
      v12 = sub_238238C9C();
      *(_QWORD *)(v0 + 512) = sub_2381CBC6C(v12, v13, v45);
      sub_238238960();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2381C6000, v6, v7, "failed to open database file: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v11, -1, -1);
      MEMORY[0x23B82FE28](v10, -1, -1);
    }
    else
    {

    }
  }
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  v15 = *(_QWORD *)(v0 + 656);
  v16 = *(_QWORD *)(v0 + 624);
  v17 = *(_QWORD *)(v0 + 616);
  v18 = *(_QWORD *)(v0 + 592);
  v19 = *(_QWORD *)(v0 + 584);
  v20 = *(_QWORD *)(v0 + 576);
  v21 = *(_BYTE *)(v0 + 76);
  v22 = objc_msgSend(*(id *)(v0 + 672), sel_defaultManager, v0 + 552);
  v23 = *v44;
  *(_BYTE *)(v0 + 144) = v21;
  *(_QWORD *)(v0 + 152) = v20;
  *(_QWORD *)(v0 + 160) = v19;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_BYTE *)(v0 + 200) = v23;
  swift_bridgeObjectRetain();
  sub_2381DA29C();
  sub_238205080();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v14(v17, v18);
  swift_bridgeObjectRelease();
  sub_2382381C8();
  v14(v16, v18);
  v24 = (void *)sub_238238198();
  v14(v15, v18);
  *(_QWORD *)(v0 + 536) = 0;
  LODWORD(v17) = objc_msgSend(v22, sel_removeItemAtURL_error_, v24, v0 + 536);

  v25 = *(id *)(v0 + 536);
  if (!(_DWORD)v17)
  {
    v26 = v25;
    v27 = (void *)sub_238238150();

    swift_willThrow();
    v28 = v27;
    v29 = v27;
    v30 = sub_23823842C();
    v31 = sub_23823887C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v45[0] = v33;
      *(_DWORD *)v32 = 136446210;
      swift_getErrorValue();
      v34 = sub_238238C9C();
      *(_QWORD *)(v0 + 544) = sub_2381CBC6C(v34, v35, v45);
      sub_238238960();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2381C6000, v30, v31, "failed to clear cache directory with error: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v33, -1, -1);
      MEMORY[0x23B82FE28](v32, -1, -1);

    }
    else
    {

    }
  }
  v36 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  v37 = *(_QWORD *)(v0 + 656);
  v38 = *(_QWORD *)(v0 + 592);
  v39 = *(_QWORD *)(v0 + 584);
  v40 = *(_QWORD *)(v0 + 576);
  *(_BYTE *)(v0 + 208) = *(_BYTE *)(v0 + 76);
  v41 = *v44;
  *(_QWORD *)(v0 + 216) = v40;
  *(_QWORD *)(v0 + 224) = v39;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(_BYTE *)(v0 + 264) = v41;
  swift_bridgeObjectRetain();
  sub_2381DA29C();
  sub_238205080();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v36(v37, v38);
  swift_bridgeObjectRelease();
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v42;
  *v42 = v0;
  v42[1] = sub_238208C54;
  return DiskCache.__allocating_init(rootCacheURL:)(*(_QWORD *)(v0 + 608));
}

uint64_t sub_238209AF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33[3];

  v33[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 856);

  *(_QWORD *)(v0 + 744) = 0;
  v2 = *(_QWORD *)(v0 + 704);
  v3 = sub_23823842C();
  v4 = sub_238238888();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2381C6000, v3, v4, "reporting disabled due to startup failure.", v5, 2u);
    MEMORY[0x23B82FE28](v5, -1, -1);
  }

  *(_BYTE *)(v0 + 872) = 1;
  *(_OWORD *)(v0 + 792) = 0u;
  *(_QWORD *)(v0 + 784) = v2;
  *(_QWORD *)(v0 + 776) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v6 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v7 = (_QWORD *)swift_allocObject();
    v7[3] = 0;
    v7[4] = 0;
    v7[2] = 0;
    swift_beginAccess();
    v8 = *v6;
    *v6 = (uint64_t)&unk_2568E8D48;
    v6[1] = (uint64_t)v7;
    sub_2381D96EC(v8);
    if (qword_2568EE798 != -1)
      swift_once();
    v9 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v10;
      if (v10)
        goto LABEL_8;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v10;
      if (v10)
      {
LABEL_8:
        if (v10 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v11 = *(_QWORD *)(v0 + 808);
        if ((v11 & 0xC000000000000001) != 0)
        {
          v12 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v12 = *(_QWORD *)(v11 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v12;
        *(_BYTE *)(v0 + 77) = *(_BYTE *)(v0 + 872);
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v12 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v32 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v33, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v14 = (id)qword_2568F0140;
  v15 = (void *)sub_2382385E8();
  v16 = objc_msgSend(v14, sel_valueForKey_, v15);

  if (v16)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v33, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v33, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v33, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v17 = sub_23823842C();
  v18 = sub_238238894();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v33[0] = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_23820ABBC(v32);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v21, v22, v33);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v17, v18, "started CloudTelemetryService%s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v20, -1, -1);
    MEMORY[0x23B82FE28](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  v29 = *(_QWORD *)(v0 + 784);
  v30 = *(_QWORD *)(v0 + 800);
  v27 = *(_QWORD *)(v0 + 776);
  v28 = *(_QWORD *)(v0 + 792);
  v23 = *(_QWORD *)(v0 + 584);
  v26 = *(_QWORD *)(v0 + 576);
  v25 = *(_BYTE *)(v0 + 76);
  v24 = *(_QWORD *)(v0 + 568);
  v31 = *(_BYTE *)(v0 + 872);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v24 = v25;
  *(_QWORD *)(v24 + 8) = v26;
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v28;
  *(_QWORD *)(v24 + 32) = v27;
  *(_QWORD *)(v24 + 40) = v30;
  *(_QWORD *)(v24 + 48) = v29;
  *(_BYTE *)(v24 + 56) = v31;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23820A21C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41[3];

  v41[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 760);
  v2 = v1;
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_238238888();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 760);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v41[0] = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 520) = sub_2381CBC6C(v9, v10, v41);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v4, v5, "reporting disabled due to failure setting up session coordinator. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 760);

  }
  *(_BYTE *)(v0 + 872) = 1;
  v12 = *(_QWORD *)(v0 + 744);
  v13 = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 800) = 0;
  *(_QWORD *)(v0 + 792) = v12;
  *(_QWORD *)(v0 + 784) = v13;
  *(_QWORD *)(v0 + 776) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    v14 = XPCActivity.makeHandler.unsafeMutableAddressor();
    v15 = (_QWORD *)swift_allocObject();
    v15[3] = 0;
    v15[4] = 0;
    v15[2] = v12;
    swift_beginAccess();
    v16 = *v14;
    *v14 = (uint64_t)&unk_2568E8D48;
    v14[1] = (uint64_t)v15;
    swift_retain_n();
    sub_2381D96EC(v16);
    if (qword_2568EE798 != -1)
      swift_once();
    v17 = qword_2568F0158;
    *(_QWORD *)(v0 + 808) = qword_2568F0158;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_238238AEC();
      *(_QWORD *)(v0 + 816) = v18;
      if (v18)
        goto LABEL_9;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 816) = v18;
      if (v18)
      {
LABEL_9:
        if (v18 < 1)
          __break(1u);
        *(_QWORD *)(v0 + 824) = 0;
        v19 = *(_QWORD *)(v0 + 808);
        if ((v19 & 0xC000000000000001) != 0)
        {
          v20 = MEMORY[0x23B82F36C](0);
        }
        else
        {
          v20 = *(_QWORD *)(v19 + 32);
          swift_retain();
        }
        *(_QWORD *)(v0 + 832) = v20;
        *(_BYTE *)(v0 + 77) = *(_BYTE *)(v0 + 872);
        *(_QWORD *)(v0 + 840) = *(_QWORD *)(*(_QWORD *)v20 + 160);
        return swift_task_switch();
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v40 = MEMORY[0x24BEE4B08];
  if (qword_2568EE778 != -1)
    swift_once();
  if (byte_2568F0148 == 1)
  {
    sub_2381EA138(v41, 0xD000000000000011, 0x800000023823FCF0);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE770 != -1)
    swift_once();
  swift_beginAccess();
  v22 = (id)qword_2568F0140;
  v23 = (void *)sub_2382385E8();
  v24 = objc_msgSend(v22, sel_valueForKey_, v23);

  if (v24)
  {
    sub_238238984();
    swift_unknownObjectRelease();
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
    sub_2381EA138(v41, 0xD000000000000013, 0x800000023823FCD0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_2381CCCD0(v0 + 336, &qword_2568E8840);
  }
  if (qword_2568EE780 != -1)
    swift_once();
  if (byte_2568F0149 == 1)
  {
    sub_2381EA138(v41, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_2568EE788 != -1)
    swift_once();
  if (byte_2568F014A == 1)
  {
    sub_2381EA138(v41, 0xD000000000000014, 0x800000023823FCB0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v25 = sub_23823842C();
  v26 = sub_238238894();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v41[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_23820ABBC(v40);
    *(_QWORD *)(v0 + 488) = sub_2381CBC6C(v29, v30, v41);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v25, v26, "started CloudTelemetryService%s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v28, -1, -1);
    MEMORY[0x23B82FE28](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  v37 = *(_QWORD *)(v0 + 784);
  v38 = *(_QWORD *)(v0 + 800);
  v35 = *(_QWORD *)(v0 + 776);
  v36 = *(_QWORD *)(v0 + 792);
  v31 = *(_QWORD *)(v0 + 584);
  v34 = *(_QWORD *)(v0 + 576);
  v33 = *(_BYTE *)(v0 + 76);
  v32 = *(_QWORD *)(v0 + 568);
  v39 = *(_BYTE *)(v0 + 872);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_BYTE *)v32 = v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = v36;
  *(_QWORD *)(v32 + 32) = v35;
  *(_QWORD *)(v32 + 40) = v38;
  *(_QWORD *)(v32 + 48) = v37;
  *(_BYTE *)(v32 + 56) = v39;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23820AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23820AA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t (*v8)();
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  if (type metadata accessor for SubmitEventsActivity() == v1)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    v6 = (uint64_t)sub_2381C8E20(v5, v4, v3);
    v7 = (unint64_t *)&unk_2568E8D60;
    v8 = type metadata accessor for SubmitEventsActivity;
    v9 = &unk_238239A94;
  }
  else if (type metadata accessor for CacheCleanupActivity() == v1)
  {
    v10 = swift_retain();
    v6 = sub_2381FF6BC(v10);
    v7 = (unint64_t *)&unk_2568E8D70;
    v8 = type metadata accessor for CacheCleanupActivity;
    v9 = &unk_23823D068;
  }
  else
  {
    if (type metadata accessor for PostInstallActivity() != v1)
      return sub_238238AE0();
    v6 = sub_2381DEB84();
    v7 = (unint64_t *)&unk_2568E8D68;
    v8 = type metadata accessor for PostInstallActivity;
    v9 = &unk_23823A728;
  }
  v11 = sub_2381D49C0(v7, (uint64_t (*)(uint64_t))v8, (uint64_t)v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v6, v11);
}

uint64_t sub_23820ABBC(uint64_t a1)
{
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D78);
  sub_23820B2B0();
  sub_2381DFC14();
  sub_23823872C();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  return 0x6769666E6F632820;
}

uint64_t sub_23820AC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D58);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23823C350;
  type metadata accessor for XPCActivity();
  v1 = type metadata accessor for SubmitEventsActivity();
  v2 = sub_2381D49C0(&qword_2568E8D60, (uint64_t (*)(uint64_t))type metadata accessor for SubmitEventsActivity, (uint64_t)&unk_238239A94);
  *(_QWORD *)(v0 + 32) = XPCActivity.__allocating_init(handlerType:)(v1, v2);
  v3 = type metadata accessor for PostInstallActivity();
  v4 = sub_2381D49C0(&qword_2568E8D68, (uint64_t (*)(uint64_t))type metadata accessor for PostInstallActivity, (uint64_t)&unk_23823A728);
  *(_QWORD *)(v0 + 40) = XPCActivity.__allocating_init(handlerType:)(v3, v4);
  v5 = type metadata accessor for CacheCleanupActivity();
  v6 = sub_2381D49C0(&qword_2568E8D70, (uint64_t (*)(uint64_t))type metadata accessor for CacheCleanupActivity, (uint64_t)&unk_23823D068);
  *(_QWORD *)(v0 + 48) = XPCActivity.__allocating_init(handlerType:)(v5, v6);
  result = sub_238238768();
  qword_2568F0158 = v0;
  return result;
}

uint64_t sub_23820ADB0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23820ADE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23820AE64;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23820AE64(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

unint64_t sub_23820AEC0()
{
  unint64_t result;

  result = qword_2568E8D50;
  if (!qword_2568E8D50)
  {
    result = MEMORY[0x23B82FD68](&protocol conformance descriptor for Mode, &type metadata for Mode);
    atomic_store(result, (unint64_t *)&qword_2568E8D50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23820AF50 + 4 * byte_23823C375[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23820AF84 + 4 * byte_23823C370[v4]))();
}

uint64_t sub_23820AF84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23820AF8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23820AF94);
  return result;
}

uint64_t sub_23820AFA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23820AFA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23820AFAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23820AFB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Mode()
{
  return &type metadata for Mode;
}

uint64_t destroy for Daemon()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Daemon(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Daemon(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Daemon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Daemon()
{
  return &type metadata for Daemon;
}

unint64_t sub_23820B2B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E8D80;
  if (!qword_2568E8D80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E8D78);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE1718], v1);
    atomic_store(result, (unint64_t *)&qword_2568E8D80);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2381FF558(a1, &qword_2568E8D90);
}

_BYTE *sub_23820B310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *result;
  uint64_t v16;

  v6 = *a3;
  v7 = a3[1];
  v8 = a3[2];
  v9 = a3[3];
  v10 = *((_BYTE *)a3 + 32);
  v11 = *((_BYTE *)a3 + 33);
  v13 = a3[5];
  v12 = a3[6];
  v14 = sub_238204BB4();
  result = (_BYTE *)swift_beginAccess();
  v16 = 0;
  if (*v14 == 1)
  {
    result = sub_238204ED4();
    v16 = 5;
    if (!*result)
      v16 = 1;
  }
  *(_QWORD *)a5 = v16;
  *(_QWORD *)(a5 + 8) = v6;
  *(_QWORD *)(a5 + 16) = v7;
  *(_QWORD *)(a5 + 24) = v8;
  *(_QWORD *)(a5 + 32) = v9;
  *(_BYTE *)(a5 + 40) = v10 & 1;
  *(_BYTE *)(a5 + 41) = v11 & 1;
  *(_QWORD *)(a5 + 48) = v13;
  *(_QWORD *)(a5 + 56) = v12;
  *(_BYTE *)(a5 + 64) = a4 & 1;
  *(_QWORD *)(a5 + 72) = a1;
  *(_QWORD *)(a5 + 80) = a2;
  return result;
}

unint64_t sub_23820B3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v1 = type metadata accessor for ServiceEventValue();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v24 - v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D98);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23823C420;
  v12 = (_QWORD *)(v11 + v10);
  v13 = *(int *)(v7 + 48);
  *v12 = 0xD00000000000001BLL;
  v12[1] = 0x800000023823FD60;
  v14 = *(_OWORD *)(v0 + 24);
  v26 = *(_OWORD *)(v0 + 8);
  v27 = v14;
  v28 = *(_OWORD *)(v0 + 40);
  v29 = *(_QWORD *)(v0 + 56);
  v31 = v14;
  *(_OWORD *)((char *)v12 + v13) = v14;
  swift_storeEnumTagMultiPayload();
  v15 = (_QWORD *)((char *)v12 + v9);
  v16 = (_QWORD *)((char *)v12 + v9 + *(int *)(v7 + 48));
  *v15 = 0xD00000000000001FLL;
  v15[1] = 0x800000023823FD80;
  *v16 = *(_QWORD *)v0;
  swift_storeEnumTagMultiPayload();
  v17 = (_QWORD *)((char *)v12 + 2 * v9);
  v18 = (_OWORD *)((char *)v17 + *(int *)(v7 + 48));
  *v17 = 0xD000000000000017;
  v17[1] = 0x800000023823FDA0;
  v30 = v26;
  *v18 = v26;
  swift_storeEnumTagMultiPayload();
  sub_2381DDE94((uint64_t)&v31);
  sub_2381DDE94((uint64_t)&v30);
  v19 = sub_2381D5F9C(v11);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {
    v20 = *(_QWORD *)(v0 + 72);
    v21 = *(_QWORD *)(v0 + 80);
    *v6 = v20;
    v6[1] = v21;
    swift_storeEnumTagMultiPayload();
    sub_2381D7FE8((uint64_t)v6, (uint64_t)v4);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v19;
    sub_2381D8964((uint64_t)v4, 0xD000000000000010, 0x800000023823FDC0, isUniquelyReferenced_nonNull_native);
    v19 = v25;
    swift_bridgeObjectRelease();
  }
  return v19;
}

void sub_23820B648()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v0 = (id)MobileGestalt_get_current_device();
  if (!v0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v1 = v0;
  v2 = (id)MobileGestalt_copy_deviceName_obj();
  if (!v2)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v3 = v2;
  v4 = sub_23823860C();
  v6 = v5;

  v7 = (id)MobileGestalt_copy_marketingProductName_obj();
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  v9 = sub_23823860C();
  v11 = v10;

  v12 = (id)MobileGestalt_copy_productType_obj();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  v14 = sub_23823860C();
  v16 = v15;

  v17 = (id)MobileGestalt_copy_productVersion_obj();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = v17;
  v40 = sub_23823860C();
  v20 = v19;

  v21 = (id)MobileGestalt_copy_buildVersion_obj();
  if (!v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v22 = v21;
  v36 = sub_23823860C();
  v37 = v23;

  v24 = sub_238204BB4();
  swift_beginAccess();
  v38 = v20;
  v39 = v16;
  v25 = v14;
  v26 = v11;
  if (*v24 != 1)
  {
    v29 = v4;
    v30 = 0;
    v32 = 0xE000000000000000;
    goto LABEL_11;
  }
  v27 = (id)MobileGestalt_copy_serialNumber_obj();
  if (v27)
  {
    v28 = v27;
    v29 = v4;
    v30 = sub_23823860C();
    v32 = v31;

LABEL_11:
    v33 = _s19CloudTelemetryTools21AllEventFieldProviderV17getProjectVersionSSyFZ_0();
    v35 = v34;

    qword_2568EE8A8 = v29;
    qword_2568EE8B0 = v6;
    qword_2568EE8B8 = v9;
    qword_2568EE8C0 = v26;
    qword_2568EE8C8 = v25;
    qword_2568EE8D0 = v39;
    qword_2568EE8D8 = v40;
    qword_2568EE8E0 = v38;
    qword_2568EE8E8 = v36;
    qword_2568EE8F0 = v37;
    qword_2568EE8F8 = v33;
    qword_2568EE900 = v35;
    qword_2568EE908 = v30;
    qword_2568EE910 = v32;
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_23820B878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  v7 = sub_23823830C();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v8 = sub_2382383D8();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23820B908()
{
  uint64_t v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(uint64_t **)(v0 + 48);
  v20 = v1[1];
  v21 = *v1;
  v18 = v1[3];
  v19 = v1[2];
  *(_BYTE *)(v0 + 136) = *((_BYTE *)v1 + 32);
  *(_BYTE *)(v0 + 144) = *((_BYTE *)v1 + 33);
  v16 = v1[6];
  v17 = v1[5];
  v2 = sub_238204BB4();
  swift_beginAccess();
  v3 = 0;
  if (*v2 == 1)
  {
    if (*sub_238204ED4())
      v3 = 5;
    else
      v3 = 1;
  }
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 64);
  v13 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 40);
  sub_2382383CC();
  sub_238238300();
  v11 = sub_2382383C0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  LOBYTE(v6) = *(_BYTE *)(v0 + 136);
  LOBYTE(v8) = *(_BYTE *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)v10 = v3;
  *(_QWORD *)(v10 + 8) = v11;
  *(_OWORD *)(v10 + 16) = v14;
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v15;
  *(_QWORD *)(v10 + 48) = v21;
  *(_QWORD *)(v10 + 56) = v20;
  *(_QWORD *)(v10 + 64) = v19;
  *(_QWORD *)(v10 + 72) = v18;
  *(_BYTE *)(v10 + 80) = v6;
  *(_BYTE *)(v10 + 81) = v8;
  *(_QWORD *)(v10 + 88) = v17;
  *(_QWORD *)(v10 + 96) = v16;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23820BA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _QWORD *v13;
  _OWORD *v14;
  _QWORD *v15;
  _OWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _OWORD *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;

  v1 = type metadata accessor for ServiceEventValue();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v49 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (_QWORD **)((char *)&v48 - v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D98);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23823C430;
  v10 = (_QWORD *)(v9 + v8);
  v11 = (_OWORD *)((char *)v10 + *(int *)(v5 + 48));
  *v10 = 0x7265646E65735FLL;
  v10[1] = 0xE700000000000000;
  v12 = *(_OWORD *)(v0 + 64);
  v53 = *(_OWORD *)(v0 + 48);
  v54 = v12;
  v55 = *(_OWORD *)(v0 + 80);
  v56 = *(_QWORD *)(v0 + 96);
  v58 = v53;
  *v11 = v53;
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)((char *)v10 + v7);
  v14 = (_OWORD *)((char *)v10 + v7 + *(int *)(v5 + 48));
  *v13 = 0x7954746E6576655FLL;
  v13[1] = 0xEA00000000006570;
  v57 = v54;
  *v14 = v54;
  swift_storeEnumTagMultiPayload();
  v15 = (_QWORD *)((char *)v10 + 2 * v7);
  v16 = (_OWORD *)((char *)v15 + *(int *)(v5 + 48));
  *v15 = 0x6E6F69737365735FLL;
  v15[1] = 0xEA00000000004449;
  v52 = *(_OWORD *)(v0 + 16);
  *v16 = v52;
  swift_storeEnumTagMultiPayload();
  v17 = (_QWORD *)((char *)v10 + 3 * v7);
  v18 = (_QWORD *)((char *)v17 + *(int *)(v5 + 48));
  *v17 = 0x616E7265746E695FLL;
  v17[1] = 0xE90000000000006CLL;
  *v18 = *(_QWORD *)v0;
  swift_storeEnumTagMultiPayload();
  v19 = (_QWORD *)((char *)v10 + 4 * v7);
  v20 = (_QWORD *)((char *)v19 + *(int *)(v5 + 48));
  *v19 = 0x6E6F7A656D69745FLL;
  v19[1] = 0xEF74657366664F65;
  *v20 = *(_QWORD *)(v0 + 8);
  swift_storeEnumTagMultiPayload();
  v21 = (_QWORD *)((char *)v10 + 5 * v7);
  v22 = (_OWORD *)((char *)v21 + *(int *)(v5 + 48));
  *v21 = 0x6449746E65696C63;
  v21[1] = 0xE800000000000000;
  v51 = *(_OWORD *)(v0 + 32);
  *v22 = v51;
  swift_storeEnumTagMultiPayload();
  v23 = (char *)v10 + 6 * v7;
  v24 = &v23[*(int *)(v5 + 48)];
  strcpy(v23, "_productFamily");
  v23[15] = -18;
  sub_2381DDE94((uint64_t)&v58);
  sub_2381DDE94((uint64_t)&v57);
  sub_2381DDE94((uint64_t)&v52);
  sub_2381DDE94((uint64_t)&v51);
  if (qword_2568EE8A0 != -1)
    swift_once();
  v25 = qword_2568EE8B0;
  *(_QWORD *)v24 = qword_2568EE8A8;
  *((_QWORD *)v24 + 1) = v25;
  swift_storeEnumTagMultiPayload();
  v26 = (_QWORD *)((char *)v10 + 7 * v7);
  v27 = (_QWORD *)((char *)v26 + *(int *)(v5 + 48));
  *v26 = 0x656D614E736F5FLL;
  v26[1] = 0xE700000000000000;
  v28 = qword_2568EE8C0;
  *v27 = qword_2568EE8B8;
  v27[1] = v28;
  swift_storeEnumTagMultiPayload();
  v29 = (_QWORD *)((char *)&v10[v7] + *(int *)(v5 + 48));
  strcpy((char *)&v10[v7], "_productModel");
  HIWORD(v10[v7 + 1]) = -4864;
  v30 = qword_2568EE8D0;
  *v29 = qword_2568EE8C8;
  v29[1] = v30;
  swift_storeEnumTagMultiPayload();
  v31 = (_QWORD *)((char *)v10 + 9 * v7);
  v32 = (_QWORD *)((char *)v31 + *(int *)(v5 + 48));
  *v31 = 0x6973726556736F5FLL;
  v31[1] = 0xEA00000000006E6FLL;
  v33 = qword_2568EE8E0;
  *v32 = qword_2568EE8D8;
  v32[1] = v33;
  swift_storeEnumTagMultiPayload();
  v34 = (_QWORD *)((char *)v10 + 10 * v7);
  v35 = (_QWORD *)((char *)v34 + *(int *)(v5 + 48));
  *v34 = 0x646C6975625FLL;
  v34[1] = 0xE600000000000000;
  v36 = qword_2568EE8F0;
  *v35 = qword_2568EE8E8;
  v35[1] = v36;
  swift_storeEnumTagMultiPayload();
  v37 = (_QWORD *)((char *)v10 + 11 * v7);
  v38 = (_QWORD *)((char *)v37 + *(int *)(v5 + 48));
  *v37 = 0x5674726F7065725FLL;
  v37[1] = 0xEB00000000737265;
  v39 = qword_2568EE900;
  *v38 = qword_2568EE8F8;
  v38[1] = v39;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = sub_2381D5F9C(v9);
  v41 = sub_238204BB4();
  swift_beginAccess();
  if (*v41 == 1)
  {
    v42 = qword_2568EE910;
    v43 = v48;
    *v48 = qword_2568EE908;
    v43[1] = v42;
    swift_storeEnumTagMultiPayload();
    v44 = (uint64_t)v43;
    v45 = v49;
    sub_2381D7FE8(v44, v49);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = v40;
    sub_2381D8964(v45, 0x754E6C6169726553, 0xE90000000000006DLL, isUniquelyReferenced_nonNull_native);
    v40 = v50;
    swift_bridgeObjectRelease();
  }
  return v40;
}

unint64_t sub_23820C028()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = *v0;
  v1 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D98);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_238239E40;
  v7 = (_QWORD *)(v6 + v5);
  v8 = (_QWORD *)(v6 + v5 + *(int *)(v3 + 48));
  *v7 = 0x656C61636F4CLL;
  v7[1] = 0xE600000000000000;
  *v8 = v2;
  v8[1] = v1;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_2381D5F9C(v6);
}

unint64_t sub_23820C0F0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _BYTE *v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8D98);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_238239E50;
  v11 = (_QWORD *)(v10 + v9);
  v12 = (_QWORD *)(v10 + v9 + *(int *)(v6 + 48));
  *v11 = 0x67616265726F7453;
  v11[1] = 0xEF6E6F6973726556;
  *v12 = a2;
  v12[1] = a3;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)((char *)v11 + v8);
  v14 = (char *)v11 + v8 + *(int *)(v6 + 48);
  *v13 = 0xD000000000000013;
  v13[1] = 0x800000023823FDE0;
  *v14 = a1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_2381D5F9C(v10);
}

unint64_t sub_23820C214()
{
  uint64_t v0;

  return sub_23820C0F0(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t _s19CloudTelemetryTools21AllEventFieldProviderV17getProjectVersionSSyFZ_0()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v0 = 960051513;
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_infoDictionary);

  if (!v2)
    return v0;
  v3 = sub_238238588();

  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_2381CC2AC(0x656C646E75424643, 0xEF6E6F6973726556), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_2381CCC94(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_8:
    sub_2381CCCD0((uint64_t)&v8, &qword_2568E8840);
    return v0;
  }
  if (swift_dynamicCast())
    return v7;
  return v0;
}

uint64_t destroy for HTTPHeaderFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPHeaderFieldProvider()
{
  return &type metadata for HTTPHeaderFieldProvider;
}

uint64_t destroy for AllEventFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllEventFieldProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllEventFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AllEventFieldProvider()
{
  return &type metadata for AllEventFieldProvider;
}

ValueMetadata *type metadata accessor for StartEventFieldProvider()
{
  return &type metadata for StartEventFieldProvider;
}

uint64_t sub_23820C970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionHierarchyItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionHierarchyItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EndEventFieldProvider()
{
  return &type metadata for EndEventFieldProvider;
}

void sub_23820CABC()
{
  qword_2568F0160 = MEMORY[0x24BEE4B08];
}

uint64_t sub_23820CAD0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2381EA138(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23820CC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (qword_2568EE918 != -1)
    swift_once();
  v6 = qword_2568F0160;
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  result = sub_23820CAD0(v7, v6);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

_QWORD *sub_23820CCC8(uint64_t a1)
{
  uint64_t v1;

  return sub_23820ED1C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23820CCE0(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820F204(a1, *v1);
}

uint64_t sub_23820CCF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820F4E4(a1, *v1);
}

uint64_t sub_23820CD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t *v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  double *v87;
  _BYTE *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v84 = a3;
  v102 = a1;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE8);
  MEMORY[0x24BDAC7A8](v93);
  v107 = (uint64_t)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v79 - v8;
  v10 = type metadata accessor for ServiceEventValue();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v87 = (double *)((char *)&v79 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v86 = (uint64_t *)((char *)&v79 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v85 = (uint64_t *)((char *)&v79 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v92 = (uint64_t *)((char *)&v79 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v99 = (uint64_t)&v79 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v95 = (uint64_t)&v79 - v24;
  v25 = *(_QWORD *)(a2 + 56);
  v96 = a2 + 56;
  v26 = 1 << *(_BYTE *)(a2 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v97 = (unint64_t)(v26 + 63) >> 6;
  v101 = a2;
  swift_bridgeObjectRetain();
  v29 = 0;
  v89 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v94 = v11;
  if (v28)
    goto LABEL_8;
LABEL_35:
  v54 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v54 < v97)
  {
    v55 = *(_QWORD *)(v96 + 8 * v54);
    ++v29;
    if (v55)
      goto LABEL_48;
    v29 = v54 + 1;
    if (v54 + 1 >= v97)
      goto LABEL_54;
    v55 = *(_QWORD *)(v96 + 8 * v29);
    if (v55)
      goto LABEL_48;
    v29 = v54 + 2;
    if (v54 + 2 >= v97)
      goto LABEL_54;
    v55 = *(_QWORD *)(v96 + 8 * v29);
    if (v55)
    {
LABEL_48:
      v28 = (v55 - 1) & v55;
      for (i = __clz(__rbit64(v55)) + (v29 << 6); ; i = v30 | (v29 << 6))
      {
        v57 = (uint64_t *)(*(_QWORD *)(v101 + 48) + 16 * i);
        v58 = *v57;
        v59 = v57[1];
        v60 = *(_QWORD *)(v102 + 16);
        v61 = *(_QWORD *)(v60 + 16);
        v100 = v58;
        if (v61)
        {
          swift_bridgeObjectRetain_n();
          v62 = sub_2381CC2AC(v58, v59);
          if ((v63 & 1) != 0)
          {
            sub_2381CC88C(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v11 + 72) * v62, (uint64_t)v9);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
          swift_bridgeObjectRetain();
        }
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          swift_bridgeObjectRelease();
          sub_2381CCCD0((uint64_t)v9, (uint64_t *)&unk_2568E7500);
          if (!v28)
            goto LABEL_35;
        }
        else
        {
          sub_2381D7FE8((uint64_t)v9, v95);
          v32 = *(_QWORD *)(v84 + 16);
          if (v32)
          {
            v80 = v9;
            v33 = v94;
            v34 = v84 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
            swift_bridgeObjectRetain();
            v91 = *(_QWORD *)(v33 + 72);
            while (2)
            {
              v98 = v32;
              v35 = v28;
              v36 = v29;
              v37 = v99;
              sub_2381CC88C(v34, v99);
              v38 = (double *)(v107 + *(int *)(v93 + 48));
              v39 = v37;
              v29 = v36;
              v28 = v35;
              sub_2381CC88C(v39, v107);
              sub_2381CC88C(v95, (uint64_t)v38);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              v41 = v92;
              switch(EnumCaseMultiPayload)
              {
                case 0:
                  sub_2381CC88C(v107, (uint64_t)v92);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_13;
                  }
                  v82 = *v41;
                  v81 = sub_238238660();
                  v45 = v44;
                  v83 = v44;
                  swift_bridgeObjectRelease();
                  v105 = v81;
                  v106 = v45;
                  v46 = sub_238238660();
                  v48 = v47;
                  swift_bridgeObjectRelease();
                  v103 = v46;
                  v104 = v48;
                  sub_2381DFC14();
                  v43 = sub_238238978();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_26;
                case 1:
                  sub_2381CC88C(v107, (uint64_t)v85);
                  if (swift_getEnumCaseMultiPayload() != 1)
                    goto LABEL_13;
                  v42 = v85;
                  goto LABEL_20;
                case 2:
                  sub_2381CC88C(v107, (uint64_t)v86);
                  if (swift_getEnumCaseMultiPayload() != 2)
                    goto LABEL_13;
                  v42 = v86;
LABEL_20:
                  v43 = *v42 == *(_QWORD *)v38;
                  goto LABEL_26;
                case 3:
                  sub_2381CC88C(v107, (uint64_t)v87);
                  if (swift_getEnumCaseMultiPayload() != 3)
                    goto LABEL_13;
                  v43 = *v87 == *v38;
                  goto LABEL_26;
                case 4:
                  sub_2381CC88C(v107, (uint64_t)v88);
                  if (swift_getEnumCaseMultiPayload() != 4)
                    goto LABEL_13;
                  v43 = *v88 ^ *(_BYTE *)v38 ^ 1;
LABEL_26:
                  sub_2381F4788(v107);
                  sub_2381F4788(v99);
                  if ((v43 & 1) == 0)
                    goto LABEL_14;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v9 = v80;
                  goto LABEL_34;
                default:
LABEL_13:
                  sub_2381CCCD0(v107, &qword_2568E7AE8);
                  sub_2381F4788(v99);
LABEL_14:
                  v34 += v91;
                  v32 = v98 - 1;
                  if (v98 != 1)
                    continue;
                  swift_bridgeObjectRelease();
                  v9 = v80;
                  break;
              }
              break;
            }
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v89 = sub_2381DCE58(0, v89[2] + 1, 1, v89);
          v50 = v89[2];
          v49 = v89[3];
          v51 = v100;
          if (v50 >= v49 >> 1)
            v89 = sub_2381DCE58((_QWORD *)(v49 > 1), v50 + 1, 1, v89);
          v52 = v89;
          v89[2] = v50 + 1;
          v53 = &v52[2 * v50];
          v53[4] = v51;
          v53[5] = v59;
LABEL_34:
          sub_2381F4788(v95);
          v11 = v94;
          if (!v28)
            goto LABEL_35;
        }
LABEL_8:
        v30 = __clz(__rbit64(v28));
        v28 &= v28 - 1;
      }
    }
    v56 = v54 + 3;
    if (v56 < v97)
    {
      v55 = *(_QWORD *)(v96 + 8 * v56);
      if (v55)
      {
        v29 = v56;
        goto LABEL_48;
      }
      while (1)
      {
        v29 = v56 + 1;
        if (__OFADD__(v56, 1))
          break;
        if (v29 >= v97)
          goto LABEL_54;
        v55 = *(_QWORD *)(v96 + 8 * v29);
        ++v56;
        if (v55)
          goto LABEL_48;
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x23820D5C0);
    }
  }
LABEL_54:
  swift_release();
  v64 = v89;
  v65 = *(_QWORD *)(v102 + 16);
  v66 = v89[2];
  if (v66)
  {
    swift_bridgeObjectRetain();
    v67 = v64 + 5;
    do
    {
      v71 = *(v67 - 1);
      v72 = *v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73 = sub_2381CC2AC(v71, v72);
      v75 = v74;
      swift_bridgeObjectRelease();
      if ((v75 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v105 = v65;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_2381D802C();
          v65 = v105;
        }
        swift_bridgeObjectRelease();
        v70 = v94;
        v69 = v90;
        sub_2381D7FE8(*(_QWORD *)(v65 + 56) + *(_QWORD *)(v94 + 72) * v73, v90);
        sub_2381D8768(v73, v65);
        swift_bridgeObjectRelease();
        v68 = 0;
      }
      else
      {
        v68 = 1;
        v69 = v90;
        v70 = v94;
      }
      v67 += 2;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v69, v68, 1, v10);
      sub_2381CCCD0(v69, (uint64_t *)&unk_2568E7500);
      swift_bridgeObjectRelease();
      --v66;
    }
    while (v66);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v77 = v102;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v77 + 16) = v65;
  return result;
}

uint64_t sub_23820D5D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820CD10(a1, *v1, v1[1]);
}

uint64_t sub_23820D5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t i;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  _QWORD *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char v74;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  _QWORD *v86;
  _QWORD *v87;
  double *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v83 = a3;
  v101 = a1;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7AE8);
  MEMORY[0x24BDAC7A8](v92);
  v106 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v78 - v8;
  v10 = type metadata accessor for ServiceEventValue();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v89 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v88 = (double *)((char *)&v78 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v87 = (uint64_t *)((char *)&v78 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v86 = (uint64_t *)((char *)&v78 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v85 = (uint64_t *)((char *)&v78 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v98 = (uint64_t)&v78 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v94 = (uint64_t)&v78 - v24;
  v25 = *(_QWORD *)(a2 + 56);
  v95 = a2 + 56;
  v26 = 1 << *(_BYTE *)(a2 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v96 = (unint64_t)(v26 + 63) >> 6;
  v100 = a2;
  swift_bridgeObjectRetain();
  v29 = 0;
  v84 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v93 = v11;
  if (!v28)
    goto LABEL_8;
LABEL_4:
  v30 = __clz(__rbit64(v28));
  v28 &= v28 - 1;
  for (i = v30 | (v29 << 6); ; i = __clz(__rbit64(v33)) + (v29 << 6))
  {
    v35 = (uint64_t *)(*(_QWORD *)(v100 + 48) + 16 * i);
    v36 = *v35;
    v37 = v35[1];
    v38 = *(_QWORD *)(v101 + 16);
    v39 = *(_QWORD *)(v38 + 16);
    v99 = v36;
    if (v39)
    {
      swift_bridgeObjectRetain_n();
      v40 = sub_2381CC2AC(v36, v37);
      if ((v41 & 1) != 0)
      {
        sub_2381CC88C(*(_QWORD *)(v38 + 56) + *(_QWORD *)(v11 + 72) * v40, (uint64_t)v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
      swift_bridgeObjectRetain();
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      swift_bridgeObjectRelease();
      sub_2381CCCD0((uint64_t)v9, (uint64_t *)&unk_2568E7500);
      if (v28)
        goto LABEL_4;
    }
    else
    {
      sub_2381D7FE8((uint64_t)v9, v94);
      v42 = *(_QWORD *)(v83 + 16);
      if (v42)
      {
        v79 = v37;
        v43 = v93;
        v44 = v83 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
        swift_bridgeObjectRetain();
        v91 = *(_QWORD *)(v43 + 72);
        while (2)
        {
          v97 = v42;
          v45 = v28;
          v46 = v98;
          sub_2381CC88C(v44, v98);
          v47 = v46;
          v28 = v45;
          v48 = (double *)(v106 + *(int *)(v92 + 48));
          sub_2381CC88C(v47, v106);
          sub_2381CC88C(v94, (uint64_t)v48);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              sub_2381CC88C(v106, (uint64_t)v85);
              if (swift_getEnumCaseMultiPayload())
              {
                swift_bridgeObjectRelease();
                goto LABEL_31;
              }
              v81 = *v85;
              v80 = sub_238238660();
              v52 = v51;
              v82 = v51;
              swift_bridgeObjectRelease();
              v104 = v80;
              v105 = v52;
              v53 = sub_238238660();
              v55 = v54;
              swift_bridgeObjectRelease();
              v102 = v53;
              v103 = v55;
              sub_2381DFC14();
              v50 = sub_238238978();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_44;
            case 1u:
              sub_2381CC88C(v106, (uint64_t)v86);
              if (swift_getEnumCaseMultiPayload() != 1)
                goto LABEL_31;
              v49 = v86;
              goto LABEL_38;
            case 2u:
              sub_2381CC88C(v106, (uint64_t)v87);
              if (swift_getEnumCaseMultiPayload() != 2)
                goto LABEL_31;
              v49 = v87;
LABEL_38:
              v50 = *v49 == *(_QWORD *)v48;
              goto LABEL_44;
            case 3u:
              sub_2381CC88C(v106, (uint64_t)v88);
              if (swift_getEnumCaseMultiPayload() != 3)
                goto LABEL_31;
              v50 = *v88 == *v48;
              goto LABEL_44;
            case 4u:
              sub_2381CC88C(v106, (uint64_t)v89);
              if (swift_getEnumCaseMultiPayload() != 4)
                goto LABEL_31;
              v50 = *v89 ^ *(_BYTE *)v48 ^ 1;
LABEL_44:
              sub_2381F4788(v106);
              sub_2381F4788(v98);
              if ((v50 & 1) == 0)
                goto LABEL_32;
              swift_bridgeObjectRelease();
              v56 = v84;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v84 = sub_2381DCE58(0, v56[2] + 1, 1, v56);
              v58 = v84[2];
              v57 = v84[3];
              v59 = v99;
              if (v58 >= v57 >> 1)
                v84 = sub_2381DCE58((_QWORD *)(v57 > 1), v58 + 1, 1, v84);
              v60 = v84;
              v84[2] = v58 + 1;
              v61 = &v60[2 * v58];
              v62 = v79;
              v61[4] = v59;
              v61[5] = v62;
              goto LABEL_52;
            default:
LABEL_31:
              sub_2381CCCD0(v106, &qword_2568E7AE8);
              sub_2381F4788(v98);
LABEL_32:
              v44 += v91;
              v42 = v97 - 1;
              if (v97 != 1)
                continue;
              swift_bridgeObjectRelease();
              break;
          }
          break;
        }
      }
      swift_bridgeObjectRelease();
LABEL_52:
      sub_2381F4788(v94);
      v11 = v93;
      if (v28)
        goto LABEL_4;
    }
LABEL_8:
    v32 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v32 >= v96)
      goto LABEL_54;
    v33 = *(_QWORD *)(v95 + 8 * v32);
    ++v29;
    if (!v33)
    {
      v29 = v32 + 1;
      if (v32 + 1 >= v96)
        goto LABEL_54;
      v33 = *(_QWORD *)(v95 + 8 * v29);
      if (!v33)
      {
        v29 = v32 + 2;
        if (v32 + 2 >= v96)
          goto LABEL_54;
        v33 = *(_QWORD *)(v95 + 8 * v29);
        if (!v33)
          break;
      }
    }
LABEL_21:
    v28 = (v33 - 1) & v33;
  }
  v34 = v32 + 3;
  if (v34 < v96)
  {
    v33 = *(_QWORD *)(v95 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        v29 = v34 + 1;
        if (__OFADD__(v34, 1))
          break;
        if (v29 >= v96)
          goto LABEL_54;
        v33 = *(_QWORD *)(v95 + 8 * v29);
        ++v34;
        if (v33)
          goto LABEL_21;
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x23820DEC8);
    }
    v29 = v34;
    goto LABEL_21;
  }
LABEL_54:
  swift_release();
  v63 = *(_QWORD *)(v101 + 16);
  v64 = v84;
  v65 = v84[2];
  if (v65)
  {
    swift_bridgeObjectRetain();
    v66 = v64 + 5;
    do
    {
      v70 = *(v66 - 1);
      v71 = *v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72 = sub_2381CC2AC(v70, v71);
      v74 = v73;
      swift_bridgeObjectRelease();
      if ((v74 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v104 = v63;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_2381D802C();
          v63 = v104;
        }
        swift_bridgeObjectRelease();
        v69 = v93;
        v68 = v90;
        sub_2381D7FE8(*(_QWORD *)(v63 + 56) + *(_QWORD *)(v93 + 72) * v72, v90);
        sub_2381D8768(v72, v63);
        swift_bridgeObjectRelease();
        v67 = 0;
      }
      else
      {
        v67 = 1;
        v68 = v90;
        v69 = v93;
      }
      v66 += 2;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v68, v67, 1, v10);
      sub_2381CCCD0(v68, (uint64_t *)&unk_2568E7500);
      swift_bridgeObjectRelease();
      --v65;
    }
    while (v65);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v76 = v101;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v76 + 16) = v63;
  return result;
}

uint64_t sub_23820DEDC(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820D5EC(a1, *v1, v1[1]);
}

uint64_t sub_23820DEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t i;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  int isUniquelyReferenced_nonNull_native;
  int v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  _QWORD *v58;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ServiceEventValue();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v55 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  if (!*(_QWORD *)(a3 + 16))
    return result;
  v50 = v3;
  v16 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v54 = (uint64_t)&v48 - v15;
  sub_2381CC88C(v16, (uint64_t)&v48 - v15);
  v49 = a1;
  v17 = *(_QWORD **)(a1 + 16);
  v18 = *(_QWORD *)(a2 + 56);
  v56 = a2 + 56;
  v19 = 1 << *(_BYTE *)(a2 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v57 = (unint64_t)(v19 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = 0;
  v52 = a2;
  v53 = v10;
  if (v21)
    goto LABEL_25;
LABEL_8:
  v23 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    if (v23 < v57)
    {
      v24 = *(_QWORD *)(v56 + 8 * v23);
      ++v22;
      if (v24)
        goto LABEL_21;
      v22 = v23 + 1;
      if (v23 + 1 >= v57)
        goto LABEL_35;
      v24 = *(_QWORD *)(v56 + 8 * v22);
      if (v24)
        goto LABEL_21;
      v22 = v23 + 2;
      if (v23 + 2 >= v57)
        goto LABEL_35;
      v24 = *(_QWORD *)(v56 + 8 * v22);
      if (v24)
      {
LABEL_21:
        v21 = (v24 - 1) & v24;
        for (i = __clz(__rbit64(v24)) + (v22 << 6); ; i = v33 | (v22 << 6))
        {
          v27 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
          v29 = *v27;
          v28 = v27[1];
          v30 = v17[2];
          swift_bridgeObjectRetain();
          if (v30 && (v31 = sub_2381CC2AC(v29, v28), (v32 & 1) != 0))
          {
            sub_2381CC88C(v17[7] + *(_QWORD *)(v11 + 72) * v31, (uint64_t)v9);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
            swift_bridgeObjectRelease();
            sub_2381CCCD0((uint64_t)v9, (uint64_t *)&unk_2568E7500);
            if (!v21)
              goto LABEL_8;
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
            sub_2381CCCD0((uint64_t)v9, (uint64_t *)&unk_2568E7500);
            sub_2381CC88C(v54, v55);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v58 = v17;
            v36 = sub_2381CC2AC(v29, v28);
            v37 = v17[2];
            v38 = (v35 & 1) == 0;
            v39 = v37 + v38;
            if (__OFADD__(v37, v38))
              goto LABEL_39;
            if (v17[3] >= v39)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v46 = v35;
                sub_2381D802C();
                LOBYTE(v35) = v46;
              }
            }
            else
            {
              v51 = v35;
              sub_2381D7980(v39, isUniquelyReferenced_nonNull_native);
              v40 = sub_2381CC2AC(v29, v28);
              v41 = v35 & 1;
              LOBYTE(v35) = v51;
              if ((v51 & 1) != v41)
                goto LABEL_41;
              v36 = v40;
            }
            v10 = v53;
            v17 = v58;
            if ((v35 & 1) != 0)
            {
              sub_2381DA1A4(v55, v58[7] + *(_QWORD *)(v11 + 72) * v36);
            }
            else
            {
              v58[(v36 >> 6) + 8] |= 1 << v36;
              v42 = (uint64_t *)(v17[6] + 16 * v36);
              *v42 = v29;
              v42[1] = v28;
              sub_2381D7FE8(v55, v17[7] + *(_QWORD *)(v11 + 72) * v36);
              v43 = v17[2];
              v44 = __OFADD__(v43, 1);
              v45 = v43 + 1;
              if (v44)
                goto LABEL_40;
              v17[2] = v45;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v52;
            if (!v21)
              goto LABEL_8;
          }
LABEL_25:
          v33 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
        }
      }
      v25 = v23 + 3;
      if (v25 < v57)
      {
        v24 = *(_QWORD *)(v56 + 8 * v25);
        if (v24)
        {
          v22 = v25;
          goto LABEL_21;
        }
        while (1)
        {
          v22 = v25 + 1;
          if (__OFADD__(v25, 1))
            goto LABEL_38;
          if (v22 >= v57)
            break;
          v24 = *(_QWORD *)(v56 + 8 * v22);
          ++v25;
          if (v24)
            goto LABEL_21;
        }
      }
    }
LABEL_35:
    swift_release();
    sub_2381F4788(v54);
    v47 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v47 + 16) = v17;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_23820E34C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820DEF4(a1, *v1, v1[1]);
}

uint64_t sub_23820E364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v7 = type metadata accessor for ServiceEventValue();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v62 - v14;
  result = MEMORY[0x24BDAC7A8](v13);
  v19 = (uint64_t *)((char *)&v62 - v17);
  if (!*(_QWORD *)(a3 + 16))
    return result;
  v70 = v18;
  sub_2381CC88C(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v62 - v17);
  if (swift_getEnumCaseMultiPayload())
    return sub_2381F4788((uint64_t)v19);
  v72 = (uint64_t *)v15;
  v73 = v8;
  v74 = v7;
  v65 = *v19;
  v66 = v11;
  v20 = v19[1];
  v68 = v3;
  v69 = v20;
  v67 = a1;
  v21 = *(_QWORD **)(a1 + 16);
  v22 = a2 + 56;
  v23 = 1 << *(_BYTE *)(a2 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(a2 + 56);
  v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = 0;
  v71 = v26;
  while (1)
  {
    while (v25)
    {
      v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        v33 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v29);
        v34 = *v33;
        v35 = v33[1];
        swift_bridgeObjectRetain();
        v36 = sub_2381CC2AC(v34, v35);
        if ((v37 & 1) != 0)
        {
          v38 = v22;
          v39 = a2;
          v40 = v21;
          v41 = v21[7];
          v42 = v72;
          v43 = *(_QWORD *)(v73 + 72);
          sub_2381CC88C(v41 + v43 * v36, (uint64_t)v72);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_2381F4788((uint64_t)v42);
            a2 = v39;
            v22 = v38;
            v26 = v71;
            v21 = v40;
          }
          else
          {
            v44 = v42[1];
            v75 = *v42;
            v76 = v44;
            sub_2382386B4();
            v45 = v76;
            v46 = (uint64_t)v70;
            *v70 = v75;
            *(_QWORD *)(v46 + 8) = v45;
            swift_storeEnumTagMultiPayload();
            sub_2381D7FE8(v46, (uint64_t)v66);
            v47 = v40;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v77 = v40;
            v49 = sub_2381CC2AC(v34, v35);
            v50 = v47[2];
            v51 = (v48 & 1) == 0;
            v52 = v50 + v51;
            if (__OFADD__(v50, v51))
              goto LABEL_44;
            if (v47[3] >= v52)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v55 = v77;
                if ((v48 & 1) != 0)
                  goto LABEL_35;
              }
              else
              {
                v63 = v48;
                sub_2381D802C();
                v55 = v77;
                if ((v63 & 1) != 0)
                  goto LABEL_35;
              }
            }
            else
            {
              v63 = v48;
              sub_2381D7980(v52, isUniquelyReferenced_nonNull_native);
              v53 = sub_2381CC2AC(v34, v35);
              if ((v63 & 1) != (v54 & 1))
                goto LABEL_46;
              v49 = v53;
              v55 = v77;
              if ((v63 & 1) != 0)
              {
LABEL_35:
                v56 = v55;
                sub_2381DA1A4((uint64_t)v66, v55[7] + v49 * v43);
                goto LABEL_39;
              }
            }
            v55[(v49 >> 6) + 8] |= 1 << v49;
            v57 = (uint64_t *)(v55[6] + 16 * v49);
            *v57 = v34;
            v57[1] = v35;
            sub_2381D7FE8((uint64_t)v66, v55[7] + v49 * v43);
            v58 = v55[2];
            v59 = __OFADD__(v58, 1);
            v60 = v58 + 1;
            if (v59)
              goto LABEL_45;
            v56 = v55;
            v55[2] = v60;
            swift_bridgeObjectRetain();
LABEL_39:
            a2 = v39;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v22 = v38;
            v26 = v71;
            v21 = v56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 >= v26)
      goto LABEL_40;
    v31 = *(_QWORD *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      v27 = v30 + 1;
      if (v30 + 1 >= v26)
        goto LABEL_40;
      v31 = *(_QWORD *)(v22 + 8 * v27);
      if (!v31)
      {
        v27 = v30 + 2;
        if (v30 + 2 >= v26)
          goto LABEL_40;
        v31 = *(_QWORD *)(v22 + 8 * v27);
        if (!v31)
          break;
      }
    }
LABEL_24:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2])
      goto LABEL_25;
  }
  v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    v61 = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v61 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  v31 = *(_QWORD *)(v22 + 8 * v32);
  if (v31)
  {
    v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    v27 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v27 >= v26)
      goto LABEL_40;
    v31 = *(_QWORD *)(v22 + 8 * v27);
    ++v32;
    if (v31)
      goto LABEL_24;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_23820E808(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820E364(a1, *v1, v1[1]);
}

uint64_t sub_23820E820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  int64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;

  v7 = type metadata accessor for ServiceEventValue();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v62[-v14];
  result = MEMORY[0x24BDAC7A8](v13);
  v19 = (uint64_t *)&v62[-v17];
  if (!*(_QWORD *)(a3 + 16))
    return result;
  v70 = v18;
  sub_2381CC88C(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v62[-v17]);
  if (swift_getEnumCaseMultiPayload())
    return sub_2381F4788((uint64_t)v19);
  v72 = v15;
  v73 = v8;
  v78 = v7;
  v65 = *v19;
  v66 = v11;
  v20 = v19[1];
  v68 = v3;
  v69 = v20;
  v67 = a1;
  v21 = *(_QWORD **)(a1 + 16);
  v22 = a2 + 56;
  v23 = 1 << *(_BYTE *)(a2 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(a2 + 56);
  v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = 0;
  v71 = v26;
  while (1)
  {
    while (v25)
    {
      v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        v33 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v29);
        v34 = *v33;
        v35 = v33[1];
        swift_bridgeObjectRetain();
        v36 = sub_2381CC2AC(v34, v35);
        if ((v37 & 1) != 0)
        {
          v38 = a2;
          v39 = v21;
          v40 = v21[7];
          v41 = v72;
          v42 = *(_QWORD *)(v73 + 72);
          sub_2381CC88C(v40 + v42 * v36, (uint64_t)v72);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_2381F4788((uint64_t)v41);
            a2 = v38;
            v26 = v71;
            v21 = v39;
          }
          else
          {
            v43 = (_QWORD *)*v41;
            v64 = v41[1];
            v76 = v43;
            v77 = v64;
            v74 = v65;
            v75 = v69;
            swift_bridgeObjectRetain();
            v74 = sub_238238708();
            v75 = v44;
            sub_2382386A8();
            swift_bridgeObjectRelease();
            v45 = v75;
            v46 = (uint64_t)v70;
            *v70 = v74;
            *(_QWORD *)(v46 + 8) = v45;
            swift_storeEnumTagMultiPayload();
            sub_2381D7FE8(v46, (uint64_t)v66);
            v47 = v39;
            LODWORD(v64) = swift_isUniquelyReferenced_nonNull_native();
            v76 = v39;
            v49 = sub_2381CC2AC(v34, v35);
            v50 = v47[2];
            v51 = (v48 & 1) == 0;
            v52 = v50 + v51;
            if (__OFADD__(v50, v51))
              goto LABEL_44;
            if (v47[3] >= v52)
            {
              if ((v64 & 1) != 0)
              {
                v55 = v76;
                if ((v48 & 1) != 0)
                  goto LABEL_35;
              }
              else
              {
                v63 = v48;
                sub_2381D802C();
                v55 = v76;
                if ((v63 & 1) != 0)
                  goto LABEL_35;
              }
            }
            else
            {
              v63 = v48;
              sub_2381D7980(v52, v64);
              v53 = sub_2381CC2AC(v34, v35);
              if ((v63 & 1) != (v54 & 1))
                goto LABEL_46;
              v49 = v53;
              v55 = v76;
              if ((v63 & 1) != 0)
              {
LABEL_35:
                v56 = v55;
                sub_2381DA1A4((uint64_t)v66, v55[7] + v49 * v42);
                goto LABEL_39;
              }
            }
            v55[(v49 >> 6) + 8] |= 1 << v49;
            v57 = (uint64_t *)(v55[6] + 16 * v49);
            *v57 = v34;
            v57[1] = v35;
            sub_2381D7FE8((uint64_t)v66, v55[7] + v49 * v42);
            v58 = v55[2];
            v59 = __OFADD__(v58, 1);
            v60 = v58 + 1;
            if (v59)
              goto LABEL_45;
            v56 = v55;
            v55[2] = v60;
            swift_bridgeObjectRetain();
LABEL_39:
            a2 = v38;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v26 = v71;
            v21 = v56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 >= v26)
      goto LABEL_40;
    v31 = *(_QWORD *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      v27 = v30 + 1;
      if (v30 + 1 >= v26)
        goto LABEL_40;
      v31 = *(_QWORD *)(v22 + 8 * v27);
      if (!v31)
      {
        v27 = v30 + 2;
        if (v30 + 2 >= v26)
          goto LABEL_40;
        v31 = *(_QWORD *)(v22 + 8 * v27);
        if (!v31)
          break;
      }
    }
LABEL_24:
    v25 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2])
      goto LABEL_25;
  }
  v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    v61 = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v61 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  v31 = *(_QWORD *)(v22 + 8 * v32);
  if (v31)
  {
    v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    v27 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v27 >= v26)
      goto LABEL_40;
    v31 = *(_QWORD *)(v22 + 8 * v27);
    ++v32;
    if (v31)
      goto LABEL_24;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_23820ED04(uint64_t a1)
{
  uint64_t *v1;

  return sub_23820E820(a1, *v1, v1[1]);
}

_QWORD *sub_23820ED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  unint64_t j;
  uint64_t v32;
  _QWORD *v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 64);
  v54 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v8;
  v55 = (unint64_t)(v9 + 63) >> 6;
  v57 = a2 + 56;
  result = (_QWORD *)swift_bridgeObjectRetain_n();
  v13 = 0;
  v53 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v56 = v6;
  if (v11)
    goto LABEL_7;
LABEL_8:
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_59:
    __break(1u);
    return result;
  }
  if (v16 < v55)
  {
    v17 = *(_QWORD *)(v54 + 8 * v16);
    v18 = v13 + 1;
    if (v17)
      goto LABEL_25;
    v18 = v13 + 2;
    if (v13 + 2 >= v55)
      goto LABEL_49;
    v17 = *(_QWORD *)(v54 + 8 * v18);
    if (v17)
      goto LABEL_25;
    v18 = v13 + 3;
    if (v13 + 3 >= v55)
      goto LABEL_49;
    v17 = *(_QWORD *)(v54 + 8 * v18);
    if (v17)
      goto LABEL_25;
    v18 = v13 + 4;
    if (v13 + 4 >= v55)
      goto LABEL_49;
    v17 = *(_QWORD *)(v54 + 8 * v18);
    if (v17)
      goto LABEL_25;
    v18 = v13 + 5;
    if (v13 + 5 >= v55)
      goto LABEL_49;
    v17 = *(_QWORD *)(v54 + 8 * v18);
    if (v17)
    {
LABEL_25:
      v11 = (v17 - 1) & v17;
      v59 = v18;
      for (i = __clz(__rbit64(v17)) + (v18 << 6); ; i = v14 | (v13 << 6))
      {
        v20 = v7;
        v21 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * i);
        v23 = *v21;
        v22 = v21[1];
        if (*(_QWORD *)(a2 + 16))
        {
          sub_238238CE4();
          swift_bridgeObjectRetain();
          sub_238238684();
          v24 = sub_238238D08();
          v25 = -1 << *(_BYTE *)(a2 + 32);
          v26 = v24 & ~v25;
          if (((*(_QWORD *)(v57 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
          {
            v27 = *(_QWORD *)(a2 + 48);
            v28 = (_QWORD *)(v27 + 16 * v26);
            v29 = *v28 == v23 && v28[1] == v22;
            if (v29 || (sub_238238C0C() & 1) != 0)
            {
LABEL_6:
              result = (_QWORD *)swift_bridgeObjectRelease();
              v7 = v20;
              v6 = v56;
              v13 = v59;
              if (!v11)
                goto LABEL_8;
              goto LABEL_7;
            }
            v30 = ~v25;
            for (j = v26 + 1; ; j = v32 + 1)
            {
              v32 = j & v30;
              if (((*(_QWORD *)(v57 + (((j & v30) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v30)) & 1) == 0)
                break;
              v33 = (_QWORD *)(v27 + 16 * v32);
              v34 = *v33 == v23 && v33[1] == v22;
              if (v34 || (sub_238238C0C() & 1) != 0)
                goto LABEL_6;
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v7 = v20;
          result = v53;
        }
        else
        {
          result = sub_2381DCE58(0, v53[2] + 1, 1, v53);
          v7 = v20;
        }
        v36 = result[2];
        v35 = result[3];
        v6 = v56;
        if (v36 >= v35 >> 1)
          result = sub_2381DCE58((_QWORD *)(v35 > 1), v36 + 1, 1, result);
        result[2] = v36 + 1;
        v53 = result;
        v37 = &result[2 * v36];
        v37[4] = v23;
        v37[5] = v22;
        v13 = v59;
        if (!v11)
          goto LABEL_8;
LABEL_7:
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v59 = v13;
      }
    }
    v19 = v13 + 6;
    if (v13 + 6 < v55)
    {
      v17 = *(_QWORD *)(v54 + 8 * v19);
      if (v17)
      {
        v18 = v13 + 6;
        goto LABEL_25;
      }
      while (1)
      {
        v18 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_59;
        if (v18 >= v55)
          break;
        v17 = *(_QWORD *)(v54 + 8 * v18);
        ++v19;
        if (v17)
          goto LABEL_25;
      }
    }
  }
LABEL_49:
  swift_release();
  v38 = v53[2];
  if (v38)
  {
    v39 = v53 + 5;
    do
    {
      v41 = *(v39 - 1);
      v42 = *v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = sub_2381CC2AC(v41, v42);
      v45 = v44;
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v58 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_2381D802C();
          v7 = v58;
        }
        swift_bridgeObjectRelease();
        v47 = *(_QWORD *)(v7 + 56);
        v48 = type metadata accessor for ServiceEventValue();
        v49 = *(_QWORD *)(v48 - 8);
        v50 = v47 + *(_QWORD *)(v49 + 72) * v43;
        v6 = v56;
        sub_2381D7FE8(v50, (uint64_t)v56);
        sub_2381D8768(v43, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v6, 0, 1, v48);
      }
      else
      {
        v40 = type metadata accessor for ServiceEventValue();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v6, 1, 1, v40);
      }
      v39 += 2;
      sub_2381CCCD0((uint64_t)v6, (uint64_t *)&unk_2568E7500);
      swift_bridgeObjectRelease();
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  v51 = v52;
  result = (_QWORD *)swift_bridgeObjectRelease();
  *(_QWORD *)(v51 + 16) = v7;
  return result;
}

uint64_t sub_23820F204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 56);
  v34 = a2 + 56;
  v9 = 1 << *(_BYTE *)(a2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v35 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v33 = a2;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v35)
      goto LABEL_26;
    v18 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v35)
        goto LABEL_26;
      v18 = *(_QWORD *)(v34 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v35)
          goto LABEL_26;
        v18 = *(_QWORD *)(v34 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_2381CC2AC(v21, v22);
    v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2381D802C();
        v7 = v36;
      }
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v7 + 56);
      v28 = type metadata accessor for ServiceEventValue();
      v29 = *(_QWORD *)(v28 - 8);
      sub_2381D7FE8(v27 + *(_QWORD *)(v29 + 72) * v23, (uint64_t)v6);
      sub_2381D8768(v23, v7);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v6, 0, 1, v28);
      a2 = v33;
    }
    else
    {
      v14 = type metadata accessor for ServiceEventValue();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    sub_2381CCCD0((uint64_t)v6, (uint64_t *)&unk_2568E7500);
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 3;
  if (v19 >= v35)
  {
LABEL_26:
    swift_release();
    v30 = v32;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v30 + 16) = v7;
    return result;
  }
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v35)
      goto LABEL_26;
    v18 = *(_QWORD *)(v34 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23820F4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v58[6];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v68 = sub_238238564();
  v58[5] = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_238238648();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_238238558();
  v65 = *(_QWORD *)(v66 - 8);
  v6 = MEMORY[0x24BDAC7A8](v66);
  v58[4] = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)v58 - v8;
  v9 = type metadata accessor for ServiceEventValue();
  v10 = *(_QWORD **)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v58[3] = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v58[2] = (char *)v58 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v62 = (uint64_t)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v58 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v76 = (uint64_t)v58 - v20;
  v63 = a1;
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a2 + 56);
  v71 = a2 + 56;
  v23 = 1 << *(_BYTE *)(a2 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v72 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  v73 = a2;
  swift_bridgeObjectRetain();
  v26 = 0;
  v69 = xmmword_238239E40;
  v74 = v19;
  v75 = v10;
LABEL_4:
  v27 = v76;
  while (1)
  {
    if (v25)
    {
      v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v77 = v26;
      v29 = v28 | (v26 << 6);
      goto LABEL_23;
    }
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      JUMPOUT(0x2382100ACLL);
    }
    if (v30 >= v72)
      goto LABEL_48;
    v31 = *(_QWORD *)(v71 + 8 * v30);
    v32 = v26 + 1;
    if (!v31)
    {
      v32 = v26 + 2;
      if (v26 + 2 >= v72)
        goto LABEL_48;
      v31 = *(_QWORD *)(v71 + 8 * v32);
      if (!v31)
      {
        v32 = v26 + 3;
        if (v26 + 3 >= v72)
          goto LABEL_48;
        v31 = *(_QWORD *)(v71 + 8 * v32);
        if (!v31)
          break;
      }
    }
LABEL_22:
    v25 = (v31 - 1) & v31;
    v77 = v32;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_23:
    v34 = (uint64_t *)(*(_QWORD *)(v73 + 48) + 16 * v29);
    v36 = *v34;
    v35 = v34[1];
    if (*(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRetain_n();
      v37 = v36;
      v38 = sub_2381CC2AC(v36, v35);
      if ((v39 & 1) != 0)
      {
        v27 = v76;
        sub_2381CC88C(*(_QWORD *)(v21 + 56) + v10[9] * v38, v76);
        v40 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10[7];
        v40(v27, 0, 1, v9);
      }
      else
      {
        v40 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10[7];
        v27 = v76;
        v40(v76, 1, 1, v9);
      }
      swift_bridgeObjectRelease();
      v19 = v74;
    }
    else
    {
      v37 = *v34;
      v40 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10[7];
      v40(v27, 1, 1, v9);
      swift_bridgeObjectRetain();
    }
    v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v10[6];
    if (v41(v27, 1, v9) == 1)
    {
      sub_2381CCCD0(v27, (uint64_t *)&unk_2568E7500);
      if (!*(_QWORD *)(v21 + 16))
        goto LABEL_5;
    }
    else
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        v58[1] = v9;
        v51 = v59;
        sub_23823863C();
        sub_238238618();
        v53 = v52;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v61);
        if (v53 >> 60 == 15)
          v54 = 0xC000000000000000;
        else
          v54 = v53;
        v55 = sub_2381D49C0((unint64_t *)&qword_2568E82C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
        sub_238238540();
        v70 = v55;
        __asm { BR              X9 }
      }
      sub_2381F4788(v27);
      if (!*(_QWORD *)(v21 + 16))
      {
LABEL_5:
        v40((uint64_t)v19, 1, 1, v9);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    v42 = sub_2381CC2AC(v37, v35);
    if ((v43 & 1) != 0)
    {
      v19 = v74;
      sub_2381CC88C(*(_QWORD *)(v21 + 56) + v75[9] * v42, (uint64_t)v74);
      v44 = 0;
    }
    else
    {
      v44 = 1;
      v19 = v74;
    }
    v40((uint64_t)v19, v44, 1, v9);
    swift_bridgeObjectRelease();
    if (v41((uint64_t)v19, 1, v9) != 1)
    {
      sub_2381CCCD0((uint64_t)v19, (uint64_t *)&unk_2568E7500);
      swift_bridgeObjectRetain();
      v45 = sub_2381CC2AC(v37, v35);
      v47 = v46;
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v78 = v21;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_2381D802C();
          v21 = v78;
        }
        swift_bridgeObjectRelease();
        v49 = v62;
        sub_2381D7FE8(*(_QWORD *)(v21 + 56) + v75[9] * v45, v62);
        sub_2381D8768(v45, v21);
        swift_bridgeObjectRelease();
        v50 = 0;
      }
      else
      {
        v50 = 1;
        v49 = v62;
      }
      v40(v49, v50, 1, v9);
      sub_2381CCCD0(v49, (uint64_t *)&unk_2568E7500);
      swift_bridgeObjectRelease();
      v19 = v74;
      v10 = v75;
      v26 = v77;
      goto LABEL_4;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    sub_2381CCCD0((uint64_t)v19, (uint64_t *)&unk_2568E7500);
    v10 = v75;
    v27 = v76;
    v26 = v77;
  }
  v33 = v26 + 4;
  if (v26 + 4 >= v72)
    goto LABEL_48;
  v31 = *(_QWORD *)(v71 + 8 * v33);
  if (v31)
  {
    v32 = v26 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      JUMPOUT(0x2382100B8);
    }
    if (v32 >= v72)
      break;
    v31 = *(_QWORD *)(v71 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_48:
  swift_release();
  v56 = v63;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v56 + 16) = v21;
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventFilterMatcher()
{
  return &type metadata for EventFilterMatcher;
}

uint64_t destroy for EventAllowFilter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19CloudTelemetryTools16EventAllowFilterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EventAllowFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EventAllowFilter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAllowFilter(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventAllowFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAllowFilter()
{
  return &type metadata for EventAllowFilter;
}

uint64_t destroy for EventRemoveFilter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventRemoveFilter()
{
  return &type metadata for EventRemoveFilter;
}

ValueMetadata *type metadata accessor for EventSHA256KeyFilter()
{
  return &type metadata for EventSHA256KeyFilter;
}

ValueMetadata *type metadata accessor for EventAllowValuesFilter()
{
  return &type metadata for EventAllowValuesFilter;
}

ValueMetadata *type metadata accessor for EventDenyValuesFilter()
{
  return &type metadata for EventDenyValuesFilter;
}

ValueMetadata *type metadata accessor for EventInsertStringKeyFilter()
{
  return &type metadata for EventInsertStringKeyFilter;
}

ValueMetadata *type metadata accessor for EventAppendToKeyFilter()
{
  return &type metadata for EventAppendToKeyFilter;
}

_QWORD *_s19CloudTelemetryTools18EventFilterMatcherVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s19CloudTelemetryTools18EventFilterMatcherVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s19CloudTelemetryTools18EventFilterMatcherVwta_0(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EventPrependToKeyFilter()
{
  return &type metadata for EventPrependToKeyFilter;
}

unint64_t sub_238210440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E82E0;
  if (!qword_2568E82E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E7B78);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2568E82E0);
  }
  return result;
}

void sub_238210494(char *a1)
{
  sub_238210678(*a1);
}

void sub_2382104A0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2382104F0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_238210590 + 4 * byte_23823C6CE[a2]))(7496054);
}

uint64_t sub_238210590(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7496054 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_238210678(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2382106C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_238210728 + 4 * byte_23823C6D8[a2]))(0x6E6F6973726576);
}

uint64_t sub_238210728(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E6F6973726576 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_238238C0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2382107D4()
{
  char *v0;

  sub_2382107DC(*v0);
}

void sub_2382107DC(char a1)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_238210828()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_23821089C(char a1)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_2382108EC()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_238210998()
{
  __asm { BR              X10 }
}

uint64_t sub_2382109D0()
{
  sub_238238684();
  return swift_bridgeObjectRelease();
}

void sub_238210A30(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_238210A70()
{
  sub_238238684();
  return swift_bridgeObjectRelease();
}

void sub_238210B08(uint64_t a1)
{
  char *v1;

  sub_238210B10(a1, *v1);
}

void sub_238210B10(uint64_t a1, char a2)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_238210B58()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

void sub_238210BCC(uint64_t a1, char a2)
{
  sub_238238CE4();
  __asm { BR              X10 }
}

uint64_t sub_238210C18()
{
  sub_238238684();
  swift_bridgeObjectRelease();
  return sub_238238D08();
}

uint64_t sub_238210CC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_238211C64();
  *a1 = result;
  return result;
}

uint64_t sub_238210CF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_238210D1C + 4 * byte_23823C6FA[*v0]))();
}

void sub_238210D1C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F6973726576;
  a1[1] = 0xE700000000000000;
}

void sub_238210D38(_QWORD *a1@<X8>)
{
  *a1 = 0x63736A5F343662;
  a1[1] = 0xE700000000000000;
}

void sub_238210D54(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000023823FE20;
}

uint64_t sub_238210D74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_238210DA0 + 4 * byte_23823C6FE[*v0]))(0x747069726373, 0xE600000000000000);
}

uint64_t sub_238210DA0()
{
  return 0x6E6F6973726576;
}

uint64_t sub_238210DB8()
{
  return 0x63736A5F343662;
}

unint64_t sub_238210DD0()
{
  return 0xD000000000000012;
}

uint64_t sub_238210DEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_238211C64();
  *a1 = result;
  return result;
}

uint64_t sub_238210E10()
{
  sub_238212C9C();
  return sub_238238D68();
}

uint64_t sub_238210E38()
{
  sub_238212C9C();
  return sub_238238D74();
}

uint64_t sub_238210E60()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  id v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_2381F46D4();
  sub_2382385A0();
  v1 = sub_2382385E8();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_238211B08(v1, 0x747069726373, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithChar_, *(char *)(v0 + 16));
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_238211B08((uint64_t)v3, 0x6E6F6973726576, 0xE700000000000000, v4);
  swift_bridgeObjectRelease();
  v5 = sub_2382385E8();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_238211B08(v5, 0x63736A5F343662, 0xE700000000000000, v6);
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRetain();
  sub_23821148C(v7);
  swift_bridgeObjectRelease();
  v8 = sub_238238750();
  swift_bridgeObjectRelease();
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_238211B08(v8, 0xD000000000000012, 0x800000023823FE20, v9);
  swift_bridgeObjectRelease();
  v10 = sub_238238570();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_238211054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[2];
  _BYTE v23[16];
  _BYTE v24[16];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];

  v1 = v0;
  sub_2381F46D4();
  v2 = sub_2382385A0();
  v3 = sub_2382385E8();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_238211B08(v3, 0x7972617262696CLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v5 = sub_2382385E8();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  v27[0] = v2;
  sub_238211B08(v5, 7496054, 0xE300000000000000, v6);
  v21 = v2;
  swift_bridgeObjectRelease();
  sub_238211CAC(v1 + 32, (uint64_t)v24);
  sub_238211CAC((uint64_t)v24, (uint64_t)v25);
  if (v25[1])
  {
    v7 = sub_2382385E8();
    v8 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v2;
    sub_238211B08(v7, 0xD000000000000013, 0x800000023823FE40, v8);
    v21 = v27[0];
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  sub_238211CAC(v1 + 48, (uint64_t)v23);
  sub_238211CAC((uint64_t)v23, (uint64_t)v26);
  if (v26[1])
  {
    v9 = sub_2382385E8();
    v10 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v21;
    sub_238211B08(v9, 0xD000000000000012, 0x800000023823FE60, v10);
    v21 = v27[0];
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v1 + 64);
    if (!v11)
      goto LABEL_14;
  }
  else
  {

    v11 = *(_QWORD *)(v1 + 64);
    if (!v11)
      goto LABEL_14;
  }
  v27[0] = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain();
  sub_2381D8538(v12, 0);
  sub_238238768();
  if (v12)
  {
    v13 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2382385E8();
      v14 = swift_bridgeObjectRelease();
      MEMORY[0x23B82F06C](v14);
      if (*(_QWORD *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_238238774();
      v13 += 16;
      sub_23823878C();
      sub_238238768();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  v15 = sub_238238750();
  swift_bridgeObjectRelease();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  v22[0] = v21;
  sub_238211B08(v15, 0xD000000000000011, 0x800000023823FE80, v16);
  swift_bridgeObjectRelease();
LABEL_14:
  sub_238211CAC(v1 + 72, (uint64_t)v22);
  sub_238211CAC((uint64_t)v22, (uint64_t)v27);
  if (v27[1])
  {
    v17 = sub_2382385E8();
    v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_238211B08(v17, 0x69745F7261646172, 0xEB00000000656C74, v18);
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  v19 = sub_238238570();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_23821148C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[5];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_238238AA4();
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 48);
      v8[2] = *(_OWORD *)(v4 + 32);
      v8[3] = v5;
      v8[4] = *(_OWORD *)(v4 + 64);
      v9 = *(_QWORD *)(v4 + 80);
      v6 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v6;
      sub_238212D88((uint64_t)v8);
      sub_238211054();
      sub_238212DF8((uint64_t)v8);
      sub_238238A8C();
      sub_238238AB0();
      sub_238238ABC();
      sub_238238A98();
      v4 += 88;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

double sub_23821156C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_238211CF4(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_2382115AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2382115E0 + 4 * byte_23823C702[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_2382115E0()
{
  return 7496054;
}

unint64_t sub_2382115F0()
{
  return 0xD000000000000013;
}

unint64_t sub_238211628()
{
  return 0xD000000000000011;
}

uint64_t sub_238211644()
{
  return 0x69745F7261646172;
}

uint64_t sub_238211664(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_238211698 + 4 * byte_23823C708[a1]))(0x7972617262696CLL, 0xE700000000000000);
}

uint64_t sub_238211698()
{
  return 7496054;
}

unint64_t sub_2382116A8()
{
  return 0xD000000000000013;
}

unint64_t sub_2382116E0()
{
  return 0xD000000000000011;
}

uint64_t sub_2382116FC()
{
  return 0x69745F7261646172;
}

void sub_23821171C(char *a1)
{
  sub_2382104A0(*a1);
}

void sub_238211728()
{
  char *v0;

  sub_23821089C(*v0);
}

void sub_238211730(uint64_t a1)
{
  char *v1;

  sub_238210A30(a1, *v1);
}

void sub_238211738(uint64_t a1)
{
  char *v1;

  sub_238210BCC(a1, *v1);
}

uint64_t sub_238211740@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_238211F78();
  *a1 = result;
  return result;
}

uint64_t sub_23821176C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2382115AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_238211794()
{
  unsigned __int8 *v0;

  return sub_238211664(*v0);
}

uint64_t sub_23821179C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_238211F78();
  *a1 = result;
  return result;
}

uint64_t sub_2382117C0()
{
  sub_238212C58();
  return sub_238238D68();
}

uint64_t sub_2382117E8()
{
  sub_238212C58();
  return sub_238238D74();
}

double sub_238211810@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_238211FC0(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_238211868(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2381CC2AC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2381D8260();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_238211934(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_238211934(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_238238CE4();
        swift_bridgeObjectRetain();
        sub_238238684();
        v9 = sub_238238D08();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_238211B08(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2381D8260();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_2381D7CDC(v15, a4 & 1);
  v20 = sub_2381CC2AC(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_238238C90();
  __break(1u);
}

uint64_t sub_238211C64()
{
  unint64_t v0;

  v0 = sub_238238B34();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_238211CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_238211CF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8DF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_238212C9C();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v24 = 0;
  v9 = sub_238238B7C();
  v11 = v10;
  v23 = 1;
  swift_bridgeObjectRetain();
  v20 = sub_238238BA0();
  v22 = 2;
  v17[0] = sub_238238B7C();
  v13 = v12;
  v17[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8E00);
  v21 = 3;
  sub_238212CE0();
  v18 = v13;
  swift_bridgeObjectRetain();
  sub_238238B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v19;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  v15 = v18;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v17[0];
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v14;
  return result;
}

uint64_t sub_238211F78()
{
  unint64_t v0;

  v0 = sub_238238B34();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_238211FC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8DF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_238212C58();
  sub_238238D2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v44 = 0;
  v9 = sub_238238B7C();
  v11 = v10;
  v43 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_238238B7C();
  v35 = v9;
  v36 = v12;
  v42 = 2;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_238238B40();
  v37 = v16;
  v31 = v15;
  v34 = v14;
  v41 = 3;
  swift_bridgeObjectRetain();
  v33 = 0;
  v30 = sub_238238B40();
  v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7B78);
  v40 = 4;
  sub_2381E2464();
  swift_bridgeObjectRetain();
  sub_238238B58();
  v32 = v18;
  v19 = v38;
  v39 = 5;
  swift_bridgeObjectRetain();
  v20 = sub_238238B40();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24 = v20;
  v23(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v32;
  swift_bridgeObjectRelease();
  v26 = v37;
  swift_bridgeObjectRelease();
  v27 = v34;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v35;
  a2[1] = v11;
  a2[2] = v36;
  a2[3] = v27;
  a2[4] = v31;
  a2[5] = v26;
  a2[6] = v30;
  a2[7] = v25;
  a2[8] = v19;
  a2[9] = v24;
  a2[10] = v22;
  return result;
}

unint64_t sub_238212400()
{
  unint64_t result;

  result = qword_2568E8DB0;
  if (!qword_2568E8DB0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C724, &type metadata for StorebagSectionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DB0);
  }
  return result;
}

unint64_t sub_238212448()
{
  unint64_t result;

  result = qword_2568E8DB8;
  if (!qword_2568E8DB8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C83C, &type metadata for StorebagSectionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DB8);
  }
  return result;
}

unint64_t sub_238212490()
{
  unint64_t result;

  result = qword_2568E8DC0;
  if (!qword_2568E8DC0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C814, &type metadata for StorebagSectionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DC0);
  }
  return result;
}

unint64_t sub_2382124D8()
{
  unint64_t result;

  result = qword_2568E8DC8;
  if (!qword_2568E8DC8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C88C, &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DC8);
  }
  return result;
}

unint64_t sub_238212520()
{
  unint64_t result;

  result = qword_2568E8DD0;
  if (!qword_2568E8DD0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C9A4, &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DD0);
  }
  return result;
}

unint64_t sub_238212568()
{
  unint64_t result;

  result = qword_2568E8DD8;
  if (!qword_2568E8DD8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C97C, &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DD8);
  }
  return result;
}

uint64_t destroy for StorebagSectionScript()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScript(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScript(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript()
{
  return &type metadata for StorebagSectionScript;
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScript.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_238212824 + 4 * byte_23823C713[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_238212858 + 4 * byte_23823C70E[v4]))();
}

uint64_t sub_238212858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238212860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238212868);
  return result;
}

uint64_t sub_238212874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23821287CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_238212880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238212888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript.CodingKeys()
{
  return &type metadata for StorebagSectionScript.CodingKeys;
}

uint64_t destroy for StorebagSectionScriptRequiredLibraries()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StorebagSectionScriptRequiredLibraries(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StorebagSectionScriptRequiredLibraries(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagSectionScriptRequiredLibraries(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries;
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_238212BD8 + 4 * byte_23823C71D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_238212C0C + 4 * byte_23823C718[v4]))();
}

uint64_t sub_238212C0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238212C14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238212C1CLL);
  return result;
}

uint64_t sub_238212C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238212C30);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_238212C34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238212C3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries.CodingKeys()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys;
}

unint64_t sub_238212C58()
{
  unint64_t result;

  result = qword_2568E8DE0;
  if (!qword_2568E8DE0)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C92C, &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DE0);
  }
  return result;
}

unint64_t sub_238212C9C()
{
  unint64_t result;

  result = qword_2568E8DE8;
  if (!qword_2568E8DE8)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C7C4, &type metadata for StorebagSectionScript.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568E8DE8);
  }
  return result;
}

unint64_t sub_238212CE0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2568E8E08;
  if (!qword_2568E8E08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568E8E00);
    v2 = sub_238212D44();
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2568E8E08);
  }
  return result;
}

unint64_t sub_238212D44()
{
  unint64_t result;

  result = qword_2568E8E10;
  if (!qword_2568E8E10)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C9CC, &type metadata for StorebagSectionScriptRequiredLibraries);
    atomic_store(result, (unint64_t *)&qword_2568E8E10);
  }
  return result;
}

uint64_t sub_238212D88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_238212DF8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_238212E68()
{
  return 0xD000000000000032;
}

uint64_t sub_238212E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_238212EB0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_238212EB0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  sub_2381CDE14(a1, (uint64_t)v6);
  sub_238213284();
  v3 = sub_238238798();
  if (v1)
  {

    sub_2381CDE14(a1, (uint64_t)v6);
    sub_2382132C8();
    v4 = sub_238238798();
  }
  else
  {
    v4 = v3;
  }
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

unint64_t sub_238212FF0()
{
  unint64_t result;

  result = qword_2568E8E18;
  if (!qword_2568E8E18)
  {
    result = MEMORY[0x23B82FD68](&unk_23823CA6C, &type metadata for StorebagSharedValue.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8E18);
  }
  return result;
}

unint64_t sub_238213038()
{
  unint64_t result;

  result = qword_2568E8E20;
  if (!qword_2568E8E20)
  {
    result = MEMORY[0x23B82FD68](&unk_23823CB1C, &type metadata for StorebagSharedValue.Error);
    atomic_store(result, (unint64_t *)&qword_2568E8E20);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSharedValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSharedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2382131C8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_2382131D0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue()
{
  return &type metadata for StorebagSharedValue;
}

uint64_t storeEnumTagSinglePayload for StorebagSharedValue.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_238213228 + 4 * asc_23823CA60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_238213248 + 4 * byte_23823CA65[v4]))();
}

_BYTE *sub_238213228(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_238213248(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238213250(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238213258(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238213260(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238213268(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue.Error()
{
  return &type metadata for StorebagSharedValue.Error;
}

unint64_t sub_238213284()
{
  unint64_t result;

  result = qword_2568E8E28;
  if (!qword_2568E8E28)
  {
    result = MEMORY[0x23B82FD68](&unk_23823A954, &type metadata for StorebagSectionFilter);
    atomic_store(result, (unint64_t *)&qword_2568E8E28);
  }
  return result;
}

unint64_t sub_2382132C8()
{
  unint64_t result;

  result = qword_2568E8E30;
  if (!qword_2568E8E30)
  {
    result = MEMORY[0x23B82FD68](&unk_23823C864, &type metadata for StorebagSectionScript);
    atomic_store(result, (unint64_t *)&qword_2568E8E30);
  }
  return result;
}

uint64_t variable initialization expression of Listener.connectionQueue()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = sub_2382384F8();
  v0 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2382388B8();
  v3 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2382388AC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23823851C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23821352C();
  sub_238238504();
  v14 = MEMORY[0x24BEE4AF8];
  sub_2381D49C0(&qword_2568E8E38, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F60);
  sub_238213568();
  sub_238238990();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v12);
  v9 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BEE5470], v13);
  sub_2382388DC();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v9);
  return sub_2382388D0();
}

unint64_t sub_23821352C()
{
  unint64_t result;

  result = qword_2568E8F50;
  if (!qword_2568E8F50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2568E8F50);
  }
  return result;
}

unint64_t sub_238213568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E8E40;
  if (!qword_2568E8E40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2568E8F60);
    result = MEMORY[0x23B82FD68](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2568E8E40);
  }
  return result;
}

uint64_t variable initialization expression of Listener.clients()
{
  unint64_t v0;
  uint64_t result;

  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_238238AEC())
    v0 = sub_2382158F0(MEMORY[0x24BEE4AF8]);
  else
    v0 = MEMORY[0x24BEE4B08];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8E48);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v0;
  return result;
}

uint64_t sub_238213628()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EF2A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EF2A8);
  return sub_238238438();
}

uint64_t variable initialization expression of Listener.conn()
{
  return 0;
}

uint64_t Listener.__allocating_init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  swift_allocObject();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2381DA494;
  return Listener.init(mode:clientBundleID:)(a1, a2, a3);
}

uint64_t Listener.init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 168) = a3;
  *(_QWORD *)(v4 + 176) = v3;
  *(_QWORD *)(v4 + 160) = a2;
  *(_BYTE *)(v4 + 73) = a1;
  v5 = sub_2382384F8();
  *(_QWORD *)(v4 + 184) = v5;
  *(_QWORD *)(v4 + 192) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  v6 = sub_2382388B8();
  *(_QWORD *)(v4 + 208) = v6;
  *(_QWORD *)(v4 + 216) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  *(_QWORD *)(v4 + 232) = sub_2382388AC();
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  sub_23823851C();
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2382137F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 176);
  sub_23821352C();
  sub_238238504();
  *(_QWORD *)(v0 + 152) = MEMORY[0x24BEE4AF8];
  sub_2381D49C0(&qword_2568E8E38, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F60);
  sub_238213568();
  sub_238238990();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v10, *MEMORY[0x24BEE5758], v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE5470], v3);
  sub_2382388DC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v12 + 16) = sub_2382388D0();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_238238AEC())
    v4 = sub_2382158F0(MEMORY[0x24BEE4AF8]);
  else
    v4 = MEMORY[0x24BEE4B08];
  v5 = *(_QWORD *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E8E48);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 96) = 0;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v7;
  *v7 = v0;
  v7[1] = sub_238213A00;
  return Daemon.init(mode:clientBundleID:)(v0 + 16, *(_BYTE *)(v0 + 73), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
}

uint64_t sub_238213A00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238213A54()
{
  uint64_t v0;
  _OWORD *v1;
  int v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_OWORD **)(v0 + 176);
  v2 = *(unsigned __int8 *)(v0 + 73);
  v3 = *(_OWORD *)(v0 + 16);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)((char *)v1 + 73) = *(_OWORD *)(v0 + 57);
  v1[3] = v4;
  v1[4] = v5;
  v1[2] = v3;
  if (v2)
  {
    v6 = *(_QWORD *)(v0 + 176);
    v7 = *(void **)(v6 + 16);
    if (v2 == 1)
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      XPCConnection.init(serviceName:targetQ:listen:delegate:)(0xD000000000000023, 0x800000023823FF30, v7, 1, v6, (uint64_t)&protocol witness table for Listener);
    }
    else
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      v8 = XPCConnection.init(machService:targetQ:listen:delegate:)(0xD000000000000019, 0x800000023823FF10, v7, 1, v6, (_xpc_connection_s *)&protocol witness table for Listener);
    }
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(void **)(v9 + 16);
    type metadata accessor for XPCConnection();
    swift_allocObject();
    v11 = v10;
    swift_retain();
    v8 = (uint64_t)XPCConnection.init(targetQ:delegate:)(v11, v9, (uint64_t)&protocol witness table for Listener);
  }
  v12 = v8;
  v13 = *(_QWORD *)(v0 + 176);
  swift_beginAccess();
  *(_QWORD *)(v13 + 96) = v12;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

_xpc_connection_s *Listener.connection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _xpc_connection_s *result;
  uint64_t v8;

  result = (_xpc_connection_s *)swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 96);
  if (v8)
  {
    type metadata accessor for XPCConnection();
    swift_allocObject();
    swift_unknownObjectRetain();
    swift_retain();
    return XPCConnection.init(listener:targetQ:delegate:)(v8, a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Listener.handle(message:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _xpc_connection_s *v18;
  pid_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  pid_t pid;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v31;
  _QWORD *v32;
  _DWORD v33[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for XPCObject();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v33 - v15;
  v17 = swift_unknownObjectRetain();
  v18 = (_xpc_connection_s *)XPCIncomingConnection.init(conn:)(v17);
  XPCIncomingConnection.entitlementValue(forKey:)((uint64_t)v16);
  sub_238215C28((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_2381CCCD0((uint64_t)v14, (uint64_t *)&unk_2568E7AC0);
LABEL_14:
    pid = xpc_connection_get_pid(v18);
    if (qword_2568EF2A0 != -1)
      swift_once();
    v26 = sub_238238444();
    __swift_project_value_buffer(v26, (uint64_t)qword_2568EF2A8);
    v27 = sub_23823842C();
    v28 = sub_23823887C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 67240192;
      v33[2] = pid;
      sub_238238960();
      _os_log_impl(&dword_2381C6000, v27, v28, "connection attempted by unentitled process %{public}d", v29, 8u);
      MEMORY[0x23B82FE28](v29, -1, -1);
    }

    xpc_connection_cancel(v18);
    swift_unknownObjectRelease();
    return sub_2381CCCD0((uint64_t)v16, (uint64_t *)&unk_2568E7AC0);
  }
  sub_238215C70((uint64_t)v14, (uint64_t)v10);
  sub_238215CB4((uint64_t)v10, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_238215CF8((uint64_t)v10);
    v24 = (uint64_t)v8;
LABEL_13:
    sub_238215CF8(v24);
    goto LABEL_14;
  }
  if ((*v8 & 1) == 0)
  {
    v24 = (uint64_t)v10;
    goto LABEL_13;
  }
  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
  {
    v19 = xpc_connection_get_pid(v18);
    if (qword_2568EF2A0 != -1)
      swift_once();
    v20 = sub_238238444();
    __swift_project_value_buffer(v20, (uint64_t)qword_2568EF2A8);
    v21 = sub_23823842C();
    v22 = sub_23823887C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 67240192;
      v33[1] = v19;
      sub_238238960();
      _os_log_impl(&dword_2381C6000, v21, v22, "rejecting connection from %{public}d while reporting is disabled", v23, 8u);
      MEMORY[0x23B82FE28](v23, -1, -1);
    }

    xpc_connection_cancel(v18);
  }
  else
  {
    v31 = sub_2382387E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v3, 1, 1, v31);
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = 0;
    v32[3] = 0;
    v32[4] = v0;
    v32[5] = v18;
    swift_retain();
    swift_unknownObjectRetain();
    sub_2381CBA70((uint64_t)v3, (uint64_t)&unk_2568E8E68, (uint64_t)v32);
    swift_release();
  }
  swift_unknownObjectRelease();
  sub_238215CF8((uint64_t)v10);
  return sub_2381CCCD0((uint64_t)v16, (uint64_t *)&unk_2568E7AC0);
}

uint64_t sub_238214144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch();
}

uint64_t sub_23821415C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[5];
  result = swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 56);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = (_QWORD *)v0[5];
  v5 = v4[8];
  if (!v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = v4[9];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v4[10];
  if (v7)
  {
    type metadata accessor for Client();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v8 = (_QWORD *)swift_task_alloc();
    v0[7] = (uint64_t)v8;
    *v8 = v0;
    v8[1] = sub_238214264;
    return sub_238215FC4(v3, v5, v6, v7, v0[5], v0[6]);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_238214264(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2382142C0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 40) + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_238215DE8();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238214338()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_238215380();
  swift_release();
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t Listener.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Listener.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_238214488(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_2382389CC();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for Client();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2382389C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_238214750(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_238214970();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_238214C80(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for Client();
  sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
  swift_bridgeObjectRetain();
  v10 = sub_2382385B8();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_238214D4C(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_2381D49C0(&qword_2568E8F28, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
  while ((sub_2382385DC() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_238214750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F30);
    v2 = sub_238238A08();
    v14 = v2;
    sub_2382389B4();
    if (sub_2382389D8())
    {
      type metadata accessor for Client();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_238214970();
          v2 = v14;
        }
        sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
        result = sub_2382385B8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_2382389D8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_238214970()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F30);
  v2 = sub_2382389FC();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      type metadata accessor for Client();
      sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
      result = sub_2382385B8();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_238214C80(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  type metadata accessor for Client();
  sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
  sub_2382385B8();
  result = sub_2382389A8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_238214D4C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_238214970();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_238214EF4();
      goto LABEL_12;
    }
    sub_23821509C();
  }
  v8 = *v3;
  type metadata accessor for Client();
  sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
  result = sub_2382385B8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_2381D49C0(&qword_2568E8F28, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
    do
    {
      result = sub_2382385DC();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_238238C84();
  __break(1u);
  return result;
}

void *sub_238214EF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F30);
  v2 = *v0;
  v3 = sub_2382389F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23821509C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F30);
  v2 = sub_2382389FC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    type metadata accessor for Client();
    sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
    swift_retain();
    result = sub_2382385B8();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_238215380()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_2382389E4();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_23821556C();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  type metadata accessor for Client();
  sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
  swift_bridgeObjectRetain();
  v4 = sub_2382385B8();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_8;
  v7 = ~v5;
  sub_2381D49C0(&qword_2568E8F28, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
  while ((sub_2382385DC() & 1) == 0)
  {
    v6 = (v6 + 1) & v7;
    if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v0;
  v11 = *v0;
  *v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_238214EF4();
    v10 = v11;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_23821571C(v6);
  *v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23821556C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v1 = sub_2382389C0();
  v2 = swift_unknownObjectRetain();
  v3 = sub_238214750(v2, v1);
  v10 = v3;
  type metadata accessor for Client();
  sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
  swift_retain();
  v4 = sub_2382385B8();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    sub_2381D49C0(&qword_2568E8F28, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
    while ((sub_2382385DC() & 1) == 0)
    {
      v6 = (v6 + 1) & v7;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    sub_23821571C(v6);
    if ((sub_2382385DC() & 1) != 0)
    {
      *v0 = v10;
      return v8;
    }
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_23821571C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      type metadata accessor for Client();
      sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
      do
      {
        v10 = sub_2382385B8() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_QWORD *)(v13 + 8 * v2);
            v15 = (_QWORD *)(v13 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_2382158F0(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238238AEC();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F30);
      result = sub_238238A14();
      v3 = result;
      v18 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_238238AEC();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v18 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v17 = v4;
  while ((v18 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x23B82F36C](v6, v18);
    v8 = __OFADD__(v6++, 1);
    if (v8)
      goto LABEL_26;
LABEL_18:
    v19 = result;
    type metadata accessor for Client();
    sub_2381D49C0((unint64_t *)&unk_2568E8F90, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC98);
    result = sub_2382385B8();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = ~v9;
      sub_2381D49C0(&qword_2568E8F28, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
      do
      {
        result = sub_2382385DC();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v17;
          goto LABEL_11;
        }
        v10 = (v10 + 1) & v14;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v7 + 8 * (v10 >> 6));
        v13 = 1 << v10;
      }
      while ((v12 & (1 << v10)) != 0);
      v4 = v17;
    }
    *(_QWORD *)(v7 + 8 * v11) = v13 | v12;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v19;
    v15 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v15, 1);
    v16 = v15 + 1;
    if (v8)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v16;
LABEL_11:
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v8 = __OFADD__(v6++, 1);
  if (!v8)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void _s19CloudTelemetryTools8ListenerC6handle5errorySo13OS_xpc_object_p_tF_0()
{
  MEMORY[0x23B830074]();
  sub_2382386C0();
  sub_238238A20();
  swift_bridgeObjectRelease();
  sub_2382386B4();
  sub_238238AE0();
  __break(1u);
}

uint64_t sub_238215C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_238215C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_238215CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_238215CF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238215D34()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_238215D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_2381CB914;
  *(_OWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t type metadata accessor for Listener()
{
  return objc_opt_self();
}

uint64_t sub_238215DE8()
{
  uint64_t v0;
  uint64_t v2;

  swift_retain();
  sub_238214488(&v2, v0);
  return swift_release();
}

uint64_t sub_238215E28(char a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFFFE | a1 & 1;
}

uint64_t sub_238215E48@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5 & 1;
  *(_BYTE *)(a8 + 33) = HIBYTE(a5) & 1;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_238215E68()
{
  __int128 *v0;
  uint64_t v2;
  __int128 v3;

  v3 = *v0;
  v2 = v3;
  sub_2381DDE94((uint64_t)&v3);
  sub_2382386B4();
  swift_bridgeObjectRetain();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_238215EE0()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EF2C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EF2C8);
  return sub_238238438();
}

uint64_t sub_238215F50()
{
  uint64_t v0;

  if (qword_2568EF2C0 != -1)
    swift_once();
  v0 = sub_238238444();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2568EF2C8);
}

uint64_t sub_238215F98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_238215FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  swift_allocObject();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_238216064;
  return sub_2382160B4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_238216064(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2382160B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t isStackAllocationSafe;
  _BYTE *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v7 + 88) = a6;
  *(_QWORD *)(v7 + 96) = v6;
  *(_QWORD *)(v7 + 72) = a4;
  *(_QWORD *)(v7 + 80) = a5;
  *(_QWORD *)(v7 + 56) = a2;
  *(_QWORD *)(v7 + 64) = a3;
  *(_QWORD *)(v7 + 48) = a1;
  v13 = sub_2382384F8();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  v14 = swift_task_alloc();
  *(_QWORD *)(v7 + 104) = v14;
  v15 = sub_2382388B8();
  v31 = *(_QWORD *)(v15 - 8);
  v32 = v15;
  v34 = swift_task_alloc();
  *(_QWORD *)(v7 + 112) = v34;
  sub_2382388AC();
  v33 = swift_task_alloc();
  *(_QWORD *)(v7 + 120) = v33;
  sub_23823851C();
  v30 = swift_task_alloc();
  *(_QWORD *)(v7 + 128) = v30;
  swift_defaultActor_initialize();
  v6[14] = 0;
  v6[18] = a1;
  v6[19] = a2;
  v6[20] = a3;
  v6[21] = a4;
  v6[22] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v7 + 136) = XPCIncomingConnection.auditToken.getter();
  *(_DWORD *)(v7 + 144) = v16;
  *(_DWORD *)(v7 + 148) = v17;
  *(_DWORD *)(v7 + 152) = v18;
  *(_DWORD *)(v7 + 156) = v19;
  *(_DWORD *)(v7 + 160) = v20;
  *(_DWORD *)(v7 + 164) = v21;
  isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
  if ((isStackAllocationSafe & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    sub_238216658(&v28, (audit_token_t *)(v7 + 136), (uint64_t)v29, &v37);
  }
  else
  {
    v23 = (_BYTE *)swift_slowAlloc();
    sub_238216658(v23, (audit_token_t *)(v7 + 136), (uint64_t)(v23 + 4096), &v37);
    MEMORY[0x23B82FE28](v23, -1, -1);
  }
  v24 = v38;
  v6[16] = v37;
  v6[17] = v24;
  sub_23821352C();
  v37 = 0;
  v38 = 0xE000000000000000;
  sub_238238A20();
  swift_bridgeObjectRelease();
  v37 = 0xD000000000000020;
  v38 = 0x8000000238240040;
  swift_bridgeObjectRetain();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  v29[0] = v38;
  v29[1] = v37;
  sub_238238504();
  *(_QWORD *)(v7 + 40) = MEMORY[0x24BEE4AF8];
  sub_238200C64(&qword_2568E8E38, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F60);
  sub_238213568();
  sub_238238990();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v31 + 104))(v34, *MEMORY[0x24BEE5758], v32);
  v26 = v35;
  v25 = v36;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v14, *MEMORY[0x24BEE5470], v36);
  sub_2382388DC();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v14, v25);
  v6[15] = sub_2382388D0();
  return swift_task_switch();
}

uint64_t sub_238216504()
{
  uint64_t v0;
  uint64_t v1;
  _xpc_connection_s *v2;
  id v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_xpc_connection_s **)(v0 + 88);
  v3 = *(id *)(v1 + 120);
  swift_retain();
  v4 = XPCIncomingConnection.makeConnection(targetQ:delegate:)(v3, v1, (uint64_t)&off_2509FA578, v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = v4;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_238216658@<X0>(_BYTE *buffer@<X0>, audit_token_t *audittoken@<X2>, uint64_t a3@<X1>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[8];
  _QWORD *v21;
  _QWORD v22[2];

  *buffer = 0;
  if (!buffer)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a3 - (uint64_t)buffer >= 0x100000000)
  {
LABEL_9:
    result = sub_238238AD4();
    __break(1u);
    return result;
  }
  result = proc_pidpath_audittoken(audittoken, buffer, a3 - (_DWORD)buffer);
  if ((int)result < 1)
  {
    v8 = 0xE700000000000000;
    v6 = 0x6E776F6E6B6E75;
  }
  else
  {
    v6 = sub_2382386CC();
    v8 = v7;
    v22[0] = 47;
    v22[1] = 0xE100000000000000;
    MEMORY[0x24BDAC7A8](v6);
    v21 = v22;
    swift_bridgeObjectRetain();
    sub_238223714(sub_23822385C, (uint64_t)v20, v6, v8);
    v10 = v9;
    result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v11 = sub_238238690();
      swift_bridgeObjectRelease();
      v12 = sub_2382238B0(v11, v6, v8);
      v14 = v13;
      v16 = v15;
      v18 = v17;
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x23B82EFA0](v12, v14, v16, v18);
      v8 = v19;
      result = swift_bridgeObjectRelease();
    }
  }
  *a4 = v6;
  a4[1] = v8;
  return result;
}

uint64_t type metadata accessor for Client()
{
  return objc_opt_self();
}

void sub_238216854()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v0);
  swift_unknownObjectRetain();
  XPCMessage.init(fromXPC:)();
}

void sub_2382168BC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  if (a1)
  {
    v7 = sub_2382387E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = v2;
    *(_QWORD *)(v8 + 40) = a1;
    *(_BYTE *)(v8 + 48) = a2;
    swift_retain();
    sub_2381CBA70(v3, (uint64_t)&unk_2568E8F88, v8);
    swift_release();
  }
  else
  {
    if (qword_2568EF2C0 != -1)
      swift_once();
    v9 = sub_238238444();
    __swift_project_value_buffer(v9, (uint64_t)qword_2568EF2C8);
    swift_retain();
    *(_QWORD *)(v4 - 88) = sub_23823842C();
    v10 = sub_23823887C();
    if (os_log_type_enabled(*(os_log_t *)(v4 - 88), v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_QWORD *)(v4 - 72) = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = *(_QWORD *)(v2 + 128);
      v14 = *(_QWORD *)(v2 + 136);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v4 - 80) = sub_2381CBC6C(v13, v14, (uint64_t *)(v4 - 72));
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_2381C6000, *(os_log_t *)(v4 - 88), v10, "received invalid XPC message from %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v12, -1, -1);
      MEMORY[0x23B82FE28](v11, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

uint64_t sub_238216AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_2381CCDE0;
  return sub_238216B2C(a5, a6);
}

uint64_t sub_238216B2C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 784) = v2;
  *(_BYTE *)(v3 + 1644) = a2;
  *(_QWORD *)(v3 + 776) = a1;
  *(_QWORD *)(v3 + 792) = *v2;
  v4 = *(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  *(_QWORD *)(v3 + 800) = v4;
  *(_QWORD *)(v3 + 808) = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v3 + 816) = swift_task_alloc();
  *(_QWORD *)(v3 + 824) = swift_task_alloc();
  v5 = sub_238238444();
  *(_QWORD *)(v3 + 832) = v5;
  *(_QWORD *)(v3 + 840) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 848) = swift_task_alloc();
  *(_QWORD *)(v3 + 856) = swift_task_alloc();
  *(_QWORD *)(v3 + 864) = swift_task_alloc();
  *(_QWORD *)(v3 + 872) = swift_task_alloc();
  *(_QWORD *)(v3 + 880) = swift_task_alloc();
  *(_QWORD *)(v3 + 888) = swift_task_alloc();
  *(_QWORD *)(v3 + 896) = swift_task_alloc();
  *(_QWORD *)(v3 + 904) = swift_task_alloc();
  *(_QWORD *)(v3 + 912) = swift_task_alloc();
  *(_QWORD *)(v3 + 920) = swift_task_alloc();
  *(_QWORD *)(v3 + 928) = swift_task_alloc();
  *(_QWORD *)(v3 + 936) = swift_task_alloc();
  *(_QWORD *)(v3 + 944) = swift_task_alloc();
  *(_QWORD *)(v3 + 952) = swift_task_alloc();
  *(_QWORD *)(v3 + 960) = swift_task_alloc();
  *(_QWORD *)(v3 + 968) = swift_task_alloc();
  *(_QWORD *)(v3 + 976) = swift_task_alloc();
  *(_QWORD *)(v3 + 984) = swift_task_alloc();
  *(_QWORD *)(v3 + 992) = swift_task_alloc();
  *(_QWORD *)(v3 + 1000) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  *(_QWORD *)(v3 + 1008) = swift_task_alloc();
  *(_QWORD *)(v3 + 1016) = swift_task_alloc();
  *(_QWORD *)(v3 + 1024) = swift_task_alloc();
  *(_QWORD *)(v3 + 1032) = swift_task_alloc();
  v6 = sub_23823830C();
  *(_QWORD *)(v3 + 1040) = v6;
  *(_QWORD *)(v3 + 1048) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 1056) = swift_task_alloc();
  *(_QWORD *)(v3 + 1064) = swift_task_alloc();
  *(_QWORD *)(v3 + 1072) = type metadata accessor for CachedSession();
  *(_QWORD *)(v3 + 1080) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  *(_QWORD *)(v3 + 1088) = swift_task_alloc();
  *(_QWORD *)(v3 + 1096) = swift_task_alloc();
  *(_QWORD *)(v3 + 1104) = swift_task_alloc();
  *(_QWORD *)(v3 + 1112) = swift_task_alloc();
  *(_QWORD *)(v3 + 1120) = swift_task_alloc();
  *(_QWORD *)(v3 + 1128) = swift_task_alloc();
  *(_QWORD *)(v3 + 1136) = swift_task_alloc();
  *(_QWORD *)(v3 + 1144) = swift_task_alloc();
  *(_QWORD *)(v3 + 1152) = swift_task_alloc();
  return swift_task_switch();
}

void sub_238216DEC()
{
  __asm { BR              X10 }
}

uint64_t sub_238216E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  void **v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  xpc_object_t reply;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _xpc_connection_s *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  int v74;
  uint64_t v75;
  void *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t);
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  xpc_object_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  _xpc_connection_s *v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  _BOOL4 v114;
  uint8_t *v115;
  uint64_t v116;
  int v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t);
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  os_log_type_t v131;
  uint8_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  xpc_object_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  _xpc_connection_s *v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  BOOL v149;
  uint8_t *v150;
  uint64_t v151;
  uint64_t v152;
  double v153;
  double v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;

  *(_QWORD *)(v7 - 136) = v0;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 160) = v3;
  *(_QWORD *)(v7 - 152) = v2;
  *(_QWORD *)(v7 - 144) = v1;
  if (qword_2568EF2C0 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v5 + 832), (uint64_t)qword_2568EF2C8);
  v8 = sub_23823842C();
  v9 = sub_238238864();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_2381C6000, v8, v9, "SendOneMessage Request Received", v10, 2u);
    MEMORY[0x23B82FE28](v10, -1, -1);
  }
  v11 = *(_QWORD *)(v5 + 1152);
  v12 = *(void **)(v5 + 776);

  MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(v12, v11);
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for XPCObject();
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  v15 = v14(v11, 1, v13);
  v16 = *(void ***)(v5 + 1152);
  if (v15 == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() != 12)
  {
LABEL_14:
    sub_2381CCA1C((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    goto LABEL_15;
  }
  v17 = *(_QWORD *)(v5 + 1144);
  *(_QWORD *)(v7 - 168) = v14;
  v18 = *(void **)(v5 + 776);
  v19 = *v16;
  *(_QWORD *)(v5 + 1160) = *v16;
  MessageKeys.sendOneMessageEvent.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v20 = v18;
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168);
  XPCDictionary.subscript.getter(v20, v17);
  swift_bridgeObjectRelease();
  v22 = v21(v17, 1, v13);
  v16 = *(void ***)(v5 + 1144);
  if (v22 == 1)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_2381CCCD0((uint64_t)v16, (uint64_t *)&unk_2568E7AC0);
LABEL_15:
    v26 = *(_QWORD *)(v5 + 912);
    v27 = *(_QWORD *)(v5 + 840);
    v28 = *(_QWORD *)(v5 + 784);
    v29 = sub_238215F50();
    v30 = *(void (**)(uint64_t))(v27 + 16);
    *(_QWORD *)(v7 - 136) = v29;
    v30(v26);
    swift_retain();
    v31 = sub_23823842C();
    v32 = sub_23823887C();
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = 34;
    v34 = swift_allocObject();
    *(_BYTE *)(v34 + 16) = 8;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_238223A18;
    *(_QWORD *)(v35 + 24) = v28;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = sub_2382230D0;
    *(_QWORD *)(v36 + 24) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_23823C420;
    *(_QWORD *)(v37 + 32) = sub_2382230AC;
    *(_QWORD *)(v37 + 40) = v33;
    *(_QWORD *)(v37 + 48) = sub_238223A14;
    *(_QWORD *)(v37 + 56) = v34;
    *(_QWORD *)(v37 + 64) = sub_2382230F0;
    *(_QWORD *)(v37 + 72) = v36;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v38 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)(v7 - 112) = 0;
      *(_QWORD *)(v7 - 104) = v40;
      *(_WORD *)v39 = 258;
      v39[2] = *(_BYTE *)(v33 + 16);
      swift_release();
      v39[3] = *(_BYTE *)(v34 + 16);
      *(_QWORD *)(v7 - 120) = v39 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)(v7 - 120), v7 - 112, (uint64_t *)(v7 - 104), *(uint64_t (**)(void))(v36 + 16));
      *(_QWORD *)(v7 - 144) = *(_QWORD *)(v5 + 912);
      v41 = v30;
      v42 = *(_QWORD *)(v5 + 840);
      v43 = *(_QWORD *)(v5 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, v31, v38, "missing required values for sendOneMessage from %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v40, -1, -1);
      MEMORY[0x23B82FE28](v39, -1, -1);

      v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v30 = v41;
      v44(*(_QWORD *)(v7 - 144), v43);
    }
    else
    {
      v45 = *(_QWORD *)(v5 + 912);
      v46 = *(_QWORD *)(v5 + 840);
      v47 = *(_QWORD *)(v5 + 832);

      swift_release();
      swift_release();
      swift_release();
      v44 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v44(v45, v47);
    }
    reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v5 + 776));
    if (!reply)
      goto LABEL_26;
    v49 = reply;
    v50 = *(_QWORD *)(v5 + 784);
    xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage fields");
    swift_beginAccess();
    v51 = *(_QWORD *)(v50 + 112);
    if (v51)
    {
      swift_beginAccess();
      v52 = *(_xpc_connection_s **)(v51 + 16);
      if (v52)
      {
        v53 = *(_QWORD *)(v5 + 904);
        v54 = *(_QWORD *)(v5 + 832);
        xpc_connection_send_message(v52, v49);
        ((void (*)(uint64_t, _QWORD, uint64_t))v30)(v53, *(_QWORD *)(v7 - 136), v54);
        v55 = sub_23823842C();
        v56 = sub_238238864();
        v57 = os_log_type_enabled(v55, v56);
        v58 = *(_QWORD *)(v5 + 904);
        v59 = *(_QWORD *)(v5 + 832);
        if (!v57)
        {

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        v60 = (uint8_t *)swift_slowAlloc();
        *(_QWORD *)(v7 - 112) = 0;
        *(_QWORD *)(v7 - 104) = 0;
        *(_WORD *)v60 = 0;
        *(_QWORD *)(v7 - 120) = v60 + 2;
        sub_238222B8C(MEMORY[0x24BEE4AF8], v7 - 120, v7 - 112, v7 - 104);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v55, v56, "SendOneMessage Error Reply Sent", v60, 2u);
        MEMORY[0x23B82FE28](v60, -1, -1);

LABEL_23:
        swift_unknownObjectRelease();
LABEL_25:
        v44(v58, v59);
LABEL_26:
        v61 = *(_QWORD *)(v5 + 864);
        *(_QWORD *)(v7 - 168) = *(_QWORD *)(v5 + 872);
        *(_QWORD *)(v7 - 160) = v61;
        v62 = *(_QWORD *)(v5 + 848);
        *(_QWORD *)(v7 - 152) = *(_QWORD *)(v5 + 856);
        *(_QWORD *)(v7 - 144) = v62;
        v63 = *(_QWORD *)(v5 + 816);
        *(_QWORD *)(v7 - 136) = *(_QWORD *)(v5 + 824);
        *(_QWORD *)(v7 - 128) = v63;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v5 + 8))();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_78;
  }
  if (swift_getEnumCaseMultiPayload() != 12)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v23 = *(_QWORD *)(v5 + 1136);
  *(_QWORD *)(v5 + 1168) = *v16;
  MessageKeys.eventType.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 - 128) = v19;
  XPCDictionary.subscript.getter(v19, v23);
  swift_bridgeObjectRelease();
  v24 = v21(v23, 1, v13);
  v25 = *(uint64_t **)(v5 + 1136);
  if (v24 == 1)
  {
    sub_2381CCCD0((uint64_t)v25, (uint64_t *)&unk_2568E7AC0);
LABEL_44:
    v84 = *(_QWORD *)(v5 + 928);
    v85 = *(_QWORD *)(v5 + 840);
    v86 = *(_QWORD *)(v5 + 784);
    v87 = sub_238215F50();
    v88 = *(void (**)(uint64_t))(v85 + 16);
    *(_QWORD *)(v7 - 152) = v87;
    v88(v84);
    swift_retain();
    v89 = sub_23823842C();
    v90 = sub_23823887C();
    v91 = swift_allocObject();
    *(_BYTE *)(v91 + 16) = 34;
    v92 = swift_allocObject();
    *(_BYTE *)(v92 + 16) = 8;
    v93 = swift_allocObject();
    *(_QWORD *)(v93 + 16) = sub_238223A18;
    *(_QWORD *)(v93 + 24) = v86;
    v94 = swift_allocObject();
    *(_QWORD *)(v94 + 16) = sub_2382238FC;
    *(_QWORD *)(v94 + 24) = v93;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
    v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = xmmword_23823C420;
    *(_QWORD *)(v95 + 32) = sub_238223A14;
    *(_QWORD *)(v95 + 40) = v91;
    *(_QWORD *)(v95 + 48) = sub_238223A14;
    *(_QWORD *)(v95 + 56) = v92;
    *(_QWORD *)(v95 + 64) = sub_238223900;
    *(_QWORD *)(v95 + 72) = v94;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v96 = v90;
    if (os_log_type_enabled(v89, v90))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      v98 = swift_slowAlloc();
      *(_QWORD *)(v7 - 112) = 0;
      *(_QWORD *)(v7 - 104) = v98;
      *(_WORD *)v97 = 258;
      v97[2] = *(_BYTE *)(v91 + 16);
      swift_release();
      v97[3] = *(_BYTE *)(v92 + 16);
      *(_QWORD *)(v7 - 120) = v97 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)(v7 - 120), v7 - 112, (uint64_t *)(v7 - 104), *(uint64_t (**)(void))(v94 + 16));
      v99 = *(_QWORD *)(v5 + 928);
      v100 = *(_QWORD *)(v5 + 840);
      v101 = *(_QWORD *)(v5 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, v89, v96, "missing required values in create session from %{public}s", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v98, -1, -1);
      MEMORY[0x23B82FE28](v97, -1, -1);

      v44 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v44(v99, v101);
    }
    else
    {
      v102 = *(_QWORD *)(v5 + 928);
      v103 = *(_QWORD *)(v5 + 840);
      v104 = *(_QWORD *)(v5 + 832);

      swift_release();
      swift_release();
      swift_release();
      v44 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
      v44(v102, v104);
    }
    v105 = xpc_dictionary_create_reply(*(xpc_object_t *)(v5 + 776));
    if (v105)
    {
      v106 = v105;
      v107 = *(_QWORD *)(v5 + 784);
      xpc_dictionary_set_string(v105, "error", "missing required sendOneMessage event fields");
      swift_beginAccess();
      v108 = *(_QWORD *)(v107 + 112);
      if (!v108)
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      swift_beginAccess();
      v109 = *(_xpc_connection_s **)(v108 + 16);
      if (!v109)
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      v110 = *(_QWORD *)(v5 + 920);
      v111 = *(_QWORD *)(v5 + 832);
      xpc_connection_send_message(v109, v106);
      ((void (*)(uint64_t, _QWORD, uint64_t))v88)(v110, *(_QWORD *)(v7 - 152), v111);
      v112 = sub_23823842C();
      v113 = sub_238238864();
      v114 = os_log_type_enabled(v112, v113);
      v58 = *(_QWORD *)(v5 + 920);
      v59 = *(_QWORD *)(v5 + 832);
      if (v114)
      {
        v115 = (uint8_t *)swift_slowAlloc();
        *(_QWORD *)(v7 - 112) = 0;
        *(_QWORD *)(v7 - 104) = 0;
        *(_WORD *)v115 = 0;
        *(_QWORD *)(v7 - 120) = v115 + 2;
        sub_238222B8C(MEMORY[0x24BEE4AF8], v7 - 120, v7 - 112, v7 - 104);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v112, v113, "SendOneMessage Error Reply Sent", v115, 2u);
        MEMORY[0x23B82FE28](v115, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_55:
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
    swift_unknownObjectRelease();
    goto LABEL_53;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
    v70 = (uint64_t)v25;
LABEL_43:
    sub_2381CCA1C(v70, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    goto LABEL_44;
  }
  v65 = *(_QWORD *)(v5 + 1128);
  v66 = *v25;
  v67 = v25[1];
  v161 = v66;
  *(_QWORD *)(v5 + 1176) = v67;
  MessageKeys.clientType.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(*(void **)(v7 - 128), v65);
  swift_bridgeObjectRelease();
  v68 = v21(v65, 1, v13);
  v69 = *(void ***)(v5 + 1128);
  if (v68 == 1)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    sub_2381CCCD0((uint64_t)v69, (uint64_t *)&unk_2568E7AC0);
    goto LABEL_44;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    v70 = (uint64_t)v69;
    goto LABEL_43;
  }
  v71 = *(_QWORD *)(v5 + 1120);
  v72 = *v69;
  *(_QWORD *)(v5 + 1184) = *v69;
  v73 = v69[1];
  *(_QWORD *)(v5 + 1192) = v73;
  MessageKeys.transportConfiguration.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(*(void **)(v7 - 128), v71);
  swift_bridgeObjectRelease();
  v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168))(v71, 1, v13);
  v69 = *(void ***)(v5 + 1120);
  if (v74 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (swift_getEnumCaseMultiPayload() != 12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  *(_QWORD *)(v7 - 144) = v6;
  v75 = *(_QWORD *)(v5 + 1112);
  v76 = *v69;
  *(_QWORD *)(v5 + 1200) = *v69;
  MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 - 136) = v76;
  XPCDictionary.subscript.getter(v76, v75);
  swift_bridgeObjectRelease();
  v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168))(v75, 1, v13);
  v78 = *(_QWORD *)(v5 + 1112);
  if (v77 == 1)
    goto LABEL_40;
  if (swift_getEnumCaseMultiPayload() != 2)
    goto LABEL_59;
  v79 = *(_QWORD *)(v5 + 1104);
  v80 = *(_BYTE *)v78;
  MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(*(void **)(v7 - 136), v79);
  swift_bridgeObjectRelease();
  v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168))(v79, 1, v13);
  v78 = *(_QWORD *)(v5 + 1104);
  if (v81 == 1)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2381CCCD0(v78, (uint64_t *)&unk_2568E7AC0);
LABEL_60:
    v119 = *(_QWORD *)(v5 + 944);
    v120 = *(_QWORD *)(v5 + 840);
    v121 = *(_QWORD *)(v5 + 784);
    v122 = sub_238215F50();
    v123 = *(void (**)(uint64_t))(v120 + 16);
    *(_QWORD *)(v7 - 152) = v122;
    *(_QWORD *)(v7 - 144) = v123;
    v123(v119);
    swift_retain();
    v124 = sub_23823842C();
    v125 = sub_23823887C();
    v126 = swift_allocObject();
    *(_BYTE *)(v126 + 16) = 34;
    v127 = swift_allocObject();
    *(_BYTE *)(v127 + 16) = 8;
    v128 = swift_allocObject();
    *(_QWORD *)(v128 + 16) = sub_238223A18;
    *(_QWORD *)(v128 + 24) = v121;
    v129 = swift_allocObject();
    *(_QWORD *)(v129 + 16) = sub_2382238FC;
    *(_QWORD *)(v129 + 24) = v128;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
    v130 = swift_allocObject();
    *(_OWORD *)(v130 + 16) = xmmword_23823C420;
    *(_QWORD *)(v130 + 32) = sub_238223A14;
    *(_QWORD *)(v130 + 40) = v126;
    *(_QWORD *)(v130 + 48) = sub_238223A14;
    *(_QWORD *)(v130 + 56) = v127;
    *(_QWORD *)(v130 + 64) = sub_238223900;
    *(_QWORD *)(v130 + 72) = v129;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v131 = v125;
    if (os_log_type_enabled(v124, v125))
    {
      v132 = (uint8_t *)swift_slowAlloc();
      v133 = swift_slowAlloc();
      *(_QWORD *)(v7 - 112) = 0;
      *(_QWORD *)(v7 - 104) = v133;
      *(_WORD *)v132 = 258;
      v132[2] = *(_BYTE *)(v126 + 16);
      swift_release();
      v132[3] = *(_BYTE *)(v127 + 16);
      *(_QWORD *)(v7 - 120) = v132 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)(v7 - 120), v7 - 112, (uint64_t *)(v7 - 104), *(uint64_t (**)(void))(v129 + 16));
      v134 = *(_QWORD *)(v5 + 944);
      v135 = *(_QWORD *)(v5 + 840);
      v136 = *(_QWORD *)(v5 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, v124, v131, "missing required values in transport configuration from %{public}s", v132, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v133, -1, -1);
      MEMORY[0x23B82FE28](v132, -1, -1);

      v44 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
      v44(v134, v136);
    }
    else
    {
      v137 = *(_QWORD *)(v5 + 944);
      v138 = *(_QWORD *)(v5 + 840);
      v139 = *(_QWORD *)(v5 + 832);

      swift_release();
      swift_release();
      swift_release();
      v44 = *(void (**)(uint64_t, uint64_t))(v138 + 8);
      v44(v137, v139);
    }
    v140 = xpc_dictionary_create_reply(*(xpc_object_t *)(v5 + 776));
    if (v140)
    {
      v141 = v140;
      v142 = *(_QWORD *)(v5 + 784);
      xpc_dictionary_set_string(v140, "error", "missing required sendOneMessage event fields");
      swift_beginAccess();
      v143 = *(_QWORD *)(v142 + 112);
      if (!v143)
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      swift_beginAccess();
      v144 = *(_xpc_connection_s **)(v143 + 16);
      if (!v144)
      {
LABEL_81:
        __break(1u);
        __break(1u);
        __break(1u);
        JUMPOUT(0x2382188ECLL);
      }
      v145 = *(_QWORD *)(v5 + 936);
      v146 = *(_QWORD *)(v5 + 832);
      xpc_connection_send_message(v144, v141);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 - 144))(v145, *(_QWORD *)(v7 - 152), v146);
      v147 = sub_23823842C();
      v148 = sub_238238864();
      v149 = os_log_type_enabled(v147, v148);
      v58 = *(_QWORD *)(v5 + 936);
      v59 = *(_QWORD *)(v5 + 832);
      if (v149)
      {
        v150 = (uint8_t *)swift_slowAlloc();
        *(_QWORD *)(v7 - 112) = 0;
        *(_QWORD *)(v7 - 104) = 0;
        *(_WORD *)v150 = 0;
        *(_QWORD *)(v7 - 120) = v150 + 2;
        sub_238222B8C(MEMORY[0x24BEE4AF8], v7 - 120, v7 - 112, v7 - 104);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v147, v148, "SendOneMessage Error Reply Sent", v150, 2u);
        MEMORY[0x23B82FE28](v150, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      goto LABEL_55;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_53:
    swift_unknownObjectRelease();
    goto LABEL_26;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
    goto LABEL_59;
  v82 = *(_QWORD *)(v5 + 1096);
  v160 = *(_BYTE *)v78;
  MessageKeys.tcBundleID.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(*(void **)(v7 - 136), v82);
  swift_bridgeObjectRelease();
  v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168))(v82, 1, v13);
  v78 = *(_QWORD *)(v5 + 1096);
  if (v83 == 1)
    goto LABEL_40;
  if (swift_getEnumCaseMultiPayload() != 8)
  {
LABEL_59:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2381CCA1C(v78, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    goto LABEL_60;
  }
  v116 = *(_QWORD *)(v5 + 1088);
  v162 = *(_QWORD *)v78;
  v163 = *(_QWORD *)(v78 + 8);
  *(_QWORD *)(v5 + 1208) = v163;
  MessageKeys.samplingUUID.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  XPCDictionary.subscript.getter(*(void **)(v7 - 128), v116);
  swift_bridgeObjectRelease();
  v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 - 168))(v116, 1, v13);
  v118 = *(uint64_t **)(v5 + 1088);
  if (v117 == 1)
  {
    sub_2381CCCD0(*(_QWORD *)(v5 + 1088), (uint64_t *)&unk_2568E7AC0);
LABEL_74:
    v151 = 0;
    v152 = 0;
    goto LABEL_75;
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
    sub_2381CCA1C((uint64_t)v118, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    goto LABEL_74;
  }
  v151 = *v118;
  v152 = v118[1];
LABEL_75:
  type metadata accessor for Session();
  sub_2381F1994(v151, v152);
  *(double *)(v5 + 1216) = v153;
  *(_QWORD *)(v7 - 168) = 0;
  v154 = v153;
  v155 = *(_QWORD *)(v5 + 1080);
  v156 = *(_QWORD *)(v5 + 1064);
  v157 = *(_QWORD *)(v5 + 784);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 120) = v72;
  *(_QWORD *)(v5 + 128) = v73;
  *(_QWORD *)(v5 + 136) = v161;
  *(_QWORD *)(v5 + 144) = v67;
  *(_BYTE *)(v5 + 152) = v80;
  *(_BYTE *)(v5 + 153) = v160;
  *(_QWORD *)(v5 + 160) = v162;
  *(_QWORD *)(v5 + 168) = v163;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2382382DC();
  sub_2381F185C(*(_QWORD *)(v7 - 160), 0x4D656E4F646E6553, 0xEE00656761737365, v156, v155, v154);
  v158 = *(_QWORD *)(v157 + 152);
  *(_QWORD *)(v5 + 1224) = v158;
  *(_QWORD *)(v7 - 128) = **(int **)(*(_QWORD *)v158 + 232) + *(_QWORD *)(*(_QWORD *)v158 + 232);
  v159 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 1232) = v159;
  *v159 = v5;
  v159[1] = sub_2382188FC;
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _UNKNOWN **))(v7 - 128))(*(_QWORD *)(v7 - 152), *(_QWORD *)(v5 + 1080), *(_QWORD *)(v5 + 1072), &off_2509F8700);
}

uint64_t sub_2382188FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1240) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_238218970()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[153];
  v2 = v0[33];
  v0[156] = v0[34];
  v0[157] = v2;
  v0[158] = *(_QWORD *)(*(_QWORD *)v1 + 248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2382189D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 1264))(*(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1192));
  return swift_task_switch();
}

void sub_238218A1C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  os_log_type_t v52;
  id v53;
  os_log_t osloga;
  NSObject *oslog;
  os_log_t oslogb;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0[156] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    osloga = (os_log_t)(**(int **)(**(_QWORD **)(v0[98] + 160) + 136)
                      + *(_QWORD *)(**(_QWORD **)(v0[98] + 160) + 136));
    v2 = (_QWORD *)swift_task_alloc();
    v0[159] = v2;
    *v2 = v0;
    v2[1] = sub_2382192F0;
    ((void (*)(_QWORD *, _QWORD, _QWORD, _UNKNOWN **))osloga)(v0 + 33, v0[135], v0[134], &off_2509F8700);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_OWORD *)v0 + 42) = *((_OWORD *)v0 + 18);
  sub_2381EC924((uint64_t)(v0 + 84));
  v53 = (id)v0[155];
  *(_OWORD *)(v0 + 163) = 0u;
  v3 = (void *)v0[146];
  v4 = v0[99];
  v0[92] = sub_2381D5F9C(MEMORY[0x24BEE4AF8]);
  xpc_dictionary_get_count(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
  sub_2382385AC();
  v5 = swift_allocObject();
  v0[165] = v5;
  *(_QWORD *)(v5 + 16) = v0 + 92;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = swift_allocObject();
  v0[22] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v6 + 16) = sub_238223270;
  *(_QWORD *)(v6 + 24) = v5;
  v0[26] = sub_2381D96B0;
  v0[27] = v6;
  v0[23] = 1107296256;
  v0[24] = sub_2381D5F98;
  v0[25] = &block_descriptor_3;
  v7 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v3, v7);
  swift_unknownObjectRelease();
  _Block_release(v7);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
    return;
  }
  v8 = 4079420;
  v9 = v0[129];
  sub_2382228AC(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v9);
  v10 = type metadata accessor for ServiceEventValue();
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) != 1)
  {
    sub_238223818(v0[129], v0[128], (uint64_t *)&unk_2568E7500);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(_QWORD *)v0[128];
      goto LABEL_9;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(_QWORD *)v0[128];
LABEL_9:
      v13 = sub_238238BE8();
      v15 = v14;
      goto LABEL_12;
    }
    sub_2381CCA1C(v0[128], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  }
  v15 = 0xE300000000000000;
  v13 = 4079420;
LABEL_12:
  v0[167] = v15;
  v0[166] = v13;
  v16 = v0[127];
  sub_2381CCCD0(v0[129], (uint64_t *)&unk_2568E7500);
  sub_2382228AC(0x7375746174735FLL, 0xE700000000000000, v0[92], v16);
  if (v11(v16, 1, v10) == 1)
  {
LABEL_19:
    v19 = 0xE300000000000000;
    goto LABEL_20;
  }
  sub_238223818(v0[127], v0[126], (uint64_t *)&unk_2568E7500);
  v17 = swift_getEnumCaseMultiPayload();
  if (v17 == 2)
  {
    v0[93] = *(_QWORD *)v0[126];
    goto LABEL_17;
  }
  if (v17 != 1)
  {
    sub_2381CCA1C(v0[126], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    goto LABEL_19;
  }
  v0[94] = *(_QWORD *)v0[126];
LABEL_17:
  v8 = sub_238238BE8();
  v19 = v18;
LABEL_20:
  v0[169] = v19;
  v0[168] = v8;
  v20 = v0[125];
  v21 = v0[105];
  v22 = v0[104];
  sub_2381CCCD0(v0[127], (uint64_t *)&unk_2568E7500);
  v23 = sub_238215F50();
  v0[170] = v23;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v0[171] = v24;
  v24(v20, v23, v22);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v13;
  *(_QWORD *)(v25 + 24) = v15;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v8;
  *(_QWORD *)(v26 + 24) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_23823842C();
  v27 = sub_238238894();
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = 34;
  v29 = swift_allocObject();
  *(_BYTE *)(v29 + 16) = 8;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_238223A1C;
  *(_QWORD *)(v30 + 24) = v25;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_2382238FC;
  *(_QWORD *)(v31 + 24) = v30;
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = 34;
  v33 = swift_allocObject();
  *(_BYTE *)(v33 + 16) = 8;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_238223A1C;
  *(_QWORD *)(v34 + 24) = v26;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_2382238FC;
  *(_QWORD *)(v35 + 24) = v34;
  v0[172] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v36 + 32) = sub_238223A14;
  *(_QWORD *)(v36 + 40) = v28;
  *(_QWORD *)(v36 + 48) = sub_238223A14;
  *(_QWORD *)(v36 + 56) = v29;
  *(_QWORD *)(v36 + 64) = sub_238223900;
  *(_QWORD *)(v36 + 72) = v31;
  *(_QWORD *)(v36 + 80) = sub_238223A14;
  *(_QWORD *)(v36 + 88) = v32;
  *(_QWORD *)(v36 + 96) = sub_238223A14;
  *(_QWORD *)(v36 + 104) = v33;
  *(_QWORD *)(v36 + 112) = sub_238223900;
  *(_QWORD *)(v36 + 120) = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  v52 = v27;
  if (os_log_type_enabled(oslog, v27))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v58 = 0;
    v59 = v38;
    *(_WORD *)v37 = 514;
    v37[2] = *(_BYTE *)(v28 + 16);
    if (v53)
    {

      return;
    }
    swift_release();
    v37[3] = *(_BYTE *)(v29 + 16);
    v57 = v37 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v57, (uint64_t)&v58, &v59, *(uint64_t (**)(void))(v31 + 16));
    swift_release();
    v43 = v57;
    *v57 = *(_BYTE *)(v32 + 16);
    swift_release();
    v43[1] = *(_BYTE *)(v33 + 16);
    v57 = v43 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v57, (uint64_t)&v58, &v59, *(uint64_t (**)(void))(v35 + 16));
    v44 = v0[125];
    v45 = v0[105];
    v46 = v0[104];
    swift_release();
    _os_log_impl(&dword_2381C6000, oslog, v52, "sending one message %{public}s:%{public}s", v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v38, -1, -1);
    MEMORY[0x23B82FE28](v37, -1, -1);

    v42 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v42(v44, v46);
  }
  else
  {
    v39 = v0[125];
    v40 = v0[105];
    v41 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v42(v39, v41);
  }
  v0[173] = v42;
  v47 = v0[98];
  v48 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v48);
  v0[78] = v49;
  v0[79] = v50;
  oslogb = (os_log_t)(**(int **)(**(_QWORD **)(v47 + 160) + 152) + *(_QWORD *)(**(_QWORD **)(v47 + 160) + 152));
  v51 = (_QWORD *)swift_task_alloc();
  v0[174] = v51;
  *v51 = v0;
  v51[1] = sub_238219C14;
  ((void (*)(_QWORD *))oslogb)(v0 + 15);
}

uint64_t sub_2382192F0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;
  _OWORD *v7;

  v6 = *v3;
  *(_QWORD *)(*v3 + 1280) = v2;
  swift_task_dealloc();
  v7 = (_OWORD *)(v6 + 288);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v6 + 640) = *v7;
    sub_2381EC924(v6 + 640);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 1288) = a2;
    *(_QWORD *)(v6 + 1296) = a1;
    *(_OWORD *)(v6 + 656) = *v7;
    sub_2381EC924(v6 + 656);
  }
  return swift_task_switch();
}

void sub_2382193D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  os_log_type_t v51;
  uint64_t v52;
  NSObject *oslog;
  os_log_t osloga;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0[162];
  v50 = (void *)v0[160];
  v0[164] = v0[161];
  v0[163] = v1;
  v2 = (void *)v0[146];
  v3 = v0[99];
  v0[92] = sub_2381D5F9C(MEMORY[0x24BEE4AF8]);
  xpc_dictionary_get_count(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
  sub_2382385AC();
  v4 = swift_allocObject();
  v0[165] = v4;
  *(_QWORD *)(v4 + 16) = v0 + 92;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = swift_allocObject();
  v0[22] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v5 + 16) = sub_238223270;
  *(_QWORD *)(v5 + 24) = v4;
  v0[26] = sub_2381D96B0;
  v0[27] = v5;
  v0[23] = 1107296256;
  v0[24] = sub_2381D5F98;
  v0[25] = &block_descriptor_3;
  v6 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v2, v6);
  swift_unknownObjectRelease();
  _Block_release(v6);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
    return;
  }
  v7 = 4079420;
  v8 = v0[129];
  sub_2382228AC(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v8);
  v9 = type metadata accessor for ServiceEventValue();
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) != 1)
  {
    sub_238223818(v0[129], v0[128], (uint64_t *)&unk_2568E7500);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(_QWORD *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(_QWORD *)v0[128];
LABEL_7:
      v12 = sub_238238BE8();
      v14 = v13;
      goto LABEL_10;
    }
    sub_2381CCA1C(v0[128], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  }
  v14 = 0xE300000000000000;
  v12 = 4079420;
LABEL_10:
  v0[167] = v14;
  v0[166] = v12;
  v15 = v0[127];
  sub_2381CCCD0(v0[129], (uint64_t *)&unk_2568E7500);
  sub_2382228AC(0x7375746174735FLL, 0xE700000000000000, v0[92], v15);
  if (v10(v15, 1, v9) == 1)
  {
LABEL_17:
    v18 = 0xE300000000000000;
    goto LABEL_18;
  }
  sub_238223818(v0[127], v0[126], (uint64_t *)&unk_2568E7500);
  v16 = swift_getEnumCaseMultiPayload();
  if (v16 == 2)
  {
    v0[93] = *(_QWORD *)v0[126];
    goto LABEL_15;
  }
  if (v16 != 1)
  {
    sub_2381CCA1C(v0[126], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    goto LABEL_17;
  }
  v0[94] = *(_QWORD *)v0[126];
LABEL_15:
  v7 = sub_238238BE8();
  v18 = v17;
LABEL_18:
  v0[169] = v18;
  v0[168] = v7;
  v19 = v0[125];
  v20 = v0[105];
  v21 = v0[104];
  sub_2381CCCD0(v0[127], (uint64_t *)&unk_2568E7500);
  v22 = sub_238215F50();
  v0[170] = v22;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v0[171] = v23;
  v23(v19, v22, v21);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v12;
  *(_QWORD *)(v24 + 24) = v14;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v7;
  *(_QWORD *)(v25 + 24) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_23823842C();
  v51 = sub_238238894();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 34;
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_238223A1C;
  *(_QWORD *)(v28 + 24) = v24;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_2382238FC;
  *(_QWORD *)(v29 + 24) = v28;
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = 34;
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = 8;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_238223A1C;
  *(_QWORD *)(v32 + 24) = v25;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_2382238FC;
  *(_QWORD *)(v33 + 24) = v32;
  v0[172] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v34 + 32) = sub_238223A14;
  *(_QWORD *)(v34 + 40) = v26;
  *(_QWORD *)(v34 + 48) = sub_238223A14;
  *(_QWORD *)(v34 + 56) = v27;
  *(_QWORD *)(v34 + 64) = sub_238223900;
  *(_QWORD *)(v34 + 72) = v29;
  *(_QWORD *)(v34 + 80) = sub_238223A14;
  *(_QWORD *)(v34 + 88) = v30;
  *(_QWORD *)(v34 + 96) = sub_238223A14;
  *(_QWORD *)(v34 + 104) = v31;
  *(_QWORD *)(v34 + 112) = sub_238223900;
  *(_QWORD *)(v34 + 120) = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v51))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v56 = 0;
    v57 = v36;
    *(_WORD *)v35 = 514;
    v35[2] = *(_BYTE *)(v26 + 16);
    if (v50)
    {
      swift_unknownObjectRelease();

      return;
    }
    v40 = v36;
    swift_release();
    v35[3] = *(_BYTE *)(v27 + 16);
    v55 = v35 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v29 + 16));
    swift_release();
    v41 = v55;
    *v55 = *(_BYTE *)(v30 + 16);
    swift_release();
    v41[1] = *(_BYTE *)(v31 + 16);
    v55 = v41 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v33 + 16));
    v42 = v0[125];
    v43 = v0[105];
    v44 = v0[104];
    swift_release();
    _os_log_impl(&dword_2381C6000, oslog, v51, "sending one message %{public}s:%{public}s", v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v40, -1, -1);
    MEMORY[0x23B82FE28](v35, -1, -1);

    v39 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v39(v42, v44);
  }
  else
  {
    v52 = v0[125];
    v37 = v0[105];
    v38 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v52, v38);
  }
  v0[173] = v39;
  v45 = v0[98];
  v46 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v46);
  v0[78] = v47;
  v0[79] = v48;
  osloga = (os_log_t)(**(int **)(**(_QWORD **)(v45 + 160) + 152) + *(_QWORD *)(**(_QWORD **)(v45 + 160) + 152));
  v49 = (_QWORD *)swift_task_alloc();
  v0[174] = v49;
  *v49 = v0;
  v49[1] = sub_238219C14;
  ((void (*)(_QWORD *))osloga)(v0 + 15);
}

uint64_t sub_238219C14(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 1400) = a2;
    *(_QWORD *)(v6 + 1408) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_238219CA0()
{
  uint64_t *v0;
  _QWORD *v1;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[177] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_238219D58;
  return sub_23820B878((uint64_t)(v0 + 2), (uint64_t)(v0 + 15), v0[176], v0[175], 0x4D656E4F646E6553, 0xEE00656761737365);
}

uint64_t sub_238219D58()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1424) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

void sub_238219DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t *v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t *v49;
  void *v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t ObjectType;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  os_log_type_t v131;
  uint64_t v132;
  NSObject *oslog;
  os_log_t log;
  NSObject *loga;
  NSObject *logb;
  void *v137;
  void *v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  os_log_type_t v142;
  void (*v143)(uint64_t, uint64_t);
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;

  *(_QWORD *)(v0 + 248) = &type metadata for AllEventFieldProvider;
  *(_QWORD *)(v0 + 256) = &off_2509F9798;
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = (uint64_t *)(v0 + 224);
  v3 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 96) = v3;
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v4;
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 64) = v5;
  sub_2381D4A00((_QWORD *)(v0 + 224));
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  v6 = *(void **)(v0 + 1424);
  v7 = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(v0 + 1432) = *(_QWORD *)(v0 + 616);
  *(_QWORD *)(v0 + 1440) = v7;
  *(_QWORD *)(v0 + 1448) = *(_QWORD *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_238204BB4();
  swift_beginAccess();
  v9 = *(_QWORD *)(v0 + 1256);
  if (*v8 == 1)
  {
    v10 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v0 + 1456) = v10;
    if (v10)
    {
      v11 = *(_QWORD *)(v0 + 800);
      LODWORD(v12) = *(_DWORD *)(v11 + 80);
      *(_DWORD *)(v0 + 1640) = v12;
      v12 = v12;
      v137 = v6;
      v140 = (v12 + 16) & ~v12;
      *(_QWORD *)(v0 + 1464) = *(_QWORD *)(v11 + 72);
      *(_QWORD *)(v0 + 1480) = 0;
      *(_QWORD *)(v0 + 1472) = v6;
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
      v14 = *(_QWORD *)(v0 + 1360);
      v130 = *(_QWORD *)(v0 + 1352);
      v126 = *(_QWORD *)(v0 + 1344);
      v15 = *(_QWORD *)(v0 + 1336);
      v16 = *(_QWORD *)(v0 + 1328);
      v17 = *(_QWORD *)(v0 + 992);
      v18 = *(_QWORD *)(v0 + 832);
      v19 = *(_QWORD *)(v0 + 824);
      v20 = *(_QWORD *)(v0 + 816);
      sub_2381D9630(v9 + ((v12 + 32) & ~v12), v19, type metadata accessor for SessionConfiguration.Backend);
      v13(v17, v14, v18);
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v16;
      *(_QWORD *)(v21 + 24) = v15;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v126;
      *(_QWORD *)(v22 + 24) = v130;
      sub_2381D9630(v19, v20, type metadata accessor for SessionConfiguration.Backend);
      v23 = swift_allocObject();
      sub_2381ED34C(v20, v23 + v140, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      oslog = sub_23823842C();
      v131 = sub_238238894();
      v141 = swift_allocObject();
      *(_BYTE *)(v141 + 16) = 34;
      log = (os_log_t)swift_allocObject();
      LOBYTE(log[2].isa) = 8;
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = sub_238223A1C;
      *(_QWORD *)(v24 + 24) = v21;
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = sub_2382238FC;
      *(_QWORD *)(v25 + 24) = v24;
      v26 = swift_allocObject();
      *(_BYTE *)(v26 + 16) = 34;
      v27 = v26;
      v127 = swift_allocObject();
      *(_BYTE *)(v127 + 16) = 8;
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = sub_238223A1C;
      *(_QWORD *)(v28 + 24) = v22;
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = sub_2382238FC;
      *(_QWORD *)(v29 + 24) = v28;
      v30 = swift_allocObject();
      *(_BYTE *)(v30 + 16) = 34;
      v31 = v30;
      v32 = swift_allocObject();
      *(_BYTE *)(v32 + 16) = 8;
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = sub_238223480;
      *(_QWORD *)(v33 + 24) = v23;
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = sub_2382238FC;
      *(_QWORD *)(v34 + 24) = v33;
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_23823CC00;
      *(_QWORD *)(v35 + 32) = sub_238223A14;
      *(_QWORD *)(v35 + 40) = v141;
      *(_QWORD *)(v35 + 48) = sub_238223A14;
      *(_QWORD *)(v35 + 56) = log;
      *(_QWORD *)(v35 + 64) = sub_238223900;
      *(_QWORD *)(v35 + 72) = v25;
      *(_QWORD *)(v35 + 80) = sub_238223A14;
      *(_QWORD *)(v35 + 88) = v27;
      *(_QWORD *)(v35 + 96) = sub_238223A14;
      *(_QWORD *)(v35 + 104) = v127;
      *(_QWORD *)(v35 + 112) = sub_238223900;
      *(_QWORD *)(v35 + 120) = v29;
      *(_QWORD *)(v35 + 128) = sub_238223A14;
      v36 = v31;
      *(_QWORD *)(v35 + 136) = v31;
      *(_QWORD *)(v35 + 144) = sub_238223A14;
      *(_QWORD *)(v35 + 152) = v32;
      *(_QWORD *)(v35 + 160) = sub_238223900;
      *(_QWORD *)(v35 + 168) = v34;
      v37 = v25;
      v128 = (_QWORD *)v0;
      v38 = v29;
      v39 = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      v124 = v27;
      v40 = v39;
      v41 = v38;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v125 = v34;
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, v131))
      {
        v42 = v128;
        v43 = v37;
        v123 = v40;
        v44 = v2 + 61;
        v45 = v2 + 62;
        v46 = v2 + 63;
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        *v45 = 0;
        v49 = v46;
        *v46 = v48;
        *(_WORD *)v47 = 770;
        v50 = v137;
        v47[2] = *(_BYTE *)(v141 + 16);
        *v44 = (uint64_t)(v47 + 3);
        if (v137)
        {
          swift_unknownObjectRelease();
LABEL_14:

          return;
        }
        v144 = v48;
        swift_release();
        v108 = (_BYTE *)v128[89];
        *v108 = log[2].isa;
        v128[89] = v108 + 1;
        swift_release();
        sub_238222C1C(v44, (uint64_t)v45, v49, *(uint64_t (**)(void))(v43 + 16));
        swift_release();
        v109 = (_BYTE *)v128[89];
        *v109 = *(_BYTE *)(v124 + 16);
        v128[89] = v109 + 1;
        swift_release();
        v110 = (_BYTE *)v128[89];
        *v110 = *(_BYTE *)(v127 + 16);
        v128[89] = v110 + 1;
        swift_release();
        sub_238222C1C(v44, (uint64_t)v45, v49, *(uint64_t (**)(void))(v41 + 16));
        swift_release();
        v111 = (_BYTE *)v128[89];
        *v111 = *(_BYTE *)(v123 + 16);
        v128[89] = v111 + 1;
        swift_release();
        v112 = (_BYTE *)v128[89];
        *v112 = *(_BYTE *)(v32 + 16);
        v128[89] = v112 + 1;
        swift_release();
        sub_238222C1C(v44, (uint64_t)v45, v49, *(uint64_t (**)(void))(v125 + 16));
        v113 = v128[124];
        v114 = v128[105];
        v115 = v128[104];
        swift_release();
        _os_log_impl(&dword_2381C6000, oslog, v131, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v47, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v144, -1, -1);
        MEMORY[0x23B82FE28](v47, -1, -1);

        v95 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
        v95(v113, v115);
      }
      else
      {
        v42 = v128;
        v92 = v128[124];
        v93 = v128[105];
        v94 = v128[104];
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v95 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
        v95(v92, v94);
      }
      v42[186] = v95;
      v42[187] = *(_QWORD *)(v42[98] + 168);
      v42[188] = sub_2381E2A90();
      v42[189] = v116;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  v51 = *(void (**)(uint64_t, uint64_t))(v0 + 1384);
  *(_QWORD *)(v0 + 1528) = v51;
  if (*(_QWORD *)(v0 + 1304))
  {
    v129 = v51;
    v138 = v6;
    v52 = *(_QWORD *)(v0 + 1352);
    v53 = *(_QWORD *)(v0 + 1344);
    v54 = *(_QWORD *)(v0 + 1336);
    v55 = *(_QWORD *)(v0 + 1328);
    v132 = *(_QWORD *)(v0 + 1312);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 984), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = v55;
    *(_QWORD *)(v56 + 24) = v54;
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v53;
    *(_QWORD *)(v57 + 24) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    loga = sub_23823842C();
    v58 = sub_238238894();
    v59 = swift_allocObject();
    *(_BYTE *)(v59 + 16) = 34;
    v60 = swift_allocObject();
    *(_BYTE *)(v60 + 16) = 8;
    v61 = swift_allocObject();
    *(_QWORD *)(v61 + 16) = sub_238223A1C;
    *(_QWORD *)(v61 + 24) = v56;
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = sub_2382238FC;
    *(_QWORD *)(v62 + 24) = v61;
    v63 = swift_allocObject();
    *(_BYTE *)(v63 + 16) = 34;
    v64 = swift_allocObject();
    *(_BYTE *)(v64 + 16) = 8;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = sub_238223A1C;
    *(_QWORD *)(v65 + 24) = v57;
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = sub_2382238FC;
    *(_QWORD *)(v66 + 24) = v65;
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v67 + 32) = sub_238223A14;
    *(_QWORD *)(v67 + 40) = v59;
    *(_QWORD *)(v67 + 48) = sub_238223A14;
    *(_QWORD *)(v67 + 56) = v60;
    *(_QWORD *)(v67 + 64) = sub_238223900;
    *(_QWORD *)(v67 + 72) = v62;
    *(_QWORD *)(v67 + 80) = sub_238223A14;
    *(_QWORD *)(v67 + 88) = v63;
    *(_QWORD *)(v67 + 96) = sub_238223A14;
    *(_QWORD *)(v67 + 104) = v64;
    *(_QWORD *)(v67 + 112) = sub_238223900;
    *(_QWORD *)(v67 + 120) = v66;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(loga, v58))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      v146 = 0;
      v147 = v69;
      *(_WORD *)v68 = 514;
      v68[2] = *(_BYTE *)(v59 + 16);
      if (v138)
        goto LABEL_13;
      v96 = v69;
      swift_release();
      v68[3] = *(_BYTE *)(v60 + 16);
      v145 = v68 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v145, (uint64_t)&v146, &v147, *(uint64_t (**)(void))(v62 + 16));
      swift_release();
      v97 = v145;
      *v145 = *(_BYTE *)(v63 + 16);
      swift_release();
      v97[1] = *(_BYTE *)(v64 + 16);
      v145 = v97 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v145, (uint64_t)&v146, &v147, *(uint64_t (**)(void))(v66 + 16));
      v98 = *(_QWORD *)(v0 + 984);
      v99 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, loga, v58, "processing sendOneMessage, immediate %{public}s:%{public}s", v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v96, -1, -1);
      MEMORY[0x23B82FE28](v68, -1, -1);

      v90 = v98;
      v91 = v99;
    }
    else
    {
      v88 = *(_QWORD *)(v0 + 984);
      v89 = *(_QWORD *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v90 = v88;
      v91 = v89;
    }
    v129(v90, v91);
    v100 = *(_QWORD *)(v0 + 1448);
    v101 = *(_QWORD *)(v0 + 1440);
    v102 = *(_QWORD *)(v0 + 1432);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7600);
    v104 = swift_allocObject();
    *(_QWORD *)(v0 + 1536) = v104;
    *(_OWORD *)(v104 + 16) = xmmword_238239E40;
    *(_QWORD *)(v104 + 32) = v102;
    *(_QWORD *)(v104 + 40) = v101;
    *(_QWORD *)(v104 + 48) = v100;
    v139 = (void (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v132 + 8) + *(_QWORD *)(v132 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1544) = v105;
    *v105 = v0;
    v105[1] = sub_23821C020;
    v139(v104, ObjectType, v132);
    return;
  }
  v70 = *(_QWORD *)(*(_QWORD *)(v0 + 1256) + 16);
  swift_bridgeObjectRelease();
  if (!v70)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1576) = v6;
    *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
LABEL_23:
    swift_task_switch();
    return;
  }
  v138 = v6;
  v71 = *(_QWORD *)(v0 + 1352);
  v72 = *(_QWORD *)(v0 + 1344);
  v73 = *(_QWORD *)(v0 + 1336);
  v74 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = v74;
  *(_QWORD *)(v75 + 24) = v73;
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = v72;
  *(_QWORD *)(v76 + 24) = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  logb = sub_23823842C();
  v142 = sub_238238894();
  v77 = swift_allocObject();
  *(_BYTE *)(v77 + 16) = 34;
  v78 = swift_allocObject();
  *(_BYTE *)(v78 + 16) = 8;
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + 16) = sub_238223A1C;
  *(_QWORD *)(v79 + 24) = v75;
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = sub_2382238FC;
  *(_QWORD *)(v80 + 24) = v79;
  v81 = swift_allocObject();
  *(_BYTE *)(v81 + 16) = 34;
  v82 = swift_allocObject();
  *(_BYTE *)(v82 + 16) = 8;
  v83 = swift_allocObject();
  *(_QWORD *)(v83 + 16) = sub_238223A1C;
  *(_QWORD *)(v83 + 24) = v76;
  v84 = swift_allocObject();
  *(_QWORD *)(v84 + 16) = sub_2382238FC;
  *(_QWORD *)(v84 + 24) = v83;
  v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v85 + 32) = sub_238223A14;
  *(_QWORD *)(v85 + 40) = v77;
  *(_QWORD *)(v85 + 48) = sub_238223A14;
  *(_QWORD *)(v85 + 56) = v78;
  *(_QWORD *)(v85 + 64) = sub_238223900;
  *(_QWORD *)(v85 + 72) = v80;
  *(_QWORD *)(v85 + 80) = sub_238223A14;
  *(_QWORD *)(v85 + 88) = v81;
  *(_QWORD *)(v85 + 96) = sub_238223A14;
  *(_QWORD *)(v85 + 104) = v82;
  *(_QWORD *)(v85 + 112) = sub_238223900;
  *(_QWORD *)(v85 + 120) = v84;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(logb, v142))
  {
    v86 = (uint8_t *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    v146 = 0;
    v147 = v87;
    *(_WORD *)v86 = 514;
    v86[2] = *(_BYTE *)(v77 + 16);
    if (v138)
    {
LABEL_13:
      swift_unknownObjectRelease();
      v50 = v138;
      goto LABEL_14;
    }
    v117 = v87;
    swift_release();
    v86[3] = *(_BYTE *)(v78 + 16);
    v145 = v86 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v145, (uint64_t)&v146, &v147, *(uint64_t (**)(void))(v80 + 16));
    swift_release();
    v118 = v145;
    *v145 = *(_BYTE *)(v81 + 16);
    swift_release();
    v118[1] = *(_BYTE *)(v82 + 16);
    v145 = v118 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v145, (uint64_t)&v146, &v147, *(uint64_t (**)(void))(v84 + 16));
    v119 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v120 = *(_QWORD *)(v0 + 968);
    v121 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, logb, v142, "caching sendOneMessage %{public}s:%{public}s", v86, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v117, -1, -1);
    MEMORY[0x23B82FE28](v86, -1, -1);

    v119(v120, v121);
  }
  else
  {
    v143 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v106 = *(_QWORD *)(v0 + 968);
    v107 = *(_QWORD *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v143(v106, v107);
  }
  sub_2382382DC();
  v122 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1560) = v122;
  *v122 = v0;
  v122[1] = sub_23821CA18;
  sub_2381DB4CC(v0 + 120, *(_QWORD *)(v0 + 1056), *(double *)(v0 + 1216), *(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1448));
}

uint64_t sub_23821AF14()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[184];
  sub_2381D18D8(v0[188], v0[189], v0[179], v0[180], v0[181]);
  v0[190] = v1;
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_23821AF94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t ObjectType;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  os_log_type_t v107;
  NSObject *oslog;
  os_log_t oslogc;
  NSObject *osloga;
  NSObject *oslogb;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t v114;
  void *v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  void (*v118)(uint64_t, uint64_t);
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;

  sub_2381CCA1C(*(_QWORD *)(v0 + 824), type metadata accessor for SessionConfiguration.Backend);
  v1 = *(void **)(v0 + 1520);
  v2 = *(_QWORD *)(v0 + 1480) + 1;
  v115 = v1;
  if (v2 != *(_QWORD *)(v0 + 1456))
  {
    *(_QWORD *)(v0 + 1480) = v2;
    *(_QWORD *)(v0 + 1472) = v1;
    v22 = *(unsigned __int8 *)(v0 + 1640);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
    v24 = *(_QWORD *)(v0 + 1360);
    v112 = *(_QWORD *)(v0 + 1352);
    oslogc = *(os_log_t *)(v0 + 1344);
    v25 = *(_QWORD *)(v0 + 1336);
    v26 = *(_QWORD *)(v0 + 1328);
    v27 = *(_QWORD *)(v0 + 992);
    v28 = (v22 + 16) & ~v22;
    v29 = *(_QWORD *)(v0 + 832);
    v30 = *(_QWORD *)(v0 + 824);
    v31 = *(_QWORD *)(v0 + 816);
    sub_2381D9630(*(_QWORD *)(v0 + 1256) + ((v22 + 32) & ~v22) + *(_QWORD *)(v0 + 1464) * v2, v30, type metadata accessor for SessionConfiguration.Backend);
    v23(v27, v24, v29);
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v26;
    *(_QWORD *)(v32 + 24) = v25;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = oslogc;
    *(_QWORD *)(v33 + 24) = v112;
    sub_2381D9630(v30, v31, type metadata accessor for SessionConfiguration.Backend);
    v34 = swift_allocObject();
    sub_2381ED34C(v31, v34 + v28, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osloga = sub_23823842C();
    v107 = sub_238238894();
    v113 = swift_allocObject();
    *(_BYTE *)(v113 + 16) = 34;
    v35 = swift_allocObject();
    *(_BYTE *)(v35 + 16) = 8;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = sub_238223A1C;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_2382238FC;
    *(_QWORD *)(v37 + 24) = v36;
    v38 = swift_allocObject();
    *(_BYTE *)(v38 + 16) = 34;
    v39 = swift_allocObject();
    *(_BYTE *)(v39 + 16) = 8;
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = sub_238223A1C;
    *(_QWORD *)(v40 + 24) = v33;
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = sub_2382238FC;
    *(_QWORD *)(v41 + 24) = v40;
    v42 = swift_allocObject();
    *(_BYTE *)(v42 + 16) = 34;
    v43 = swift_allocObject();
    *(_BYTE *)(v43 + 16) = 8;
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = sub_238223480;
    *(_QWORD *)(v44 + 24) = v34;
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = sub_2382238FC;
    *(_QWORD *)(v45 + 24) = v44;
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_23823CC00;
    *(_QWORD *)(v46 + 32) = sub_238223A14;
    *(_QWORD *)(v46 + 40) = v113;
    *(_QWORD *)(v46 + 48) = sub_238223A14;
    *(_QWORD *)(v46 + 56) = v35;
    *(_QWORD *)(v46 + 64) = sub_238223900;
    *(_QWORD *)(v46 + 72) = v37;
    *(_QWORD *)(v46 + 80) = sub_238223A14;
    *(_QWORD *)(v46 + 88) = v38;
    *(_QWORD *)(v46 + 96) = sub_238223A14;
    *(_QWORD *)(v46 + 104) = v39;
    *(_QWORD *)(v46 + 112) = sub_238223900;
    *(_QWORD *)(v46 + 120) = v41;
    *(_QWORD *)(v46 + 128) = sub_238223A14;
    *(_QWORD *)(v46 + 136) = v42;
    *(_QWORD *)(v46 + 144) = sub_238223A14;
    *(_QWORD *)(v46 + 152) = v43;
    *(_QWORD *)(v46 + 160) = sub_238223900;
    *(_QWORD *)(v46 + 168) = v45;
    swift_retain();
    v106 = v35;
    swift_retain();
    swift_retain();
    swift_retain();
    v47 = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v107))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)(v0 + 720) = 0;
      *(_QWORD *)(v0 + 728) = v49;
      *(_WORD *)v48 = 770;
      v50 = v115;
      v48[2] = *(_BYTE *)(v113 + 16);
      *(_QWORD *)(v0 + 712) = v48 + 3;
      if (v115)
      {
        swift_unknownObjectRelease();
LABEL_14:

        return;
      }
      v116 = v49;
      swift_release();
      v77 = *(_BYTE **)(v0 + 712);
      *v77 = *(_BYTE *)(v106 + 16);
      *(_QWORD *)(v0 + 712) = v77 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v37 + 16));
      swift_release();
      v78 = *(_BYTE **)(v0 + 712);
      *v78 = *(_BYTE *)(v38 + 16);
      *(_QWORD *)(v0 + 712) = v78 + 1;
      swift_release();
      v79 = *(_BYTE **)(v0 + 712);
      *v79 = *(_BYTE *)(v47 + 16);
      *(_QWORD *)(v0 + 712) = v79 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v41 + 16));
      swift_release();
      v80 = *(_BYTE **)(v0 + 712);
      *v80 = *(_BYTE *)(v42 + 16);
      *(_QWORD *)(v0 + 712) = v80 + 1;
      swift_release();
      v81 = *(_BYTE **)(v0 + 712);
      *v81 = *(_BYTE *)(v43 + 16);
      *(_QWORD *)(v0 + 712) = v81 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v45 + 16));
      v82 = *(_QWORD *)(v0 + 992);
      v83 = *(_QWORD *)(v0 + 840);
      v84 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, osloga, v107, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v48, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v116, -1, -1);
      MEMORY[0x23B82FE28](v48, -1, -1);

      v54 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v54(v82, v84);
    }
    else
    {
      v51 = *(_QWORD *)(v0 + 992);
      v52 = *(_QWORD *)(v0 + 840);
      v53 = *(_QWORD *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v54(v51, v53);
    }
    *(_QWORD *)(v0 + 1488) = v54;
    *(_QWORD *)(v0 + 1496) = *(_QWORD *)(*(_QWORD *)(v0 + 784) + 168);
    *(_QWORD *)(v0 + 1504) = sub_2381E2A90();
    *(_QWORD *)(v0 + 1512) = v85;
    goto LABEL_18;
  }
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1528) = v3;
  if (*(_QWORD *)(v0 + 1304))
  {
    v104 = v3;
    v4 = *(_QWORD *)(v0 + 1352);
    v5 = *(_QWORD *)(v0 + 1344);
    v6 = *(_QWORD *)(v0 + 1336);
    v7 = *(_QWORD *)(v0 + 1328);
    v105 = *(_QWORD *)(v0 + 1312);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 984), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    oslog = sub_23823842C();
    v10 = sub_238238894();
    v11 = swift_allocObject();
    *(_BYTE *)(v11 + 16) = 34;
    v12 = swift_allocObject();
    *(_BYTE *)(v12 + 16) = 8;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = sub_238223A1C;
    *(_QWORD *)(v13 + 24) = v8;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = sub_2382238FC;
    *(_QWORD *)(v14 + 24) = v13;
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = 34;
    v16 = swift_allocObject();
    *(_BYTE *)(v16 + 16) = 8;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_238223A1C;
    *(_QWORD *)(v17 + 24) = v9;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_2382238FC;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v19 + 32) = sub_238223A14;
    *(_QWORD *)(v19 + 40) = v11;
    *(_QWORD *)(v19 + 48) = sub_238223A14;
    *(_QWORD *)(v19 + 56) = v12;
    *(_QWORD *)(v19 + 64) = sub_238223900;
    *(_QWORD *)(v19 + 72) = v14;
    *(_QWORD *)(v19 + 80) = sub_238223A14;
    *(_QWORD *)(v19 + 88) = v15;
    *(_QWORD *)(v19 + 96) = sub_238223A14;
    *(_QWORD *)(v19 + 104) = v16;
    *(_QWORD *)(v19 + 112) = sub_238223900;
    *(_QWORD *)(v19 + 120) = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, v10))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v120 = 0;
      v121 = v21;
      *(_WORD *)v20 = 514;
      v20[2] = *(_BYTE *)(v11 + 16);
      if (v115)
        goto LABEL_13;
      v86 = v21;
      swift_release();
      v20[3] = *(_BYTE *)(v12 + 16);
      v119 = v20 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v119, (uint64_t)&v120, &v121, *(uint64_t (**)(void))(v14 + 16));
      swift_release();
      v87 = v119;
      *v119 = *(_BYTE *)(v15 + 16);
      swift_release();
      v87[1] = *(_BYTE *)(v16 + 16);
      v119 = v87 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v119, (uint64_t)&v120, &v121, *(uint64_t (**)(void))(v18 + 16));
      v88 = *(_QWORD *)(v0 + 984);
      v89 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, oslog, v10, "processing sendOneMessage, immediate %{public}s:%{public}s", v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v86, -1, -1);
      MEMORY[0x23B82FE28](v20, -1, -1);

      v75 = v88;
      v76 = v89;
    }
    else
    {
      v73 = *(_QWORD *)(v0 + 984);
      v74 = *(_QWORD *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v75 = v73;
      v76 = v74;
    }
    v104(v75, v76);
    v90 = *(_QWORD *)(v0 + 1448);
    v91 = *(_QWORD *)(v0 + 1440);
    v92 = *(_QWORD *)(v0 + 1432);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7600);
    v94 = swift_allocObject();
    *(_QWORD *)(v0 + 1536) = v94;
    *(_OWORD *)(v94 + 16) = xmmword_238239E40;
    *(_QWORD *)(v94 + 32) = v92;
    *(_QWORD *)(v94 + 40) = v91;
    *(_QWORD *)(v94 + 48) = v90;
    v117 = (void (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v105 + 8) + *(_QWORD *)(v105 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v95 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1544) = v95;
    *v95 = v0;
    v95[1] = sub_23821C020;
    v117(v94, ObjectType, v105);
    return;
  }
  v55 = *(_QWORD *)(*(_QWORD *)(v0 + 1256) + 16);
  swift_bridgeObjectRelease();
  if (!v55)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1576) = v1;
    *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
LABEL_18:
    swift_task_switch();
    return;
  }
  v56 = *(_QWORD *)(v0 + 1352);
  v57 = *(_QWORD *)(v0 + 1344);
  v58 = *(_QWORD *)(v0 + 1336);
  v59 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = v59;
  *(_QWORD *)(v60 + 24) = v58;
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v57;
  *(_QWORD *)(v61 + 24) = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslogb = sub_23823842C();
  v114 = sub_238238894();
  v62 = swift_allocObject();
  *(_BYTE *)(v62 + 16) = 34;
  v63 = swift_allocObject();
  *(_BYTE *)(v63 + 16) = 8;
  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = sub_238223A1C;
  *(_QWORD *)(v64 + 24) = v60;
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = sub_2382238FC;
  *(_QWORD *)(v65 + 24) = v64;
  v66 = swift_allocObject();
  *(_BYTE *)(v66 + 16) = 34;
  v67 = swift_allocObject();
  *(_BYTE *)(v67 + 16) = 8;
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = sub_238223A1C;
  *(_QWORD *)(v68 + 24) = v61;
  v69 = swift_allocObject();
  *(_QWORD *)(v69 + 16) = sub_2382238FC;
  *(_QWORD *)(v69 + 24) = v68;
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v70 + 32) = sub_238223A14;
  *(_QWORD *)(v70 + 40) = v62;
  *(_QWORD *)(v70 + 48) = sub_238223A14;
  *(_QWORD *)(v70 + 56) = v63;
  *(_QWORD *)(v70 + 64) = sub_238223900;
  *(_QWORD *)(v70 + 72) = v65;
  *(_QWORD *)(v70 + 80) = sub_238223A14;
  *(_QWORD *)(v70 + 88) = v66;
  *(_QWORD *)(v70 + 96) = sub_238223A14;
  *(_QWORD *)(v70 + 104) = v67;
  *(_QWORD *)(v70 + 112) = sub_238223900;
  *(_QWORD *)(v70 + 120) = v69;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, v114))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    v72 = swift_slowAlloc();
    v120 = 0;
    v121 = v72;
    *(_WORD *)v71 = 514;
    v71[2] = *(_BYTE *)(v62 + 16);
    if (v115)
    {
LABEL_13:
      swift_unknownObjectRelease();
      v50 = v115;
      goto LABEL_14;
    }
    v98 = v72;
    swift_release();
    v71[3] = *(_BYTE *)(v63 + 16);
    v119 = v71 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v119, (uint64_t)&v120, &v121, *(uint64_t (**)(void))(v65 + 16));
    swift_release();
    v99 = v119;
    *v119 = *(_BYTE *)(v66 + 16);
    swift_release();
    v99[1] = *(_BYTE *)(v67 + 16);
    v119 = v99 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v119, (uint64_t)&v120, &v121, *(uint64_t (**)(void))(v69 + 16));
    v100 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v101 = *(_QWORD *)(v0 + 968);
    v102 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, oslogb, v114, "caching sendOneMessage %{public}s:%{public}s", v71, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v98, -1, -1);
    MEMORY[0x23B82FE28](v71, -1, -1);

    v100(v101, v102);
  }
  else
  {
    v118 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v96 = *(_QWORD *)(v0 + 968);
    v97 = *(_QWORD *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v118(v96, v97);
  }
  sub_2382382DC();
  v103 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1560) = v103;
  *v103 = v0;
  v103[1] = sub_23821CA18;
  sub_2381DB4CC(v0 + 120, *(_QWORD *)(v0 + 1056), *(double *)(v0 + 1216), *(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1448));
}

uint64_t sub_23821C020()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1552) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_23821C094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  os_log_type_t v61;
  void (*v62)(uint64_t, uint64_t);
  os_log_t oslog;
  NSObject *osloga;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(_QWORD *)(v0 + 1344);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 976), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = (os_log_t)sub_23823842C();
  v7 = sub_238238894();
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 34;
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_238223A1C;
  *(_QWORD *)(v10 + 24) = v5;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_2382238FC;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = 34;
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_238223A1C;
  *(_QWORD *)(v14 + 24) = v6;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_2382238FC;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v16 + 32) = sub_238223A14;
  *(_QWORD *)(v16 + 40) = v8;
  *(_QWORD *)(v16 + 48) = sub_238223A14;
  *(_QWORD *)(v16 + 56) = v9;
  *(_QWORD *)(v16 + 64) = sub_238223900;
  *(_QWORD *)(v16 + 72) = v11;
  *(_QWORD *)(v16 + 80) = sub_238223A14;
  *(_QWORD *)(v16 + 88) = v12;
  *(_QWORD *)(v16 + 96) = sub_238223A14;
  *(_QWORD *)(v16 + 104) = v13;
  *(_QWORD *)(v16 + 112) = sub_238223900;
  *(_QWORD *)(v16 + 120) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(oslog, v7))
  {
    v58 = *(_QWORD *)(v0 + 976);
    v60 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v23 = *(_QWORD *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    v60(v58, v23);
    goto LABEL_6;
  }
  v59 = v12;
  v17 = *(_QWORD *)(v0 + 1552);
  v18 = (uint8_t *)swift_slowAlloc();
  v19 = swift_slowAlloc();
  v66 = 0;
  v67 = v19;
  *(_WORD *)v18 = 514;
  v18[2] = *(_BYTE *)(v8 + 16);
  v20 = *(void **)(v0 + 1552);
  if (!v17)
  {
    v21 = v19;
    swift_release();
    v18[3] = *(_BYTE *)(v9 + 16);
    v65 = v18 + 4;
    v22 = *(_QWORD *)(v0 + 1552);
    if (v20)
    {
      v20 = *(void **)(v0 + 1552);
      goto LABEL_20;
    }
    swift_release();
    sub_238222C1C((uint64_t *)&v65, (uint64_t)&v66, &v67, *(uint64_t (**)(void))(v11 + 16));
    v51 = *(_QWORD *)(v0 + 1552);
    if (v22)
    {
      v20 = *(void **)(v0 + 1552);
      goto LABEL_20;
    }
    swift_release();
    v52 = v65;
    *v65 = *(_BYTE *)(v59 + 16);
    v20 = *(void **)(v0 + 1552);
    if (v51)
      goto LABEL_20;
    swift_release();
    v52[1] = *(_BYTE *)(v13 + 16);
    v65 = v52 + 2;
    v53 = *(_QWORD *)(v0 + 1552);
    if (v20)
    {
      v20 = *(void **)(v0 + 1552);
      goto LABEL_20;
    }
    swift_release();
    sub_238222C1C((uint64_t *)&v65, (uint64_t)&v66, &v67, *(uint64_t (**)(void))(v15 + 16));
    if (v53)
    {
      v20 = *(void **)(v0 + 1552);
      goto LABEL_20;
    }
    v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, oslog, v7, "processed sendOneMessage, immediate %{public}s:%{public}s", v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v21, -1, -1);
    MEMORY[0x23B82FE28](v18, -1, -1);

    swift_unknownObjectRelease();
    v54(v55, v56);
LABEL_6:
    v24 = *(void **)(v0 + 1552);
    v25 = *(_QWORD *)(*(_QWORD *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v0 + 1336);
    if (!v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 1576) = v24;
      *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
      swift_task_switch();
      return;
    }
    v57 = v24;
    v27 = *(_QWORD *)(v0 + 1352);
    v28 = *(_QWORD *)(v0 + 1344);
    v29 = *(_QWORD *)(v0 + 1328);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v29;
    *(_QWORD *)(v30 + 24) = v26;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v28;
    *(_QWORD *)(v31 + 24) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osloga = sub_23823842C();
    v61 = sub_238238894();
    v32 = swift_allocObject();
    *(_BYTE *)(v32 + 16) = 34;
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = 8;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_238223A1C;
    *(_QWORD *)(v34 + 24) = v30;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_2382238FC;
    *(_QWORD *)(v35 + 24) = v34;
    v36 = swift_allocObject();
    *(_BYTE *)(v36 + 16) = 34;
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 8;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_238223A1C;
    *(_QWORD *)(v38 + 24) = v31;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = sub_2382238FC;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v40 + 32) = sub_238223A14;
    *(_QWORD *)(v40 + 40) = v32;
    *(_QWORD *)(v40 + 48) = sub_238223A14;
    *(_QWORD *)(v40 + 56) = v33;
    *(_QWORD *)(v40 + 64) = sub_238223900;
    *(_QWORD *)(v40 + 72) = v35;
    *(_QWORD *)(v40 + 80) = sub_238223A14;
    *(_QWORD *)(v40 + 88) = v36;
    *(_QWORD *)(v40 + 96) = sub_238223A14;
    *(_QWORD *)(v40 + 104) = v37;
    *(_QWORD *)(v40 + 112) = sub_238223900;
    *(_QWORD *)(v40 + 120) = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v61))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v66 = 0;
      v67 = v42;
      *(_WORD *)v41 = 514;
      v41[2] = *(_BYTE *)(v32 + 16);
      v20 = v57;
      if (v57)
        goto LABEL_20;
      v43 = v42;
      swift_release();
      v41[3] = *(_BYTE *)(v33 + 16);
      v65 = v41 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v65, (uint64_t)&v66, &v67, *(uint64_t (**)(void))(v35 + 16));
      swift_release();
      v44 = v65;
      *v65 = *(_BYTE *)(v36 + 16);
      swift_release();
      v44[1] = *(_BYTE *)(v37 + 16);
      v65 = v44 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v65, (uint64_t)&v66, &v67, *(uint64_t (**)(void))(v39 + 16));
      v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v46 = *(_QWORD *)(v0 + 968);
      v47 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, osloga, v61, "caching sendOneMessage %{public}s:%{public}s", v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v43, -1, -1);
      MEMORY[0x23B82FE28](v41, -1, -1);

      v45(v46, v47);
    }
    else
    {
      v62 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v48 = *(_QWORD *)(v0 + 968);
      v49 = *(_QWORD *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v62(v48, v49);
    }
    sub_2382382DC();
    v50 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1560) = v50;
    *v50 = v0;
    v50[1] = sub_23821CA18;
    sub_2381DB4CC(v0 + 120, *(_QWORD *)(v0 + 1056), *(double *)(v0 + 1216), *(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1448));
    return;
  }
LABEL_20:
  swift_unknownObjectRelease();

}

uint64_t sub_23821CA18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 1568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v6 = v2[132];
    v3 = v2[131];
    v4 = v2[130];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[131] + 8))(v2[132], v2[130]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

void sub_23821CB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  void (*v30)(uint64_t, uint64_t);
  os_log_t log;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(_QWORD *)(v0 + 1344);
  v3 = *(_QWORD *)(v0 + 1336);
  v4 = *(_QWORD *)(v0 + 1328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 960), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  log = (os_log_t)sub_23823842C();
  v29 = sub_238238894();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 34;
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 8;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_238223A1C;
  *(_QWORD *)(v9 + 24) = v5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_2382238FC;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 34;
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = 8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_238223A1C;
  *(_QWORD *)(v13 + 24) = v6;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2382238FC;
  *(_QWORD *)(v14 + 24) = v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v15 + 32) = sub_238223A14;
  *(_QWORD *)(v15 + 40) = v7;
  *(_QWORD *)(v15 + 48) = sub_238223A14;
  *(_QWORD *)(v15 + 56) = v8;
  *(_QWORD *)(v15 + 64) = sub_238223900;
  *(_QWORD *)(v15 + 72) = v10;
  *(_QWORD *)(v15 + 80) = sub_238223A14;
  *(_QWORD *)(v15 + 88) = v11;
  *(_QWORD *)(v15 + 96) = sub_238223A14;
  *(_QWORD *)(v15 + 104) = v12;
  *(_QWORD *)(v15 + 112) = sub_238223900;
  *(_QWORD *)(v15 + 120) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(log, v29))
  {
    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v22 = *(_QWORD *)(v0 + 960);
    v23 = *(_QWORD *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v30(v22, v23);
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v0 + 1568);
  v17 = (uint8_t *)swift_slowAlloc();
  v18 = swift_slowAlloc();
  v33 = 0;
  v34 = v18;
  *(_WORD *)v17 = 514;
  v17[2] = *(_BYTE *)(v7 + 16);
  v19 = *(void **)(v0 + 1568);
  if (!v16)
  {
    v20 = v18;
    swift_release();
    v17[3] = *(_BYTE *)(v8 + 16);
    v32 = v17 + 4;
    v21 = *(_QWORD *)(v0 + 1568);
    if (v19)
    {
      v19 = *(void **)(v0 + 1568);
      goto LABEL_13;
    }
    swift_release();
    sub_238222C1C((uint64_t *)&v32, (uint64_t)&v33, &v34, *(uint64_t (**)(void))(v10 + 16));
    v19 = *(void **)(v0 + 1568);
    if (v21)
      goto LABEL_13;
    swift_release();
    v24 = v32;
    *v32 = *(_BYTE *)(v11 + 16);
    v25 = *(_QWORD *)(v0 + 1568);
    if (v19)
    {
      v19 = *(void **)(v0 + 1568);
      goto LABEL_13;
    }
    swift_release();
    v24[1] = *(_BYTE *)(v12 + 16);
    v32 = v24 + 2;
    v19 = *(void **)(v0 + 1568);
    if (v25)
      goto LABEL_13;
    swift_release();
    sub_238222C1C((uint64_t *)&v32, (uint64_t)&v33, &v34, *(uint64_t (**)(void))(v14 + 16));
    if (v19)
    {
      v19 = *(void **)(v0 + 1568);
      goto LABEL_13;
    }
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v27 = *(_QWORD *)(v0 + 960);
    v28 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, log, v29, "cached sendOneMessage %{public}s:%{public}s", v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v20, -1, -1);
    MEMORY[0x23B82FE28](v17, -1, -1);

    v26(v27, v28);
LABEL_6:
    *(_QWORD *)(v0 + 1576) = *(_QWORD *)(v0 + 1568);
    *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
    swift_task_switch();
    return;
  }
LABEL_13:
  swift_unknownObjectRelease();

}

uint64_t sub_23821D004()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 1584))(*(_QWORD *)(v0 + 1184), *(_QWORD *)(v0 + 1192), 1);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23821D068()
{
  uint64_t v0;
  xpc_object_t reply;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _xpc_connection_s *v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint8_t *v24;
  uint64_t v25;
  _QWORD v26[3];

  reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (!reply)
  {
    v14 = *(_QWORD *)(v0 + 1080);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v14;
LABEL_8:
    sub_2381CCA1C(v13, (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = reply;
  v3 = *(_QWORD *)(v0 + 784);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 112);
  if (v4)
  {
    swift_beginAccess();
    v5 = *(_xpc_connection_s **)(v4 + 16);
    if (v5)
    {
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
      v7 = *(_QWORD *)(v0 + 1360);
      v8 = *(_QWORD *)(v0 + 952);
      v9 = *(_QWORD *)(v0 + 832);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      xpc_connection_send_message(v5, v2);
      swift_unknownObjectRelease();
      v6(v8, v7, v9);
      v10 = sub_23823842C();
      v11 = sub_238238864();
      if (os_log_type_enabled(v10, v11))
      {
        v22 = *(_QWORD *)(v0 + 1080);
        v23 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
        v21 = *(_QWORD *)(v0 + 952);
        v20 = *(_QWORD *)(v0 + 832);
        v12 = (uint8_t *)swift_slowAlloc();
        v25 = 0;
        v26[0] = 0;
        *(_WORD *)v12 = 0;
        v24 = v12 + 2;
        sub_238222B8C(MEMORY[0x24BEE4AF8], (uint64_t)&v24, (uint64_t)&v25, (uint64_t)v26);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v10, v11, "SendOneMessage Reply Sent", v12, 2u);
        MEMORY[0x23B82FE28](v12, -1, -1);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v23(v21, v20);
        v13 = v22;
      }
      else
      {
        v15 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
        v16 = *(_QWORD *)(v0 + 1080);
        v17 = *(_QWORD *)(v0 + 952);
        v18 = *(_QWORD *)(v0 + 832);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v15(v17, v18);
        v13 = v16;
      }
      goto LABEL_8;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    __break(1u);
  }
  result = swift_unknownObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_23821D548()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23821D7BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23821DA30()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

_xpc_connection_s *sub_23821DCA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  xpc_object_t reply;
  void *v31;
  uint64_t v32;
  _xpc_connection_s *result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void (*v47)(uint64_t);
  os_log_type_t v48;
  NSObject *v49;
  NSObject *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53[3];

  v1 = *(void **)(v0 + 1240);
  v2 = *(_QWORD *)(v0 + 880);
  v3 = *(_QWORD *)(v0 + 840);
  v45 = sub_238215F50();
  v47 = *(void (**)(uint64_t))(v3 + 16);
  v47(v2);
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v0 + 152);
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v0 + 168);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_238223190;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v8 = v1;
  v9 = sub_23823842C();
  v48 = sub_23823887C();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 34;
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_2382231B0;
  *(_QWORD *)(v12 + 24) = v6;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_2382238FC;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = 32;
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = 8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_238223138;
  *(_QWORD *)(v16 + 24) = v7;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_2382238FC;
  *(_QWORD *)(v17 + 24) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v18 + 32) = sub_238223A14;
  *(_QWORD *)(v18 + 40) = v10;
  *(_QWORD *)(v18 + 48) = sub_238223A14;
  *(_QWORD *)(v18 + 56) = v11;
  *(_QWORD *)(v18 + 64) = sub_238223900;
  *(_QWORD *)(v18 + 72) = v13;
  *(_QWORD *)(v18 + 80) = sub_238223A14;
  *(_QWORD *)(v18 + 88) = v14;
  *(_QWORD *)(v18 + 96) = sub_238223A14;
  *(_QWORD *)(v18 + 104) = v15;
  *(_QWORD *)(v18 + 112) = sub_238223900;
  *(_QWORD *)(v18 + 120) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  v19 = v48;
  v49 = v9;
  if (os_log_type_enabled(v9, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v52 = 0;
    v53[0] = v21;
    *(_WORD *)v20 = 514;
    v20[2] = *(_BYTE *)(v10 + 16);
    swift_release();
    v20[3] = *(_BYTE *)(v11 + 16);
    v51 = v20 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v51, (uint64_t)&v52, v53, *(uint64_t (**)(void))(v13 + 16));
    swift_release();
    v22 = v51;
    *v51 = *(_BYTE *)(v14 + 16);
    swift_release();
    v22[1] = *(_BYTE *)(v15 + 16);
    v51 = v22 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v51, (uint64_t)&v52, v53, *(uint64_t (**)(void))(v17 + 16));
    v23 = *(_QWORD *)(v0 + 880);
    v24 = *(_QWORD *)(v0 + 840);
    v25 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, v49, v19, "unable to find config for identity %{public}s with error %s", v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v21, -1, -1);
    MEMORY[0x23B82FE28](v20, -1, -1);

    v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v26(v23, v25);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 880);
    v28 = *(_QWORD *)(v0 + 840);
    v29 = *(_QWORD *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v26 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v26(v27, v29);
  }
  reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (!reply)
  {
    v44 = *(void **)(v0 + 1240);
    sub_2381CCA1C(*(_QWORD *)(v0 + 1080), (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (_xpc_connection_s *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v31 = reply;
  v32 = *(_QWORD *)(v0 + 784);
  xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage event fields");
  result = (_xpc_connection_s *)swift_beginAccess();
  v34 = *(_QWORD *)(v32 + 112);
  if (v34)
  {
    swift_beginAccess();
    result = *(_xpc_connection_s **)(v34 + 16);
    if (result)
    {
      v35 = *(_QWORD *)(v0 + 872);
      v36 = *(_QWORD *)(v0 + 832);
      xpc_connection_send_message(result, v31);
      ((void (*)(uint64_t, uint64_t, uint64_t))v47)(v35, v45, v36);
      v37 = sub_23823842C();
      v38 = sub_238238864();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(void **)(v0 + 1240);
      v41 = *(_QWORD *)(v0 + 1080);
      v42 = *(_QWORD *)(v0 + 872);
      v50 = *(NSObject **)(v0 + 832);
      if (v39)
      {
        v46 = *(void **)(v0 + 1240);
        v43 = (uint8_t *)swift_slowAlloc();
        v52 = 0;
        v53[0] = 0;
        *(_WORD *)v43 = 0;
        v51 = v43 + 2;
        sub_238222B8C(MEMORY[0x24BEE4AF8], (uint64_t)&v51, (uint64_t)&v52, (uint64_t)v53);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v37, v38, "SendOneMessage Error Reply Sent", v43, 2u);
        MEMORY[0x23B82FE28](v43, -1, -1);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
      }
      v26(v42, (uint64_t)v50);
      sub_2381CCA1C(v41, (uint64_t (*)(_QWORD))type metadata accessor for CachedSession);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23821E52C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  os_log_type_t v50;
  NSObject *oslog;
  os_log_t osloga;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  *(_OWORD *)(v0 + 163) = 0u;
  v1 = (void *)v0[146];
  v2 = v0[99];
  v0[92] = sub_2381D5F9C(MEMORY[0x24BEE4AF8]);
  xpc_dictionary_get_count(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E79D0);
  sub_2382385AC();
  v3 = swift_allocObject();
  v0[165] = v3;
  *(_QWORD *)(v3 + 16) = v0 + 92;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject();
  v0[22] = MEMORY[0x24BDAC760];
  *(_QWORD *)(v4 + 16) = sub_238223270;
  *(_QWORD *)(v4 + 24) = v3;
  v0[26] = sub_2381D96B0;
  v0[27] = v4;
  v0[23] = 1107296256;
  v0[24] = sub_2381D5F98;
  v0[25] = &block_descriptor_3;
  v5 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v1, v5);
  swift_unknownObjectRelease();
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
    return result;
  }
  v7 = 4079420;
  v8 = v0[129];
  sub_2382228AC(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v8);
  v9 = type metadata accessor for ServiceEventValue();
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) != 1)
  {
    sub_238223818(v0[129], v0[128], (uint64_t *)&unk_2568E7500);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(_QWORD *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(_QWORD *)v0[128];
LABEL_7:
      v12 = sub_238238BE8();
      v14 = v13;
      goto LABEL_10;
    }
    sub_2381CCA1C(v0[128], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
  }
  v14 = 0xE300000000000000;
  v12 = 4079420;
LABEL_10:
  v0[167] = v14;
  v0[166] = v12;
  v15 = v0[127];
  sub_2381CCCD0(v0[129], (uint64_t *)&unk_2568E7500);
  sub_2382228AC(0x7375746174735FLL, 0xE700000000000000, v0[92], v15);
  if (v10(v15, 1, v9) == 1)
  {
LABEL_17:
    v18 = 0xE300000000000000;
    goto LABEL_18;
  }
  sub_238223818(v0[127], v0[126], (uint64_t *)&unk_2568E7500);
  v16 = swift_getEnumCaseMultiPayload();
  if (v16 == 2)
  {
    v0[93] = *(_QWORD *)v0[126];
    goto LABEL_15;
  }
  if (v16 != 1)
  {
    sub_2381CCA1C(v0[126], (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    goto LABEL_17;
  }
  v0[94] = *(_QWORD *)v0[126];
LABEL_15:
  v7 = sub_238238BE8();
  v18 = v17;
LABEL_18:
  v0[169] = v18;
  v0[168] = v7;
  v19 = v0[125];
  v20 = v0[105];
  v21 = v0[104];
  sub_2381CCCD0(v0[127], (uint64_t *)&unk_2568E7500);
  v22 = sub_238215F50();
  v0[170] = v22;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v0[171] = v23;
  v23(v19, v22, v21);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v12;
  *(_QWORD *)(v24 + 24) = v14;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v7;
  *(_QWORD *)(v25 + 24) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_23823842C();
  v50 = sub_238238894();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 34;
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_238223A1C;
  *(_QWORD *)(v28 + 24) = v24;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_2382238FC;
  *(_QWORD *)(v29 + 24) = v28;
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = 34;
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = 8;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_238223A1C;
  *(_QWORD *)(v32 + 24) = v25;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_2382238FC;
  *(_QWORD *)(v33 + 24) = v32;
  v0[172] = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9098);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v34 + 32) = sub_238223A14;
  *(_QWORD *)(v34 + 40) = v26;
  *(_QWORD *)(v34 + 48) = sub_238223A14;
  *(_QWORD *)(v34 + 56) = v27;
  *(_QWORD *)(v34 + 64) = sub_238223900;
  *(_QWORD *)(v34 + 72) = v29;
  *(_QWORD *)(v34 + 80) = sub_238223A14;
  *(_QWORD *)(v34 + 88) = v30;
  *(_QWORD *)(v34 + 96) = sub_238223A14;
  *(_QWORD *)(v34 + 104) = v31;
  *(_QWORD *)(v34 + 112) = sub_238223900;
  *(_QWORD *)(v34 + 120) = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v50))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v54 = 0;
    v55 = v36;
    *(_WORD *)v35 = 514;
    v35[2] = *(_BYTE *)(v26 + 16);
    swift_release();
    v35[3] = *(_BYTE *)(v27 + 16);
    v53 = v35 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v53, (uint64_t)&v54, &v55, *(uint64_t (**)(void))(v29 + 16));
    swift_release();
    v37 = v53;
    *v53 = *(_BYTE *)(v30 + 16);
    swift_release();
    v37[1] = *(_BYTE *)(v31 + 16);
    v53 = v37 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v53, (uint64_t)&v54, &v55, *(uint64_t (**)(void))(v33 + 16));
    v38 = v0[125];
    v39 = v0[105];
    v40 = v0[104];
    swift_release();
    _os_log_impl(&dword_2381C6000, oslog, v50, "sending one message %{public}s:%{public}s", v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v36, -1, -1);
    MEMORY[0x23B82FE28](v35, -1, -1);

    v41 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v41(v38, v40);
  }
  else
  {
    v42 = v0[125];
    v43 = v0[105];
    v44 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v41(v42, v44);
  }
  v0[173] = v41;
  v45 = v0[98];
  v46 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v46);
  v0[78] = v47;
  v0[79] = v48;
  osloga = (os_log_t)(**(int **)(**(_QWORD **)(v45 + 160) + 152) + *(_QWORD *)(**(_QWORD **)(v45 + 160) + 152));
  v49 = (_QWORD *)swift_task_alloc();
  v0[174] = v49;
  *v49 = v0;
  v49[1] = sub_238219C14;
  return ((uint64_t (*)(_QWORD *))osloga)(v0 + 15);
}

uint64_t sub_23821ED20()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  _BYTE *v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t ObjectType;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  os_log_type_t type;
  os_log_type_t typea[8];
  NSObject *oslog;
  NSObject *osloga;
  NSObject *oslogb;
  os_log_t oslogc;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;

  *(_QWORD *)(v0 + 1432) = *(_QWORD *)(v0 + 616);
  *(_QWORD *)(v0 + 1440) = *(_QWORD *)(v0 + 624);
  *(_QWORD *)(v0 + 1448) = *(_QWORD *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_238204BB4();
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 1256);
  if (*v1 == 1)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v0 + 1456) = v3;
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 800);
      LODWORD(v5) = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 1640) = v5;
      v5 = v5;
      v6 = (v5 + 16) & ~v5;
      *(_QWORD *)(v0 + 1464) = *(_QWORD *)(v4 + 72);
      *(_OWORD *)(v0 + 1472) = 0u;
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
      v8 = *(_QWORD *)(v0 + 1360);
      v104 = *(_QWORD *)(v0 + 1352);
      v9 = *(_QWORD *)(v0 + 1336);
      v10 = *(_QWORD *)(v0 + 1328);
      v11 = *(_QWORD *)(v0 + 992);
      v12 = *(_QWORD *)(v0 + 832);
      v13 = *(_QWORD *)(v0 + 824);
      v14 = *(_QWORD *)(v0 + 816);
      v106 = *(_QWORD *)(v0 + 1344);
      sub_2381D9630(v2 + ((v5 + 32) & ~v5), v13, type metadata accessor for SessionConfiguration.Backend);
      v7(v11, v8, v12);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v10;
      *(_QWORD *)(v15 + 24) = v9;
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v106;
      *(_QWORD *)(v16 + 24) = v104;
      sub_2381D9630(v13, v14, type metadata accessor for SessionConfiguration.Backend);
      v107 = swift_allocObject();
      sub_2381ED34C(v14, v107 + v6, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      oslog = sub_23823842C();
      type = sub_238238894();
      v17 = swift_allocObject();
      *(_BYTE *)(v17 + 16) = 34;
      v105 = swift_allocObject();
      *(_BYTE *)(v105 + 16) = 8;
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = sub_238223A1C;
      *(_QWORD *)(v18 + 24) = v15;
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = sub_2382238FC;
      *(_QWORD *)(v19 + 24) = v18;
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 16) = 34;
      v21 = swift_allocObject();
      *(_BYTE *)(v21 + 16) = 8;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = sub_238223A1C;
      *(_QWORD *)(v22 + 24) = v16;
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = sub_2382238FC;
      *(_QWORD *)(v23 + 24) = v22;
      v24 = swift_allocObject();
      *(_BYTE *)(v24 + 16) = 34;
      v25 = swift_allocObject();
      *(_BYTE *)(v25 + 16) = 8;
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = sub_238223480;
      *(_QWORD *)(v26 + 24) = v107;
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_2382238FC;
      *(_QWORD *)(v27 + 24) = v26;
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_23823CC00;
      *(_QWORD *)(v28 + 32) = sub_238223A14;
      *(_QWORD *)(v28 + 40) = v17;
      *(_QWORD *)(v28 + 48) = sub_238223A14;
      *(_QWORD *)(v28 + 56) = v105;
      *(_QWORD *)(v28 + 64) = sub_238223900;
      *(_QWORD *)(v28 + 72) = v19;
      *(_QWORD *)(v28 + 80) = sub_238223A14;
      *(_QWORD *)(v28 + 88) = v20;
      *(_QWORD *)(v28 + 96) = sub_238223A14;
      *(_QWORD *)(v28 + 104) = v21;
      *(_QWORD *)(v28 + 112) = sub_238223900;
      *(_QWORD *)(v28 + 120) = v23;
      *(_QWORD *)(v28 + 128) = sub_238223A14;
      *(_QWORD *)(v28 + 136) = v24;
      *(_QWORD *)(v28 + 144) = sub_238223A14;
      *(_QWORD *)(v28 + 152) = v25;
      *(_QWORD *)(v28 + 160) = sub_238223900;
      *(_QWORD *)(v28 + 168) = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, type))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v102 = swift_slowAlloc();
        *(_QWORD *)(v0 + 720) = 0;
        *(_QWORD *)(v0 + 728) = v102;
        *(_WORD *)v29 = 770;
        v29[2] = *(_BYTE *)(v17 + 16);
        *(_QWORD *)(v0 + 712) = v29 + 3;
        swift_release();
        v30 = *(_BYTE **)(v0 + 712);
        *v30 = *(_BYTE *)(v105 + 16);
        *(_QWORD *)(v0 + 712) = v30 + 1;
        swift_release();
        sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v19 + 16));
        swift_release();
        v31 = *(_BYTE **)(v0 + 712);
        *v31 = *(_BYTE *)(v20 + 16);
        *(_QWORD *)(v0 + 712) = v31 + 1;
        swift_release();
        v32 = *(_BYTE **)(v0 + 712);
        *v32 = *(_BYTE *)(v21 + 16);
        *(_QWORD *)(v0 + 712) = v32 + 1;
        swift_release();
        sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v23 + 16));
        swift_release();
        v33 = *(_BYTE **)(v0 + 712);
        *v33 = *(_BYTE *)(v24 + 16);
        *(_QWORD *)(v0 + 712) = v33 + 1;
        swift_release();
        v34 = *(_BYTE **)(v0 + 712);
        *v34 = *(_BYTE *)(v25 + 16);
        *(_QWORD *)(v0 + 712) = v34 + 1;
        swift_release();
        sub_238222C1C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v27 + 16));
        v35 = *(_QWORD *)(v0 + 992);
        v36 = *(_QWORD *)(v0 + 840);
        v37 = *(_QWORD *)(v0 + 832);
        swift_release();
        _os_log_impl(&dword_2381C6000, oslog, type, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v29, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v102, -1, -1);
        MEMORY[0x23B82FE28](v29, -1, -1);

        v38 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
        v38(v35, v37);
      }
      else
      {
        v94 = *(_QWORD *)(v0 + 992);
        v95 = *(_QWORD *)(v0 + 840);
        v96 = *(_QWORD *)(v0 + 832);

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v38 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
        v38(v94, v96);
      }
      *(_QWORD *)(v0 + 1488) = v38;
      *(_QWORD *)(v0 + 1496) = *(_QWORD *)(*(_QWORD *)(v0 + 784) + 168);
      *(_QWORD *)(v0 + 1504) = sub_2381E2A90();
      *(_QWORD *)(v0 + 1512) = v97;
      return swift_task_switch();
    }
  }
  swift_bridgeObjectRelease();
  v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1384);
  *(_QWORD *)(v0 + 1528) = v39;
  if (*(_QWORD *)(v0 + 1304))
  {
    v108 = v39;
    v40 = *(_QWORD *)(v0 + 1352);
    v41 = *(_QWORD *)(v0 + 1344);
    v42 = *(_QWORD *)(v0 + 1336);
    v43 = *(_QWORD *)(v0 + 1328);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 1312);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 984), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = v43;
    *(_QWORD *)(v44 + 24) = v42;
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v41;
    *(_QWORD *)(v45 + 24) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    osloga = sub_23823842C();
    v103 = sub_238238894();
    v46 = swift_allocObject();
    *(_BYTE *)(v46 + 16) = 34;
    v47 = swift_allocObject();
    *(_BYTE *)(v47 + 16) = 8;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_238223A1C;
    *(_QWORD *)(v48 + 24) = v44;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_2382238FC;
    *(_QWORD *)(v49 + 24) = v48;
    v50 = swift_allocObject();
    *(_BYTE *)(v50 + 16) = 34;
    v51 = swift_allocObject();
    *(_BYTE *)(v51 + 16) = 8;
    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = sub_238223A1C;
    *(_QWORD *)(v52 + 24) = v45;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = sub_2382238FC;
    *(_QWORD *)(v53 + 24) = v52;
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v54 + 32) = sub_238223A14;
    *(_QWORD *)(v54 + 40) = v46;
    *(_QWORD *)(v54 + 48) = sub_238223A14;
    *(_QWORD *)(v54 + 56) = v47;
    *(_QWORD *)(v54 + 64) = sub_238223900;
    *(_QWORD *)(v54 + 72) = v49;
    *(_QWORD *)(v54 + 80) = sub_238223A14;
    *(_QWORD *)(v54 + 88) = v50;
    *(_QWORD *)(v54 + 96) = sub_238223A14;
    *(_QWORD *)(v54 + 104) = v51;
    *(_QWORD *)(v54 + 112) = sub_238223900;
    *(_QWORD *)(v54 + 120) = v53;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v103))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v116 = 0;
      v117 = v56;
      *(_WORD *)v55 = 514;
      v55[2] = *(_BYTE *)(v46 + 16);
      swift_release();
      v55[3] = *(_BYTE *)(v47 + 16);
      v115 = v55 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v115, (uint64_t)&v116, &v117, *(uint64_t (**)(void))(v49 + 16));
      swift_release();
      v57 = v115;
      *v115 = *(_BYTE *)(v50 + 16);
      swift_release();
      v57[1] = *(_BYTE *)(v51 + 16);
      v115 = v57 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v115, (uint64_t)&v116, &v117, *(uint64_t (**)(void))(v53 + 16));
      v58 = *(_QWORD *)(v0 + 984);
      v59 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, osloga, v103, "processing sendOneMessage, immediate %{public}s:%{public}s", v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v56, -1, -1);
      MEMORY[0x23B82FE28](v55, -1, -1);

      v60 = v58;
      v61 = v59;
    }
    else
    {
      v85 = *(_QWORD *)(v0 + 984);
      v86 = *(_QWORD *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v60 = v85;
      v61 = v86;
    }
    v108(v60, v61);
    v87 = *(_QWORD *)(v0 + 1448);
    v88 = *(_QWORD *)(v0 + 1440);
    v89 = *(_QWORD *)(v0 + 1432);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7600);
    v91 = swift_allocObject();
    *(_QWORD *)(v0 + 1536) = v91;
    *(_OWORD *)(v91 + 16) = xmmword_238239E40;
    *(_QWORD *)(v91 + 32) = v89;
    *(_QWORD *)(v91 + 40) = v88;
    *(_QWORD *)(v91 + 48) = v87;
    oslogc = (os_log_t)(**(int **)(*(_QWORD *)typea + 8) + *(_QWORD *)(*(_QWORD *)typea + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1544) = v92;
    *v92 = v0;
    v92[1] = sub_23821C020;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))oslogc)(v91, ObjectType, *(_QWORD *)typea);
  }
  else
  {
    v62 = *(_QWORD *)(*(_QWORD *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (!v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 1576) = 0;
      *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
      return swift_task_switch();
    }
    v63 = *(_QWORD *)(v0 + 1352);
    v64 = *(_QWORD *)(v0 + 1344);
    v65 = *(_QWORD *)(v0 + 1336);
    v66 = *(_QWORD *)(v0 + 1328);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = v66;
    *(_QWORD *)(v67 + 24) = v65;
    v68 = swift_allocObject();
    *(_QWORD *)(v68 + 16) = v64;
    *(_QWORD *)(v68 + 24) = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    oslogb = sub_23823842C();
    v69 = sub_238238894();
    v70 = swift_allocObject();
    *(_BYTE *)(v70 + 16) = 34;
    v71 = swift_allocObject();
    *(_BYTE *)(v71 + 16) = 8;
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = sub_238223A1C;
    *(_QWORD *)(v72 + 24) = v67;
    v73 = swift_allocObject();
    *(_QWORD *)(v73 + 16) = sub_2382238FC;
    *(_QWORD *)(v73 + 24) = v72;
    v74 = swift_allocObject();
    *(_BYTE *)(v74 + 16) = 34;
    v75 = swift_allocObject();
    *(_BYTE *)(v75 + 16) = 8;
    v76 = swift_allocObject();
    *(_QWORD *)(v76 + 16) = sub_238223A1C;
    *(_QWORD *)(v76 + 24) = v68;
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = sub_2382238FC;
    *(_QWORD *)(v77 + 24) = v76;
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v78 + 32) = sub_238223A14;
    *(_QWORD *)(v78 + 40) = v70;
    *(_QWORD *)(v78 + 48) = sub_238223A14;
    *(_QWORD *)(v78 + 56) = v71;
    *(_QWORD *)(v78 + 64) = sub_238223900;
    *(_QWORD *)(v78 + 72) = v73;
    *(_QWORD *)(v78 + 80) = sub_238223A14;
    *(_QWORD *)(v78 + 88) = v74;
    *(_QWORD *)(v78 + 96) = sub_238223A14;
    *(_QWORD *)(v78 + 104) = v75;
    *(_QWORD *)(v78 + 112) = sub_238223900;
    *(_QWORD *)(v78 + 120) = v77;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslogb, v69))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      v116 = 0;
      v117 = v80;
      *(_WORD *)v79 = 514;
      v79[2] = *(_BYTE *)(v70 + 16);
      swift_release();
      v79[3] = *(_BYTE *)(v71 + 16);
      v115 = v79 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v115, (uint64_t)&v116, &v117, *(uint64_t (**)(void))(v73 + 16));
      swift_release();
      v81 = v115;
      *v115 = *(_BYTE *)(v74 + 16);
      swift_release();
      v81[1] = *(_BYTE *)(v75 + 16);
      v115 = v81 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v115, (uint64_t)&v116, &v117, *(uint64_t (**)(void))(v77 + 16));
      v82 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v83 = *(_QWORD *)(v0 + 968);
      v84 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, oslogb, v69, "caching sendOneMessage %{public}s:%{public}s", v79, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v80, -1, -1);
      MEMORY[0x23B82FE28](v79, -1, -1);

      v82(v83, v84);
    }
    else
    {
      v98 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v99 = *(_QWORD *)(v0 + 968);
      v100 = *(_QWORD *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v98(v99, v100);
    }
    sub_2382382DC();
    v101 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1560) = v101;
    *v101 = v0;
    v101[1] = sub_23821CA18;
    return sub_2381DB4CC(v0 + 120, *(_QWORD *)(v0 + 1056), *(double *)(v0 + 1216), *(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1448));
  }
}

uint64_t sub_23821FD68()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint8_t *v127;
  uint64_t v128;
  _BYTE *v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t ObjectType;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint8_t *buf;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  os_log_type_t type;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSObject *oslog;
  os_log_type_t osloga;
  uint8_t *oslogb;
  os_log_t logb;
  os_log_t log;
  NSObject *loga;
  os_log_t logc;
  os_log_t logd;
  os_log_type_t v162[8];
  os_log_type_t v163[8];
  void (*v164)(uint64_t, uint64_t);
  os_log_type_t v165;
  os_log_type_t v166[8];
  uint64_t (*v167)(uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  os_log_type_t v171;
  os_log_t v172;
  os_log_t v173;
  os_log_t v174;
  NSObject *v175;
  NSObject *v176;
  uint64_t v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;

  v1 = *(unsigned __int8 *)(v0 + 1640);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v168 = *(_QWORD *)(v0 + 1352);
  v172 = *(os_log_t *)(v0 + 1520);
  v4 = *(_QWORD *)(v0 + 1336);
  v5 = *(_QWORD *)(v0 + 1328);
  v6 = *(_QWORD *)(v0 + 864);
  v7 = *(_QWORD *)(v0 + 832);
  logb = *(os_log_t *)(v0 + 824);
  *(_QWORD *)v162 = *(_QWORD *)(v0 + 1344);
  v8 = *(_QWORD *)(v0 + 816);
  swift_bridgeObjectRelease();
  v9 = (v1 + 16) & ~v1;
  v2(v6, v3, v7);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)v162;
  *(_QWORD *)(v11 + 24) = v168;
  sub_2381D9630((uint64_t)logb, v8, type metadata accessor for SessionConfiguration.Backend);
  v12 = swift_allocObject();
  sub_2381ED34C(v8, v12 + v9, type metadata accessor for SessionConfiguration.Backend);
  v151 = swift_allocObject();
  *(_QWORD *)(v151 + 16) = v172;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v172;
  oslog = sub_23823842C();
  type = sub_23823887C();
  v173 = (os_log_t)swift_allocObject();
  LOBYTE(v173[2].isa) = 34;
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = 8;
  v15 = v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_2382234E4;
  *(_QWORD *)(v16 + 24) = v10;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_2382238FC;
  *(_QWORD *)(v17 + 24) = v16;
  v153 = swift_allocObject();
  *(_BYTE *)(v153 + 16) = 34;
  v169 = swift_allocObject();
  *(_BYTE *)(v169 + 16) = 8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_238223A1C;
  *(_QWORD *)(v18 + 24) = v11;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_2382238FC;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = v19;
  log = (os_log_t)v19;
  v152 = swift_allocObject();
  *(_BYTE *)(v152 + 16) = 34;
  v149 = swift_allocObject();
  *(_BYTE *)(v149 + 16) = 8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_238223480;
  *(_QWORD *)(v21 + 24) = v12;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_2382238FC;
  *(_QWORD *)(v22 + 24) = v21;
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 16) = 34;
  v24 = v23;
  *(_QWORD *)v163 = v23;
  v148 = swift_allocObject();
  *(_BYTE *)(v148 + 16) = 8;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_238223138;
  *(_QWORD *)(v25 + 24) = v151;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_2382238FC;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23823C430;
  *(_QWORD *)(v27 + 32) = sub_238223A14;
  *(_QWORD *)(v27 + 40) = v173;
  *(_QWORD *)(v27 + 48) = sub_238223A14;
  *(_QWORD *)(v27 + 56) = v15;
  *(_QWORD *)(v27 + 64) = sub_238223900;
  *(_QWORD *)(v27 + 72) = v17;
  *(_QWORD *)(v27 + 80) = sub_238223A14;
  *(_QWORD *)(v27 + 88) = v153;
  *(_QWORD *)(v27 + 96) = sub_238223A14;
  *(_QWORD *)(v27 + 104) = v169;
  *(_QWORD *)(v27 + 112) = sub_238223900;
  *(_QWORD *)(v27 + 120) = v20;
  *(_QWORD *)(v27 + 128) = sub_238223A14;
  *(_QWORD *)(v27 + 136) = v152;
  *(_QWORD *)(v27 + 144) = sub_238223A14;
  *(_QWORD *)(v27 + 152) = v149;
  *(_QWORD *)(v27 + 160) = sub_238223900;
  *(_QWORD *)(v27 + 168) = v22;
  *(_QWORD *)(v27 + 176) = sub_238223A14;
  *(_QWORD *)(v27 + 184) = v24;
  *(_QWORD *)(v27 + 192) = sub_238223A14;
  *(_QWORD *)(v27 + 200) = v148;
  *(_QWORD *)(v27 + 208) = sub_238223900;
  *(_QWORD *)(v27 + 216) = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, type))
  {
    v28 = v177;
    buf = (uint8_t *)swift_slowAlloc();
    v147 = swift_slowAlloc();
    *(_QWORD *)(v177 + 696) = 0;
    *(_QWORD *)(v177 + 704) = v147;
    *(_WORD *)buf = 1026;
    buf[2] = (uint8_t)v173[2].isa;
    *(_QWORD *)(v177 + 688) = buf + 3;
    swift_release();
    v29 = *(_BYTE **)(v177 + 688);
    *v29 = *(_BYTE *)(v15 + 16);
    *(_QWORD *)(v177 + 688) = v29 + 1;
    swift_release();
    sub_238222C1C((uint64_t *)(v28 + 688), v28 + 696, (uint64_t *)(v28 + 704), *(uint64_t (**)(void))(v17 + 16));
    swift_release();
    v30 = *(_BYTE **)(v177 + 688);
    *v30 = *(_BYTE *)(v153 + 16);
    *(_QWORD *)(v177 + 688) = v30 + 1;
    swift_release();
    v31 = *(_BYTE **)(v177 + 688);
    *v31 = *(_BYTE *)(v169 + 16);
    *(_QWORD *)(v177 + 688) = v31 + 1;
    swift_release();
    sub_238222C1C((uint64_t *)(v28 + 688), v28 + 696, (uint64_t *)(v28 + 704), (uint64_t (*)(void))log[2].isa);
    swift_release();
    v32 = *(_BYTE **)(v177 + 688);
    *v32 = *(_BYTE *)(v152 + 16);
    *(_QWORD *)(v177 + 688) = v32 + 1;
    swift_release();
    v33 = *(_BYTE **)(v177 + 688);
    *v33 = *(_BYTE *)(v149 + 16);
    *(_QWORD *)(v177 + 688) = v33 + 1;
    swift_release();
    sub_238222C1C((uint64_t *)(v28 + 688), v28 + 696, (uint64_t *)(v28 + 704), *(uint64_t (**)(void))(v22 + 16));
    swift_release();
    v34 = *(_BYTE **)(v177 + 688);
    *v34 = *(_BYTE *)(*(_QWORD *)v163 + 16);
    *(_QWORD *)(v177 + 688) = v34 + 1;
    swift_release();
    v35 = *(_BYTE **)(v177 + 688);
    *v35 = *(_BYTE *)(v148 + 16);
    *(_QWORD *)(v177 + 688) = v35 + 1;
    swift_release();
    sub_238222C1C((uint64_t *)(v28 + 688), v28 + 696, (uint64_t *)(v28 + 704), *(uint64_t (**)(void))(v26 + 16));
    v36 = *(void **)(v177 + 1520);
    v37 = *(_QWORD *)(v177 + 864);
    v38 = *(_QWORD *)(v177 + 840);
    v39 = *(_QWORD *)(v177 + 832);
    v40 = *(_QWORD *)(v177 + 824);
    swift_release();
    _os_log_impl(&dword_2381C6000, oslog, type, "failed writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s with error %{public}s", buf, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v147, -1, -1);
    MEMORY[0x23B82FE28](buf, -1, -1);

    v41 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v41(v37, v39);
    v42 = v40;
  }
  else
  {
    v43 = *(void **)(v177 + 1520);
    v44 = *(_QWORD *)(v177 + 864);
    v45 = *(_QWORD *)(v177 + 840);
    v46 = *(_QWORD *)(v177 + 832);
    v47 = *(_QWORD *)(v177 + 824);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v41 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v41(v44, v46);
    v42 = v47;
  }
  sub_2381CCA1C(v42, type metadata accessor for SessionConfiguration.Backend);
  v48 = *(_QWORD *)(v177 + 1480) + 1;
  if (v48 != *(_QWORD *)(v177 + 1456))
  {
    *(_QWORD *)(v177 + 1480) = v48;
    *(_QWORD *)(v177 + 1472) = 0;
    v72 = *(unsigned __int8 *)(v177 + 1640);
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 1368);
    v74 = *(_QWORD *)(v177 + 1360);
    v75 = *(_QWORD *)(v177 + 1352);
    v174 = *(os_log_t *)(v177 + 1344);
    v76 = *(_QWORD *)(v177 + 1336);
    v77 = *(_QWORD *)(v177 + 1328);
    v78 = *(_QWORD *)(v177 + 992);
    v79 = (v72 + 16) & ~v72;
    v80 = *(_QWORD *)(v177 + 832);
    v81 = *(_QWORD *)(v177 + 824);
    v82 = *(_QWORD *)(v177 + 816);
    sub_2381D9630(*(_QWORD *)(v177 + 1256) + ((v72 + 32) & ~v72) + *(_QWORD *)(v177 + 1464) * v48, v81, type metadata accessor for SessionConfiguration.Backend);
    v73(v78, v74, v80);
    v83 = swift_allocObject();
    *(_QWORD *)(v83 + 16) = v77;
    *(_QWORD *)(v83 + 24) = v76;
    v84 = swift_allocObject();
    *(_QWORD *)(v84 + 16) = v174;
    *(_QWORD *)(v84 + 24) = v75;
    sub_2381D9630(v81, v82, type metadata accessor for SessionConfiguration.Backend);
    logc = (os_log_t)swift_allocObject();
    sub_2381ED34C(v82, (uint64_t)logc + v79, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v175 = sub_23823842C();
    v165 = sub_238238894();
    v85 = swift_allocObject();
    *(_BYTE *)(v85 + 16) = 34;
    v86 = swift_allocObject();
    *(_BYTE *)(v86 + 16) = 8;
    v87 = swift_allocObject();
    *(_QWORD *)(v87 + 16) = sub_238223A1C;
    *(_QWORD *)(v87 + 24) = v83;
    v88 = swift_allocObject();
    *(_QWORD *)(v88 + 16) = sub_2382238FC;
    *(_QWORD *)(v88 + 24) = v87;
    v89 = swift_allocObject();
    *(_BYTE *)(v89 + 16) = 34;
    v90 = swift_allocObject();
    *(_BYTE *)(v90 + 16) = 8;
    v91 = swift_allocObject();
    *(_QWORD *)(v91 + 16) = sub_238223A1C;
    *(_QWORD *)(v91 + 24) = v84;
    v92 = swift_allocObject();
    *(_QWORD *)(v92 + 16) = sub_2382238FC;
    *(_QWORD *)(v92 + 24) = v91;
    v93 = swift_allocObject();
    *(_BYTE *)(v93 + 16) = 34;
    v94 = swift_allocObject();
    *(_BYTE *)(v94 + 16) = 8;
    v95 = swift_allocObject();
    *(_QWORD *)(v95 + 16) = sub_238223480;
    *(_QWORD *)(v95 + 24) = logc;
    v96 = swift_allocObject();
    *(_QWORD *)(v96 + 16) = sub_2382238FC;
    *(_QWORD *)(v96 + 24) = v95;
    v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_23823CC00;
    *(_QWORD *)(v97 + 32) = sub_238223A14;
    *(_QWORD *)(v97 + 40) = v85;
    *(_QWORD *)(v97 + 48) = sub_238223A14;
    *(_QWORD *)(v97 + 56) = v86;
    *(_QWORD *)(v97 + 64) = sub_238223900;
    *(_QWORD *)(v97 + 72) = v88;
    *(_QWORD *)(v97 + 80) = sub_238223A14;
    *(_QWORD *)(v97 + 88) = v89;
    *(_QWORD *)(v97 + 96) = sub_238223A14;
    *(_QWORD *)(v97 + 104) = v90;
    *(_QWORD *)(v97 + 112) = sub_238223900;
    *(_QWORD *)(v97 + 120) = v92;
    *(_QWORD *)(v97 + 128) = sub_238223A14;
    *(_QWORD *)(v97 + 136) = v93;
    *(_QWORD *)(v97 + 144) = sub_238223A14;
    *(_QWORD *)(v97 + 152) = v94;
    *(_QWORD *)(v97 + 160) = sub_238223900;
    *(_QWORD *)(v97 + 168) = v96;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v175, v165))
    {
      oslogb = (uint8_t *)swift_slowAlloc();
      logd = (os_log_t)swift_slowAlloc();
      *(_QWORD *)(v177 + 720) = 0;
      *(_QWORD *)(v177 + 728) = logd;
      *(_WORD *)oslogb = 770;
      oslogb[2] = *(_BYTE *)(v85 + 16);
      *(_QWORD *)(v177 + 712) = oslogb + 3;
      swift_release();
      v98 = *(_BYTE **)(v177 + 712);
      *v98 = *(_BYTE *)(v86 + 16);
      *(_QWORD *)(v177 + 712) = v98 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v177 + 712), v177 + 720, (uint64_t *)(v177 + 728), *(uint64_t (**)(void))(v88 + 16));
      swift_release();
      v99 = *(_BYTE **)(v177 + 712);
      *v99 = *(_BYTE *)(v89 + 16);
      *(_QWORD *)(v177 + 712) = v99 + 1;
      swift_release();
      v100 = *(_BYTE **)(v177 + 712);
      *v100 = *(_BYTE *)(v90 + 16);
      *(_QWORD *)(v177 + 712) = v100 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v177 + 712), v177 + 720, (uint64_t *)(v177 + 728), *(uint64_t (**)(void))(v92 + 16));
      swift_release();
      v101 = *(_BYTE **)(v177 + 712);
      *v101 = *(_BYTE *)(v93 + 16);
      *(_QWORD *)(v177 + 712) = v101 + 1;
      swift_release();
      v102 = *(_BYTE **)(v177 + 712);
      *v102 = *(_BYTE *)(v94 + 16);
      *(_QWORD *)(v177 + 712) = v102 + 1;
      swift_release();
      sub_238222C1C((uint64_t *)(v177 + 712), v177 + 720, (uint64_t *)(v177 + 728), *(uint64_t (**)(void))(v96 + 16));
      v103 = *(_QWORD *)(v177 + 992);
      v104 = *(_QWORD *)(v177 + 840);
      v105 = *(_QWORD *)(v177 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, v175, v165, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", oslogb, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](logd, -1, -1);
      MEMORY[0x23B82FE28](oslogb, -1, -1);

      v106 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
      v106(v103, v105);
    }
    else
    {
      *(_QWORD *)v166 = *(_QWORD *)(v177 + 992);
      v107 = *(_QWORD *)(v177 + 840);
      v108 = *(_QWORD *)(v177 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v106 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
      v106(*(_QWORD *)v166, v108);
    }
    *(_QWORD *)(v177 + 1488) = v106;
    *(_QWORD *)(v177 + 1496) = *(_QWORD *)(*(_QWORD *)(v177 + 784) + 168);
    *(_QWORD *)(v177 + 1504) = sub_2381E2A90();
    *(_QWORD *)(v177 + 1512) = v109;
    return swift_task_switch();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v177 + 1528) = v41;
  if (*(_QWORD *)(v177 + 1304))
  {
    v164 = v41;
    v49 = *(_QWORD *)(v177 + 1352);
    v50 = *(_QWORD *)(v177 + 1344);
    v51 = *(_QWORD *)(v177 + 1336);
    v52 = *(_QWORD *)(v177 + 1328);
    v170 = *(_QWORD *)(v177 + 1312);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v177 + 1368))(*(_QWORD *)(v177 + 984), *(_QWORD *)(v177 + 1360), *(_QWORD *)(v177 + 832));
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v52;
    *(_QWORD *)(v53 + 24) = v51;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = v50;
    *(_QWORD *)(v54 + 24) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v55 = sub_23823842C();
    osloga = sub_238238894();
    v56 = swift_allocObject();
    *(_BYTE *)(v56 + 16) = 34;
    v57 = swift_allocObject();
    *(_BYTE *)(v57 + 16) = 8;
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = sub_238223A1C;
    *(_QWORD *)(v58 + 24) = v53;
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = sub_2382238FC;
    *(_QWORD *)(v59 + 24) = v58;
    v60 = swift_allocObject();
    *(_BYTE *)(v60 + 16) = 34;
    v61 = swift_allocObject();
    *(_BYTE *)(v61 + 16) = 8;
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = sub_238223A1C;
    *(_QWORD *)(v62 + 24) = v54;
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = sub_2382238FC;
    *(_QWORD *)(v63 + 24) = v62;
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v64 + 32) = sub_238223A14;
    *(_QWORD *)(v64 + 40) = v56;
    *(_QWORD *)(v64 + 48) = sub_238223A14;
    *(_QWORD *)(v64 + 56) = v57;
    *(_QWORD *)(v64 + 64) = sub_238223900;
    *(_QWORD *)(v64 + 72) = v59;
    *(_QWORD *)(v64 + 80) = sub_238223A14;
    *(_QWORD *)(v64 + 88) = v60;
    *(_QWORD *)(v64 + 96) = sub_238223A14;
    *(_QWORD *)(v64 + 104) = v61;
    *(_QWORD *)(v64 + 112) = sub_238223900;
    *(_QWORD *)(v64 + 120) = v63;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    loga = v55;
    if (os_log_type_enabled(v55, osloga))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      v66 = swift_slowAlloc();
      v179 = 0;
      v180 = v66;
      *(_WORD *)v65 = 514;
      v65[2] = *(_BYTE *)(v56 + 16);
      swift_release();
      v65[3] = *(_BYTE *)(v57 + 16);
      v178 = v65 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v178, (uint64_t)&v179, &v180, *(uint64_t (**)(void))(v59 + 16));
      swift_release();
      v67 = v178;
      *v178 = *(_BYTE *)(v60 + 16);
      swift_release();
      v67[1] = *(_BYTE *)(v61 + 16);
      v178 = v67 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v178, (uint64_t)&v179, &v180, *(uint64_t (**)(void))(v63 + 16));
      v68 = *(_QWORD *)(v177 + 984);
      v69 = *(_QWORD *)(v177 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, loga, osloga, "processing sendOneMessage, immediate %{public}s:%{public}s", v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v66, -1, -1);
      MEMORY[0x23B82FE28](v65, -1, -1);

      v70 = v68;
      v71 = v69;
    }
    else
    {
      v135 = *(_QWORD *)(v177 + 984);
      v136 = *(_QWORD *)(v177 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v70 = v135;
      v71 = v136;
    }
    v164(v70, v71);
    v137 = *(_QWORD *)(v177 + 1448);
    v138 = *(_QWORD *)(v177 + 1440);
    v139 = *(_QWORD *)(v177 + 1432);
    ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7600);
    v141 = swift_allocObject();
    *(_QWORD *)(v177 + 1536) = v141;
    *(_OWORD *)(v141 + 16) = xmmword_238239E40;
    *(_QWORD *)(v141 + 32) = v139;
    *(_QWORD *)(v141 + 40) = v138;
    *(_QWORD *)(v141 + 48) = v137;
    v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v170 + 8) + *(_QWORD *)(v170 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v142 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v177 + 1544) = v142;
    *v142 = v177;
    v142[1] = sub_23821C020;
    return v167(v141, ObjectType, v170);
  }
  v111 = *(_QWORD *)(*(_QWORD *)(v177 + 1256) + 16);
  swift_bridgeObjectRelease();
  v112 = *(_QWORD *)(v177 + 1336);
  if (!v111)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v177 + 1576) = 0;
    *(_QWORD *)(v177 + 1584) = *(_QWORD *)(**(_QWORD **)(v177 + 1224) + 256);
    return swift_task_switch();
  }
  v113 = *(_QWORD *)(v177 + 1352);
  v114 = *(_QWORD *)(v177 + 1344);
  v115 = *(_QWORD *)(v177 + 1328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v177 + 1368))(*(_QWORD *)(v177 + 968), *(_QWORD *)(v177 + 1360), *(_QWORD *)(v177 + 832));
  v116 = swift_allocObject();
  *(_QWORD *)(v116 + 16) = v115;
  *(_QWORD *)(v116 + 24) = v112;
  v117 = swift_allocObject();
  *(_QWORD *)(v117 + 16) = v114;
  *(_QWORD *)(v117 + 24) = v113;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v176 = sub_23823842C();
  v171 = sub_238238894();
  v118 = swift_allocObject();
  *(_BYTE *)(v118 + 16) = 34;
  v119 = swift_allocObject();
  *(_BYTE *)(v119 + 16) = 8;
  v120 = swift_allocObject();
  *(_QWORD *)(v120 + 16) = sub_238223A1C;
  *(_QWORD *)(v120 + 24) = v116;
  v121 = swift_allocObject();
  *(_QWORD *)(v121 + 16) = sub_2382238FC;
  *(_QWORD *)(v121 + 24) = v120;
  v122 = swift_allocObject();
  *(_BYTE *)(v122 + 16) = 34;
  v123 = swift_allocObject();
  *(_BYTE *)(v123 + 16) = 8;
  v124 = swift_allocObject();
  *(_QWORD *)(v124 + 16) = sub_238223A1C;
  *(_QWORD *)(v124 + 24) = v117;
  v125 = swift_allocObject();
  *(_QWORD *)(v125 + 16) = sub_2382238FC;
  *(_QWORD *)(v125 + 24) = v124;
  v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_23823CBF0;
  *(_QWORD *)(v126 + 32) = sub_238223A14;
  *(_QWORD *)(v126 + 40) = v118;
  *(_QWORD *)(v126 + 48) = sub_238223A14;
  *(_QWORD *)(v126 + 56) = v119;
  *(_QWORD *)(v126 + 64) = sub_238223900;
  *(_QWORD *)(v126 + 72) = v121;
  *(_QWORD *)(v126 + 80) = sub_238223A14;
  *(_QWORD *)(v126 + 88) = v122;
  *(_QWORD *)(v126 + 96) = sub_238223A14;
  *(_QWORD *)(v126 + 104) = v123;
  *(_QWORD *)(v126 + 112) = sub_238223900;
  *(_QWORD *)(v126 + 120) = v125;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v176, v171))
  {
    v127 = (uint8_t *)swift_slowAlloc();
    v128 = swift_slowAlloc();
    v179 = 0;
    v180 = v128;
    *(_WORD *)v127 = 514;
    v127[2] = *(_BYTE *)(v118 + 16);
    swift_release();
    v127[3] = *(_BYTE *)(v119 + 16);
    v178 = v127 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v178, (uint64_t)&v179, &v180, *(uint64_t (**)(void))(v121 + 16));
    swift_release();
    v129 = v178;
    *v178 = *(_BYTE *)(v122 + 16);
    swift_release();
    v129[1] = *(_BYTE *)(v123 + 16);
    v178 = v129 + 2;
    swift_release();
    sub_238222C1C((uint64_t *)&v178, (uint64_t)&v179, &v180, *(uint64_t (**)(void))(v125 + 16));
    v130 = *(void (**)(uint64_t, uint64_t))(v177 + 1528);
    v131 = *(_QWORD *)(v177 + 968);
    v132 = *(_QWORD *)(v177 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, v176, v171, "caching sendOneMessage %{public}s:%{public}s", v127, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v128, -1, -1);
    MEMORY[0x23B82FE28](v127, -1, -1);

    v133 = v131;
    v134 = v132;
  }
  else
  {
    v130 = *(void (**)(uint64_t, uint64_t))(v177 + 1528);
    v143 = *(_QWORD *)(v177 + 968);
    v144 = *(_QWORD *)(v177 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v133 = v143;
    v134 = v144;
  }
  v130(v133, v134);
  sub_2382382DC();
  v145 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v177 + 1560) = v145;
  *v145 = v177;
  v145[1] = sub_23821CA18;
  return sub_2381DB4CC(v177 + 120, *(_QWORD *)(v177 + 1056), *(double *)(v177 + 1216), *(_QWORD *)(v177 + 1432), *(_QWORD *)(v177 + 1440), *(_QWORD *)(v177 + 1448));
}

uint64_t sub_238221500()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  _BYTE *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  os_log_t osloga;
  NSObject *oslog;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;

  v1 = *(void **)(v0 + 1552);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(_QWORD *)(v0 + 856);
  v5 = *(_QWORD *)(v0 + 832);
  swift_bridgeObjectRelease();
  v2(v4, v3, v5);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  v7 = v1;
  v8 = sub_23823842C();
  v9 = sub_23823887C();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 34;
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_238223138;
  *(_QWORD *)(v12 + 24) = v6;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_2382238FC;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23823C420;
  *(_QWORD *)(v14 + 32) = sub_238223A14;
  *(_QWORD *)(v14 + 40) = v10;
  *(_QWORD *)(v14 + 48) = sub_238223A14;
  *(_QWORD *)(v14 + 56) = v11;
  *(_QWORD *)(v14 + 64) = sub_238223900;
  *(_QWORD *)(v14 + 72) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v8, v9))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v55 = 0;
    v56 = v16;
    *(_WORD *)v15 = 258;
    v15[2] = *(_BYTE *)(v10 + 16);
    swift_release();
    v15[3] = *(_BYTE *)(v11 + 16);
    v54 = v15 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v13 + 16));
    v17 = *(void **)(v0 + 1552);
    osloga = *(os_log_t *)(v0 + 1528);
    v18 = *(_QWORD *)(v0 + 856);
    v19 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, v8, v9, "immediate backend failed to send events: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v16, -1, -1);
    MEMORY[0x23B82FE28](v15, -1, -1);
    swift_unknownObjectRelease();

    ((void (*)(uint64_t, uint64_t))osloga)(v18, v19);
  }
  else
  {
    v20 = *(void **)(v0 + 1552);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v22 = *(_QWORD *)(v0 + 856);
    v23 = *(_QWORD *)(v0 + 832);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    v21(v22, v23);
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v0 + 1256) + 16);
  swift_bridgeObjectRelease();
  if (v24)
  {
    v25 = *(_QWORD *)(v0 + 1352);
    v26 = *(_QWORD *)(v0 + 1344);
    v27 = *(_QWORD *)(v0 + 1336);
    v28 = *(_QWORD *)(v0 + 1328);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 968), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = v27;
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v26;
    *(_QWORD *)(v30 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    oslog = sub_23823842C();
    v31 = sub_238238894();
    v32 = swift_allocObject();
    *(_BYTE *)(v32 + 16) = 34;
    v33 = swift_allocObject();
    *(_BYTE *)(v33 + 16) = 8;
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = sub_238223A1C;
    *(_QWORD *)(v34 + 24) = v29;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = sub_2382238FC;
    *(_QWORD *)(v35 + 24) = v34;
    v36 = swift_allocObject();
    *(_BYTE *)(v36 + 16) = 34;
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 8;
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_238223A1C;
    *(_QWORD *)(v38 + 24) = v30;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = sub_2382238FC;
    *(_QWORD *)(v39 + 24) = v38;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_23823CBF0;
    *(_QWORD *)(v40 + 32) = sub_238223A14;
    *(_QWORD *)(v40 + 40) = v32;
    *(_QWORD *)(v40 + 48) = sub_238223A14;
    *(_QWORD *)(v40 + 56) = v33;
    *(_QWORD *)(v40 + 64) = sub_238223900;
    *(_QWORD *)(v40 + 72) = v35;
    *(_QWORD *)(v40 + 80) = sub_238223A14;
    *(_QWORD *)(v40 + 88) = v36;
    *(_QWORD *)(v40 + 96) = sub_238223A14;
    *(_QWORD *)(v40 + 104) = v37;
    *(_QWORD *)(v40 + 112) = sub_238223900;
    *(_QWORD *)(v40 + 120) = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, v31))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v55 = 0;
      v56 = v42;
      *(_WORD *)v41 = 514;
      v41[2] = *(_BYTE *)(v32 + 16);
      swift_release();
      v41[3] = *(_BYTE *)(v33 + 16);
      v54 = v41 + 4;
      swift_release();
      sub_238222C1C((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v35 + 16));
      swift_release();
      v43 = v54;
      *v54 = *(_BYTE *)(v36 + 16);
      swift_release();
      v43[1] = *(_BYTE *)(v37 + 16);
      v54 = v43 + 2;
      swift_release();
      sub_238222C1C((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v39 + 16));
      v44 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v45 = *(_QWORD *)(v0 + 968);
      v46 = *(_QWORD *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_2381C6000, oslog, v31, "caching sendOneMessage %{public}s:%{public}s", v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v42, -1, -1);
      MEMORY[0x23B82FE28](v41, -1, -1);

      v44(v45, v46);
    }
    else
    {
      v48 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
      v49 = *(_QWORD *)(v0 + 968);
      v50 = *(_QWORD *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v48(v49, v50);
    }
    sub_2382382DC();
    v51 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1560) = v51;
    *v51 = v0;
    v51[1] = sub_23821CA18;
    return sub_2381DB4CC(v0 + 120, *(_QWORD *)(v0 + 1056), *(double *)(v0 + 1216), *(_QWORD *)(v0 + 1432), *(_QWORD *)(v0 + 1440), *(_QWORD *)(v0 + 1448));
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 1576) = 0;
    *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
    return swift_task_switch();
  }
}

uint64_t sub_238221CC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1568);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1368))(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 1360), *(_QWORD *)(v0 + 832));
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = v1;
  v4 = sub_23823842C();
  v5 = sub_23823887C();
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 34;
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = 8;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_238223138;
  *(_QWORD *)(v8 + 24) = v2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_2382238FC;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23823C420;
  *(_QWORD *)(v10 + 32) = sub_238223A14;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = sub_238223A14;
  *(_QWORD *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 64) = sub_238223900;
  *(_QWORD *)(v10 + 72) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v4, v5))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v22 = 0;
    v23 = v12;
    *(_WORD *)v11 = 258;
    v11[2] = *(_BYTE *)(v6 + 16);
    swift_release();
    v11[3] = *(_BYTE *)(v7 + 16);
    v21 = v11 + 4;
    swift_release();
    sub_238222C1C((uint64_t *)&v21, (uint64_t)&v22, &v23, *(uint64_t (**)(void))(v9 + 16));
    v13 = *(void **)(v0 + 1568);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v15 = *(_QWORD *)(v0 + 848);
    v16 = *(_QWORD *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_2381C6000, v4, v5, "failed to cache sendOneMessage event: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v12, -1, -1);
    MEMORY[0x23B82FE28](v11, -1, -1);

    v14(v15, v16);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 1528);
    v18 = *(_QWORD *)(v0 + 848);
    v19 = *(_QWORD *)(v0 + 832);

    swift_release();
    swift_release();
    swift_release();
    v17(v18, v19);
  }
  *(_QWORD *)(v0 + 1576) = 0;
  *(_QWORD *)(v0 + 1584) = *(_QWORD *)(**(_QWORD **)(v0 + 1224) + 256);
  return swift_task_switch();
}

void sub_238221FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_238238450();
  swift_unknownObjectRelease();
  if (v4 == a1)
  {
    if (qword_2568EF2C0 != -1)
      swift_once();
    v15 = sub_238238444();
    __swift_project_value_buffer(v15, (uint64_t)qword_2568EF2C8);
    swift_retain();
    v16 = sub_23823842C();
    v17 = sub_238238864();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v29 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = *(_QWORD *)(v2 + 128);
      v21 = *(_QWORD *)(v2 + 136);
      swift_bridgeObjectRetain();
      sub_2381CBC6C(v20, v21, &v29);
      sub_238238960();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2381C6000, v16, v17, "XPC client %{public}s closed connection", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v19, -1, -1);
      MEMORY[0x23B82FE28](v18, -1, -1);

    }
    else
    {

      swift_release();
    }
    sub_238214338();
  }
  else
  {
    v5 = sub_23823845C();
    swift_unknownObjectRelease();
    if (v5 == a1)
    {
      if (qword_2568EF2C0 != -1)
        swift_once();
      v22 = sub_238238444();
      __swift_project_value_buffer(v22, (uint64_t)qword_2568EF2C8);
      swift_retain();
      v23 = sub_23823842C();
      v24 = sub_238238864();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v29 = v26;
        *(_DWORD *)v25 = 136446210;
        v27 = *(_QWORD *)(v2 + 128);
        v28 = *(_QWORD *)(v2 + 136);
        swift_bridgeObjectRetain();
        sub_2381CBC6C(v27, v28, &v29);
        sub_238238960();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2381C6000, v23, v24, "XPC client %{public}s interrupted connection", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v26, -1, -1);
        MEMORY[0x23B82FE28](v25, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      v6 = (void *)MEMORY[0x23B830074](a1);
      v7 = sub_2382386C0();
      v9 = v8;
      if (qword_2568EF2C0 != -1)
        swift_once();
      v10 = sub_238238444();
      __swift_project_value_buffer(v10, (uint64_t)qword_2568EF2C8);
      swift_bridgeObjectRetain();
      v11 = sub_23823842C();
      v12 = sub_238238864();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v29 = v14;
        *(_DWORD *)v13 = 136315138;
        swift_bridgeObjectRetain();
        sub_2381CBC6C(v7, v9, &v29);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v11, v12, "XPC connection triggered error: %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v14, -1, -1);
        MEMORY[0x23B82FE28](v13, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_238214338();
      free(v6);
    }
  }
}

void sub_238222488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  const _xpc_type_s *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7500);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - v7;
  v9 = type metadata accessor for ServiceEventValue();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for XPCObject();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  v39 = sub_2382386C0();
  v23 = v22;
  v24 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v24, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)&unk_2568E7AC0;
    v26 = (uint64_t)v14;
  }
  else
  {
    sub_2381ED34C((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    sub_2381D9630((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    sub_2381D584C((uint64_t)v19, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v36 = (uint64_t)v8;
      v37 = v40;
      sub_2381ED34C(v36, v40, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      v38 = v41;
      sub_2381D9630(v37, v41, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v38, 0, 1, v9);
      sub_2381D6308(v38, v39, v23);
      sub_2381CCA1C(v37, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
      sub_2381CCA1C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
      return;
    }
    sub_2381CCA1C((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for XPCObject);
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)&unk_2568E7500;
    v26 = (uint64_t)v8;
  }
  sub_2381CCCD0(v26, v25);
  v27 = (const _xpc_type_s *)MEMORY[0x23B83014C](a2);
  xpc_type_get_name(v27);
  v28 = sub_2382386C0();
  v30 = v29;
  if (qword_2568EF2C0 != -1)
    swift_once();
  v31 = sub_238238444();
  __swift_project_value_buffer(v31, (uint64_t)qword_2568EF2C8);
  swift_bridgeObjectRetain();
  v32 = sub_23823842C();
  v33 = sub_23823887C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v44 = v35;
    *(_DWORD *)v34 = 136446210;
    swift_bridgeObjectRetain();
    v43 = sub_2381CBC6C(v28, v30, &v44);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v32, v33, "skipping invalid payload value of type %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v35, -1, -1);
    MEMORY[0x23B82FE28](v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_2382228AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_2381CC2AC(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = type metadata accessor for ServiceEventValue();
    v11 = *(_QWORD *)(v10 - 8);
    sub_2381D9630(v9 + *(_QWORD *)(v11 + 72) * v8, a4, (uint64_t (*)(_QWORD))type metadata accessor for ServiceEventValue);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13 = a4;
    v14 = 0;
    v15 = v10;
  }
  else
  {
    v15 = type metadata accessor for ServiceEventValue();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v13 = a4;
    v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_238222954()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_2382229B0()
{
  sub_238222954();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2382229C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_238238A38();
  *a1 = result;
  return result;
}

uint64_t sub_2382229F0()
{
  sub_238238CE4();
  sub_2382385C4();
  return sub_238238D08();
}

uint64_t sub_238222A50(uint64_t a1, uint64_t a2)
{
  sub_238200C64((unint64_t *)&unk_2568E8F70, a2, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC60);
  sub_238238A38();
  return sub_238238CF0();
}

uint64_t sub_238222AAC()
{
  sub_238238CE4();
  sub_2382385C4();
  return sub_238238D08();
}

BOOL sub_238222B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_238200C64((unint64_t *)&unk_2568E8F70, a2, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CC60);
  v2 = sub_238238A38();
  return v2 == sub_238238A38();
}

uint64_t sub_238222B8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_238222C1C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_2381CBC6C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_238238960();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_238222C8C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_238222CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2381CB914;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_2381CCDE0;
  return sub_238216B2C(v2, v3);
}

uint64_t sub_238222D40()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_238222D4C(uint64_t a1, uint64_t a2)
{
  return sub_238200C64(&qword_2568E8F28, a2, (uint64_t (*)(uint64_t))type metadata accessor for Client, (uint64_t)&unk_23823CCE8);
}

uint64_t sub_238222D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServiceTransportConfiguration()
{
  return &type metadata for ServiceTransportConfiguration;
}

uint64_t destroy for ClientIdentity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentity()
{
  return &type metadata for ClientIdentity;
}

uint64_t sub_23822309C()
{
  return swift_deallocObject();
}

_BYTE **sub_2382230AC(_BYTE **result)
{
  uint64_t v1;
  _BYTE *v2;

  v2 = *result;
  *v2 = *(_BYTE *)(v1 + 16);
  *result = v2 + 1;
  return result;
}

uint64_t sub_2382230C0()
{
  return swift_deallocObject();
}

uint64_t sub_2382230D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2382230F0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_238222C1C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2382230F8()
{
  return swift_deallocObject();
}

uint64_t sub_238223108()
{
  return swift_deallocObject();
}

uint64_t sub_238223118()
{
  return swift_deallocObject();
}

uint64_t sub_238223128()
{
  return swift_deallocObject();
}

uint64_t sub_23822313C()
{
  return swift_deallocObject();
}

uint64_t sub_23822314C()
{
  return swift_deallocObject();
}

uint64_t sub_23822315C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_238223190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v1 + 64);
  return sub_2381CC98C(v1 + 16);
}

uint64_t sub_2382231B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[7];

  (*(void (**)(_QWORD *__return_ptr))(v0 + 16))(v3);
  v1 = sub_238215E68();
  sub_2381CC9D4((uint64_t)v3);
  return v1;
}

uint64_t sub_2382231FC()
{
  return swift_deallocObject();
}

uint64_t sub_23822320C()
{
  return swift_deallocObject();
}

uint64_t sub_23822321C()
{
  return swift_deallocObject();
}

uint64_t sub_23822322C()
{
  return swift_deallocObject();
}

uint64_t sub_23822323C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238223260()
{
  return swift_deallocObject();
}

uint64_t sub_238223270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_238222488(a1, a2, *(_QWORD *)(v2 + 16));
  return 1;
}

uint64_t sub_23822328C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2382232B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2382232D8()
{
  return swift_deallocObject();
}

uint64_t sub_2382232E8()
{
  return swift_deallocObject();
}

uint64_t sub_2382232F8()
{
  return swift_deallocObject();
}

uint64_t sub_238223308()
{
  return swift_deallocObject();
}

uint64_t sub_238223318()
{
  return swift_deallocObject();
}

uint64_t sub_238223328()
{
  return swift_deallocObject();
}

uint64_t sub_238223338()
{
  return swift_deallocObject();
}

uint64_t sub_238223348()
{
  return swift_deallocObject();
}

uint64_t sub_238223358()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23822337C()
{
  return swift_deallocObject();
}

uint64_t sub_23822338C()
{
  return swift_deallocObject();
}

uint64_t sub_23822339C()
{
  return swift_deallocObject();
}

uint64_t sub_2382233AC()
{
  return swift_deallocObject();
}

uint64_t sub_2382233BC()
{
  return swift_deallocObject();
}

uint64_t sub_2382233CC()
{
  return swift_deallocObject();
}

uint64_t sub_2382233DC()
{
  return swift_deallocObject();
}

uint64_t sub_2382233EC()
{
  return swift_deallocObject();
}

uint64_t sub_2382233FC()
{
  return swift_deallocObject();
}

uint64_t sub_23822340C()
{
  return swift_deallocObject();
}

uint64_t sub_23822341C()
{
  return swift_deallocObject();
}

uint64_t sub_23822342C()
{
  return swift_deallocObject();
}

uint64_t sub_23822343C()
{
  return swift_deallocObject();
}

uint64_t sub_23822344C()
{
  return swift_deallocObject();
}

uint64_t sub_23822345C()
{
  return swift_deallocObject();
}

uint64_t sub_23822346C()
{
  return swift_deallocObject();
}

uint64_t sub_238223484()
{
  return swift_deallocObject();
}

uint64_t sub_238223494()
{
  return swift_deallocObject();
}

uint64_t sub_2382234A4()
{
  return swift_deallocObject();
}

uint64_t sub_2382234B4()
{
  return swift_deallocObject();
}

uint64_t sub_2382234C4()
{
  return swift_deallocObject();
}

uint64_t sub_2382234D4()
{
  return swift_deallocObject();
}

uint64_t sub_2382234E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t objectdestroy_363Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SessionConfiguration.Backend(0) - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = v0 + ((v1 + 16) & ~v1) + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    v3 = sub_238238210();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2382235DC()
{
  type metadata accessor for SessionConfiguration.Backend(0);
  return sub_2381E2A90();
}

uint64_t sub_238223614()
{
  swift_getErrorValue();
  return sub_238238C9C();
}

uint64_t sub_238223650()
{
  return swift_deallocObject();
}

uint64_t sub_238223660()
{
  return swift_deallocObject();
}

uint64_t sub_238223670()
{
  return swift_deallocObject();
}

uint64_t sub_238223680()
{
  return swift_deallocObject();
}

uint64_t sub_238223690()
{
  return swift_deallocObject();
}

uint64_t sub_2382236A0()
{
  return swift_deallocObject();
}

uint64_t sub_2382236B0()
{
  return swift_deallocObject();
}

uint64_t sub_2382236C0()
{
  return swift_deallocObject();
}

uint64_t sub_2382236D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_238223714(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD v12[2];

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  while (1)
  {
    v7 = sub_23823869C();
    v12[0] = sub_2382386FC();
    v12[1] = v8;
    v9 = a1(v12);
    if (v4)
      break;
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v7;
    if (v7 < 0x4000)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_238223818(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23822385C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_238238C0C() & 1;
}

unint64_t sub_2382238B0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_238238714();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CachedStorebag(uint64_t a1)
{
  return sub_2381E2BC0(a1, (uint64_t *)&unk_2568EF6F0);
}

void sub_238223A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = sub_238237FA0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for CacheError(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_2381D9630(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_238223B10 + 4 * byte_23823CD90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_238223B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  sub_238238A20();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 - 64) = 0xD000000000000026;
  *(_QWORD *)(v4 - 56) = 0x8000000238240210;
  sub_2381D49C0(&qword_2568E76A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEF8]);
  sub_238238C9C();
  sub_2382386B4();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v5;
}

uint64_t type metadata accessor for CacheError(uint64_t a1)
{
  return sub_2381E2BC0(a1, (uint64_t *)&unk_2568EF700);
}

uint64_t sub_238223D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = sub_238238444();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_238204B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2381C6000, v5, v6, "mock error", v7, 2u);
    MEMORY[0x23B82FE28](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for CacheError(0);
  sub_2381D49C0(&qword_2568E90A8, type metadata accessor for CacheError, (uint64_t)&unk_23823CDF0);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_238223E58(uint64_t a1)
{
  return sub_238223EB8(a1, "unable to write storebag cache (OOS): %{public}s", 0);
}

uint64_t sub_238223E78(uint64_t a1)
{
  return sub_238223EB8(a1, "unable to access storebag cache (PERM): %{public}s", 1);
}

uint64_t sub_238223E98(uint64_t a1)
{
  return sub_238223EB8(a1, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s", 2);
}

uint64_t sub_238223EB8(uint64_t a1, const char *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD v23[2];
  uint64_t v24;
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v26 = a2;
  v5 = sub_238237FA0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_238238444();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238204B48();
  v27 = v10;
  v28 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v30 = a1;
  v29(v8, a1, v5);
  v14 = sub_23823842C();
  v15 = sub_238238888();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v25 = a3;
    v17 = (uint8_t *)v16;
    v24 = swift_slowAlloc();
    v32 = v24;
    *(_DWORD *)v17 = 136446210;
    v23[1] = v17 + 4;
    sub_2381D49C0(&qword_2568E76A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEF8]);
    v18 = sub_238238C9C();
    v31 = sub_2381CBC6C(v18, v19, &v32);
    sub_238238960();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_2381C6000, v14, v15, v26, v17, 0xCu);
    v20 = v24;
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v20, -1, -1);
    MEMORY[0x23B82FE28](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  type metadata accessor for CacheError(0);
  sub_2381D49C0(&qword_2568E90A8, type metadata accessor for CacheError, (uint64_t)&unk_23823CDF0);
  swift_allocError();
  v29(v21, v30, v5);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_238224174(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_238238444();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238204B48();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = a1;
  v8 = a1;
  v9 = sub_23823842C();
  v10 = sub_238238888();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v20 = v2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v22 = v13;
    *(_DWORD *)v12 = 136446210;
    v19[1] = v12 + 4;
    swift_getErrorValue();
    v14 = sub_238238C9C();
    v21 = sub_2381CBC6C(v14, v15, &v22);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v9, v10, "unable to access storebag cache (UNKNOWN): %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v13, -1, -1);
    MEMORY[0x23B82FE28](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for CacheError(0);
  sub_2381D49C0(&qword_2568E90A8, type metadata accessor for CacheError, (uint64_t)&unk_23823CDF0);
  swift_allocError();
  *v16 = a1;
  swift_storeEnumTagMultiPayload();
  v17 = a1;
  return swift_willThrow();
}

uint64_t sub_2382243D8()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0168);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0168);
  return sub_238238438();
}

uint64_t sub_238224458()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23822448C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2382244D0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23822450C()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_238224540(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t (*sub_238224584())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2382245C0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_2382245F4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_238224638())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_238224674()
{
  return sub_238224680(MEMORY[0x24BEE4AF8]);
}

unint64_t sub_238224680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E93C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9398);
  v6 = sub_238238B10();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2382290A8(v12, (uint64_t)v5);
    v14 = *v5;
    v15 = v5[1];
    result = sub_2381CC2AC(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for CachedStorebag(0);
    result = sub_238228304(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_238224810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_23822487C(a1, a2, a3, a4);
  return v8;
}

_QWORD *sub_23822487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a4;
  v5 = v4;
  v9 = sub_238238210();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v21 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - v13;
  swift_defaultActor_initialize();
  v5[15] = 0;
  v5[16] = 0;
  v5[14] = a1;
  swift_beginAccess();
  v5[15] = a2;
  v15 = v22;
  swift_retain();
  swift_release();
  swift_beginAccess();
  v5[16] = a3;
  v24 = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v16 = v23;
  sub_238205CB8(v15, (void *)0x67616265726F7473, (void *)0xEA00000000002F73, (uint64_t)v14);
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    type metadata accessor for StorebagCache(0);
    swift_defaultActor_destroy();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v5 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCacheURL, v14, v9);
    type metadata accessor for StorebagCloudKitSource();
    v17 = (uint64_t)v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v21, v15, v9);
    v19 = sub_2382019B4(v17);
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
    *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCloudKitSource) = v19;
  }
  return v5;
}

uint64_t sub_238224AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[4];

  v41 = a3;
  v39 = sub_23823830C();
  v6 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E90B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v37 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - v12;
  v14 = type metadata accessor for CachedStorebag(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v40 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 128);
  v18 = swift_bridgeObjectRetain();
  v38 = v3;
  v19 = v17(v18);
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = a2;
    v21 = sub_2381CC2AC(a1, a2);
    v22 = a1;
    if ((v23 & 1) != 0)
    {
      sub_2381D9630(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v15 + 72) * v21, (uint64_t)v13, type metadata accessor for CachedStorebag);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v24(v13, 0, 1, v14);
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v24(v13, 1, 1, v14);
    }
  }
  else
  {
    v20 = a2;
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v24(v13, 1, 1, v14);
    v22 = a1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2381CCCD0((uint64_t)v13, (uint64_t *)&unk_2568E90B0);
LABEL_16:
    v33 = 1;
    v32 = v41;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v32, v33, 1, v14);
  }
  v25 = v40;
  sub_238228304((uint64_t)v13, v40);
  sub_2382382DC();
  v26 = sub_2382382B8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v39);
  if ((v26 & 1) != 0)
  {
    if (qword_2568EF560 != -1)
      swift_once();
    v27 = sub_238238444();
    __swift_project_value_buffer(v27, (uint64_t)qword_2568F0168);
    swift_bridgeObjectRetain_n();
    v28 = sub_23823842C();
    v29 = sub_238238894();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v43[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v42 = sub_2381CBC6C(v22, v20, v43);
      sub_238238960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v28, v29, "removing expired storebag %{public}s from memory cache", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v31, -1, -1);
      MEMORY[0x23B82FE28](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v34 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v38 + 144))(v43);
    v35 = v37;
    sub_238227894(v22, v20, v37);
    sub_2381CCCD0(v35, (uint64_t *)&unk_2568E90B0);
    v34(v43, 0);
    sub_2381CCA1C(v40, type metadata accessor for CachedStorebag);
    goto LABEL_16;
  }
  v32 = v41;
  sub_238228304(v25, v41);
  v33 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v32, v33, 1, v14);
}

uint64_t sub_238224F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  int v13;
  _QWORD v15[4];

  v4 = sub_238238210();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E90B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238224AEC(a1, a2, (uint64_t)v10);
  v11 = type metadata accessor for CachedStorebag(0);
  v12 = 1;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  sub_2381CCCD0((uint64_t)v10, (uint64_t *)&unk_2568E90B0);
  if (v13 == 1)
  {
    v15[2] = a1;
    v15[3] = a2;
    swift_bridgeObjectRetain();
    sub_2382386B4();
    sub_2382381B0();
    swift_bridgeObjectRelease();
    v12 = sub_2382381BC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v12 & 1;
}

uint64_t sub_2382250A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E90C0);
  v4[33] = swift_task_alloc();
  v5 = sub_238238114();
  v4[34] = v5;
  v4[35] = *(_QWORD *)(v5 - 8);
  v4[36] = swift_task_alloc();
  v6 = sub_23823830C();
  v4[37] = v6;
  v4[38] = *(_QWORD *)(v6 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v7 = sub_238238210();
  v4[42] = v7;
  v4[43] = *(_QWORD *)(v7 - 8);
  v4[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E90B0);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v8 = type metadata accessor for CachedStorebag(0);
  v4[47] = v8;
  v4[48] = *(_QWORD *)(v8 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238225234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t result;
  uint64_t inited;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  void (*v55)(uint64_t, _QWORD);
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  NSObject *v66;
  uint8_t *v67;
  uint64_t v68;
  id v69;
  void *v70;
  unsigned int v71;
  void *v72;
  int *v73;
  uint64_t v74;
  id v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97[3];

  v97[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 368);
  sub_238224AEC(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v7 = *(_QWORD *)(v0 + 400);
    sub_238228304(*(_QWORD *)(v0 + 368), v7);
    v96 = *(_DWORD *)(v7 + 8);
    v8 = *(_QWORD *)(v7 + 24);
    v94 = *(_QWORD *)(v7 + 16);
    v95 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 32);
    swift_bridgeObjectRetain();
    v92 = v8;
    swift_bridgeObjectRetain();
    v91 = v9;
    swift_bridgeObjectRetain();
    sub_2381CCA1C(v7, type metadata accessor for CachedStorebag);
    goto LABEL_4;
  }
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 240);
  sub_2381CCCD0(*(_QWORD *)(v0 + 368), (uint64_t *)&unk_2568E90B0);
  v97[0] = v5;
  v97[1] = v4;
  swift_bridgeObjectRetain();
  sub_2382386B4();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v6 = sub_2382381BC();
  if ((v6 & 1) == 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v16;
    *v16 = v0;
    v16[1] = sub_238225DC0;
    return sub_238226E0C(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v14 = (void *)*MEMORY[0x24BDBCBE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBE0];
  v15 = v14;
  sub_2381D450C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_238238168();
  v18 = *(_QWORD *)(v0 + 296);
  v17 = *(_QWORD *)(v0 + 304);
  v20 = *(_QWORD *)(v0 + 280);
  v19 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease();
  sub_2382380F0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v22, 1, v18);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 296));
    v23 = sub_238238228();
    v25 = v24;
    v26 = sub_2381E6468();
    sub_2381E6BD4(v23, v25, v26, v0 + 96);
    v27 = v0 + 216;
    v29 = *(_QWORD *)(v0 + 304);
    v28 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 296);
    v31 = *(_DWORD *)(v0 + 104);
    sub_2382382A0();
    sub_2382382DC();
    LOBYTE(v23) = sub_2382382B8();
    v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    *(_QWORD *)(v0 + 424) = v32;
    v32(v28, v30);
    v90 = v32;
    if ((v23 & 1) != 0)
    {
      *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 96);
      sub_2381F4A7C(v0 + 184);
      *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
      sub_2381EC924(v0 + 168);
      *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 128);
      sub_2381F4A7C(v0 + 200);
      if (qword_2568EF560 != -1)
        swift_once();
      v33 = sub_238238444();
      __swift_project_value_buffer(v33, (uint64_t)qword_2568F0168);
      swift_bridgeObjectRetain_n();
      v34 = sub_23823842C();
      v35 = sub_238238894();
      v36 = os_log_type_enabled(v34, v35);
      v37 = *(_QWORD *)(v0 + 248);
      if (v36)
      {
        v38 = *(_QWORD *)(v0 + 240);
        v39 = (uint8_t *)swift_slowAlloc();
        v40 = swift_slowAlloc();
        v97[0] = v40;
        *(_DWORD *)v39 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 224) = sub_2381CBC6C(v38, v37, v97);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v34, v35, "removing expired storebag %{public}s", v39, 0xCu);
        swift_arrayDestroy();
        v41 = v40;
        v27 = v0 + 216;
        MEMORY[0x23B82FE28](v41, -1, -1);
        MEMORY[0x23B82FE28](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v69 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v70 = (void *)sub_238238198();
      *(_QWORD *)(v0 + 216) = 0;
      v71 = objc_msgSend(v69, sel_removeItemAtURL_error_, v70, v27);

      v72 = *(void **)(v0 + 216);
      if (v71)
      {
        v73 = *(int **)(**(_QWORD **)(v0 + 256) + 232);
        v74 = *v73;
        v75 = v72;
        v76 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 432) = v76;
        *v76 = v0;
        v76[1] = sub_238226884;
        return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))((char *)v73 + v74))(v0 + 56, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
      }
      v77 = *(_QWORD *)(v0 + 344);
      v78 = *(_QWORD *)(v0 + 352);
      v80 = *(_QWORD *)(v0 + 328);
      v79 = *(_QWORD *)(v0 + 336);
      v81 = *(_QWORD *)(v0 + 320);
      v82 = *(_QWORD *)(v0 + 296);
      v83 = v72;
      sub_238238150();

      swift_willThrow();
      v90(v81, v82);
      v90(v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v79);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v11 = *(uint64_t (**)(void))(v0 + 8);
      return v11();
    }
    v96 = v31;
    v42 = *(_QWORD *)(v0 + 384);
    v43 = *(_QWORD *)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 376);
    v45 = *(_QWORD *)(v0 + 360);
    v46 = *(_QWORD *)(v0 + 256);
    v88 = *(_QWORD *)(v0 + 248);
    v93 = *(_QWORD *)(v0 + 240);
    v47 = *(_QWORD *)(v0 + 96);
    v48 = *(_QWORD *)(v0 + 120);
    v94 = *(_QWORD *)(v0 + 112);
    v49 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 16))(v43 + *(int *)(v44 + 20), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296));
    v50 = *(_QWORD *)(v0 + 128);
    v51 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)v43 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v43 + 16) = v51;
    *(_QWORD *)(v43 + 32) = v50;
    v52 = v43;
    v53 = v49;
    sub_2381D9630(v52, v45, type metadata accessor for CachedStorebag);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v44);
    v54 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v46 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v55 = (void (*)(uint64_t, _QWORD))v54(v0 + 136);
    sub_238226CAC(v45, v93, v88);
    v55(v0 + 136, 0);
    if (qword_2568EF560 != -1)
      swift_once();
    v92 = v48;
    v95 = v47;
    v56 = sub_238238444();
    __swift_project_value_buffer(v56, (uint64_t)qword_2568F0168);
    swift_bridgeObjectRetain_n();
    v57 = sub_23823842C();
    v58 = sub_238238870();
    v59 = os_log_type_enabled(v57, v58);
    v61 = *(_QWORD *)(v0 + 344);
    v60 = *(_QWORD *)(v0 + 352);
    v63 = *(_QWORD *)(v0 + 328);
    v62 = *(_QWORD *)(v0 + 336);
    v87 = *(_QWORD *)(v0 + 320);
    v89 = *(_QWORD *)(v0 + 392);
    v64 = *(_QWORD *)(v0 + 296);
    v65 = *(_QWORD *)(v0 + 248);
    v91 = v53;
    if (v59)
    {
      v84 = *(_QWORD *)(v0 + 240);
      v86 = *(_QWORD *)(v0 + 336);
      v66 = v57;
      v67 = (uint8_t *)swift_slowAlloc();
      v85 = v60;
      v68 = swift_slowAlloc();
      v97[0] = v68;
      *(_DWORD *)v67 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 208) = sub_2381CBC6C(v84, v65, v97);
      sub_238238960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v66, v58, "storing storebag %{public}s in cache", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v68, -1, -1);
      MEMORY[0x23B82FE28](v67, -1, -1);

      sub_2381CCA1C(v89, type metadata accessor for CachedStorebag);
      v90(v87, v64);
      v90(v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v85, v86);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_2381CCA1C(v89, type metadata accessor for CachedStorebag);
      v90(v87, v64);
      v90(v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
LABEL_4:
    v10 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_QWORD *)v10 = v95;
    *(_DWORD *)(v10 + 8) = v96;
    *(_QWORD *)(v10 + 16) = v94;
    *(_QWORD *)(v10 + 24) = v92;
    *(_QWORD *)(v10 + 32) = v91;
    v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  __break(1u);
  return result;
}

uint64_t sub_238225DC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238225E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t (*v43)(uint64_t);
  void (*v44)(uint64_t, _QWORD);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  id v59;
  void *v60;
  unsigned int v61;
  void *v62;
  int *v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87[2];

  v87[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 416);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E78B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238239E40;
  v3 = (void *)*MEMORY[0x24BDBCBE0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBE0];
  v4 = v3;
  sub_2381D450C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_238238168();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  v6 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease();
  sub_2382380F0();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 296));
    v12 = sub_238238228();
    v14 = v13;
    v15 = sub_2381E6468();
    sub_2381E6BD4(v12, v14, v15, v0 + 96);
    v17 = v0 + 216;
    v19 = *(_QWORD *)(v0 + 304);
    v18 = *(_QWORD *)(v0 + 312);
    v20 = *(_QWORD *)(v0 + 296);
    v21 = *(_DWORD *)(v0 + 104);
    sub_2382382A0();
    sub_2382382DC();
    v22 = sub_2382382B8();
    v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    *(_QWORD *)(v0 + 424) = v23;
    v23(v18, v20);
    if ((v22 & 1) == 0)
    {
      v86 = v21;
      v77 = v23;
      v34 = *(_QWORD *)(v0 + 384);
      v33 = *(_QWORD *)(v0 + 392);
      v35 = *(_QWORD *)(v0 + 376);
      v36 = *(_QWORD *)(v0 + 360);
      v37 = *(_QWORD *)(v0 + 256);
      v78 = *(_QWORD *)(v0 + 248);
      v80 = *(_QWORD *)(v0 + 240);
      v38 = *(_QWORD *)(v0 + 96);
      v39 = *(_QWORD *)(v0 + 120);
      v85 = *(_QWORD *)(v0 + 112);
      v40 = *(_QWORD *)(v0 + 128);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 16))(v33 + *(int *)(v35 + 20), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 296));
      v41 = *(_QWORD *)(v0 + 128);
      v42 = *(_OWORD *)(v0 + 112);
      *(_OWORD *)v33 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v33 + 16) = v42;
      *(_QWORD *)(v33 + 32) = v41;
      sub_2381D9630(v33, v36, type metadata accessor for CachedStorebag);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
      v43 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 144);
      swift_bridgeObjectRetain();
      v82 = v38;
      swift_bridgeObjectRetain();
      v84 = v39;
      swift_bridgeObjectRetain();
      v83 = v40;
      swift_bridgeObjectRetain();
      v44 = (void (*)(uint64_t, _QWORD))v43(v0 + 136);
      sub_238226CAC(v36, v80, v78);
      v44(v0 + 136, 0);
      if (qword_2568EF560 != -1)
        swift_once();
      v45 = sub_238238444();
      __swift_project_value_buffer(v45, (uint64_t)qword_2568F0168);
      swift_bridgeObjectRetain_n();
      v46 = sub_23823842C();
      v47 = sub_238238870();
      v48 = os_log_type_enabled(v46, v47);
      v49 = *(_QWORD *)(v0 + 392);
      v51 = *(_QWORD *)(v0 + 344);
      v50 = *(_QWORD *)(v0 + 352);
      v53 = *(_QWORD *)(v0 + 328);
      v52 = *(_QWORD *)(v0 + 336);
      v81 = *(_QWORD *)(v0 + 320);
      v54 = *(_QWORD *)(v0 + 296);
      v55 = *(_QWORD *)(v0 + 248);
      if (v48)
      {
        v79 = *(_QWORD *)(v0 + 328);
        v56 = *(_QWORD *)(v0 + 240);
        v75 = *(_QWORD *)(v0 + 392);
        v57 = (uint8_t *)swift_slowAlloc();
        v76 = v50;
        v58 = swift_slowAlloc();
        v87[0] = v58;
        *(_DWORD *)v57 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 208) = sub_2381CBC6C(v56, v55, v87);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2381C6000, v46, v47, "storing storebag %{public}s in cache", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v58, -1, -1);
        MEMORY[0x23B82FE28](v57, -1, -1);

        sub_2381CCA1C(v75, type metadata accessor for CachedStorebag);
        v77(v81, v54);
        v77(v79, v54);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v76, v52);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        sub_2381CCA1C(v49, type metadata accessor for CachedStorebag);
        v77(v81, v54);
        v77(v53, v54);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
      }
      v67 = *(_QWORD *)(v0 + 232);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      *(_QWORD *)v67 = v82;
      *(_DWORD *)(v67 + 8) = v86;
      *(_QWORD *)(v67 + 16) = v85;
      *(_QWORD *)(v67 + 24) = v84;
      *(_QWORD *)(v67 + 32) = v83;
      v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 96);
    sub_2381F4A7C(v0 + 184);
    *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
    sub_2381EC924(v0 + 168);
    *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 128);
    sub_2381F4A7C(v0 + 200);
    if (qword_2568EF560 != -1)
      swift_once();
    v24 = sub_238238444();
    __swift_project_value_buffer(v24, (uint64_t)qword_2568F0168);
    swift_bridgeObjectRetain_n();
    v25 = sub_23823842C();
    v26 = sub_238238894();
    v27 = os_log_type_enabled(v25, v26);
    v28 = *(_QWORD *)(v0 + 248);
    if (v27)
    {
      v29 = *(_QWORD *)(v0 + 240);
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v87[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_2381CBC6C(v29, v28, v87);
      sub_238238960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v25, v26, "removing expired storebag %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      v32 = v31;
      v17 = v0 + 216;
      MEMORY[0x23B82FE28](v32, -1, -1);
      MEMORY[0x23B82FE28](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v59 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v60 = (void *)sub_238238198();
    *(_QWORD *)(v0 + 216) = 0;
    v61 = objc_msgSend(v59, sel_removeItemAtURL_error_, v60, v17);

    v62 = *(void **)(v0 + 216);
    if (!v61)
    {
      v68 = *(_QWORD *)(v0 + 344);
      v69 = *(_QWORD *)(v0 + 352);
      v71 = *(_QWORD *)(v0 + 328);
      v70 = *(_QWORD *)(v0 + 336);
      v72 = *(_QWORD *)(v0 + 320);
      v73 = *(_QWORD *)(v0 + 296);
      v74 = v62;
      sub_238238150();

      swift_willThrow();
      v23(v72, v73);
      v23(v71, v73);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
      goto LABEL_5;
    }
    v63 = *(int **)(**(_QWORD **)(v0 + 256) + 232);
    v64 = *v63;
    v65 = v62;
    v66 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 432) = v66;
    *v66 = v0;
    v66[1] = sub_238226884;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))((char *)v63 + v64))(v0 + 56, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  }
  return result;
}

uint64_t sub_238226884()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238226934()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 296);
  v1(*(_QWORD *)(v0 + 320), v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v12 = *(_QWORD *)(v0 + 72);
  v11 = *(_DWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_OWORD *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)v7 = v10;
  *(_DWORD *)(v7 + 8) = v11;
  *(_QWORD *)(v7 + 16) = v12;
  *(_OWORD *)(v7 + 24) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238226A94()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 344) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238226B8C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 296);
  v1(*(_QWORD *)(v0 + 320), v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238226CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E90B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CachedStorebag(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_2381CCCD0(a1, (uint64_t *)&unk_2568E90B0);
    sub_238227894(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_2381CCCD0((uint64_t)v10, (uint64_t *)&unk_2568E90B0);
  }
  else
  {
    sub_238228304(a1, (uint64_t)v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_238228148((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_238226E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238226E6C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  _QWORD *v15;

  v1 = *(uint64_t (**)(void))(**(_QWORD **)(v0 + 48) + 152);
  *(_QWORD *)(v0 + 64) = v1;
  v2 = v1();
  if (v2)
  {
    *(_QWORD *)(v0 + 72) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    *v3 = v0;
    v3[1] = sub_238227048;
    return sub_238238804();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = os_transaction_create();
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 184))(v9);
    v10 = sub_2382387E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v11 = sub_2381D49C0(&qword_2568E93A8, type metadata accessor for StorebagCache, (uint64_t)&unk_23823CE30);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v6;
    v12[3] = v11;
    v12[4] = v6;
    v12[5] = v8;
    v12[6] = v7;
    swift_retain_n();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_2381D1384(v5, (uint64_t)&unk_2568E93B0, (uint64_t)v12);
    v13 = *(void (**)(uint64_t))(*(_QWORD *)v6 + 160);
    v14 = swift_retain();
    v13(v14);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    *v15 = v0;
    v15[1] = sub_238227280;
    return sub_2382387EC();
  }
}

uint64_t sub_238227048()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_23822909C(*(id *)(v1 + 16), *(_BYTE *)(v1 + 24));
  return swift_task_switch();
}

uint64_t sub_2382270A8()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _QWORD *v16;

  v1 = (uint64_t (*)(uint64_t))v0[8];
  v2 = swift_release();
  v3 = v1(v2);
  if (v3)
  {
    v0[9] = v3;
    v4 = (_QWORD *)swift_task_alloc();
    v0[10] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    *v4 = v0;
    v4[1] = sub_238227048;
    return sub_238238804();
  }
  else
  {
    v7 = v0[6];
    v6 = v0[7];
    v9 = v0[4];
    v8 = v0[5];
    v10 = os_transaction_create();
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 184))(v10);
    v11 = sub_2382387E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
    v12 = sub_2381D49C0(&qword_2568E93A8, type metadata accessor for StorebagCache, (uint64_t)&unk_23823CE30);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v7;
    v13[3] = v12;
    v13[4] = v7;
    v13[5] = v9;
    v13[6] = v8;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v0[11] = sub_2381D1384(v6, (uint64_t)&unk_2568E93B0, (uint64_t)v13);
    v14 = *(void (**)(uint64_t))(*(_QWORD *)v7 + 160);
    v15 = swift_retain();
    v14(v15);
    v16 = (_QWORD *)swift_task_alloc();
    v0[12] = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    *v16 = v0;
    v16[1] = sub_238227280;
    return sub_2382387EC();
  }
}

uint64_t sub_238227280()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2382272E4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238227324()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238227364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = sub_238238210();
  v6[5] = v7;
  v6[6] = *(_QWORD *)(v7 - 8);
  v6[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2382273CC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCloudKitSource);
  swift_bridgeObjectRetain();
  sub_2382386B4();
  sub_2382381B0();
  swift_bridgeObjectRelease();
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)v1 + 136)
                                                      + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_2382274A4;
  return v4(v0[3], v0[4], v0[7]);
}

uint64_t sub_2382274A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_23822752C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 160))(0);
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 184))(0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238227588()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 160))(0);
  (*(void (**)(_QWORD))(*(_QWORD *)v1 + 184))(0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2382275E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *, _QWORD);
  _QWORD v16[2];
  uint64_t v17[4];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E90B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2568EF560 != -1)
    swift_once();
  v9 = sub_238238444();
  __swift_project_value_buffer(v9, (uint64_t)qword_2568F0168);
  swift_bridgeObjectRetain_n();
  v10 = sub_23823842C();
  v11 = sub_238238870();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17[0] = v13;
    *(_DWORD *)v12 = 136446210;
    swift_bridgeObjectRetain();
    v16[1] = sub_2381CBC6C(a1, a2, v17);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v10, v11, "evicting storebag %{public}s from cache", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v13, -1, -1);
    MEMORY[0x23B82FE28](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = (uint64_t (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *))(*(_QWORD *)v3 + 144))(v17);
  sub_238227894(a1, a2, (uint64_t)v8);
  sub_2381CCCD0((uint64_t)v8, (uint64_t *)&unk_2568E90B0);
  return v14(v17, 0);
}

uint64_t sub_23822780C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCacheURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for StorebagCache(uint64_t a1)
{
  return sub_2381E2BC0(a1, (uint64_t *)&unk_2568EF710);
}

uint64_t sub_238227894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2381CC2AC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_238227F14();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for CachedStorebag(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_238228304(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_238227D18(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for CachedStorebag(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_2382279BC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for CachedStorebag(0);
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9398);
  v42 = a2;
  v9 = sub_238238B04();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v38 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v40 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v39 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39)
          goto LABEL_34;
        v23 = v40[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_34;
          v23 = v40[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              v3 = v38;
              if ((v42 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v8 + 32);
                if (v37 >= 64)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v39)
                  goto LABEL_34;
                v23 = v40[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v41 + 72);
      v29 = *(_QWORD *)(v8 + 56) + v28 * v21;
      if ((v42 & 1) != 0)
      {
        sub_238228304(v29, (uint64_t)v7);
      }
      else
      {
        sub_2381D9630(v29, (uint64_t)v7, type metadata accessor for CachedStorebag);
        swift_bridgeObjectRetain();
      }
      sub_238238CE4();
      sub_238238684();
      result = sub_238238D08();
      v30 = -1 << *(_BYTE *)(v10 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
      *v19 = v27;
      v19[1] = v26;
      result = sub_238228304((uint64_t)v7, *(_QWORD *)(v10 + 56) + v28 * v18);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

unint64_t sub_238227D18(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_238238CE4();
        swift_bridgeObjectRetain();
        sub_238238684();
        v9 = sub_238238D08();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CachedStorebag(0) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_238227F14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for CachedStorebag(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9398);
  v5 = *v0;
  v6 = sub_238238AF8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_2381D9630(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4, type metadata accessor for CachedStorebag);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_238228304((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_238228148(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for CachedStorebag(0) - 8) + 72) * v12;
        return sub_238228FC4(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_238227F14();
      goto LABEL_7;
    }
    sub_2382279BC(v15, a4 & 1);
    v22 = sub_2381CC2AC(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23822827C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t sub_23822827C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for CachedStorebag(0);
  result = sub_238228304(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_238228304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_238228348()
{
  return sub_2381D49C0(&qword_2568E90A8, type metadata accessor for CacheError, (uint64_t)&unk_23823CDF0);
}

uint64_t sub_238228374(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_23823830C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_23822843C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23823830C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_238228494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23823830C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_238228534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2382285E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_23822864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23823830C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2382286E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2382286EC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23823830C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_238228768()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_238228774(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_23823830C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2382287E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23823830C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_23822885C(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v10;
  char *v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        v7 = sub_238237FA0();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v10 = *a2;
        v11 = v10;
        *(_QWORD *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_2382289B8(id *a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      v2 = sub_238237FA0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 3u:

      break;
    default:
      return;
  }
}

_QWORD *sub_238228A30(_QWORD *a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      v6 = sub_238237FA0();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_5;
    case 3u:
      v7 = *a2;
      v8 = v7;
      *a1 = v7;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_238228B58(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, type metadata accessor for CacheError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        v6 = sub_238237FA0();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_6;
      case 3u:
        v7 = *a2;
        v8 = v7;
        *a1 = v7;
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_238228C98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_238237FA0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_238228D98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2381CCA1C((uint64_t)a1, type metadata accessor for CacheError);
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_238237FA0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_238228EB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238237FA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_238228F20()
{
  return type metadata accessor for StorebagCache(0);
}

uint64_t sub_238228F28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_238228FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_238229008()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23822903C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2381CB914;
  return sub_238227364((uint64_t)v5, v6, v7, v2, v3, v4);
}

void sub_23822909C(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_2382290A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E93C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2382290F4()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EF728);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EF728);
  return sub_238238438();
}

uint64_t sub_238229174()
{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_2382291B4()
{
  swift_beginAccess();
  swift_weakAssign();
  return swift_release();
}

void (*sub_238229204(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_23822926C;
}

void sub_23822926C(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

unint64_t sub_2382292D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9560);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_2381CC2AC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2382293E8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9578);
  v2 = (_QWORD *)sub_238238B10();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2381CC2AC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_238229500()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_238229534(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_238229578()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2382295AC(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 136) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2382295F0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23822962C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_238229660(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 144) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2382296A4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2382296E0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  swift_allocObject();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2381DA494;
  return sub_238229758(a1, a2, a3);
}

uint64_t sub_238229758(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = v3;
  *(_QWORD *)(v4 + 96) = a3;
  *(_QWORD *)(v4 + 104) = v5;
  *(_QWORD *)(v4 + 88) = a2;
  *(_BYTE *)(v4 + 160) = a1;
  *(_QWORD *)(v4 + 112) = *v5;
  v7 = sub_238238210();
  *(_QWORD *)(v4 + 120) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 128) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v4 + 136) = v9;
  swift_defaultActor_initialize();
  swift_weakInit();
  v10 = MEMORY[0x24BEE4AF8];
  v11 = sub_2382292D8(MEMORY[0x24BEE4AF8]);
  v12 = MEMORY[0x24BEE4B08];
  v5[16] = v11;
  v5[17] = v12;
  v5[18] = sub_2382293E8(v10);
  type metadata accessor for StorebagCoordinator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, a3, v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 144) = v13;
  *v13 = v4;
  v13[1] = sub_238229860;
  return sub_23822E32C(v9);
}

uint64_t sub_238229860(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (_QWORD *)*v2;
  v5 = (_QWORD *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v6 = v4[16];
    v7 = v4[15];
    v8 = v4[12];
    swift_weakDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SessionCoordinator();
    swift_defaultActor_destroy();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v5[1])();
  }
  else
  {
    *(_QWORD *)(v4[13] + 112) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_238229968()
{
  uint64_t v0;
  char v1;
  int *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v1 = *(_BYTE *)(v0 + 160);
  swift_beginAccess();
  swift_weakAssign();
  if ((v1 & 1) != 0)
  {
    swift_release();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
  }
  else
  {
    v3 = *(int **)(**(_QWORD **)(v0 + 104) + 264);
    v5 = (uint64_t (*)(void))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v4;
    *v4 = v0;
    v4[1] = sub_238229A48;
    return v5();
  }
}

uint64_t sub_238229A48()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  __int128 v8;

  v1 = *v0;
  v8 = *(_OWORD *)(v1 + 104);
  swift_task_dealloc();
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v3 = *MEMORY[0x24BE63740];
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v1 + 48) = sub_238229D84;
  *(_QWORD *)(v1 + 56) = v4;
  *(_QWORD *)(v1 + 24) = 1107296256;
  *(_QWORD *)(v1 + 32) = sub_238229DE8;
  *(_QWORD *)(v1 + 40) = &block_descriptor_4;
  v5 = _Block_copy((const void *)(v1 + 16));
  swift_retain();
  swift_release();
  v6 = objc_msgSend(v2, sel_addObserverForName_object_queue_usingBlock_, v3, 0, 0, v5);
  _Block_release(v5);
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 128) + 8))(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 120));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 104));
}

uint64_t type metadata accessor for SessionCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_238229BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2568EF720 != -1)
    swift_once();
  v5 = sub_238238444();
  __swift_project_value_buffer(v5, (uint64_t)qword_2568EF728);
  v6 = sub_23823842C();
  v7 = sub_238238894();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2381C6000, v6, v7, "received notification for MC effective settings change", v8, 2u);
    MEMORY[0x23B82FE28](v8, -1, -1);
  }

  v9 = sub_2382387E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_2381CBA70((uint64_t)v4, (uint64_t)&unk_2568E9570, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_238229D60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238229D84()
{
  uint64_t v0;

  return sub_238229BE8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_238229D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)a4 + 264) + *(_QWORD *)(*(_QWORD *)a4 + 264));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_2381CCDE0;
  return v7();
}

uint64_t sub_238229DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_238238048();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23823803C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_238229EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  v5[44] = *(_QWORD *)(a3 - 8);
  v5[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238229F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  void (*v5)(uint64_t *, uint64_t, _QWORD);
  _QWORD *v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 344) + 112);
  *(_QWORD *)(v0 + 368) = v3;
  v8 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 216) = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 192));
  v5 = *(void (**)(uint64_t *, uint64_t, _QWORD))(v1 + 16);
  *(_QWORD *)(v0 + 376) = v5;
  v5(boxed_opaque_existential_1, v2, v8);
  *(_QWORD *)&v8 = **(int **)(*(_QWORD *)v3 + 128) + *(_QWORD *)(*(_QWORD *)v3 + 128);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v6;
  *v6 = v0;
  v6[1] = sub_238229FB0;
  return ((uint64_t (*)(uint64_t))v8)(v0 + 192);
}

uint64_t sub_238229FB0(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 192;
  *(_BYTE *)(*(_QWORD *)v1 + 424) = a1;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v2);
  return swift_task_switch();
}

uint64_t sub_23822A01C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  __int128 v30;
  __int128 v31;

  if (static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(_BYTE *)(v0 + 424), 3)
    || static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(_BYTE *)(v0 + 424), 2))
  {
    v1 = v0 + 272;
    v3 = *(_QWORD *)(v0 + 368);
    v2 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 376);
    v5 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 320);
    *(_QWORD *)(v0 + 296) = v5;
    *(_QWORD *)(v0 + 304) = v4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 272));
    v2(boxed_opaque_existential_1, v6, v5);
    v29 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 136)
                                                   + *(_QWORD *)(*(_QWORD *)v3 + 136));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v8;
    *v8 = v0;
    v8[1] = sub_23822A230;
    v9 = v0 + 152;
    return v29(v9, v1);
  }
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
  v12 = *(_QWORD *)(v0 + 360);
  v13 = (_QWORD *)(v0 + 328);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v16 = static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(_BYTE *)(v0 + 424), 1);
  v11(v12, v15, v14);
  v18 = *(_QWORD *)(v0 + 352);
  v17 = *(_QWORD *)(v0 + 360);
  if (v16)
  {
    v19 = *(_QWORD *)(v0 + 328);
    (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 336) + 8))(v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_2381CC9D4(v0 + 16);
    if ((*(_BYTE *)(v0 + 49) & 1) != 0)
    {
      v1 = v0 + 232;
      v21 = *(_QWORD *)(v0 + 368);
      v20 = *(void (**)(uint64_t *, uint64_t, _QWORD))(v0 + 376);
      v22 = *(_QWORD *)(v0 + 320);
      v30 = *(_OWORD *)v13;
      *(_OWORD *)(v0 + 256) = *(_OWORD *)v13;
      v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 232));
      v20(v23, v22, v30);
      v29 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v21 + 136)
                                                     + *(_QWORD *)(*(_QWORD *)v21 + 136));
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 408) = v24;
      *v24 = v0;
      v24[1] = sub_23822A2EC;
      v9 = v0 + 72;
      return v29(v9, v1);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v18 + 8))(*(_QWORD *)(v0 + 360), *v13);
  }
  sub_2381E2D3C(v0 + 112);
  v25 = *(_QWORD *)(v0 + 312);
  v26 = *(_QWORD *)(v0 + 136);
  v27 = *(_QWORD *)(v0 + 144);
  v28 = *(_BYTE *)(v0 + 128);
  v31 = *(_OWORD *)(v0 + 112);
  swift_task_dealloc();
  *(_OWORD *)v25 = v31;
  *(_BYTE *)(v25 + 16) = v28;
  *(_QWORD *)(v25 + 24) = v26;
  *(_QWORD *)(v25 + 32) = v27;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822A230()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  v2 = *v1;
  *(_QWORD *)(v2 + 400) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0(v2 + 272);
  v4 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 176);
  v6 = *(_QWORD *)(v2 + 184);
  v7 = *(_BYTE *)(v2 + 168);
  v8 = *(_OWORD *)(v2 + 152);
  swift_task_dealloc();
  *(_OWORD *)v4 = v8;
  *(_BYTE *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 32) = v6;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23822A2EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;

  v2 = *v1;
  *(_QWORD *)(v2 + 416) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0(v2 + 232);
  v4 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  v7 = *(_BYTE *)(v2 + 88);
  v8 = *(_OWORD *)(v2 + 72);
  swift_task_dealloc();
  *(_OWORD *)v4 = v8;
  *(_BYTE *)(v4 + 16) = v7;
  *(_QWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 32) = v6;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23822A3A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 272);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822A3E4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23822A420(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t *);
  void (*v7)(uint64_t *, _QWORD);
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36[4];

  v3 = v2;
  v6 = *(uint64_t (**)(uint64_t *))(*(_QWORD *)v2 + 168);
  swift_bridgeObjectRetain();
  v7 = (void (*)(uint64_t *, _QWORD))v6(v36);
  v9 = v8;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = (_QWORD *)*v9;
  v35 = (_QWORD *)*v9;
  *v9 = 0x8000000000000000;
  v13 = sub_2381CC2AC(a1, a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_18;
  }
  v17 = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_23822CC30();
  }
  else
  {
    sub_23822C928(v16, isUniquelyReferenced_nonNull_native);
    v18 = sub_2381CC2AC(a1, a2);
    if ((v17 & 1) != (v19 & 1))
    {
LABEL_21:
      sub_238238C90();
      __break(1u);
      return;
    }
    v13 = v18;
  }
  *v9 = v35;
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)*v9;
  if ((v17 & 1) != 0)
    goto LABEL_10;
  v20[(v13 >> 6) + 8] |= 1 << v13;
  v21 = (uint64_t *)(v20[6] + 16 * v13);
  *v21 = a1;
  v21[1] = a2;
  *(_QWORD *)(v20[7] + 8 * v13) = 0;
  v22 = v20[2];
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  v20[2] = v24;
  swift_bridgeObjectRetain();
LABEL_10:
  v25 = v20[7];
  v26 = *(_QWORD *)(v25 + 8 * v13);
  v23 = __OFADD__(v26, 1);
  v27 = v26 + 1;
  if (!v23)
  {
    *(_QWORD *)(v25 + 8 * v13) = v27;
    swift_bridgeObjectRelease();
    v7(v36, 0);
    if (qword_2568EF720 == -1)
      goto LABEL_12;
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_12:
  v28 = sub_238238444();
  __swift_project_value_buffer(v28, (uint64_t)qword_2568EF728);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v29 = sub_23823842C();
  v30 = sub_238238870();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v36[0] = v32;
    *(_DWORD *)v31 = 136446466;
    swift_bridgeObjectRetain();
    sub_2381CBC6C(a1, a2, v36);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2048;
    v33 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 152);
    v34 = swift_bridgeObjectRetain();
    if (*(_QWORD *)(v33(v34) + 16))
      sub_2381CC2AC(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_238238960();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_2381C6000, v29, v30, "registered use for session config for %{public}s, now %lld uses", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v32, -1, -1);
    MEMORY[0x23B82FE28](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_23822A7C4(uint64_t a1, unint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t *);
  void (*v34)(uint64_t *, _QWORD);
  uint64_t *v35;
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v38)(uint64_t *, _QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t *);
  void (*v55)(uint64_t *, _QWORD);
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64[4];

  v4 = v3;
  v8 = *v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(uint64_t (**)(uint64_t))(v8 + 152);
  v13 = swift_bridgeObjectRetain();
  v14 = v12(v13);
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = sub_2381CC2AC(a1, a2);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v17 - 1;
      if (__OFSUB__(v17, 1))
      {
        __break(1u);
      }
      else if (qword_2568EF720 == -1)
      {
        goto LABEL_5;
      }
      swift_once();
LABEL_5:
      v61 = v8;
      v19 = sub_238238444();
      v20 = __swift_project_value_buffer(v19, (uint64_t)qword_2568EF728);
      swift_bridgeObjectRetain_n();
      v60[1] = v20;
      v21 = sub_23823842C();
      v22 = sub_238238870();
      v23 = os_log_type_enabled(v21, v22);
      LODWORD(v62) = a3;
      if (v23)
      {
        v24 = swift_slowAlloc();
        v60[0] = v11;
        v25 = a1;
        v26 = v24;
        v27 = swift_slowAlloc();
        v64[0] = v27;
        *(_DWORD *)v26 = 136446466;
        swift_bridgeObjectRetain();
        v28 = v25;
        v63 = sub_2381CBC6C(v25, a2, v64);
        sub_238238960();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2050;
        v63 = v17 - 1;
        v11 = (char *)v60[0];
        sub_238238960();
        _os_log_impl(&dword_2381C6000, v21, v22, "session config finished for %{public}s with %{public}lld uses remaining", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B82FE28](v27, -1, -1);
        MEMORY[0x23B82FE28](v26, -1, -1);
      }
      else
      {
        v28 = a1;
        swift_bridgeObjectRelease_n();
      }

      v33 = *(uint64_t (**)(uint64_t *))(*v4 + 168);
      if (v18 > 0)
      {
        swift_bridgeObjectRetain();
        v34 = (void (*)(uint64_t *, _QWORD))v33(v64);
        v36 = v35;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v63 = *v36;
        *v36 = 0x8000000000000000;
        sub_23822D068(v18, v28, a2, isUniquelyReferenced_nonNull_native);
        *v36 = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34(v64, 0);
        return;
      }
      v38 = (uint64_t (*)(uint64_t *, _QWORD))v33(v64);
      v39 = v28;
      sub_23822CDDC(v28, a2);
      v40 = v38(v64, 0);
      if ((v62 & 1) != 0)
      {
        v41 = (*(uint64_t (**)(uint64_t))(*v4 + 176))(v40);
        v42 = sub_2381DEA34(v28, a2, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        v43 = sub_23823842C();
        v44 = sub_238238870();
        v45 = os_log_type_enabled(v43, v44);
        if ((v42 & 1) != 0)
        {
          if (v45)
          {
            v46 = (uint8_t *)swift_slowAlloc();
            v47 = swift_slowAlloc();
            v64[0] = v47;
            *(_DWORD *)v46 = 136446210;
            swift_bridgeObjectRetain();
            v63 = sub_2381CBC6C(v39, a2, v64);
            sub_238238960();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2381C6000, v43, v44, "not evicting %{public}s: already running", v46, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B82FE28](v47, -1, -1);
            MEMORY[0x23B82FE28](v46, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          return;
        }
        if (v45)
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v64[0] = v53;
          *(_DWORD *)v52 = 136446210;
          swift_bridgeObjectRetain();
          v63 = sub_2381CBC6C(v39, a2, v64);
          sub_238238960();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2381C6000, v43, v44, "starting eviction timer for %{public}s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B82FE28](v53, -1, -1);
          MEMORY[0x23B82FE28](v52, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v54 = *(uint64_t (**)(uint64_t *))(*v4 + 192);
        swift_bridgeObjectRetain();
        v55 = (void (*)(uint64_t *, _QWORD))v54(v64);
        sub_2381EA138(&v63, v39, a2);
        swift_bridgeObjectRelease();
        v55(v64, 0);
        v56 = sub_2382387E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v11, 1, 1, v56);
        v57 = sub_23822CEB8();
        v58 = (_QWORD *)swift_allocObject();
        v58[2] = v4;
        v58[3] = v57;
        v58[4] = v4;
        v58[5] = v39;
        v59 = v61;
        v58[6] = a2;
        v58[7] = v59;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_2381D1384((uint64_t)v11, (uint64_t)&unk_2568E9400, (uint64_t)v58);
      }
      else
      {
        v48 = sub_2382387E0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v11, 1, 1, v48);
        v49 = sub_23822CEB8();
        v50 = (_QWORD *)swift_allocObject();
        v50[2] = v4;
        v50[3] = v49;
        v50[4] = v28;
        v50[5] = a2;
        v51 = v61;
        v50[6] = v4;
        v50[7] = v51;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_2381CBA70((uint64_t)v11, (uint64_t)&unk_2568E93F0, (uint64_t)v50);
      }
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_2568EF720 != -1)
    swift_once();
  v29 = sub_238238444();
  __swift_project_value_buffer(v29, (uint64_t)qword_2568EF728);
  swift_bridgeObjectRetain_n();
  v62 = sub_23823842C();
  v30 = sub_23823887C();
  if (os_log_type_enabled(v62, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v64[0] = v32;
    *(_DWORD *)v31 = 136446210;
    swift_bridgeObjectRetain();
    v63 = sub_2381CBC6C(a1, a2, v64);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v62, v30, "session config finished with no use count for %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v32, -1, -1);
    MEMORY[0x23B82FE28](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

}

uint64_t sub_23822B014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  v7 = (_QWORD *)swift_task_alloc();
  v6[15] = v7;
  *v7 = v6;
  v7[1] = sub_23822B070;
  return sub_238238828();
}

uint64_t sub_23822B070()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822B0D8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(_QWORD, _QWORD);
  uint64_t v28;

  if (qword_2568EF720 != -1)
    swift_once();
  v1 = sub_238238444();
  __swift_project_value_buffer(v1, (uint64_t)qword_2568EF728);
  swift_bridgeObjectRetain_n();
  v2 = sub_23823842C();
  v3 = sub_238238870();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 112);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 104);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v28 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_2381CBC6C(v6, v5, &v28);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v2, v3, "eviction timer fired: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 96) + 152);
  v10 = swift_bridgeObjectRetain();
  v11 = v9(v10);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_2381CC2AC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112)), (v13 & 1) != 0))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      v16 = *(_QWORD *)(v0 + 104);
      v15 = *(_QWORD *)(v0 + 112);
      v17 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 96) + 192))(v0 + 48);
      sub_23822D27C(v16, v15);
      swift_bridgeObjectRelease();
      v17(v0 + 48, 0);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v19 = sub_23823842C();
  v20 = sub_238238870();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 112);
  if (v21)
  {
    v23 = *(_QWORD *)(v0 + 104);
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v24 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_2381CBC6C(v23, v22, &v28);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v19, v20, "requesting eviction for %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v25, -1, -1);
    MEMORY[0x23B82FE28](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v27 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(**(_QWORD **)(*(_QWORD *)(v0 + 96) + 112) + 144)
                                               + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v0 + 96) + 112) + 144));
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v26;
  *v26 = v0;
  v26[1] = sub_23822B4D4;
  return v27(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_23822B4D4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822B52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 96) + 192))(v0 + 48);
  sub_23822D27C(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 48, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822B5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = (void (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 96) + 192))(v0 + 16);
  sub_23822D27C(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 16, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23822B648()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, _QWORD);
  uint64_t v12;

  if (qword_2568EF720 != -1)
    swift_once();
  v1 = sub_238238444();
  __swift_project_value_buffer(v1, (uint64_t)qword_2568EF728);
  swift_bridgeObjectRetain_n();
  v2 = sub_23823842C();
  v3 = sub_238238870();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[4];
  if (v4)
  {
    v6 = v0[3];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_2381CBC6C(v6, v5, &v12);
    sub_238238960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2381C6000, v2, v3, "requesting immediate eviction for %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(**(_QWORD **)(v0[5] + 112) + 144)
                                               + *(_QWORD *)(**(_QWORD **)(v0[5] + 112) + 144));
  v9 = (_QWORD *)swift_task_alloc();
  v0[6] = v9;
  *v9 = v0;
  v9[1] = sub_23822B840;
  return v11(v0[3], v0[4]);
}

uint64_t sub_23822B840()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23822B888()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_23822B8A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 56) + 128))();
  *(_QWORD *)(v0 + 64) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_23822B9D0;
    return sub_2381DC8E4();
  }
  else
  {
    if (qword_2568EF720 != -1)
      swift_once();
    v4 = sub_238238444();
    __swift_project_value_buffer(v4, (uint64_t)qword_2568EF728);
    v5 = sub_23823842C();
    v6 = sub_238238888();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting : diskCache nil", v7, 2u);
      MEMORY[0x23B82FE28](v7, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23822B9D0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822BA40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t (*v7)();
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 160);
  if (v1 == 2)
  {
    if (qword_2568EF720 != -1)
      swift_once();
    v2 = sub_238238444();
    __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
    v3 = sub_23823842C();
    v4 = sub_238238894();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_2381C6000, v3, v4, "resetting clientIDs due to missing lastDNU setting", v5, 2u);
      MEMORY[0x23B82FE28](v5, -1, -1);
    }

    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v6;
    v7 = sub_23822BDE0;
LABEL_13:
    *v6 = v0;
    v6[1] = v7;
    return sub_2381DC754();
  }
  v8 = v1 & 1;
  if (v8 != (sub_23820506C() & 1))
  {
    if (qword_2568EF720 != -1)
      swift_once();
    v9 = sub_238238444();
    __swift_project_value_buffer(v9, (uint64_t)qword_2568EF728);
    v10 = sub_23823842C();
    v11 = sub_238238894();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      *(_DWORD *)v12 = 67240448;
      *(_DWORD *)(v0 + 152) = v8;
      sub_238238960();
      *(_WORD *)(v12 + 8) = 1026;
      *(_DWORD *)(v0 + 156) = sub_23820506C() & 1;
      sub_238238960();
      _os_log_impl(&dword_2381C6000, v10, v11, "DNU status changed (%{BOOL,public}d -> %{BOOL,public}d), resetting clientIDs", (uint8_t *)v12, 0xEu);
      MEMORY[0x23B82FE28](v12, -1, -1);
    }

    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v6;
    v7 = sub_23822BCBC;
    goto LABEL_13;
  }
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822BCBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822BD20()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = sub_23820506C();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_23822BD7C;
  return sub_2381DCAC4(v1 & 1);
}

uint64_t sub_23822BD7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822BDE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822BE44()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = sub_23820506C();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_23822BEA0;
  return sub_2381DCAC4(v1 & 1);
}

uint64_t sub_23822BEA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822BF04()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822BF34()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_release();
  v1 = *(void **)(v0 + 80);
  if (qword_2568EF720 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822C124()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_release();
  v1 = *(void **)(v0 + 96);
  if (qword_2568EF720 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822C314()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_release();
  v1 = *(void **)(v0 + 112);
  if (qword_2568EF720 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822C504()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_release();
  v1 = *(void **)(v0 + 128);
  if (qword_2568EF720 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822C6F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_release();
  v1 = *(void **)(v0 + 144);
  if (qword_2568EF720 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EF728);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822C8E4()
{
  swift_release();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23822C928(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9560);
  v37 = a2;
  v6 = sub_238238B04();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_238238CE4();
    sub_238238684();
    result = sub_238238D08();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_23822CC30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9560);
  v2 = *v0;
  v3 = sub_238238AF8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23822CDDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_2381CC2AC(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23822CC30();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_238211934(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_23822CEB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E93E8;
  if (!qword_2568E93E8)
  {
    v1 = type metadata accessor for SessionCoordinator();
    result = MEMORY[0x23B82FD68](&unk_23823CF20, v1);
    atomic_store(result, (unint64_t *)&qword_2568E93E8);
  }
  return result;
}

uint64_t sub_23822CEFC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23822CF30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2381CB914;
  v5[4] = v3;
  v5[5] = v4;
  v5[3] = v2;
  return swift_task_switch();
}

uint64_t sub_23822CFA0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23822CFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_2381CB914;
  *(_QWORD *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v6;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 120) = v4;
  *v4 = v3;
  v4[1] = sub_23822B070;
  return sub_238238828();
}

uint64_t sub_23822D068(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_2381CC2AC(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_23822CC30();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23822C928(result, a4 & 1);
  result = sub_2381CC2AC(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_238238C90();
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionHierarchyItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionHierarchyItem()
{
  return &type metadata for SessionHierarchyItem;
}

uint64_t sub_23822D27C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_238238CE4();
  swift_bridgeObjectRetain();
  sub_238238684();
  v6 = sub_238238D08();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_238238C0C() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_238238C0C() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2381EA758();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23822D408(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_23822D408(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23823899C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_238238CE4();
        swift_bridgeObjectRetain();
        sub_238238684();
        v10 = sub_238238D08();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23822D5CC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23822D5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2381CCDE0;
  v6 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v2 + 264) + *(_QWORD *)(*(_QWORD *)v2 + 264));
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_2381CCDE0;
  return v6();
}

uint64_t variable initialization expression of StorebagCoordinator.pathMonitorQueue()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = sub_2382384F8();
  v0 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2382388B8();
  v11 = *(_QWORD *)(v3 - 8);
  v12 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2382388AC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_23823851C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23821352C();
  sub_238238504();
  v14 = MEMORY[0x24BEE4AF8];
  sub_2381D49C0(&qword_2568E8E38, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F60);
  sub_2381D29E0((unint64_t *)&qword_2568E8E40, (uint64_t *)&unk_2568E8F60);
  sub_238238990();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v5, *MEMORY[0x24BEE5758], v12);
  v9 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BEE5470], v13);
  sub_2382388DC();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v9);
  return sub_2382388D0();
}

char *StorebagCoordinator.mockAvailability.unsafeMutableAddressor()
{
  return &static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.getter()
{
  swift_beginAccess();
  return static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static StorebagCoordinator.mockAvailability = a1;
  return result;
}

uint64_t (*static StorebagCoordinator.mockAvailability.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23822D97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_2382384EC();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23823851C();
  v18 = *(_QWORD *)(v7 - 8);
  v19 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2568E96B8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v17[1] = *(_QWORD *)(a2 + 120);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(_QWORD *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_23822EBFC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2381D14B8;
  aBlock[3] = &block_descriptor_5;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_238238510();
  v21 = MEMORY[0x24BEE4AF8];
  sub_2381D49C0(&qword_2568E7878, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7880);
  sub_2381D29E0(&qword_2568E7888, &qword_2568E7880);
  sub_238238990();
  MEMORY[0x23B82F1EC](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_23822DBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, uint64_t);
  char v20;
  char v21;
  _QWORD v22[2];
  char v23;

  v22[1] = a2;
  v2 = sub_2382384C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v22 - v7;
  v9 = sub_2382384E0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v22 - v14;
  swift_beginAccess();
  if (static StorebagCoordinator.mockAvailability != 4)
  {
    v23 = static StorebagCoordinator.mockAvailability;
    __swift_instantiateConcreteTypeFromMangledName(qword_2568E96B8);
    return sub_2382387BC();
  }
  sub_238238474();
  sub_2382384D4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDE0620], v2);
  v16 = sub_2382384BC();
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v17(v8, v2);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if ((v16 & 1) != 0)
  {
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, v9);
  }
  else
  {
    v20 = sub_2382384B0();
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, v9);
    if ((v20 & 1) == 0)
    {
      if ((sub_2382384A4() & 1) != 0)
        v21 = 1;
      else
        v21 = 2;
      v23 = v21;
      goto LABEL_11;
    }
  }
  v23 = 0;
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName(qword_2568E96B8);
  sub_2382387BC();
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t sub_23822DE24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v1;
  return swift_task_switch();
}

uint64_t sub_23822DE3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)v0[9];
  v2 = *(_QWORD *)(v0[10] + 128);
  v0[11] = v2;
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v5 = v0[3];
  v0[12] = v0[2];
  v0[13] = v5;
  swift_bridgeObjectRetain();
  sub_2381CC9D4((uint64_t)(v0 + 2));
  v0[14] = *(_QWORD *)(*(_QWORD *)v2 + 224);
  return swift_task_switch();
}

uint64_t sub_23822DED4()
{
  uint64_t v0;
  char v1;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 112))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(3);
  else
    return swift_task_switch();
}

uint64_t sub_23822DF40()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2381D49C0(qword_2568E9590, (uint64_t (*)(uint64_t))type metadata accessor for StorebagCoordinator, (uint64_t)&protocol conformance descriptor for StorebagCoordinator);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_23822DFF4;
  return sub_238238BF4();
}

uint64_t sub_23822DFF4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822E04C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 128));
}

uint64_t type metadata accessor for StorebagCoordinator()
{
  uint64_t result;

  result = qword_2568EF8D0;
  if (!qword_2568EF8D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23822E094(uint64_t a1)
{
  uint64_t v1;

  return sub_23822D97C(a1, v1);
}

uint64_t sub_23822E09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  return swift_task_switch();
}

uint64_t sub_23822E0B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[24];
  v2 = *(_QWORD *)(v0[25] + 128);
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v5 = v0[2];
  v6 = v0[3];
  v0[26] = v6;
  swift_bridgeObjectRetain();
  sub_2381CC9D4((uint64_t)(v0 + 2));
  v9 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 232)
                                                          + *(_QWORD *)(*(_QWORD *)v2 + 232));
  v7 = (_QWORD *)swift_task_alloc();
  v0[27] = v7;
  *v7 = v0;
  v7[1] = sub_23822E184;
  return v9(v0 + 14, v5, v6);
}

uint64_t sub_23822E184()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23822E1F4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 184);
  sub_2381E7004(*(_QWORD **)(v0 + 192), (_OWORD *)(v0 + 72));
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 112);
  sub_2381F4A7C(v0 + 168);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 128);
  sub_2381EC924(v0 + 152);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 144);
  sub_2381F4A7C(v0 + 176);
  v2 = *(_OWORD *)(v0 + 88);
  v3 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 104);
  *(_OWORD *)v1 = v3;
  *(_OWORD *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822E280()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822E2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23822E2D0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0[4] + 128);
  v0[5] = v1;
  v0[6] = *(_QWORD *)(*(_QWORD *)v1 + 256);
  return swift_task_switch();
}

uint64_t sub_23822E2F8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 48))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822E32C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2381DA494;
  return sub_23822E38C(a1);
}

uint64_t sub_23822E38C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  void (*v8)(uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_238238210();
  v2[5] = v3;
  v22 = *(_QWORD *)(v3 - 8);
  v2[6] = v22;
  v20 = swift_task_alloc();
  v2[7] = v20;
  v23 = sub_2382384F8();
  v21 = *(_QWORD *)(v23 - 8);
  v4 = swift_task_alloc();
  v2[8] = v4;
  v5 = sub_2382388B8();
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  v6 = swift_task_alloc();
  v2[9] = v6;
  sub_2382388AC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  v2[10] = swift_task_alloc();
  sub_23823851C();
  v2[11] = swift_task_alloc();
  swift_defaultActor_initialize();
  sub_23821352C();
  sub_238238504();
  v2[2] = MEMORY[0x24BEE4AF8];
  sub_2381D49C0(&qword_2568E8E38, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E8F60);
  sub_2381D29E0((unint64_t *)&qword_2568E8E40, (uint64_t *)&unk_2568E8F60);
  sub_238238990();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v6, *MEMORY[0x24BEE5758], v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 104))(v4, *MEMORY[0x24BEE5470], v23);
  sub_2382388DC();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v4, v23);
  v17[15] = sub_2382388D0();
  type metadata accessor for StorebagCache(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v24 = v3;
  v8(v20, a1, v3);
  v9 = sub_238224674();
  v17[16] = sub_238224810(v9, 0, 0, v20);
  __swift_instantiateConcreteTypeFromMangledName(qword_2568E95B8);
  v10 = sub_238238468();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_238239E40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BDE00C0], v10);
  sub_238238498();
  swift_allocObject();
  v17[14] = sub_238238480();
  v14 = (void *)v17[15];
  swift_retain();
  v15 = v14;
  sub_23823848C();
  swift_release();

  v8((uint64_t)v17 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL, a1, v24);
  return swift_task_switch();
}

uint64_t sub_23822E7A8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t StorebagCoordinator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t StorebagCoordinator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL;
  v2 = sub_238238210();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t StorebagCoordinator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23822E900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_238216064;
  return v6(a1);
}

uint64_t sub_23822E964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 56) = a1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 136) + *(_QWORD *)(*(_QWORD *)v2 + 136));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 64) = v5;
  *v5 = v3;
  v5[1] = sub_23822E9DC;
  return v7(v3 + 16, a2);
}

uint64_t sub_23822E9DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (!v0)
  {
    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_OWORD *)(v2 + 16);
    v6 = *(_OWORD *)(v2 + 32);
    *(_QWORD *)(v4 + 32) = *(_QWORD *)(v2 + 48);
    *(_OWORD *)v4 = v5;
    *(_OWORD *)(v4 + 16) = v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23822EA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_2381CB914;
  return v8(a1, a2);
}

uint64_t sub_23822EAAC(uint64_t a1)
{
  uint64_t result;

  result = sub_2381D49C0(qword_2568E9590, (uint64_t (*)(uint64_t))type metadata accessor for StorebagCoordinator, (uint64_t)&protocol conformance descriptor for StorebagCoordinator);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23822EAE8()
{
  return type metadata accessor for StorebagCoordinator();
}

uint64_t sub_23822EAF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238210();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23822EB84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2568E96B8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23822EBFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2568E96B8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23822DBE8(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_23822EC58()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568F0190);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568F0190);
  return sub_238238438();
}

uint64_t sub_23822ECD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[7] = v0;
  v2 = sub_23823830C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23822ED40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 112);
  *(_QWORD *)(v0 + 96) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    swift_retain();
    sub_2382382DC();
    sub_2382382A0();
    v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    *(_QWORD *)(v0 + 104) = v5;
    v5(v2, v3);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_23822EED0;
    return sub_2381DBF98(*(_QWORD *)(v0 + 88));
  }
  else
  {
    if (qword_2568EF8E0 != -1)
      swift_once();
    v8 = sub_238238444();
    __swift_project_value_buffer(v8, (uint64_t)qword_2568F0190);
    v9 = sub_23823842C();
    v10 = sub_238238894();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2381C6000, v9, v10, "cleanup cache activity skipped due to bad initialization", v11, 2u);
      MEMORY[0x23B82FE28](v11, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23822EED0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 128) = v4;
  *v4 = v2;
  v4[1] = sub_23822EF60;
  return sub_2381DCC18();
}

uint64_t sub_23822EF60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23822EFC4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822F020()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(v0 + 104))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  if (qword_2568EF8E0 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568F0190);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to delete outdated sessions: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822F23C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(v0 + 104))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  if (qword_2568EF8E0 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568F0190);
  v3 = v1;
  v4 = v1;
  v5 = sub_23823842C();
  v6 = sub_238238888();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_238238C9C();
    *(_QWORD *)(v0 + 48) = sub_2381CBC6C(v9, v10, &v12);
    sub_238238960();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2381C6000, v5, v6, "failed to delete outdated sessions: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v8, -1, -1);
    MEMORY[0x23B82FE28](v7, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23822F458()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 104) + *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2381CB914;
  return v4();
}

uint64_t sub_23822F4B0()
{
  CacheCleanupActivityConfig.activityFlags.unsafeMutableAddressor();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23822F4F0()
{
  uint64_t v0;

  v0 = *(_QWORD *)CacheCleanupActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_23822F520(uint64_t a1)
{
  unint64_t result;

  result = sub_23822F544();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23822F544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E96D0;
  if (!qword_2568E96D0)
  {
    v1 = type metadata accessor for CacheCleanupActivity();
    result = MEMORY[0x23B82FD68](&unk_23823D040, v1);
    atomic_store(result, (unint64_t *)&qword_2568E96D0);
  }
  return result;
}

uint64_t type metadata accessor for CacheCleanupActivity()
{
  return objc_opt_self();
}

uint64_t variable initialization expression of RequestOptions.networkingDelegate()
{
  return 0;
}

uint64_t sub_23822F5B0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for RequestOptions();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = 0;
  result = swift_unknownObjectRelease();
  static RequestOptions.globalRequestOptions = v0;
  return result;
}

uint64_t RequestOptions.__allocating_init(networkingDelegate:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  swift_unknownObjectRelease();
  return v2;
}

uint64_t *RequestOptions.globalRequestOptions.unsafeMutableAddressor()
{
  if (qword_2568EF9F0 != -1)
    swift_once();
  return &static RequestOptions.globalRequestOptions;
}

uint64_t static RequestOptions.globalRequestOptions.getter()
{
  if (qword_2568EF9F0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static RequestOptions.globalRequestOptions.setter(uint64_t a1)
{
  if (qword_2568EF9F0 != -1)
    swift_once();
  swift_beginAccess();
  static RequestOptions.globalRequestOptions = a1;
  return swift_release();
}

uint64_t (*static RequestOptions.globalRequestOptions.modify())()
{
  if (qword_2568EF9F0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t RequestOptions.init(networkingDelegate:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  swift_unknownObjectRelease();
  return v1;
}

id sub_23822F864(unsigned int a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  id v4;
  void *v5;

  v2 = a1;
  v3 = (a1 >> 8) & 1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0FFE0]), sel_init);
  objc_msgSend(v4, sel_set_timeoutIntervalForRequest_, 5.0);
  objc_msgSend(v4, sel_setAllowsCellularAccess_, v2 & 1);
  objc_msgSend(v4, sel_set_allowsExpensiveAccess_, v3);
  v5 = (void *)sub_2382385E8();
  objc_msgSend(v4, sel_set_sourceApplicationBundleIdentifier_, v5);

  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
    objc_msgSend(v4, sel_setNetworkingDelegate_);
  return v4;
}

uint64_t RequestOptions.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t RequestOptions.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestOptions()
{
  return objc_opt_self();
}

uint64_t XPCTypeConnection.getter()
{
  return MEMORY[0x24BDACF88];
}

uint64_t XPCTypeEndpoint.getter()
{
  return MEMORY[0x24BDACFB0];
}

uint64_t XPCTypeNull.getter()
{
  return MEMORY[0x24BDACFE0];
}

uint64_t XPCTypeBool.getter()
{
  return MEMORY[0x24BDACF80];
}

uint64_t XPCTypeInt64.getter()
{
  return MEMORY[0x24BDACFD0];
}

uint64_t XPCTypeUInt64.getter()
{
  return MEMORY[0x24BDACFF8];
}

uint64_t XPCTypeDouble.getter()
{
  return MEMORY[0x24BDACFA8];
}

uint64_t XPCTypeData.getter()
{
  return MEMORY[0x24BDACF90];
}

uint64_t XPCTypeDate.getter()
{
  return MEMORY[0x24BDACF98];
}

uint64_t XPCTypeString.getter()
{
  return MEMORY[0x24BDACFF0];
}

uint64_t XPCTypeUUID.getter()
{
  return MEMORY[0x24BDAD000];
}

uint64_t XPCTypeShmem.getter()
{
  return MEMORY[0x24BDACFE8];
}

uint64_t XPCTypeArray.getter()
{
  return MEMORY[0x24BDACF78];
}

uint64_t XPCTypeDictionary.getter()
{
  return MEMORY[0x24BDACFA0];
}

uint64_t XPCTypeError.getter()
{
  return MEMORY[0x24BDACFB8];
}

uint64_t XPCTypeActivity.getter()
{
  return MEMORY[0x24BDACF70];
}

const char *SubmitEventsActivityConfig.identifier.unsafeMutableAddressor()
{
  return "submit";
}

uint64_t static SubmitEventsActivityConfig.identifier.getter()
{
  return 0x74696D627573;
}

uint64_t sub_23822FA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;
  uint64_t result;
  _QWORD *v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _BYTE *v21;
  _QWORD *v22;
  _BYTE *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9890);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9898);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23823D0E0;
  v5 = (_QWORD *)(v4 + v3);
  v6 = (char *)v5 + *(int *)(v0 + 48);
  *v5 = *MEMORY[0x24BDAC6B8];
  *v6 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  v7 = (_QWORD *)((char *)v5 + v2 + *(int *)(v0 + 48));
  *(_QWORD *)((char *)v5 + v2) = *MEMORY[0x24BDAC5B8];
  *v7 = 86400;
  swift_storeEnumTagMultiPayload();
  v8 = (_QWORD *)((char *)v5 + 2 * v2);
  v9 = (_QWORD *)((char *)v8 + *(int *)(v0 + 48));
  *v8 = *MEMORY[0x24BDAC5D8];
  *v9 = 43200;
  swift_storeEnumTagMultiPayload();
  v10 = (_QWORD *)((char *)v5 + 3 * v2);
  v11 = (_QWORD *)((char *)v10 + *(int *)(v0 + 48));
  *v10 = *MEMORY[0x24BDAC698];
  *v11 = sub_2382386C0();
  v11[1] = v12;
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)((char *)v5 + 4 * v2);
  v14 = (char *)v13 + *(int *)(v0 + 48);
  *v13 = *MEMORY[0x24BDAC598];
  *v14 = 0;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC688])
  {
    __break(1u);
    goto LABEL_11;
  }
  v16 = (_QWORD *)((char *)v5 + 5 * v2);
  v17 = (char *)v16 + *(int *)(v0 + 48);
  *v16 = *MEMORY[0x24BDAC688];
  *v17 = 1;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC6B0])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v18 = (_QWORD *)((char *)v5 + 6 * v2);
  v19 = (_QWORD *)((char *)v18 + *(int *)(v0 + 48));
  *v18 = *MEMORY[0x24BDAC6B0];
  *v19 = 43200;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC6E0])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v20 = (_QWORD *)((char *)&v5[v2] - v2);
  v21 = (char *)v20 + *(int *)(v0 + 48);
  *v20 = *MEMORY[0x24BDAC6E0];
  *v21 = 1;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC6D8])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v22 = &v5[v2];
  v23 = (char *)v22 + *(int *)(v0 + 48);
  *v22 = *MEMORY[0x24BDAC6D8];
  *v23 = 1;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC678])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v24 = (_QWORD *)((char *)v5 + 9 * v2);
  v25 = (_QWORD *)((char *)v24 + *(int *)(v0 + 48));
  *v24 = *MEMORY[0x24BDAC678];
  *v25 = 5242880;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC5D0])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v26 = (_QWORD *)((char *)v5 + 10 * v2);
  v27 = (_QWORD *)((char *)v26 + *(int *)(v0 + 48));
  *v26 = *MEMORY[0x24BDAC5D0];
  *v27 = *MEMORY[0x24BDAC628];
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC5E8])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v28 = (_QWORD *)((char *)v5 + 11 * v2);
  v29 = (_QWORD *)((char *)v28 + *(int *)(v0 + 48));
  *v28 = *MEMORY[0x24BDAC5E8];
  *v29 = 0xD000000000000025;
  v29[1] = 0x8000000238240590;
  result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x24BDAC5E0])
  {
    v30 = (_QWORD *)((char *)v5 + 12 * v2);
    v31 = (_QWORD *)((char *)v30 + *(int *)(v0 + 48));
    *v30 = *MEMORY[0x24BDAC5E0];
    *v31 = 1;
    swift_storeEnumTagMultiPayload();
    v32 = sub_238230144(v4);
    swift_setDeallocating();
    swift_arrayDestroy();
    result = swift_deallocClassInstance();
    static SubmitEventsActivityConfig.activityFlags = v32;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *SubmitEventsActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_2568EF9F8 != -1)
    swift_once();
  return &static SubmitEventsActivityConfig.activityFlags;
}

uint64_t static SubmitEventsActivityConfig.activityFlags.getter()
{
  if (qword_2568EF9F8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SubmitEventsActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_2568EF9F8 != -1)
    swift_once();
  swift_beginAccess();
  static SubmitEventsActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SubmitEventsActivityConfig.activityFlags.modify())()
{
  if (qword_2568EF9F8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23822FFE8()
{
  if (qword_2568EF9F8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_238230054()
{
  return 0x74696D627573;
}

ValueMetadata *type metadata accessor for SubmitEventsActivityConfig()
{
  return &type metadata for SubmitEventsActivityConfig;
}

unint64_t sub_238230078(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238238CD8();
  return sub_2382300A8(a1, v2);
}

unint64_t sub_2382300A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_238230144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9898);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E98A0);
    v7 = (_QWORD *)sub_238238B10();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23823029C(v9, (uint64_t)v5);
      v11 = *v5;
      result = sub_238230078(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for XPCObject();
      result = sub_238215C70(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23823029C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_BYTE *XPCObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *result;
  BOOL value;
  int64_t v19;
  uint64_t v20;
  double v21;
  int64_t v22;
  _BYTE *v23;
  size_t length;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = type metadata accessor for XPCObject();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (uint64_t *)((char *)&v32 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v32 - v12);
  if (!a1)
    return (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v14 = swift_unknownObjectRetain();
  v15 = MEMORY[0x23B83014C](v14);
  if (XPCTypeNull.getter() == v15)
  {
    swift_unknownObjectRelease_n();
LABEL_26:
    swift_storeEnumTagMultiPayload();
LABEL_27:
    sub_238215C70((uint64_t)v13, a2);
    return (_BYTE *)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  if (XPCTypeConnection.getter() == v15 || XPCTypeEndpoint.getter() == v15)
  {
LABEL_35:
    swift_unknownObjectRelease();
    *v13 = a1;
    goto LABEL_26;
  }
  if (XPCTypeBool.getter() == v15)
  {
    value = xpc_BOOL_get_value(a1);
    swift_unknownObjectRelease_n();
    *(_BYTE *)v13 = value;
    goto LABEL_26;
  }
  if (XPCTypeInt64.getter() == v15)
  {
    v19 = xpc_int64_get_value(a1);
    swift_unknownObjectRelease_n();
    *v13 = v19;
    goto LABEL_26;
  }
  if (XPCTypeUInt64.getter() == v15)
  {
    v20 = xpc_uint64_get_value(a1);
    swift_unknownObjectRelease_n();
    *v13 = v20;
    goto LABEL_26;
  }
  if (XPCTypeDouble.getter() == v15)
  {
    v21 = xpc_double_get_value(a1);
    swift_unknownObjectRelease_n();
    *(double *)v13 = v21;
    goto LABEL_26;
  }
  if (XPCTypeDate.getter() == v15)
  {
    v22 = xpc_date_get_value(a1);
    swift_unknownObjectRelease_n();
    *v13 = v22;
    goto LABEL_26;
  }
  if (XPCTypeData.getter() == v15)
  {
    result = xpc_data_get_bytes_ptr(a1);
    if (result)
    {
      v23 = result;
      length = xpc_data_get_length(a1);
      v25 = sub_238231498(v23, length);
      v27 = v26;
      swift_unknownObjectRelease_n();
      *v11 = v25;
      v11[1] = v27;
      swift_storeEnumTagMultiPayload();
      v28 = (uint64_t)v11;
LABEL_32:
      sub_238215C70(v28, (uint64_t)v13);
      goto LABEL_27;
    }
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (XPCTypeString.getter() == v15)
  {
    result = xpc_string_get_string_ptr(a1);
    if (result)
    {
      v29 = sub_2382386C0();
      v31 = v30;
      swift_unknownObjectRelease_n();
      *v8 = v29;
      v8[1] = v31;
      swift_storeEnumTagMultiPayload();
      v28 = (uint64_t)v8;
      goto LABEL_32;
    }
    goto LABEL_38;
  }
  if (XPCTypeUUID.getter() != v15)
  {
    if (XPCTypeShmem.getter() != v15 && XPCTypeArray.getter() != v15)
    {
      v16 = XPCTypeDictionary.getter();
      swift_unknownObjectRelease();
      if (v16 != v15)
      {
        swift_unknownObjectRelease();
        return (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
      }
      *v13 = a1;
      goto LABEL_26;
    }
    goto LABEL_35;
  }
  result = xpc_uuid_get_bytes(a1);
  if (result)
  {
    sub_23823833C();
    swift_unknownObjectRelease_n();
    goto LABEL_26;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for XPCObject()
{
  uint64_t result;

  result = qword_2568EFB00;
  if (!qword_2568EFB00)
    return swift_getSingletonMetadata();
  return result;
}

void XPCObject.obj.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v5[4];

  v5[3] = *MEMORY[0x24BDAC8D0];
  v1 = sub_238238360();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for XPCObject();
  MEMORY[0x24BDAC7A8](v2);
  sub_238215CB4(v0, (uint64_t)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)&loc_238230840 + dword_238230B74[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_238230850()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

BOOL static XPCObject.== infix(_:_:)()
{
  void *v0;
  void *v1;
  xpc_object_t v2;
  _BOOL8 v3;

  XPCObject.obj.getter();
  v1 = v0;
  XPCObject.obj.getter();
  v3 = xpc_equal(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

BOOL sub_238230C20()
{
  void *v0;
  void *v1;
  xpc_object_t v2;
  _BOOL8 v3;

  XPCObject.obj.getter();
  v1 = v0;
  XPCObject.obj.getter();
  v3 = xpc_equal(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

xpc_object_t XPCDictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  xpc_object_t v1;

  v1 = sub_238231544(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t XPCDictionary.subscript.setter(uint64_t a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  sub_238223818(a1, (uint64_t)v5, (uint64_t *)&unk_2568E7AC0);
  v7 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_2381CCCD0((uint64_t)v5, (uint64_t *)&unk_2568E7AC0);
    v8 = 0;
  }
  else
  {
    XPCObject.obj.getter();
    v8 = v9;
    sub_238215CF8((uint64_t)v5);
  }
  v10 = sub_23823866C();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(v6, (const char *)(v10 + 32), v8);
  swift_unknownObjectRelease();
  sub_2381CCCD0(a1, (uint64_t *)&unk_2568E7AC0);
  return swift_release();
}

uint64_t XPCDictionary.keys.getter(void *a1)
{
  int64_t count;
  _QWORD *v3;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD *v11;
  _QWORD aBlock[6];
  _QWORD *v13;

  count = xpc_dictionary_get_count(a1);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || count > v3[3] >> 1)
  {
    if (v3[2] <= count)
      v5 = count;
    else
      v5 = v3[2];
    v3 = sub_2381DCE58(isUniquelyReferenced_nonNull_native, v5, 0, v3);
  }
  v13 = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &v13;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_238231854;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_2381D96B0;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2381D5F98;
  aBlock[3] = &block_descriptor_6;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v13;
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

_BYTE *XPCDictionary.subscript.getter@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  xpc_object_t v5;

  v4 = sub_23823866C();
  v5 = xpc_dictionary_get_value(a1, (const char *)(v4 + 32));
  swift_release();
  return XPCObject.init(_:)(v5, a2);
}

void (*XPCDictionary.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  void **v3;
  _QWORD *v7;
  size_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  xpc_object_t v12;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0) - 8) + 64);
  v7[3] = malloc(v8);
  v7[4] = malloc(v8);
  v7[5] = malloc(v8);
  v9 = malloc(v8);
  v7[6] = v9;
  v10 = *v3;
  v11 = sub_23823866C();
  v12 = xpc_dictionary_get_value(v10, (const char *)(v11 + 32));
  swift_release();
  XPCObject.init(_:)(v12, (uint64_t)v9);
  return sub_23823108C;
}

void sub_23823108C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    v5 = v2[3];
    v4 = v2[4];
    v6 = (void **)v2[2];
    sub_238223818(v3, v4, (uint64_t *)&unk_2568E7AC0);
    v7 = *v6;
    sub_238223818(v4, v5, (uint64_t *)&unk_2568E7AC0);
    v8 = type metadata accessor for XPCObject();
    LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
    swift_bridgeObjectRetain();
    v9 = v2[3];
    if ((_DWORD)v5 == 1)
    {
      sub_2381CCCD0(v2[3], (uint64_t *)&unk_2568E7AC0);
      v10 = 0;
    }
    else
    {
      XPCObject.obj.getter();
      v10 = v17;
      sub_238215CF8(v9);
    }
    v19 = (void *)v2[5];
    v18 = (void *)v2[6];
    v21 = (void *)v2[3];
    v20 = (void *)v2[4];
    v22 = sub_23823866C();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v7, (const char *)(v22 + 32), v10);
    swift_unknownObjectRelease();
    sub_2381CCCD0((uint64_t)v20, (uint64_t *)&unk_2568E7AC0);
    swift_release();
    sub_2381CCCD0((uint64_t)v18, (uint64_t *)&unk_2568E7AC0);
  }
  else
  {
    v11 = v2[5];
    v12 = *(void **)v2[2];
    sub_238223818(v3, v11, (uint64_t *)&unk_2568E7AC0);
    v13 = type metadata accessor for XPCObject();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
    swift_bridgeObjectRetain();
    v15 = v2[5];
    if (v14 == 1)
    {
      sub_2381CCCD0(v2[5], (uint64_t *)&unk_2568E7AC0);
      v16 = 0;
    }
    else
    {
      XPCObject.obj.getter();
      v16 = v23;
      sub_238215CF8(v15);
    }
    v19 = (void *)v2[5];
    v18 = (void *)v2[6];
    v21 = (void *)v2[3];
    v20 = (void *)v2[4];
    v24 = sub_23823866C();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v12, (const char *)(v24 + 32), v16);
    swift_unknownObjectRelease();
    sub_2381CCCD0((uint64_t)v18, (uint64_t *)&unk_2568E7AC0);
    swift_release();
  }
  free(v18);
  free(v19);
  free(v20);
  free(v21);
  free(v2);
}

Swift::Bool __swiftcall XPCDictionary.contains(key:)(Swift::String key)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  xpc_object_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23823866C();
  v7 = xpc_dictionary_get_value(v2, (const char *)(v6 + 32));
  swift_release();
  XPCObject.init(_:)(v7, (uint64_t)v5);
  v8 = type metadata accessor for XPCObject();
  LOBYTE(v7) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  sub_2381CCCD0((uint64_t)v5, (uint64_t *)&unk_2568E7AC0);
  return (char)v7;
}

uint64_t sub_23823139C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  xpc_object_t v3;
  uint64_t result;

  v3 = sub_238231544(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_2382313D8(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_238231498(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2382313D8(__src, &__src[a2]);
  sub_23823809C();
  swift_allocObject();
  sub_238238060();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_238238240();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

xpc_object_t sub_238231544(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  xpc_object_t empty;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v38 - v6;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9948);
  v8 = *(_QWORD *)(v45 - 8);
  v9 = MEMORY[0x24BDAC7A8](v45);
  v43 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t *)((char *)&v38 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v44 = (uint64_t *)((char *)&v38 - v16);
  empty = xpc_dictionary_create_empty();
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v41 = (uint64_t)v44 + *(int *)(v45 + 48);
    v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v19 = *(_QWORD *)(v8 + 72);
    v39 = v15;
    v40 = v19;
    do
    {
      v22 = v44;
      sub_238223818(v18, (uint64_t)v44, &qword_2568E9948);
      v23 = v45;
      v24 = (uint64_t)&v15[*(int *)(v45 + 48)];
      v25 = (uint64_t *)v15;
      v27 = *v22;
      v26 = v22[1];
      *v25 = *v22;
      v25[1] = v26;
      sub_238215C70(v41, v24);
      v28 = *(int *)(v23 + 48);
      v29 = v42;
      v30 = (uint64_t)v42 + v28;
      *v42 = v27;
      v29[1] = v26;
      v47 = (uint64_t)v29 + v28;
      sub_238215CB4(v24, v30);
      v31 = *(int *)(v23 + 48);
      v32 = v43;
      v33 = (uint64_t)v43 + v31;
      *v43 = v27;
      v32[1] = v26;
      sub_238215CB4(v24, (uint64_t)v32 + v31);
      sub_238215C70(v33, (uint64_t)v7);
      v34 = type metadata accessor for XPCObject();
      v35 = *(_QWORD *)(v34 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v34);
      sub_238223818((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2568E7AC0);
      LODWORD(v34) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34);
      swift_bridgeObjectRetain();
      if ((_DWORD)v34 == 1)
      {
        sub_2381CCCD0((uint64_t)v5, (uint64_t *)&unk_2568E7AC0);
        v20 = 0;
      }
      else
      {
        XPCObject.obj.getter();
        v20 = v36;
        sub_238215CF8((uint64_t)v5);
      }
      v21 = sub_23823866C();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(empty, (const char *)(v21 + 32), v20);
      swift_unknownObjectRelease();
      sub_2381CCCD0((uint64_t)v7, (uint64_t *)&unk_2568E7AC0);
      swift_release();
      v15 = v39;
      sub_2381CCCD0((uint64_t)v39, &qword_2568E9948);
      sub_238215CF8(v47);
      v18 += v40;
      --v17;
    }
    while (v17);
  }
  return empty;
}

uint64_t sub_238231844()
{
  return swift_deallocObject();
}

uint64_t sub_238231854()
{
  uint64_t v0;
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD ***)(v0 + 16);
  v2 = sub_2382386C0();
  v4 = v3;
  v5 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_2381DCE58(0, v5[2] + 1, 1, v5);
    *v1 = v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    v5 = sub_2381DCE58((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    *v1 = v5;
  }
  v5[2] = v8 + 1;
  v9 = &v5[2 * v8];
  v9[4] = v2;
  v9[5] = v4;
  return 1;
}

uint64_t sub_238231908()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v10 = *a2;
        v9 = a2[1];
        sub_2381D2684(v10, v9);
        *a1 = v10;
        a1[1] = v9;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v12 = sub_238238360();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for XPCObject(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 10:
    case 11:
    case 12:
      result = swift_unknownObjectRelease();
      break;
    case 7:
      result = sub_2381D2640(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      break;
    case 8:
      result = swift_bridgeObjectRelease();
      break;
    case 9:
      v3 = sub_238238360();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_7;
    case 7u:
      v7 = *a2;
      v6 = a2[1];
      sub_2381D2684(v7, v6);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_7;
    case 8u:
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 9u:
      v9 = sub_238238360();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_238215CF8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_8;
      case 7u:
        v7 = *a2;
        v6 = a2[1];
        sub_2381D2684(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_8;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 9u:
        v8 = sub_238238360();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 9)
  {
    v6 = sub_238238360();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_238215CF8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      v6 = sub_238238360();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_238231FA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238238360();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCDictionary()
{
  return &type metadata for XPCDictionary;
}

uint64_t sub_238232060(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_238232090()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2382320B4()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EFB18);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EFB18);
  return sub_238238438();
}

uint64_t variable initialization expression of XPCActivity.currentTask()
{
  return 0;
}

uint64_t sub_238232130()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_238232164(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_2382321A8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t variable initialization expression of XPCActivity.disabled()
{
  return 0;
}

uint64_t sub_2382321EC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_23823221C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 136) = a1;
  return result;
}

uint64_t *XPCActivity.makeHandler.unsafeMutableAddressor()
{
  return &static XPCActivity.makeHandler;
}

uint64_t static XPCActivity.makeHandler.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = static XPCActivity.makeHandler;
  sub_2382322B8(static XPCActivity.makeHandler);
  return v0;
}

uint64_t sub_2382322B8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t static XPCActivity.makeHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_beginAccess();
  v4 = static XPCActivity.makeHandler;
  static XPCActivity.makeHandler = a1;
  qword_2568F01C0 = a2;
  sub_2382322B8(a1);
  sub_2381D96EC(v4);
  return sub_2381D96EC(a1);
}

uint64_t (*static XPCActivity.makeHandler.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall XPCActivity.register(disabled:)(Swift::Bool_optional disabled)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *oslog;
  uint64_t aBlock;
  unint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  uint64_t (*v25)();
  _QWORD *v26;
  uint64_t v27;

  v2 = v1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_23823860C();

    if (disabled.value != 2)
      (*(void (**)(Swift::Bool))(*v2 + 144))(disabled.value);
    sub_238238A20();
    swift_bridgeObjectRelease();
    aBlock = 0x6C655464756F6C43;
    v22 = 0xEF2E797274656D65;
    sub_2382386B4();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    (*(void (**)(void))(v2[15] + 32))();
    sub_2382386B4();
    swift_bridgeObjectRelease();
    v6 = (void *)*MEMORY[0x24BDAC5A0];
    v25 = sub_238233ADC;
    v26 = v2;
    aBlock = MEMORY[0x24BDAC760];
    v22 = 1107296256;
    v23 = sub_238232840;
    v24 = &block_descriptor_7;
    v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v8 = sub_23823866C();
    xpc_activity_register((const char *)(v8 + 32), v6, v7);
    swift_release();
    _Block_release(v7);
    if (qword_2568EFB10 != -1)
      swift_once();
    v9 = sub_238238444();
    __swift_project_value_buffer(v9, (uint64_t)qword_2568EFB18);
    swift_bridgeObjectRetain();
    v10 = sub_23823842C();
    v11 = sub_238238870();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      aBlock = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      v27 = sub_2381CBC6C(0x6C655464756F6C43, 0xEF2E797274656D65, &aBlock);
      sub_238238960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2381C6000, v10, v11, "registered: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v13, -1, -1);
      MEMORY[0x23B82FE28](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  else
  {
    if (qword_2568EFB10 != -1)
      swift_once();
    v14 = sub_238238444();
    __swift_project_value_buffer(v14, (uint64_t)qword_2568EFB18);
    swift_retain_n();
    oslog = sub_23823842C();
    v15 = sub_238238870();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315138;
      aBlock = v17;
      v18 = (*(uint64_t (**)(void))(v2[15] + 32))();
      v27 = sub_2381CBC6C(v18, v19, &aBlock);
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2381C6000, oslog, v15, "unable to register: %s, nil bundleIdentifier", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v17, -1, -1);
      MEMORY[0x23B82FE28](v16, -1, -1);

    }
    else
    {
      swift_release_n();

    }
  }
}

uint64_t sub_238232840(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_238232888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  xpc_object_t v41;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for XPCObject();
  v5 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  v40 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9BB0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 24);
  v17 = *(_QWORD *)(v16(v14, v15) + 16);
  swift_bridgeObjectRelease();
  if (!v17)
    return 0;
  v41 = XPCDictionary.init()();
  result = v16(v14, v15);
  v19 = 0;
  v20 = *(_QWORD *)(result + 64);
  v36 = result + 64;
  v21 = 1 << *(_BYTE *)(result + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v37 = (unint64_t)(v21 + 63) >> 6;
  v38 = result;
  v35 = v37 - 1;
  if ((v22 & v20) == 0)
    goto LABEL_9;
LABEL_7:
  v24 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v25 = v24 | (v19 << 6);
  while (2)
  {
    v26 = *(_QWORD *)(v38 + 56);
    *v11 = *(_QWORD *)(*(_QWORD *)(v38 + 48) + 8 * v25);
    v27 = v26 + *(_QWORD *)(v40 + 72) * v25;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9BB8);
    sub_238215CB4(v27, (uint64_t)v11 + *(int *)(v28 + 48));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
    while (1)
    {
      sub_238233F04((uint64_t)v11, (uint64_t)v13);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9BB8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v13, 1, v33) == 1)
      {
        swift_release();
        return (uint64_t)v41;
      }
      sub_238215C70((uint64_t)&v13[*(int *)(v33 + 48)], (uint64_t)v7);
      sub_2382386C0();
      sub_238215CB4((uint64_t)v7, (uint64_t)v3);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v3, 0, 1, v39);
      XPCDictionary.subscript.setter((uint64_t)v3);
      result = sub_238215CF8((uint64_t)v7);
      if (v23)
        goto LABEL_7;
LABEL_9:
      v29 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v29 < v37)
      {
        v30 = *(_QWORD *)(v36 + 8 * v29);
        if (v30)
          goto LABEL_12;
        v31 = v19 + 2;
        ++v19;
        if (v29 + 1 < v37)
        {
          v30 = *(_QWORD *)(v36 + 8 * v31);
          if (v30)
            goto LABEL_15;
          v19 = v29 + 1;
          if (v29 + 2 < v37)
          {
            v30 = *(_QWORD *)(v36 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_12;
            }
            v31 = v29 + 3;
            v19 = v29 + 2;
            if (v29 + 3 < v37)
              break;
          }
        }
      }
LABEL_26:
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9BB8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
      v23 = 0;
    }
    v30 = *(_QWORD *)(v36 + 8 * v31);
    if (v30)
    {
LABEL_15:
      v29 = v31;
LABEL_12:
      v23 = (v30 - 1) & v30;
      v25 = __clz(__rbit64(v30)) + (v29 << 6);
      v19 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v37)
    {
      v19 = v35;
      goto LABEL_26;
    }
    v30 = *(_QWORD *)(v36 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_12;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_238232C44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _xpc_activity_s *v8;
  xpc_activity_state_t state;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  xpc_activity_state_t v30;
  uint64_t v31;
  void *v32;
  xpc_object_t v33;
  _xpc_activity_s *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for XPCActivityHandle();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  v8 = (_xpc_activity_s *)swift_unknownObjectRetain();
  state = xpc_activity_get_state(v8);
  if (state == 2)
  {
    if (qword_2568EFB10 != -1)
      swift_once();
    v17 = sub_238238444();
    __swift_project_value_buffer(v17, (uint64_t)qword_2568EFB18);
    swift_retain_n();
    v18 = sub_23823842C();
    v19 = sub_238238894();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      v40 = v21;
      v22 = (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 120) + 32))();
      v39 = sub_2381CBC6C(v22, v23, &v40);
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2381C6000, v18, v19, "run: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v21, -1, -1);
      MEMORY[0x23B82FE28](v20, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v34 = *(_xpc_activity_s **)(v7 + 16);
    if (xpc_activity_should_defer(v34))
    {
      xpc_activity_set_state(v34, 3);
    }
    else
    {
      xpc_activity_set_state(v34, 4);
      v35 = sub_2382387E0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = 0;
      v36[3] = 0;
      v36[4] = v2;
      v36[5] = v7;
      swift_retain();
      sub_2381CBA70((uint64_t)v6, (uint64_t)&unk_2568E9BA0, (uint64_t)v36);
    }
  }
  else if (state)
  {
    if (qword_2568EFB10 != -1)
      swift_once();
    v24 = sub_238238444();
    __swift_project_value_buffer(v24, (uint64_t)qword_2568EFB18);
    swift_retain_n();
    swift_retain_n();
    v38 = sub_23823842C();
    v25 = sub_23823887C();
    if (!os_log_type_enabled(v38, v25))
    {
      swift_release_n();
      swift_release_n();

      return;
    }
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v40 = v27;
    *(_DWORD *)v26 = 136315394;
    v28 = (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 120) + 32))();
    v39 = sub_2381CBC6C(v28, v29, &v40);
    sub_238238960();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v26 + 12) = 2048;
    v30 = xpc_activity_get_state(*(xpc_activity_t *)(v7 + 16));
    swift_release();
    v39 = v30;
    sub_238238960();
    swift_release();
    _os_log_impl(&dword_2381C6000, v38, v25, "activity: %s, encountered unrecognized XPC activity state: %ld", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v27, -1, -1);
    MEMORY[0x23B82FE28](v26, -1, -1);

  }
  else
  {
    if (qword_2568EFB10 != -1)
      swift_once();
    v10 = sub_238238444();
    __swift_project_value_buffer(v10, (uint64_t)qword_2568EFB18);
    swift_retain_n();
    v11 = sub_23823842C();
    v12 = sub_238238870();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      *(_DWORD *)v13 = 136315138;
      v40 = v14;
      v15 = (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 120) + 32))();
      v39 = sub_2381CBC6C(v15, v16, &v40);
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2381C6000, v11, v12, "checkin: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v14, -1, -1);
      MEMORY[0x23B82FE28](v13, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v31 = sub_238232888();
    if (v31)
    {
      v32 = (void *)v31;
      v33 = xpc_activity_copy_criteria(*(xpc_activity_t *)(v7 + 16));
      swift_unknownObjectRelease();
      if (!v33)
        xpc_activity_set_criteria(*(xpc_activity_t *)(v7 + 16), v32);
      swift_unknownObjectRelease();
    }
  }
  swift_release();
}

uint64_t sub_238233264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23823327C()
{
  uint64_t v0;

  sub_2382332AC(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2382332AC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21[2];
  uint64_t aBlock[6];

  v2 = v1;
  v4 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(v4 + 136))(v6) & 1) != 0)
  {
    xpc_activity_set_state(*(xpc_activity_t *)(a1 + 16), 5);
    if (qword_2568EFB10 != -1)
      swift_once();
    v9 = sub_238238444();
    __swift_project_value_buffer(v9, (uint64_t)qword_2568EFB18);
    swift_retain_n();
    v21[0] = (id)sub_23823842C();
    v10 = sub_23823887C();
    if (os_log_type_enabled((os_log_t)v21[0], v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315138;
      aBlock[0] = v12;
      v13 = (*(uint64_t (**)(void))(v1[15] + 32))();
      v21[1] = (id)sub_2381CBC6C(v13, v14, aBlock);
      sub_238238960();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2381C6000, (os_log_t)v21[0], v10, "disabled: skipping %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B82FE28](v12, -1, -1);
      MEMORY[0x23B82FE28](v11, -1, -1);
    }
    else
    {
      swift_release_n();
    }

  }
  else
  {
    aBlock[4] = (uint64_t)sub_238233B38;
    aBlock[5] = (uint64_t)v1;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_238232840;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v16 = xpc_activity_add_eligibility_changed_handler();
    _Block_release(v15);
    v17 = sub_2382387E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    v18 = sub_238233B40();
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v2;
    v19[3] = v18;
    v19[4] = v16;
    v19[5] = a1;
    v19[6] = v2;
    v19[7] = v4;
    swift_retain_n();
    swift_retain();
    v20 = sub_2381D1384((uint64_t)v8, (uint64_t)&unk_2568E9B78, (uint64_t)v19);
    (*(void (**)(uint64_t))(*v2 + 120))(v20);
  }
}

uint64_t sub_2382335C4(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E7890);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = xpc_activity_should_defer(a1);
  if ((_DWORD)result)
  {
    v8 = sub_2382387E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    swift_retain();
    sub_2381CBA70((uint64_t)v6, (uint64_t)&unk_2568E9B88, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_238233698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2382336B0()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 112))())
  {
    v1 = *(_QWORD *)(v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9B90);
    sub_2382387F8();
    (*(void (**)(_QWORD))(*(_QWORD *)v1 + 120))(0);
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238233738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return swift_task_switch();
}

uint64_t sub_238233754()
{
  _QWORD *v0;
  uint64_t result;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;

  result = swift_beginAccess();
  v2 = (int *)static XPCActivity.makeHandler;
  v0[11] = static XPCActivity.makeHandler;
  if (v2)
  {
    v3 = v0[10];
    v0[12] = qword_2568F01C0;
    v4 = *(_QWORD *)(v3 + 112);
    v5 = *(_QWORD *)(v3 + 120);
    v7 = (int *)((char *)v2 + *v2);
    swift_retain();
    v6 = (_QWORD *)swift_task_alloc();
    v0[13] = v6;
    *v6 = v0;
    v6[1] = sub_238233808;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v7)(v4, v5, v0[10]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_238233808(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = a2;
  v4 = v3[11];
  v3[14] = a1;
  swift_task_dealloc();
  sub_2381D96EC(v4);
  return swift_task_switch();
}

uint64_t sub_238233884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  sub_23823881C();
  v1 = *(_QWORD *)(v0 + 56);
  ObjectType = swift_getObjectType();
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_23823394C;
  return v5(ObjectType, v1);
}

uint64_t sub_23823394C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2382339A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  swift_unknownObjectRelease();
  sub_238233C28(v3, v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t XPCActivity.__allocating_init(handlerType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + 120) = a2;
  *(_QWORD *)(v4 + 128) = 0;
  *(_BYTE *)(v4 + 136) = 0;
  *(_QWORD *)(v4 + 112) = a1;
  return v4;
}

uint64_t XPCActivity.init(handlerType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 120) = a2;
  *(_QWORD *)(v2 + 128) = 0;
  *(_BYTE *)(v2 + 136) = 0;
  *(_QWORD *)(v2 + 112) = a1;
  return v2;
}

uint64_t XPCActivity.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCActivity.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t XPCActivity.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for XPCActivityHandle()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCActivity()
{
  return objc_opt_self();
}

uint64_t sub_238233B38(_xpc_activity_s *a1)
{
  uint64_t v1;

  return sub_2382335C4(a1, v1);
}

unint64_t sub_238233B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2568E9B70;
  if (!qword_2568E9B70)
  {
    v1 = type metadata accessor for XPCActivity();
    result = MEMORY[0x23B82FD68](&protocol conformance descriptor for XPCActivity, v1);
    atomic_store(result, (unint64_t *)&qword_2568E9B70);
  }
  return result;
}

uint64_t sub_238233B84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238233BB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2381CB914;
  v5[9] = v3;
  v5[10] = v4;
  v5[8] = v2;
  return swift_task_switch();
}

void sub_238233C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a1)
    xpc_activity_remove_eligibility_changed_handler();
  xpc_activity_set_state(*(xpc_activity_t *)(a2 + 16), 5);
  if (qword_2568EFB10 != -1)
    swift_once();
  v5 = sub_238238444();
  __swift_project_value_buffer(v5, (uint64_t)qword_2568EFB18);
  swift_retain_n();
  v6 = sub_23823842C();
  v7 = sub_238238894();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v12 = v9;
    v10 = (*(uint64_t (**)(void))(*(_QWORD *)(a3 + 120) + 32))();
    sub_2381CBC6C(v10, v11, &v12);
    sub_238238960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2381C6000, v6, v7, "done: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B82FE28](v9, -1, -1);
    MEMORY[0x23B82FE28](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_238233DE4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238233E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2381CCDE0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_238233E70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238233EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_2381CB914;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_238233F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

const char *MessageKeys.eventType.unsafeMutableAddressor()
{
  return "et";
}

uint64_t static MessageKeys.eventType.getter()
{
  return 29797;
}

void *MessageKeys.clientType.unsafeMutableAddressor()
{
  return &static MessageKeys.clientType;
}

uint64_t static MessageKeys.clientType.getter()
{
  return 29795;
}

void *MessageKeys.legacyClient.unsafeMutableAddressor()
{
  return &static MessageKeys.legacyClient;
}

uint64_t static MessageKeys.legacyClient.getter()
{
  return 31084;
}

void *MessageKeys.payload.unsafeMutableAddressor()
{
  return &static MessageKeys.payload;
}

uint64_t static MessageKeys.payload.getter()
{
  return 27760;
}

void *MessageKeys.sessionID.unsafeMutableAddressor()
{
  return &static MessageKeys.sessionID;
}

uint64_t static MessageKeys.sessionID.getter()
{
  return 25705;
}

const char *MessageKeys.hierarchyLevel.unsafeMutableAddressor()
{
  return "hlvl";
}

uint64_t static MessageKeys.hierarchyLevel.getter()
{
  return 1819700328;
}

const char *MessageKeys.hierarchyToken.unsafeMutableAddressor()
{
  return "hktn";
}

uint64_t static MessageKeys.hierarchyToken.getter()
{
  return 1853123432;
}

const char *MessageKeys.samplingUUID.unsafeMutableAddressor()
{
  return "suuid";
}

uint64_t static MessageKeys.samplingUUID.getter()
{
  return 0x6469757573;
}

void *MessageKeys.transportConfiguration.unsafeMutableAddressor()
{
  return &static MessageKeys.transportConfiguration;
}

uint64_t static MessageKeys.transportConfiguration.getter()
{
  return 25460;
}

const char *MessageKeys.allowed.unsafeMutableAddressor()
{
  return "allowed";
}

uint64_t static MessageKeys.allowed.getter()
{
  return 0x6465776F6C6C61;
}

const char *MessageKeys.denied.unsafeMutableAddressor()
{
  return "denied";
}

uint64_t static MessageKeys.denied.getter()
{
  return 0x6465696E6564;
}

const char *MessageKeys.overrideSampling.unsafeMutableAddressor()
{
  return "orsf";
}

uint64_t static MessageKeys.overrideSampling.getter()
{
  return 1718841967;
}

void *MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageSessionInfo;
}

uint64_t static MessageKeys.sendOneMessageSessionInfo.getter()
{
  return 7549299;
}

void *MessageKeys.sendOneMessageEvent.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageEvent;
}

uint64_t static MessageKeys.sendOneMessageEvent.getter()
{
  return 6631795;
}

void *MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsCellularAccess;
}

uint64_t static MessageKeys.tcAllowsCellularAccess.getter()
{
  return 97;
}

void *MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsExpensiveAccess;
}

uint64_t static MessageKeys.tcAllowsExpensiveAccess.getter()
{
  return 101;
}

void *MessageKeys.tcBundleID.unsafeMutableAddressor()
{
  return &static MessageKeys.tcBundleID;
}

uint64_t static MessageKeys.tcBundleID.getter()
{
  return 98;
}

ValueMetadata *type metadata accessor for MessageKeys()
{
  return &type metadata for MessageKeys;
}

uint64_t XPCError.description.getter(void *a1)
{
  if (xpc_dictionary_get_string(a1, "XPCErrorDescription"))
    return sub_2382386C0();
  else
    return 0x64696C61766E693CLL;
}

uint64_t XPCError.errorDescription.getter(void *a1)
{
  if (xpc_dictionary_get_string(a1, "XPCErrorDescription"))
    return sub_2382386C0();
  else
    return 0x64696C61766E693CLL;
}

uint64_t sub_2382341B4()
{
  void **v0;

  return XPCError.errorDescription.getter(*v0);
}

uint64_t sub_2382341BC()
{
  void **v0;

  return XPCError.description.getter(*v0);
}

uint64_t XPCIncomingConnection.auditToken.getter()
{
  xpc_connection_get_audit_token();
  return 0;
}

_BYTE *XPCIncomingConnection.entitlementValue(forKey:)@<X0>(uint64_t a1@<X8>)
{
  void *v2;

  sub_23823866C();
  v2 = (void *)xpc_connection_copy_entitlement_value();
  swift_release();
  return XPCObject.init(_:)(v2, a1);
}

_QWORD *XPCIncomingConnection.makeConnection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3, _xpc_connection_s *a4)
{
  id v8;
  _QWORD *v9;

  type metadata accessor for XPCConnection();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = a1;
  v9 = sub_238235A08(a4, v8, a2, a3);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v9;
}

_QWORD *XPCConnection.__allocating_init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  swift_allocObject();
  v8 = sub_238235A08(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v8;
}

uint64_t type metadata accessor for XPCConnection()
{
  return objc_opt_self();
}

uint64_t variable initialization expression of XPCConnection.conn()
{
  return 0;
}

uint64_t XPCConnection.conn.getter()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t XPCConnection.conn.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*XPCConnection.conn.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t variable initialization expression of XPCConnection.delegate()
{
  return 0;
}

uint64_t XPCConnection.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B82FEF4](v0 + 24);
}

uint64_t XPCConnection.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*XPCConnection.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B82FEF4](v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  return sub_238234584;
}

void sub_238234584(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id XPCConnection.targetQ.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

uint64_t sub_2382345FC()
{
  uint64_t v0;

  v0 = sub_238238444();
  __swift_allocate_value_buffer(v0, qword_2568EFBB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2568EFBB8);
  return sub_238238438();
}

uint64_t XPCConnection.__allocating_init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  XPCConnection.init(targetQ:delegate:)(a1, a2, a3);
  return v6;
}

_QWORD *XPCConnection.init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _xpc_connection_s *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  _QWORD v16[6];

  v4 = v3;
  v4[2] = 0;
  v4[4] = 0;
  swift_unknownObjectWeakInit();
  v7 = xpc_connection_create(0, a1);
  swift_beginAccess();
  v4[4] = a3;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v4[2] = v7;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4[5] = a1;
  v8 = qword_2568EFBB0;
  v9 = a1;
  if (v8 != -1)
    swift_once();
  v10 = sub_238238444();
  __swift_project_value_buffer(v10, (uint64_t)qword_2568EFBB8);
  v11 = sub_23823842C();
  v12 = sub_238238894();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_2381C6000, v11, v12, "A.", v13, 2u);
    MEMORY[0x23B82FE28](v13, -1, -1);
  }

  xpc_connection_set_target_queue(v7, v9);
  v16[4] = sub_238235BFC;
  v16[5] = v4;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_238232840;
  v16[3] = &block_descriptor_8;
  v14 = _Block_copy(v16);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v7, v14);
  _Block_release(v14);
  xpc_connection_activate(v7);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v4;
}

uint64_t XPCConnection.eventHandler(obj:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  swift_beginAccess();
  result = MEMORY[0x23B82FEF4](v1 + 24);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 32);
    v5 = MEMORY[0x23B83014C](a1);
    v6 = XPCTypeError.getter();
    ObjectType = swift_getObjectType();
    v8 = 16;
    if (v5 == v6)
      v8 = 8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + v8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t XPCConnection.__allocating_init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  XPCConnection.init(machService:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t XPCConnection.init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v6;
  uint64_t v7;
  _xpc_connection_s **v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  _xpc_connection_s *mach_service;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  _QWORD v24[6];

  v7 = v6;
  *(_QWORD *)(v6 + 16) = 0;
  v11 = (_xpc_connection_s **)(v6 + 16);
  v11[2] = 0;
  swift_unknownObjectWeakInit();
  if ((a4 & 1) != 0)
    v12 = 1;
  else
    v12 = 2;
  v13 = sub_23823866C();
  v14 = a3;
  swift_bridgeObjectRelease();
  mach_service = xpc_connection_create_mach_service((const char *)(v13 + 32), v14, v12);

  swift_release();
  swift_beginAccess();
  v11[2] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *v11 = mach_service;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v11[3] = (_xpc_connection_s *)v14;
  v16 = qword_2568EFBB0;
  v17 = v14;
  if (v16 != -1)
    swift_once();
  v18 = sub_238238444();
  __swift_project_value_buffer(v18, (uint64_t)qword_2568EFBB8);
  v19 = sub_23823842C();
  v20 = sub_238238894();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2381C6000, v19, v20, "B.", v21, 2u);
    MEMORY[0x23B82FE28](v21, -1, -1);
  }

  xpc_connection_set_target_queue(mach_service, v17);
  v24[4] = sub_238235BFC;
  v24[5] = v7;
  v24[0] = MEMORY[0x24BDAC760];
  v24[1] = 1107296256;
  v24[2] = sub_238232840;
  v24[3] = &block_descriptor_3_0;
  v22 = _Block_copy(v24);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(mach_service, v22);
  _Block_release(v22);
  xpc_connection_activate(mach_service);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v7;
}

uint64_t XPCConnection.__allocating_init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  XPCConnection.init(serviceName:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

void XPCConnection.init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  xpc_connection_t *v11;
  uint64_t v12;
  NSObject *v13;
  xpc_connection_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _xpc_connection_s *v21;
  void *v22;
  _xpc_connection_s *v23;
  _QWORD v24[6];

  v7 = v6;
  v7[2] = 0;
  v11 = (xpc_connection_t *)(v7 + 2);
  v7[4] = 0;
  swift_unknownObjectWeakInit();
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v7[4] = a6;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v7[2] = 0;
    swift_unknownObjectRelease();
    v7[5] = a3;
    return;
  }
  v12 = sub_23823866C();
  v13 = a3;
  swift_bridgeObjectRelease();
  v14 = xpc_connection_create((const char *)(v12 + 32), v13);

  swift_release();
  swift_beginAccess();
  v7[4] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v7[2] = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v7[5] = v13;
  v15 = qword_2568EFBB0;
  v16 = v13;
  if (v15 != -1)
    swift_once();
  v17 = sub_238238444();
  __swift_project_value_buffer(v17, (uint64_t)qword_2568EFBB8);
  v18 = sub_23823842C();
  v19 = sub_238238894();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_2381C6000, v18, v19, "C.", v20, 2u);
    MEMORY[0x23B82FE28](v20, -1, -1);
  }

  if (!*v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  xpc_connection_set_target_queue(*v11, v16);
  v21 = *v11;
  if (!*v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v24[4] = sub_238235BFC;
  v24[5] = v7;
  v24[0] = MEMORY[0x24BDAC760];
  v24[1] = 1107296256;
  v24[2] = sub_238232840;
  v24[3] = &block_descriptor_6;
  v22 = _Block_copy(v24);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  xpc_connection_set_event_handler(v21, v22);
  _Block_release(v22);
  swift_unknownObjectRelease();
  if (v7[2])
  {
    v23 = (_xpc_connection_s *)swift_unknownObjectRetain();
    xpc_connection_activate(v23);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
LABEL_13:
  __break(1u);
}

_QWORD *XPCConnection.init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;

  v5 = sub_238235A08(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t XPCConnection.__allocating_init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  XPCConnection.init(listener:targetQ:delegate:)(a1, a2, a3, a4);
  return v8;
}

_xpc_connection_s *XPCConnection.init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _xpc_connection_s *result;
  _xpc_endpoint_s *v10;
  _xpc_connection_s *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  _QWORD aBlock[6];

  v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  result = *(_xpc_connection_s **)(a1 + 16);
  if (result)
  {
    v10 = xpc_endpoint_create(result);
    v11 = xpc_connection_create_from_endpoint(v10);
    swift_beginAccess();
    v5[2] = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v5[4] = a4;
    swift_unknownObjectWeakAssign();
    v5[5] = a2;
    v12 = qword_2568EFBB0;
    v13 = a2;
    if (v12 != -1)
      swift_once();
    v14 = sub_238238444();
    __swift_project_value_buffer(v14, (uint64_t)qword_2568EFBB8);
    v15 = sub_23823842C();
    v16 = sub_238238894();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_2381C6000, v15, v16, "E.", v17, 2u);
      MEMORY[0x23B82FE28](v17, -1, -1);
    }

    xpc_connection_set_target_queue(v11, v13);
    aBlock[4] = sub_238235BFC;
    aBlock[5] = v5;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_238232840;
    aBlock[3] = &block_descriptor_9;
    v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_set_event_handler(v11, v18);
    _Block_release(v18);
    xpc_connection_activate(v11);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    return (_xpc_connection_s *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_xpc_connection_s *XPCConnection.endpoint()()
{
  uint64_t v0;
  _xpc_connection_s *result;

  swift_beginAccess();
  result = *(_xpc_connection_s **)(v0 + 16);
  if (result)
    return xpc_endpoint_create(result);
  __break(1u);
  return result;
}

uint64_t XPCConnection.send(_:)()
{
  uint64_t v0;
  uint64_t result;
  _xpc_connection_s *v2;
  void *v3;

  result = swift_beginAccess();
  v2 = *(_xpc_connection_s **)(v0 + 16);
  if (v2)
  {
    swift_unknownObjectRetain();
    v3 = (void *)j__swift_unknownObjectRetain();
    xpc_connection_send_message(v2, v3);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t XPCConnection.sendWithReply(_:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 96) = a2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v2;
  return swift_task_switch();
}

uint64_t sub_2382353B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 56);
  result = swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 64) = v3;
  if (v3)
  {
    v4 = *(_BYTE *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 40);
    v7 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v7;
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v5;
    *(_BYTE *)(v7 + 32) = v4;
    *(_QWORD *)(v7 + 40) = v6;
    swift_unknownObjectRetain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v8;
    *v8 = v0;
    v8[1] = sub_2382354A8;
    return sub_238238C78();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2382354A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238235514()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23823554C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238235588(uint64_t a1, _xpc_connection_s *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E9CA0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (void *)j__swift_unknownObjectRetain();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_238235D14;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_238232840;
  aBlock[3] = &block_descriptor_14;
  v13 = _Block_copy(aBlock);
  swift_release();
  xpc_connection_send_message_with_reply(a2, v10, a4, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

Swift::Bool __swiftcall OS_xpc_object.isError()()
{
  uint64_t v0;

  v0 = MEMORY[0x23B83014C]();
  return v0 == XPCTypeError.getter();
}

uint64_t XPCConnection.auditToken.getter()
{
  uint64_t v0;

  swift_beginAccess();
  if (!*(_QWORD *)(v0 + 16))
    __break(1u);
  xpc_connection_get_audit_token();
  return 0;
}

_xpc_connection_s *XPCConnection.remoteUID.getter()
{
  uint64_t v0;
  _xpc_connection_s *result;

  swift_beginAccess();
  result = *(_xpc_connection_s **)(v0 + 16);
  if (result)
    return (_xpc_connection_s *)xpc_connection_get_euid(result);
  __break(1u);
  return result;
}

uint64_t XPCConnection.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _xpc_connection_s *v6;

  v1 = v0;
  if (qword_2568EFBB0 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EFBB8);
  v3 = sub_23823842C();
  v4 = sub_23823887C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2381C6000, v3, v4, "connection released", v5, 2u);
    MEMORY[0x23B82FE28](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6)
    xpc_connection_cancel(v6);
  swift_unknownObjectRelease();
  sub_238235C24(v1 + 24);

  return v1;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _xpc_connection_s *v6;

  v1 = v0;
  if (qword_2568EFBB0 != -1)
    swift_once();
  v2 = sub_238238444();
  __swift_project_value_buffer(v2, (uint64_t)qword_2568EFBB8);
  v3 = sub_23823842C();
  v4 = sub_23823887C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2381C6000, v3, v4, "connection released", v5, 2u);
    MEMORY[0x23B82FE28](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6)
    xpc_connection_cancel(v6);
  swift_unknownObjectRelease();
  sub_238235C24(v1 + 24);

  return swift_deallocClassInstance();
}

Swift::OpaquePointer __swiftcall OS_xpc_object.type()()
{
  JUMPOUT(0x23B83014CLL);
}

_QWORD *sub_238235A08(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  _QWORD v17[6];

  v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v5[2] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_beginAccess();
  v5[4] = a4;
  swift_unknownObjectWeakAssign();
  v5[5] = a2;
  v9 = qword_2568EFBB0;
  v10 = a2;
  if (v9 != -1)
    swift_once();
  v11 = sub_238238444();
  __swift_project_value_buffer(v11, (uint64_t)qword_2568EFBB8);
  v12 = sub_23823842C();
  v13 = sub_238238894();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_2381C6000, v12, v13, "D.", v14, 2u);
    MEMORY[0x23B82FE28](v14, -1, -1);
  }

  xpc_connection_set_target_queue(a1, v10);
  v17[4] = sub_238235BFC;
  v17[5] = v5;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_238232840;
  v17[3] = &block_descriptor_17;
  v15 = _Block_copy(v17);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(a1, v15);
  _Block_release(v15);
  xpc_connection_activate(a1);
  return v5;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_238235C18(uint64_t a1)
{
  uint64_t v1;

  return sub_238235588(a1, *(_xpc_connection_s **)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 40));
}

uint64_t sub_238235C24(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_238235C4C()
{
  unint64_t result;

  result = qword_2568E9BC8;
  if (!qword_2568E9BC8)
  {
    result = MEMORY[0x23B82FD68](&protocol conformance descriptor for XPCError, &type metadata for XPCError);
    atomic_store(result, (unint64_t *)&qword_2568E9BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

ValueMetadata *type metadata accessor for XPCIncomingConnection()
{
  return &type metadata for XPCIncomingConnection;
}

uint64_t sub_238235CB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E9CA0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_238235D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E9CA0);
  v2 = MEMORY[0x23B83014C](a1);
  if (v2 == XPCTypeError.getter())
  {
    sub_238235C4C();
    swift_allocError();
    *v5 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E9CA0);
    return sub_2382387B0();
  }
  else
  {
    v3 = swift_unknownObjectRetain();
    XPCDictionary.init(_:)(v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E9CA0);
    return sub_2382387BC();
  }
}

uint64_t sub_238235DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  swift_beginAccess();
  result = MEMORY[0x23B82FEF4](v1 + 24);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 32);
    v5 = MEMORY[0x23B83014C](a1);
    v6 = XPCTypeError.getter();
    ObjectType = swift_getObjectType();
    v8 = 16;
    if (v5 == v6)
      v8 = 8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + v8))(a1, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t getTimeIntervalSince1970(Date:)()
{
  uint64_t result;
  double v1;

  result = sub_2382382D0();
  if (v1 < 0.0 || (*(_QWORD *)&v1 & 0x7FF0000000000000) == 0x7FF0000000000000)
    return 0;
  if (v1 <= -9.22337204e18)
  {
    __break(1u);
  }
  else if (v1 < 9.22337204e18)
  {
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

const char *PostInstallActivityConfig.identifier.unsafeMutableAddressor()
{
  return "postinstall";
}

uint64_t static PostInstallActivityConfig.identifier.getter()
{
  return 0x74736E6974736F70;
}

uint64_t sub_238235F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _BYTE *v9;
  _QWORD *v10;
  _BYTE *v11;
  unint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9890);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9898);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23823C420;
  v5 = (_QWORD *)(v4 + v3);
  v6 = (_QWORD *)((char *)v5 + *(int *)(v0 + 48));
  *v5 = *MEMORY[0x24BDAC698];
  *v6 = sub_2382386C0();
  v6[1] = v7;
  type metadata accessor for XPCObject();
  result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x24BDAC688])
  {
    v9 = (char *)v5 + v2 + *(int *)(v0 + 48);
    *(_QWORD *)((char *)v5 + v2) = *MEMORY[0x24BDAC688];
    *v9 = 1;
    result = swift_storeEnumTagMultiPayload();
    if (*MEMORY[0x24BDAC680])
    {
      v10 = (_QWORD *)((char *)v5 + 2 * v2);
      v11 = (char *)v10 + *(int *)(v0 + 48);
      *v10 = *MEMORY[0x24BDAC680];
      *v11 = 1;
      swift_storeEnumTagMultiPayload();
      v12 = sub_238230144(v4);
      swift_setDeallocating();
      swift_arrayDestroy();
      result = swift_deallocClassInstance();
      static PostInstallActivityConfig.activityFlags = v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *PostInstallActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_2568EFD50 != -1)
    swift_once();
  return &static PostInstallActivityConfig.activityFlags;
}

uint64_t static PostInstallActivityConfig.activityFlags.getter()
{
  if (qword_2568EFD50 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PostInstallActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_2568EFD50 != -1)
    swift_once();
  swift_beginAccess();
  static PostInstallActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PostInstallActivityConfig.activityFlags.modify())()
{
  if (qword_2568EFD50 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_238236258()
{
  if (qword_2568EFD50 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2382362C4()
{
  return 0x74736E6974736F70;
}

ValueMetadata *type metadata accessor for PostInstallActivityConfig()
{
  return &type metadata for PostInstallActivityConfig;
}

const char *CacheCleanupActivityConfig.identifier.unsafeMutableAddressor()
{
  return "db-cleanup";
}

uint64_t static CacheCleanupActivityConfig.identifier.getter()
{
  return 0x6E61656C632D6264;
}

uint64_t sub_23823631C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;
  uint64_t result;
  _QWORD *v16;
  _BYTE *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _BYTE *v27;
  unint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9890);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9898);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23823D5F0;
  v5 = (_QWORD *)(v4 + v3);
  v6 = (char *)v5 + *(int *)(v0 + 48);
  *v5 = *MEMORY[0x24BDAC6B8];
  *v6 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  v7 = (_QWORD *)((char *)v5 + v2 + *(int *)(v0 + 48));
  *(_QWORD *)((char *)v5 + v2) = *MEMORY[0x24BDAC5B8];
  *v7 = 86400;
  swift_storeEnumTagMultiPayload();
  v8 = (_QWORD *)((char *)v5 + 2 * v2);
  v9 = (_QWORD *)((char *)v8 + *(int *)(v0 + 48));
  *v8 = *MEMORY[0x24BDAC5D8];
  *v9 = 43200;
  swift_storeEnumTagMultiPayload();
  v10 = (_QWORD *)((char *)v5 + 3 * v2);
  v11 = (_QWORD *)((char *)v10 + *(int *)(v0 + 48));
  *v10 = *MEMORY[0x24BDAC698];
  *v11 = sub_2382386C0();
  v11[1] = v12;
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)((char *)v5 + 4 * v2);
  v14 = (char *)v13 + *(int *)(v0 + 48);
  *v13 = *MEMORY[0x24BDAC598];
  *v14 = 0;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC688])
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = (_QWORD *)((char *)v5 + 5 * v2);
  v17 = (char *)v16 + *(int *)(v0 + 48);
  *v16 = *MEMORY[0x24BDAC688];
  *v17 = 1;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC6B0])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = (_QWORD *)((char *)v5 + 6 * v2);
  v19 = (_QWORD *)((char *)v18 + *(int *)(v0 + 48));
  *v18 = *MEMORY[0x24BDAC6B0];
  *v19 = 43200;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC5D0])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = (_QWORD *)((char *)&v5[v2] - v2);
  v21 = (_QWORD *)((char *)v20 + *(int *)(v0 + 48));
  *v20 = *MEMORY[0x24BDAC5D0];
  *v21 = *MEMORY[0x24BDAC610];
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC5E8])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = &v5[v2];
  v23 = (_QWORD *)((char *)v22 + *(int *)(v0 + 48));
  *v22 = *MEMORY[0x24BDAC5E8];
  *v23 = 0xD000000000000025;
  v23[1] = 0x8000000238240590;
  result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x24BDAC5E0])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v24 = (_QWORD *)((char *)v5 + 9 * v2);
  v25 = (_QWORD *)((char *)v24 + *(int *)(v0 + 48));
  *v24 = *MEMORY[0x24BDAC5E0];
  *v25 = 1;
  result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x24BDAC5C0])
  {
    v26 = (_QWORD *)((char *)v5 + 10 * v2);
    v27 = (char *)v26 + *(int *)(v0 + 48);
    *v26 = *MEMORY[0x24BDAC5C0];
    *v27 = 1;
    swift_storeEnumTagMultiPayload();
    v28 = sub_238230144(v4);
    swift_setDeallocating();
    swift_arrayDestroy();
    result = swift_deallocClassInstance();
    static CacheCleanupActivityConfig.activityFlags = v28;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t *CacheCleanupActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_2568EFD58 != -1)
    swift_once();
  return &static CacheCleanupActivityConfig.activityFlags;
}

uint64_t static CacheCleanupActivityConfig.activityFlags.getter()
{
  if (qword_2568EFD58 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static CacheCleanupActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_2568EFD58 != -1)
    swift_once();
  swift_beginAccess();
  static CacheCleanupActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CacheCleanupActivityConfig.activityFlags.modify())()
{
  if (qword_2568EFD58 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2382367FC()
{
  if (qword_2568EFD58 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_238236868()
{
  return 0x6E61656C632D6264;
}

ValueMetadata *type metadata accessor for CacheCleanupActivityConfig()
{
  return &type metadata for CacheCleanupActivityConfig;
}

uint64_t XPCMessage.MessageType.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_2382368A0()
{
  sub_238238CE4();
  sub_238238CFC();
  return sub_238238D08();
}

uint64_t sub_2382368E4()
{
  return sub_238238CFC();
}

uint64_t sub_23823690C()
{
  sub_238238CE4();
  sub_238238CFC();
  return sub_238238D08();
}

unint64_t sub_23823694C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_238236974(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t XPCMessage.ty.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t XPCMessage.init(ty:payload:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  xpc_object_t v7;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2;
  swift_unknownObjectRetain();
  v7 = xpc_int64_create(a1);
  XPCObject.init(_:)(v7, (uint64_t)v6);
  XPCDictionary.subscript.setter((uint64_t)v6);
  swift_unknownObjectRelease();
  return v10;
}

void XPCMessage.init(fromXPC:)()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v0);
  swift_getObjectType();
  OS_xpc_object.type()();
}

void *sub_238236A98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (a1 != XPCTypeDictionary.getter())
    goto LABEL_2;
  v2 = swift_unknownObjectRetain();
  v3 = (void *)XPCDictionary.init(_:)(v2);
  XPCDictionary.subscript.getter(v3, (uint64_t)v1);
  swift_unknownObjectRelease();
  v4 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v1, 1, v4) == 1)
  {
    swift_unknownObjectRelease();
    sub_238237450((uint64_t)v1);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_unknownObjectRelease();
    sub_238215CF8((uint64_t)v1);
    return 0;
  }
  if (*v1 >= 4uLL)
  {
LABEL_2:
    swift_unknownObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t XPCMessage.description.getter(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[2];
  char *v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;

  v38 = type metadata accessor for XPCObject();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = 0;
  v41 = 0xE000000000000000;
  LOBYTE(v39) = a2;
  sub_238238AC8();
  sub_2382386B4();
  v37 = a1;
  v10 = XPCDictionary.keys.getter(a1);
  v11 = *(_QWORD *)(v10 + 16);
  v35[1] = v10;
  if (v11)
  {
    v12 = (uint64_t *)(v10 + 40);
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
    v36 = v9;
    while (1)
    {
      v16 = *(v12 - 1);
      v15 = *v12;
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v37, (uint64_t)v9);
      v17 = v4;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v38) == 1)
        break;
      v18 = (uint64_t)v9;
      v19 = (uint64_t)v6;
      sub_238215C70(v18, (uint64_t)v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v13;
      v22 = sub_2381CC2AC(v16, v15);
      v23 = v13[2];
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_17:
        __break(1u);
        break;
      }
      v26 = v21;
      if (v13[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_238237214();
      }
      else
      {
        sub_238236EAC(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_2381CC2AC(v16, v15);
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_19;
        v22 = v27;
      }
      v4 = v17;
      v13 = v39;
      if ((v26 & 1) != 0)
      {
        v14 = v39[7] + *(_QWORD *)(v17 + 72) * v22;
        v6 = (char *)v19;
        sub_238237490(v19, v14);
      }
      else
      {
        v39[(v22 >> 6) + 8] |= 1 << v22;
        v29 = (uint64_t *)(v13[6] + 16 * v22);
        *v29 = v16;
        v29[1] = v15;
        v30 = v13[7] + *(_QWORD *)(v17 + 72) * v22;
        v6 = (char *)v19;
        sub_238215C70(v19, v30);
        v31 = v13[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_17;
        v13[2] = v33;
        swift_bridgeObjectRetain();
      }
      v12 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v11;
      v9 = v36;
      if (!v11)
        goto LABEL_15;
    }
    __break(1u);
LABEL_19:
    result = sub_238238C90();
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_238238594();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    swift_bridgeObjectRelease();
    sub_2382386B4();
    return v40;
  }
  return result;
}

uint64_t sub_238236EA0()
{
  uint64_t v0;

  return XPCMessage.description.getter(*(void **)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_238236EAC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for XPCObject();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9CB8);
  v43 = a2;
  v9 = sub_238238B04();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_238215C70(v30, (uint64_t)v7);
    }
    else
    {
      sub_238215CB4(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_238238CE4();
    sub_238238684();
    result = sub_238238D08();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_238215C70((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

void *sub_238237214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for XPCObject();
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568E9CB8);
  v5 = *v0;
  v6 = sub_238238AF8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_238215CB4(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_238215C70((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_238237450(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2568E7AC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238237490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2382374D8()
{
  unint64_t result;

  result = qword_2568E9CB0;
  if (!qword_2568E9CB0)
  {
    result = MEMORY[0x23B82FD68](&protocol conformance descriptor for XPCMessage.MessageType, &type metadata for XPCMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_2568E9CB0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for XPCMessage()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCMessage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage()
{
  return &type metadata for XPCMessage;
}

uint64_t storeEnumTagSinglePayload for XPCMessage.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2382376C4 + 4 * byte_23823D645[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2382376F8 + 4 * asc_23823D640[v4]))();
}

uint64_t sub_2382376F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238237700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238237708);
  return result;
}

uint64_t sub_238237714(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23823771CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_238237720(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238237728(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage.MessageType()
{
  return &type metadata for XPCMessage.MessageType;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_2568EFF78 == -1)
  {
    if (qword_2568EFF80)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_2568EFF78, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_2568EFF80)
      return _availability_version_check();
  }
  if (qword_2568EFF70 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_2568EFF70, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_2568EFF64 > a3)
    return 1;
  return dword_2568EFF64 >= a3 && dword_2568EFF68 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t (*)(void))qword_2568EFF80;
  if (qword_2568EFF80)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x24BDAC970])
    {
      qword_2568EFF80 = (uint64_t)MEMORY[0x24BDAC970];
      v1 = MEMORY[0x24BDAC970];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x23B82F858](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_2568EFF64, &dword_2568EFF68);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void __getCKOperationConfigurationClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "Class getCKOperationConfigurationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CKSoftLinkAssetFetch.m"), 11, CFSTR("Unable to find class %s"), "CKOperationConfiguration");

  __break(1u);
}

void CloudKitLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "void *CloudKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("CKSoftLinkAssetFetch.m"), 9, CFSTR("%s"), *a1);

  __break(1u);
}

void __getCKContainerClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "Class getCKContainerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CKSoftLinkAssetFetch.m"), 10, CFSTR("Unable to find class %s"), "CKContainer");

  __break(1u);
}

void __getCKRecordZoneIDClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "Class getCKRecordZoneIDClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CKSoftLinkAssetFetch.m"), 13, CFSTR("Unable to find class %s"), "CKRecordZoneID");

  __break(1u);
}

void __getCKRecordIDClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "Class getCKRecordIDClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CKSoftLinkAssetFetch.m"), 14, CFSTR("Unable to find class %s"), "CKRecordID");

  __break(1u);
}

void __getCKFetchRecordsOperationClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1448], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", "Class getCKFetchRecordsOperationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CKSoftLinkAssetFetch.m"), 15, CFSTR("Unable to find class %s"), "CKFetchRecordsOperation");

  __break(1u);
  sub_238237F58();
}

uint64_t sub_238237F58()
{
  return MEMORY[0x24BDCADA0]();
}

uint64_t sub_238237F64()
{
  return MEMORY[0x24BDCADA8]();
}

uint64_t sub_238237F70()
{
  return MEMORY[0x24BDCADD0]();
}

uint64_t sub_238237F7C()
{
  return MEMORY[0x24BDCADF0]();
}

uint64_t sub_238237F88()
{
  return MEMORY[0x24BDCAE08]();
}

uint64_t sub_238237F94()
{
  return MEMORY[0x24BDCAEB0]();
}

uint64_t sub_238237FA0()
{
  return MEMORY[0x24BDCAEE8]();
}

uint64_t sub_238237FAC()
{
  return MEMORY[0x24BDCAFF8]();
}

uint64_t sub_238237FB8()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_238237FC4()
{
  return MEMORY[0x24BDCB0A0]();
}

uint64_t sub_238237FD0()
{
  return MEMORY[0x24BDCB0A8]();
}

uint64_t sub_238237FDC()
{
  return MEMORY[0x24BDCB0B0]();
}

uint64_t sub_238237FE8()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_238237FF4()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_238238000()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_23823800C()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_238238018()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_238238024()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_238238030()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23823803C()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_238238048()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_238238054()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_238238060()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23823806C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_238238078()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_238238084()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_238238090()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23823809C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_2382380A8()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_2382380B4()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_2382380C0()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_2382380CC()
{
  return MEMORY[0x24BDCC710]();
}

uint64_t sub_2382380D8()
{
  return MEMORY[0x24BDCC720]();
}

uint64_t sub_2382380E4()
{
  return MEMORY[0x24BDCC7A0]();
}

uint64_t sub_2382380F0()
{
  return MEMORY[0x24BDCC7C0]();
}

uint64_t sub_2382380FC()
{
  return MEMORY[0x24BDCC7E8]();
}

uint64_t sub_238238108()
{
  return MEMORY[0x24BDCC808]();
}

uint64_t sub_238238114()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_238238120()
{
  return MEMORY[0x24BDCCA18]();
}

uint64_t sub_23823812C()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_238238138()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_238238144()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_238238150()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23823815C()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_238238168()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_238238174()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_238238180()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_23823818C()
{
  return MEMORY[0x24BDCD8A0]();
}

uint64_t sub_238238198()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2382381A4()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_2382381B0()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_2382381BC()
{
  return MEMORY[0x24BDCD958]();
}

uint64_t sub_2382381C8()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_2382381D4()
{
  return MEMORY[0x24BDCD9D0]();
}

uint64_t sub_2382381E0()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_2382381EC()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_2382381F8()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_238238204()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_238238210()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23823821C()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_238238228()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_238238234()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_238238240()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23823824C()
{
  return MEMORY[0x24BDCDC38]();
}

uint64_t sub_238238258()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_238238264()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_238238270()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23823827C()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_238238288()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_238238294()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_2382382A0()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_2382382AC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2382382B8()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_2382382C4()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_2382382D0()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_2382382DC()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_2382382E8()
{
  return MEMORY[0x24BDCE8A8]();
}

uint64_t sub_2382382F4()
{
  return MEMORY[0x24BDCE8B0]();
}

uint64_t sub_238238300()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23823830C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_238238318()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_238238324()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_238238330()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23823833C()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_238238348()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_238238354()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_238238360()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23823836C()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_238238378()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_238238384()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_238238390()
{
  return MEMORY[0x24BDCEE18]();
}

uint64_t sub_23823839C()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_2382383A8()
{
  return MEMORY[0x24BDCEE60]();
}

uint64_t sub_2382383B4()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2382383C0()
{
  return MEMORY[0x24BDCF4B8]();
}

uint64_t sub_2382383CC()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_2382383D8()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_2382383E4()
{
  return MEMORY[0x24BDCF5C8]();
}

uint64_t sub_2382383F0()
{
  return MEMORY[0x24BDCF5D8]();
}

uint64_t sub_2382383FC()
{
  return MEMORY[0x24BDCF610]();
}

uint64_t sub_238238408()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_238238414()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_238238420()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_23823842C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_238238438()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_238238444()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_238238450()
{
  return MEMORY[0x24BEE64C8]();
}

uint64_t sub_23823845C()
{
  return MEMORY[0x24BEE64D8]();
}

uint64_t sub_238238468()
{
  return MEMORY[0x24BDE00C8]();
}

uint64_t sub_238238474()
{
  return MEMORY[0x24BDE0408]();
}

uint64_t sub_238238480()
{
  return MEMORY[0x24BDE0420]();
}

uint64_t sub_23823848C()
{
  return MEMORY[0x24BDE0428]();
}

uint64_t sub_238238498()
{
  return MEMORY[0x24BDE0440]();
}

uint64_t sub_2382384A4()
{
  return MEMORY[0x24BDE05D0]();
}

uint64_t sub_2382384B0()
{
  return MEMORY[0x24BDE05F0]();
}

uint64_t sub_2382384BC()
{
  return MEMORY[0x24BDE0630]();
}

uint64_t sub_2382384C8()
{
  return MEMORY[0x24BDE0640]();
}

uint64_t sub_2382384D4()
{
  return MEMORY[0x24BDE0650]();
}

uint64_t sub_2382384E0()
{
  return MEMORY[0x24BDE0660]();
}

uint64_t sub_2382384EC()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2382384F8()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_238238504()
{
  return MEMORY[0x24BEE54C0]();
}

uint64_t sub_238238510()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23823851C()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_238238528()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_238238534()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_238238540()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23823854C()
{
  return MEMORY[0x24BDC62E0]();
}

uint64_t sub_238238558()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_238238564()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_238238570()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23823857C()
{
  return MEMORY[0x24BDCF818]();
}

uint64_t sub_238238588()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_238238594()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2382385A0()
{
  return MEMORY[0x24BEE0290]();
}

uint64_t sub_2382385AC()
{
  return MEMORY[0x24BEE0298]();
}

uint64_t sub_2382385B8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2382385C4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2382385D0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2382385DC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2382385E8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2382385F4()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_238238600()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23823860C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_238238618()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_238238624()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_238238630()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23823863C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_238238648()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_238238654()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_238238660()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23823866C()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_238238678()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_238238684()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_238238690()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23823869C()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_2382386A8()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_2382386B4()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2382386C0()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_2382386CC()
{
  return MEMORY[0x24BEE0BF0]();
}

uint64_t sub_2382386D8()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_2382386E4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2382386F0()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_2382386FC()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_238238708()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_238238714()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_238238720()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23823872C()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_238238738()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_238238744()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_238238750()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23823875C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_238238768()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_238238774()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_238238780()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23823878C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_238238798()
{
  return MEMORY[0x24BEE1280]();
}

uint64_t sub_2382387A4()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2382387B0()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2382387BC()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2382387C8()
{
  return MEMORY[0x24BEE6868]();
}

uint64_t sub_2382387D4()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2382387E0()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2382387EC()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_2382387F8()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_238238804()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_238238810()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23823881C()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_238238828()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_238238834()
{
  return MEMORY[0x24BEE1478]();
}

uint64_t sub_238238840()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23823884C()
{
  return MEMORY[0x24BDCFE60]();
}

uint64_t sub_238238858()
{
  return MEMORY[0x24BDCFE78]();
}

uint64_t sub_238238864()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_238238870()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23823887C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_238238888()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_238238894()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2382388A0()
{
  return MEMORY[0x24BE0FFC0]();
}

uint64_t sub_2382388AC()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2382388B8()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2382388C4()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2382388D0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2382388DC()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_2382388E8()
{
  return MEMORY[0x24BEE5800]();
}

uint64_t sub_2382388F4()
{
  return MEMORY[0x24BEE5808]();
}

uint64_t sub_238238900()
{
  return MEMORY[0x24BEE5810]();
}

uint64_t sub_23823890C()
{
  return MEMORY[0x24BEE58A8]();
}

uint64_t sub_238238918()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_238238924()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_238238930()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_23823893C()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_238238948()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_238238954()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_238238960()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23823896C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_238238978()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_238238984()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_238238990()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23823899C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2382389A8()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_2382389B4()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2382389C0()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_2382389CC()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_2382389D8()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_2382389E4()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_2382389F0()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2382389FC()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_238238A08()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_238238A14()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_238238A20()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_238238A2C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_238238A38()
{
  return MEMORY[0x24BEE2578]();
}

uint64_t sub_238238A44()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_238238A50()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_238238A5C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_238238A68()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_238238A74()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_238238A80()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_238238A8C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_238238A98()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_238238AA4()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_238238AB0()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_238238ABC()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_238238AC8()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_238238AD4()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_238238AE0()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_238238AEC()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_238238AF8()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_238238B04()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_238238B10()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_238238B1C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_238238B28()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_238238B34()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_238238B40()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_238238B4C()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_238238B58()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_238238B64()
{
  return MEMORY[0x24BEE3320]();
}

uint64_t sub_238238B70()
{
  return MEMORY[0x24BEE3328]();
}

uint64_t sub_238238B7C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_238238B88()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_238238B94()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_238238BA0()
{
  return MEMORY[0x24BEE3388]();
}

uint64_t sub_238238BAC()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_238238BB8()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_238238BC4()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_238238BD0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_238238BDC()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_238238BE8()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_238238BF4()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_238238C00()
{
  return MEMORY[0x24BEE3788]();
}

uint64_t sub_238238C0C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_238238C18()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_238238C24()
{
  return MEMORY[0x24BEE3A90]();
}

uint64_t sub_238238C30()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_238238C3C()
{
  return MEMORY[0x24BEE3AF8]();
}

uint64_t sub_238238C48()
{
  return MEMORY[0x24BEE3B00]();
}

uint64_t sub_238238C54()
{
  return MEMORY[0x24BEE3B40]();
}

uint64_t sub_238238C60()
{
  return MEMORY[0x24BEE3B60]();
}

uint64_t sub_238238C6C()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_238238C78()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_238238C84()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_238238C90()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_238238C9C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_238238CA8()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_238238CB4()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_238238CC0()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_238238CCC()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_238238CD8()
{
  return MEMORY[0x24BEE42D0]();
}

uint64_t sub_238238CE4()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_238238CF0()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_238238CFC()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_238238D08()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_238238D14()
{
  return MEMORY[0x24BEE45E8]();
}

uint64_t sub_238238D20()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_238238D2C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_238238D38()
{
  return MEMORY[0x24BEE4620]();
}

uint64_t sub_238238D44()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_238238D50()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_238238D5C()
{
  return MEMORY[0x24BEE49E8]();
}

uint64_t sub_238238D68()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_238238D74()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return MEMORY[0x24BE29F70]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return MEMORY[0x24BED84E8]();
}

uint64_t MobileGestalt_copy_deviceName_obj()
{
  return MEMORY[0x24BED8500]();
}

uint64_t MobileGestalt_copy_marketingProductName_obj()
{
  return MEMORY[0x24BED8528]();
}

uint64_t MobileGestalt_copy_productType_obj()
{
  return MEMORY[0x24BED8548]();
}

uint64_t MobileGestalt_copy_productVersion_obj()
{
  return MEMORY[0x24BED8550]();
}

uint64_t MobileGestalt_copy_serialNumber_obj()
{
  return MEMORY[0x24BED8558]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD0DD8]();
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B40](keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x24BDE8BA8](key, algorithm, signedData, signature, error);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x24BDAC970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x24BEAE670]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x24BDAD170](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x24BEDF1C8](strm, *(_QWORD *)&flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return MEMORY[0x24BEDF1D0](strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x24BEDF1D8](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x24BEDF1E0](strm, *(_QWORD *)&level, *(_QWORD *)&method, *(_QWORD *)&windowBits, *(_QWORD *)&memLevel, *(_QWORD *)&strategy, version, *(_QWORD *)&stream_size);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x24BDADEA0](predicate, context, function);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x24BDAE068]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x24BDAE070](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x24BDAE4D8](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x24BDAE530](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x24BEDD088](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x24BDAF4D8]();
}

int proc_pidpath_audittoken(audit_token_t *audittoken, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x24BDAF710](audittoken, buffer, *(_QWORD *)&buffersize);
}

void rewind(FILE *a1)
{
  MEMORY[0x24BDAFB98](a1);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x24BEDDF58](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x24BEDDF60](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x24BEDDF68](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF98](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

sqlite3_int64 sqlite3_changes64(sqlite3 *a1)
{
  return MEMORY[0x24BEDE000](a1);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x24BEDE018](a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE038](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x24BEDE048](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE050](a1, *(_QWORD *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE058](a1, *(_QWORD *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE068](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x24BEDE110](*(_QWORD *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x24BEDE118](a1, sql, callback, a4, errmsg);
}

char *__cdecl sqlite3_expanded_sql(sqlite3_stmt *pStmt)
{
  return (char *)MEMORY[0x24BEDE120](pStmt);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE140](pStmt);
}

void sqlite3_free(void *a1)
{
  MEMORY[0x24BEDE148](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x24BEDE1C0](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x24BEDE1D0](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE2A8](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return MEMORY[0x24BEE4C90]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_taskGroup_wait_next_throwing()
{
  return MEMORY[0x24BEE7218]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t xpc_activity_add_eligibility_changed_handler()
{
  return MEMORY[0x24BDB05C8]();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x24BDB05D0](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x24BDB05E0](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x24BDB05E8](identifier, criteria, handler);
}

uint64_t xpc_activity_remove_eligibility_changed_handler()
{
  return MEMORY[0x24BDB05F0]();
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x24BDB0608](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x24BDB0610](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x24BDB0618](activity);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x24BDB0638](xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x24BDB0660](xarray);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x24BDB06D8](value);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x24BDB06E0](xBOOL);
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x24BDB0710](connection);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x24BDB0718](connection);
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return MEMORY[0x24BDB0720]();
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x24BDB0730](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x24BDB0738](endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x24BDB0758]();
}

uid_t xpc_connection_get_euid(xpc_connection_t connection)
{
  return MEMORY[0x24BDB0770](connection);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x24BDB0788](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x24BDB07A8](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x24BDB07B0](connection, message, replyq, handler);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x24BDB07C8](connection, handler);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x24BDB07E8](connection, targetq);
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x24BDB0820](object);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x24BDB0868](bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x24BDB0880](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x24BDB0888](xdata);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x24BDB0890](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x24BDB08A0](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x24BDB08B0](xdict, applier);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB08D0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x24BDB08D8](original);
}

size_t xpc_dictionary_get_count(xpc_object_t xdict)
{
  return MEMORY[0x24BDB0910](xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0968](xdict, key);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x24BDB09E0](xdict, key, value);
}

xpc_object_t xpc_double_create(double value)
{
  return (xpc_object_t)MEMORY[0x24BDB09E8](value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  double result;

  MEMORY[0x24BDB09F0](xdouble);
  return result;
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x24BDB09F8](connection);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return MEMORY[0x24BDB0A08](object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x24BDB0A80](value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x24BDB0A88](xint);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x24BDB0AC0]();
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x24BDB0B80](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x24BDB0BA8](xstring);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return (const char *)MEMORY[0x24BDB0BD0](type);
}

xpc_object_t xpc_uint64_create(uint64_t value)
{
  return (xpc_object_t)MEMORY[0x24BDB0BD8](value);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x24BDB0BE0](xuint);
}

xpc_object_t xpc_uuid_create(const unsigned __int8 *uuid)
{
  return (xpc_object_t)MEMORY[0x24BDB0BF8](uuid);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x24BDB0C00](xuuid);
}

