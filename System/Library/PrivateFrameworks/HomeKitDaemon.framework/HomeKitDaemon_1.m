uint64_t sub_22198E5C4(unint64_t a1)
{
  return sub_22198F02C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_221991F40);
}

uint64_t sub_22198E5D0(unint64_t a1)
{
  return sub_22198F02C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_22199215C);
}

uint64_t sub_22198E5DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_221990A5C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22198E72C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2219918AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22198E87C(uint64_t result)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;

  v4 = v2;
  v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    result = sub_2225971D0();
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_2225973B0();
    result = swift_bridgeObjectRelease();
    v8 = v20 + v6;
    if (!__OFADD__(v20, v6))
      goto LABEL_6;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v6;
  if (__OFADD__(v7, v6))
    goto LABEL_24;
LABEL_6:
  v9 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v9;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8)
    v13 = v8;
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x227674280](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *v4 = v14;
  v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (*(_QWORD *)(v12 + 24) >> 1) - v15;
  result = (uint64_t)sub_221992FFC(&v44, (_QWORD *)(v12 + 8 * v15 + 32), v16, v5, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550);
  if (result < v6)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= 1)
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = __OFADD__(v17, result);
    v19 = v17 + result;
    if (v18)
    {
      __break(1u);
LABEL_33:
      if (!sub_2225971F4())
        goto LABEL_21;
      sub_221917374(0, (unint64_t *)&unk_25573FEC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v24 = v43;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v24)
          goto LABEL_21;
        while (1)
        {
          v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(_QWORD *)(v26 + 0x18) >> 1)
          {
            sub_222596E64();
            v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          v27 = *(_QWORD *)(v26 + 24) >> 1;
          if (v3 < v27)
            break;
LABEL_37:
          *(_QWORD *)(v26 + 16) = v3;
        }
        v28 = v26 + 32;
        while (1)
        {
          *(_QWORD *)(v28 + 8 * v3++) = v24;
          v29 = v47;
          if (v44 < 0)
          {
            if (!sub_2225971F4())
              goto LABEL_74;
            sub_221917374(0, (unint64_t *)&unk_25573FEC0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v24 = v43;
            swift_unknownObjectRelease();
            goto LABEL_49;
          }
          if (!v48)
            break;
          v30 = (v48 - 1) & v48;
          v31 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_45:
          v24 = *(void **)(*(_QWORD *)(v44 + 48) + 8 * v31);
          v32 = v24;
LABEL_46:
          v47 = v29;
          v48 = v30;
LABEL_49:
          if (!v24)
          {
LABEL_74:
            *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_21;
          }
          if (v3 >= v27)
          {
            v26 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_37;
          }
        }
        v33 = v47 + 1;
        if (__OFADD__(v47, 1))
        {
          __break(1u);
LABEL_98:
          v24 = 0;
          v22 = 0;
          v21 = v1;
LABEL_30:
          v47 = v21;
          v48 = v22;
          continue;
        }
        break;
      }
      v34 = (unint64_t)(v46 + 64) >> 6;
      if (v33 >= v34)
      {
        v24 = 0;
        v30 = 0;
        goto LABEL_46;
      }
      v35 = *(_QWORD *)(v45 + 8 * v33);
      if (!v35)
      {
        v36 = v47 + 2;
        if (v47 + 2 >= v34)
          goto LABEL_71;
        v35 = *(_QWORD *)(v45 + 8 * v36);
        if (!v35)
        {
          v1 = v47 + 3;
          if (v47 + 3 >= v34)
            goto LABEL_72;
          v35 = *(_QWORD *)(v45 + 8 * v1);
          if (v35)
          {
            v33 = v47 + 3;
            goto LABEL_55;
          }
          v36 = v47 + 4;
          if (v47 + 4 >= v34)
          {
            v24 = 0;
            v30 = 0;
            v29 = v47 + 3;
            goto LABEL_46;
          }
          v35 = *(_QWORD *)(v45 + 8 * v36);
          if (!v35)
          {
            v33 = v47 + 5;
            if (v47 + 5 >= v34)
            {
LABEL_72:
              v24 = 0;
              v30 = 0;
              v29 = v36;
              goto LABEL_46;
            }
            v35 = *(_QWORD *)(v45 + 8 * v33);
            if (!v35)
            {
              v33 = v34 - 1;
              v37 = v47 + 6;
              while (v34 != v37)
              {
                v35 = *(_QWORD *)(v45 + 8 * v37++);
                if (v35)
                {
                  v33 = v37 - 1;
                  goto LABEL_55;
                }
              }
LABEL_71:
              v24 = 0;
              v30 = 0;
              v29 = v33;
              goto LABEL_46;
            }
            goto LABEL_55;
          }
        }
        v33 = v36;
      }
LABEL_55:
      v30 = (v35 - 1) & v35;
      v31 = __clz(__rbit64(v35)) + (v33 << 6);
      v29 = v33;
      goto LABEL_45;
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  if (result != v16)
  {
LABEL_21:
    sub_22193D780();
    return sub_222596E58();
  }
LABEL_26:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v47;
  if (v44 < 0)
    goto LABEL_33;
  if (v48)
  {
    v22 = (v48 - 1) & v48;
    v23 = __clz(__rbit64(v48)) | (v47 << 6);
LABEL_29:
    v24 = *(void **)(*(_QWORD *)(v44 + 48) + 8 * v23);
    v25 = v24;
    goto LABEL_30;
  }
  v38 = v47 + 1;
  if (!__OFADD__(v47, 1))
  {
    v39 = (unint64_t)(v46 + 64) >> 6;
    if (v38 >= v39)
    {
      v24 = 0;
      v22 = 0;
      goto LABEL_30;
    }
    v40 = *(_QWORD *)(v45 + 8 * v38);
    if (v40)
      goto LABEL_79;
    v41 = v47 + 2;
    if (v47 + 2 >= v39)
    {
LABEL_95:
      v24 = 0;
      v22 = 0;
      v21 = v38;
      goto LABEL_30;
    }
    v40 = *(_QWORD *)(v45 + 8 * v41);
    if (v40)
      goto LABEL_83;
    v1 = v47 + 3;
    if (v47 + 3 < v39)
    {
      v40 = *(_QWORD *)(v45 + 8 * v1);
      if (v40)
      {
        v38 = v47 + 3;
        goto LABEL_79;
      }
      v41 = v47 + 4;
      if (v47 + 4 >= v39)
        goto LABEL_98;
      v40 = *(_QWORD *)(v45 + 8 * v41);
      if (v40)
      {
LABEL_83:
        v38 = v41;
LABEL_79:
        v22 = (v40 - 1) & v40;
        v23 = __clz(__rbit64(v40)) + (v38 << 6);
        v21 = v38;
        goto LABEL_29;
      }
      v38 = v47 + 5;
      if (v47 + 5 < v39)
      {
        v40 = *(_QWORD *)(v45 + 8 * v38);
        if (!v40)
        {
          v38 = v39 - 1;
          v42 = v47 + 6;
          do
          {
            if (v39 == v42)
              goto LABEL_95;
            v40 = *(_QWORD *)(v45 + 8 * v42++);
          }
          while (!v40);
          v38 = v42 - 1;
        }
        goto LABEL_79;
      }
    }
    v24 = 0;
    v22 = 0;
    v21 = v41;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_22198EE90(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_221991538(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_25573C030, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_222596678();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22198F008(unint64_t a1)
{
  return sub_22198F02C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_221992378);
}

uint64_t sub_22198F014(unint64_t a1)
{
  return sub_22198F02C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_221992594);
}

uint64_t sub_22198F020(unint64_t a1)
{
  return sub_22198F02C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2219927B0);
}

uint64_t sub_22198F02C(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x227674280](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_222596E58();
  }
  __break(1u);
  return result;
}

uint64_t sub_22198F1E8()
{
  return 1;
}

uint64_t sub_22198F1F0()
{
  sub_2225978F0();
  sub_2225978FC();
  return sub_222597938();
}

uint64_t sub_22198F230()
{
  return sub_2225978FC();
}

uint64_t sub_22198F254()
{
  sub_2225978F0();
  sub_2225978FC();
  return sub_222597938();
}

uint64_t sub_22198F290()
{
  return 0x6E6F73616572;
}

uint64_t sub_22198F2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2225976E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_22198F330(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_22198F33C()
{
  sub_22198F47C();
  return sub_2225979BC();
}

uint64_t sub_22198F364()
{
  sub_22198F47C();
  return sub_2225979C8();
}

uint64_t HomeUtilTestFailure.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F458);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22198F47C();
  sub_222597974();
  sub_2225974D0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_22198F47C()
{
  unint64_t result;

  result = qword_25573F460;
  if (!qword_25573F460)
  {
    result = MEMORY[0x227676F2C](&unk_22268D564, &type metadata for HomeUtilTestFailure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F460);
  }
  return result;
}

uint64_t HomeUtilTestFailure.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F468);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22198F47C();
  sub_222597968();
  if (!v1)
  {
    v7 = sub_222597440();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_22198F5CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F468);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22198F47C();
  sub_222597968();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_222597440();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_22198F6F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F458);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22198F47C();
  sub_222597974();
  sub_2225974D0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t runHomeUtilOnDeviceTests(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  sub_222596D14();
  v1[9] = swift_task_alloc();
  sub_222596390();
  v1[10] = swift_task_alloc();
  v1[8] = a1;
  v3 = (_QWORD *)swift_task_alloc();
  v1[11] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F480);
  sub_221994B54(&qword_25573F488, &qword_25573F480, MEMORY[0x24BEE12C8]);
  *v3 = v1;
  v3[1] = sub_22198F8C4;
  return sub_222596DBC();
}

uint64_t sub_22198F8C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22198F920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v1 = v0[12];
  v2 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(v1 + 16);
  if (v26)
  {
    v25 = v1 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v26; ++i)
    {
      v4 = *(_QWORD *)(v25 + 24 * i + 16);
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v6 = (uint64_t *)(v4 + 56);
        v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v9 = *v6;
          if (*v6)
          {
            v10 = *(v6 - 1);
            v27[4] = 0;
            v27[5] = 0xE000000000000000;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_222596D50();
            swift_bridgeObjectRelease();
            sub_222596D50();
            swift_bridgeObjectRetain();
            sub_222596D50();
            swift_bridgeObjectRelease();
            sub_222596D50();
            v27[6] = v10;
            v27[7] = v9;
            sub_222597380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = v27[4];
            v12 = v27[5];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v7 = sub_221990A5C(0, v7[2] + 1, 1, v7);
            v14 = v7[2];
            v13 = v7[3];
            if (v14 >= v13 >> 1)
              v7 = sub_221990A5C((_QWORD *)(v13 > 1), v14 + 1, 1, v7);
            v7[2] = v14 + 1;
            v8 = &v7[2 * v14];
            v8[4] = v11;
            v8[5] = v12;
          }
          v6 += 4;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      sub_22198E5DC((uint64_t)v7);
    }
    v0 = v27;
    swift_bridgeObjectRelease();
    v2 = v28;
    v1 = v27[12];
  }
  v15 = v0[13];
  sub_2225963C0();
  swift_allocObject();
  sub_2225963B4();
  sub_222596384();
  sub_22259639C();
  v0[2] = v1;
  v0[3] = v2;
  sub_2219901CC();
  v16 = sub_2225963A8();
  if (v15)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
  else
  {
    v19 = v16;
    v20 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_222596D08();
    v21 = sub_222596CFC();
    if (v22)
      v23 = v21;
    else
      v23 = 0xD000000000000016;
    if (v22)
      v24 = v22;
    else
      v24 = 0x800000022261FEE0;
    sub_22190D550(v19, v20);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(unint64_t, unint64_t))v0[1])(v23, v24);
  }
}

uint64_t sub_22198FCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  return swift_task_switch();
}

uint64_t sub_22198FCE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 88);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_22198FD60;
  return sub_2225968AC();
}

uint64_t sub_22198FD60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22198FDCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t, _QWORD, _QWORD);

  v4 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0[1];
  v1 = v0[9];
  v2 = v0[10];
  swift_bridgeObjectRetain();
  return v4(v1, v2, 0, 0);
}

uint64_t sub_22198FE1C()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, unint64_t);

  v1 = *(void **)(v0 + 120);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
  if (swift_dynamicCast())
  {
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);

  }
  else
  {
    v5 = *(void **)(v0 + 120);
    swift_getErrorValue();
    sub_2225976BC();

    v4 = 0;
    v3 = 0xE000000000000000;
  }
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v0 + 8);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v9(v7, v6, v4, v3);
}

uint64_t sub_22198FF08(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_221900360;
  return v5();
}

uint64_t sub_22198FF5C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[2] = a1;
  v4 = *a2;
  v5 = a2[1];
  v6 = swift_task_alloc();
  v2[3] = v6;
  *(_OWORD *)(v6 + 16) = *((_OWORD *)a2 + 1);
  v7 = (_QWORD *)swift_task_alloc();
  v2[4] = v7;
  *v7 = v2;
  v7[1] = sub_22198FFF0;
  v7[11] = &unk_25573F638;
  v7[12] = v6;
  v7[9] = v4;
  v7[10] = v5;
  return swift_task_switch();
}

uint64_t sub_22198FFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v9;
  uint64_t v11;

  v9 = *(_QWORD **)(*v4 + 16);
  v11 = *v4;
  swift_task_dealloc();
  swift_task_dealloc();
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return (*(uint64_t (**)(void))(v11 + 8))();
}

uint64_t sub_221990070(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *a2;
  v4 = a2[1];
  v2[3] = a1;
  v2[4] = v3;
  v2[5] = v4;
  v2[2] = a2[2];
  v5 = (_QWORD *)swift_task_alloc();
  v2[6] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F620);
  sub_221994B54(&qword_25573F628, &qword_25573F620, MEMORY[0x24BEE12C8]);
  *v5 = v2;
  v5[1] = sub_221990124;
  return sub_222596DBC();
}

uint64_t sub_221990124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_221990180()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[7];
  v2 = v0[5];
  v3 = (_QWORD *)v0[3];
  *v3 = v0[4];
  v3[1] = v2;
  v3[2] = v1;
  v5 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return v5();
}

unint64_t sub_2219901CC()
{
  unint64_t result;

  result = qword_25573F490;
  if (!qword_25573F490)
  {
    result = MEMORY[0x227676F2C](&unk_22268D53C, &type metadata for Groups);
    atomic_store(result, (unint64_t *)&qword_25573F490);
  }
  return result;
}

uint64_t sub_221990210(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_221991028();
  sub_222597974();
  v14 = a2;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4C0);
  sub_221987A3C(&qword_25573F4C8, &qword_25573F4C0, (uint64_t (*)(void))sub_22199106C, MEMORY[0x24BEE12A0]);
  sub_222597500();
  if (!v3)
  {
    v14 = a3;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573D3C0);
    sub_221993FD4(&qword_25573ECE0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_222597500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2219903A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[0] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F538);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_221994034();
  sub_222597974();
  v13 = 0;
  sub_2225974D0();
  if (!v4)
  {
    v11[1] = v11[0];
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F520);
    sub_221987A3C(&qword_25573F540, &qword_25573F520, (uint64_t (*)(void))sub_2219940BC, MEMORY[0x24BEE12A0]);
    sub_222597500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_221990514(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v12 = a4;
  v13 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F6A8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_221994E58();
  sub_222597974();
  LOBYTE(v14) = 0;
  sub_2225974D0();
  if (!v5)
  {
    v14 = v12;
    v15 = v13;
    v16 = 1;
    sub_221994EE0();
    sub_2225974C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_221990658()
{
  _BYTE *v0;

  if (*v0)
    return 0x736572756C696166;
  else
    return 0x7370756F7267;
}

uint64_t sub_221990690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_22199473C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219906B4()
{
  sub_221991028();
  return sub_2225979BC();
}

uint64_t sub_2219906DC()
{
  sub_221991028();
  return sub_2225979C8();
}

uint64_t sub_221990704@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_221993990(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_22199072C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_221990210(a1, *v1, v1[1]);
}

uint64_t sub_221990744()
{
  _BYTE *v0;

  if (*v0)
    return 0x7573655274736574;
  else
    return 0x6D614E70756F7267;
}

uint64_t sub_22199078C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_221994824(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219907B0()
{
  sub_221994034();
  return sub_2225979BC();
}

uint64_t sub_2219907D8()
{
  sub_221994034();
  return sub_2225979C8();
}

uint64_t sub_221990800@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_2219937A0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_22199082C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2219903A8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_221990848()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F727265;
  else
    return 0x656D614E74736574;
}

uint64_t sub_221990880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_221994938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219908A4()
{
  sub_221994E58();
  return sub_2225979BC();
}

uint64_t sub_2219908CC()
{
  sub_221994E58();
  return sub_2225979C8();
}

uint64_t sub_2219908F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2219935E0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_221990920(_QWORD *a1)
{
  uint64_t *v1;

  return sub_221990514(a1, *v1, v1[1], v1[2], v1[3]);
}

_QWORD *sub_22199093C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573BCC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2219934EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_221990A5C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_221993B9C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for HomeUtilTestFailure(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HomeUtilTestFailure()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for HomeUtilTestFailure(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HomeUtilTestFailure(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeUtilTestFailure(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeUtilTestFailure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeUtilTestFailure()
{
  return &type metadata for HomeUtilTestFailure;
}

ValueMetadata *type metadata accessor for Groups()
{
  return &type metadata for Groups;
}

uint64_t destroy for Group()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13HomeKitDaemon5GroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Group(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Group(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Group(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Group(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Group()
{
  return &type metadata for Group;
}

uint64_t getEnumTagSinglePayload for HomeUtilTestFailure.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for HomeUtilTestFailure.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_221990EEC + 4 * byte_22268D330[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_221990F0C + 4 * byte_22268D335[v4]))();
}

_BYTE *sub_221990EEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_221990F0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_221990F14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_221990F1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_221990F24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_221990F2C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_221990F38()
{
  return 0;
}

ValueMetadata *type metadata accessor for HomeUtilTestFailure.CodingKeys()
{
  return &type metadata for HomeUtilTestFailure.CodingKeys;
}

unint64_t sub_221990F54()
{
  unint64_t result;

  result = qword_25573F498;
  if (!qword_25573F498)
  {
    result = MEMORY[0x227676F2C](&unk_22268D49C, &type metadata for HomeUtilTestFailure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F498);
  }
  return result;
}

unint64_t sub_221990F9C()
{
  unint64_t result;

  result = qword_25573F4A0;
  if (!qword_25573F4A0)
  {
    result = MEMORY[0x227676F2C](&unk_22268D40C, &type metadata for HomeUtilTestFailure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F4A0);
  }
  return result;
}

unint64_t sub_221990FE4()
{
  unint64_t result;

  result = qword_25573F4A8;
  if (!qword_25573F4A8)
  {
    result = MEMORY[0x227676F2C](&unk_22268D434, &type metadata for HomeUtilTestFailure.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F4A8);
  }
  return result;
}

unint64_t sub_221991028()
{
  unint64_t result;

  result = qword_25573F4B8;
  if (!qword_25573F4B8)
  {
    result = MEMORY[0x227676F2C](&unk_22268D7D0, &type metadata for Groups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F4B8);
  }
  return result;
}

unint64_t sub_22199106C()
{
  unint64_t result;

  result = qword_25573F4D0;
  if (!qword_25573F4D0)
  {
    result = MEMORY[0x227676F2C](&unk_22268D4C4, &type metadata for Group);
    atomic_store(result, (unint64_t *)&qword_25573F4D0);
  }
  return result;
}

_QWORD *sub_2219910B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_221993C8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2219911BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F650);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_221993D94(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2219912C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_221993E9C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2219913EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[15 * v8 + 4])
          memmove(v12, a4 + 4, 120 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_221994100(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_221991510(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_221991538(a1, a2, a3, a4, &qword_25573F5E8, (uint64_t (*)(_QWORD))MEMORY[0x24BE3E878]);
}

uint64_t sub_221991524(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_221991538(a1, a2, a3, a4, &qword_25573E870, (uint64_t (*)(_QWORD))MEMORY[0x24BE3E8A0]);
}

uint64_t sub_221991538(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_22259738C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2219943EC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_221991744(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_221991538(a1, a2, a3, a4, &qword_25573C088, (uint64_t (*)(_QWORD))MEMORY[0x24BE3E928]);
}

_QWORD *sub_221991758(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22199176C(a1, a2, a3, a4, &qword_25573C010, &qword_25573C018);
}

_QWORD *sub_22199176C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2219941F4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_221991898(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_221991538(a1, a2, a3, a4, &qword_25573F5B0, (uint64_t (*)(_QWORD))type metadata accessor for NetworkDetectAccessory);
}

_QWORD *sub_2219918AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F610);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22199464C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2219919B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F608);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 232);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[29 * v8 + 4])
          memmove(v12, a4 + 4, 232 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2219942FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_221991AE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_221991538(a1, a2, a3, a4, &qword_25573C030, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_221991AF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_221994544(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_221991C00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_221994A20(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_221991D24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F5D8, &qword_25573F5D0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5D0);
          v12 = sub_2219B7194(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, (unint64_t *)&unk_25573BF50);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221991F40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F5C8, &qword_25573F5C0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5C0);
          v12 = sub_2219B7194(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22199215C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F560, &qword_25573F558, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F558);
          v12 = sub_2219B7194(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221992378(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F5A8, &qword_25573F5A0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5A0);
          v12 = sub_2219B7194(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, &qword_25573F598);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221992594(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F590, &qword_25573F588, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F588);
          v12 = sub_2219B7194(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, &qword_25573F580);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_2219927B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_221994B54(&qword_25573F578, &qword_25573F570, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573F570);
          v12 = sub_2219B71EC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_221917374(0, &qword_25573F568);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

_QWORD *sub_2219929CC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_221992FFC(a1, a2, a3, a4, (unint64_t *)&qword_25573FFF0, (uint64_t)off_24E762598, (unint64_t *)&qword_25573F5B8);
}

uint64_t sub_2219929E8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_2225967D4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 56) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_221992CB4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_222596678();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_221994B14((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_221992FFC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, a5);
    sub_221994504(a7, a5);
    result = (_QWORD *)sub_222596FC0();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_2225971F4())
        goto LABEL_40;
      sub_221917374(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_2219932F4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2219934EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_2219935E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F690);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_221994E58();
  sub_222597968();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[16] = 0;
    v7 = sub_222597440();
    v9[15] = 1;
    sub_221994E9C();
    swift_bridgeObjectRetain();
    sub_222597434();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2219937A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F510);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_221994034();
  sub_222597968();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    v7 = sub_222597440();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F520);
    v9[30] = 1;
    sub_221987A3C(&qword_25573F528, &qword_25573F520, (uint64_t (*)(void))sub_221994078, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_222597470();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_221993990(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_221991028();
  sub_222597968();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4C0);
    HIBYTE(v9) = 0;
    sub_221987A3C(&qword_25573F500, &qword_25573F4C0, (uint64_t (*)(void))sub_221993F90, MEMORY[0x24BEE12D0]);
    sub_222597470();
    v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573D3C0);
    HIBYTE(v9) = 1;
    sub_221993FD4(&qword_25573EEF8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_222597470();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_221993B9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221993C8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F4E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221993D94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F658);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221993E9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

unint64_t sub_221993F90()
{
  unint64_t result;

  result = qword_25573F508;
  if (!qword_25573F508)
  {
    result = MEMORY[0x227676F2C](&unk_22268D4EC, &type metadata for Group);
    atomic_store(result, (unint64_t *)&qword_25573F508);
  }
  return result;
}

uint64_t sub_221993FD4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25573D3C0);
    v8 = a2;
    result = MEMORY[0x227676F2C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_221994034()
{
  unint64_t result;

  result = qword_25573F518;
  if (!qword_25573F518)
  {
    result = MEMORY[0x227676F2C](&unk_22268D780, &type metadata for Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F518);
  }
  return result;
}

unint64_t sub_221994078()
{
  unint64_t result;

  result = qword_25573F530;
  if (!qword_25573F530)
  {
    result = MEMORY[0x227676F2C](&unk_22268D758, &type metadata for TestResult);
    atomic_store(result, (unint64_t *)&qword_25573F530);
  }
  return result;
}

unint64_t sub_2219940BC()
{
  unint64_t result;

  result = qword_25573F548;
  if (!qword_25573F548)
  {
    result = MEMORY[0x227676F2C](&unk_22268D730, &type metadata for TestResult);
    atomic_store(result, (unint64_t *)&qword_25573F548);
  }
  return result;
}

uint64_t sub_221994100(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 120 * a1 + 32;
    v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_2219941F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_2219942FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 232 * a1 + 32;
    v6 = a3 + 232 * v4;
    if (v5 >= v6 || v5 + 232 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_2219943EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221994504(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_221917374(255, a2);
    result = MEMORY[0x227676F2C](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_221994544(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573F600);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22199464C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_22199473C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736572756C696166 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_221994824(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E70756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7573655274736574 && a2 == 0xEB0000000073746CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_221994938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E74736574 && a2 == 0xE800000000000000;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_221994A20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2225973E0();
  __break(1u);
  return result;
}

uint64_t sub_221994B14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_221994B54(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x227676F2C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_221994B94()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221901E24;
  return ((uint64_t (*)(int *))((char *)&dword_255741B90 + dword_255741B90))(v2);
}

uint64_t sub_221994BF8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221900360;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_221900360;
  return v6();
}

ValueMetadata *type metadata accessor for Group.CodingKeys()
{
  return &type metadata for Group.CodingKeys;
}

ValueMetadata *type metadata accessor for Groups.CodingKeys()
{
  return &type metadata for Groups.CodingKeys;
}

ValueMetadata *type metadata accessor for TestResult()
{
  return &type metadata for TestResult;
}

unint64_t sub_221994CAC()
{
  unint64_t result;

  result = qword_25573F660;
  if (!qword_25573F660)
  {
    result = MEMORY[0x227676F2C](&unk_22268D650, &type metadata for Groups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F660);
  }
  return result;
}

unint64_t sub_221994CF4()
{
  unint64_t result;

  result = qword_25573F668;
  if (!qword_25573F668)
  {
    result = MEMORY[0x227676F2C](&unk_22268D708, &type metadata for Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F668);
  }
  return result;
}

unint64_t sub_221994D3C()
{
  unint64_t result;

  result = qword_25573F670;
  if (!qword_25573F670)
  {
    result = MEMORY[0x227676F2C](&unk_22268D678, &type metadata for Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F670);
  }
  return result;
}

unint64_t sub_221994D84()
{
  unint64_t result;

  result = qword_25573F678;
  if (!qword_25573F678)
  {
    result = MEMORY[0x227676F2C](&unk_22268D6A0, &type metadata for Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F678);
  }
  return result;
}

unint64_t sub_221994DCC()
{
  unint64_t result;

  result = qword_25573F680;
  if (!qword_25573F680)
  {
    result = MEMORY[0x227676F2C](&unk_22268D5C0, &type metadata for Groups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F680);
  }
  return result;
}

unint64_t sub_221994E14()
{
  unint64_t result;

  result = qword_25573F688;
  if (!qword_25573F688)
  {
    result = MEMORY[0x227676F2C](&unk_22268D5E8, &type metadata for Groups.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F688);
  }
  return result;
}

unint64_t sub_221994E58()
{
  unint64_t result;

  result = qword_25573F698;
  if (!qword_25573F698)
  {
    result = MEMORY[0x227676F2C](&unk_22268D8D8, &type metadata for TestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F698);
  }
  return result;
}

unint64_t sub_221994E9C()
{
  unint64_t result;

  result = qword_25573F6A0;
  if (!qword_25573F6A0)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for HomeUtilTestFailure, &type metadata for HomeUtilTestFailure);
    atomic_store(result, (unint64_t *)&qword_25573F6A0);
  }
  return result;
}

unint64_t sub_221994EE0()
{
  unint64_t result;

  result = qword_25573F6B0;
  if (!qword_25573F6B0)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for HomeUtilTestFailure, &type metadata for HomeUtilTestFailure);
    atomic_store(result, (unint64_t *)&qword_25573F6B0);
  }
  return result;
}

uint64_t _s13HomeKitDaemon5GroupV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_221994F70 + 4 * byte_22268D33F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_221994FA4 + 4 * byte_22268D33A[v4]))();
}

uint64_t sub_221994FA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_221994FAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x221994FB4);
  return result;
}

uint64_t sub_221994FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x221994FC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_221994FCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_221994FD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TestResult.CodingKeys()
{
  return &type metadata for TestResult.CodingKeys;
}

unint64_t sub_221994FF4()
{
  unint64_t result;

  result = qword_25573F6B8;
  if (!qword_25573F6B8)
  {
    result = MEMORY[0x227676F2C](&unk_22268D8B0, &type metadata for TestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F6B8);
  }
  return result;
}

unint64_t sub_22199503C()
{
  unint64_t result;

  result = qword_25573F6C0;
  if (!qword_25573F6C0)
  {
    result = MEMORY[0x227676F2C](&unk_22268D820, &type metadata for TestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F6C0);
  }
  return result;
}

unint64_t sub_221995084()
{
  unint64_t result;

  result = qword_25573F6C8;
  if (!qword_25573F6C8)
  {
    result = MEMORY[0x227676F2C](&unk_22268D848, &type metadata for TestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25573F6C8);
  }
  return result;
}

uint64_t sub_2219950CC(uint64_t a1, uint64_t a2)
{
  sub_222596CF0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return sub_222596B34();
}

uint64_t sub_22199513C()
{
  return sub_2219953EC();
}

uint64_t sub_221995158(uint64_t a1, uint64_t a2)
{
  return sub_221995440(a1, a2, qword_25573C1E0);
}

uint64_t sub_221995164(uint64_t a1, uint64_t a2)
{
  return sub_2219954CC(a1, a2, qword_25573C1E0);
}

uint64_t sub_221995170()
{
  swift_getMetatypeMetadata();
  return sub_222596D20();
}

uint64_t sub_22199519C(uint64_t a1, uint64_t a2)
{
  return sub_2219950CC(a1, a2);
}

uint64_t sub_2219951B0()
{
  return sub_2219953EC();
}

uint64_t sub_2219951CC()
{
  return sub_2219953EC();
}

uint64_t sub_2219951E8()
{
  return sub_2219953EC();
}

uint64_t sub_221995204()
{
  return sub_2219953EC();
}

uint64_t sub_221995220()
{
  return sub_2219953EC();
}

uint64_t sub_22199523C(uint64_t a1, uint64_t a2)
{
  return sub_221995440(a1, a2, &qword_25573F6D8);
}

uint64_t sub_221995248(uint64_t a1, uint64_t a2)
{
  return sub_2219954CC(a1, a2, &qword_25573F6D8);
}

uint64_t sub_221995254()
{
  return sub_2219953EC();
}

uint64_t sub_221995270()
{
  return sub_221995170();
}

uint64_t sub_221995284()
{
  return sub_2219953EC();
}

uint64_t sub_2219952A0()
{
  return sub_2219953EC();
}

uint64_t sub_2219952BC()
{
  return sub_2219953EC();
}

uint64_t sub_2219952D8()
{
  return sub_2219953EC();
}

uint64_t sub_2219952F4()
{
  return sub_2219953EC();
}

uint64_t sub_221995310()
{
  return sub_2219953EC();
}

uint64_t sub_22199532C(uint64_t a1, uint64_t a2)
{
  return sub_221995440(a1, a2, &qword_25573F6E0);
}

uint64_t sub_221995338(uint64_t a1, uint64_t a2)
{
  return sub_2219954CC(a1, a2, &qword_25573F6E0);
}

uint64_t sub_221995344()
{
  return sub_2219953EC();
}

uint64_t sub_221995360()
{
  return sub_2219953EC();
}

uint64_t sub_22199537C()
{
  return sub_2219953EC();
}

uint64_t sub_221995398()
{
  return sub_2219953EC();
}

uint64_t sub_2219953B4()
{
  return sub_2219953EC();
}

uint64_t sub_2219953D0()
{
  return sub_2219953EC();
}

uint64_t sub_2219953EC()
{
  sub_222596CF0();
  return sub_222596B34();
}

uint64_t sub_221995434(uint64_t a1, uint64_t a2)
{
  return sub_221995440(a1, a2, &qword_25573F6D0);
}

uint64_t sub_221995440(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_222596CF0();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_222596D20();
  return sub_222596B34();
}

uint64_t sub_2219954C0(uint64_t a1, uint64_t a2)
{
  return sub_2219954CC(a1, a2, &qword_25573F6D0);
}

uint64_t sub_2219954CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_222596D20();
}

uint64_t sub_2219954FC()
{
  uint64_t v0;

  v0 = sub_222596678();
  __swift_allocate_value_buffer(v0, qword_255768500);
  __swift_project_value_buffer(v0, (uint64_t)qword_255768500);
  return sub_222596654();
}

uint64_t sub_221995570()
{
  sub_222596450();
  swift_allocObject();
  sub_22259642C();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  sub_222596660();
  sub_222596588();
  return 0x1000000000;
}

uint64_t sub_221995740()
{
  return sub_222596654();
}

uint64_t sub_221995794()
{
  return swift_deallocClassInstance();
}

uint64_t _s6CryptoCMa()
{
  return objc_opt_self();
}

void sub_2219957C4(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setDispatchQueue_, a1);

}

id sub_2219957F8(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setDiscoveryFlags_, a1);
}

void sub_22199580C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221995828, (uint64_t)&block_descriptor_62, (SEL *)&selRef_setDeviceFoundHandler_);
}

void sub_22199582C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221995828, (uint64_t)&block_descriptor_59_0, (SEL *)&selRef_setDeviceLostHandler_);
}

void sub_221995848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v7;
  void *v9;
  _QWORD v10[6];

  if (a1)
  {
    v10[4] = a1;
    v10[5] = a2;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = a5;
    v10[3] = a6;
    v9 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v7, *a7, v9);
  _Block_release(v9);
}

void sub_2219958CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_2219958E8, (uint64_t)&block_descriptor_56, (SEL *)&selRef_setDeviceChangedHandler_);
}

void sub_2219958EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995A84(a1, a2, a3, a4, (uint64_t)&block_descriptor_53);
}

id sub_2219958F8()
{
  void *v0;

  return objc_msgSend(v0, sel_invalidate);
}

id sub_221995908()
{
  void *v0;

  return objc_msgSend(v0, sel_controlFlags);
}

id sub_221995918(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setControlFlags_, a1);
}

uint64_t sub_22199592C()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_activeDevices);
  sub_221917374(0, &qword_25573F950);
  v2 = sub_222596E40();

  return v2;
}

void sub_221995990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221944BC8, (uint64_t)&block_descriptor_50, (SEL *)&selRef_setInterruptionHandler_);
}

void sub_2219959AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221944BC8, (uint64_t)&block_descriptor_47, (SEL *)&selRef_setInvalidationHandler_);
}

void sub_2219959C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221995828, (uint64_t)&block_descriptor_44, (SEL *)&selRef_setDeviceFoundHandler_);
}

void sub_2219959E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_221995828, (uint64_t)&block_descriptor_41, (SEL *)&selRef_setDeviceLostHandler_);
}

void sub_221995A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995848(a1, a2, a3, a4, (uint64_t)sub_2219958E8, (uint64_t)&block_descriptor_38_0, (SEL *)&selRef_setDeviceChangedHandler_);
}

void sub_221995A1C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_221995A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_221995A84(a1, a2, a3, a4, (uint64_t)&block_descriptor_35);
}

void sub_221995A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  _QWORD v7[6];

  if (a1)
  {
    v7[4] = a1;
    v7[5] = a2;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_221947BBC;
    v7[3] = a5;
    v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v5, sel_activateWithCompletion_, v6);
  _Block_release(v6);
}

uint64_t sub_221995B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC13HomeKitDaemon15AssertionHandle9Assertion_uuid;
  v2 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_221995B84()
{
  sub_2225978F0();
  sub_222596678();
  sub_2219018CC((unint64_t *)&qword_25573FF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_222596C9C();
  return sub_222597938();
}

uint64_t sub_221995C00()
{
  sub_222596678();
  sub_2219018CC((unint64_t *)&qword_25573FF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_222596C9C();
}

uint64_t sub_221995C6C()
{
  sub_2225978F0();
  sub_222596678();
  sub_2219018CC((unint64_t *)&qword_25573FF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_222596C9C();
  return sub_222597938();
}

uint64_t sub_221995CE4()
{
  return sub_22259663C();
}

uint64_t sub_221995D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  _BOOL4 v4;
  BOOL v6;

  v1 = MEMORY[0x227677094](v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR___HMDDiscoveryController_assertions);
    swift_retain();
    os_unfair_lock_lock(v3 + 6);
    sub_221995E78((uint64_t)&v3[4], &v6);
    os_unfair_lock_unlock(v3 + 6);
    v4 = v6;
    swift_release();
    sub_221998C58(v2);
    if (v4)
      sub_221998840();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + 32) = 0;
  swift_unknownObjectWeakAssign();
  swift_release();
  sub_22196DF04(v0 + 24);
  return v0;
}

uint64_t sub_221995DE0()
{
  sub_221995D00();
  return swift_deallocClassInstance();
}

uint64_t sub_221995E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  swift_retain();
  sub_2219AF40C(&v7, a2);
  swift_release();
  if ((*(_QWORD *)a1 & 0xC000000000000001) != 0)
    result = sub_2225971D0();
  else
    result = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *a3 = result;
  return result;
}

uint64_t sub_221995E78@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;

  sub_2219B616C();
  swift_release();
  if ((*(_QWORD *)a1 & 0xC000000000000001) != 0)
    result = sub_2225971D0();
  else
    result = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *a2 = result == 0;
  return result;
}

id DiscoveryController.__allocating_init(discoveryNeedsAssertion:)(int a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;

  v3 = objc_allocWithZone(v1);
  v4 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  v5 = sub_22199924C(a1, (uint64_t (*)(void))sub_221996008, 0, (uint64_t (*)(void))sub_221996038, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id DiscoveryController.init(discoveryNeedsAssertion:)(int a1)
{
  id v2;
  id v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for DiscoveryController(0));
  v3 = sub_22199924C(a1, (uint64_t (*)(void))sub_221996008, 0, (uint64_t (*)(void))sub_221996038, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id sub_221996008()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE7CBF0]), sel_init);
}

id sub_221996038()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE90128]), sel_init);
}

uint64_t type metadata accessor for DiscoveryController(uint64_t a1)
{
  return sub_221926060(a1, (uint64_t *)&unk_25573F930);
}

uint64_t sub_22199610C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void (*v5)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void (*)(void *), uint64_t, uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
  ObjectType = swift_getObjectType();
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v2 + 112);
  swift_unknownObjectRetain();
  swift_retain();
  v5(sub_22199992C, v4, ObjectType, v2);
  swift_unknownObjectRelease();
  swift_release();
  v6 = *(_QWORD *)(v1 + 8);
  v7 = swift_getObjectType();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 160);
  swift_unknownObjectRetain();
  swift_retain();
  v9(sub_221999948, v8, v7, v6);
  swift_unknownObjectRelease();
  swift_release();
  v10 = *(_QWORD *)(v1 + 8);
  v11 = swift_getObjectType();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 136);
  swift_unknownObjectRetain();
  swift_retain();
  v13(sub_221999950, v12, v11, v10);
  swift_unknownObjectRelease();
  return swift_release();
}

void sub_221996294(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x227677094](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_2219976D0(2u, a1);

  }
}

void sub_2219962F0(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x227677094](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_2219976D0(a3, a1);

  }
}

void sub_22199635C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x227677094](v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_beginAccess();
    v6 = MEMORY[0x227677094](a2 + 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(a2 + 24);
      v9 = sub_222596B28();
      v10 = sub_222597020();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_2218F0000, v9, v10, "Queue setup after invalidation.", v11, 2u);
        MEMORY[0x227676FE0](v11, -1, -1);
      }

      sub_221998018(v7, v8, 120.0);
      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

void sub_221996488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x227677094](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_222596B28();
    v5 = sub_222597020();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_2218F0000, v4, v5, "RPClient was interrupted", v6, 2u);
      MEMORY[0x227676FE0](v6, -1, -1);
    }

  }
}

void sub_221996554(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  char *format;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x227677094](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a1;
    v9 = sub_222596B28();
    v10 = sub_22259702C();
    if (os_log_type_enabled(v9, v10))
    {
      format = a3;
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v13 = v8;
      sub_222597134();
      *v12 = v8;

      _os_log_impl(&dword_2218F0000, v9, v10, format, v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v12, -1, -1);
      MEMORY[0x227676FE0](v11, -1, -1);
    }
    else
    {

    }
  }
}

void sub_2219966DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;

  v4 = a3 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x227677094](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a1;
    v8 = sub_222596B28();
    v9 = sub_222597020();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v7;
      sub_222597134();
      *v11 = v7;

      _os_log_impl(&dword_2218F0000, v8, v9, "device changed from RPClient: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v11, -1, -1);
      MEMORY[0x227676FE0](v10, -1, -1);
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall DiscoveryController.start()()
{
  sub_2219984B4((uint64_t)&_sMp_6.AssociatedTypeNames + 3, (uint64_t)sub_22199969C, (uint64_t)&block_descriptor_9);
}

uint64_t sub_22199687C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_222596BF4();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) & 1) == 0)
  {
    v7 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    *v6 = v7;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE5610], v2);
    v8 = v7;
    LOBYTE(v7) = sub_222596C0C();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v6, v2);
    if ((v7 & 1) != 0)
    {
      v9 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      v10 = *(_QWORD *)(v9 + 8);
      v11 = swift_unknownObjectRetain();
      sub_221997B50(v11, v10);
      swift_unknownObjectRelease();
      return sub_2219971E8();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2219969C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2225967D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v30 - v8;
  v9 = v0 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 8);
  ObjectType = swift_getObjectType();
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 56);
  swift_unknownObjectRetain();
  v13 = v12(ObjectType, v10);
  swift_unknownObjectRelease();
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_22:
    v36 = MEMORY[0x24BEE4AF8];
LABEL_23:
    swift_bridgeObjectRelease_n();
    return v36;
  }
  swift_bridgeObjectRetain();
  result = sub_2225973B0();
  v14 = result;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v14 >= 1)
  {
    v16 = 0;
    v34 = v13 & 0xC000000000000001;
    v36 = MEMORY[0x24BEE4AF8];
    v32 = v14;
    v33 = v4;
    do
    {
      if (v34)
        v17 = (id)MEMORY[0x227674274](v16, v13);
      else
        v17 = *(id *)(v13 + 8 * v16 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_idsDeviceIdentifier);
      if (v19)
      {
        v20 = v19;
        sub_222596CF0();

        v21 = objc_msgSend(v18, sel_mediaRouteIdentifier);
        if (v21)
        {
          v22 = v21;
          sub_222596CF0();

        }
        sub_2225967B0();
        v23 = 0;
        v14 = v32;
        v4 = v33;
      }
      else
      {
        v23 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v23, 1, v4);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_2219998E4((uint64_t)v3);
      }
      else
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v25 = v31;
        v24(v31, v3, v4);
        v24(v35, v25, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_221991524(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
        v27 = *(_QWORD *)(v36 + 16);
        v26 = *(_QWORD *)(v36 + 24);
        if (v27 >= v26 >> 1)
          v36 = sub_221991524(v26 > 1, v27 + 1, 1, v36);
        v28 = v35;
        v29 = v36;
        *(_QWORD *)(v36 + 16) = v27 + 1;
        v24((char *)(v29+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27), v28, v4);
      }
      ++v16;
    }
    while (v14 != v16);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_221996D38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryController.obtainNetworkVisibleDevicesProto()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, unint64_t, uint64_t);
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_2225967D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2219969C0();
  v5 = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v17 = v4;
    swift_bridgeObjectRetain();
    do
    {
      v9(v3, v7, v0);
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7388]), sel_init);
      if (v10)
      {
        v11 = v10;
        sub_2225967BC();
        v12 = (void *)sub_222596CD8();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setIdsIdentifierString_, v12);

        sub_2225967C8();
        if (v13)
        {
          v14 = (void *)sub_222596CD8();
          swift_bridgeObjectRelease();
          objc_msgSend(v11, sel_setMediaRouteIdString_, v14);

        }
        v15 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        MEMORY[0x227673E0C](v15);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_222596E64();
        sub_222596E88();
        sub_222596E58();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v5 = v18;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t DiscoveryController.obtainSFVisibleDevicesProto()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  void (*v12)(char *, size_t, uint64_t);
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  size_t v20;
  uint64_t v21;

  v1 = sub_2225967D4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  swift_release();
  v7 = sub_221971E90(v6);
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x24BEE4AF8];
  v21 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    v10 = v7 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v11 = *(_QWORD *)(v2 + 72);
    v12 = *(void (**)(char *, size_t, uint64_t))(v2 + 16);
    v20 = v7;
    swift_retain();
    do
    {
      v12(v4, v10, v1);
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7388]), sel_init);
      if (v13)
      {
        v14 = v13;
        sub_2225967BC();
        v15 = (void *)sub_222596CD8();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setIdsIdentifierString_, v15);

        sub_2225967C8();
        if (v16)
        {
          v17 = (void *)sub_222596CD8();
          swift_bridgeObjectRelease();
          objc_msgSend(v14, sel_setMediaRouteIdString_, v17);

        }
        v18 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        MEMORY[0x227673E0C](v18);
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_222596E64();
        sub_222596E88();
        sub_222596E58();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_release();
    v8 = v21;
  }
  swift_release();
  return v8;
}

id sub_221997184(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  sub_221917374(0, &qword_25573F948);
  v5 = (void *)sub_222596E28();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2219971E8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void (*v11)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;

  v1 = sub_222596BF4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_222596C0C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (v0[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] != 1
      || v0[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] == 1)
    {
      v8 = *(_QWORD *)&v0[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8];
      ObjectType = swift_getObjectType();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v0;
      v11 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v8 + 176);
      swift_unknownObjectRetain();
      v12 = v0;
      v11(sub_221999924, v10, ObjectType, v8);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22199733C(void *a1)
{
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *oslog;
  uint64_t v13;

  if (a1)
  {
    v2 = a1;
    v3 = a1;
    v4 = a1;
    v5 = sub_222596B28();
    v6 = sub_222597038();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = a1;
      v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_222597134();
      *v8 = v13;

      _os_log_impl(&dword_2218F0000, v5, v6, "Unable to start sfDiscovery %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v8, -1, -1);
      MEMORY[0x227676FE0](v7, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    oslog = sub_222596B28();
    v10 = sub_222597020();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_2218F0000, oslog, v10, "Started sfDiscovery", v11, 2u);
      MEMORY[0x227676FE0](v11, -1, -1);
    }

  }
}

uint64_t sub_22199756C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_222596BF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  v8 = sub_222596C0C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    v10 = (uint64_t *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient);
    v11 = *(_QWORD *)(v1 + OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient + 8);
    ObjectType = swift_getObjectType();
    v13 = *(void (**)(uint64_t, uint64_t))(v11 + 184);
    swift_unknownObjectRetain();
    v13(ObjectType, v11);
    v14 = swift_unknownObjectRelease();
    v15 = (*(uint64_t (**)(uint64_t))(v1 + OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory))(v14);
    v17 = v16;
    v18 = swift_getObjectType();
    (*(void (**)(id, uint64_t, uint64_t))(v17 + 16))(v7, v18, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 88))(1, v18, v17);
    *v10 = v15;
    v10[1] = v17;
    swift_unknownObjectRelease();
    return sub_22199610C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2219976D0(unsigned __int8 a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id result;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  _BYTE v24[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_222596BF4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v2 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_222596C0C();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    result = objc_msgSend(a2, sel_idsIdentifier);
    if (result)
    {
      v15 = result;
      v16 = a1;
      v17 = sub_222596CF0();
      v19 = v18;

      v20 = objc_msgSend(a2, sel_mediaRouteID);
      if (v20)
      {
        v21 = v20;
        sub_222596CF0();

      }
      if ((v16 - 1) > 1)
      {
        swift_bridgeObjectRelease();
        v23 = *(_QWORD *)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v23 + 24));
        sub_221997928((uint64_t *)(v23 + 16), v17, v19, (uint64_t)v7);
        os_unfair_lock_unlock((os_unfair_lock_t)(v23 + 24));
        swift_release();
        swift_bridgeObjectRelease();
        return (id)sub_2219998E4((uint64_t)v7);
      }
      else
      {
        v22 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___HMDDiscoveryController_visibleSFDevices);
        swift_retain();
        os_unfair_lock_lock(v22 + 6);
        sub_221997A64((uint64_t)&v22[4], v17, v19);
        os_unfair_lock_unlock(v22 + 6);
        swift_release();
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_221997928@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRetain();
  v8 = sub_22198D4E4(a2, a3);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *a1;
    v17 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_221969864();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_2225967D4();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a4, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_2219F6674(v8, v11);
    *a1 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
  else
  {
    v16 = sub_2225967D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
  }
}

uint64_t sub_221997A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_2225967B0();
  v8 = sub_2225967D4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_2219EC45C((uint64_t)v7, a2, a3);
}

uint64_t sub_221997B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(void (*)(void *), _QWORD *, uint64_t, uint64_t);
  _QWORD v21[2];

  v3 = v2;
  v6 = sub_222596BF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_222596C0C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) != 1
      || *(_BYTE *)(v3 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) == 1)
    {
      swift_unknownObjectRetain();
      v13 = sub_222596B28();
      v14 = sub_222597020();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 134217984;
        ObjectType = swift_getObjectType();
        v21[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
        sub_222597134();
        swift_unknownObjectRelease();
        _os_log_impl(&dword_2218F0000, v13, v14, "Set up the companion link client, controlFlags = %llu", v15, 0xCu);
        MEMORY[0x227676FE0](v15, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease();
      }

      v17 = swift_getObjectType();
      v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = v18;
      v19[3] = a1;
      v19[4] = a2;
      v20 = *(void (**)(void (*)(void *), _QWORD *, uint64_t, uint64_t))(a2 + 184);
      swift_unknownObjectRetain();
      swift_retain();
      v20(sub_2219998D8, v19, v17, a2);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_221997DBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x227677094](v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (a1)
    {
      v10 = a1;
      v11 = a1;
      v12 = a1;
      v13 = sub_222596B28();
      v14 = sub_222597038();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v15 = 138412290;
        v17 = a1;
        v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_222597134();
        *v16 = v21;

        _os_log_impl(&dword_2218F0000, v13, v14, "Error activating RPClient: '%@'", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
        swift_arrayDestroy();
        MEMORY[0x227676FE0](v16, -1, -1);
        MEMORY[0x227676FE0](v15, -1, -1);

      }
      else
      {

      }
      sub_221998018(a3, a4, 120.0);

    }
    else
    {
      v18 = sub_222596B28();
      v19 = sub_222597020();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_2218F0000, v18, (os_log_type_t)v19, "RPClient activated successfully", v20, 2u);
        MEMORY[0x227676FE0](v20, -1, -1);
      }

    }
  }
}

uint64_t sub_221998018(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD v24[2];
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v7 = sub_222596BB8();
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_222596BD0();
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_222596BE8();
  v14 = *(_QWORD *)(v13 - 8);
  v26 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v24 - v18;
  v24[1] = *(_QWORD *)(v3 + OBJC_IVAR___HMDDiscoveryController_queue);
  sub_222596BDC();
  MEMORY[0x227673BF0](v17, a3);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a1;
  v21[4] = a2;
  aBlock[4] = sub_2219998BC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_221944BC8;
  aBlock[3] = &block_descriptor_22;
  v22 = _Block_copy(aBlock);
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_222596BC4();
  v30 = MEMORY[0x24BEE4AF8];
  sub_2219018CC((unint64_t *)&qword_25573F358, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F360);
  sub_22191CA68((unint64_t *)&qword_25573F368, &qword_25573F360);
  sub_222597170();
  MEMORY[0x227674058](v19, v12, v9, v22);
  _Block_release(v22);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
  v25(v19, v26);
  swift_release();
  return swift_release();
}

void sub_2219982F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  uint64_t ObjectType;
  uint64_t v18;

  v6 = sub_222596BF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v10 = MEMORY[0x227677094](a1 + 16);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = sub_222596B28();
    v13 = sub_222597020();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_2218F0000, v12, v13, "Restarting RPDevice discovery", v14, 2u);
      MEMORY[0x227676FE0](v14, -1, -1);
    }

    v15 = *(void **)&v11[OBJC_IVAR___HMDDiscoveryController_queue];
    *v9 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
    v16 = v15;
    LOBYTE(v15) = sub_222596C0C();
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v15 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(a3 + 192))(ObjectType, a3);
      sub_221997B50(a2, a3);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_221998498()
{
  return sub_2219984B4((uint64_t)&unk_24E76AC20, (uint64_t)sub_221999880, (uint64_t)&block_descriptor_13_0);
}

uint64_t sub_2219984B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_222596BB8();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_222596BD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)&v3[OBJC_IVAR___HMDDiscoveryController_queue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_221944BC8;
  aBlock[3] = a3;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_222596BC4();
  v20 = MEMORY[0x24BEE4AF8];
  sub_2219018CC((unint64_t *)&qword_25573F358, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F360);
  sub_22191CA68((unint64_t *)&qword_25573F368, &qword_25573F360);
  sub_222597170();
  MEMORY[0x227674070](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_221998698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_222596BF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_222596B28();
  v7 = sub_222597050();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2218F0000, v6, v7, "Became asserted", v8, 2u);
    MEMORY[0x227676FE0](v8, -1, -1);
  }

  *(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 1;
  if (*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    v9 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    *v5 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
    v10 = v9;
    LOBYTE(v9) = sub_222596C0C();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v9 & 1) != 0)
    {
      v11 = a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
      swift_beginAccess();
      v12 = *(_QWORD *)(v11 + 8);
      v13 = swift_unknownObjectRetain();
      sub_221997B50(v13, v12);
      swift_unknownObjectRelease();
      sub_2219971E8();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_221998840()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v15[2];
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v2 = sub_222596BB8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596BD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(_QWORD *)&v0[OBJC_IVAR___HMDDiscoveryController_queue];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v0;
  *(_QWORD *)(v11 + 24) = ObjectType;
  aBlock[4] = sub_221999878;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_221944BC8;
  aBlock[3] = &block_descriptor_7;
  v12 = _Block_copy(aBlock);
  v13 = v0;
  sub_222596BC4();
  v15[1] = MEMORY[0x24BEE4AF8];
  sub_2219018CC((unint64_t *)&qword_25573F358, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F360);
  sub_22191CA68((unint64_t *)&qword_25573F368, &qword_25573F360);
  sub_222597170();
  MEMORY[0x227674070](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_221998A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_222596BF4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_222596B28();
  v7 = sub_222597050();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2218F0000, v6, v7, "No more assertions", v8, 2u);
    MEMORY[0x227676FE0](v8, -1, -1);
  }

  *(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted) = 0;
  if (*(_BYTE *)(a1 + OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion) == 1)
  {
    sub_22199756C();
    v9 = (uint64_t *)(a1 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient);
    swift_beginAccess();
    v10 = *(void **)(a1 + OBJC_IVAR___HMDDiscoveryController_queue);
    v11 = v9[1];
    *v5 = v10;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
    swift_unknownObjectRetain();
    v12 = v10;
    v13 = sub_222596C0C();
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
    if ((v13 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 192))(ObjectType, v11);
      v15 = swift_unknownObjectRelease();
      v16 = (*(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory))(v15);
      v18 = v17;
      v19 = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v18 + 16))(v12, v19, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(0x60000400004, v19, v18);
      *v9 = v16;
      v9[1] = v18;
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_221998C4C(uint64_t a1)
{
  sub_221998C64(a1, "Added assertion %s: %s");
}

void sub_221998C58(uint64_t a1)
{
  sub_221998C64(a1, "Removed assertion %s: %s");
}

void sub_221998C64(uint64_t a1, const char *a2)
{
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  swift_retain_n();
  oslog = sub_222596B28();
  v4 = sub_22259702C();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC13HomeKitDaemon15AssertionHandle9Assertion_reason);
    v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC13HomeKitDaemon15AssertionHandle9Assertion_reason + 8);
    swift_bridgeObjectRetain();
    sub_221921364(v7, v8, &v12);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_222596678();
    sub_2219018CC((unint64_t *)&qword_25573F0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_222597530();
    sub_221921364(v9, v10, &v12);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, oslog, v4, a2, (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v6, -1, -1);
    MEMORY[0x227676FE0](v5, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

id DiscoveryController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DiscoveryController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DiscoveryController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiscoveryController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_221998FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void (*)(void *), uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  ObjectType = swift_getObjectType();
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v3 + 96);
  swift_retain();
  swift_retain();
  v8(sub_2219999E4, v7, ObjectType, v3);
  swift_release();
  swift_release();
  v9 = *(_QWORD *)(a2 + 8);
  v10 = swift_getObjectType();
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v9 + 72);
  swift_retain();
  v12(sub_2219999EC, v11, v10, v9);
  swift_release();
  v13 = *(_QWORD *)(a2 + 8);
  v14 = swift_getObjectType();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v13 + 120);
  swift_retain();
  v16(sub_2219999F4, v15, v14, v13);
  swift_release();
  v17 = *(_QWORD *)(a2 + 8);
  v18 = swift_getObjectType();
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v17 + 144);
  swift_retain();
  v20(sub_221999A14, v19, v18, v17);
  swift_release();
  v21 = *(_QWORD *)(a2 + 8);
  v22 = swift_getObjectType();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = *(void (**)(void (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v21 + 168);
  swift_retain();
  v24(sub_221999A34, v23, v22, v21);
  return swift_release();
}

id sub_22199924C(int a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (**v22)(void);
  uint64_t (*v23)(void);
  uint64_t (*v24)(void);
  uint64_t (**v25)(void);
  uint64_t (*v26)(void);
  uint64_t (*v27)(void);
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  void (*v33)(void);
  id v34;
  uint64_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  id v42;
  uint64_t *v43;
  objc_class *v44;
  id v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t (*v53)(void);
  uint64_t (*v54)(void);
  int v55;
  uint64_t (*v56)(void);
  uint64_t v57;
  objc_super v58;

  v56 = a5;
  v53 = a3;
  v54 = a4;
  v52 = a2;
  v55 = a1;
  v51 = sub_222597074();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22259705C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_222596BD0();
  MEMORY[0x24BDAC7A8](v11);
  v50 = OBJC_IVAR___HMDDiscoveryController_queue;
  v48 = sub_221917374(0, (unint64_t *)&qword_25573B458);
  v12 = v5;
  sub_222596BC4();
  v57 = MEMORY[0x24BEE4AF8];
  sub_2219018CC(&qword_25573B460, v10, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573B468);
  sub_22191CA68((unint64_t *)&qword_25573B470, &qword_25573B468);
  sub_222597170();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5750], v51);
  v13 = (void *)sub_22259708C();
  v15 = v49;
  v14 = v50;
  *(_QWORD *)(v49 + v50) = v13;
  sub_222596CF0();
  sub_222596B34();
  v12[OBJC_IVAR___HMDDiscoveryController_isDiscoveryAsserted] = 0;
  v16 = OBJC_IVAR___HMDDiscoveryController_visibleSFDevices;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573B478);
  v17 = swift_allocObject();
  v18 = MEMORY[0x24BEE4B00];
  *(_DWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)&v12[v16] = v17;
  v19 = OBJC_IVAR___HMDDiscoveryController_assertions;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573B480);
  v20 = swift_allocObject();
  v21 = MEMORY[0x24BEE4B08];
  *(_DWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)&v12[v19] = v20;
  v22 = (uint64_t (**)(void))&v12[OBJC_IVAR___HMDDiscoveryController_rapportDiscoveryClientFactory];
  v23 = v52;
  v24 = v53;
  *v22 = v52;
  v22[1] = v24;
  v25 = (uint64_t (**)(void))&v12[OBJC_IVAR___HMDDiscoveryController_sharingDiscoveryClientFactory];
  v26 = v54;
  v27 = v56;
  *v25 = v54;
  v25[1] = v27;
  v12[OBJC_IVAR___HMDDiscoveryController_discoveryNeedsAssertion] = v55;
  swift_retain();
  swift_retain();
  v28 = v13;
  v29 = v26();
  v31 = v30;
  ObjectType = swift_getObjectType();
  v33 = *(void (**)(void))(v31 + 16);
  v34 = v28;
  v33();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 88))(1, ObjectType, v31);

  v35 = (uint64_t *)&v12[OBJC_IVAR___HMDDiscoveryController_sfDiscoveryClient];
  *v35 = v29;
  v35[1] = v31;
  v36 = *(id *)(v15 + v14);
  v37 = v23();
  v39 = v38;
  v40 = swift_getObjectType();
  v41 = *(void (**)(void))(v39 + 16);
  v42 = v36;
  v41();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))(0x60000400004, v40, v39);

  v43 = (uint64_t *)&v12[OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient];
  *v43 = v37;
  v43[1] = v39;

  v44 = (objc_class *)type metadata accessor for DiscoveryController(0);
  v58.receiver = v12;
  v58.super_class = v44;
  v45 = objc_msgSendSuper2(&v58, sel_init);
  sub_22199610C();
  v46 = (uint64_t)v45 + OBJC_IVAR___HMDDiscoveryController_rpInfraWifiDiscoveryClient;
  swift_beginAccess();
  sub_221998FE8((uint64_t)v45, v46);
  swift_endAccess();

  return v45;
}

uint64_t sub_221999678()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_22199969C()
{
  uint64_t v0;

  return sub_22199687C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for AssertionHandle()
{
  return objc_opt_self();
}

uint64_t sub_2219996DC()
{
  return type metadata accessor for AssertionHandle.Assertion(0);
}

uint64_t type metadata accessor for AssertionHandle.Assertion(uint64_t a1)
{
  return sub_221926060(a1, qword_25573F878);
}

uint64_t sub_2219996F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596678();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_22199976C()
{
  return type metadata accessor for DiscoveryController(0);
}

uint64_t sub_221999774()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596B40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_221999828()
{
  return sub_2219018CC(&qword_25573F940, type metadata accessor for AssertionHandle.Assertion, (uint64_t)&unk_22268DA90);
}

uint64_t sub_221999854()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_221999878()
{
  uint64_t v0;

  sub_221998A30(*(_QWORD *)(v0 + 16));
}

void sub_221999880()
{
  uint64_t v0;

  sub_221998698(*(_QWORD *)(v0 + 16));
}

uint64_t sub_221999888()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2219998AC()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

void sub_2219998BC()
{
  uint64_t *v0;

  sub_2219982F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_2219998C8()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

void sub_2219998D8(void *a1)
{
  uint64_t *v1;

  sub_221997DBC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2219998E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_221999924(void *a1)
{
  sub_22199733C(a1);
}

void sub_22199992C(void *a1)
{
  uint64_t v1;

  sub_2219962F0(a1, v1, 1u);
}

void sub_221999948(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_221996294(a1, a2, v2);
}

void sub_221999950(void *a1)
{
  uint64_t v1;

  sub_2219962F0(a1, v1, 0);
}

uint64_t sub_22199996C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_221999990()
{
  return objectdestroy_18Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_18Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_2219999E4()
{
  uint64_t v0;

  sub_22199635C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_2219999EC()
{
  uint64_t v0;

  sub_221996488(v0);
}

void sub_2219999F4(void *a1)
{
  uint64_t v1;

  sub_221996554(a1, v1, "Device Found from RPClient: %@");
}

void sub_221999A14(void *a1)
{
  uint64_t v1;

  sub_221996554(a1, v1, "Device lost from RPClient: %@");
}

void sub_221999A34(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_2219966DC(a1, a2, v2);
}

uint64_t sub_221999AB4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_222597194();
    v5 = v4;
    v6 = sub_22259720C();
    v8 = MEMORY[0x22767419C](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_22199BE38(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_22199B27C(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_22199BE38(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_22199B4C4(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_221999BC0(void (*a1)(_QWORD *__return_ptr, _QWORD), uint64_t a2, id *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void (*v25)(_QWORD *__return_ptr, _QWORD);
  id *v26;
  unint64_t v27;
  _OWORD v28[14];
  uint64_t v29;
  _BYTE v30[232];
  _BYTE v31[232];
  _QWORD v32[30];
  id *v33;

  v4 = (unint64_t)a3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_20;
  v6 = *(_QWORD *)(((unint64_t)a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_2225973B0())
  {
    v27 = v4 & 0xC000000000000001;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v8 = 4;
    v25 = a1;
    v26 = (id *)v4;
    while (1)
    {
      v9 = v27 ? (id *)MEMORY[0x227674274](v8 - 4, v4) : (id *)*(id *)(v4 + 8 * v8);
      v4 = (unint64_t)v9;
      if (__OFADD__(v8 - 4, 1))
        break;
      v33 = v9;
      a1(v32, &v33);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v7;
      }

      sub_2219172F4((uint64_t)v32, (uint64_t)v30, &qword_25573F968);
      sub_2219172F4((uint64_t)v30, (uint64_t)v31, &qword_25573F968);
      if (sub_22199BA74((uint64_t)v31) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_2219919B8(0, v7[2] + 1, 1, v7);
        v11 = v7[2];
        v10 = v7[3];
        if (v11 >= v10 >> 1)
          v7 = sub_2219919B8((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
        sub_2219172F4((uint64_t)v30, (uint64_t)v28, &qword_25573F968);
        v7[2] = v11 + 1;
        v12 = &v7[29 * v11];
        v13 = v28[2];
        v14 = v28[1];
        *((_OWORD *)v12 + 2) = v28[0];
        *((_OWORD *)v12 + 3) = v14;
        *((_OWORD *)v12 + 4) = v13;
        v15 = v28[6];
        v16 = v28[4];
        v17 = v28[3];
        *((_OWORD *)v12 + 7) = v28[5];
        *((_OWORD *)v12 + 8) = v15;
        *((_OWORD *)v12 + 5) = v17;
        *((_OWORD *)v12 + 6) = v16;
        v18 = v28[10];
        v19 = v28[8];
        v20 = v28[7];
        *((_OWORD *)v12 + 11) = v28[9];
        *((_OWORD *)v12 + 12) = v18;
        *((_OWORD *)v12 + 9) = v20;
        *((_OWORD *)v12 + 10) = v19;
        v21 = v28[13];
        v22 = v28[12];
        v23 = v28[11];
        v12[32] = v29;
        *((_OWORD *)v12 + 14) = v22;
        *((_OWORD *)v12 + 15) = v21;
        *((_OWORD *)v12 + 13) = v23;
        a1 = v25;
      }
      v4 = (unint64_t)v26;
      if (v8 - 3 == v6)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
      ++v8;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

void *static PassCreation.passJSON(for:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4;
  void *result;
  _BYTE __src[424];

  result = (void *)sub_22199B54C(a1, a2, a3, (uint64_t)__src);
  if (!v4)
    return memcpy(a4, __src, 0x1A8uLL);
  return result;
}

_QWORD *sub_221999E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  int *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = sub_2225964E0();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_222596540();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomePassState(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v54 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v47 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v52 = (uint64_t)&v47 - v19;
  v20 = MEMORY[0x24BEE4AF8];
  v59 = MEMORY[0x24BEE4AF8];
  v21 = a1 + *(int *)(v7 + 60);
  v22 = (int *)type metadata accessor for HomePassData(0);
  v23 = (uint64_t *)(v21 + v22[13]);
  if (!v23[1])
    return (_QWORD *)v20;
  v24 = v22;
  if (*(_BYTE *)(v21 + v22[18]) != 1 || *(_QWORD *)(a2 + 40) != 1)
    return (_QWORD *)v20;
  v25 = v23[1];
  v47 = *v23;
  v26 = *(unsigned __int8 *)(v21 + v22[10]);
  sub_22199BE44(a1, (uint64_t)v9);
  if (v26 != 1)
  {
    sub_22193D67C((uint64_t)v9);
    goto LABEL_11;
  }
  v27 = *(_QWORD *)&v9[*(int *)(v7 + 60) + v24[9]];
  sub_22193D67C((uint64_t)v9);
  if (v27 == 5)
  {
LABEL_11:
    v32 = v52;
    v31 = v53;
    v28 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v52, 1, 1, v55);
    goto LABEL_12;
  }
  sub_222596528();
  v28 = v55;
  v29 = v56;
  sub_22259690C();
  sub_22199BED0((uint64_t)v15);
  if (v29)
  {
    swift_bridgeObjectRelease();
    return v15;
  }
  v57 = sub_222596624();
  v58 = v42;
  v44 = v48;
  v43 = v49;
  v45 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, *MEMORY[0x24BDCD7A0], v50);
  sub_2219344B4();
  v46 = v51;
  sub_222596534();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  swift_bridgeObjectRelease();
  v31 = v53;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v18, 0, 1, v28);
  v32 = v52;
  sub_2219172F4((uint64_t)v18, v52, &qword_25573F980);
LABEL_12:
  v15 = sub_221990A5C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v34 = v15[2];
  v33 = v15[3];
  if (v34 >= v33 >> 1)
    v15 = sub_221990A5C((_QWORD *)(v33 > 1), v34 + 1, 1, v15);
  v15[2] = v34 + 1;
  v35 = &v15[2 * v34];
  v35[4] = 0xD000000000000028;
  v35[5] = 0x80000002226205B0;
  v36 = sub_22199A82C(v47, v25, v32);
  sub_22198E72C(v36);
  v37 = v54;
  sub_22199BE88(v32, v54);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v37, 1, v28);
  sub_22199BED0(v37);
  if (v38 != 1)
  {
    v40 = v15[2];
    v39 = v15[3];
    if (v40 >= v39 >> 1)
      v15 = sub_221990A5C((_QWORD *)(v39 > 1), v40 + 1, 1, v15);
    v15[2] = v40 + 1;
    v41 = &v15[2 * v40];
    v41[4] = 0xD00000000000002ELL;
    v41[5] = 0x80000002226205E0;
  }
  sub_22199BED0(v32);
  return v15;
}

uint64_t sub_22199A348@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64x2_t v48;
  uint64_t v49;
  _BYTE v50[7];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[11];
  __int128 v56;
  __int128 v57;
  unint64_t v58;
  char v59;
  _BYTE v60[7];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64x2_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64x2_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  sub_22199AA90(a1, a2, (uint64_t)a3, &v72);
  v8 = v73;
  if (v73)
  {
    v44 = v82;
    v45 = v81;
    v46 = v84;
    v48 = v72;
    v9 = v75;
    v49 = v74;
    v11 = v76;
    v10 = v77;
    v12 = v78;
    v47 = v79;
    v38 = v80;
    v39 = v83;
    v13 = objc_msgSend(a1, sel_paymentType);
    if (v13 == (id)1004)
    {
      v40 = 0xE500000000000000;
      v14 = 0x6F72696C41;
    }
    else
    {
      if (v13 != (id)1003)
      {
        sub_22199BAB4(v48.i64[0], v48.i64[1], v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_22199BA8C((uint64_t)v55);
        goto LABEL_2;
      }
      v40 = 0xED00007373656363;
      v14 = 0x4164656966696E55;
    }
    v37 = v14;
    v41 = v9;
    v42 = v11;
    v43 = v10;
    v36 = a3[5];
    v15 = objc_msgSend(a1, sel_secureElementIdentifier);
    if (v15)
    {
      v16 = v15;
      v17 = sub_222596CF0();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    v72.i64[0] = v17;
    v72.i64[1] = v19;
    v35 = MEMORY[0x24BEE0D00];
    sub_22259690C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(a1, sel_applicationIdentifier, v35);
    if (v20)
    {
      v21 = v20;
      sub_222596CF0();

    }
    sub_22259690C();
    swift_bridgeObjectRelease();
    v22 = *a3;
    v23 = a3[1];
    swift_bridgeObjectRetain_n();
    v24 = sub_22199BD48(4uLL, v22, v23);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x227673D1C](v24, v26, v28, v30);
    v33 = v32;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F970);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_222688C60;
    *(_QWORD *)(v34 + 32) = v38;
    *(_QWORD *)(v34 + 40) = v45;
    *(_QWORD *)(v34 + 48) = v44;
    *(_BYTE *)(v34 + 56) = v39;
    *(_QWORD *)(v34 + 64) = v46;
    v55[0] = v37;
    v55[1] = v40;
    v55[2] = v36;
    v55[3] = v53;
    v55[4] = v54;
    v55[5] = v51;
    v55[6] = v52;
    v55[7] = v22;
    v55[8] = v23;
    v55[9] = v31;
    v55[10] = v33;
    v56 = xmmword_22268B340;
    v57 = xmmword_22268DB00;
    v58 = 0xE400000000000000;
    v59 = 0;
    *(_DWORD *)v60 = *(_DWORD *)v50;
    *(_DWORD *)&v60[3] = *(_DWORD *)&v50[3];
    v61 = 1;
    v62 = MEMORY[0x24BEE4AF8];
    v63 = v34;
    v64 = v48;
    v65 = v8;
    v66 = v49;
    v67 = v41;
    v68 = v42;
    v69 = v43;
    v70 = v12;
    v71 = v47;
    nullsub_1(v55);
  }
  else
  {
    sub_22199BA8C((uint64_t)v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_2:
  sub_2219172F4((uint64_t)v55, (uint64_t)&v72, &qword_25573F968);
  return sub_2219172F4((uint64_t)&v72, a4, &qword_25573F968);
}

uint64_t sub_22199A82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596540();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F610);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_222688C60;
  *(_QWORD *)(v13 + 32) = 0xD000000000000028;
  *(_QWORD *)(v13 + 40) = 0x80000002226205B0;
  *(_OWORD *)(v13 + 48) = xmmword_22268DB10;
  *(_QWORD *)(v13 + 64) = a1;
  *(_QWORD *)(v13 + 72) = a2;
  *(_QWORD *)(v13 + 80) = 0;
  *(_QWORD *)(v13 + 88) = 0;
  sub_22199BE88(a3, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRetain();
    sub_22199BED0((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_bridgeObjectRetain();
    v14 = sub_2225964EC();
    v16 = v15;
    v13 = (uint64_t)sub_2219918AC((_QWORD *)1, 2, 1, (_QWORD *)v13);
    *(_QWORD *)(v13 + 16) = 2;
    *(_QWORD *)(v13 + 96) = 0xD00000000000002ELL;
    *(_QWORD *)(v13 + 104) = 0x80000002226205E0;
    *(_QWORD *)(v13 + 112) = 0;
    *(_QWORD *)(v13 + 120) = 0;
    *(_QWORD *)(v13 + 128) = 0xD000000000000019;
    *(_QWORD *)(v13 + 136) = 0x8000000222620710;
    *(_QWORD *)(v13 + 144) = v14;
    *(_QWORD *)(v13 + 152) = v16;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v18 = *(_QWORD *)(v13 + 16);
  v17 = *(_QWORD *)(v13 + 24);
  if (v18 >= v17 >> 1)
    v13 = (uint64_t)sub_2219918AC((_QWORD *)(v17 > 1), v18 + 1, 1, (_QWORD *)v13);
  *(_QWORD *)(v13 + 16) = v18 + 1;
  v19 = (_QWORD *)(v13 + (v18 << 6));
  v19[4] = 0xD00000000000002DLL;
  v19[5] = 0x800000022261B9A0;
  v19[6] = 0xD000000000000011;
  v19[7] = 0x8000000222620670;
  v19[8] = 0;
  v19[9] = 0;
  v19[10] = 0xD000000000000076;
  v19[11] = 0x8000000222620690;
  return v13;
}

void sub_22199AA90(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64x2_t *a4@<X8>)
{
  id v8;
  uint64_t v9;
  int64x2_t v10;
  int64x2_t v11;
  char v12;
  int64x2_t v13;
  int64x2_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24[4];
  uint64_t v25;
  _OWORD v26[4];
  uint64_t v27;
  _QWORD v28[3];
  char v29;
  uint64_t v30;

  v8 = objc_msgSend(a1, sel_paymentType);
  if (v8 == (id)1004)
  {
    sub_22199AE18(a1, a2, a3, (uint64_t)v26);
    v22 = (int64x2_t)v26[1];
    v23 = (int64x2_t)v26[0];
    v20 = (int64x2_t)v26[3];
    v21 = (int64x2_t)v26[2];
    v18 = v27;
    sub_22199BB04(a2, (uint64_t)v28);
    v14 = v20;
    v13 = v21;
    v11 = v22;
    v10 = v23;
    v9 = v30;
    v12 = v29;
    v16 = v28[1];
    v15 = (void *)v28[2];
    v17 = v28[0];
    goto LABEL_5;
  }
  if (v8 == (id)1003)
  {
    sub_22199ABF8(a1, a3, v24);
    v9 = 0;
    v10 = v24[0];
    v11 = v24[1];
    v12 = 1;
    v13 = v24[2];
    v14 = v24[3];
    v15 = &unk_24E765978;
    v16 = 0xE900000000000069;
    v17 = 0x63742E322E706365;
    v18 = v25;
LABEL_5:
    *a4 = v10;
    a4[1] = v11;
    a4[2] = v13;
    a4[3] = v14;
    a4[4].i64[0] = v18;
    a4[4].i64[1] = v17;
    a4[5].i64[0] = v16;
    a4[5].i64[1] = (uint64_t)v15;
    a4[6].i8[0] = v12;
    a4[6].i64[1] = v9;
    return;
  }
  sub_2219344F8();
  swift_allocError();
  *(_QWORD *)v19 = 0xD000000000000018;
  *(_QWORD *)(v19 + 8) = 0x8000000222620530;
  *(_BYTE *)(v19 + 16) = 0;
  swift_willThrow();
}

void sub_22199ABF8(void *a1@<X0>, uint64_t a2@<X2>, int64x2_t *a3@<X8>)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64x2_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = objc_msgSend(a1, sel_subcredentials);
  if (v5)
  {
    v6 = v5;
    sub_22193453C();
    sub_22199BDF0();
    sub_222596F9C();

  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F978);
  sub_22259690C();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_221999AB4(v19);
  swift_bridgeObjectRelease();
  v10 = 0uLL;
  if (v11)
  {
    v12 = objc_msgSend(v11, sel_identifier, 0.0, v18);

    if (v12)
    {
      v11 = (void *)sub_222596CF0();
      v8 = v13;

      v7 = *(_QWORD *)(a2 + 40);
      type metadata accessor for HomePassState(0);
      type metadata accessor for HomePassData(0);
      v14 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
      v15 = objc_msgSend(v14, sel_hmf_hexadecimalRepresentation);

      v9 = sub_222596CF0();
      v17 = v16;

      v10 = vdupq_n_s64(1uLL);
      v10.i64[0] = v17;
    }
    else
    {
      v7 = 0;
      v11 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0uLL;
    }
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
  }
  a3->i64[0] = v7;
  a3->i64[1] = (uint64_t)v11;
  a3[1].i64[0] = v8;
  a3[1].i64[1] = v9;
  a3[2] = v10;
  a3[3].i64[1] = 0;
  a3[4].i64[0] = 0;
  a3[3].i64[0] = 0;
}

void sub_22199AE18(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7;
  void *v8;
  void *v9;
  int64x2_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = objc_msgSend(a1, sel_subcredentials);
  if (v7)
  {
    v8 = v7;
    sub_22193453C();
    sub_22199BDF0();
    sub_222596F9C();

  }
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F978);
  sub_22259690C();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_221999AB4(v56);
  swift_bridgeObjectRelease();
  v10 = 0uLL;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_identifier, 0.0, v48);

    if (v11)
    {
      v12 = sub_222596CF0();
      v14 = v13;

      v15 = a2 + *(int *)(type metadata accessor for HomePassState(0) + 60);
      v16 = type metadata accessor for HomePassData(0);
      v17 = 3;
      if ((*(_BYTE *)(v15 + *(int *)(v16 + 68)) & 1) == 0)
        v17 = 1;
      v53 = v17;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_222688C60;
      v19 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
      v20 = objc_msgSend(v19, sel_hmf_hexadecimalRepresentation);

      v21 = sub_222596CF0();
      v23 = v22;

      *(_QWORD *)(v18 + 32) = v21;
      *(_QWORD *)(v18 + 40) = v23;
      v52 = (void *)v18;
      v24 = *(_QWORD *)(v15 + *(int *)(v16 + 60));
      v25 = *(_QWORD *)(v24 + 16);
      v26 = MEMORY[0x24BEE4AF8];
      if (v25)
      {
        v49 = v14;
        v50 = a3;
        v51 = a4;
        v57 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_22191A494(0, v25, 0);
        v27 = (unint64_t *)(v24 + 40);
        do
        {
          v29 = *(v27 - 1);
          v28 = *v27;
          v31 = v27[1];
          v30 = v27[2];
          v54 = v31;
          v32 = v27[3];
          v33 = v27[4];
          sub_22190D5DC(v29, *v27);
          sub_22190D5DC(v31, v30);
          sub_22190D5DC(v32, v33);
          v34 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
          v35 = objc_msgSend(v34, sel_hmf_hexadecimalRepresentation);

          v36 = sub_222596CF0();
          v55 = v37;

          sub_22190D550(v29, v28);
          sub_22190D550(v54, v30);
          sub_22190D550(v32, v33);
          v39 = *(_QWORD *)(v57 + 16);
          v38 = *(_QWORD *)(v57 + 24);
          if (v39 >= v38 >> 1)
            sub_22191A494(v38 > 1, v39 + 1, 1);
          v27 += 6;
          *(_QWORD *)(v57 + 16) = v39 + 1;
          v40 = v57 + 16 * v39;
          *(_QWORD *)(v40 + 32) = v36;
          *(_QWORD *)(v40 + 40) = v55;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        a3 = v50;
        a4 = v51;
        v14 = v49;
        v44 = v53;
        v26 = v57;
      }
      else
      {
        v44 = v53;
      }
      sub_22198E5DC(v26);
      v9 = v52;
      v41 = *(_QWORD *)(a3 + 40);
      v45 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
      v46 = objc_msgSend(v45, sel_hmf_hexadecimalRepresentation);

      v42 = sub_222596CF0();
      v11 = v47;

      v10 = vdupq_n_s64(0x6F72696C61uLL);
      v10.i64[0] = v44;
      v43 = 0xE500000000000000;
    }
    else
    {
      v41 = 0;
      v12 = 0;
      v14 = 0;
      v42 = 0;
      v43 = 0;
      v9 = 0;
      v10 = 0uLL;
    }
  }
  else
  {
    v41 = 0;
    v12 = 0;
    v14 = 0;
    v42 = 0;
    v11 = 0;
    v43 = 0;
  }
  *(_QWORD *)a4 = v41;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = v14;
  *(_QWORD *)(a4 + 24) = v42;
  *(_QWORD *)(a4 + 32) = v11;
  *(int64x2_t *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 56) = v43;
  *(_QWORD *)(a4 + 64) = v9;
}

void sub_22199B27C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_2225971B8() == *(_DWORD *)(a4 + 36))
      {
        sub_2225971C4();
        sub_22193453C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_2225970E0();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_2225970EC();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_2225970EC();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2276741D8](a1, a2, v7);
  sub_22193453C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_22199B4C4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22199B54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;

  result = (uint64_t)sub_221999E70(a1, a2);
  if (!v4)
  {
    v11 = result;
    v12 = v10;
    MEMORY[0x24BDAC7A8](result);
    v32[2] = a1;
    v32[3] = a2;
    v13 = sub_221999BC0((void (*)(_QWORD *__return_ptr, _QWORD))sub_22199BA1C, (uint64_t)v32, a3);
    if (!v13[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2219344F8();
      swift_allocError();
      *(_OWORD *)v20 = xmmword_22268DB40;
      *(_BYTE *)(v20 + 16) = 3;
      return swift_willThrow();
    }
    v38 = v13;
    v14 = a1 + *(int *)(type metadata accessor for HomePassState(0) + 60);
    v15 = type metadata accessor for HomePassData(0);
    v16 = (uint64_t *)(v14 + *(int *)(v15 + 32));
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(v14 + *(int *)(v15 + 48));
    if (v19 > 14935010)
    {
      if (v19 != 14935011)
      {
        if (v19 == 15521450)
        {
          v36 = 0xE400000000000000;
          v37 = 0x8000000222620410;
          v21 = 1684828007;
LABEL_11:
          v35 = v21;
          goto LABEL_15;
        }
LABEL_10:
        v36 = 0xE300000000000000;
        v37 = 0x80000002226203F0;
        v21 = 7233908;
        goto LABEL_11;
      }
      v22 = 0x8000000222620430;
      v35 = 0x7265766C6973;
      v23 = 0xE600000000000000;
    }
    else
    {
      if (v19)
        goto LABEL_10;
      v22 = 0x8000000222620450;
      v35 = 0x6B63616C62;
      v23 = 0xE500000000000000;
    }
    v36 = v23;
    v37 = v22;
LABEL_15:
    v24 = *(_BYTE *)(a2 + 48) & 1;
    v25 = *(_QWORD *)(a2 + 8);
    v33 = *(_QWORD *)a2;
    v34 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F958);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_222688C60;
    *(_QWORD *)(v26 + 32) = 0x656D614E656D6F68;
    *(_QWORD *)(v26 + 40) = 0xE800000000000000;
    *(_QWORD *)(v26 + 48) = v17;
    *(_QWORD *)(v26 + 56) = v18;
    if (*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (*(_QWORD *)(v11 + 16))
      {
LABEL_17:
        __swift_instantiateConcreteTypeFromMangledName(&qword_25573F960);
        v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_222688C00;
        *(_QWORD *)(v27 + 32) = &unk_24E7658F0;
        *(_QWORD *)(v27 + 40) = 0;
        *(_BYTE *)(v27 + 48) = 1;
        *(_QWORD *)(v27 + 56) = 0;
        *(_QWORD *)(v27 + 64) = 0;
        *(_QWORD *)(v27 + 72) = v11;
        *(_QWORD *)(v27 + 80) = 1;
        *(_BYTE *)(v27 + 88) = 0;
        *(_OWORD *)(v27 + 96) = xmmword_22268DB20;
LABEL_20:
        result = sub_222596CF0();
        *(_QWORD *)a4 = result;
        *(_QWORD *)(a4 + 8) = v28;
        *(_QWORD *)(a4 + 16) = v33;
        *(_QWORD *)(a4 + 24) = v25;
        strcpy((char *)(a4 + 32), "appleHomeKey");
        *(_BYTE *)(a4 + 45) = 0;
        *(_WORD *)(a4 + 46) = -5120;
        *(_QWORD *)(a4 + 48) = v17;
        *(_QWORD *)(a4 + 56) = v18;
        v29 = v36;
        *(_QWORD *)(a4 + 64) = v35;
        *(_QWORD *)(a4 + 72) = v29;
        *(_QWORD *)(a4 + 80) = v34;
        *(_OWORD *)(a4 + 88) = xmmword_22268DB30;
        *(_QWORD *)(a4 + 104) = 0xE400000000000000;
        *(_QWORD *)(a4 + 112) = 0x504B393539593835;
        *(_QWORD *)(a4 + 120) = 0xEA00000000004554;
        *(_QWORD *)(a4 + 128) = 0xD000000000000030;
        *(_QWORD *)(a4 + 136) = 0x800000022261BA50;
        *(_QWORD *)(a4 + 144) = 1127498050;
        *(_QWORD *)(a4 + 152) = 0xE400000000000000;
        *(_QWORD *)(a4 + 160) = &unk_24E765920;
        *(_QWORD *)(a4 + 168) = 0xD000000000000010;
        *(_QWORD *)(a4 + 176) = 0x800000022261BA90;
        *(_QWORD *)(a4 + 184) = 0xD000000000000012;
        *(_QWORD *)(a4 + 192) = v37;
        *(_QWORD *)(a4 + 200) = 0xD000000000000010;
        *(_QWORD *)(a4 + 208) = 0x800000022261BAB0;
        *(_QWORD *)(a4 + 216) = 1701670728;
        *(_QWORD *)(a4 + 224) = 0xE400000000000000;
        *(_BYTE *)(a4 + 232) = 0;
        *(_QWORD *)(a4 + 240) = 7105633;
        *(_QWORD *)(a4 + 248) = 0xE300000000000000;
        *(_QWORD *)(a4 + 256) = 0xD000000000000033;
        *(_QWORD *)(a4 + 264) = 0x800000022261BAD0;
        *(_QWORD *)(a4 + 272) = 0xD000000000000013;
        *(_QWORD *)(a4 + 280) = 0x800000022261BB10;
        *(_WORD *)(a4 + 288) = 0;
        *(_QWORD *)(a4 + 296) = 0;
        *(_QWORD *)(a4 + 304) = 0;
        *(_QWORD *)(a4 + 312) = v26;
        *(_QWORD *)(a4 + 320) = v12;
        v30 = v38;
        *(_QWORD *)(a4 + 328) = v27;
        *(_QWORD *)(a4 + 336) = v30;
        v31 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(a4 + 344) = 0;
        *(_QWORD *)(a4 + 352) = v31;
        *(_BYTE *)(a4 + 360) = 0;
        *(_QWORD *)(a4 + 368) = 0x4E746361746E6F63;
        *(_QWORD *)(a4 + 376) = 0xEB00000000656D61;
        *(_WORD *)(a4 + 384) = 0;
        *(_BYTE *)(a4 + 386) = 0;
        *(_QWORD *)(a4 + 392) = 0xD000000000000010;
        *(_QWORD *)(a4 + 400) = 0x800000022261BA90;
        *(_QWORD *)(a4 + 408) = 0x737365636341;
        *(_QWORD *)(a4 + 416) = 0xE600000000000000;
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = 0;
      if (*(_QWORD *)(v11 + 16))
        goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    v27 = 0;
    goto LABEL_20;
  }
  return result;
}

ValueMetadata *type metadata accessor for PassCreation()
{
  return &type metadata for PassCreation;
}

uint64_t sub_22199BA1C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _BYTE v5[232];

  sub_22199A348(*a1, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), (uint64_t)v5);
  return sub_2219172F4((uint64_t)v5, a2, &qword_25573F968);
}

uint64_t sub_22199BA74(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_22199BA8C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 224) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_22199BAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22199BB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v3 = a1 + *(int *)(type metadata accessor for HomePassState(0) + 60);
  result = type metadata accessor for HomePassData(0);
  v5 = *(_QWORD *)(v3 + *(int *)(result + 60));
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v28 = a2;
    v33 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22191A82C(0, v6, 0);
    v7 = v33;
    v8 = (unint64_t *)(v5 + 40);
    do
    {
      v31 = v7;
      v32 = v6;
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = v8[1];
      v12 = v8[2];
      v13 = v8[3];
      v14 = v8[4];
      sub_22190D5DC(v9, *v8);
      sub_22190D5DC(v11, v12);
      sub_22190D5DC(v13, v14);
      v15 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
      v16 = objc_msgSend(v15, sel_hmf_hexadecimalRepresentation);

      v17 = sub_222596CF0();
      v29 = v18;
      v30 = v17;

      v19 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
      v20 = objc_msgSend(v19, sel_hmf_hexadecimalRepresentation);

      v21 = sub_222596CF0();
      v23 = v22;

      sub_22190D550(v9, v10);
      v24 = v12;
      v7 = v31;
      sub_22190D550(v11, v24);
      sub_22190D550(v13, v14);
      v26 = *(_QWORD *)(v31 + 16);
      v25 = *(_QWORD *)(v31 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_22191A82C(v25 > 1, v26 + 1, 1);
        v7 = v31;
      }
      v8 += 6;
      *(_QWORD *)(v7 + 16) = v26 + 1;
      v27 = v7 + 56 * v26;
      *(_QWORD *)(v27 + 32) = v30;
      *(_QWORD *)(v27 + 40) = v29;
      *(_OWORD *)(v27 + 48) = xmmword_22268DB50;
      *(_QWORD *)(v27 + 64) = 0xE900000000000031;
      *(_QWORD *)(v27 + 72) = v21;
      *(_QWORD *)(v27 + 80) = v23;
      v6 = v32 - 1;
    }
    while (v32 != 1);
    result = swift_bridgeObjectRelease();
    a2 = v28;
  }
  *(_QWORD *)a2 = 0x63742E322E706365;
  *(_QWORD *)(a2 + 8) = 0xE900000000000069;
  *(_QWORD *)(a2 + 16) = &unk_24E765948;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = v7;
  return result;
}

unint64_t sub_22199BD48(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_222596D44();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_222596DA4();
  }
  __break(1u);
  return result;
}

unint64_t sub_22199BDF0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_25573CDF0;
  if (!qword_25573CDF0)
  {
    v1 = sub_22193453C();
    result = MEMORY[0x227676F2C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25573CDF0);
  }
  return result;
}

uint64_t sub_22199BE38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_22199BE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HomePassState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22199BE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22199BED0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22199BF30()
{
  void *v0;
  unint64_t v2;

  if ((objc_msgSend(v0, sel_isAccessPolicySet) & 1) != 0)
    return ((unint64_t)objc_msgSend(v0, sel_userAccessPolicy) >> 1) & 1;
  v2 = (unint64_t)objc_msgSend(v0, sel_privilege);
  if (v2 >= 5)
    return 0;
  else
    return (0x13u >> v2) & 1;
}

id sub_22199C1EC(void *a1)
{
  id result;
  void *v2;

  result = objc_msgSend(a1, sel_privilege);
  if (result)
  {
    v2 = result;
    sub_222596FE4();

    return 0;
  }
  return result;
}

uint64_t _s5StateVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  int v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5StateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_22199C484(uint64_t *a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F990);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22268DB70;
  v4 = *a1;
  if (*a1 && v4 != *(_QWORD *)v1)
  {
    *(_QWORD *)v1 = v4;
    KeyPath = swift_getKeyPath();
  }
  else
  {
    KeyPath = 0;
  }
  *(_QWORD *)(inited + 32) = KeyPath;
  v6 = a1[1];
  if (v6 && v6 != *(_QWORD *)(v1 + 8))
  {
    *(_QWORD *)(v1 + 8) = v6;
    v7 = swift_getKeyPath();
  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)(inited + 40) = v7;
  v8 = a1[2];
  if (v8 && v8 != *(_QWORD *)(v1 + 16))
  {
    *(_QWORD *)(v1 + 16) = v8;
    v9 = swift_getKeyPath();
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(inited + 48) = v9;
  v10 = a1[3];
  if (v10 && v10 != *(_QWORD *)(v1 + 24))
  {
    *(_QWORD *)(v1 + 24) = v10;
    v11 = swift_getKeyPath();
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)(inited + 56) = v11;
  if ((*((_BYTE *)a1 + 36) & 1) != 0
    || (v13 = *((float *)a1 + 8), (*(_BYTE *)(v1 + 36) & 1) == 0)
    && *MEMORY[0x24BDD7AF0] >= vabds_f32(v13, *(float *)(v1 + 32)))
  {
    v12 = 0;
  }
  else
  {
    *(float *)(v1 + 32) = v13;
    *(_BYTE *)(v1 + 36) = 0;
    v12 = swift_getKeyPath();
  }
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = sub_22199C874(a1[5], a1[6]);
  sub_222596E58();
  v22 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(inited + 32))
  {
    v14 = swift_retain();
    MEMORY[0x227673E0C](v14);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  if (*(_QWORD *)(inited + 40))
  {
    v15 = swift_retain();
    MEMORY[0x227673E0C](v15);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  if (*(_QWORD *)(inited + 48))
  {
    v16 = swift_retain();
    MEMORY[0x227673E0C](v16);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  if (*(_QWORD *)(inited + 56))
  {
    v17 = swift_retain();
    MEMORY[0x227673E0C](v17);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  if (*(_QWORD *)(inited + 64))
  {
    v18 = swift_retain();
    MEMORY[0x227673E0C](v18);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  if (*(_QWORD *)(inited + 72))
  {
    v19 = swift_retain();
    MEMORY[0x227673E0C](v19);
    if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_222596E64();
    sub_222596E88();
    sub_222596E58();
  }
  swift_bridgeObjectRelease();
  v20 = sub_2219B7370(v22);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_22199C874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  BOOL v6;

  if (!a2)
    return 0;
  v5 = *(_QWORD *)(v2 + 48);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 40) == a1 && v5 == a2;
    if (v6 || (sub_2225976E0() & 1) != 0)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_getKeyPath();
}

uint64_t sub_22199C904()
{
  uint64_t v0;
  _BYTE v2[16];
  uint64_t v3;
  unint64_t v4;
  _QWORD v5[2];
  _BYTE v6[8];

  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_22259726C();
  v3 = 0;
  v4 = 0xE000000000000000;
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_2219172F4(v0 + 32, (uint64_t)v6, &qword_25573F988);
  sub_2219172F4((uint64_t)v6, (uint64_t)v5, &qword_25573F988);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F988);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_2219172F4(v0 + 40, (uint64_t)v5, (uint64_t *)&unk_25573DA10);
  sub_2219172F4((uint64_t)v5, (uint64_t)v2, (uint64_t *)&unk_25573DA10);
  sub_221927104(v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573DA10);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22199CD60()
{
  return sub_22199C904();
}

unint64_t sub_22199CDA0()
{
  return 0xD000000000000016;
}

uint64_t sub_22199CDBC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = sub_2219A0724(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22199CE1C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  void *v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t i;
  unint64_t v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t j;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t k;
  void *v97;
  uint64_t m;
  void *v99;
  id v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  char v115;
  unint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t result;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  char v135;
  uint64_t v136;
  id v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  id v148;
  char v149;
  uint64_t v150;
  id v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint8_t *v159;
  _QWORD *v160;
  NSObject *v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  unint64_t *v169;
  unint64_t *v170;
  uint64_t ObjectType;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  id v181;
  id v182;
  uint64_t v183;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v173 = 0;
  v4 = sub_222596B40();
  v166 = *(_QWORD *)(v4 - 8);
  v167 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v168 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_appleMediaAccessories);
  if (!v6)
  {
LABEL_216:
    __break(1u);
    goto LABEL_217;
  }
  v7 = v6;
  v180 = sub_221917374(0, (unint64_t *)&qword_25573FFF0);
  v8 = sub_222596E40();

  v9 = sub_2219B734C(v8);
  swift_bridgeObjectRelease();
  v10 = (unint64_t *)MEMORY[0x24BEE4B08];
  v176 = a1;
  v172 = MEMORY[0x24BEE4B08];
  if ((v9 & 0xC000000000000001) != 0)
  {
    v183 = MEMORY[0x24BEE4B08];
    swift_bridgeObjectRetain();
    sub_2225971A0();
    v11 = (void *)sub_2225971F4();
    if (v11)
    {
      v179 = (unint64_t)v2;
      do
      {
        v181 = v11;
        swift_dynamicCast();
        v12 = objc_msgSend(v182, sel_isHomePod);
        v13 = (unint64_t)v182;
        if (v12)
        {
          v14 = v183;
          v15 = *(_QWORD *)(v183 + 16);
          if (*(_QWORD *)(v183 + 24) <= v15)
          {
            sub_2219B02A8(v15 + 1);
            v14 = v183;
          }
          v16 = sub_2225970E0();
          v17 = v14 + 56;
          v18 = -1 << *(_BYTE *)(v14 + 32);
          v19 = v16 & ~v18;
          v20 = v19 >> 6;
          if (((-1 << v19) & ~*(_QWORD *)(v14 + 56 + 8 * (v19 >> 6))) != 0)
          {
            v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v14 + 56 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v22 = 0;
            v23 = (unint64_t)(63 - v18) >> 6;
            do
            {
              if (++v20 == v23 && (v22 & 1) != 0)
              {
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
                goto LABEL_83;
              }
              v24 = v20 == v23;
              if (v20 == v23)
                v20 = 0;
              v22 |= v24;
              v25 = *(_QWORD *)(v17 + 8 * v20);
            }
            while (v25 == -1);
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          }
          *(_QWORD *)(v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v21) = v13;
          ++*(_QWORD *)(v14 + 16);
        }
        else
        {

        }
        v11 = (void *)sub_2225971F4();
      }
      while (v11);
      v170 = (unint64_t *)v183;
      v10 = (unint64_t *)MEMORY[0x24BEE4B08];
      v2 = (void *)v179;
    }
    else
    {
      v170 = v10;
    }
    swift_release();
    v183 = (uint64_t)v10;
    sub_2225971A0();
    v28 = (void *)sub_2225971F4();
    if (v28)
    {
      do
      {
        v181 = v28;
        swift_dynamicCast();
        v29 = objc_msgSend(v182, sel_isAppleTV);
        v13 = (unint64_t)v182;
        if ((v29 & 1) != 0)
        {
          v30 = v183;
          v31 = *(_QWORD *)(v183 + 16);
          if (*(_QWORD *)(v183 + 24) <= v31)
          {
            sub_2219B02A8(v31 + 1);
            v30 = v183;
          }
          v32 = sub_2225970E0();
          v33 = v30 + 56;
          v34 = -1 << *(_BYTE *)(v30 + 32);
          v35 = v32 & ~v34;
          v36 = v35 >> 6;
          if (((-1 << v35) & ~*(_QWORD *)(v30 + 56 + 8 * (v35 >> 6))) != 0)
          {
            v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v30 + 56 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v38 = 0;
            v39 = (unint64_t)(63 - v34) >> 6;
            do
            {
              if (++v36 == v39 && (v38 & 1) != 0)
                goto LABEL_82;
              v40 = v36 == v39;
              if (v36 == v39)
                v36 = 0;
              v38 |= v40;
              v41 = *(_QWORD *)(v33 + 8 * v36);
            }
            while (v41 == -1);
            v37 = __clz(__rbit64(~v41)) + (v36 << 6);
          }
          *(_QWORD *)(v33 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
          *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v37) = v13;
          ++*(_QWORD *)(v30 + 16);
        }
        else
        {

        }
        v28 = (void *)sub_2225971F4();
      }
      while (v28);
      v169 = (unint64_t *)v183;
    }
    else
    {
      v169 = v10;
    }
    swift_release();
  }
  else
  {
    v26 = swift_bridgeObjectRetain();
    v27 = v173;
    v170 = sub_22199FBD4(v26, (SEL *)&selRef_isHomePod);
    v169 = sub_22199FBD4(v9, (SEL *)&selRef_isAppleTV);
    v173 = v27;
  }
  v42 = objc_msgSend(v2, sel_mediaSystems);
  if (!v42)
  {
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  v43 = v42;
  sub_221917374(0, &qword_25573F998);
  v13 = sub_222596E40();

  v183 = MEMORY[0x24BEE4AF8];
  if (v13 >> 62)
    goto LABEL_85;
  v44 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v44)
  {
    v45 = 0;
    v178 = v13;
    v179 = v13 & 0xC000000000000001;
    v174 = v13 + 32;
    v175 = v13 & 0xFFFFFFFFFFFFFF8;
    v177 = v44;
    while (1)
    {
      if (v179)
      {
        v46 = (id)MEMORY[0x227674274](v45, v13);
      }
      else
      {
        if (v45 >= *(_QWORD *)(v175 + 16))
          goto LABEL_84;
        v46 = *(id *)(v174 + 8 * v45);
      }
      v47 = v46;
      if (__OFADD__(v45++, 1))
        break;
      v49 = objc_msgSend(v46, sel_accessories);
      if (v49)
      {
        v50 = v49;
        sub_221917374(0, &qword_25573F9A0);
        v51 = sub_222596E40();

        v182 = (id)MEMORY[0x24BEE4AF8];
        if ((unint64_t)v51 >> 62)
        {
          if (v51 < 0)
            v13 = v51;
          else
            v13 = v51 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          sub_2225973B0();
          swift_bridgeObjectRelease();
          sub_222597308();
          swift_bridgeObjectRetain();
          v52 = sub_2225973B0();
          swift_bridgeObjectRelease();
          if (v52)
          {
LABEL_58:
            if ((v51 & 0xC000000000000001) != 0)
            {
              v13 = 0;
              while (1)
              {
                MEMORY[0x227674274](v13, v51);
                v53 = v13 + 1;
                if (__OFADD__(v13, 1))
                  break;
                objc_opt_self();
                if (!swift_dynamicCastObjCClass())
                {
                  swift_unknownObjectRelease();
                  goto LABEL_70;
                }
                sub_2225972E4();
                sub_222597314();
                sub_222597320();
                sub_2225972F0();
                ++v13;
                if (v53 == v52)
                  goto LABEL_68;
              }
              __break(1u);
            }
            else
            {
              v54 = 0;
              while (1)
              {
                v55 = v54 + 1;
                if (__OFADD__(v54, 1))
                  break;
                v56 = *(void **)(v51 + 32 + 8 * v54);
                objc_opt_self();
                v57 = swift_dynamicCastObjCClass();
                if (!v57)
                {
LABEL_70:
                  v13 = v178;

                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_71;
                }
                v13 = v57;
                v58 = v56;
                sub_2225972E4();
                sub_222597314();
                sub_222597320();
                sub_2225972F0();
                ++v54;
                if (v55 == v52)
                  goto LABEL_68;
              }
            }
            __break(1u);
            goto LABEL_81;
          }
        }
        else
        {
          v13 = v51 & 0xFFFFFFFFFFFFFF8;
          sub_222597308();
          v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v52)
            goto LABEL_58;
        }
LABEL_68:
        swift_release();
        swift_bridgeObjectRelease();
        sub_2225972E4();
        sub_222597314();
        sub_222597320();
        sub_2225972F0();
        v13 = v178;
LABEL_71:
        v44 = v177;
        if (v45 == v177)
        {
LABEL_78:
          swift_bridgeObjectRelease();
          v59 = v183;
          goto LABEL_87;
        }
      }
      else
      {

        if (v45 == v44)
          goto LABEL_78;
      }
    }
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
    v44 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v59 = MEMORY[0x24BEE4AF8];
LABEL_87:
  v183 = MEMORY[0x24BEE4AF8];
  if ((v59 & 0x8000000000000000) != 0 || (v59 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v60 = sub_2225973B0();
    if (v60)
      goto LABEL_90;
LABEL_103:
    swift_release();
    v69 = MEMORY[0x24BEE4AF8];
    goto LABEL_104;
  }
  v60 = *(_QWORD *)(v59 + 16);
  swift_retain();
  if (!v60)
    goto LABEL_103;
LABEL_90:
  if (v60 < 1)
    goto LABEL_214;
  for (i = 0; i != v60; ++i)
  {
    if ((v59 & 0xC000000000000001) != 0)
      v63 = (id)MEMORY[0x227674274](i, v59);
    else
      v63 = *(id *)(v59 + 8 * i + 32);
    v64 = v63;
    v65 = objc_msgSend(v63, sel_accessories);
    if (v65)
    {
      v66 = v65;
      sub_221917374(0, &qword_25573F9A0);
      v67 = sub_222596E40();

      v68 = sub_22199E29C(v67);
      swift_bridgeObjectRelease();

      if (v68)
        v62 = v68;
      else
        v62 = MEMORY[0x24BEE4AF8];
    }
    else
    {

      v62 = MEMORY[0x24BEE4AF8];
    }
    sub_22198E5C4(v62);
  }
  swift_release();
  v69 = v183;
LABEL_104:
  v70 = sub_2219B734C(v69);
  swift_bridgeObjectRelease();
  v71 = sub_2219A5D90(v70, (uint64_t)v170);
  swift_bridgeObjectRelease();
  v72 = v169;
  v73 = swift_retain();
  v74 = v173;
  sub_22199E66C(v73);
  v75 = (uint64_t)v72;
  v77 = v76;
  if ((v75 & 0xC000000000000001) != 0)
  {
    v78 = v75;
    swift_bridgeObjectRetain();
    v79 = sub_2225971D0();
    v80 = sub_2219AFC48(v78, v79);
    swift_release();
    v75 = v80;
  }
  v177 = sub_2219B372C(v77, v75);
  swift_retain();
  swift_bridgeObjectRetain();
  v178 = sub_22199CDBC(v77, v59, v71, ObjectType);
  v175 = v74;
  swift_bridgeObjectRelease();
  v183 = MEMORY[0x24BEE4AF8];
  if (v60)
  {
    for (j = 0; j != v60; ++j)
    {
      if ((v59 & 0xC000000000000001) != 0)
        v82 = (id)MEMORY[0x227674274](j, v59);
      else
        v82 = *(id *)(v59 + 8 * j + 32);
      v83 = v82;
      v84 = objc_msgSend(v82, sel_audioDestination);

      if (v84)
      {

      }
      else
      {
        sub_2225972E4();
        sub_222597314();
        sub_222597320();
        sub_2225972F0();
      }
    }
    swift_release();
    v85 = v183;
    if (v183 < 0)
      goto LABEL_149;
  }
  else
  {
    swift_release();
    v85 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_149;
  }
  if ((v85 & 0x4000000000000000) != 0)
    goto LABEL_149;
  v86 = *(_QWORD *)(v85 + 16);
  while (v86)
  {
    v183 = MEMORY[0x24BEE4AF8];
    sub_22191A744(0, v86 & ~(v86 >> 63), 0);
    if (v86 < 0)
      goto LABEL_215;
    v174 = v71;
    v71 = 0;
    v87 = v183;
    v179 = v85 + 32;
    while (v71 != v86)
    {
      if ((v85 & 0xC000000000000001) != 0)
        v88 = (id)MEMORY[0x227674274](v71, v85);
      else
        v88 = *(id *)(v179 + 8 * v71);
      v89 = v88;
      v90 = objc_msgSend(v88, sel_accessories);
      if (!v90)
      {
        v93 = MEMORY[0x24BEE4AF8];
        v94 = MEMORY[0x24BEE4AF8] >> 62;
        if (!(MEMORY[0x24BEE4AF8] >> 62))
          goto LABEL_130;
LABEL_140:
        swift_bridgeObjectRetain();
        sub_2225973B0();
        swift_bridgeObjectRelease();
        goto LABEL_130;
      }
      v91 = v90;
      sub_221917374(0, &qword_25573F9A0);
      v92 = sub_222596E40();

      v93 = sub_22199E29C(v92);
      swift_bridgeObjectRelease();
      if (!v93)
        v93 = MEMORY[0x24BEE4AF8];
      v94 = v93 >> 62;
      if (v93 >> 62)
        goto LABEL_140;
LABEL_130:
      sub_2219A06CC();
      v182 = (id)sub_222596FB4();
      if (v94)
      {
        swift_bridgeObjectRetain();
        v95 = sub_2225973B0();
        swift_bridgeObjectRelease();
        if (v95)
        {
LABEL_134:
          if (v95 < 1)
            goto LABEL_148;
          if ((v93 & 0xC000000000000001) != 0)
          {
            for (k = 0; k != v95; ++k)
            {
              v97 = (void *)MEMORY[0x227674274](k, v93);
              sub_2219AEFAC(&v181, v97);

            }
          }
          else
          {
            for (m = 0; m != v95; ++m)
            {
              v99 = *(void **)(v93 + 8 * m + 32);
              sub_2219AEFAC(&v181, v99);

            }
          }
        }
      }
      else
      {
        v95 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v95)
          goto LABEL_134;
      }

      swift_bridgeObjectRelease();
      v100 = v182;
      v183 = v87;
      v102 = *(_QWORD *)(v87 + 16);
      v101 = *(_QWORD *)(v87 + 24);
      if (v102 >= v101 >> 1)
      {
        sub_22191A744(v101 > 1, v102 + 1, 1);
        v87 = v183;
      }
      ++v71;
      *(_QWORD *)(v87 + 16) = v102 + 1;
      *(_QWORD *)(v87 + 8 * v102 + 32) = v100;
      if (v71 == v86)
      {
        swift_release();
        v71 = v174;
        goto LABEL_151;
      }
    }
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    swift_bridgeObjectRetain();
    v86 = sub_2225973B0();
    swift_release();
  }
  swift_release();
  v87 = MEMORY[0x24BEE4AF8];
LABEL_151:
  v103 = v176;
  if ((v71 & 0xC000000000000001) == 0)
  {
    v119 = v175;
    v172 = sub_22199FD44(v71);
    v175 = v119;
    goto LABEL_173;
  }
  v183 = MEMORY[0x24BEE4B08];
  sub_2225971A0();
  v104 = (void *)sub_2225971F4();
  if (!v104)
    goto LABEL_171;
  while (2)
  {
    v181 = v104;
    swift_dynamicCast();
    v105 = objc_msgSend(v182, sel_audioDestination);

    v106 = v182;
    if (v105)
    {

      goto LABEL_155;
    }
    v107 = v183;
    v108 = *(_QWORD *)(v183 + 16);
    if (*(_QWORD *)(v183 + 24) <= v108)
    {
      sub_2219B02A8(v108 + 1);
      v107 = v183;
    }
    v109 = sub_2225970E0();
    v110 = v107 + 56;
    v111 = -1 << *(_BYTE *)(v107 + 32);
    v112 = v109 & ~v111;
    v113 = v112 >> 6;
    if (((-1 << v112) & ~*(_QWORD *)(v107 + 56 + 8 * (v112 >> 6))) != 0)
    {
      v114 = __clz(__rbit64((-1 << v112) & ~*(_QWORD *)(v107 + 56 + 8 * (v112 >> 6)))) | v112 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_169;
    }
    v115 = 0;
    v116 = (unint64_t)(63 - v111) >> 6;
    do
    {
      if (++v113 == v116 && (v115 & 1) != 0)
      {
        __break(1u);
LABEL_214:
        __break(1u);
        __break(1u);
LABEL_215:
        __break(1u);
        goto LABEL_216;
      }
      v117 = v113 == v116;
      if (v113 == v116)
        v113 = 0;
      v115 |= v117;
      v118 = *(_QWORD *)(v110 + 8 * v113);
    }
    while (v118 == -1);
    v114 = __clz(__rbit64(~v118)) + (v113 << 6);
LABEL_169:
    *(_QWORD *)(v110 + ((v114 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v114;
    *(_QWORD *)(*(_QWORD *)(v107 + 48) + 8 * v114) = v106;
    ++*(_QWORD *)(v107 + 16);
LABEL_155:
    v104 = (void *)sub_2225971F4();
    if (v104)
      continue;
    break;
  }
  v172 = v183;
  v103 = v176;
LABEL_171:
  swift_release();
LABEL_173:
  v120 = sub_2219EBBE8(v103, v177);
  swift_release();
  if ((v120 & 1) != 0)
  {
    swift_release();
LABEL_176:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573D310);
    v122 = swift_allocObject();
    *(_OWORD *)(v122 + 16) = xmmword_22268A150;
    *(_QWORD *)(v122 + 32) = v103;
    v183 = v122;
    sub_222596E58();
    v123 = v183;
    v124 = v103;
    return v123;
  }
  v121 = sub_2219EBBE8(v103, v172);
  swift_release();
  if ((v121 & 1) != 0)
    goto LABEL_176;
  v126 = *(_QWORD *)(v87 + 16);
  if (v126)
  {
    swift_bridgeObjectRetain();
    v127 = 0;
    while (1)
    {
      v128 = *(_QWORD *)(v87 + 32 + 8 * v127);
      if ((v128 & 0xC000000000000001) != 0)
      {
        v129 = v176;
        swift_bridgeObjectRetain();
        v130 = sub_222597200();

        if ((v130 & 1) != 0)
          goto LABEL_191;
      }
      else
      {
        if (!*(_QWORD *)(v128 + 16))
          goto LABEL_183;
        swift_bridgeObjectRetain();
        v131 = sub_2225970E0();
        v132 = -1 << *(_BYTE *)(v128 + 32);
        v133 = v131 & ~v132;
        if (((*(_QWORD *)(v128 + 56 + ((v133 >> 3) & 0xFFFFFFFFFFFFF8)) >> v133) & 1) != 0)
        {
          v134 = *(id *)(*(_QWORD *)(v128 + 48) + 8 * v133);
          v135 = sub_2225970EC();

          if ((v135 & 1) != 0)
          {
LABEL_191:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_207;
          }
          v136 = ~v132;
          while (1)
          {
            v133 = (v133 + 1) & v136;
            if (((*(_QWORD *)(v128 + 56 + ((v133 >> 3) & 0xFFFFFFFFFFFFF8)) >> v133) & 1) == 0)
              break;
            v137 = *(id *)(*(_QWORD *)(v128 + 48) + 8 * v133);
            v138 = sub_2225970EC();

            if ((v138 & 1) != 0)
              goto LABEL_191;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_183:
      if (++v127 == v126)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_193;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_193:
  v139 = *(_QWORD *)(v178 + 16);
  if (!v139)
  {
    swift_bridgeObjectRelease();
LABEL_210:
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B028);
    v156 = v176;
    v157 = sub_222596B28();
    v158 = sub_222597038();
    if (os_log_type_enabled(v157, v158))
    {
      v159 = (uint8_t *)swift_slowAlloc();
      v160 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v159 = 138412290;
      v183 = (uint64_t)v156;
      v161 = v156;
      sub_222597134();
      *v160 = v156;

      _os_log_impl(&dword_2218F0000, v157, v158, "Accessory was not found in the home graph: %@", v159, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v160, -1, -1);
      MEMORY[0x227676FE0](v159, -1, -1);
    }
    else
    {

      v157 = v156;
    }
    v162 = v167;

    (*(void (**)(char *, uint64_t))(v166 + 8))(v168, v162);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573D310);
    v163 = swift_allocObject();
    *(_OWORD *)(v163 + 16) = xmmword_22268A150;
    *(_QWORD *)(v163 + 32) = v156;
    v183 = v163;
    sub_222596E58();
    v123 = v183;
    v164 = v156;
    return v123;
  }
  v140 = v178 + 32;
  swift_bridgeObjectRetain();
  v141 = 0;
  while (1)
  {
    v142 = *(_QWORD *)(v140 + 8 * v141);
    if ((v142 & 0xC000000000000001) != 0)
    {
      v143 = v176;
      swift_bridgeObjectRetain();
      v144 = sub_222597200();

      if ((v144 & 1) != 0)
        goto LABEL_206;
      goto LABEL_197;
    }
    if (!*(_QWORD *)(v142 + 16))
      goto LABEL_198;
    swift_bridgeObjectRetain();
    v145 = sub_2225970E0();
    v146 = -1 << *(_BYTE *)(v142 + 32);
    v147 = v145 & ~v146;
    if (((*(_QWORD *)(v142 + 56 + ((v147 >> 3) & 0xFFFFFFFFFFFFF8)) >> v147) & 1) != 0)
      break;
LABEL_197:
    swift_bridgeObjectRelease();
LABEL_198:
    if (++v141 == v139)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_210;
    }
  }
  v148 = *(id *)(*(_QWORD *)(v142 + 48) + 8 * v147);
  v149 = sub_2225970EC();

  if ((v149 & 1) == 0)
  {
    v150 = ~v146;
    do
    {
      v147 = (v147 + 1) & v150;
      if (((*(_QWORD *)(v142 + 56 + ((v147 >> 3) & 0xFFFFFFFFFFFFF8)) >> v147) & 1) == 0)
        goto LABEL_197;
      v151 = *(id *)(*(_QWORD *)(v142 + 48) + 8 * v147);
      v152 = sub_2225970EC();

    }
    while ((v152 & 1) == 0);
  }
LABEL_206:
  swift_bridgeObjectRelease_n();
LABEL_207:
  v153 = swift_bridgeObjectRetain();
  v154 = sub_221971D98(v153);
  swift_bridgeObjectRelease();
  v183 = v154;
  v155 = v175;
  sub_22199E224(&v183);
  if (!v155)
  {
    swift_bridgeObjectRelease();
    return v183;
  }
LABEL_218:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_22199E224(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_2219464F8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_22199ED78(v6);
  return sub_2225972F0();
}

uint64_t sub_22199E29C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_222597308();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x227674274](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2225972E4();
        sub_222597314();
        sub_222597320();
        sub_2225972F0();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_2225972E4();
        sub_222597314();
        sub_222597320();
        sub_2225972F0();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2225973B0();
    swift_bridgeObjectRelease();
    sub_222597308();
    swift_bridgeObjectRetain();
    v2 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_22199E480(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = MEMORY[0x24BEE4AF8];
  sub_22191A494(0, v3 & ~(v3 >> 63), 0);
  v4 = v14;
  if (!v2)
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return v4;
LABEL_7:
    for (i = 4; ; ++i)
    {
      v6 = i - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x227674274](i - 4, a1);
        v7 = i - 3;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
      }
      else
      {
        swift_unknownObjectRetain();
        v7 = i - 3;
        if (__OFADD__(v6, 1))
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      if (!swift_dynamicCast())
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22191A494(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v14;
      }
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_22191A494(v8 > 1, v9 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 40) = v13;
      if (v7 == v2)
        return v4;
    }
  }
  swift_bridgeObjectRetain();
  v2 = sub_2225973B0();
  swift_bridgeObjectRelease();
  if (v2)
    goto LABEL_7;
  return v4;
}

void sub_22199E66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    sub_2219A06CC();
    sub_222596FC0();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_2225971F4())
      goto LABEL_35;
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_35;
LABEL_33:
    v16 = objc_msgSend(v12, sel_audioDestination, v17);
    if (v16)
    {

      sub_2225972E4();
      sub_222597314();
      sub_222597320();
      sub_2225972F0();
    }
    else
    {

    }
    v3 = v11;
    v4 = v9;
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_32:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_35;
    goto LABEL_33;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8)
      goto LABEL_35;
    v14 = *(_QWORD *)(v18 + 8 * v13);
    v11 = v3 + 1;
    if (!v14)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_35;
      v14 = *(_QWORD *)(v18 + 8 * v11);
      if (!v14)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v8)
          goto LABEL_35;
        v14 = *(_QWORD *)(v18 + 8 * v11);
        if (!v14)
        {
          v11 = v3 + 4;
          if (v3 + 4 >= v8)
            goto LABEL_35;
          v14 = *(_QWORD *)(v18 + 8 * v11);
          if (!v14)
          {
            v11 = v3 + 5;
            if (v3 + 5 >= v8)
              goto LABEL_35;
            v14 = *(_QWORD *)(v18 + 8 * v11);
            if (!v14)
            {
              v15 = v3 + 6;
              while (v8 != v15)
              {
                v14 = *(_QWORD *)(v18 + 8 * v15++);
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_22193D780();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_22199E958@<X0>(id *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t result;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  _QWORD *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t inited;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint8_t *v43;
  _QWORD *v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;

  v47 = a5;
  v9 = sub_222596B40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = sub_2219A0200(a2, v13);

  if (!v14)
    goto LABEL_4;
  v15 = objc_msgSend(v14, sel_accessories);

  if (!v15)
    goto LABEL_4;
  sub_221917374(0, &qword_25573F9A0);
  v16 = sub_222596E40();
  v46 = a3;
  v17 = v9;
  v18 = v16;

  v19 = sub_22199E29C(v18);
  v9 = v17;
  a3 = v46;
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_4:
    v20 = v13;
    sub_2219A037C(a3, v20);
    v22 = v21;
    swift_bridgeObjectRelease();

    if (v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573D310);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_22268A150;
      *(_QWORD *)(v23 + 32) = v22;
      v48 = v23;
      sub_222596E58();
      v19 = v48;
      goto LABEL_6;
    }
    sub_2219950CC(a4, (uint64_t)&off_24E76B028);
    v27 = v20;
    v28 = sub_222596B28();
    v29 = sub_222597038();
    if (os_log_type_enabled(v28, v29))
    {
      v46 = v9;
      v30 = (uint8_t *)swift_slowAlloc();
      v44 = (_QWORD *)swift_slowAlloc();
      v45 = v30;
      *(_DWORD *)v30 = 138412290;
      v43 = v30 + 4;
      v48 = (unint64_t)v27;
      v31 = v27;
      sub_222597134();
      v32 = v44;
      *v44 = v27;

      v33 = v29;
      v34 = v45;
      v9 = v46;
      _os_log_impl(&dword_2218F0000, v28, v33, "ATV doesn't have an audio destination: %@", v45, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v32, -1, -1);
      MEMORY[0x227676FE0](v34, -1, -1);
    }
    else
    {

      v28 = v27;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573D310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_22268A150;
    *(_QWORD *)(inited + 32) = v27;
    v48 = inited;
    sub_222596E58();
    v36 = v48;
    if (v48 >> 62)
    {
      v41 = v27;
      swift_bridgeObjectRetain();
      v42 = sub_2225973B0();
      swift_bridgeObjectRelease();
      if (v42)
        goto LABEL_14;
    }
    else
    {
      v37 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      v38 = v27;
      if (v37)
      {
LABEL_14:
        sub_22192C810(v36);
        v40 = v39;
LABEL_17:
        result = swift_bridgeObjectRelease();
        *v47 = v40;
        return result;
      }
    }
    v40 = MEMORY[0x24BEE4B08];
    goto LABEL_17;
  }
LABEL_6:
  v48 = v19;
  v24 = v13;
  MEMORY[0x227673E0C]();
  if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_222596E64();
  sub_222596E88();
  sub_222596E58();
  v25 = sub_2219B734C(v48);
  result = swift_bridgeObjectRelease();
  *v47 = v25;
  return result;
}

uint64_t sub_22199ED78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a1[1];
  result = sub_222597524();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_22199F640(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v133 = MEMORY[0x24BEE4AF8];
    v128 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        v111 = *v117;
        do
        {
          v112 = v11 - 2;
          if (v11 < 2)
            goto LABEL_145;
          if (!v111)
            goto LABEL_157;
          v113 = *(_QWORD *)&v8[16 * v112 + 32];
          v114 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_22199F7C0((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_221946330((uint64_t)v8);
          if (v112 >= *((_QWORD *)v8 + 2))
            goto LABEL_147;
          v115 = &v8[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_148;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_222596E58();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    v7 = sub_222596E7C();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v118 = *a1 + 16;
  v119 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v125 = v3;
  v129 = *a1;
  while (2)
  {
    v12 = v9 + 1;
    v124 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_45;
    v121 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v14 = *(id *)(v10 + 8 * v12);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_identifier);
    v17 = sub_222596CF0();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_identifier);
    v21 = sub_222596CF0();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
      v126 = 0;
    else
      v126 = sub_2225976E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v12 = v9 + 2;
    v3 = v125;
    if (v9 + 2 >= v125)
      goto LABEL_36;
    v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      v130 = v12;
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v27;
      v30 = objc_msgSend(v28, sel_identifier);
      v31 = sub_222596CF0();
      v33 = v32;

      v34 = objc_msgSend(v29, sel_identifier);
      v35 = sub_222596CF0();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if ((v126 & 1) != 0)
        {
          v8 = v121;
          v9 = v124;
          v3 = v125;
          v10 = v129;
          v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v26 = sub_2225976E0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v126 ^ v26) & 1) != 0)
        break;
LABEL_25:
      v12 = v130 + 1;
      ++v25;
      v3 = v125;
      if (v125 == v130 + 1)
      {
        v12 = v125;
        goto LABEL_35;
      }
    }
    v3 = v125;
    v12 = v130;
LABEL_35:
    v9 = v124;
LABEL_36:
    v8 = v121;
    v10 = v129;
    if ((v126 & 1) != 0)
    {
LABEL_37:
      if (v12 < v9)
        goto LABEL_151;
      if (v9 < v12)
      {
        v39 = (uint64_t *)(v119 + 8 * v12);
        v40 = v12;
        v41 = v9;
        v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10)
              goto LABEL_156;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v12, v9))
      goto LABEL_149;
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_2219460D4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v63 = *((_QWORD *)v8 + 2);
      v62 = *((_QWORD *)v8 + 3);
      v11 = v63 + 1;
      if (v63 >= v62 >> 1)
        v8 = sub_2219460D4((char *)(v62 > 1), v63 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v64 = v8 + 32;
      v65 = &v8[16 * v63 + 32];
      *(_QWORD *)v65 = v9;
      *((_QWORD *)v65 + 1) = v12;
      v132 = v12;
      if (!v63)
      {
        v11 = 1;
LABEL_14:
        v3 = v125;
        v9 = v132;
        if (v132 >= v125)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v66 = v11 - 1;
        if (v11 >= 4)
        {
          v71 = &v64[16 * v11];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_133;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_134;
          v78 = v11 - 2;
          v79 = &v64[16 * v11 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_136;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_139;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_143;
            v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v95 = *((_QWORD *)v8 + 4);
            v96 = *((_QWORD *)v8 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_99;
          }
          v68 = *((_QWORD *)v8 + 4);
          v67 = *((_QWORD *)v8 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_135;
        v78 = v11 - 2;
        v84 = &v64[16 * v11 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_138;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_141;
        if (__OFADD__(v88, v93))
          goto LABEL_142;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_105:
          if (v94)
            v66 = v78;
          goto LABEL_107;
        }
LABEL_99:
        if ((v89 & 1) != 0)
          goto LABEL_137;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_140;
        if (v100 < v88)
          goto LABEL_14;
LABEL_107:
        v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_155;
        v106 = &v64[16 * v105];
        v107 = *(_QWORD *)v106;
        v108 = &v64[16 * v66];
        v109 = *((_QWORD *)v108 + 1);
        sub_22199F7C0((void **)(v10 + 8 * *(_QWORD *)v106), (id *)(v10 + 8 * *(_QWORD *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1)
          goto LABEL_127;
        if (v109 < v107)
          goto LABEL_130;
        if (v66 > *((_QWORD *)v8 + 2))
          goto LABEL_131;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v64[16 * v105 + 8] = v109;
        v110 = *((_QWORD *)v8 + 2);
        if (v66 >= v110)
          goto LABEL_132;
        v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((_QWORD *)v8 + 2) = v110 - 1;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v9, v120))
    goto LABEL_152;
  if (v9 + v120 >= v3)
    v44 = v3;
  else
    v44 = v9 + v120;
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      v123 = v44;
      v45 = v119 + 8 * v12;
      do
      {
        v47 = *(void **)(v10 + 8 * v12);
        v127 = v45;
        v131 = v12;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_identifier);
          v52 = sub_222596CF0();
          v54 = v53;

          v55 = objc_msgSend(v50, sel_identifier);
          v56 = sub_222596CF0();
          v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            v10 = v129;
            v46 = v131;
            goto LABEL_56;
          }
          v60 = sub_2225976E0();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v129;
          if ((v60 & 1) == 0)
            break;
          if (!v129)
            goto LABEL_154;
          v61 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          v46 = v131;
          if (v131 == v9)
            goto LABEL_56;
        }
        v46 = v131;
LABEL_56:
        v12 = v46 + 1;
        v45 = v127 + 8;
        v9 = v124;
      }
      while (v12 != v123);
      v12 = v123;
      v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_22259738C();
  __break(1u);
  return result;
}

uint64_t sub_22199F640(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_identifier);
      v12 = sub_222596CF0();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_identifier);
      v16 = sub_222596CF0();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = sub_2225976E0();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_22199F7C0(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_2219461CC(&v61, &v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, sel_identifier);
      v39 = sub_222596CF0();
      v41 = v40;

      v42 = objc_msgSend(v37, sel_identifier);
      v43 = sub_222596CF0();
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = sub_2225976E0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_identifier);
        v19 = sub_222596CF0();
        v21 = v20;

        v22 = objc_msgSend(v17, sel_identifier);
        v23 = sub_222596CF0();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = sub_2225976E0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_2225973E0();
  __break(1u);
  return result;
}

unint64_t *sub_22199FBD4(uint64_t isStackAllocationSafe, SEL *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_2219A0068((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = sub_2219A0068((unint64_t *)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x227676FE0](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_22199FD44(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_22199FEA0((_QWORD *)((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_22199FEA0((unint64_t *)v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x227676FE0](v8, -1, -1);
  }
  return v7;
}

void sub_22199FEA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  id v17;
  uint64_t v20;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (2)
  {
    v20 = v4;
    if (v9)
    {
LABEL_6:
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_21;
    }
    while (1)
    {
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      if (v13 >= v10)
        goto LABEL_24;
      v14 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v14)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v10)
          goto LABEL_24;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v10)
            goto LABEL_24;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v10)
            {
LABEL_24:
              swift_retain();
              sub_2219B5970(a1, a2, v20, a3);
              return;
            }
            v14 = *(_QWORD *)(v6 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v5 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_26;
                if (v5 >= v10)
                  goto LABEL_24;
                v14 = *(_QWORD *)(v6 + 8 * v5);
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v5 = v15;
          }
        }
      }
LABEL_20:
      v9 = (v14 - 1) & v14;
      v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_21:
      v16 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
      v17 = objc_msgSend(v16, sel_audioDestination);

      if (!v17)
        break;

      if (v9)
        goto LABEL_6;
    }
    *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v4 = v20 + 1;
    if (!__OFADD__(v20, 1))
      continue;
    break;
  }
LABEL_27:
  __break(1u);
}

unint64_t *sub_2219A0068(unint64_t *result, uint64_t a2, uint64_t a3, SEL *a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v6 = result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_24;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_24;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v15), *a4);
    if ((_DWORD)result)
    {
      *(unint64_t *)((char *)v6 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_2219B5970(v6, a2, v7, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_24;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_2219A0200(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char **v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  char **v11;
  id v12;
  unsigned int v13;

  if (a1 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_2225973B0())
  {
    v4 = 4;
    v5 = &selRef_associationOptions;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x227674274](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v7 = v6;
      v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v9 = objc_msgSend(v6, v5[49]);
      if (v9)
      {
        v10 = v9;
        v11 = v5;
        v12 = objc_msgSend(a2, v5[49]);
        v13 = objc_msgSend(v10, sel_isEqual_, v12);

        v5 = v11;
        if (v13)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }

      ++v4;
      if (v8 == v3)
        goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_2219A037C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  char **v21;
  uint64_t v22;
  id v23;
  unsigned __int8 v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    sub_2219A06CC();
    sub_222596FC0();
    v2 = v29;
    v27 = v30;
    v3 = v31;
    v4 = v32;
    v5 = v33;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v25 = v3;
  v26 = (unint64_t)(v3 + 64) >> 6;
  v10 = &selRef_associationOptions;
  while (v2 < 0)
  {
    if (!sub_2225971F4())
      goto LABEL_34;
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v34;
    swift_unknownObjectRelease();
    v13 = v4;
    v11 = v5;
    if (!v34)
      goto LABEL_34;
LABEL_32:
    v18 = objc_msgSend(v14, v10[49], v25);
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(a2, v10[49]);
      v21 = v10;
      v22 = v2;
      v23 = v20;
      v24 = objc_msgSend(v19, sel_isEqual_, v20);

      v2 = v22;
      v10 = v21;
      if ((v24 & 1) != 0)
        goto LABEL_34;
    }

    v4 = v13;
    v5 = v11;
  }
  if (v5)
  {
    v11 = (v5 - 1) & v5;
    v12 = __clz(__rbit64(v5)) | (v4 << 6);
    v13 = v4;
LABEL_31:
    v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_34;
    goto LABEL_32;
  }
  v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v26)
      goto LABEL_34;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    v13 = v4 + 1;
    if (!v16)
    {
      v13 = v4 + 2;
      if (v4 + 2 >= v26)
        goto LABEL_34;
      v16 = *(_QWORD *)(v27 + 8 * v13);
      if (!v16)
      {
        v13 = v4 + 3;
        if (v4 + 3 >= v26)
          goto LABEL_34;
        v16 = *(_QWORD *)(v27 + 8 * v13);
        if (!v16)
        {
          v13 = v4 + 4;
          if (v4 + 4 >= v26)
            goto LABEL_34;
          v16 = *(_QWORD *)(v27 + 8 * v13);
          if (!v16)
          {
            v13 = v4 + 5;
            if (v4 + 5 >= v26)
              goto LABEL_34;
            v16 = *(_QWORD *)(v27 + 8 * v13);
            if (!v16)
            {
              v17 = v4 + 6;
              while (v26 != v17)
              {
                v16 = *(_QWORD *)(v27 + 8 * v17++);
                if (v16)
                {
                  v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_22193D780();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

unint64_t sub_2219A06CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25573F5B8;
  if (!qword_25573F5B8)
  {
    v1 = sub_221917374(255, (unint64_t *)&qword_25573FFF0);
    result = MEMORY[0x227676F2C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25573F5B8);
  }
  return result;
}

uint64_t sub_2219A0724(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v21 = MEMORY[0x24BEE4AF8];
    result = sub_22191A744(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v10 = 0;
    v8 = v21;
    while (v7 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x227674274](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v19 = v11;
      sub_22199E958(&v19, a2, a3, a4, &v20);
      if (v5)
      {
        swift_release();

        return v8;
      }
      v5 = 0;

      v13 = v20;
      v21 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_22191A744(v14 > 1, v15 + 1, 1);
        v8 = v21;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      *(_QWORD *)(v8 + 8 * v15 + 32) = v13;
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v7 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2219A08AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 20));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A08FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 24));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A094C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 28));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A099C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A09EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 36));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A0A3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 40));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A0A8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 44));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A0ADC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData() + 48));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2219A0B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_222596AF8();
  __swift_allocate_value_buffer(v0, qword_255768570);
  __swift_project_value_buffer(v0, (uint64_t)qword_255768570);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573DC68);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573DC70);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_22268DCB0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "event_name";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_222596AE0();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "event_uuid";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "home_uuid";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "room_uuid";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "accessory_uuid";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "user_uuid";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "timestamp";
  *((_QWORD *)v21 + 1) = 9;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "build_version";
  *((_QWORD *)v23 + 1) = 13;
  v23[16] = 2;
  v10();
  return sub_222596AEC();
}

uint64_t sub_2219A0DD4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2225969E4();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
          sub_222596A2C();
          break;
        default:
          break;
      }
      result = sub_2225969E4();
    }
  }
  return result;
}

uint64_t sub_2219A0F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_2219A0FFC(v0);
  if (!v1)
  {
    sub_2219A1070(v0);
    sub_2219A10E4(v0);
    sub_2219A1158(v0);
    sub_2219A11CC(v0);
    sub_2219A1240(v0);
    sub_2219A12B4(v0);
    sub_2219A1328(v0);
    return sub_2225969A8();
  }
  return result;
}

uint64_t sub_2219A0FFC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A1070(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 24) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A10E4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 28) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A1158(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A11CC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 36) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A1240(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 40) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A12B4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 44) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A1328(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  if (*(_QWORD *)(a1 + *(int *)(result + 48) + 8))
    return sub_222596ABC();
  return result;
}

uint64_t sub_2219A13A0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  result = sub_2225969B4();
  v5 = a1[6];
  v6 = (_QWORD *)(a2 + a1[5]);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  v8 = a1[8];
  v9 = (_QWORD *)(a2 + a1[7]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(a2 + v8);
  *v10 = 0;
  v10[1] = 0;
  v11 = a1[10];
  v12 = (_QWORD *)(a2 + a1[9]);
  *v12 = 0;
  v12[1] = 0;
  v13 = (_QWORD *)(a2 + v11);
  *v13 = 0;
  v13[1] = 0;
  v14 = a1[12];
  v15 = (_QWORD *)(a2 + a1[11]);
  *v15 = 0;
  v15[1] = 0;
  v16 = (_QWORD *)(a2 + v14);
  *v16 = 0;
  v16[1] = 0;
  return result;
}

unint64_t sub_2219A1414()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_2219A1430()
{
  return sub_2219A0DD4();
}

uint64_t sub_2219A1444()
{
  return sub_2219A0F00();
}

uint64_t sub_2219A1458()
{
  sub_2219018CC(qword_25573F9C0, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DD80);
  return sub_2225969D8();
}

uint64_t sub_2219A14A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25573B3A0 != -1)
    swift_once();
  v2 = sub_222596AF8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_255768570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_2219A1518()
{
  sub_2219018CC(&qword_25573DC60, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DDB8);
  return sub_222596A5C();
}

uint64_t sub_2219A1558()
{
  sub_2219018CC(&qword_25573DC60, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DDB8);
  return sub_222596A68();
}

uint64_t sub_2219A15A8()
{
  return sub_2219018CC(&qword_25573F9A8, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DCC8);
}

uint64_t type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData()
{
  uint64_t result;

  result = qword_25573FA20;
  if (!qword_25573FA20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2219A1610()
{
  return sub_2219018CC(&qword_25573DC60, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DDB8);
}

uint64_t sub_2219A163C()
{
  return sub_2219018CC(&qword_25573F9B0, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DCF0);
}

uint64_t sub_2219A1668()
{
  return sub_2219018CC(&qword_25573F9B8, (uint64_t (*)(uint64_t))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData, (uint64_t)&unk_22268DD30);
}

uint64_t sub_2219A1694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, uint64_t);
  uint64_t v60;

  v4 = sub_2225969C0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v60 - v9;
  v11 = (int *)type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_65;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_65;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_2225976E0() & 1) != 0))
  {
LABEL_10:
    v19 = v11[6];
    v20 = (_QWORD *)(a1 + v19);
    v21 = *(_QWORD *)(a1 + v19 + 8);
    v22 = (_QWORD *)(a2 + v19);
    v23 = v22[1];
    if (v21)
    {
      if (!v23)
        goto LABEL_65;
      if (*v20 != *v22 || v21 != v23)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v23)
    {
      goto LABEL_65;
    }
    v25 = v11[7];
    v26 = (_QWORD *)(a1 + v25);
    v27 = *(_QWORD *)(a1 + v25 + 8);
    v28 = (_QWORD *)(a2 + v25);
    v29 = v28[1];
    if (v27)
    {
      if (!v29)
        goto LABEL_65;
      if (*v26 != *v28 || v27 != v29)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v29)
    {
      goto LABEL_65;
    }
    v31 = v11[8];
    v32 = (_QWORD *)(a1 + v31);
    v33 = *(_QWORD *)(a1 + v31 + 8);
    v34 = (_QWORD *)(a2 + v31);
    v35 = v34[1];
    if (v33)
    {
      if (!v35)
        goto LABEL_65;
      if (*v32 != *v34 || v33 != v35)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v35)
    {
      goto LABEL_65;
    }
    v37 = v11[9];
    v38 = (_QWORD *)(a1 + v37);
    v39 = *(_QWORD *)(a1 + v37 + 8);
    v40 = (_QWORD *)(a2 + v37);
    v41 = v40[1];
    if (v39)
    {
      if (!v41)
        goto LABEL_65;
      if (*v38 != *v40 || v39 != v41)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v41)
    {
      goto LABEL_65;
    }
    v42 = v11[10];
    v43 = (_QWORD *)(a1 + v42);
    v44 = *(_QWORD *)(a1 + v42 + 8);
    v45 = (_QWORD *)(a2 + v42);
    v46 = v45[1];
    if (v44)
    {
      if (!v46)
        goto LABEL_65;
      if (*v43 != *v45 || v44 != v46)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v46)
    {
      goto LABEL_65;
    }
    v47 = v11[11];
    v48 = (_QWORD *)(a1 + v47);
    v49 = *(_QWORD *)(a1 + v47 + 8);
    v50 = (_QWORD *)(a2 + v47);
    v51 = v50[1];
    if (v49)
    {
      if (!v51)
        goto LABEL_65;
      if (*v48 != *v50 || v49 != v51)
      {
        v18 = 0;
        if ((sub_2225976E0() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v51)
    {
      goto LABEL_65;
    }
    v52 = v11[12];
    v53 = (_QWORD *)(a1 + v52);
    v54 = *(_QWORD *)(a1 + v52 + 8);
    v55 = (_QWORD *)(a2 + v52);
    v56 = v55[1];
    if (v54)
    {
      if (v56)
      {
        if (*v53 != *v55 || v54 != v56)
        {
          v18 = 0;
          if ((sub_2225976E0() & 1) == 0)
            return v18 & 1;
        }
LABEL_67:
        v58 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v58(v10, a1, v4);
        v58(v8, a2, v4);
        sub_2219018CC(&qword_25573DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v18 = sub_222596CCC();
        v59 = *(void (**)(char *, uint64_t))(v5 + 8);
        v59(v8, v4);
        v59(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v56)
    {
      goto LABEL_67;
    }
LABEL_65:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t *sub_2219A1A00(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2225969C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (uint64_t *)((char *)a1 + v24);
    v27 = (uint64_t *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (uint64_t *)((char *)a1 + v25);
    v30 = (uint64_t *)((char *)a2 + v25);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[11];
    v33 = a3[12];
    v34 = (uint64_t *)((char *)a1 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (uint64_t *)((char *)a1 + v33);
    v38 = (uint64_t *)((char *)a2 + v33);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2219A1B58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2225969C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2219A1C10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;

  v6 = sub_2225969C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (_QWORD *)(a1 + v24);
  v29 = (_QWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[11];
  v32 = a3[12];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)(a1 + v32);
  v37 = (_QWORD *)(a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2219A1D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  v6 = sub_2225969C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[11];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2219A1EEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2225969C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t sub_2219A1F8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_2225969C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = a3[11];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = a3[12];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2219A20BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219A20C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_2225969C0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_2219A2154()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219A2160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2225969C0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_2219A21DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2225969C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2219A225C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_unknownObjectRelease();
  sub_2219A2938(*(_QWORD *)(v0 + 192));
  sub_2219A2938(*(_QWORD *)(v0 + 208));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t _s7ServiceCMa()
{
  return objc_opt_self();
}

uint64_t _s7ServiceC15DeviceSelectionOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2219A2300 + 4 * byte_22268DE80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2219A2320 + 4 * byte_22268DE85[v4]))();
}

_BYTE *sub_2219A2300(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2219A2320(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2219A2328(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2219A2330(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2219A2338(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2219A2340(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7ServiceC15DeviceSelectionOMa()
{
  return &_s7ServiceC15DeviceSelectionON;
}

uint64_t _s7ServiceC5StateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2219A23A8 + 4 * byte_22268DE8F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2219A23DC + 4 * byte_22268DE8A[v4]))();
}

uint64_t sub_2219A23DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219A23E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219A23ECLL);
  return result;
}

uint64_t sub_2219A23F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219A2400);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2219A2404(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219A240C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ServiceC5StateOMa()
{
  return &_s7ServiceC5StateON;
}

unint64_t sub_2219A242C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25573FB50;
  if (!qword_25573FB50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25573FB58);
    result = MEMORY[0x227676F2C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25573FB50);
  }
  return result;
}

void sub_2219A2478(char *a1)
{
  sub_22190B888(*a1);
}

void sub_2219A2484()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2225978F0();
  __asm { BR              X9 }
}

uint64_t sub_2219A24C8()
{
  sub_222596D38();
  swift_bridgeObjectRelease();
  return sub_222597938();
}

void sub_2219A2544()
{
  __asm { BR              X10 }
}

uint64_t sub_2219A2578()
{
  sub_222596D38();
  return swift_bridgeObjectRelease();
}

void sub_2219A25E0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2225978F0();
  __asm { BR              X9 }
}

uint64_t sub_2219A2620()
{
  sub_222596D38();
  swift_bridgeObjectRelease();
  return sub_222597938();
}

uint64_t sub_2219A269C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2219A28F0();
  *a1 = result;
  return result;
}

uint64_t sub_2219A26C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2219A26F0 + 4 * byte_22268DEA0[*v0]))();
}

void sub_2219A26F0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69726170657270;
  a1[1] = 0xE900000000000067;
}

void sub_2219A2710(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696E6E7572;
  a1[1] = 0xE700000000000000;
}

void sub_2219A272C(_QWORD *a1@<X8>)
{
  *a1 = 0x6164696C61766E69;
  a1[1] = 0xEB00000000646574;
}

void sub_2219A2750(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E765A28;
}

unint64_t sub_2219A2764()
{
  unint64_t result;

  result = qword_25573FB60;
  if (!qword_25573FB60)
  {
    result = MEMORY[0x227676F2C](&unk_22268DFB0, &_s7ServiceC5StateON);
    atomic_store(result, (unint64_t *)&qword_25573FB60);
  }
  return result;
}

uint64_t sub_2219A27A8()
{
  sub_2225978F0();
  sub_222596D38();
  return sub_222597938();
}

uint64_t sub_2219A27F0()
{
  return sub_222596D38();
}

uint64_t sub_2219A2800()
{
  sub_2225978F0();
  sub_222596D38();
  return sub_222597938();
}

uint64_t sub_2219A2844@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2225973EC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2219A2894(_QWORD *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

unint64_t sub_2219A28AC()
{
  unint64_t result;

  result = qword_25573FB68;
  if (!qword_25573FB68)
  {
    result = MEMORY[0x227676F2C](&unk_22268E050, &_s7ServiceC15DeviceSelectionON);
    atomic_store(result, (unint64_t *)&qword_25573FB68);
  }
  return result;
}

uint64_t sub_2219A28F0()
{
  unint64_t v0;

  v0 = sub_2225973EC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2219A2938(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2219A2948()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id ActionSetState.SubscriptionManager.__allocating_init(delegate:)()
{
  objc_class *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  objc_super v6;

  v1 = (char *)objc_allocWithZone(v0);
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573B488);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v1[v2] = v3;
  swift_unknownObjectWeakAssign();
  v6.receiver = v1;
  v6.super_class = v0;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  swift_unknownObjectRelease();
  return v4;
}

id ActionSetState.SubscriptionManager.init(delegate:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  objc_super v5;

  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573B488);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[v1] = v2;
  swift_unknownObjectWeakAssign();
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ActionSetState.SubscriptionManager();
  v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t type metadata accessor for ActionSetState.SubscriptionManager()
{
  return objc_opt_self();
}

void ActionSetState.SubscriptionManager.startMonitoring(actionSetUUID:observer:)(uint64_t a1, uint64_t a2)
{
  sub_2219A3048(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_2219A2BA4, 1);
}

uint64_t sub_2219A2BA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;

  v42 = a4;
  v45 = a5;
  v46 = a2;
  v8 = sub_222596B40();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_222596678();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v41 - v16;
  v18 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v19 = sub_22198D5E4(v46), (v20 & 1) != 0))
  {
    v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
    v22 = (_QWORD *)(v21 + 24);
    swift_beginAccess();
    swift_unknownObjectRetain();
    v41[2] = v21;
    swift_retain();
    v23 = swift_bridgeObjectRetain();
    LOBYTE(v21) = sub_2219A4904(v23, a3);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      v24 = (uint64_t)v10;
      sub_2219950CC(v42, (uint64_t)&off_24E76B2D8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v46, v11);
      v25 = v12;
      v26 = sub_222596B28();
      v27 = sub_22259702C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v42 = v24;
        v29 = (uint8_t *)v28;
        v30 = swift_slowAlloc();
        v46 = v5;
        v47[0] = v30;
        v31 = v30;
        *(_DWORD *)v29 = 136315138;
        v41[1] = v29 + 4;
        sub_221977FA4();
        v32 = sub_222597530();
        v49 = sub_221921364(v32, v33, v47);
        sub_222597134();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v11);
        _os_log_impl(&dword_2218F0000, v26, v27, "Action Set: %s is already monitored by given observer", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x227676FE0](v31, -1, -1);
        MEMORY[0x227676FE0](v29, -1, -1);

        swift_release();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v11);
        swift_release();

        result = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v24, v44);
      }
    }
    else
    {
      swift_beginAccess();
      v40 = swift_unknownObjectRetain();
      MEMORY[0x227673E0C](v40);
      if (*(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_222596E64();
      sub_222596E88();
      sub_222596E58();
      swift_endAccess();
      result = swift_release();
    }
    v39 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573D310);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_22268A150;
    *(_QWORD *)(v35 + 32) = a3;
    v48 = v35;
    sub_222596E58();
    v36 = v48;
    _s19SubscriptionManagerC23MonitoredActionSetStateCMa();
    v37 = swift_allocObject();
    *(_BYTE *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = MEMORY[0x24BEE4AF8];
    swift_beginAccess();
    *(_QWORD *)(v37 + 24) = v36;
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v46, v11);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_2219685BC(v37, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    *a1 = v47[0];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    result = swift_release();
    v39 = 1;
  }
  *v45 = v39;
  return result;
}

void ActionSetState.SubscriptionManager.stopMonitoring(actionSetUUID:observer:)(uint64_t a1, uint64_t a2)
{
  sub_2219A3048(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_2219A3168, 0);
}

void sub_2219A3048(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t), char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t ObjectType;
  os_unfair_lock_s *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  v7 = v4;
  ObjectType = swift_getObjectType();
  v11 = *(os_unfair_lock_s **)(v7 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  a3(&v15, v11 + 4, a1, a2, ObjectType);
  os_unfair_lock_unlock(v11 + 6);
  LODWORD(a2) = v15;
  swift_release();
  if ((_DWORD)a2 == 1)
  {
    v12 = MEMORY[0x227677094](v7 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_delegate);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = (id)sub_222596630();
      objc_msgSend(v13, sel_didUpdateSubscriptionForActionSetStateWithActionSetUUID_isSubscribed_, v14, a4 & 1);
      swift_unknownObjectRelease();

    }
  }
}

uint64_t sub_2219A3168@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  void (**v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint8_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58[3];
  uint64_t v59;

  v56 = a5;
  v55 = sub_222596678();
  v9 = *(void (***)(char *, uint64_t, uint64_t))(v55 - 8);
  v10 = MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v50 - v13;
  v15 = sub_222596B40();
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v52 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v50 - v18;
  v20 = *a1;
  if (!*(_QWORD *)(*a1 + 16) || (v21 = sub_22198D5E4(a2), (v22 & 1) == 0))
  {
    sub_2219950CC(a4, (uint64_t)&off_24E76B2D8);
    v31 = v55;
    v9[2](v14, a2, v55);
    v32 = sub_222596B28();
    v33 = sub_222597038();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v52 = (char *)v9;
      v36 = v35;
      v58[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v51 = v34 + 4;
      sub_221977FA4();
      v37 = sub_222597530();
      v59 = sub_221921364(v37, v38, v58);
      sub_222597134();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v52 + 1))(v14, v31);
      _os_log_impl(&dword_2218F0000, v32, v33, "Action Set: %s was not being monitored", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v36, -1, -1);
      MEMORY[0x227676FE0](v34, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v9[1])(v14, v31);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v19, v54);
    goto LABEL_12;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
  v24 = (unint64_t *)(v23 + 24);
  swift_beginAccess();
  swift_unknownObjectRetain();
  swift_retain();
  v25 = v57;
  v26 = sub_2219A4AF4((unint64_t *)(v23 + 24), a3);
  v57 = v25;
  swift_unknownObjectRelease();
  v51 = (uint8_t *)v23;
  v27 = *(_QWORD *)(v23 + 24);
  if (!(v27 >> 62))
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v28 >= v26)
      goto LABEL_5;
LABEL_15:
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v40 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v40)
      goto LABEL_7;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v28 = sub_2225973B0();
  swift_bridgeObjectRelease();
  if (v28 < v26)
    goto LABEL_15;
LABEL_5:
  sub_22196B8E4(v26, v28);
  swift_endAccess();
  v29 = *v24;
  if (v29 >> 62)
    goto LABEL_16;
  if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    result = swift_release();
LABEL_12:
    v39 = 0;
    goto LABEL_13;
  }
LABEL_17:
  sub_2219F6298(a2);
  swift_release();
  v41 = v52;
  sub_2219950CC(a4, (uint64_t)&off_24E76B2D8);
  v42 = v41;
  v43 = v55;
  v9[2](v12, a2, v55);
  v44 = sub_222596B28();
  v45 = sub_222597020();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v58[0] = v47;
    *(_DWORD *)v46 = 136315138;
    v50[1] = v46 + 4;
    sub_221977FA4();
    v48 = sub_222597530();
    v59 = sub_221921364(v48, v49, v58);
    sub_222597134();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v9[1])(v12, v43);
    _os_log_impl(&dword_2218F0000, v44, v45, "Stoped monitoring Action Set: %s", v46, 0xCu);
    v39 = 1;
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v47, -1, -1);
    MEMORY[0x227676FE0](v46, -1, -1);

    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v54);
  }
  else
  {
    ((void (*)(char *, uint64_t))v9[1])(v12, v43);
    swift_release();

    result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v42, v54);
    v39 = 1;
  }
LABEL_13:
  *v56 = v39;
  return result;
}

uint64_t sub_2219A36C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v14;

  v8 = sub_222596678();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_222596648();
  swift_unknownObjectRetain();
  v12 = a1;
  a5(v11, a4);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t ActionSetState.SubscriptionManager.stopAllMonitoring(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = swift_getObjectType();
  return swift_task_switch();
}

uint64_t sub_2219A37CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v8[9];

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_2219A38C8((uint64_t)&v3[4], v2, v1, v8);
  os_unfair_lock_unlock(v3 + 6);
  LOBYTE(v1) = v8[0];
  swift_release();
  if ((v1 & 1) != 0)
  {
    v4 = MEMORY[0x227677094](*(_QWORD *)(v0 + 24) + OBJC_IVAR___HMDActionSetStateSubscriptionManager_delegate);
    if (v4)
    {
      v5 = (void *)v4;
      v6 = (void *)sub_222596630();
      objc_msgSend(v5, sel_didUpdateSubscriptionForActionSetStateWithActionSetUUID_isSubscribed_, v6, 0);

      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A38C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  void (**v8)(void (**)(char *, uint64_t), uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char v19;
  void (**v20)(char *, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t result;
  void (**v30)(char *, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  uint8_t *v39;
  void (**v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a4;
  v7 = sub_222596678();
  v8 = *(void (***)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (void (**)(char *, uint64_t))((char *)&v38 - v12);
  v13 = sub_222596B40();
  v41 = *(_QWORD *)(v13 - 8);
  v42 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) && (sub_22198D5E4(a2), (v19 & 1) != 0))
  {
    sub_2219F6298(a2);
    swift_release();
    sub_2219950CC(a3, (uint64_t)&off_24E76B2D8);
    v20 = v40;
    v8[2](v40, a2, v7);
    v21 = sub_222596B28();
    v22 = sub_222597020();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v39 = (uint8_t *)v18;
      v25 = v24;
      v45 = v24;
      *(_DWORD *)v23 = 136315138;
      v38 = v23 + 4;
      sub_221977FA4();
      v26 = sub_222597530();
      v44 = sub_221921364(v26, v27, &v45);
      sub_222597134();
      swift_bridgeObjectRelease();
      ((void (*)(_QWORD, uint64_t))v8[1])(v20, v7);
      _os_log_impl(&dword_2218F0000, v21, v22, "Stoped monitoring Action Set: %s", v23, 0xCu);
      v28 = 1;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v25, -1, -1);
      MEMORY[0x227676FE0](v23, -1, -1);

      result = (*(uint64_t (**)(uint8_t *, uint64_t))(v41 + 8))(v39, v42);
    }
    else
    {
      ((void (*)(_QWORD, uint64_t))v8[1])(v20, v7);

      result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v18, v42);
      v28 = 1;
    }
  }
  else
  {
    sub_2219950CC(a3, (uint64_t)&off_24E76B2D8);
    v30 = (void (**)(char *, uint64_t))v8;
    v8[2]((void (**)(char *, uint64_t))v11, a2, v7);
    v31 = sub_222596B28();
    v32 = sub_222597038();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v40 = v30;
      v35 = v34;
      v45 = v34;
      *(_DWORD *)v33 = 136315138;
      v39 = v33 + 4;
      sub_221977FA4();
      v36 = sub_222597530();
      v44 = sub_221921364(v36, v37, &v45);
      sub_222597134();
      swift_bridgeObjectRelease();
      v40[1](v11, v7);
      _os_log_impl(&dword_2218F0000, v31, v32, "Action Set: %s was not being monitored", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v35, -1, -1);
      MEMORY[0x227676FE0](v33, -1, -1);
    }
    else
    {
      v30[1](v11, v7);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v16, v42);
    v28 = 0;
  }
  *v43 = v28;
  return result;
}

uint64_t sub_2219A3E44(uint64_t a1, const void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v6 = sub_222596678();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a2);
  sub_222596648();
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[7] = v9;
  *v9 = v3;
  v9[1] = sub_2219A3F14;
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = swift_getObjectType();
  return swift_task_switch();
}

uint64_t sub_2219A3F14()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  v1 = *(void (***)(_QWORD))(*v0 + 48);
  v3 = *(_QWORD *)(*v0 + 32);
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *(void **)(*v0 + 16);
  v4 = *(_QWORD *)(*v0 + 24);
  v7 = *v0;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1[2](v1);
  _Block_release(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v7 + 8))();
}

size_t ActionSetState.SubscriptionManager.allMonitoredActionSets.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  size_t v3;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_221972140(v2);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  return v3;
}

uint64_t ActionSetState.SubscriptionManager.isMonitoringActionSet(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
    sub_22198D5E4(a1);
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
  return v5 & 1;
}

uint64_t ActionSetState.SubscriptionManager.isActionSetOn(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  v4 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_22198D5E4(a1), (v6 & 1) != 0))
    v7 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5) + 16);
  else
    v7 = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
  return v7;
}

uint64_t sub_2219A41CC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_222596648();
  v10 = a1;
  LOBYTE(a4) = a4(v9);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a4 & 1;
}

uint64_t ActionSetState.SubscriptionManager.actionSetStateDidChange(_:state:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  unint64_t v15;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(v3 + OBJC_IVAR___HMDActionSetStateSubscriptionManager_monitoredActionSets);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_2219A43E0((uint64_t *)(v7 + 16), a1, a2, ObjectType, &v15);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  v8 = v15;
  result = swift_release();
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v10 = sub_2225973B0();
  result = swift_bridgeObjectRelease();
  if (!v10)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = a2 & 1;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v13 = (void *)MEMORY[0x227674274](v11, v8);
      }
      else
      {
        v13 = *(void **)(v8 + 8 * v11 + 32);
        swift_unknownObjectRetain();
      }
      ++v11;
      v14 = (void *)sub_222596630();
      objc_msgSend(v13, sel_didUpdateStateWithActionSetUUID_state_, v14, v12);

      swift_unknownObjectRelease();
    }
    while (v10 != v11);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_2219A43E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35[5];

  v34 = a5;
  v10 = sub_222596678();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_222596B40();
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  if (*(_QWORD *)(v17 + 16) && (result = sub_22198D5E4(a2), (v19 & 1) != 0))
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * result);
    if (*(_BYTE *)(v20 + 16) != (a3 & 1))
    {
      *(_BYTE *)(v20 + 16) = a3 & 1;
      swift_beginAccess();
      *v34 = *(_QWORD *)(v20 + 24);
      return swift_bridgeObjectRetain();
    }
    v28 = MEMORY[0x24BEE4AF8];
    v27 = v34;
  }
  else
  {
    sub_2219950CC(a4, (uint64_t)&off_24E76B2D8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    v21 = sub_222596B28();
    v22 = sub_22259702C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v35[0] = v30;
      v31 = v5;
      *(_DWORD *)v23 = 136315138;
      v29[1] = v23 + 4;
      sub_221977FA4();
      v24 = sub_222597530();
      v35[4] = sub_221921364(v24, v25, v35);
      sub_222597134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      _os_log_impl(&dword_2218F0000, v21, v22, "Action Set: %s is not being monitored", v23, 0xCu);
      v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v26, -1, -1);
      MEMORY[0x227676FE0](v23, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v33);
    v27 = v34;
    v28 = MEMORY[0x24BEE4AF8];
  }
  *v27 = v28;
  return result;
}

id ActionSetState.SubscriptionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ActionSetState.SubscriptionManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ActionSetState.SubscriptionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionSetState.SubscriptionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2219A4820()
{
  return 0xD000000000000022;
}

uint64_t _s19SubscriptionManagerC23MonitoredActionSetStateCMa()
{
  return objc_opt_self();
}

uint64_t sub_2219A485C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_2219A4890()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_221900360;
  return ((uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_25573FC88 + dword_25573FC88))(v2, v3, v4);
}

BOOL sub_2219A4904(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_2225973B0();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      while (1)
      {
        v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x227674274](v5 - 4, a1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_12;
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        swift_unknownObjectRelease();
        v9 = v7 == a2;
        if (v7 != a2)
        {
          ++v5;
          if (v8 != v4)
            continue;
        }
        goto LABEL_15;
      }
    }
  }
  v9 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2219A4A04(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x227674274](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      if (v6 == a2)
        break;
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_11:
        swift_bridgeObjectRetain();
        v4 = sub_2225973B0();
        swift_bridgeObjectRelease();
        v5 = 0;
        if (!v4)
          return v5;
      }
      else
      {
        ++v5;
        if (v7 == v4)
          return 0;
      }
    }
  }
  return v5;
}

uint64_t sub_2219A4AF4(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_2219A4A04(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_54;
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v22 = sub_2225973B0();
      swift_bridgeObjectRelease();
      if (v9 != v22)
        goto LABEL_6;
    }
    else if (v9 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v6 + 5; ; ++i)
      {
        v11 = i - 4;
        v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v13 = MEMORY[0x227674274](i - 4);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          v13 = *(_QWORD *)(v12 + 8 * i);
          swift_unknownObjectRetain();
        }
        swift_unknownObjectRelease();
        if (v13 != a2)
          break;
LABEL_32:
        v9 = i - 3;
        if (__OFADD__(v11, 1))
          goto LABEL_46;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v19 = sub_2225973B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v19 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v19)
          return v6;
      }
      if (v11 == v6)
      {
LABEL_31:
        if (__OFADD__(v6++, 1))
          goto LABEL_47;
        goto LABEL_32;
      }
      v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x227674274](v6, *a1);
        v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v11 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v15 = *(_QWORD *)(v9 + 8 * i);
          swift_unknownObjectRetain();
          goto LABEL_20;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v6 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v14 = *(_QWORD *)(v9 + 8 * v6 + 32);
        swift_unknownObjectRetain();
        if ((v9 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v15 = MEMORY[0x227674274](i - 4, v9);
      v9 = *a1;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        sub_22190F244(v9);
      }
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v15;
      swift_unknownObjectRelease();
      sub_222596E58();
      v9 = *a1;
      v17 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v17 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
        sub_22190F244(v9);
      if ((v11 & 0x8000000000000000) != 0)
        goto LABEL_52;
      if (v11 >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v14;
      swift_unknownObjectRelease();
      sub_222596E58();
      goto LABEL_31;
    }
    return v6;
  }
  v20 = *a1;
  if (!(v20 >> 62))
    return *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v23 = sub_2225973B0();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_2219A4E10()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2219A4E7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2219A4EEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_2219A4EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_2219A4F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_2219A4F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_2219A4F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_2219A4FBC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2219A506C + 4 * byte_22268E128[(v7 - 1)]))();
}

void sub_2219A50BC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t _s7SecuredVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7SecuredVMn);
}

void sub_2219A5278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    sub_221994504(&qword_25573F550, (unint64_t *)&unk_25573FEC0);
    sub_222596FC0();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_2225971F4())
      goto LABEL_36;
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_36;
LABEL_26:
    v15 = objc_msgSend(v12, sel_accessory, v17);

    v3 = v11;
    v4 = v9;
    if (v15)
    {
      MEMORY[0x227673E0C]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_222596E64();
      sub_222596E88();
      sub_222596E58();
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_25:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    goto LABEL_26;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_36;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_36;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v16 = v3 + 6;
          while (v8 != v16)
          {
            v13 = *(_QWORD *)(v18 + 8 * v16++);
            if (v13)
            {
              v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_22193D780();
          return;
        }
      }
    }
LABEL_24:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_2219A55B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_222596678();
  v43 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v35 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, &qword_25573FEB0);
    sub_221994504(&qword_25573FEB8, &qword_25573FEB0);
    result = sub_222596FC0();
    a1 = v45;
    v41 = v46;
    v10 = v47;
    v11 = v48;
    v12 = v49;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v14 = *(_QWORD *)(a1 + 56);
    v41 = a1 + 56;
    v10 = ~v13;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v12 = v16 & v14;
    result = swift_bridgeObjectRetain();
    v11 = 0;
  }
  v36 = v10;
  v38 = MEMORY[0x24BEE4AF8];
  v40 = (unint64_t)(v10 + 64) >> 6;
  v39 = MEMORY[0x24BEE4AD0] + 8;
  v42 = a1;
  while (1)
  {
    v17 = v11;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v20 = sub_2225971F4();
    if (!v20)
      goto LABEL_41;
    v44 = v20;
    sub_221917374(0, &qword_25573FEB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v21 = v50;
    swift_unknownObjectRelease();
    a1 = v42;
    if (!v21)
      goto LABEL_41;
LABEL_31:
    v25 = objc_msgSend(v21, sel_accessory, v35, v36);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_uuid);

      sub_222596648();
      a1 = v42;
      v28 = v43;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v4, 0, 1, v5);
    }
    else
    {
      v28 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v4, 1, 1, v5);
    }

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v4, 1, v5) == 1)
    {
      result = sub_221917338((uint64_t)v4, (uint64_t *)&unk_25573C160);
    }
    else
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v30 = v35;
      v29(v35, v4, v5);
      v29(v37, v30, v5);
      v31 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_221991AE0(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
        v31 = sub_221991AE0(v32 > 1, v33 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v33 + 1;
      v34 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      v38 = v31;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v31 + v34 + *(_QWORD *)(v43 + 72) * v33, v37, v5);
      a1 = v42;
    }
  }
  if (v12)
  {
    v18 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v19 = v18 | (v11 << 6);
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v19);
    if (!v21)
      goto LABEL_41;
    goto LABEL_31;
  }
  v22 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v22 >= v40)
      goto LABEL_41;
    v23 = *(_QWORD *)(v41 + 8 * v22);
    ++v11;
    if (!v23)
    {
      v11 = v17 + 2;
      if (v17 + 2 >= v40)
        goto LABEL_41;
      v23 = *(_QWORD *)(v41 + 8 * v11);
      if (!v23)
      {
        v11 = v17 + 3;
        if (v17 + 3 >= v40)
          goto LABEL_41;
        v23 = *(_QWORD *)(v41 + 8 * v11);
        if (!v23)
        {
          v11 = v17 + 4;
          if (v17 + 4 >= v40)
            goto LABEL_41;
          v23 = *(_QWORD *)(v41 + 8 * v11);
          if (!v23)
          {
            v11 = v17 + 5;
            if (v17 + 5 >= v40)
              goto LABEL_41;
            v23 = *(_QWORD *)(v41 + 8 * v11);
            if (!v23)
            {
              v24 = v17 + 6;
              while (v40 != v24)
              {
                v23 = *(_QWORD *)(v41 + 8 * v24++);
                if (v23)
                {
                  v11 = v24 - 1;
                  goto LABEL_29;
                }
              }
LABEL_41:
              sub_22193D780();
              return v38;
            }
          }
        }
      }
    }
LABEL_29:
    v12 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v11 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219A5AA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740010);
  v2 = MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - v5;
  v30 = MEMORY[0x24BEE4AF8];
  v7 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v28 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_22:
    v18 = *(_QWORD *)(a1 + 48);
    v19 = sub_222596678();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    v20 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v14);
    v21 = v29;
    v6[*(int *)(v29 + 48)] = v20;
    sub_2219172F4((uint64_t)v6, (uint64_t)v4, &qword_255740010);
    v22 = v4[*(int *)(v21 + 48)];
    v23 = objc_allocWithZone((Class)HMDActionSetResponse);
    v24 = (void *)sub_222596630();
    v25 = objc_msgSend(v23, sel_initWithActionSetUUID_state_, v24, v22);

    result = sub_221917338((uint64_t)v4, &qword_255740010);
    if (v25)
    {
      MEMORY[0x227673E0C](result);
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_222596E64();
      sub_222596E88();
      result = sub_222596E58();
    }
  }
  v15 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v15 >= v28)
    goto LABEL_26;
  v16 = *(_QWORD *)(v27 + 8 * v15);
  ++v12;
  if (v16)
    goto LABEL_21;
  v12 = v15 + 1;
  if (v15 + 1 >= v28)
    goto LABEL_26;
  v16 = *(_QWORD *)(v27 + 8 * v12);
  if (v16)
    goto LABEL_21;
  v12 = v15 + 2;
  if (v15 + 2 >= v28)
    goto LABEL_26;
  v16 = *(_QWORD *)(v27 + 8 * v12);
  if (v16)
    goto LABEL_21;
  v12 = v15 + 3;
  if (v15 + 3 >= v28)
    goto LABEL_26;
  v16 = *(_QWORD *)(v27 + 8 * v12);
  if (v16)
  {
LABEL_21:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_22;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
  {
LABEL_26:
    swift_release();
    return v30;
  }
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v28)
      goto LABEL_26;
    v16 = *(_QWORD *)(v27 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2219A5D90(uint64_t a1, uint64_t a2)
{
  return sub_2219A5DB4(a1, a2, (unint64_t *)&qword_25573FFF0, (uint64_t)off_24E762598, (unint64_t *)&qword_25573F5B8, &qword_25573CC20);
}

uint64_t sub_2219A5DB4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unint64_t *a5, uint64_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((a1 & 0xC000000000000001) != 0)
    v12 = sub_2225971D0();
  else
    v12 = *(_QWORD *)(a1 + 16);
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    if (v12 > sub_2225971D0() / 8)
    {
      swift_bridgeObjectRetain();
      v14 = sub_2225971D0();
      v15 = sub_2219B00A8(v13, v14, a6, a3);
      swift_bridgeObjectRelease();
      a2 = v15;
      return sub_2219B45E4(a1, a2, a3, a4, a5, a6);
    }
  }
  else if (v12 > *(_QWORD *)(a2 + 16) >> 3)
  {
    return sub_2219B45E4(a1, a2, a3, a4, a5, a6);
  }
  sub_2219B3414(a1, a3, a4, a5, a6);
  return a2;
}

uint64_t sub_2219A5EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_2225971D0();
    if ((v2 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_9:
    if (v4 > *(_QWORD *)(v2 + 16) >> 3)
      return sub_2219B3AD0(a1, v2);
    goto LABEL_11;
  }
  v4 = *(_QWORD *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0)
    goto LABEL_9;
LABEL_3:
  if (v2 < 0)
    v5 = v2;
  else
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v4 > sub_2225971D0() / 8)
  {
    swift_bridgeObjectRetain();
    v6 = sub_2225971D0();
    v7 = sub_2219B00A8(v5, v6, (uint64_t *)&unk_25573FF10, (unint64_t *)&qword_25573FEE0);
    swift_bridgeObjectRelease();
    v2 = v7;
    return sub_2219B3AD0(a1, v2);
  }
LABEL_11:
  sub_2219B3414(a1, (unint64_t *)&qword_25573FEE0, (uint64_t)off_24E762618, &qword_25573FEE8, (uint64_t *)&unk_25573FF10);
  return v2;
}

id ActionSetState.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionSetState();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ActionSetState()
{
  return objc_opt_self();
}

_QWORD *ActionSetState.Observer.__allocating_init(dataSource:notificationRegistry:)(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  _QWORD *v6;

  swift_allocObject();
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F170]), sel_initWithMinimumTimeInterval_maximumTimeInterval_exponentialFactor_options_, 2, 0, 15.0, 2000.0);
  type metadata accessor for ActionSetState.Observer();
  swift_allocObject();
  v6 = ActionSetState.Observer.init(dataSource:notificationRegistry:notificationCenter:characteristicRetryTimer:)(a1, a2, v4, v5);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

_QWORD *ActionSetState.Observer.init(dataSource:notificationRegistry:)(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  _QWORD *v6;

  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F170]), sel_initWithMinimumTimeInterval_maximumTimeInterval_exponentialFactor_options_, 2, 0, 15.0, 2000.0);
  type metadata accessor for ActionSetState.Observer();
  swift_allocObject();
  v6 = ActionSetState.Observer.init(dataSource:notificationRegistry:notificationCenter:characteristicRetryTimer:)(a1, a2, v4, v5);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

_QWORD *ActionSetState.Observer.__allocating_init(dataSource:notificationRegistry:notificationCenter:characteristicRetryTimer:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  swift_allocObject();
  return ActionSetState.Observer.init(dataSource:notificationRegistry:notificationCenter:characteristicRetryTimer:)(a1, a2, a3, a4);
}

_QWORD *ActionSetState.Observer.init(dataSource:notificationRegistry:notificationCenter:characteristicRetryTimer:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  objc_super v28;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v13 = MEMORY[0x24BEE4B08];
  v5[14] = MEMORY[0x24BEE4B08];
  v5[15] = v13;
  v5[17] = v13;
  v5[18] = v13;
  swift_unknownObjectWeakInit();
  v5[22] = MEMORY[0x24BEE4B00];
  swift_unknownObjectWeakAssign();
  v5[19] = a3;
  v5[20] = a2;
  v5[16] = a4;
  v14 = (objc_class *)type metadata accessor for ActionSetState.Observer();
  v28.receiver = v5;
  v28.super_class = v14;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = objc_msgSendSuper2(&v28, sel_init);
  v19 = (void *)v18[16];
  v20 = v18;
  objc_msgSend(v19, sel_setDelegate_, v20);
  objc_msgSend(v15, sel_addDelegate_, v20);
  objc_msgSend(v16, sel_addObserver_selector_name_object_, v20, sel_handleActionSetAddedWithNotification_, CFSTR("HMDActionSetAddedNotification"), a1);
  v21 = (void *)MEMORY[0x227677094](v20 + 21);
  if (v21)
  {
    v22 = objc_msgSend(v21, sel_actionSetsUUIDsForStateObserver_, v20);
    swift_unknownObjectRelease();
    sub_222596678();
    v23 = sub_222596E40();

    v24 = sub_222596EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = 0;
    v25[3] = 0;
    v25[4] = v20;
    v25[5] = v23;
    v26 = v20;
    swift_bridgeObjectRetain();
    sub_22191760C((uint64_t)v12, (uint64_t)&unk_25573FD30, (uint64_t)v25);
    swift_release();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  return v20;
}

Swift::Void __swiftcall ActionSetState.Observer.stopMonitoring(actionSet:)(HMDActionSet *actionSet)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  HMDActionSet *v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = actionSet;
  swift_retain();
  v8 = actionSet;
  sub_22191760C((uint64_t)v5, (uint64_t)&unk_25573FD40, (uint64_t)v7);
  swift_release();
}

uint64_t sub_2219A66E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A66F8()
{
  uint64_t v0;

  sub_2219A72E0(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall ActionSetState.Observer.stateRegistrationsDidChange(forActionSetUUIDs:)(Swift::OpaquePointer forActionSetUUIDs)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  Swift::OpaquePointer *v7;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (Swift::OpaquePointer *)swift_allocObject();
  v7[2]._rawValue = 0;
  v7[3]._rawValue = 0;
  v7[4]._rawValue = v1;
  v7[5]._rawValue = forActionSetUUIDs._rawValue;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22191760C((uint64_t)v5, (uint64_t)&unk_25573FD48, (uint64_t)v7);
  swift_release();
}

uint64_t sub_2219A68DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A68F4()
{
  uint64_t v0;

  sub_2219A6A20(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A6A20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  char *v30;
  char *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_222596B40();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_222596678();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v45 = a1;
  if (v17)
  {
    v51 = v12;
    v52 = v7;
    v18 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v56 = *(_QWORD *)(v9 + 72);
    v57 = v2 + 168;
    v60 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v19 = 136315138;
    v47 = v19;
    v46 = MEMORY[0x24BEE4AD8] + 8;
    v20 = v59;
    v48 = ObjectType;
    v49 = v2;
    v55 = v9;
    v50 = v14;
    while (1)
    {
      v60(v20, v18, v8);
      v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v58(v20, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v8) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v20, v8);
      v24 = MEMORY[0x227677094](v57);
      if (v24
        && (v25 = (void *)v24,
            v26 = (void *)sub_222596630(),
            v27 = objc_msgSend(v25, sel_actionSetWithUUID_stateObserver_, v26, v2, v45, v46),
            v26,
            swift_unknownObjectRelease(),
            v27))
      {
        v28 = *(void **)(v2 + 160);
        v29 = (void *)sub_222596630();
        LODWORD(v28) = objc_msgSend(v28, sel_hasRegistrationsForActionSetUUID_, v29);

        if ((_DWORD)v28)
          sub_2219A6EA4(v27);
        else
          sub_2219A72E0(v27);
        v20 = v59;

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }
      else
      {
        v30 = v52;
        sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
        v31 = v14;
        v32 = v51;
        v60(v51, (uint64_t)v31, v8);
        v33 = sub_222596B28();
        v34 = sub_222597020();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = swift_slowAlloc();
          v36 = swift_slowAlloc();
          v61 = v36;
          *(_DWORD *)v35 = v47;
          sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v37 = sub_222597530();
          *(_QWORD *)(v35 + 4) = sub_221921364(v37, v38, &v61);
          swift_bridgeObjectRelease();
          v39 = *(void (**)(char *, uint64_t))(v55 + 8);
          v39(v32, v8);
          _os_log_impl(&dword_2218F0000, v33, v34, "Could not find Action Set: %s", (uint8_t *)v35, 0xCu);
          swift_arrayDestroy();
          v40 = v36;
          ObjectType = v48;
          MEMORY[0x227676FE0](v40, -1, -1);
          v41 = v35;
          v2 = v49;
          MEMORY[0x227676FE0](v41, -1, -1);

          v42 = v30;
          v9 = v55;
          (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v54);
          v14 = v50;
          v39(v50, v8);
        }
        else
        {

          v21 = v55;
          v22 = *(void (**)(char *, uint64_t))(v55 + 8);
          v22(v32, v8);
          v23 = v30;
          v9 = v21;
          (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v54);
          v14 = v50;
          v22(v50, v8);
        }
        v20 = v59;
      }
      v18 += v56;
      if (!--v17)
      {
        v58(v20, 1, 1, v8);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
    v43(v59, 1, 1, v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2219A6EA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char v11;
  char v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  NSObject *v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  char *v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  NSObject *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_222596B40();
  v33 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 176) + 16)
    && (v10 = a1,
        swift_bridgeObjectRetain(),
        sub_22198D650((uint64_t)v10),
        v12 = v11,
        swift_bridgeObjectRelease(),
        v10,
        (v12 & 1) != 0))
  {
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v13 = v10;
    v14 = sub_222596B28();
    v15 = sub_22259702C();
    if (os_log_type_enabled(v14, v15))
    {
      v32 = v5;
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v36 = v13;
      v18 = v13;
      sub_222597134();
      *v17 = v13;

      v5 = v32;
      _os_log_impl(&dword_2218F0000, v14, v15, "Action Set: %@ is already monitored", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v17, -1, -1);
      MEMORY[0x227676FE0](v16, -1, -1);
    }
    else
    {

      v14 = v13;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v5);
  }
  else
  {
    swift_beginAccess();
    v19 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = *(_QWORD *)(v1 + 176);
    *(_QWORD *)(v1 + 176) = 0x8000000000000000;
    sub_221968718(0, v19, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v1 + 176) = v35;
    swift_bridgeObjectRelease();

    swift_endAccess();
    sub_2219AB2F4();
    sub_2219A9DFC();
    sub_2219AABB0();
    v21 = v34;
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v22 = v19;
    v23 = sub_222596B28();
    v24 = sub_222597020();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v32 = v5;
      v27 = (_QWORD *)v26;
      *(_DWORD *)v25 = 138412290;
      v36 = v22;
      v28 = v22;
      v21 = v34;
      sub_222597134();
      *v27 = v22;

      _os_log_impl(&dword_2218F0000, v23, v24, "Started monitoring Action Set: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      v29 = v27;
      v5 = v32;
      MEMORY[0x227676FE0](v29, -1, -1);
      MEMORY[0x227676FE0](v25, -1, -1);
    }
    else
    {

      v23 = v22;
    }
    v30 = v33;

    (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v5);
    objc_msgSend(*(id *)(v2 + 152), sel_addObserver_selector_name_object_, v2, sel_handleActionSetUpdatedWithNotification_, CFSTR("HMDActionSetActionsUpdatedNotification"), v22);
    return sub_2219AC990();
  }
}

uint64_t sub_2219A72E0(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  char v11;
  char v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _QWORD *v18;
  NSObject *v19;
  _QWORD *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;

  ObjectType = swift_getObjectType();
  v4 = sub_222596B40();
  v29 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - v8;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 176) + 16)
    && (v10 = a1,
        swift_bridgeObjectRetain(),
        sub_22198D650((uint64_t)v10),
        v12 = v11,
        swift_bridgeObjectRelease(),
        v10,
        (v12 & 1) != 0))
  {
    objc_msgSend(*(id *)(v1 + 152), sel_removeObserver_name_object_, v1, CFSTR("HMDActionSetActionsUpdatedNotification"), v10);
    swift_beginAccess();
    sub_2219F6370((uint64_t)v10);
    swift_endAccess();
    sub_2219AB2F4();
    sub_2219A9DFC();
    sub_2219AABB0();
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v13 = v10;
    v14 = sub_222596B28();
    v15 = sub_222597020();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28 = v4;
      v18 = (_QWORD *)v17;
      *(_DWORD *)v16 = 138412290;
      v30 = v13;
      v19 = v13;
      sub_222597134();
      *v18 = v13;

      _os_log_impl(&dword_2218F0000, v14, v15, "Stoped monitoring Action Set: %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      v20 = v18;
      v4 = v28;
      MEMORY[0x227676FE0](v20, -1, -1);
      MEMORY[0x227676FE0](v16, -1, -1);
    }
    else
    {

      v14 = v13;
    }
    v9 = v7;
  }
  else
  {
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v21 = a1;
    v14 = sub_222596B28();
    v22 = sub_222597038();
    if (os_log_type_enabled(v14, v22))
    {
      v28 = v4;
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v30 = v21;
      v25 = v21;
      sub_222597134();
      *v24 = v21;

      v4 = v28;
      _os_log_impl(&dword_2218F0000, v14, v22, "Action Set: %@ was not being monitored", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v24, -1, -1);
      MEMORY[0x227676FE0](v23, -1, -1);
    }
    else
    {

      v14 = v21;
    }
  }
  v26 = v29;

  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v4);
}

Swift::Void __swiftcall ActionSetState.Observer.handleActionSetAdded(notification:)(NSNotification notification)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  id v43[5];
  __int128 v44;
  __int128 v45;

  v2 = v1;
  v39 = v2;
  ObjectType = swift_getObjectType();
  v40 = (_QWORD *)sub_222596B40();
  v5 = *(v40 - 1);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_222596678();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v37 = (char *)&v36 - v18;
  v19 = -[objc_class userInfo](notification.super.isa, sel_userInfo);
  if (!v19)
  {
    v44 = 0u;
    v45 = 0u;
LABEL_12:
    sub_221917338((uint64_t)&v44, &qword_2557410E0);
    goto LABEL_13;
  }
  v20 = v19;
  v21 = sub_222596C6C();

  v41 = sub_222596CF0();
  v42 = v22;
  sub_222597230();
  if (*(_QWORD *)(v21 + 16) && (v23 = sub_22198D548((uint64_t)v43), (v24 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v21 + 56) + 32 * v23, (uint64_t)&v44);
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v43);
  if (!*((_QWORD *)&v45 + 1))
    goto LABEL_12;
  sub_221917374(0, &qword_25573FD50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v33 = sub_222596B28();
    v34 = sub_222597038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_2218F0000, v33, v34, "Action Set is missing from notification", v35, 2u);
      MEMORY[0x227676FE0](v35, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v5 + 8))(v7, v40);
    return;
  }
  v40 = v43[0];
  v25 = objc_msgSend(v43[0], sel_uuid);
  if (v25)
  {
    v26 = v25;
    sub_222596648();

    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v12, v17, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v28 = v37;
      v27(v37, v12, v13);
      v29 = sub_222596EF4();
      v30 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v38, 1, 1, v29);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v28, v13);
      v31 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v32 = (char *)swift_allocObject();
      *((_QWORD *)v32 + 2) = 0;
      *((_QWORD *)v32 + 3) = 0;
      *((_QWORD *)v32 + 4) = v39;
      v27(&v32[v31], v17, v13);
      swift_retain();
      sub_22191760C(v30, (uint64_t)&unk_25573FD60, (uint64_t)v32);
      swift_release();

      (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  __break(1u);
}

uint64_t sub_2219A7B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A7B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C030);
  v2 = sub_222596678();
  *(_QWORD *)(v0 + 32) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 48) = v4;
  v5 = (v4 + 32) & ~(unint64_t)v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 40) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_222688C60;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v6 + v5, v1, v2);
  return swift_task_switch();
}

uint64_t sub_2219A7BE4()
{
  uint64_t v0;

  sub_2219A6A20(*(_QWORD *)(v0 + 40));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A7C68(void *a1)
{
  return sub_2219A8E74(a1, &qword_25573FD50, (uint64_t)off_24E762588, (uint64_t)&unk_24E76B5B0, (uint64_t)&unk_25573FF98);
}

uint64_t sub_2219A7C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A7CA4()
{
  uint64_t v0;

  sub_2219A7CE0(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A7CE0(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char v9;
  char v10;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;

  ObjectType = swift_getObjectType();
  v4 = sub_222596B40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 176) + 16)
    && (v8 = a1,
        swift_bridgeObjectRetain(),
        sub_22198D650((uint64_t)v8),
        v10 = v9,
        swift_bridgeObjectRelease(),
        v8,
        (v10 & 1) != 0))
  {
    sub_2219AB2F4();
    sub_2219A9DFC();
    sub_2219AABB0();
    return sub_2219AC990();
  }
  else
  {
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v12 = a1;
    v13 = sub_222596B28();
    v14 = sub_22259702C();
    if (os_log_type_enabled(v13, v14))
    {
      v19 = v4;
      v15 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v20 = v12;
      v16 = v12;
      sub_222597134();
      v17 = v18;
      *v18 = v12;

      v4 = v19;
      _os_log_impl(&dword_2218F0000, v13, v14, "Action set: %@ is not relevant", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v17, -1, -1);
      MEMORY[0x227676FE0](v15, -1, -1);
    }
    else
    {

      v13 = v12;
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_2219A7F20(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36[5];
  __int128 v37;
  __int128 v38;

  ObjectType = swift_getObjectType();
  v3 = sub_2225963FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596B40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2225963F0();
  if (!v14)
  {
    v37 = 0u;
    v38 = 0u;
LABEL_12:
    sub_221917338((uint64_t)&v37, &qword_2557410E0);
LABEL_13:
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v22 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v23 = sub_222596B28();
    v24 = sub_222597020();
    if (os_log_type_enabled(v23, v24))
    {
      v33 = v7;
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v31 = v22;
      v27 = v26;
      v36[0] = v26;
      v32 = v8;
      *(_DWORD *)v25 = 136315138;
      sub_221933018((unint64_t *)&unk_25573FF70, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB930], MEMORY[0x24BDCB950]);
      v28 = sub_222597530();
      *(_QWORD *)&v37 = sub_221921364(v28, v29, v36);
      sub_222597134();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v3);
      _os_log_impl(&dword_2218F0000, v23, v24, "No characteristics in change notification: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v27, -1, -1);
      MEMORY[0x227676FE0](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v3);

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  v15 = v14;
  v34 = 0xD00000000000001BLL;
  v35 = 0x8000000222620C20;
  sub_222597230();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_22198D548((uint64_t)v36), (v17 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v36);
  if (!*((_QWORD *)&v38 + 1))
    goto LABEL_12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F558);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_13;
  v18 = v36[0];
  if ((unint64_t)v36[0] >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v30)
      goto LABEL_10;
  }
  else if (*(_QWORD *)((v36[0] & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:
    v19 = sub_222596EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v33;
    v20[5] = v18;
    swift_retain();
    sub_22191760C((uint64_t)v13, (uint64_t)&unk_25573FF88, (uint64_t)v20);
    return swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2219A8354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = a4;
  *(_QWORD *)(v5 + 72) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A836C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1 >> 62)
    goto LABEL_41;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_2225973B0())
  {
    v3 = *(_QWORD *)(v0 + 64);
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    v4 = (uint64_t *)(v3 + 112);
    v30 = v0;
    v31 = v2;
    if ((v1 & 0xC000000000000001) == 0)
    {
      v0 = *(_QWORD *)(v0 + 72) + 32;
      swift_beginAccess();
      v16 = 0;
      v29 = v0;
      while (1)
      {
        v18 = v16 + 1;
        if (__OFADD__(v16, 1))
          goto LABEL_40;
        v19 = *(void **)(v0 + 8 * v16);
        v20 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v17 = v19;
          swift_bridgeObjectRetain();
          v1 = sub_222597200();

          swift_bridgeObjectRelease();
          if ((v1 & 1) != 0)
          {
            v0 = v30;
            goto LABEL_37;
          }
        }
        else if (*(_QWORD *)(v20 + 16))
        {
          v21 = v19;
          swift_bridgeObjectRetain();
          v1 = (unint64_t)v21;
          v22 = sub_2225970E0();
          v23 = -1 << *(_BYTE *)(v20 + 32);
          v24 = v22 & ~v23;
          if (((*(_QWORD *)(v20 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
          {
            v25 = *(id *)(*(_QWORD *)(v20 + 48) + 8 * v24);
            v1 = sub_2225970EC();

            if ((v1 & 1) != 0)
            {
LABEL_33:
              v0 = v30;
              swift_bridgeObjectRelease();

LABEL_37:
              swift_bridgeObjectRelease();
              sub_2219AC990();
              return (*(uint64_t (**)(void))(v0 + 8))();
            }
            v26 = ~v23;
            while (1)
            {
              v24 = (v24 + 1) & v26;
              if (((*(_QWORD *)(v20 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
                break;
              v27 = *(id *)(*(_QWORD *)(v20 + 48) + 8 * v24);
              v1 = sub_2225970EC();

              if ((v1 & 1) != 0)
                goto LABEL_33;
            }
          }

          swift_bridgeObjectRelease();
          v2 = v31;
          v0 = v29;
        }
        v16 = v18;
        if (v18 == v2)
        {
          v0 = v30;
          goto LABEL_35;
        }
      }
    }
    swift_beginAccess();
    v5 = 0;
    while (1)
    {
      v6 = MEMORY[0x227674274](v5, *(_QWORD *)(v0 + 72));
      if (__OFADD__(v5++, 1))
        break;
      v8 = v6;
      v9 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v1 = sub_222597200();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        if ((v1 & 1) != 0)
          goto LABEL_37;
        if (v5 == v2)
          goto LABEL_35;
      }
      else
      {
        if (*(_QWORD *)(v9 + 16))
        {
          swift_bridgeObjectRetain();
          v1 = v8;
          v10 = sub_2225970E0();
          v11 = -1 << *(_BYTE *)(v9 + 32);
          v12 = v10 & ~v11;
          if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          {
            v13 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v12);
            v1 = sub_2225970EC();

            if ((v1 & 1) != 0)
            {
LABEL_32:
              v0 = v30;
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_37;
            }
            v14 = ~v11;
            while (1)
            {
              v12 = (v12 + 1) & v14;
              if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
                break;
              v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v12);
              v1 = sub_2225970EC();

              if ((v1 & 1) != 0)
                goto LABEL_32;
            }
          }
          swift_bridgeObjectRelease();
          v0 = v30;
          v2 = v31;
        }
        swift_unknownObjectRelease();
        if (v5 == v2)
          goto LABEL_35;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2219A87EC(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  _OWORD v28[2];
  _BYTE v29[24];
  uint64_t v30;

  ObjectType = swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596678();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - v12;
  if (objc_msgSend(a1, sel_object))
  {
    sub_222597158();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v28, 0, sizeof(v28));
  }
  sub_2219172F4((uint64_t)v28, (uint64_t)v29, &qword_2557410E0);
  if (v30)
  {
    sub_221917374(0, &qword_25573FEB0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = v27;
      v15 = objc_msgSend(v27, sel_accessory);
      if (v15)
      {
        v16 = v15;
        objc_opt_self();
        v17 = (void *)swift_dynamicCastObjCClass();
        if (v17)
        {
          v18 = objc_msgSend(v17, sel_uuid);
          v26 = ObjectType;
          v19 = v18;
          sub_222596648();

          v20 = sub_222596EF4();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
          v21 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
          v25 = v14;
          v22 = (v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
          v23 = (char *)swift_allocObject();
          *((_QWORD *)v23 + 2) = 0;
          *((_QWORD *)v23 + 3) = 0;
          *((_QWORD *)v23 + 4) = v1;
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v21], v11, v7);
          *(_QWORD *)&v23[v22] = v26;
          swift_retain();
          sub_22191760C((uint64_t)v6, (uint64_t)&unk_25573FF68, (uint64_t)v23);
          swift_release();

          (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        }
        else
        {

        }
      }
      else
      {

      }
    }
  }
  else
  {
    sub_221917338((uint64_t)v29, &qword_2557410E0);
  }
}

uint64_t sub_2219A8AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v7 = sub_222596678();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v8 = sub_222596B40();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219A8B48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 136);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2219A8BA0()
{
  uint64_t v0;
  char v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_2219EBE60(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
    return swift_task_switch();
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  sub_2219950CC(*(_QWORD *)(v0 + 64), (uint64_t)&off_24E76B4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  v7 = sub_222596B28();
  v8 = sub_22259702C();
  v9 = os_log_type_enabled(v7, v8);
  v11 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 80);
  if (v9)
  {
    v20 = *(_QWORD *)(v0 + 112);
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v16 = 136315138;
    sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v18 = sub_222597530();
    *(_QWORD *)(v0 + 40) = sub_221921364(v18, v19, &v21);
    sub_222597134();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
    _os_log_impl(&dword_2218F0000, v7, v8, "Media accessory: %s is not relevant", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v17, -1, -1);
    MEMORY[0x227676FE0](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v13);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v15 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A8E00()
{
  uint64_t v0;

  sub_2219AC990();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A8E50(void *a1)
{
  return sub_2219A8E74(a1, &qword_25573F568, (uint64_t)off_24E762690, (uint64_t)&unk_24E76B538, (uint64_t)&unk_25573FF58);
}

uint64_t sub_2219A8E74(void *a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v16[2];
  _OWORD v17[2];
  _BYTE v18[24];
  uint64_t v19;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_object))
  {
    sub_222597158();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_2219172F4((uint64_t)v17, (uint64_t)v18, &qword_2557410E0);
  if (!v19)
    return sub_221917338((uint64_t)v18, &qword_2557410E0);
  sub_221917374(0, a2);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v13 = v16[1];
    v14 = sub_222596EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v5;
    v15[5] = v13;
    swift_retain();
    sub_22191760C((uint64_t)v11, a5, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_2219A8FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219A9010()
{
  uint64_t v0;

  sub_2219A9098(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2219A904C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5;

  v5 = a3;
  swift_retain();
  a4(v5);
  swift_release();

}

uint64_t sub_2219A9098(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;

  ObjectType = swift_getObjectType();
  v4 = sub_222596B40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 144);
  swift_bridgeObjectRetain();
  v9 = sub_2219EBFE4(a1, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return sub_2219AC990();
  sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
  v11 = a1;
  v12 = sub_222596B28();
  v13 = sub_22259702C();
  if (os_log_type_enabled(v12, v13))
  {
    v18 = v4;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v14 = 138412290;
    v19 = v11;
    v16 = v11;
    v5 = v17;
    sub_222597134();
    *v15 = v11;

    v4 = v18;
    _os_log_impl(&dword_2218F0000, v12, v13, "Lighting profile: %@ is not relevant", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v15, -1, -1);
    MEMORY[0x227676FE0](v14, -1, -1);
  }
  else
  {

    v12 = v11;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActionSetState.Observer.currentStateForActionSetUUIDs(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219A9308()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[4];
  v4 = sub_222596EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  v5[5] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  v0[7] = sub_221917758(v1, (uint64_t)&unk_25573FD78, (uint64_t)v5);
  v6 = (_QWORD *)swift_task_alloc();
  v0[8] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C0A0);
  *v6 = v0;
  v6[1] = sub_2219A9408;
  return sub_222596F54();
}

uint64_t sub_2219A9408()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2219A9464()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    return swift_willThrowTypedImpl();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = sub_2219A5AA8(v2);
  sub_2219AEF24(v2, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_2219A94F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2219A950C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_2219A97C8(*(_QWORD *)(v0 + 32));
  return swift_task_switch();
}

uint64_t sub_2219A954C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219A9694(int a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  sub_222596678();
  v4 = sub_222596E40();
  v3[4] = v4;
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v3[5] = v5;
  *v5 = v3;
  v5[1] = sub_2219A9724;
  return ActionSetState.Observer.currentStateForActionSetUUIDs(_:)(v4);
}

uint64_t sub_2219A9724()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for HMDActionSetResponse(0);
  v2 = (void *)sub_222596E28();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v2);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_2219A97C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  char v35;
  NSObject *v36;
  char *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v61[2];
  __int128 v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjectType;
  char *v69;
  int v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_222596B40();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596678();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v61 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)v61 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v74 = v2 + 168;
    v65 = v2;
    v20 = (uint64_t *)(v2 + 176);
    v21 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v61[0] = a1;
    swift_bridgeObjectRetain();
    v63 = v20;
    swift_beginAccess();
    v75 = *(_QWORD *)(v8 + 72);
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v76 = MEMORY[0x24BEE4B00];
    *(_QWORD *)&v22 = 136315138;
    v62 = v22;
    v61[1] = MEMORY[0x24BEE4AD8] + 8;
    v69 = v6;
    v72 = v18;
    v73 = v8;
    v64 = v14;
    v78(v18, v21, v7);
    while (1)
    {
      v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v71(v18, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7) == 1)
        break;
      v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v27 = v77;
      v26(v77, v18, v7);
      v28 = MEMORY[0x227677094](v74);
      if (v28
        && (v29 = (void *)v28,
            v30 = (void *)sub_222596630(),
            v31 = objc_msgSend(v29, sel_actionSetWithUUID_stateObserver_, v30, v65),
            v30,
            swift_unknownObjectRelease(),
            v31))
      {
        v32 = *v63;
        if (*(_QWORD *)(*v63 + 16))
        {
          v33 = v31;
          swift_bridgeObjectRetain();
          v34 = sub_22198D650((uint64_t)v33);
          if ((v35 & 1) != 0)
            v70 = *(unsigned __int8 *)(*(_QWORD *)(v32 + 56) + v34);
          else
            v70 = 0;
          swift_bridgeObjectRelease();

        }
        else
        {
          v70 = 0;
        }
        v78(v14, (uint64_t)v27, v7);
        v44 = v76;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v79 = v44;
        v47 = sub_22198D5E4((uint64_t)v14);
        v48 = *(_QWORD *)(v44 + 16);
        v49 = (v46 & 1) == 0;
        v50 = v48 + v49;
        if (__OFADD__(v48, v49))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          result = sub_222597878();
          __break(1u);
          return result;
        }
        v51 = v46;
        if (*(_QWORD *)(v44 + 24) >= v50)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_221969E90();
        }
        else
        {
          sub_221966A08(v50, isUniquelyReferenced_nonNull_native);
          v52 = sub_22198D5E4((uint64_t)v14);
          if ((v51 & 1) != (v53 & 1))
            goto LABEL_35;
          v47 = v52;
        }
        v6 = v69;
        v76 = v79;
        if ((v51 & 1) != 0)
        {
          *(_BYTE *)(*(_QWORD *)(v79 + 56) + v47) = v70;
        }
        else
        {
          *(_QWORD *)(v79 + 8 * (v47 >> 6) + 64) |= 1 << v47;
          v78((char *)(*(_QWORD *)(v76 + 48) + v47 * v75), (uint64_t)v14, v7);
          v54 = v76;
          *(_BYTE *)(*(_QWORD *)(v76 + 56) + v47) = v70;
          v55 = *(_QWORD *)(v54 + 16);
          v56 = __OFADD__(v55, 1);
          v57 = v55 + 1;
          if (v56)
            goto LABEL_34;
          *(_QWORD *)(v54 + 16) = v57;
        }
        swift_bridgeObjectRelease();
        v8 = v73;
        v58 = *(void (**)(char *, uint64_t))(v73 + 8);
        v58(v14, v7);

        v58(v77, v7);
      }
      else
      {
        sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
        v78(v11, (uint64_t)v27, v7);
        v36 = sub_222596B28();
        v37 = v11;
        v38 = sub_222597020();
        if (os_log_type_enabled(v36, v38))
        {
          v39 = swift_slowAlloc();
          v40 = swift_slowAlloc();
          v79 = v40;
          *(_DWORD *)v39 = v62;
          sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
          v41 = sub_222597530();
          *(_QWORD *)(v39 + 4) = sub_221921364(v41, v42, &v79);
          swift_bridgeObjectRelease();
          v8 = v73;
          v24 = *(void (**)(char *, uint64_t))(v73 + 8);
          v24(v37, v7);
          _os_log_impl(&dword_2218F0000, v36, v38, "Could not find Action Set: %s", (uint8_t *)v39, 0xCu);
          swift_arrayDestroy();
          v43 = v40;
          v6 = v69;
          MEMORY[0x227676FE0](v43, -1, -1);
          MEMORY[0x227676FE0](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v6, v67);
          v25 = v77;
        }
        else
        {
          v23 = v27;

          v8 = v73;
          v24 = *(void (**)(char *, uint64_t))(v73 + 8);
          v24(v37, v7);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v6, v67);
          v25 = v23;
        }
        v24(v25, v7);
        v11 = v37;
        v14 = v64;
      }
      v18 = v72;
      v21 += v75;
      if (!--v19)
      {
        v71(v72, 1, 1, v7);
        break;
      }
      v78(v72, v21, v7);
    }
  }
  else
  {
    v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    v76 = MEMORY[0x24BEE4B00];
    v59(v18, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v76;
}

uint64_t sub_2219A9DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  void *v40;
  id v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  char *v52;
  void *v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t ObjectType;
  char *v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v68 = sub_222596B40();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v65 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_222596678();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v63 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v67 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v63 - v12;
  swift_beginAccess();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_221972248(v14);
  swift_bridgeObjectRelease();
  v71 = sub_2219B7DE0((unint64_t)v15);
  v16 = sub_2219B81BC((unint64_t)v15);
  swift_release();
  sub_2219AA648((uint64_t)v16);
  v17 = v0 + 136;
  swift_beginAccess();
  v18 = *(_QWORD *)(v0 + 136);
  v19 = (uint64_t)v71;
  if (v71[2] <= *(_QWORD *)(v18 + 16) >> 3)
  {
    v70 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2219B3160(v19);
    swift_bridgeObjectRelease();
    v21 = v70;
  }
  else
  {
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_2219B4020(v20, v18);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(*(_QWORD *)v17 + 16) <= *(_QWORD *)(v19 + 16) >> 3)
  {
    v70 = v19;
    v24 = swift_bridgeObjectRetain();
    sub_2219B3160(v24);
    swift_bridgeObjectRelease();
    v23 = v70;
    if (!*(_QWORD *)(v70 + 16))
      goto LABEL_8;
  }
  else
  {
    v22 = swift_bridgeObjectRetain();
    v23 = sub_2219B4020(v22, v19);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v23 + 16))
    {
LABEL_8:
      if (!*(_QWORD *)(v21 + 16))
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  v25 = MEMORY[0x227677094](v1 + 168);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = v65;
    sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
    v43 = sub_222596B28();
    v44 = sub_222597038();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_2218F0000, v43, v44, "Cannot evaluate media state with nil dataSource", v45, 2u);
      MEMORY[0x227676FE0](v45, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v42, v68);
  }
  v26 = (void *)v25;
  v68 = v23;
  v27 = *(_QWORD *)(v21 + 56);
  v63[1] = v17;
  ObjectType = v21 + 56;
  v28 = 1 << *(_BYTE *)(v21 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v65 = (char *)((unint64_t)(v28 + 63) >> 6);
  v66 = v21;
  result = swift_bridgeObjectRetain();
  v32 = 0;
  while (1)
  {
    if (v30)
    {
      v34 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      v35 = v34 | (v32 << 6);
      goto LABEL_30;
    }
    v36 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v36 >= (uint64_t)v65)
      goto LABEL_36;
    v37 = *(_QWORD *)(ObjectType + 8 * v36);
    ++v32;
    if (!v37)
    {
      v32 = v36 + 1;
      if (v36 + 1 >= (uint64_t)v65)
        goto LABEL_36;
      v37 = *(_QWORD *)(ObjectType + 8 * v32);
      if (!v37)
      {
        v32 = v36 + 2;
        if (v36 + 2 >= (uint64_t)v65)
          goto LABEL_36;
        v37 = *(_QWORD *)(ObjectType + 8 * v32);
        if (!v37)
          break;
      }
    }
LABEL_29:
    v30 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v32 << 6);
LABEL_30:
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(v66 + 48) + *(_QWORD *)(v4 + 72) * v35, v3);
    v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v39(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      goto LABEL_37;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v13, v3);
    v40 = (void *)sub_222596630();
    v41 = objc_msgSend(v26, sel_mediaProfileForAccessoryUUID_stateObserver_, v40, v1);

    if (v41)
    {
      objc_msgSend(*(id *)(v1 + 152), sel_removeObserver_name_object_, v1, HMDMediaProfileHasMediaSessionStateChangedNotificationName, v41);

    }
    v33 = (void *)sub_222596630();
    objc_msgSend(v26, sel_stopMonitoringMediaStateForAppleMediaAccessoryUUID_stateObserver_, v33, v1);

    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
  v38 = v36 + 3;
  if (v38 < (uint64_t)v65)
  {
    v37 = *(_QWORD *)(ObjectType + 8 * v38);
    if (!v37)
    {
      while (1)
      {
        v32 = v38 + 1;
        if (__OFADD__(v38, 1))
          break;
        if (v32 >= (uint64_t)v65)
          goto LABEL_36;
        v37 = *(_QWORD *)(ObjectType + 8 * v32);
        ++v38;
        if (v37)
          goto LABEL_29;
      }
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v32 = v38;
    goto LABEL_29;
  }
LABEL_36:
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v39(v13, 1, 1, v3);
LABEL_37:
  v46 = v66;
  swift_release();
  swift_beginAccess();
  sub_2219B3160(v46);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v47 = v68 + 56;
  v48 = 1 << *(_BYTE *)(v68 + 32);
  v49 = -1;
  if (v48 < 64)
    v49 = ~(-1 << v48);
  v50 = v49 & *(_QWORD *)(v68 + 56);
  v66 = (unint64_t)(v48 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v51 = 0;
  while (2)
  {
    v54 = v67;
    if (v50)
    {
      v55 = __clz(__rbit64(v50));
      v50 &= v50 - 1;
      v56 = v55 | (v51 << 6);
LABEL_57:
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v67, *(_QWORD *)(v68 + 48) + *(_QWORD *)(v4 + 72) * v56, v3);
      v39(v54, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v54, 1, v3) == 1)
        goto LABEL_61;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v69, v54, v3);
      v60 = (void *)sub_222596630();
      v61 = objc_msgSend(v26, sel_mediaProfileForAccessoryUUID_stateObserver_, v60, v1);

      if (v61)
      {
        objc_msgSend(*(id *)(v1 + 152), sel_addObserver_selector_name_object_, v1, sel_handleMediaProfileHasMediaSessionStateChangedWithNotification_, HMDMediaProfileHasMediaSessionStateChangedNotificationName, v61);

      }
      v52 = v69;
      v53 = (void *)sub_222596630();
      objc_msgSend(v26, sel_startMonitoringMediaStateForAppleMediaAccessoryUUID_stateObserver_, v53, v1);

      result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v52, v3);
      continue;
    }
    break;
  }
  v57 = v51 + 1;
  if (__OFADD__(v51, 1))
    goto LABEL_65;
  if (v57 >= v66)
  {
LABEL_60:
    v39(v67, 1, 1, v3);
LABEL_61:
    v62 = v68;
    swift_release();
    swift_beginAccess();
    sub_2219AA648(v62);
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  v58 = *(_QWORD *)(v47 + 8 * v57);
  ++v51;
  if (v58)
    goto LABEL_56;
  v51 = v57 + 1;
  if (v57 + 1 >= v66)
    goto LABEL_60;
  v58 = *(_QWORD *)(v47 + 8 * v51);
  if (v58)
    goto LABEL_56;
  v51 = v57 + 2;
  if (v57 + 2 >= v66)
    goto LABEL_60;
  v58 = *(_QWORD *)(v47 + 8 * v51);
  if (v58)
  {
LABEL_56:
    v50 = (v58 - 1) & v58;
    v56 = __clz(__rbit64(v58)) + (v51 << 6);
    goto LABEL_57;
  }
  v59 = v57 + 3;
  if (v59 >= v66)
    goto LABEL_60;
  v58 = *(_QWORD *)(v47 + 8 * v59);
  if (v58)
  {
    v51 = v59;
    goto LABEL_56;
  }
  while (1)
  {
    v51 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v51 >= v66)
      goto LABEL_60;
    v58 = *(_QWORD *)(v47 + 8 * v51);
    ++v59;
    if (v58)
      goto LABEL_56;
  }
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_2219AA648(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_222596678();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_2219AF71C((uint64_t)v8, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    return swift_release();
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_2219AA8D8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v7;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  int64_t v23;
  _QWORD *v24;
  id v26[6];

  v7 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, a2);
    sub_221994504(a4, a2);
    sub_222596FC0();
    v7 = (unint64_t)v26[1];
    v24 = v26[2];
    v9 = v26[3];
    v10 = v26[4];
    v11 = (unint64_t)v26[5];
  }
  else
  {
    v10 = 0;
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v24 = (_QWORD *)(a1 + 56);
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    v9 = (id)v13;
  }
  v23 = ((unint64_t)v9 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v11)
    {
      v16 = (v11 - 1) & v11;
      v17 = __clz(__rbit64(v11)) | ((_QWORD)v10 << 6);
      v18 = (char *)v10;
      goto LABEL_29;
    }
    v20 = (uint64_t)v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v20 >= v23)
      goto LABEL_32;
    v21 = v24[v20];
    v18 = (char *)v10 + 1;
    if (!v21)
    {
      v18 = (char *)v10 + 2;
      if ((uint64_t)v10 + 2 >= v23)
        goto LABEL_32;
      v21 = v24[(_QWORD)v18];
      if (!v21)
      {
        v18 = (char *)v10 + 3;
        if ((uint64_t)v10 + 3 >= v23)
          goto LABEL_32;
        v21 = v24[(_QWORD)v18];
        if (!v21)
        {
          v18 = (char *)v10 + 4;
          if ((uint64_t)v10 + 4 >= v23)
            goto LABEL_32;
          v21 = v24[(_QWORD)v18];
          if (!v21)
          {
            v18 = (char *)v10 + 5;
            if ((uint64_t)v10 + 5 >= v23)
              goto LABEL_32;
            v21 = v24[(_QWORD)v18];
            if (!v21)
            {
              v22 = (char *)v10 + 6;
              while ((char *)v23 != v22)
              {
                v21 = v24[(_QWORD)v22++];
                if (v21)
                {
                  v18 = v22 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_22193D780();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v16 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + ((_QWORD)v18 << 6);
LABEL_29:
    v19 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v17);
    if (!v19)
      goto LABEL_32;
    while (1)
    {
      sub_2219AF980(v26, v19, a2, a3, a5);

      v10 = v18;
      v11 = v16;
      if ((v7 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_2225971F4())
      {
        sub_221917374(0, a2);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v19 = v26[0];
        swift_unknownObjectRelease();
        v18 = (char *)v10;
        v16 = v11;
        if (v19)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_2219AABB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v1 = v0;
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_221972248(v2);
  swift_bridgeObjectRelease();
  v4 = sub_2219B876C((unint64_t)v3);
  swift_release();
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 144);
  swift_bridgeObjectRetain();
  v6 = sub_2219A5DB4((uint64_t)v4, v5, &qword_25573F568, (uint64_t)off_24E762690, &qword_25573FF20, &qword_25573FF28);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_2219A5DB4(v7, (uint64_t)v4, &qword_25573F568, (uint64_t)off_24E762690, &qword_25573FF20, &qword_25573FF28);
  swift_bridgeObjectRelease();
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = v6 & 0xC000000000000001;
    if (sub_2225971D0())
      goto LABEL_7;
  }
  else
  {
    v9 = v6 & 0xC000000000000001;
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_7;
  }
  if (v9)
  {
    if (sub_2225971D0())
      goto LABEL_7;
LABEL_67:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_67;
LABEL_7:
  v39 = v6;
  v40 = v8;
  v38 = v8 & 0xC000000000000001;
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, &qword_25573F568);
    sub_221994504(&qword_25573FF20, &qword_25573F568);
    sub_222596FC0();
    v6 = v46;
    v43 = v47;
    v10 = v48;
    v11 = v49;
    v12 = v50;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(v6 + 32);
    v43 = v6 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(v6 + 56);
    swift_bridgeObjectRetain();
    v11 = 0;
  }
  v41 = (unint64_t)(v10 + 64) >> 6;
  if (v6 < 0)
    goto LABEL_16;
  while (1)
  {
    if (v12)
    {
      v16 = (v12 - 1) & v12;
      v17 = __clz(__rbit64(v12)) | (v11 << 6);
      v18 = v11;
      goto LABEL_33;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
      return;
    }
    if (v21 >= v41)
      goto LABEL_36;
    v22 = *(_QWORD *)(v43 + 8 * v21);
    v18 = v11 + 1;
    if (!v22)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v41)
        goto LABEL_36;
      v22 = *(_QWORD *)(v43 + 8 * v18);
      if (!v22)
      {
        v18 = v11 + 3;
        if (v11 + 3 >= v41)
          goto LABEL_36;
        v22 = *(_QWORD *)(v43 + 8 * v18);
        if (!v22)
        {
          v18 = v11 + 4;
          if (v11 + 4 >= v41)
            goto LABEL_36;
          v22 = *(_QWORD *)(v43 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_32:
    v16 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_33:
    v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    if (!v20)
      goto LABEL_36;
    while (1)
    {
      objc_msgSend(*(id *)(v1 + 152), sel_removeObserver_name_object_, v1, CFSTR("HMDLightProfile.SettingsUpdated"), v20);

      v11 = v18;
      v12 = v16;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_16:
      v19 = sub_2225971F4();
      if (v19)
      {
        v45 = (void *)v19;
        sub_221917374(0, &qword_25573F568);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v20 = v51;
        swift_unknownObjectRelease();
        v18 = v11;
        v16 = v12;
        if (v51)
          continue;
      }
      goto LABEL_36;
    }
  }
  v23 = v11 + 5;
  while (v41 != v23)
  {
    v22 = *(_QWORD *)(v43 + 8 * v23++);
    if (v22)
    {
      v18 = v23 - 1;
      goto LABEL_32;
    }
  }
LABEL_36:
  sub_22193D780();
  swift_beginAccess();
  sub_2219B3414(v39, &qword_25573F568, (uint64_t)off_24E762690, &qword_25573FF20, &qword_25573FF28);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v38)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, &qword_25573F568);
    sub_221994504(&qword_25573FF20, &qword_25573F568);
    sub_222596FC0();
    v24 = (unint64_t)v51;
    v44 = v52;
    v25 = v53;
    v26 = v54;
    v27 = v55;
  }
  else
  {
    v24 = v40;
    v28 = -1 << *(_BYTE *)(v40 + 32);
    v44 = v40 + 56;
    v25 = ~v28;
    v29 = -v28;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    else
      v30 = -1;
    v27 = v30 & *(_QWORD *)(v40 + 56);
    swift_bridgeObjectRetain();
    v26 = 0;
  }
  v42 = (unint64_t)(v25 + 64) >> 6;
  if ((v24 & 0x8000000000000000) != 0)
    goto LABEL_45;
LABEL_43:
  if (v27)
  {
    v31 = (v27 - 1) & v27;
    v32 = __clz(__rbit64(v27)) | (v26 << 6);
    v33 = v26;
LABEL_62:
    v34 = *(id *)(*(_QWORD *)(v24 + 48) + 8 * v32);
    if (!v34)
      goto LABEL_65;
    while (1)
    {
      objc_msgSend(*(id *)(v1 + 152), sel_addObserver_selector_name_object_, v1, sel_handleNaturalLightingProfileStateChangedWithNotification_, CFSTR("HMDLightProfile.SettingsUpdated"), v34);

      v26 = v33;
      v27 = v31;
      if ((v24 & 0x8000000000000000) == 0)
        goto LABEL_43;
LABEL_45:
      if (sub_2225971F4())
      {
        sub_221917374(0, &qword_25573F568);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v34 = v45;
        swift_unknownObjectRelease();
        v33 = v26;
        v31 = v27;
        if (v45)
          continue;
      }
      goto LABEL_65;
    }
  }
  v35 = v26 + 1;
  if (__OFADD__(v26, 1))
    goto LABEL_69;
  if (v35 >= v42)
    goto LABEL_65;
  v36 = *(_QWORD *)(v44 + 8 * v35);
  v33 = v26 + 1;
  if (v36)
    goto LABEL_61;
  v33 = v26 + 2;
  if (v26 + 2 >= v42)
    goto LABEL_65;
  v36 = *(_QWORD *)(v44 + 8 * v33);
  if (v36)
    goto LABEL_61;
  v33 = v26 + 3;
  if (v26 + 3 >= v42)
    goto LABEL_65;
  v36 = *(_QWORD *)(v44 + 8 * v33);
  if (v36)
    goto LABEL_61;
  v33 = v26 + 4;
  if (v26 + 4 >= v42)
    goto LABEL_65;
  v36 = *(_QWORD *)(v44 + 8 * v33);
  if (v36)
  {
LABEL_61:
    v31 = (v36 - 1) & v36;
    v32 = __clz(__rbit64(v36)) + (v33 << 6);
    goto LABEL_62;
  }
  v37 = v26 + 5;
  while (v42 != v37)
  {
    v36 = *(_QWORD *)(v44 + 8 * v37++);
    if (v36)
    {
      v33 = v37 - 1;
      goto LABEL_61;
    }
  }
LABEL_65:
  sub_22193D780();
  swift_beginAccess();
  sub_2219AA8D8(v40, &qword_25573F568, (uint64_t)off_24E762690, &qword_25573FF20, &qword_25573FF28);
  swift_endAccess();
}

void sub_2219AB2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  int64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_221972248(v6);
  swift_bridgeObjectRelease();
  v8 = sub_2219AE1A4((unint64_t)v7);
  swift_release();
  v76 = v1 + 112;
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 112);
  swift_bridgeObjectRetain();
  v10 = sub_2219A5DB4((uint64_t)v8, v9, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_2219A5DB4(v11, (uint64_t)v8, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
  swift_bridgeObjectRelease();
  if ((v10 & 0xC000000000000001) != 0)
  {
    if (sub_2225971D0())
      goto LABEL_11;
  }
  else if (*(_QWORD *)(v10 + 16))
  {
    goto LABEL_11;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    if (sub_2225971D0())
      goto LABEL_11;
  }
  else if (*(_QWORD *)(v12 + 16))
  {
    goto LABEL_11;
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(v1 + 120);
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v14 = sub_2225971D0();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_11;
LABEL_73:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_73;
LABEL_11:
  v75 = (void *)v12;
  v72 = v5;
  v73 = ObjectType;
  v15 = MEMORY[0x227677094](v1 + 168);
  if (v15)
  {
    v16 = (void *)v15;
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    sub_221994504(&qword_25573F550, (unint64_t *)&unk_25573FEC0);
    v17 = (void *)sub_222596F90();
    objc_msgSend(v16, sel_stopMonitoringWithCharacteristics_stateObserver_, v17, v1);
    swift_unknownObjectRelease();

  }
  swift_beginAccess();
  sub_2219B3414(v10, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
  swift_endAccess();
  swift_beginAccess();
  sub_2219B3414(v10, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
  swift_endAccess();
  v18 = swift_bridgeObjectRetain();
  sub_2219A5278(v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = sub_2219B7548(v20, (unint64_t *)&qword_25573FEE0, (uint64_t)off_24E762618, &qword_25573FEE8, (uint64_t *)&unk_25573FF10);
  swift_bridgeObjectRelease();
  sub_2219A5278((uint64_t)v75);
  v23 = sub_2219B7548(v22, (unint64_t *)&qword_25573FEE0, (uint64_t)off_24E762618, &qword_25573FEE8, (uint64_t *)&unk_25573FF10);
  swift_bridgeObjectRelease();
  v24 = sub_2219A5EE4(v21, v23);
  sub_2219A5278(v10);
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = sub_2219B7548(v26, (unint64_t *)&qword_25573FEE0, (uint64_t)off_24E762618, &qword_25573FEE8, (uint64_t *)&unk_25573FF10);
  swift_bridgeObjectRelease();
  v28 = sub_2219A5EE4(v21, v27);
  swift_bridgeObjectRelease();
  v29 = sub_2219A5EE4(v24, v28);
  v30 = v29;
  if ((v29 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573FEE0);
    sub_221994504(&qword_25573FEE8, (unint64_t *)&qword_25573FEE0);
    sub_222596FC0();
    v30 = v82;
    v79 = v83;
    v31 = v84;
    v32 = v85;
    v33 = v86;
  }
  else
  {
    v32 = 0;
    v34 = -1 << *(_BYTE *)(v29 + 32);
    v35 = *(_QWORD *)(v29 + 56);
    v79 = v29 + 56;
    v31 = ~v34;
    v36 = -v34;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    else
      v37 = -1;
    v33 = v37 & v35;
  }
  v74 = v31;
  v78 = (unint64_t)(v31 + 64) >> 6;
  v77 = MEMORY[0x24BEE4AD0] + 8;
  if (v30 < 0)
    goto LABEL_22;
  while (1)
  {
    if (v33)
    {
      v38 = (v33 - 1) & v33;
      v39 = __clz(__rbit64(v33)) | (v32 << 6);
      v40 = v32;
      goto LABEL_39;
    }
    v43 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
      return;
    }
    if (v43 >= v78)
      goto LABEL_42;
    v44 = *(_QWORD *)(v79 + 8 * v43);
    v40 = v32 + 1;
    if (!v44)
    {
      v40 = v32 + 2;
      if (v32 + 2 >= v78)
        goto LABEL_42;
      v44 = *(_QWORD *)(v79 + 8 * v40);
      if (!v44)
      {
        v40 = v32 + 3;
        if (v32 + 3 >= v78)
          goto LABEL_42;
        v44 = *(_QWORD *)(v79 + 8 * v40);
        if (!v44)
        {
          v40 = v32 + 4;
          if (v32 + 4 >= v78)
            goto LABEL_42;
          v44 = *(_QWORD *)(v79 + 8 * v40);
          if (!v44)
            break;
        }
      }
    }
LABEL_38:
    v38 = (v44 - 1) & v44;
    v39 = __clz(__rbit64(v44)) + (v40 << 6);
LABEL_39:
    v42 = *(id *)(*(_QWORD *)(v30 + 48) + 8 * v39);
    if (!v42)
      goto LABEL_42;
    while (1)
    {
      objc_msgSend(*(id *)(v1 + 152), sel_removeObserver_name_object_, v1, CFSTR("HMDAccessoryCharacteristicsChangedNotification"), v42);

      v32 = v40;
      v33 = v38;
      if ((v30 & 0x8000000000000000) == 0)
        break;
LABEL_22:
      v41 = sub_2225971F4();
      if (v41)
      {
        v81 = (void *)v41;
        sub_221917374(0, (unint64_t *)&qword_25573FEE0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v42 = v87;
        swift_unknownObjectRelease();
        v40 = v32;
        v38 = v33;
        if (v42)
          continue;
      }
      goto LABEL_42;
    }
  }
  v45 = v32 + 5;
  while (v78 != v45)
  {
    v44 = *(_QWORD *)(v79 + 8 * v45++);
    if (v44)
    {
      v40 = v45 - 1;
      goto LABEL_38;
    }
  }
LABEL_42:
  sub_22193D780();
  if ((v24 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573FEE0);
    sub_221994504(&qword_25573FEE8, (unint64_t *)&qword_25573FEE0);
    sub_222596FC0();
    v24 = (uint64_t)v87;
    v79 = v88;
    v46 = v89;
    v47 = v90;
    v48 = v91;
  }
  else
  {
    v47 = 0;
    v49 = -1 << *(_BYTE *)(v24 + 32);
    v50 = *(_QWORD *)(v24 + 56);
    v79 = v24 + 56;
    v46 = ~v49;
    v51 = -v49;
    if (v51 < 64)
      v52 = ~(-1 << v51);
    else
      v52 = -1;
    v48 = v52 & v50;
  }
  v74 = v46;
  v78 = (unint64_t)(v46 + 64) >> 6;
  v77 = MEMORY[0x24BEE4AD0] + 8;
  if (v24 < 0)
    goto LABEL_51;
LABEL_49:
  if (v48)
  {
    v53 = (v48 - 1) & v48;
    v54 = __clz(__rbit64(v48)) | (v47 << 6);
    v55 = v47;
LABEL_68:
    v57 = *(id *)(*(_QWORD *)(v24 + 48) + 8 * v54);
    if (!v57)
      goto LABEL_71;
    while (1)
    {
      objc_msgSend(*(id *)(v1 + 152), sel_addObserver_selector_name_object_, v1, sel_handleWithCharacteristicsChangedNotification_, CFSTR("HMDAccessoryCharacteristicsChangedNotification"), v57);

      v47 = v55;
      v48 = v53;
      if ((v24 & 0x8000000000000000) == 0)
        goto LABEL_49;
LABEL_51:
      v56 = sub_2225971F4();
      if (v56)
      {
        v80 = v56;
        sub_221917374(0, (unint64_t *)&qword_25573FEE0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v57 = v81;
        swift_unknownObjectRelease();
        v55 = v47;
        v53 = v48;
        if (v57)
          continue;
      }
      goto LABEL_71;
    }
  }
  v58 = v47 + 1;
  if (__OFADD__(v47, 1))
    goto LABEL_75;
  if (v58 >= v78)
    goto LABEL_71;
  v59 = *(_QWORD *)(v79 + 8 * v58);
  v55 = v47 + 1;
  if (v59)
    goto LABEL_67;
  v55 = v47 + 2;
  if (v47 + 2 >= v78)
    goto LABEL_71;
  v59 = *(_QWORD *)(v79 + 8 * v55);
  if (v59)
    goto LABEL_67;
  v55 = v47 + 3;
  if (v47 + 3 >= v78)
    goto LABEL_71;
  v59 = *(_QWORD *)(v79 + 8 * v55);
  if (v59)
    goto LABEL_67;
  v55 = v47 + 4;
  if (v47 + 4 >= v78)
    goto LABEL_71;
  v59 = *(_QWORD *)(v79 + 8 * v55);
  if (v59)
  {
LABEL_67:
    v53 = (v59 - 1) & v59;
    v54 = __clz(__rbit64(v59)) + (v55 << 6);
    goto LABEL_68;
  }
  v60 = v47 + 5;
  while (v78 != v60)
  {
    v59 = *(_QWORD *)(v79 + 8 * v60++);
    if (v59)
    {
      v55 = v60 - 1;
      goto LABEL_67;
    }
  }
LABEL_71:
  sub_22193D780();
  swift_beginAccess();
  v61 = v75;
  v62 = swift_bridgeObjectRetain();
  sub_2219AA8D8(v62, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
  swift_endAccess();
  v63 = swift_bridgeObjectRetain();
  sub_2219ABDD8(v63, v61);
  v65 = v64;
  v66 = sub_222596EF4();
  v67 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v72, 1, 1, v66);
  v69 = sub_221933018(&qword_25573FEF8, v68, (uint64_t (*)(uint64_t))type metadata accessor for ActionSetState.Observer, (uint64_t)&protocol conformance descriptor for ActionSetState.Observer);
  v70 = (_QWORD *)swift_allocObject();
  v70[2] = v1;
  v70[3] = v69;
  v70[4] = v1;
  v70[5] = v65;
  v70[6] = v73;
  swift_retain_n();
  sub_22191760C(v67, (uint64_t)&unk_25573FF00, (uint64_t)v70);
  swift_release();
}

void sub_2219ABDD8(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  int64_t v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    sub_221994504(&qword_25573F550, (unint64_t *)&unk_25573FEC0);
    sub_222596FC0();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v16 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v9 = (v5 - 1) & v5;
      v10 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v11 = (char *)v4;
      goto LABEL_29;
    }
    v13 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v16)
      goto LABEL_32;
    v14 = v17[v13];
    v11 = (char *)v4 + 1;
    if (!v14)
    {
      v11 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v16)
        goto LABEL_32;
      v14 = v17[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v16)
          goto LABEL_32;
        v14 = v17[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v16)
            goto LABEL_32;
          v14 = v17[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v16)
              goto LABEL_32;
            v14 = v17[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v4 + 6;
              while ((char *)v16 != v15)
              {
                v14 = v17[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_22193D780();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_2219AF980(v18, v12, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, (uint64_t *)&unk_25573FED0);

      v4 = v11;
      v5 = v9;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_2225971F4())
      {
        sub_221917374(0, (unint64_t *)&unk_25573FEC0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v18[0];
        swift_unknownObjectRelease();
        v11 = (char *)v4;
        v9 = v5;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_2219AC0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[27] = a5;
  v6[28] = a6;
  v6[26] = a4;
  v7 = sub_222596B40();
  v6[29] = v7;
  v6[30] = *(_QWORD *)(v7 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219AC144()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = MEMORY[0x227677094](*(_QWORD *)(v0 + 208) + 168);
  *(_QWORD *)(v0 + 264) = v1;
  if (v1)
  {
    v2 = (void *)v1;
    v3 = *(_QWORD *)(v0 + 208);
    sub_221917374(0, (unint64_t *)&unk_25573FEC0);
    sub_221994504(&qword_25573F550, (unint64_t *)&unk_25573FEC0);
    v4 = sub_222596F90();
    *(_QWORD *)(v0 + 272) = v4;
    *(_QWORD *)(v0 + 56) = v0 + 192;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_2219AC47C;
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v6 = (_QWORD *)(v0 + 80);
    v6[1] = 0x40000000;
    v6[2] = sub_2219AC93C;
    v6[3] = &block_descriptor_10;
    v6[4] = v5;
    objc_msgSend(v2, sel_startMonitoringWithCharacteristics_stateObserver_completionHandler_, v4, v3, v6);
    return swift_continuation_await();
  }
  else
  {
    sub_2219950CC(*(_QWORD *)(v0 + 224), (uint64_t)&off_24E76B4D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_222596B28();
    v9 = sub_222597038();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v20 = *(_QWORD *)(v0 + 232);
      v19 = *(_QWORD *)(v0 + 256);
      v14 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = v18;
      *(_DWORD *)v14 = 136315138;
      sub_221917374(0, (unint64_t *)&unk_25573FEC0);
      sub_221994504(&qword_25573F550, (unint64_t *)&unk_25573FEC0);
      swift_bridgeObjectRetain();
      v15 = sub_222596FA8();
      v17 = v16;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 200) = sub_221921364(v15, v17, &v21);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v8, v9, "Error subscribing to characteristics :%s due to nil dataSource", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v18, -1, -1);
      MEMORY[0x227676FE0](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v19, v20);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219AC47C()
{
  return swift_task_switch();
}

void sub_2219AC4C8()
{
  uint64_t v0;
  unint64_t v1;
  __int128 v2;
  uint64_t v3;
  char **v4;
  char **v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  char **v18;
  id v19;
  os_log_type_t v20;
  char **v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;

  v1 = *(_QWORD *)(v0 + 192);

  v36 = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (!v35)
      goto LABEL_16;
  }
  else
  {
    v35 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
      goto LABEL_16;
  }
  if (v35 >= 1)
  {
    v3 = 0;
    v34 = *(_QWORD *)(v0 + 208);
    v33 = *(_QWORD *)(v0 + 240);
    v4 = &selRef_registrationsFromPayload_enabled_;
    v5 = &selRef_canWakeViaCustomWoBLE;
    *(_QWORD *)&v2 = 138412290;
    v31 = v2;
    v32 = v0;
    do
    {
      if ((v36 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x227674274](v3, v36);
      else
        v9 = *(id *)(v36 + 8 * v3 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_error, v31);
      if (v11)
      {
        v12 = *(_QWORD *)(v0 + 224);

        sub_2219950CC(v12, (uint64_t)&off_24E76B4D0);
        v8 = v10;
        v13 = sub_222596B28();
        v14 = sub_222597038();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = swift_slowAlloc();
          v16 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v15 = v31;
          v17 = objc_msgSend(v8, v4[460]);
          v18 = v5;
          v19 = objc_msgSend(v17, v5[167]);

          *(_QWORD *)(v15 + 4) = v19;
          *v16 = v19;
          v5 = v18;

          v20 = v14;
          v21 = v4;
          _os_log_impl(&dword_2218F0000, v13, v20, "Error monitoring characteristic: %@, will retry", (uint8_t *)v15, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
          swift_arrayDestroy();
          v22 = v16;
          v0 = v32;
          MEMORY[0x227676FE0](v22, -1, -1);
          MEMORY[0x227676FE0](v15, -1, -1);
        }
        else
        {

          v13 = v8;
          v21 = v4;
        }
        v23 = *(_QWORD *)(v0 + 248);
        v24 = *(_QWORD *)(v0 + 232);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v23, v24);
        v25 = objc_msgSend(v8, (SEL)v21 + 2888);
        v26 = objc_msgSend(v25, v5[167]);

        swift_beginAccess();
        sub_2219AF980(&v37, v26, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, (uint64_t *)&unk_25573FED0);
        v27 = v37;
        swift_endAccess();

        objc_msgSend(*(id *)(v34 + 128), sel_resume);
        v4 = v21;
      }
      else
      {
        v6 = objc_msgSend(v10, v4[460]);
        v7 = objc_msgSend(v6, v5[167]);

        swift_beginAccess();
        v8 = sub_2219B63A8(v7, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, (uint64_t *)&unk_25573FED0);
        swift_endAccess();

      }
      ++v3;

    }
    while (v35 != v3);
LABEL_16:
    v28 = *(_QWORD *)(v0 + 208);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v29 = *(_QWORD *)(v28 + 120);
    if ((v29 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v30 = sub_2225971D0();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_19:
        sub_2219AC990();
        swift_unknownObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
    }
    else if (*(_QWORD *)(v29 + 16))
    {
      goto LABEL_19;
    }
    objc_msgSend(*(id *)(*(_QWORD *)(v0 + 208) + 128), sel_reset);
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_2219AC93C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_221917374(0, &qword_25573FF08);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_222596E40();
  return swift_continuation_resume();
}

uint64_t sub_2219AC990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  char **v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  BOOL v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  unsigned int v32;
  id v33;
  void *v34;
  unsigned int v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  char **v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  float v59;
  float v60;
  float v61;
  float v62;
  float v63;
  float v64;
  float v65;
  float v66;
  char v67;
  void *v68;
  id v69;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  _QWORD *v89;
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  id v95;
  _BOOL4 v96;
  uint64_t v97;
  _OWORD v98[2];
  __int128 v99;
  __int128 v100;

  v89 = (_QWORD *)(v0 + 176);
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v1 + 64);
  v87 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & v2;
  v92 = v0;
  v86 = v0 + 168;
  v88 = (unint64_t)(v3 + 63) >> 6;
  v90 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = &selRef_targetAccessoryBySerial;
  v8 = 0x1F3FCA000;
  while (1)
  {
    if (v5)
    {
      v93 = (v5 - 1) & v5;
      v9 = __clz(__rbit64(v5)) | (v6 << 6);
      goto LABEL_21;
    }
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_96;
    if (v10 >= v88)
      return swift_release();
    v11 = *(_QWORD *)(v87 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v88)
        return swift_release();
      v11 = *(_QWORD *)(v87 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v88)
          return swift_release();
        v11 = *(_QWORD *)(v87 + 8 * v6);
        if (!v11)
        {
          v12 = v10 + 3;
          if (v12 >= v88)
            return swift_release();
          v11 = *(_QWORD *)(v87 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              v6 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_98;
              if (v6 >= v88)
                return swift_release();
              v11 = *(_QWORD *)(v87 + 8 * v6);
              ++v12;
              if (v11)
                goto LABEL_20;
            }
          }
          v6 = v12;
        }
      }
    }
LABEL_20:
    v93 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_21:
    v94 = *(unsigned __int8 *)(*(_QWORD *)(v90 + 56) + v9);
    v95 = *(id *)(*(_QWORD *)(v90 + 48) + 8 * v9);
    v13 = objc_msgSend(v95, sel_actions);
    if (!v13)
      goto LABEL_99;
    v14 = v13;
    sub_221917374(0, &qword_25573FEA8);
    v15 = sub_222596E40();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v16 = sub_2225973B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v96 = v16 == 0;
    if (!v16)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_78;
    }
    v91 = v6;
    v97 = v16;
    v17 = 4;
    while (2)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x227674274](v17 - 4, v15);
      else
        v21 = *(id *)(v15 + 8 * v17);
      v22 = v21;
      v23 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
      {
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        sub_221917374(0, &qword_25573FD50);
        sub_222597878();
        __break(1u);
        JUMPOUT(0x2219AD400);
      }
      switch((unint64_t)objc_msgSend(v21, v7[400]))
      {
        case 0uLL:
          objc_opt_self();
          v24 = swift_dynamicCastObjCClass();
          if (!v24)
            goto LABEL_72;
          v25 = (void *)v24;
          v26 = v22;
          v27 = objc_msgSend(v25, sel_characteristic);
          if (v27)
          {
            v28 = v27;
            v29 = objc_msgSend(v27, sel_value);

            if (v29)
            {
              sub_222597158();
              swift_unknownObjectRelease();
            }
            else
            {
              memset(v98, 0, sizeof(v98));
            }
            sub_2219172F4((uint64_t)v98, (uint64_t)&v99, &qword_2557410E0);
            if (!*((_QWORD *)&v100 + 1))
              goto LABEL_69;
            sub_221917374(0, (unint64_t *)&unk_25573F0D0);
            if ((swift_dynamicCast() & 1) == 0)
              goto LABEL_70;
            v47 = v7;
            v48 = *(void **)&v98[0];
            v49 = objc_msgSend(v25, sel_targetValue);
            sub_222597158();
            swift_unknownObjectRelease();
            if ((swift_dynamicCast() & 1) == 0)
            {

              swift_bridgeObjectRelease_n();
              v7 = v47;
              goto LABEL_77;
            }
            v50 = *(void **)&v98[0];
            v51 = objc_msgSend(v25, sel_characteristic);
            v52 = v51;
            if (v51)
            {
              v53 = objc_msgSend(v51, sel_metadata);

              if (!v53)
                goto LABEL_100;
              v52 = objc_msgSend(v53, sel_minimumValue);

            }
            v54 = objc_msgSend(v25, sel_characteristic, v86);
            v55 = v54;
            if (!v54)
              goto LABEL_61;
            v56 = objc_msgSend(v54, sel_metadata);

            if (!v56)
              goto LABEL_101;
            v55 = objc_msgSend(v56, sel_maximumValue);

            if (v55 && v52)
            {
              v57 = v55;
              v58 = v52;
              objc_msgSend(v48, sel_floatValue);
              v60 = v59;
              objc_msgSend(v50, sel_floatValue);
              v62 = vabds_f32(v60, v61);
              objc_msgSend(v57, sel_floatValue);
              v64 = v63;
              objc_msgSend(v58, sel_floatValue);
              v66 = v65;

              v7 = v47;
              v8 = 0x1F3FCA000;
              v16 = v97;
              if (v62 > (float)((float)(v64 - v66) * 0.02))
                goto LABEL_73;
            }
            else
            {
LABEL_61:
              sub_221917374(0, (unint64_t *)&qword_25573BB60);
              v67 = sub_2225970EC();

              v7 = v47;
              v8 = 0x1F3FCA000uLL;
              v16 = v97;
              if ((v67 & 1) == 0)
                goto LABEL_73;
            }
            goto LABEL_62;
          }
          v99 = 0u;
          v100 = 0u;
LABEL_69:
          sub_221917338((uint64_t)&v99, &qword_2557410E0);
LABEL_70:

          swift_bridgeObjectRelease_n();
LABEL_77:
          v6 = v91;
          v16 = v97;
LABEL_78:
          v68 = v95;
          if (((v94 ^ (v16 == 0)) & 1) == 0)
            goto LABEL_4;
LABEL_79:
          swift_beginAccess();
          v69 = v68;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v98[0] = *v89;
          v71 = *(_QWORD **)&v98[0];
          *v89 = 0x8000000000000000;
          v73 = sub_22198D650((uint64_t)v69);
          v74 = v71[2];
          v75 = (v72 & 1) == 0;
          v76 = v74 + v75;
          if (__OFADD__(v74, v75))
            goto LABEL_95;
          v77 = v72;
          if (v71[3] < v76)
          {
            sub_221966744(v76, isUniquelyReferenced_nonNull_native);
            v71 = *(_QWORD **)&v98[0];
            v78 = sub_22198D650((uint64_t)v69);
            if ((v77 & 1) != (v79 & 1))
              goto LABEL_102;
            v73 = v78;
            v8 = 0x1F3FCA000;
            if ((v77 & 1) == 0)
              goto LABEL_89;
LABEL_86:
            *(_BYTE *)(v71[7] + v73) = v96;
            goto LABEL_91;
          }
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v8 = 0x1F3FCA000;
            if ((v72 & 1) != 0)
              goto LABEL_86;
          }
          else
          {
            sub_221969CF0();
            v71 = *(_QWORD **)&v98[0];
            v8 = 0x1F3FCA000;
            if ((v77 & 1) != 0)
              goto LABEL_86;
          }
LABEL_89:
          v71[(v73 >> 6) + 8] |= 1 << v73;
          *(_QWORD *)(v71[6] + 8 * v73) = v69;
          *(_BYTE *)(v71[7] + v73) = v96;
          v80 = v71[2];
          v81 = __OFADD__(v80, 1);
          v82 = v80 + 1;
          if (!v81)
          {
            v71[2] = v82;
            v83 = v69;
LABEL_91:
            *v89 = v71;
            swift_bridgeObjectRelease();

            swift_endAccess();
            v84 = (void *)MEMORY[0x227677094](v86);
            if (v84)
            {
              objc_msgSend(v84, sel_actionSetStateDidChangeForActionSet_currentActiveState_stateObserver_, v69, v96, v92);
              swift_unknownObjectRelease();
            }
            goto LABEL_4;
          }
          goto LABEL_97;
        case 1uLL:
          objc_opt_self();
          v44 = swift_dynamicCastObjCClass();
          if (!v44)
            goto LABEL_72;
          v45 = (void *)v44;
          v46 = v22;
          LOBYTE(v45) = sub_2219AD414(v45);

          if ((v45 & 1) == 0)
            goto LABEL_73;
          goto LABEL_62;
        case 3uLL:
          objc_opt_self();
          v30 = swift_dynamicCastObjCClass();
          if (!v30)
            goto LABEL_72;
          v31 = (void *)v30;
          v22 = v22;
          v32 = objc_msgSend(v31, (SEL)(v8 + 3044));
          v33 = objc_msgSend(v31, sel_lightProfile);
          if (v33)
          {
            v34 = v33;
            v35 = objc_msgSend(v33, (SEL)(v8 + 3044));

            v16 = v97;
            if (v32 != v35)
              goto LABEL_73;
LABEL_62:
            ++v17;
            if (v23 == v16)
            {
              swift_bridgeObjectRelease_n();
              v6 = v91;
              v68 = v95;
              if ((v94 & 1) == 0)
              {
                v96 = 1;
                goto LABEL_79;
              }
              goto LABEL_4;
            }
            continue;
          }

LABEL_72:
LABEL_73:
          swift_bridgeObjectRelease_n();
LABEL_74:
          v6 = v91;
          v68 = v95;
          if ((v94 & 1) != 0)
          {
            v96 = 0;
            goto LABEL_79;
          }
LABEL_4:

          v5 = v93;
          break;
        case 4uLL:
          objc_opt_self();
          v36 = swift_dynamicCastObjCClass();
          if (!v36)
            goto LABEL_72;
          v37 = (void *)v36;
          v38 = v22;
          v39 = objc_msgSend(v37, sel_targetSleepWakeState);
          v40 = objc_msgSend(v37, sel_accessory);
          if (!v40
            || (v41 = v40,
                v42 = objc_msgSend(v40, sel_mediaProfile),
                v41,
                v43 = objc_msgSend(v42, sel_mediaSession),
                v42,
                !v43))
          {
            swift_bridgeObjectRelease_n();

            goto LABEL_74;
          }
          v18 = objc_msgSend(v43, sel_state);

          v19 = objc_msgSend(v18, sel_sleepWakeState);
          v20 = v39 == v19;
          v16 = v97;
          if (!v20)
            goto LABEL_73;
          goto LABEL_62;
        default:

          swift_bridgeObjectRelease_n();
          v6 = v91;
          goto LABEL_78;
      }
      break;
    }
  }
}

uint64_t sub_2219AD414(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  char v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  id v60;
  char *v61;
  id v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t ObjectType;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124[8];

  v124[6] = *MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v2 = sub_222596B40();
  v110 = *(_QWORD *)(v2 - 8);
  v111 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v108 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v109 = (char *)&v106 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v106 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v106 - v10;
  v11 = objc_msgSend(a1, sel_mediaProfiles);
  v12 = sub_221917374(0, &qword_25573FEB0);
  sub_221994504(&qword_25573FEB8, &qword_25573FEB0);
  v13 = sub_222596F9C();

  v115 = v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    sub_2225971A0();
    sub_222596FC0();
    v13 = v124[1];
    v118 = v124[2];
    v14 = v124[3];
    v15 = v124[4];
    v16 = v124[5];
  }
  else
  {
    v15 = 0;
    v17 = -1 << *(_BYTE *)(v13 + 32);
    v18 = *(_QWORD *)(v13 + 56);
    v118 = v13 + 56;
    v19 = ~v17;
    v20 = -v17;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v16 = v21 & v18;
    v14 = v19;
  }
  v113 = v14;
  v116 = v13 & 0x7FFFFFFFFFFFFFFFLL;
  v117 = (unint64_t)(v14 + 64) >> 6;
  v22 = &selRef_shutdownForClient_;
  v114 = MEMORY[0x24BEE4AD0] + 8;
  v121 = v13;
  v106 = v9;
  while (1)
  {
    if (v13 < 0)
    {
      v26 = sub_2225971F4();
      if (!v26)
        goto LABEL_68;
      v123 = v26;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v27 = (id)v124[0];
      swift_unknownObjectRelease();
      v25 = v15;
      v23 = v16;
      if (!v27)
        goto LABEL_68;
    }
    else
    {
      if (v16)
      {
        v23 = (v16 - 1) & v16;
        v24 = __clz(__rbit64(v16)) | (v15 << 6);
        v25 = v15;
      }
      else
      {
        v28 = v15 + 1;
        if (__OFADD__(v15, 1))
          __break(1u);
        if (v28 >= v117)
          goto LABEL_68;
        v29 = *(_QWORD *)(v118 + 8 * v28);
        v25 = v15 + 1;
        if (!v29)
        {
          v25 = v15 + 2;
          if (v15 + 2 >= v117)
            goto LABEL_68;
          v29 = *(_QWORD *)(v118 + 8 * v25);
          if (!v29)
          {
            v25 = v15 + 3;
            if (v15 + 3 >= v117)
              goto LABEL_68;
            v29 = *(_QWORD *)(v118 + 8 * v25);
            if (!v29)
            {
              v25 = v15 + 4;
              if (v15 + 4 >= v117)
                goto LABEL_68;
              v29 = *(_QWORD *)(v118 + 8 * v25);
              if (!v29)
              {
                v30 = v15 + 5;
                while (v117 != v30)
                {
                  v29 = *(_QWORD *)(v118 + 8 * v30++);
                  if (v29)
                  {
                    v25 = v30 - 1;
                    goto LABEL_28;
                  }
                }
LABEL_68:
                sub_22193D780();
                return 1;
              }
            }
          }
        }
LABEL_28:
        v23 = (v29 - 1) & v29;
        v24 = __clz(__rbit64(v29)) + (v25 << 6);
      }
      v27 = *(id *)(*(_QWORD *)(v13 + 48) + 8 * v24);
      if (!v27)
        goto LABEL_68;
    }
    v31 = objc_msgSend(v27, sel_mediaSession, v106);
    v120 = v15;
    if (!v31)
    {
      sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
      v55 = v27;
      v56 = sub_222596B28();
      v57 = sub_222597020();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        v59 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v58 = 138412290;
        v124[0] = (uint64_t)v55;
        v60 = v55;
        sub_222597134();
        *v59 = v55;

        _os_log_impl(&dword_2218F0000, v56, v57, "Expected media session for profile %@", v58, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
        swift_arrayDestroy();
        MEMORY[0x227676FE0](v59, -1, -1);
        MEMORY[0x227676FE0](v58, -1, -1);
      }
      else
      {

      }
      v84 = v111;

      (*(void (**)(char *, uint64_t))(v110 + 8))(v108, v84);
      goto LABEL_80;
    }
    v32 = v31;
    v119 = v16;
    v33 = objc_msgSend(a1, sel_playbackArchive);
    if (v33)
    {
      v34 = v33;
      v122 = v27;
      v35 = objc_msgSend(v33, sel_playbackSessionIdentifier);
      if (v35)
      {
        v36 = v35;
        v37 = sub_222596CF0();
        v39 = v38;

      }
      else
      {
        v37 = 0;
        v39 = 0;
      }
      v40 = objc_msgSend(v32, v22[391]);
      v41 = objc_msgSend(v40, sel_mediaUniqueIdentifier);

      if (v41)
      {
        v42 = sub_222596CF0();
        v44 = v43;

        if (v39)
        {
          if (!v44)
            goto LABEL_64;
          if (v37 == v42 && v39 == v44)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v45 = sub_2225976E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v45 & 1) == 0)
              goto LABEL_65;
          }
        }
        else if (v44)
        {
LABEL_64:
          swift_bridgeObjectRelease();
LABEL_65:
          v85 = v107;
          sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
          v86 = v34;
          v87 = v32;
          v88 = v86;
          v89 = v87;
          v90 = sub_222596B28();
          v91 = sub_22259702C();
          if (os_log_type_enabled(v90, v91))
          {
            v92 = swift_slowAlloc();
            v93 = swift_slowAlloc();
            v124[0] = v93;
            *(_DWORD *)v92 = 136315394;
            v94 = objc_msgSend(v88, sel_playbackSessionIdentifier);
            if (v94)
            {
              v95 = v94;
              v96 = sub_222596CF0();
              v98 = v97;

            }
            else
            {
              v98 = 0xE300000000000000;
              v96 = 7104878;
            }
            v123 = sub_221921364(v96, v98, v124);
            sub_222597134();
            swift_bridgeObjectRelease();

            *(_WORD *)(v92 + 12) = 2080;
            v101 = objc_msgSend(v89, sel_state);
            v102 = objc_msgSend(v101, sel_mediaUniqueIdentifier);

            if (v102)
            {
              v103 = sub_222596CF0();
              v105 = v104;

            }
            else
            {
              v105 = 0xE300000000000000;
              v103 = 7104878;
            }
            v123 = sub_221921364(v103, v105, v124);
            sub_222597134();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_2218F0000, v90, v91, "Expected playback archive identifier %s does not match current media session identifier %s", (uint8_t *)v92, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x227676FE0](v93, -1, -1);
            MEMORY[0x227676FE0](v92, -1, -1);

            (*(void (**)(char *, uint64_t))(v110 + 8))(v107, v111);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v110 + 8))(v85, v111);
          }
          goto LABEL_80;
        }
      }
      else if (v39)
      {
        goto LABEL_64;
      }

      v27 = v122;
      v22 = &selRef_shutdownForClient_;
    }
    if (objc_msgSend(a1, v22[391]))
    {
      v46 = objc_msgSend(a1, v22[391]);
      v47 = objc_msgSend(v32, v22[391]);
      v48 = objc_msgSend(v47, sel_playbackState);

      v22 = &selRef_shutdownForClient_;
      if (v46 != v48)
      {
        v61 = v106;
        sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
        v62 = v32;
        v63 = a1;
        v64 = sub_222596B28();
        v65 = sub_22259702C();
        if (os_log_type_enabled(v64, v65))
        {
          v66 = swift_slowAlloc();
          *(_DWORD *)v66 = 134218240;
          v124[0] = (uint64_t)objc_msgSend(v63, (SEL)&selRef_specifierWithFlagName_homeUUID_);
          sub_222597134();

          *(_WORD *)(v66 + 12) = 2048;
          v67 = objc_msgSend(v62, (SEL)&selRef_specifierWithFlagName_homeUUID_);
          v68 = v27;
          v69 = objc_msgSend(v67, sel_playbackState);

          v124[0] = (uint64_t)v69;
          sub_222597134();

          _os_log_impl(&dword_2218F0000, v64, v65, "Expected playback state %ld does not match current media state %ld", (uint8_t *)v66, 0x16u);
          MEMORY[0x227676FE0](v66, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v110 + 8))(v61, v111);
        goto LABEL_80;
      }
    }
    v49 = objc_msgSend(a1, sel_volume);
    if (v49)
      break;
LABEL_8:

    v15 = v25;
    v16 = v23;
    v13 = v121;
  }
  v50 = v49;
  v51 = objc_msgSend(v32, v22[391]);
  v52 = objc_msgSend(v51, sel_volume);

  if (v52)
  {
    sub_221917374(0, (unint64_t *)&unk_25573F0D0);
    v53 = v50;
    v54 = sub_2225970EC();

    if ((v54 & 1) == 0)
      goto LABEL_58;

    goto LABEL_8;
  }

LABEL_58:
  v122 = v27;
  sub_2219950CC(ObjectType, (uint64_t)&off_24E76B4D0);
  v70 = v32;
  v71 = v50;
  v72 = v70;
  v73 = v71;
  v74 = sub_222596B28();
  v75 = sub_22259702C();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = swift_slowAlloc();
    v77 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v76 = 138412546;
    v124[0] = (uint64_t)v73;
    v78 = v73;
    sub_222597134();
    v117 = (int64_t)v77;
    *v77 = v73;

    *(_WORD *)(v76 + 12) = 2112;
    v79 = objc_msgSend(v72, sel_state);
    v80 = objc_msgSend(v79, sel_volume);

    if (v80)
      v124[0] = (uint64_t)v80;
    else
      v124[0] = 0;
    sub_222597134();
    v83 = v110;
    v82 = v111;
    v100 = v117;
    *(_QWORD *)(v117 + 8) = v80;

    _os_log_impl(&dword_2218F0000, v74, v75, "Expected volume %@ does not match current media state %@", (uint8_t *)v76, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v100, -1, -1);
    MEMORY[0x227676FE0](v76, -1, -1);
    v81 = v122;
  }
  else
  {

    v81 = v72;
    v78 = v72;
    v83 = v110;
    v82 = v111;
  }

  (*(void (**)(char *, uint64_t))(v83 + 8))(v109, v82);
LABEL_80:
  sub_22193D780();
  return 0;
}

id sub_2219AE1A4(unint64_t a1)
{
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  BOOL v7;
  id result;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t j;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t i;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v1 = a1;
  v57 = MEMORY[0x24BEE4AF8];
  v2 = (void *)(a1 >> 62);
  if (a1 >> 62)
    goto LABEL_30;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v1; v3; i = v1)
  {
    v4 = 0;
    v51 = v1 & 0xC000000000000001;
    v44 = v2;
    v46 = v1 + 32;
    v49 = v3;
    while (1)
    {
      v6 = v51 ? (id)MEMORY[0x227674274](v4, v1) : *(id *)(v46 + 8 * v4);
      v2 = v6;
      v7 = __OFADD__(v4++, 1);
      if (v7)
        break;
      result = objc_msgSend(v6, sel_actions);
      if (!result)
        goto LABEL_61;
      v9 = result;
      sub_221917374(0, &qword_25573FEA8);
      v10 = sub_222596E40();

      v55 = MEMORY[0x24BEE4AF8];
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = sub_2225973B0();
        if (!v11)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          v5 = MEMORY[0x24BEE4AF8];
          goto LABEL_5;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11)
          goto LABEL_26;
      }
      if (v11 < 1)
        goto LABEL_29;
      v53 = v2;
      for (j = 0; j != v11; ++j)
      {
        if ((v10 & 0xC000000000000001) != 0)
          v13 = (id)MEMORY[0x227674274](j, v10);
        else
          v13 = *(id *)(v10 + 8 * j + 32);
        v14 = v13;
        objc_opt_self();
        v15 = (void *)swift_dynamicCastObjCClass();
        if (v15)
        {
          v16 = objc_msgSend(v15, sel_characteristic);

          if (v16)
          {
            MEMORY[0x227673E0C]();
            if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_222596E64();
            sub_222596E88();
            sub_222596E58();
          }
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v5 = v55;
      v1 = i;
      v3 = v49;
      v2 = v53;
LABEL_5:

      swift_bridgeObjectRelease();
      sub_22198E5D0(v5);
      if (v4 == v3)
      {
        swift_bridgeObjectRelease();
        v40 = v57;
        v2 = v44;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    v3 = sub_2225973B0();
  }
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x24BEE4AF8];
LABEL_32:
  v58 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = sub_2225973B0();
    if (v17)
      goto LABEL_34;
LABEL_56:
    swift_release();
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x24BEE4AF8];
LABEL_58:
    v38 = sub_2219B7548(v37, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
    swift_bridgeObjectRelease();
    sub_22198E87C(v38);
    v39 = sub_2219B7548(v40, (unint64_t *)&unk_25573FEC0, (uint64_t)off_24E7625D8, &qword_25573F550, (uint64_t *)&unk_25573FED0);
    swift_bridgeObjectRelease();
    return (id)v39;
  }
  v17 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v17)
    goto LABEL_56;
LABEL_34:
  v18 = 0;
  v19 = 0;
  v42 = v17;
  v43 = v1 & 0xC000000000000001;
  v41 = v1 + 32;
  while (1)
  {
    result = v43 ? (id)MEMORY[0x227674274](v18, v1) : *(id *)(v41 + 8 * v18);
    v21 = result;
    v7 = __OFADD__(v18++, 1);
    if (v7)
      break;
    result = objc_msgSend(result, sel_actions);
    if (!result)
      goto LABEL_62;
    v22 = result;
    sub_221917374(0, &qword_25573FEA8);
    v23 = sub_222596E40();

    v56 = MEMORY[0x24BEE4AF8];
    if (v23 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v24 = sub_2225973B0();
      if (v24)
      {
LABEL_44:
        v45 = v21;
        v47 = v18;
        v52 = v23 & 0xC000000000000001;
        v25 = 4;
        v50 = v24;
        while (1)
        {
          result = v52 ? (id)MEMORY[0x227674274](v25 - 4, v23) : *(id *)(v23 + 8 * v25);
          v34 = result;
          v35 = v25 - 3;
          if (__OFADD__(v25 - 4, 1))
            break;
          objc_opt_self();
          v36 = swift_dynamicCastObjCClass();
          if (v36)
          {
            v26 = (void *)v36;
            v54 = v19;
            v27 = v23;
            v28 = v34;
            v29 = objc_msgSend(v26, sel_mediaProfiles);
            sub_221917374(0, &qword_25573FEB0);
            sub_221994504(&qword_25573FEB8, &qword_25573FEB0);
            v30 = sub_222596F9C();

            swift_retain();
            v31 = v28;
            v23 = v27;
            v32 = v31;
            v19 = v54;
            v33 = sub_2219B7A1C(v30, v26);
            swift_bridgeObjectRelease();
            v24 = v50;
            swift_release();

          }
          else
          {
            v33 = MEMORY[0x24BEE4AF8];
          }

          sub_22198E5D0(v33);
          ++v25;
          if (v35 == v24)
          {
            swift_release();
            swift_bridgeObjectRelease();
            v20 = v56;
            v18 = v47;
            v1 = i;
            v17 = v42;
            v21 = v45;
            goto LABEL_36;
          }
        }
        __break(1u);
        break;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v24)
        goto LABEL_44;
    }
    swift_release();
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
LABEL_36:

    swift_bridgeObjectRelease();
    sub_22198E5D0(v20);
    if (v18 == v17)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v37 = v58;
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ActionSetState.Observer.timerDidFire(_:)(HMFTimer *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = ObjectType;
  swift_retain();
  sub_22191760C((uint64_t)v5, (uint64_t)&unk_25573FD90, (uint64_t)v7);
  swift_release();
}

uint64_t sub_2219AE908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_222596B40();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219AE968()
{
  uint64_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2219950CC(v0[3], (uint64_t)&off_24E76B4D0);
  v1 = sub_222596B28();
  v2 = sub_22259702C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2218F0000, v1, v2, "Retry timer fired", v3, 2u);
    MEMORY[0x227676FE0](v3, -1, -1);
  }
  v5 = v0[5];
  v4 = v0[6];
  v6 = v0[4];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  return swift_task_switch();
}

uint64_t sub_2219AEA54()
{
  uint64_t v0;

  sub_2219AB2F4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ActionSetState.Observer.__allocating_init()()
{
  swift_allocObject();
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ActionSetState.Observer.init()()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id *ActionSetState.Observer.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_22196DF04((uint64_t)(v0 + 21));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActionSetState.Observer.__deallocating_deinit()
{
  ActionSetState.Observer.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ActionSetState.Observer.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_2219AECAC()
{
  return 0xD000000000000017;
}

uint64_t type metadata accessor for ActionSetState.Observer()
{
  return objc_opt_self();
}

uint64_t sub_2219AECE8()
{
  return objectdestroyTm_2();
}

uint64_t sub_2219AECF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_2219AED54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_2219AEDB4()
{
  return objectdestroyTm_2();
}

uint64_t sub_2219AEDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_222596678();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2219AEE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_222596678() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_221901E24;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_2219AEEB4()
{
  return objectdestroyTm_2();
}

uint64_t sub_2219AEEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_221901E24;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2219AEF24(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2219AEF34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_221901E24;
  return sub_2219AE908(a1, v4, v5, v7, v6);
}

uint64_t sub_2219AEFAC(_QWORD *a1, void *a2)
{
  return sub_2219AF980(a1, a2, (unint64_t *)&qword_25573FFF0, (uint64_t)off_24E762598, &qword_25573CC20);
}

uint64_t sub_2219AEFC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2225978F0();
  swift_bridgeObjectRetain();
  sub_222596D38();
  v8 = sub_222597938();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2225976E0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2225976E0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2219B1390(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2219AF174(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_2225971DC();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2225971D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_2219AFC64(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_2219B0590();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_2219B1184(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
  v10 = sub_222596C90();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_2219B1528(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  while ((sub_222596CCC() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_2219AF40C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_2225971DC();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AssertionHandle.Assertion(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2225971D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_2219AFE60(v7, result + 1);
    v22 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_2219B086C();
      v17 = v22;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_2219B1230(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_2225978F0();
    sub_222596678();
    sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    sub_222596C9C();
    v10 = sub_222597938();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      swift_retain();
      v13 = sub_22259663C();
      swift_release();
      if ((v13 & 1) != 0)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      v14 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        swift_retain();
        v15 = sub_22259663C();
        swift_release();
        if ((v15 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v2;
    *v2 = 0x8000000000000000;
    v19 = swift_retain();
    sub_2219B16B4(v19, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_2219AF71C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_221933018((unint64_t *)&qword_25573FF30, 255, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_222596C90();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_221933018(&qword_25573F350, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_222596CCC();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_2219B1A48((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_2219AF980(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_2225971DC();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_221917374(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2225971D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_2219B00A8(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_2219B0EEC(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_2219B1310((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_2225970E0();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_221917374(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_2225970EC();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_2225970EC();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_2219B18B8((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_2219AFC48(uint64_t a1, uint64_t a2)
{
  return sub_2219B00A8(a1, a2, &qword_25573CC20, (unint64_t *)&qword_25573FFF0);
}

uint64_t sub_2219AFC64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255740008);
    v2 = sub_222597254();
    v14 = v2;
    sub_2225971A0();
    for (; sub_2225971F4(); ++*(_QWORD *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
      swift_dynamicCast();
      if (*(_QWORD *)(v2 + 24) <= *(_QWORD *)(v2 + 16))
      {
        sub_2219B0590();
        v2 = v14;
      }
      result = sub_222596C90();
      v4 = v2 + 56;
      v5 = -1 << *(_BYTE *)(v2 + 32);
      v6 = result & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v9 = 0;
        v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v11 = v7 == v10;
          if (v7 == v10)
            v7 = 0;
          v9 |= v11;
          v12 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v12 == -1);
        v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_2219AFE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573FFD8);
    v2 = sub_222597254();
    v15 = v2;
    sub_2225971A0();
    if (sub_2225971F4())
    {
      type metadata accessor for AssertionHandle.Assertion(0);
      v3 = MEMORY[0x24BDCEA88];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_2219B086C();
          v2 = v15;
        }
        sub_2225978F0();
        sub_222596678();
        sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v3);
        sub_222596C9C();
        result = sub_222597938();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_2225971F4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_2219B00A8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_222597254();
    v19 = v6;
    sub_2225971A0();
    if (sub_2225971F4())
    {
      sub_221917374(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_2219B0EEC(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_2225970E0();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_2225971F4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_2219B02A8(uint64_t a1)
{
  return sub_2219B0EEC(a1, &qword_25573CC20);
}

uint64_t sub_2219B02B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FFE0);
  v3 = sub_222597248();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2225978F0();
      sub_222596D38();
      result = sub_222597938();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2219B0590()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740008);
  v3 = sub_222597248();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v27 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8)
          goto LABEL_33;
        v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_33;
          v16 = v27[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_33;
            v16 = v27[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v16 = v27[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
      result = sub_222596C90();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2219B086C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FFD8);
  v2 = sub_222597248();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v7 = (unint64_t)(v4 + 63) >> 6;
    v8 = v2 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v6)
      {
        v12 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v7)
          goto LABEL_33;
        v15 = v26[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v7)
            goto LABEL_33;
          v15 = v26[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v7)
              goto LABEL_33;
            v15 = v26[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_33:
                swift_release();
                v25 = 1 << *(_BYTE *)(v1 + 32);
                if (v25 > 63)
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v25;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v15 = v26[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v7)
                    goto LABEL_33;
                  v15 = v26[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v6 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v13);
      sub_2225978F0();
      sub_222596678();
      sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_222596C9C();
      result = sub_222597938();
      v18 = -1 << *(_BYTE *)(v3 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = 0;
        v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v23 = v20 == v22;
          if (v20 == v22)
            v20 = 0;
          v21 |= v23;
          v24 = *(_QWORD *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

uint64_t sub_2219B0B7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_222596678();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FF40);
  v6 = sub_222597248();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_222596C90();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2219B0EEC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_222597248();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_2225970E0();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_2219B1184(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
  sub_222596C90();
  result = sub_222597188();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_2219B1230(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2225978F0();
  sub_222596678();
  sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_222596C9C();
  sub_222597938();
  result = sub_222597188();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_2219B1310(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2225970E0();
  result = sub_222597188();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_2219B1390(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2219B02B4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2219B1C54();
      goto LABEL_22;
    }
    sub_2219B2368();
  }
  v11 = *v4;
  sub_2225978F0();
  sub_222596D38();
  result = sub_222597938();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2225976E0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_22259786C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2225976E0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_2219B1528(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2219B0590();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2219B1E04(&qword_255740008);
      goto LABEL_12;
    }
    sub_2219B2614();
  }
  v8 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
  result = sub_222596C90();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    do
    {
      result = sub_222596CCC();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_22259786C();
  __break(1u);
  return result;
}

uint64_t sub_2219B16B4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2219B086C();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_2219B1E04(&qword_25573FFD8);
      goto LABEL_14;
    }
    sub_2219B28C4();
  }
  v9 = *v3;
  sub_2225978F0();
  sub_222596678();
  sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_222596C9C();
  result = sub_222597938();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for AssertionHandle.Assertion(0);
    swift_retain();
    v11 = sub_22259663C();
    result = swift_release();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      result = sub_22259786C();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        swift_retain();
        v13 = sub_22259663C();
        result = swift_release();
        if ((v13 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

void sub_2219B18B8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_2219B0EEC(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_2219B21C8(a4);
      goto LABEL_14;
    }
    sub_2219B2EEC(v11, a4);
  }
  v12 = *v5;
  v13 = sub_2225970E0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_221917374(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_2225970EC();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_22259786C();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_2225970EC();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_2219B1A48(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2219B0B7C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2219B1FA4();
      goto LABEL_12;
    }
    sub_2219B2BC0();
  }
  v12 = *v3;
  sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_222596C90();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_221933018(&qword_25573F350, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_222596CCC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_22259786C();
  __break(1u);
  return result;
}

void *sub_2219B1C54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FFE0);
  v2 = *v0;
  v3 = sub_22259723C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2219B1E04(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22259723C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    result = (void *)swift_retain();
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2219B1FA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_222596678();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FF40);
  v6 = *v0;
  v7 = sub_22259723C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_2219B21C8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_22259723C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2219B2368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FFE0);
  v3 = sub_222597248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2225978F0();
    swift_bridgeObjectRetain();
    sub_222596D38();
    result = sub_222597938();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2219B2614()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740008);
  v2 = sub_222597248();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = v1 + 56;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v8 = v2 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v25)
      goto LABEL_33;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v25)
        goto LABEL_33;
      v15 = *(_QWORD *)(v5 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v5 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v13);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
    result = sub_222596C90();
    v18 = -1 << *(_BYTE *)(v3 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v17;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v25)
      goto LABEL_33;
    v15 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2219B28C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FFD8);
  v3 = sub_222597248();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v25 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v26)
        goto LABEL_33;
      v15 = *(_QWORD *)(v25 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v26)
          goto LABEL_33;
        v15 = *(_QWORD *)(v25 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_2225978F0();
    sub_222596678();
    sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_retain();
    sub_222596C9C();
    result = sub_222597938();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v23 = v20 == v22;
        if (v20 == v22)
          v20 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v25 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v26)
      goto LABEL_33;
    v15 = *(_QWORD *)(v25 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2219B2BC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_222596678();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FF40);
  v7 = sub_222597248();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_222596C90();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2219B2EEC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_222597248();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_2225970E0();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2219B3160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = sub_222596678();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_2219B6590((uint64_t)v6, (uint64_t)v10);
    sub_221917338((uint64_t)v10, (uint64_t *)&unk_25573C160);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17)
      goto LABEL_5;
LABEL_6:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_25;
      v22 = *(_QWORD *)(v14 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v25)
          goto LABEL_25;
        v22 = *(_QWORD *)(v14 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v25)
            goto LABEL_25;
          v22 = *(_QWORD *)(v14 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    return swift_release();
  }
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_2219B3414(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  int64_t v25;
  uint64_t v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  if ((*(_QWORD *)v5 & 0xC000000000000001) != 0)
  {
    if (!sub_2225971D0())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_2225971A0();
      sub_221917374(0, a2);
      sub_221994504(a4, a2);
      sub_222596FC0();
      a1 = v29;
      v26 = v30;
      v10 = v31;
      v11 = v32;
      v12 = v33;
    }
    else
    {
      v13 = -1 << *(_BYTE *)(a1 + 32);
      v26 = a1 + 56;
      v14 = ~v13;
      v15 = -v13;
      if (v15 < 64)
        v16 = ~(-1 << v15);
      else
        v16 = -1;
      v12 = v16 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v10 = v14;
      v11 = 0;
    }
    v25 = (unint64_t)(v10 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v12)
      {
        v17 = (v12 - 1) & v12;
        v18 = __clz(__rbit64(v12)) | (v11 << 6);
        v19 = v11;
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          return;
        }
        if (v21 >= v25)
          goto LABEL_36;
        v22 = *(_QWORD *)(v26 + 8 * v21);
        v19 = v11 + 1;
        if (!v22)
        {
          v19 = v11 + 2;
          if (v11 + 2 >= v25)
            goto LABEL_36;
          v22 = *(_QWORD *)(v26 + 8 * v19);
          if (!v22)
          {
            v19 = v11 + 3;
            if (v11 + 3 >= v25)
              goto LABEL_36;
            v22 = *(_QWORD *)(v26 + 8 * v19);
            if (!v22)
            {
              v19 = v11 + 4;
              if (v11 + 4 >= v25)
                goto LABEL_36;
              v22 = *(_QWORD *)(v26 + 8 * v19);
              if (!v22)
              {
                v19 = v11 + 5;
                if (v11 + 5 >= v25)
                  goto LABEL_36;
                v22 = *(_QWORD *)(v26 + 8 * v19);
                if (!v22)
                {
                  v23 = v11 + 6;
                  while (v25 != v23)
                  {
                    v22 = *(_QWORD *)(v26 + 8 * v23++);
                    if (v22)
                    {
                      v19 = v23 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_22193D780();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v17 = (v22 - 1) & v22;
        v18 = __clz(__rbit64(v22)) + (v19 << 6);
      }
      v20 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v18);
      if (!v20)
        goto LABEL_36;
      while (1)
      {
        v24 = (void *)sub_2219B63A8(v20, a2, a3, a5);

        v11 = v19;
        v12 = v17;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_2225971F4())
        {
          sub_221917374(0, a2);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v20 = v28;
          swift_unknownObjectRelease();
          v19 = v11;
          v17 = v12;
          if (v28)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v5 + 16))
    goto LABEL_5;
}

uint64_t sub_2219B372C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t isStackAllocationSafe;
  char v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v35[3];

  v2 = a2;
  v35[2] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v35[0] = a1;
  v33 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    if (sub_2225973B0())
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
    return v2;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_21;
LABEL_4:
  v5 = 0;
  v6 = v2 + 56;
  v34 = a1 & 0xC000000000000001;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  v32 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v7 = a1;
  v30 = a1 + 32;
  v31 = v7;
  while (1)
  {
    if (v34)
    {
      v8 = (id)MEMORY[0x227674274](v5, a1);
    }
    else
    {
      if (v5 >= *(_QWORD *)(v32 + 16))
        __break(1u);
      v8 = *(id *)(v30 + 8 * v5);
    }
    v9 = v8;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    v11 = sub_2225970E0();
    v12 = -1 << *(_BYTE *)(v2 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
      break;
LABEL_19:

    if (v33)
    {
      swift_bridgeObjectRetain();
      v19 = sub_2225973B0();
      swift_bridgeObjectRelease();
      if (v5 == v19)
        goto LABEL_21;
    }
    else if (v5 == *(_QWORD *)(v32 + 16))
    {
      goto LABEL_21;
    }
  }
  sub_221917374(0, (unint64_t *)&qword_25573FFF0);
  v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
  v15 = sub_2225970EC();

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_19;
      v17 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      v18 = sub_2225970EC();

    }
    while ((v18 & 1) == 0);
  }

  v35[1] = v5;
  v21 = *(_BYTE *)(v2 + 32);
  v22 = (unint64_t)((1 << v21) + 63) >> 6;
  v23 = 8 * v22;
  if ((v21 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v23);
    sub_2219B4B3C((unint64_t *)((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0)), v22, v2, v13, v35);
    v25 = v24;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = (void *)swift_slowAlloc();
    memcpy(v26, (const void *)(v2 + 56), v23);
    sub_2219B4B3C((unint64_t *)v26, v22, v2, v13, v35);
    v25 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x227676FE0](v26, -1, -1);
  }
  return v25;
}

uint64_t sub_2219B3AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;

  v2 = a2;
  v51 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573FEE0);
    sub_221994504(&qword_25573FEE8, (unint64_t *)&qword_25573FEE0);
    sub_222596FC0();
    v3 = v46;
    v4 = v47;
    v6 = v48;
    v5 = v49;
    v7 = v50;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v4 = a1 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v41 = v3;
  v42 = v4;
  v43 = v6;
  v44 = v5;
  v45 = v7;
  v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        v12 = (v7 - 1) & v7;
        v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v15 = v14;
        goto LABEL_15;
      }
      v25 = v5 + 1;
      if (__OFADD__(v5, 1))
        __break(1u);
      v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        v14 = 0;
        v12 = 0;
        goto LABEL_15;
      }
      v27 = *(_QWORD *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        v12 = (v27 - 1) & v27;
        v13 = __clz(__rbit64(v27)) + (v25 << 6);
        v5 = v25;
        goto LABEL_14;
      }
      v28 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_44;
      v27 = *(_QWORD *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        v27 = *(_QWORD *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          v25 = v5 + 3;
          goto LABEL_28;
        }
        v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          v14 = 0;
          v12 = 0;
          v5 += 3;
LABEL_15:
          v44 = v5;
          v45 = v12;
          if (!v14)
            goto LABEL_53;
          goto LABEL_19;
        }
        v27 = *(_QWORD *)(v42 + 8 * v28);
        if (v27)
          goto LABEL_32;
        v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          v27 = *(_QWORD *)(v42 + 8 * v25);
          if (v27)
            goto LABEL_28;
          v25 = v26 - 1;
          v29 = v5 + 6;
          while (v26 != v29)
          {
            v27 = *(_QWORD *)(v42 + 8 * v29++);
            if (v27)
            {
              v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v14 = 0;
          v12 = 0;
          v5 = v25;
          goto LABEL_15;
        }
      }
      v14 = 0;
      v12 = 0;
      v5 = v28;
      goto LABEL_15;
    }
    v16 = sub_2225971F4();
    if (!v16
      || (v39 = v16,
          sub_221917374(0, (unint64_t *)&qword_25573FEE0),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_22193D780();
      return v2;
    }
LABEL_19:
    v17 = sub_2225970E0();
    v18 = -1 << *(_BYTE *)(v2 + 32);
    v19 = v17 & ~v18;
    if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_10;
    sub_221917374(0, (unint64_t *)&qword_25573FEE0);
    v20 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
    v21 = sub_2225970EC();

    if ((v21 & 1) != 0)
      break;
    v22 = ~v18;
    while (1)
    {
      v19 = (v19 + 1) & v22;
      if (((*(_QWORD *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        break;
      v23 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v19);
      v24 = sub_2225970EC();

      if ((v24 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v3 = v41;
    v6 = v43;
    v5 = v44;
    v7 = v45;
  }
LABEL_47:

  v31 = *(_BYTE *)(v2 + 32);
  v32 = (unint64_t)((1 << v31) + 63) >> 6;
  v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_2219B4E18((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    v35 = v34;
    swift_release();
    sub_22193D780();
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_2219B4E18((unint64_t *)v36, v32, v2, v19, &v41);
    v35 = v37;
    swift_release();
    sub_22193D780();
    MEMORY[0x227676FE0](v36, -1, -1);
  }
  return v35;
}

uint64_t sub_2219B4020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596678();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_22193D780();
      sub_221917338((uint64_t)v6, (uint64_t *)&unk_25573C160);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v33 = sub_222596C90();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_221933018(&qword_25573F350, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v40 = sub_222596CCC();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_2219B5510((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_22193D780();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_2219B5510((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_22193D780();
    MEMORY[0x227676FE0](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_2219B45E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t isStackAllocationSafe;
  char v38;
  unint64_t v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t *v46[3];
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;

  v6 = a2;
  v58 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v9 = a1;
  v46[0] = a6;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, a3);
    sub_221994504(a5, a3);
    sub_222596FC0();
    v9 = v53;
    v11 = v54;
    v13 = v55;
    v12 = v56;
    v14 = v57;
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a1 + 32);
    v11 = a1 + 56;
    v13 = ~v15;
    v16 = -v15;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v14 = v17 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v12 = 0;
  }
  v48 = v9;
  v49 = v11;
  v50 = v13;
  v51 = v12;
  v52 = v14;
  v18 = v6 + 56;
  v46[1] = (uint64_t *)(MEMORY[0x24BEE4AD0] + 8);
  while (1)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (v14)
      {
        v19 = (v14 - 1) & v14;
        v20 = __clz(__rbit64(v14)) | (v12 << 6);
LABEL_14:
        v21 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v20);
        v22 = v21;
        goto LABEL_15;
      }
      v32 = v12 + 1;
      if (__OFADD__(v12, 1))
        __break(1u);
      v33 = (unint64_t)(v13 + 64) >> 6;
      if (v32 >= v33)
      {
        v21 = 0;
        v19 = 0;
        goto LABEL_15;
      }
      v34 = *(_QWORD *)(v49 + 8 * v32);
      if (v34)
      {
LABEL_28:
        v19 = (v34 - 1) & v34;
        v20 = __clz(__rbit64(v34)) + (v32 << 6);
        v12 = v32;
        goto LABEL_14;
      }
      v35 = v12 + 2;
      if (v12 + 2 >= v33)
        goto LABEL_44;
      v34 = *(_QWORD *)(v49 + 8 * v35);
      if (v34)
      {
LABEL_32:
        v32 = v35;
        goto LABEL_28;
      }
      if (v12 + 3 < v33)
      {
        v34 = *(_QWORD *)(v49 + 8 * (v12 + 3));
        if (v34)
        {
          v32 = v12 + 3;
          goto LABEL_28;
        }
        v35 = v12 + 4;
        if (v12 + 4 >= v33)
        {
          v21 = 0;
          v19 = 0;
          v12 += 3;
LABEL_15:
          v51 = v12;
          v52 = v19;
          if (!v21)
            goto LABEL_53;
          goto LABEL_19;
        }
        v34 = *(_QWORD *)(v49 + 8 * v35);
        if (v34)
          goto LABEL_32;
        v32 = v12 + 5;
        if (v12 + 5 < v33)
        {
          v34 = *(_QWORD *)(v49 + 8 * v32);
          if (v34)
            goto LABEL_28;
          v32 = v33 - 1;
          v36 = v12 + 6;
          while (v33 != v36)
          {
            v34 = *(_QWORD *)(v49 + 8 * v36++);
            if (v34)
            {
              v32 = v36 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          v21 = 0;
          v19 = 0;
          v12 = v32;
          goto LABEL_15;
        }
      }
      v21 = 0;
      v19 = 0;
      v12 = v35;
      goto LABEL_15;
    }
    v23 = (uint64_t *)sub_2225971F4();
    if (!v23
      || (v46[2] = v23,
          sub_221917374(0, a3),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v21 = v47,
          swift_unknownObjectRelease(),
          !v47))
    {
LABEL_53:
      sub_22193D780();
      return v6;
    }
LABEL_19:
    v24 = sub_2225970E0();
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v24 & ~v25;
    if (((*(_QWORD *)(v18 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      goto LABEL_10;
    sub_221917374(0, a3);
    v27 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v26);
    v28 = sub_2225970EC();

    if ((v28 & 1) != 0)
      break;
    v29 = ~v25;
    while (1)
    {
      v26 = (v26 + 1) & v29;
      if (((*(_QWORD *)(v18 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        break;
      v30 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v26);
      v31 = sub_2225970EC();

      if ((v31 & 1) != 0)
        goto LABEL_47;
    }
LABEL_10:

    v9 = v48;
    v13 = v50;
    v12 = v51;
    v14 = v52;
  }
LABEL_47:

  v38 = *(_BYTE *)(v6 + 32);
  v39 = (unint64_t)((1 << v38) + 63) >> 6;
  v40 = 8 * v39;
  if ((v38 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)v46 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v6 + 56), v40);
    sub_2219B5194((unint64_t *)((char *)v46 - ((v40 + 15) & 0x3FFFFFFFFFFFFFF0)), v39, v6, v26, &v48, a3, a4, v46[0]);
    v42 = v41;
    swift_release();
    sub_22193D780();
  }
  else
  {
    v43 = (void *)swift_slowAlloc();
    memcpy(v43, (const void *)(v6 + 56), v40);
    sub_2219B5194((unint64_t *)v43, v39, v6, v26, &v48, a3, a4, v46[0]);
    v42 = v44;
    swift_release();
    sub_22193D780();
    MEMORY[0x227676FE0](v43, -1, -1);
  }
  return v42;
}

void sub_2219B4B3C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t i;
  unint64_t v23;
  id v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v33 = v7 - 1;
  v8 = a5[1];
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_2225973B0();
    swift_bridgeObjectRelease();
    if (v8 == v9)
      goto LABEL_3;
  }
  else if (v8 == *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    sub_2219B5F14(a1, a2, v33, a3, &qword_25573CC20);
    return;
  }
  v35 = a3 + 56;
  v34 = v5;
  while (1)
  {
    v10 = *v5;
    v11 = v5[1];
    if ((*v5 & 0xC000000000000001) != 0)
    {
      v12 = (id)MEMORY[0x227674274](v5[1]);
      v29 = v5[1];
      v13 = v29 + 1;
      if (__OFADD__(v29, 1))
        goto LABEL_34;
      goto LABEL_10;
    }
    if ((v11 & 0x8000000000000000) != 0)
      break;
    if (v11 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
    v12 = *(id *)(v10 + 8 * v11 + 32);
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_34;
LABEL_10:
    v5[1] = v13;
    v14 = sub_2225970E0();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v35 + 8 * (v16 >> 6))) == 0)
      goto LABEL_17;
    sub_221917374(0, (unint64_t *)&qword_25573FFF0);
    v19 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v16);
    v20 = sub_2225970EC();

    if ((v20 & 1) == 0)
    {
      v21 = ~v15;
      for (i = v16 + 1; ; i = v23 + 1)
      {
        v23 = i & v21;
        if (((*(_QWORD *)(v35 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v23);
        v25 = sub_2225970EC();

        if ((v25 & 1) != 0)
        {

          v17 = v23 >> 6;
          v18 = 1 << v23;
          goto LABEL_19;
        }
      }
LABEL_17:

LABEL_23:
      v5 = v34;
      goto LABEL_24;
    }

LABEL_19:
    v26 = a1[v17];
    a1[v17] = v26 & ~v18;
    if ((v18 & v26) == 0)
      goto LABEL_23;
    v5 = v34;
    v27 = v33 - 1;
    if (__OFSUB__(v33, 1))
      goto LABEL_35;
    --v33;
    if (!v27)
      return;
LABEL_24:
    v28 = v5[1];
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_2225973B0();
      swift_bridgeObjectRelease();
      if (v28 == v30)
        goto LABEL_3;
    }
    else if (v28 == *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_2219B4E18(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  id v25;
  char v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v37;
  void *v38;

  v5 = a5;
  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v37 = a3 + 56;
  while (2)
  {
    v34 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          v10 = v5[3];
          v9 = v5[4];
          if (v9)
          {
            v11 = (v9 - 1) & v9;
            v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            v13 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v12);
            v14 = v13;
            goto LABEL_8;
          }
          v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            v13 = 0;
            v11 = 0;
            goto LABEL_8;
          }
          v29 = v5[1];
          v30 = *(_QWORD *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            v11 = (v30 - 1) & v30;
            v12 = __clz(__rbit64(v30)) + (v27 << 6);
            v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            v30 = *(_QWORD *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              v27 = v10 + 3;
              goto LABEL_22;
            }
            v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              v13 = 0;
              v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13)
                goto LABEL_45;
              goto LABEL_12;
            }
            v30 = *(_QWORD *)(v29 + 8 * v27);
            if (v30)
              goto LABEL_22;
            v27 = v28 - 1;
            v32 = v10 + 5;
            while (v28 != v32)
            {
              v30 = *(_QWORD *)(v29 + 8 * v32++);
              if (v30)
              {
                v27 = v32 - 1;
                goto LABEL_22;
              }
            }
          }
          v13 = 0;
          v11 = 0;
          v10 = v27;
          goto LABEL_8;
        }
        if (!sub_2225971F4()
          || (sub_221917374(0, (unint64_t *)&qword_25573FEE0),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v13 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_45:
          swift_retain();
          sub_2219B5F14(a1, a2, v34, a3, (uint64_t *)&unk_25573FF10);
          return;
        }
LABEL_12:
        v15 = sub_2225970E0();
        v16 = -1 << *(_BYTE *)(a3 + 32);
        v17 = v15 & ~v16;
        v18 = v17 >> 6;
        v19 = 1 << v17;
        if (((1 << v17) & *(_QWORD *)(v37 + 8 * (v17 >> 6))) == 0)
          goto LABEL_3;
        sub_221917374(0, (unint64_t *)&qword_25573FEE0);
        v20 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v17);
        v21 = sub_2225970EC();

        if ((v21 & 1) != 0)
          break;
        v22 = ~v16;
        for (i = v17 + 1; ; i = v24 + 1)
        {
          v24 = i & v22;
          if (((*(_QWORD *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0)
            break;
          v25 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v24);
          v26 = sub_2225970EC();

          if ((v26 & 1) != 0)
          {

            v18 = v24 >> 6;
            v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        v5 = a5;
      }

LABEL_25:
      v5 = a5;
      v31 = a1[v18];
      a1[v18] = v31 & ~v19;
    }
    while ((v19 & v31) == 0);
    v8 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v34 != 1)
      continue;
    break;
  }
}

void sub_2219B5194(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5, unint64_t *a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  id v27;
  char v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v38;
  uint64_t v41;
  void *v43;

  v9 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v41 = a3 + 56;
  while (2)
  {
    v38 = v10;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          v12 = a5[3];
          v11 = a5[4];
          if (v11)
          {
            v13 = (v11 - 1) & v11;
            v14 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_7:
            v15 = *(void **)(*(_QWORD *)(*a5 + 48) + 8 * v14);
            v16 = v15;
            goto LABEL_8;
          }
          v29 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v30 = (unint64_t)(a5[2] + 64) >> 6;
          if (v29 >= v30)
          {
            v15 = 0;
            v13 = 0;
            goto LABEL_8;
          }
          v31 = a5[1];
          v32 = *(_QWORD *)(v31 + 8 * v29);
          if (v32)
          {
LABEL_22:
            v13 = (v32 - 1) & v32;
            v14 = __clz(__rbit64(v32)) + (v29 << 6);
            v12 = v29;
            goto LABEL_7;
          }
          v34 = v12 + 2;
          if (v12 + 2 >= v30)
            goto LABEL_41;
          v32 = *(_QWORD *)(v31 + 8 * v34);
          if (v32)
          {
LABEL_29:
            v29 = v34;
            goto LABEL_22;
          }
          if (v12 + 3 < v30)
          {
            v32 = *(_QWORD *)(v31 + 8 * (v12 + 3));
            if (v32)
            {
              v29 = v12 + 3;
              goto LABEL_22;
            }
            v34 = v12 + 4;
            if (v12 + 4 >= v30)
            {
              v15 = 0;
              v13 = 0;
              v12 += 3;
LABEL_8:
              a5[3] = v12;
              a5[4] = v13;
              if (!v15)
                goto LABEL_47;
              goto LABEL_12;
            }
            v32 = *(_QWORD *)(v31 + 8 * v34);
            if (v32)
              goto LABEL_29;
            v29 = v12 + 5;
            if (v12 + 5 < v30)
            {
              v32 = *(_QWORD *)(v31 + 8 * v29);
              if (v32)
                goto LABEL_22;
              v29 = v30 - 1;
              v35 = v12 + 6;
              while (v30 != v35)
              {
                v32 = *(_QWORD *)(v31 + 8 * v35++);
                if (v32)
                {
                  v29 = v35 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              v15 = 0;
              v13 = 0;
              v12 = v29;
              goto LABEL_8;
            }
          }
          v15 = 0;
          v13 = 0;
          v12 = v34;
          goto LABEL_8;
        }
        if (!sub_2225971F4()
          || (sub_221917374(0, a6),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v15 = v43,
              swift_unknownObjectRelease(),
              !v43))
        {
LABEL_47:
          swift_retain();
          sub_2219B5F14(a1, a2, v38, a3, a8);
          return;
        }
LABEL_12:
        v17 = sub_2225970E0();
        v18 = -1 << *(_BYTE *)(a3 + 32);
        v19 = v17 & ~v18;
        v20 = v19 >> 6;
        v21 = 1 << v19;
        if (((1 << v19) & *(_QWORD *)(v41 + 8 * (v19 >> 6))) == 0)
          goto LABEL_3;
        sub_221917374(0, a6);
        v22 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v19);
        v23 = sub_2225970EC();

        if ((v23 & 1) != 0)
          break;
        v24 = ~v18;
        for (i = v19 + 1; ; i = v26 + 1)
        {
          v26 = i & v24;
          if (((*(_QWORD *)(v41 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
            break;
          v27 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v26);
          v28 = sub_2225970EC();

          if ((v28 & 1) != 0)
          {

            v20 = v26 >> 6;
            v21 = 1 << v26;
            goto LABEL_25;
          }
        }
LABEL_3:

      }
LABEL_25:
      v33 = a1[v20];
      a1[v20] = v33 & ~v21;
    }
    while ((v21 & v33) == 0);
    v10 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v38 != 1)
      continue;
    break;
  }
}

uint64_t sub_2219B5510(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_222596678();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_221917338((uint64_t)v11, (uint64_t *)&unk_25573C160);
          v47 = v56;
          swift_retain();
          return sub_2219B5C10(v51, v49, v50, v47);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v33 = sub_222596C90();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_221933018(&qword_25573F350, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v39 = sub_222596CCC();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2219B5970(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2219B5F14(a1, a2, a3, a4, &qword_25573CC20);
}

uint64_t sub_2219B597C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FFE0);
  result = sub_222597260();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_2225978F0();
    swift_bridgeObjectRetain();
    sub_222596D38();
    result = sub_222597938();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2219B5C10(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_222596678();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573FF40);
  result = sub_222597260();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_222596C90();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2219B5F14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_222597260();
  v10 = result;
  v29 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_36;
    v17 = v29[v16];
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_36;
      v17 = v29[v12];
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_36;
        v17 = v29[v12];
        if (!v17)
          break;
      }
    }
LABEL_23:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v15);
    result = sub_2225970E0();
    v20 = -1 << *(_BYTE *)(v10 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v13 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v13 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v23) = v19;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
      goto LABEL_36;
  }
  v18 = v16 + 3;
  if (v18 >= a2)
    goto LABEL_36;
  v17 = v29[v18];
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= a2)
      goto LABEL_36;
    v17 = v29[v12];
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2219B616C()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v13;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_222597200();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_2219B67D4();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_2225978F0();
  sub_222596678();
  sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  sub_222596C9C();
  v4 = sub_222597938();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_12;
  swift_retain();
  v7 = sub_22259663C();
  swift_release();
  if ((v7 & 1) == 0)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_12;
      swift_retain();
      v9 = sub_22259663C();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v0;
  v13 = *v0;
  *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2219B1E04(&qword_25573FFD8);
    v11 = v13;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v6);
  sub_2219B6B6C(v6);
  *v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2219B63A8(void *a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v24;

  v8 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v8 < 0)
      v9 = *v4;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = a1;
    v11 = sub_222597200();

    if ((v11 & 1) != 0)
    {
      v12 = sub_2219B69C4(v9, (uint64_t)v10, a4, a2);
      swift_bridgeObjectRelease();
      return v12;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v13 = sub_2225970E0();
  v14 = -1 << *(_BYTE *)(v8 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v8 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
    goto LABEL_15;
  sub_221917374(0, a2);
  v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v15);
  v17 = sub_2225970EC();

  if ((v17 & 1) == 0)
  {
    v18 = ~v14;
    do
    {
      v15 = (v15 + 1) & v18;
      if (((*(_QWORD *)(v8 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_15;
      v19 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v15);
      v20 = sub_2225970EC();

    }
    while ((v20 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v4;
  v24 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2219B21C8(a4);
    v22 = v24;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * v15);
  sub_2219B6FF4(v15);
  *v4 = v24;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_2219B6590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_221933018((unint64_t *)&qword_25573FF30, 255, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_222596C90();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_221933018(&qword_25573F350, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_222596CCC();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2219B1FA4();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_2219B6D74(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_2219B67D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v1 = sub_2225971D0();
  v2 = swift_unknownObjectRetain();
  v3 = sub_2219AFE60(v2, v1);
  v12 = v3;
  sub_2225978F0();
  sub_222596678();
  sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  swift_retain();
  sub_222596C9C();
  v4 = sub_222597938();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    swift_retain();
    v7 = sub_22259663C();
    swift_release();
    if ((v7 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
      sub_2219B6B6C(v6);
      if ((sub_22259663C() & 1) != 0)
      {
        *v0 = v12;
        return v10;
      }
      __break(1u);
    }
    else
    {
      v8 = ~v5;
      while (1)
      {
        v6 = (v6 + 1) & v8;
        if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        swift_retain();
        v9 = sub_22259663C();
        swift_release();
        if ((v9 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2219B69C4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRelease();
  v8 = sub_2225971D0();
  v9 = swift_unknownObjectRetain();
  v10 = sub_2219B00A8(v9, v8, a3, a4);
  v21 = v10;
  swift_retain();
  v11 = sub_2225970E0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    sub_221917374(0, a4);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
    v15 = sub_2225970EC();

    if ((v15 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v19 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v13);
      sub_2219B6FF4(v13);
      if ((sub_2225970EC() & 1) != 0)
      {
        *v7 = v21;
        return v19;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
        v18 = sub_2225970EC();

        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_2219B6B6C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22259717C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_2225978F0();
        sub_222596678();
        sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        swift_retain();
        sub_222596C9C();
        v10 = sub_222597938();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2219B6D74(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_222596678();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_22259717C();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_221933018((unint64_t *)&qword_25573FF30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_222596C90();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

unint64_t sub_2219B6FF4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_22259717C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_2225970E0();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t (*sub_2219B7194(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2219B726C(v6, a2, a3);
  return sub_2219B71E8;
}

uint64_t (*sub_2219B71EC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2219B72D8(v6, a2, a3);
  return sub_2219B71E8;
}

void sub_2219B7240(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_2219B726C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x227674274](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s13HomeKitDaemon36DefaultUserActivityReportCoordinatorC17UserActivityValueOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_2219B72D8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x227674274](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for DefaultUserActivityReportCoordinator.UserActivityValue;
  }
  __break(1u);
  return result;
}

void destroy for DefaultUserActivityReportCoordinator.UserActivityValue(id *a1)
{

}

uint64_t sub_2219B734C(unint64_t a1)
{
  return sub_2219B7548(a1, (unint64_t *)&qword_25573FFF0, (uint64_t)off_24E762598, (unint64_t *)&qword_25573F5B8, &qword_25573CC20);
}

uint64_t sub_2219B7370(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740000);
  result = sub_222596FB4();
  v4 = result;
  v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2225973B0();
    result = swift_bridgeObjectRelease();
    if (!v5)
      return v4;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return v4;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x227674274](i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_2219AF174(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219B74B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_222596FB4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2219AEFC8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2219B7548(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  sub_221917374(0, a2);
  sub_221994504(a4, a2);
  result = sub_222596FB4();
  v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v12 = sub_2225973B0();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = (void *)MEMORY[0x227674274](i, a1);
        sub_2219AF980(&v17, v14, a2, a3, a5);

      }
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15++;
        sub_2219AF980(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219B76DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_222596678();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_221933018((unint64_t *)&qword_25573FF30, 255, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_222596FB4();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_2219AF71C((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_2219B78B0(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;

  v10 = MEMORY[0x24BEE4AF8];
  if (objc_msgSend(a1, sel_state))
  {
    v4 = objc_msgSend(a2, sel_smartSpeakerCurrentMediaStateCharacteristic);
    if (v4)
    {
      v5 = v4;
      MEMORY[0x227673E0C]();
      if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_222596E64();
      sub_222596E88();
      sub_222596E58();

    }
  }
  v6 = objc_msgSend(a1, sel_volume);

  if (v6)
  {
    v7 = objc_msgSend(a2, sel_smartSpeakerVolumeCharacteristic);
    if (v7)
    {
      v8 = v7;
      MEMORY[0x227673E0C]();
      if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_222596E64();
      sub_222596E88();
      sub_222596E58();

    }
  }
  return v10;
}

uint64_t sub_2219B7A1C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v3 = a1;
  v30 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, &qword_25573FEB0);
    sub_221994504(&qword_25573FEB8, &qword_25573FEB0);
    result = sub_222596FC0();
    v3 = v25;
    v23 = v26;
    v5 = v27;
    v6 = v28;
    v7 = v29;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v23 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v6 = 0;
  }
  v22 = (unint64_t)(v5 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_2225971F4())
      goto LABEL_35;
    sub_221917374(0, &qword_25573FEB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v17 = v24;
    swift_unknownObjectRelease();
    v16 = v6;
    v14 = v7;
    if (!v24)
      goto LABEL_35;
LABEL_33:
    objc_opt_self();
    v21 = swift_dynamicCastObjCClass();
    if (v21)
    {
      v11 = (void *)v21;
      v12 = v17;
      v13 = sub_2219B78B0(a2, v11);

    }
    else
    {
      v13 = MEMORY[0x24BEE4AF8];
    }

    result = sub_22198E5D0(v13);
    v6 = v16;
    v7 = v14;
  }
  if (v7)
  {
    v14 = (v7 - 1) & v7;
    v15 = __clz(__rbit64(v7)) | (v6 << 6);
    v16 = v6;
LABEL_32:
    v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    if (!v17)
      goto LABEL_35;
    goto LABEL_33;
  }
  v18 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v18 >= v22)
      goto LABEL_35;
    v19 = *(_QWORD *)(v23 + 8 * v18);
    v16 = v6 + 1;
    if (!v19)
    {
      v16 = v6 + 2;
      if (v6 + 2 >= v22)
        goto LABEL_35;
      v19 = *(_QWORD *)(v23 + 8 * v16);
      if (!v19)
      {
        v16 = v6 + 3;
        if (v6 + 3 >= v22)
          goto LABEL_35;
        v19 = *(_QWORD *)(v23 + 8 * v16);
        if (!v19)
        {
          v16 = v6 + 4;
          if (v6 + 4 >= v22)
            goto LABEL_35;
          v19 = *(_QWORD *)(v23 + 8 * v16);
          if (!v19)
          {
            v16 = v6 + 5;
            if (v6 + 5 >= v22)
              goto LABEL_35;
            v19 = *(_QWORD *)(v23 + 8 * v16);
            if (!v19)
            {
              v20 = v6 + 6;
              while (v22 != v20)
              {
                v19 = *(_QWORD *)(v23 + 8 * v20++);
                if (v19)
                {
                  v16 = v20 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_22193D780();
              return v30;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219B7D58()
{
  return objectdestroyTm_2();
}

uint64_t sub_2219B7D60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_221901E24;
  return sub_2219AC0CC(a1, v4, v5, v6, v7, v8);
}

id sub_2219B7DE0(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id result;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v1 = a1;
  v2 = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_29;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_2225973B0())
  {
    v4 = 0;
    v28 = v1;
    v29 = v1 & 0xC000000000000001;
    v26 = v1 + 32;
    v27 = v3;
    while (1)
    {
      v6 = v29 ? (id)MEMORY[0x227674274](v4, v1) : *(id *)(v26 + 8 * v4);
      v7 = v6;
      if (__OFADD__(v4++, 1))
        break;
      result = objc_msgSend(v6, sel_actions);
      if (!result)
        goto LABEL_41;
      v10 = result;
      sub_221917374(0, &qword_25573FEA8);
      v11 = sub_222596E40();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_2225973B0();
        if (!v12)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          v5 = v2;
          goto LABEL_5;
        }
      }
      else
      {
        v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v12)
          goto LABEL_25;
      }
      if (v12 < 1)
        goto LABEL_28;
      for (i = 0; i != v12; ++i)
      {
        if ((v11 & 0xC000000000000001) != 0)
          v14 = (id)MEMORY[0x227674274](i, v11);
        else
          v14 = *(id *)(v11 + 8 * i + 32);
        v15 = v14;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x227673E0C]();
          if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_222596E64();
          sub_222596E88();
          sub_222596E58();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v5 = v2;
      v2 = MEMORY[0x24BEE4AF8];
      v3 = v27;
      v1 = v28;
LABEL_5:

      swift_bridgeObjectRelease();
      sub_22198F008(v5);
      if (v4 == v3)
      {
        swift_bridgeObjectRelease();
        v16 = v30;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEE4AF8];
LABEL_31:
  if (!(v16 >> 62))
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v17)
      goto LABEL_33;
LABEL_38:
    swift_bridgeObjectRelease_n();
    v24 = MEMORY[0x24BEE4AF8];
LABEL_39:
    v25 = sub_2219B76DC(v24);
    swift_bridgeObjectRelease();
    return (id)v25;
  }
  swift_bridgeObjectRetain();
  result = (id)sub_2225973B0();
  v17 = (uint64_t)result;
  if (!result)
    goto LABEL_38;
LABEL_33:
  if (v17 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = *(void **)(v16 + 8 * v18++ + 32);
      v20 = v19;
      v21 = objc_msgSend(v20, sel_mediaProfiles);
      sub_221917374(0, &qword_25573FEB0);
      sub_221994504(&qword_25573FEB8, &qword_25573FEB0);
      v22 = sub_222596F9C();

      v23 = sub_2219A55B4(v22);
      swift_bridgeObjectRelease();
      sub_22198EE90(v23);
    }
    while (v17 != v18);
    swift_bridgeObjectRelease_n();
    v24 = v2;
    goto LABEL_39;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_2219B81BC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  id result;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  char *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_222596678();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)&v44 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v44 - v10;
  v11 = MEMORY[0x24BEE4AF8];
  v55 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_29;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_2225973B0())
  {
    v44 = v4;
    v4 = 0;
    v49 = v12;
    v50 = a1 & 0xC000000000000001;
    v45 = a1 + 32;
    v47 = a1;
    while (1)
    {
      v14 = v50 ? (id)MEMORY[0x227674274](v4, a1) : *(id *)(v45 + 8 * v4);
      v15 = v14;
      if (__OFADD__(v4++, 1))
        break;
      result = objc_msgSend(v14, sel_actions);
      if (!result)
        goto LABEL_51;
      v18 = result;
      sub_221917374(0, &qword_25573FEA8);
      v19 = sub_222596E40();

      v54 = v11;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_2225973B0();
        if (!v20)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          v13 = v11;
          goto LABEL_5;
        }
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v20)
          goto LABEL_25;
      }
      if (v20 < 1)
        goto LABEL_28;
      for (i = 0; i != v20; ++i)
      {
        if ((v19 & 0xC000000000000001) != 0)
          v22 = (id)MEMORY[0x227674274](i, v19);
        else
          v22 = *(id *)(v19 + 8 * i + 32);
        v23 = v22;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x227673E0C]();
          if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_222596E64();
          sub_222596E88();
          sub_222596E58();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v13 = v54;
      a1 = v47;
      v11 = MEMORY[0x24BEE4AF8];
LABEL_5:

      swift_bridgeObjectRelease();
      sub_22198F014(v13);
      if (v4 == v49)
      {
        swift_bridgeObjectRelease();
        v50 = v55;
        v4 = v44;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v50 = MEMORY[0x24BEE4AF8];
LABEL_31:
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_2225973B0();
    v24 = (uint64_t)result;
    if (result)
      goto LABEL_33;
LABEL_48:
    v26 = MEMORY[0x24BEE4AF8];
LABEL_49:
    swift_bridgeObjectRelease_n();
    v43 = sub_2219B76DC(v26);
    swift_bridgeObjectRelease();
    return (id)v43;
  }
  v24 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain();
  if (!v24)
    goto LABEL_48;
LABEL_33:
  if (v24 >= 1)
  {
    v25 = (id *)(v50 + 32);
    v26 = MEMORY[0x24BEE4AF8];
    v27 = v52;
    while (1)
    {
      v28 = *v25;
      v29 = objc_msgSend(v28, sel_accessory);
      if (v29)
      {
        v30 = v29;
        v31 = v4;
        v32 = objc_msgSend(v29, sel_uuid);

        v33 = v48;
        sub_222596648();

        v4 = v31;
        v34 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
        v35 = v31;
        v36 = v53;
        v34(v35, v33, v53);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v4, 0, 1, v36);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v4, 1, v36) != 1)
          goto LABEL_42;
      }
      else
      {
        v38 = v52;
        v37 = v53;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v4, 1, 1, v53);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v4, 1, v37) != 1)
        {
          v34 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
LABEL_42:
          v39 = v46;
          v40 = v53;
          v34((uint64_t)v46, (char *)v4, v53);
          v34((uint64_t)v51, v39, v40);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v26 = sub_221991AE0(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
          v42 = *(_QWORD *)(v26 + 16);
          v41 = *(_QWORD *)(v26 + 24);
          if (v42 >= v41 >> 1)
            v26 = sub_221991AE0(v41 > 1, v42 + 1, 1, v26);
          *(_QWORD *)(v26 + 16) = v42 + 1;
          v34(v26+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v42, v51, v53);
          goto LABEL_36;
        }
      }
      sub_221917338(v4, (uint64_t *)&unk_25573C160);
LABEL_36:
      ++v25;
      if (!--v24)
        goto LABEL_49;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

id sub_2219B876C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  id result;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;

  v1 = a1;
  v2 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v3 = sub_2225973B0();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 0;
      v22 = v1;
      v23 = v1 & 0xC000000000000001;
      v20 = v1 + 32;
      v21 = v3;
      while (1)
      {
        if (v23)
          v6 = (id)MEMORY[0x227674274](v4, v1);
        else
          v6 = *(id *)(v20 + 8 * v4);
        v7 = v6;
        if (__OFADD__(v4++, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        result = objc_msgSend(v6, sel_actions);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v10 = result;
        v24 = v7;
        sub_221917374(0, &qword_25573FEA8);
        v11 = sub_222596E40();

        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          v12 = sub_2225973B0();
          if (!v12)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            v5 = v2;
            goto LABEL_5;
          }
        }
        else
        {
          v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v12)
            goto LABEL_26;
        }
        if (v12 < 1)
          goto LABEL_29;
        for (i = 0; i != v12; ++i)
        {
          if ((v11 & 0xC000000000000001) != 0)
            v14 = (id)MEMORY[0x227674274](i, v11);
          else
            v14 = *(id *)(v11 + 8 * i + 32);
          v15 = v14;
          objc_opt_self();
          v16 = (void *)swift_dynamicCastObjCClass();
          if (v16)
          {
            v17 = objc_msgSend(v16, sel_lightProfile);

            if (v17)
            {
              MEMORY[0x227673E0C]();
              if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_222596E64();
              sub_222596E88();
              sub_222596E58();
            }
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease();
        v5 = v2;
        v3 = v21;
        v1 = v22;
        v2 = MEMORY[0x24BEE4AF8];
LABEL_5:

        swift_bridgeObjectRelease();
        sub_22198F020(v5);
        if (v4 == v3)
        {
          swift_bridgeObjectRelease();
          v18 = v25;
          goto LABEL_32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x24BEE4AF8];
LABEL_32:
  v19 = sub_2219B7548(v18, &qword_25573F568, (uint64_t)off_24E762690, &qword_25573FF20, &qword_25573FF28);
  swift_bridgeObjectRelease();
  return (id)v19;
}

uint64_t sub_2219B8A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_2219B8AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_222596678();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2219B8B4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(sub_222596678() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_221900360;
  return sub_2219A8AB8(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_2219B8BF8()
{
  return objectdestroyTm_2();
}

uint64_t sub_2219B8C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 64) = v3;
  return swift_task_switch();
}

uint64_t sub_2219B8C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t objectdestroy_21Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219B8CF4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219B8D28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(int, void *, uint64_t))((char *)&dword_25573FFA8 + dword_25573FFA8))(v2, v3, v4);
}

uint64_t sub_2219B8D9C()
{
  return objectdestroyTm_2();
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

id HMDWidgetMonitoredCharacteristic.characteristic.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_characteristic);
}

uint64_t HMDWidgetMonitoredCharacteristic.reachabilityMonitored.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
}

id HMDWidgetMonitoredCharacteristic.__allocating_init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v5[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id HMDWidgetMonitoredCharacteristic.init(characteristic:reachabilityMonitored:)(uint64_t a1, char a2)
{
  _BYTE *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_characteristic] = a1;
  v2[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_reachabilityMonitored] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for HMDWidgetMonitoredCharacteristic()
{
  return objc_opt_self();
}

uint64_t HMDWidgetMonitoredCharacteristic.hash.getter()
{
  return sub_2225970F8();
}

uint64_t HMDWidgetMonitoredCharacteristic.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  v2 = v1;
  sub_22192DC94(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_221947E0C((uint64_t)v10);
    goto LABEL_7;
  }
  type metadata accessor for HMDWidgetMonitoredCharacteristic();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v7 = 0;
    return v7 & 1;
  }
  sub_221903294();
  v3 = *(id *)&v9[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_characteristic];
  v4 = sub_2225970EC();

  if ((v4 & 1) == 0)
  {

    goto LABEL_7;
  }
  v5 = *(_BYTE *)(v2 + OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_reachabilityMonitored);
  v6 = v9[OBJC_IVAR____TtC13HomeKitDaemon32HMDWidgetMonitoredCharacteristic_reachabilityMonitored];

  v7 = v5 ^ v6 ^ 1;
  return v7 & 1;
}

id HMDWidgetMonitoredCharacteristic.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HMDWidgetMonitoredCharacteristic.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HMDWidgetMonitoredCharacteristic.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HMDWidgetMonitoredCharacteristic();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2219B9208()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtCC13HomeKitDaemon16HomeIntelligence20DistributedScheduler_updateTask))
  {
    swift_retain();
    sub_222596F48();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  sub_221917338(v0 + OBJC_IVAR____TtCC13HomeKitDaemon16HomeIntelligence20DistributedScheduler_eventStream, &qword_25573C2E8);
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2219B92B4()
{
  return _s20DistributedSchedulerCMa();
}

uint64_t _s20DistributedSchedulerCMa()
{
  uint64_t result;

  result = qword_255740090;
  if (!qword_255740090)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2219B92F8()
{
  unint64_t v0;

  sub_2219BA1FC(319);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_2219B93A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v1 = v0;
  v2 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596B40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2219950CC(v2, (uint64_t)&off_24E76B6D8);
  v13 = sub_222596B28();
  v14 = sub_222597020();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_2218F0000, v13, v14, "Registering for system state changes", v15, 2u);
    MEMORY[0x227676FE0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_2219289A8((uint64_t)v1 + OBJC_IVAR____TtCC13HomeKitDaemon16HomeIntelligence20DistributedScheduler_eventStream, (uint64_t)v8);
  sub_22192EB0C((uint64_t)v8);
  sub_221917338((uint64_t)v8, &qword_25573C2E8);
  v16 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v17;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtCC13HomeKitDaemon16HomeIntelligence20DistributedScheduler_updateTask) = sub_22191760C((uint64_t)v5, (uint64_t)&unk_2557401E0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_2219B95DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[13] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557401E8);
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219B9674()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 152) = Strong;
  if (Strong)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219B9704()
{
  uint64_t v0;

  sub_2219289A8(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtCC13HomeKitDaemon16HomeIntelligence20DistributedScheduler_eventStream, *(_QWORD *)(v0 + 136));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2219B9758()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_2219289F4(v0[17], v0[18]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3A0);
  sub_222596F18();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  v0[20] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2219B9810;
  return sub_222596F24();
}

uint64_t sub_2219B9810()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219B9864()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  if (*(_QWORD *)(v0 + 40))
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 168) = Strong;
    if (Strong)
    {
      v2 = (_QWORD *)Strong;
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v3;
      *v3 = v0;
      v3[1] = sub_2219B9970;
      v3[2] = v2;
      v3[3] = *v2;
      return swift_task_switch();
    }
    v5 = v0 + 16;
    v7 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    sub_221917338(v7, &qword_25573C2E8);
    v6 = &qword_2557401F0;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    v6 = &qword_25573C2E8;
  }
  sub_221917338(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219B9970()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219B99C4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  sub_221917338(v0 + 16, &qword_2557401F0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_2219B9810;
  return sub_222596F24();
}

uint64_t sub_2219B9A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  _s20ControlBlockInternalVMa();
  v4[14] = swift_task_alloc();
  v5 = sub_222596678();
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v6 = sub_222596B40();
  v4[19] = v6;
  v4[20] = *(_QWORD *)(v6 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219B9B10()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_2219950CC(v0[13], (uint64_t)&off_24E76B6D8);
  swift_unknownObjectRetain_n();
  v1 = sub_222596B28();
  v2 = sub_22259702C();
  if (os_log_type_enabled(v1, v2))
  {
    v16 = v0[19];
    v17 = v0[22];
    v3 = v0[10];
    v15 = v0[20];
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v18 = v5;
    *(_DWORD *)v4 = 136315138;
    swift_getObjectType();
    v0[8] = v3;
    v6 = sub_222597530();
    v0[9] = sub_221921364(v6, v7, &v18);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_2218F0000, v1, v2, "Adding %s to be scheduled", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v5, -1, -1);
    MEMORY[0x227676FE0](v4, -1, -1);

    v8 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v8(v17, v16);
  }
  else
  {
    v9 = v0[22];
    v10 = v0[19];
    v11 = v0[20];
    swift_unknownObjectRelease_n();

    v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8(v9, v10);
  }
  v0[23] = v8;
  v12 = v0[11];
  v0[24] = swift_getObjectType();
  v0[25] = *(_QWORD *)(v12 + 40);
  v0[26] = sub_222596EA0();
  v0[27] = v13;
  return swift_task_switch();
}

uint64_t sub_2219B9D28()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_2219B9D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 112) + 16)
    && (v3 = *(_QWORD *)(v0 + 144),
        swift_bridgeObjectRetain(),
        sub_22198D5E4(v3),
        LOBYTE(v3) = v4,
        swift_bridgeObjectRelease(),
        (v3 & 1) != 0))
  {
    sub_2219950CC(*(_QWORD *)(v0 + 104), (uint64_t)&off_24E76B6D8);
    v5 = sub_222596B28();
    v6 = sub_222597020();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_2218F0000, v5, v6, "Task already scheduled, ignoring request", v7, 2u);
      MEMORY[0x227676FE0](v7, -1, -1);
    }
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    v9 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);

    v8(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 16))(v14, *(_QWORD *)(v0 + 144), v15);
    swift_beginAccess();
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    sub_221968860(v19, v17, v14, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
    swift_bridgeObjectRelease();
    v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    *(_QWORD *)(v0 + 224) = v21;
    v21(v14, v15);
    swift_endAccess();
    v22 = MEMORY[0x227677094](v18 + 120);
    *(_QWORD *)(v0 + 232) = v22;
    if (v22)
    {
      v23 = (void *)v22;
      v24 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 192));
      sub_22192E780((uint64_t)v23, v24);
      v26 = v25;
      swift_release();
      if ((v26 & 1) != 0)
        return swift_task_switch();
      v21(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));

    }
    else
    {
      v21(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BA034()
{
  uint64_t v0;

  sub_2219E1BF8(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_2219BA078()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);

  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BA0F4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_2219BA114()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_allocObject();
  v2 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *v3 = v0;
  v3[1] = sub_2219BA1AC;
  return sub_2219DB448((uint64_t)&unk_2557401D0, v1);
}

uint64_t sub_2219BA1AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2219BA1FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2557400A8[0])
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25573C3B8);
    v5 = _s6StreamVMa(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_2557400A8);
  }
}

uint64_t sub_2219BA254(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = a2;
  v3 = sub_222596B40();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219BA2B8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_2219950CC(*(_QWORD *)(v0 + 48), (uint64_t)&off_24E76B6D8);
  v1 = sub_222596B28();
  v2 = sub_22259702C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2218F0000, v1, v2, "System state has changed, reevaluating scheduled items", v3, 2u);
    MEMORY[0x227676FE0](v3, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = MEMORY[0x227677094](v7 + 120);
  *(_QWORD *)(v0 + 80) = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + 40);
    swift_beginAccess();
    v10 = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v0 + 88) = v10;
    v11 = *(_BYTE *)(v10 + 32);
    *(_BYTE *)(v0 + 136) = v11;
    v12 = -1;
    v13 = -1 << v11;
    if (-(-1 << v11) < 64)
      v12 = ~(-1 << -(char)v13);
    v14 = v12 & *(_QWORD *)(v10 + 64);
    swift_bridgeObjectRetain();
    if (v14)
    {
      v15 = 0;
      v16 = __clz(__rbit64(v14));
      v17 = (v14 - 1) & v14;
LABEL_8:
      *(_QWORD *)(v0 + 96) = v17;
      *(_QWORD *)(v0 + 104) = v15;
      v18 = *(_QWORD *)(v0 + 80);
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v16);
      *(_QWORD *)(v0 + 112) = *v19;
      v20 = v19[1];
      *(_QWORD *)(v0 + 120) = v20;
      ObjectType = swift_getObjectType();
      *(_QWORD *)(v0 + 128) = ObjectType;
      v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
      swift_unknownObjectRetain();
      v23 = v22(ObjectType, v20);
      sub_22192E780(v18, v23);
      swift_release();
      sub_222596EA0();
      return swift_task_switch();
    }
    v25 = 63 - v13;
    if ((unint64_t)(63 - v13) > 0x7F)
    {
      v26 = *(_QWORD *)(v10 + 72);
      if (v26)
      {
        v15 = 1;
LABEL_12:
        v17 = (v26 - 1) & v26;
        v16 = __clz(__rbit64(v26)) + (v15 << 6);
        goto LABEL_8;
      }
      if (v25 >= 0xC0)
      {
        v26 = *(_QWORD *)(v10 + 80);
        if (v26)
        {
          v15 = 2;
          goto LABEL_12;
        }
        if (v25 >= 0x100)
        {
          v26 = *(_QWORD *)(v10 + 88);
          if (v26)
          {
            v15 = 3;
            goto LABEL_12;
          }
          if (v25 >= 0x140)
          {
            v26 = *(_QWORD *)(v10 + 96);
            if (v26)
            {
              v15 = 4;
              goto LABEL_12;
            }
            if (v25 >= 0x180)
            {
              v26 = *(_QWORD *)(v10 + 104);
              if (v26)
              {
                v15 = 5;
                goto LABEL_12;
              }
              v27 = 0;
              v28 = v25 >> 6;
              if (v25 >> 6 <= 6)
                v28 = 6;
              v29 = v28 - 6;
              while (v29 != v27)
              {
                v26 = *(_QWORD *)(v10 + 112 + 8 * v27++);
                if (v26)
                {
                  v15 = v27 + 5;
                  goto LABEL_12;
                }
              }
            }
          }
        }
      }
    }

    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BA5A0()
{
  uint64_t v0;

  sub_2219E1BF8(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120));
  return swift_task_switch();
}

uint64_t sub_2219BA5E4()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;

  result = swift_unknownObjectRelease();
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  if (v3)
  {
    v4 = __clz(__rbit64(v3));
    v5 = (v3 - 1) & v3;
    v6 = v4 | (v2 << 6);
    result = *(_QWORD *)(v0 + 88);
LABEL_3:
    *(_QWORD *)(v0 + 96) = v5;
    *(_QWORD *)(v0 + 104) = v2;
    v7 = *(_QWORD *)(v0 + 80);
    v8 = (_QWORD *)(*(_QWORD *)(result + 56) + 16 * v6);
    *(_QWORD *)(v0 + 112) = *v8;
    v9 = v8[1];
    *(_QWORD *)(v0 + 120) = v9;
    ObjectType = swift_getObjectType();
    *(_QWORD *)(v0 + 128) = ObjectType;
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32);
    swift_unknownObjectRetain();
    v12 = v11(ObjectType, v9);
    sub_22192E780(v7, v12);
    swift_release();
    sub_222596EA0();
    return swift_task_switch();
  }
  v13 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)((1 << *(_BYTE *)(v0 + 136)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 88);
    if (v13 >= v14)
      goto LABEL_20;
    v15 = result + 64;
    v16 = *(_QWORD *)(result + 64 + 8 * v13);
    ++v2;
    if (v16)
    {
LABEL_7:
      v5 = (v16 - 1) & v16;
      v6 = __clz(__rbit64(v16)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v13 + 1;
    if (v13 + 1 >= v14)
      goto LABEL_20;
    v16 = *(_QWORD *)(v15 + 8 * v2);
    if (v16)
      goto LABEL_7;
    v2 = v13 + 2;
    if (v13 + 2 >= v14)
      goto LABEL_20;
    v16 = *(_QWORD *)(v15 + 8 * v2);
    if (v16)
      goto LABEL_7;
    v2 = v13 + 3;
    if (v13 + 3 >= v14)
      goto LABEL_20;
    v16 = *(_QWORD *)(v15 + 8 * v2);
    if (v16)
      goto LABEL_7;
    v17 = v13 + 4;
    if (v17 >= v14)
    {
LABEL_20:
      v18 = *(void **)(v0 + 80);
      swift_release();

      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v16 = *(_QWORD *)(v15 + 8 * v17);
    if (v16)
    {
      v2 = v17;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v2 >= v14)
        goto LABEL_20;
      v16 = *(_QWORD *)(v15 + 8 * v2);
      ++v17;
      if (v16)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2219BA7D0()
{
  uint64_t v0;

  sub_2219E1F64(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120));
  return swift_task_switch();
}

unint64_t sub_2219BA814()
{
  return 0xD000000000000025;
}

uint64_t sub_2219BA830()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219BA854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221901E24;
  return sub_2219BA254(v2, v3);
}

uint64_t sub_2219BA8A4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = *a2;
  return swift_task_switch();
}

uint64_t sub_2219BA8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_allocObject();
  v4 = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(int8x16_t *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v1;
  swift_unknownObjectRetain();
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_2219BA984;
  return sub_2219DB448((uint64_t)&unk_255740208, v3);
}

uint64_t sub_2219BA984()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219BA9D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2219BA9F8()
{
  return objectdestroy_7Tm_0();
}

uint64_t sub_2219BAA00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_221901E24;
  return sub_2219B95DC(a1, v4, v5, v6);
}

uint64_t sub_2219BAA6C()
{
  return objectdestroy_7Tm_0();
}

uint64_t objectdestroy_7Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219BAAAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_221900360;
  return sub_2219B9A40(v2, v3, v5, v4);
}

uint64_t sub_2219BAB14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _BYTE v67[24];
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v3 = v2;
  v5 = a1;
  if ((unint64_t)a1 >> 62)
    goto LABEL_31;
  v6 = *(_QWORD *)(((unint64_t)a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v72 = MEMORY[0x24BEE4AF8];
  sub_22191A4E8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v50 = v3;
    v8 = 0;
    v7 = v72;
    v52 = (unint64_t)v5 & 0xC000000000000001;
    v51 = v6;
    while (1)
    {
      if (v6 == v8)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        v6 = sub_2225973B0();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      v59 = v8;
      if (v52)
        v9 = (id)MEMORY[0x227674274]();
      else
        v9 = (id)v5[v8 + 4];
      v10 = v9;
      v11 = *a2;
      v12 = a2[1];
      v13 = a2[3];
      sub_22191DDFC(*a2, v12);
      swift_bridgeObjectRetain();
      v14 = objc_msgSend(v10, sel_serviceType);
      v58 = v7;
      v57 = v10;
      v56 = v13;
      v55 = v11;
      v54 = v12;
      if (v14)
      {
        v15 = v14;
        v16 = sub_222596CF0();
        v18 = v17;

      }
      else
      {
        v16 = 0;
        v18 = 0;
      }
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573DA10);
      v70 = v19;
      v3 = sub_22198799C((unint64_t *)&qword_25573E038, (uint64_t *)&unk_25573DA10, (uint64_t)&off_24E7682B8, (uint64_t)&unk_22268B1E8);
      v71 = v3;
      *(_QWORD *)&v69 = v16;
      *((_QWORD *)&v69 + 1) = v18;
      sub_221903314(&v69, (uint64_t)v67);
      v20 = (_QWORD *)MEMORY[0x24BEE4B00];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v66 = v20;
      v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v67, v68);
      v53 = &v50;
      MEMORY[0x24BDAC7A8](v22);
      v24 = (__int128 *)((char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(__int128 *))(v25 + 16))(v24);
      v64 = v19;
      v65 = v3;
      v63 = *v24;
      v26 = sub_22198D4E4(0x5465636976726573, 0xEB00000000657079);
      v28 = v20;
      v29 = v26;
      v30 = v28[2];
      v31 = (v27 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_29;
      v33 = v27;
      if (v28[3] >= v32)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v36 = v66;
          if ((v27 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          sub_221969208();
          v36 = v66;
          if ((v33 & 1) != 0)
            goto LABEL_20;
        }
      }
      else
      {
        sub_2219655AC(v32, isUniquelyReferenced_nonNull_native);
        v34 = sub_22198D4E4(0x5465636976726573, 0xEB00000000657079);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_33;
        v29 = v34;
        v36 = v66;
        if ((v33 & 1) != 0)
        {
LABEL_20:
          v37 = v36[7] + 40 * v29;
          __swift_destroy_boxed_opaque_existential_1(v37);
          sub_221903314(&v63, v37);
          goto LABEL_24;
        }
      }
      v38 = v5;
      v5 = a2;
      v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v63, v64);
      a2 = &v50;
      MEMORY[0x24BDAC7A8](v39);
      v41 = (__int128 *)((char *)&v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(__int128 *))(v42 + 16))(v41);
      v61 = v19;
      v62 = v3;
      v60 = *v41;
      v36[(v29 >> 6) + 8] |= 1 << v29;
      v43 = (_QWORD *)(v36[6] + 16 * v29);
      *v43 = 0x5465636976726573;
      v43[1] = 0xEB00000000657079;
      sub_221903314(&v60, v36[7] + 40 * v29);
      v44 = v36[2];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (v45)
        goto LABEL_30;
      v36[2] = v46;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
      a2 = v5;
      v5 = v38;
      v6 = v51;
LABEL_24:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_22191DE10(v55, v54);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v58;
      v72 = v58;
      v48 = *(_QWORD *)(v58 + 16);
      v47 = *(_QWORD *)(v58 + 24);
      v3 = v48 + 1;
      if (v48 >= v47 >> 1)
      {
        sub_22191A4E8(v47 > 1, v48 + 1, 1);
        v7 = v72;
      }
      v8 = v59 + 1;
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 8 * v48 + 32) = v36;
      if (v6 == v8)
        return v7;
    }
  }
  __break(1u);
LABEL_33:
  result = sub_222597878();
  __break(1u);
  return result;
}

uint64_t sub_2219BB02C(unint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (!v4)
      return v5;
    v17 = MEMORY[0x24BEE4AF8];
    result = sub_22191A4E8(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v17;
    v14 = v3 & 0xC000000000000001;
    v15 = v3;
    while (v4 != v7)
    {
      if (v14)
        v8 = (id)MEMORY[0x227674274](v7, v3);
      else
        v8 = *(id *)(v3 + 8 * v7 + 32);
      v9 = v8;
      v10 = *a2;
      v16 = MEMORY[0x24BEE4B00];
      v11 = a2[1];
      sub_22191DDFC(*a2, v11);
      swift_bridgeObjectRetain();
      sub_2219DA5C4();
      swift_bridgeObjectRetain();
      sub_22191DE10(v10, v11);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      if (v13 >= v12 >> 1)
        sub_22191A4E8(v12 > 1, v13 + 1, 1);
      ++v7;
      *(_QWORD *)(v17 + 16) = v13 + 1;
      *(_QWORD *)(v17 + 8 * v13 + 32) = v16;
      v3 = v15;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2219BB200(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557402F8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_17;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v10)
      return v11;
    v42 = MEMORY[0x24BEE4AF8];
    result = sub_22191A770(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
      break;
    v30 = v3;
    v31 = v10;
    v3 = 0;
    v11 = v42;
    v32 = a1 & 0xC000000000000001;
    v33 = v9;
    v34 = a1;
    while (v10 != v3)
    {
      v39 = v11;
      if (v32)
        v13 = (id)MEMORY[0x227674274](v3, a1);
      else
        v13 = *(id *)(a1 + 8 * v3 + 32);
      v14 = v13;
      v15 = *(_QWORD *)v38;
      v16 = *(_QWORD *)(v38 + 8);
      v17 = *(_QWORD *)(v38 + 16);
      v18 = *(_QWORD *)(v38 + 24);
      v19 = *(_BYTE *)(v38 + 32);
      v20 = (uint64_t)&v6[*(int *)(v37 + 36)];
      sub_22191DDFC(*(_QWORD *)v38, v16);
      swift_bridgeObjectRetain();
      sub_2225969B4();
      v21 = (_QWORD *)(v20 + *(int *)(v36 + 20));
      *v21 = 0;
      v21[1] = 0;
      *(_QWORD *)v6 = v15;
      *((_QWORD *)v6 + 1) = v16;
      *((_QWORD *)v6 + 2) = v17;
      *((_QWORD *)v6 + 3) = v18;
      v6[32] = v19;
      swift_getKeyPath();
      v22 = objc_msgSend(v14, sel_serviceType);
      if (v22)
      {
        v23 = v22;
        v24 = sub_222596CF0();
        v26 = v25;

        v40 = v24;
        v41 = v26;
        swift_bridgeObjectRetain();
        swift_setAtWritableKeyPath();
        swift_bridgeObjectRelease();
      }
      swift_release();
      v10 = v31;
      v27 = (uint64_t)v33;
      sub_221916548(v20, (uint64_t)v33, type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService);
      sub_221917338((uint64_t)v6, &qword_2557402F8);

      v11 = v39;
      v42 = v39;
      v29 = *(_QWORD *)(v39 + 16);
      v28 = *(_QWORD *)(v39 + 24);
      v9 = (char *)(v29 + 1);
      if (v29 >= v28 >> 1)
      {
        sub_22191A770(v28 > 1, v29 + 1, 1);
        v11 = v42;
      }
      ++v3;
      *(_QWORD *)(v11 + 16) = v9;
      sub_2219175C8(v27, v11+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v29, type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService);
      a1 = v34;
      if (v10 == v3)
        return v11;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2219BB4F0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v37 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573E098);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDCharacteristic(0);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = (int *)v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v10)
      return v11;
    v39 = MEMORY[0x24BEE4AF8];
    result = sub_22191A79C(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
      break;
    v29 = v3;
    v3 = 0;
    v11 = v39;
    v30 = a1 & 0xC000000000000001;
    v31 = v10;
    v32 = v9;
    v33 = a1;
    while (v10 != v3)
    {
      v38 = v11;
      if (v30)
        v13 = (id)MEMORY[0x227674274](v3, a1);
      else
        v13 = *(id *)(a1 + 8 * v3 + 32);
      v14 = v13;
      v15 = *(_QWORD *)v37;
      v16 = *(_QWORD *)(v37 + 8);
      v17 = *(_QWORD *)(v37 + 16);
      v18 = *(_QWORD *)(v37 + 24);
      v19 = *(_BYTE *)(v37 + 32);
      v20 = (uint64_t)&v6[*(int *)(v36 + 36)];
      sub_22191DDFC(*(_QWORD *)v37, v16);
      swift_bridgeObjectRetain();
      sub_2225969B4();
      v21 = v35;
      v22 = (_QWORD *)(v20 + v35[5]);
      *v22 = 0;
      v22[1] = 0;
      v23 = v20 + v21[6];
      *(_DWORD *)v23 = 0;
      *(_BYTE *)(v23 + 4) = 1;
      v24 = (_QWORD *)(v20 + v21[7]);
      *v24 = 0;
      v24[1] = 0;
      v25 = v20 + v21[8];
      *(_DWORD *)v25 = 0;
      *(_BYTE *)(v25 + 4) = 1;
      *(_QWORD *)v6 = v15;
      *((_QWORD *)v6 + 1) = v16;
      *((_QWORD *)v6 + 2) = v17;
      *((_QWORD *)v6 + 3) = v18;
      v6[32] = v19;
      sub_22195ED88();
      v26 = (uint64_t)v32;
      sub_221916548(v20, (uint64_t)v32, type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDCharacteristic);
      sub_221917338((uint64_t)v6, &qword_25573E098);

      v11 = v38;
      v39 = v38;
      v28 = *(_QWORD *)(v38 + 16);
      v27 = *(_QWORD *)(v38 + 24);
      v9 = (char *)(v28 + 1);
      if (v28 >= v27 >> 1)
      {
        sub_22191A79C(v27 > 1, v28 + 1, 1);
        v11 = v39;
      }
      ++v3;
      *(_QWORD *)(v11 + 16) = v9;
      sub_2219175C8(v26, v11+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v28, type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDCharacteristic);
      v10 = v31;
      a1 = v33;
      if (v31 == v3)
        return v11;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v10 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2219BB7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (**v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t (**v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  id v76;
  void *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  int *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t (**v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v96)(char *, char *, uint64_t);
  unint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t (**v103)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  _QWORD v120[2];
  _QWORD v121[5];
  __int128 v122;
  __int128 v123;

  v105 = _s23EventCommonDataInternalVMa();
  v4 = MEMORY[0x24BDAC7A8](v105);
  v106 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v107 = (uint64_t)&v95 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573BF30);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22259660C();
  v114 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v113 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v112 = (char *)&v95 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v111 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v110 = (char *)&v95 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v109 = (char *)&v95 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v95 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v95 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v95 - v27;
  v29 = sub_222596678();
  v118 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v108 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v116 = (char *)&v95 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v117 = (char *)&v95 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v119 = (char *)&v95 - v36;
  v37 = _s12HAPAccessoryO5EventVMa();
  v38 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v104 = (uint64_t)&v95 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2225963E4();
  if (!v121[3])
  {
    sub_221917338((uint64_t)v121, &qword_2557410E0);
    goto LABEL_8;
  }
  sub_2219BCAE8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v49 = sub_2225963FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(a1, v49);
    return v38[7](a2, 1, 1, v37);
  }
  v103 = v38;
  v40 = (void *)v122;
  v41 = sub_2225963F0();
  if (!v41)
  {
    v51 = sub_2225963FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(a1, v51);

LABEL_59:
    v38 = v103;
    return v38[7](a2, 1, 1, v37);
  }
  v42 = v41;
  v100 = v9;
  v101 = a2;
  v43 = objc_msgSend(v40, sel_uuid);
  sub_222596648();

  v102 = v40;
  v44 = objc_msgSend(v40, sel_home);
  if (!v44)
  {
    v52 = v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v28, 1, 1, v29);
    v38 = v103;
    goto LABEL_14;
  }
  v45 = v44;
  v99 = v23;
  v46 = objc_msgSend(v44, sel_uuid);

  if (v46)
  {
    sub_222596648();

    v47 = v118;
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56);
    v48(v26, 0, 1, v29);
  }
  else
  {
    v47 = v118;
    v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56);
    v48(v26, 1, 1, v29);
  }
  v38 = v103;
  sub_22191E324((uint64_t)v26, (uint64_t)v28);
  v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v28, 1, v29);
  v52 = v47;
  v54 = (uint64_t)v100;
  if (v53 == 1)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    v55 = sub_2225963FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(a1, v55);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v119, v29);
    v56 = (uint64_t)v28;
LABEL_15:
    sub_221917338(v56, (uint64_t *)&unk_25573C160);
    a2 = v101;
    return v38[7](a2, 1, 1, v37);
  }
  v96 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v96(v117, v28, v29);
  v57 = objc_msgSend(v102, sel_room);
  v58 = objc_msgSend(v57, sel_uuid);

  sub_222596648();
  strcpy((char *)v120, "kUserUUIDKey");
  BYTE5(v120[1]) = 0;
  HIWORD(v120[1]) = -5120;
  sub_222597230();
  if (*(_QWORD *)(v42 + 16) && (v59 = sub_22198D548((uint64_t)v121), (v60 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v42 + 56) + 32 * v59, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  sub_22192C7DC((uint64_t)v121);
  if (*((_QWORD *)&v123 + 1))
  {
    v61 = (uint64_t)v99;
    v62 = swift_dynamicCast() ^ 1;
    v63 = v61;
  }
  else
  {
    sub_221917338((uint64_t)&v122, &qword_2557410E0);
    v63 = (uint64_t)v99;
    v62 = 1;
  }
  v48((char *)v63, v62, 1, v29);
  v38 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v102;
  v120[0] = 0xD00000000000001BLL;
  v120[1] = 0x8000000222620C20;
  sub_222597230();
  if (*(_QWORD *)(v42 + 16) && (v64 = sub_22198D548((uint64_t)v121), (v65 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v42 + 56) + 32 * v64, (uint64_t)&v122);
  }
  else
  {
    v122 = 0u;
    v123 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v121);
  if (!*((_QWORD *)&v123 + 1))
  {

    sub_221917338((uint64_t)&v122, &qword_2557410E0);
LABEL_58:
    v93 = sub_2225963FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(a1, v93);
    v94 = *(void (**)(char *, uint64_t))(v52 + 8);
    v94(v116, v29);
    v94(v117, v29);
    v94(v119, v29);
    sub_221917338((uint64_t)v99, (uint64_t *)&unk_25573C160);
    a2 = v101;
    goto LABEL_59;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F558);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {

    goto LABEL_58;
  }
  v66 = v120[0];
  v67 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120[0] >> 62);
  if (v120[0] >> 62)
    goto LABEL_56;
  if (!*(_QWORD *)((v120[0] & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_57:

    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  while (1)
  {
    v97 = v66 & 0xC000000000000001;
    v98 = v66;
    if ((v66 & 0xC000000000000001) != 0)
    {
      v68 = (id)MEMORY[0x227674274](0, v66);
      v38 = v103;
    }
    else
    {
      v38 = v103;
      if (!*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        return result;
      }
      v68 = *(id *)(v66 + 32);
    }
    v69 = objc_msgSend(v68, sel_lastKnownValueUpdateTime, v95);

    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v54, 1, 1, v115);
LABEL_41:

      swift_bridgeObjectRelease();
      v74 = sub_2225963FC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(a1, v74);
      v75 = *(void (**)(char *, uint64_t))(v52 + 8);
      v75(v116, v29);
      v75(v117, v29);
      v75(v119, v29);
      sub_221917338(v54, &qword_25573BF30);
      v56 = (uint64_t)v99;
      goto LABEL_15;
    }
    v103 = v67;
    v70 = v113;
    sub_2225965F4();

    v71 = v114;
    v67 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 32);
    v72 = v70;
    v73 = v115;
    ((void (*)(uint64_t, char *, uint64_t))v67)(v54, v72, v115);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v54, 0, 1, v73);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v54, 1, v73) == 1)
      goto LABEL_41;
    ((void (*)(char *, uint64_t, uint64_t))v67)(v112, v54, v73);
    v95 = v67;
    if (v103)
    {
      swift_bridgeObjectRetain();
      v66 = sub_2225973B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v66 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v66)
      break;
    v121[0] = MEMORY[0x24BEE4AF8];
    result = sub_222597308();
    if (v66 < 0)
      goto LABEL_62;
    v52 = 0;
    while (v66 != v52)
    {
      if (v97)
        v76 = (id)MEMORY[0x227674274](v52, v98);
      else
        v76 = *(id *)(v98 + 8 * v52 + 32);
      v77 = v76;
      result = (uint64_t)objc_msgSend(v76, sel_service, v95);
      if (!result)
        goto LABEL_63;
      v54 = result;
      ++v52;

      sub_2225972E4();
      v67 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v121[0] + 16);
      sub_222597314();
      sub_222597320();
      sub_2225972F0();
      if (v66 == v52)
      {
        v103 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v121[0];
        v52 = v118;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_56:
    swift_bridgeObjectRetain();
    v92 = sub_2225973B0();
    result = swift_bridgeObjectRelease();
    if (!v92)
      goto LABEL_57;
  }
  v103 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE4AF8];
LABEL_54:
  v78 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v78(v108, v117, v29);
  v79 = (uint64_t)v109;
  v78(v109, v116, v29);
  v48((char *)v79, 0, 1, v29);
  v80 = (uint64_t)v110;
  v78(v110, v119, v29);
  v48((char *)v80, 0, 1, v29);
  sub_22191CB94((uint64_t)v99, v111);
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v113, v112, v115);
  v81 = (int *)v105;
  v82 = v106;
  sub_22259666C();
  v83 = (uint64_t)&v82[v81[7]];
  v48((char *)v83, 1, 1, v29);
  v84 = (uint64_t)&v82[v81[8]];
  v48((char *)v84, 1, 1, v29);
  v85 = (uint64_t)&v82[v81[9]];
  v48((char *)v85, 1, 1, v29);
  *(_QWORD *)v82 = 0xD000000000000012;
  *((_QWORD *)v82 + 1) = 0x8000000222620DF0;
  v96(&v82[v81[6]], v108, v29);
  sub_221917338(v83, &qword_25573BF38);
  sub_22191E324((uint64_t)v109, v83);
  sub_221917338(v84, &qword_25573BF38);
  sub_22191E324((uint64_t)v110, v84);
  sub_221917338(v85, &qword_25573BF38);
  sub_22191E324(v111, v85);
  v86 = v115;
  ((void (*)(char *, char *, uint64_t))v95)(&v82[v81[10]], v113, v115);
  v87 = v107;
  sub_2219175C8((uint64_t)v82, v107, (uint64_t (*)(_QWORD))_s23EventCommonDataInternalVMa);

  v88 = sub_2225963FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(a1, v88);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v86);
  v89 = *(void (**)(char *, uint64_t))(v118 + 8);
  v89(v116, v29);
  v89(v117, v29);
  v89(v119, v29);
  v90 = v104;
  sub_2219175C8(v87, v104, (uint64_t (*)(_QWORD))_s23EventCommonDataInternalVMa);
  *(_QWORD *)(v90 + *(int *)(v37 + 20)) = v98;
  *(_QWORD *)(v90 + *(int *)(v37 + 24)) = v103;
  sub_221917338((uint64_t)v99, (uint64_t *)&unk_25573C160);
  v91 = v101;
  sub_2219175C8(v90, v101, (uint64_t (*)(_QWORD))_s12HAPAccessoryO5EventVMa);
  return v38[7](v91, 0, 1, v37);
}

uint64_t sub_2219BC554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v15 = v3;
  v16 = *(_OWORD *)(a1 + 8);
  v17 = v4;
  LOBYTE(v18) = v5;
  v19 = MEMORY[0x24BEE4B00];
  v6 = v16;
  sub_22191DDFC(v3, v16);
  swift_bridgeObjectRetain();
  sub_2219880C0((uint64_t)&v15);
  v7 = v19;
  v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C028);
  v14[4] = &off_24E7682E0;
  v14[0] = v7;
  swift_bridgeObjectRetain();
  sub_2219EC30C((uint64_t)v14, 0x61446E6F6D6D6F63, 0xEA00000000006174);
  sub_22191DE10(v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = _s12HAPAccessoryO5EventVMa();
  v9 = sub_2219BB02C(*(_QWORD *)(v1 + *(int *)(v8 + 20)), (uint64_t *)a1);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740210);
  v17 = v10;
  v11 = sub_22198799C(qword_255740218, &qword_255740210, (uint64_t)&off_24E7682E0, (uint64_t)&unk_22268B1C0);
  v18 = v11;
  v15 = v9;
  sub_2219EC30C((uint64_t)&v15, 0xD000000000000017, 0x8000000222620DB0);
  v12 = sub_2219BAB14(*(uint64_t **)(v1 + *(int *)(v8 + 24)), (uint64_t *)a1);
  v17 = v10;
  v18 = v11;
  v15 = v12;
  return sub_2219EC30C((uint64_t)&v15, 0xD000000000000012, 0x8000000222620DD0);
}

uint64_t _s12HAPAccessoryO5EventVMa()
{
  uint64_t result;

  result = qword_255740278;
  if (!qword_255740278)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2219BC758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[12];
  int v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = (int *)type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2C0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = _s23EventCommonDataInternalVMa();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = swift_getKeyPath();
  sub_221916548(v2, (uint64_t)v12, (uint64_t (*)(_QWORD))_s23EventCommonDataInternalVMa);
  v14 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v30 = *(unsigned __int8 *)(a1 + 32);
  v17 = (uint64_t)&v9[*(int *)(v7 + 36)];
  sub_22191DDFC(v14, v13);
  swift_bridgeObjectRetain();
  sub_2225969B4();
  v18 = (_QWORD *)(v17 + v4[5]);
  *v18 = 0;
  v18[1] = 0;
  v19 = (_QWORD *)(v17 + v4[6]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)(v17 + v4[7]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (_QWORD *)(v17 + v4[8]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)(v17 + v4[9]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)(v17 + v4[10]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)(v17 + v4[11]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(v17 + v4[12]);
  *v25 = 0;
  v25[1] = 0;
  *(_QWORD *)v9 = v14;
  *((_QWORD *)v9 + 1) = v13;
  *((_QWORD *)v9 + 2) = v16;
  *((_QWORD *)v9 + 3) = v15;
  v9[32] = v30;
  sub_221988414((uint64_t)v9);
  sub_221916548(v17, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2557402F0);
  swift_setAtWritableKeyPath();
  sub_221917338((uint64_t)v9, &qword_25573C2C0);
  swift_release();
  sub_22194BB74((uint64_t)v12);
  swift_getKeyPath();
  v26 = _s12HAPAccessoryO5EventVMa();
  v27 = v32;
  v33 = sub_2219BB4F0(*(_QWORD *)(v32 + *(int *)(v26 + 20)), a1);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_getKeyPath();
  v33 = sub_2219BB200(*(_QWORD *)(v27 + *(int *)(v26 + 24)), a1);
  swift_setAtWritableKeyPath();
  return swift_release();
}

uint64_t sub_2219BCA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221916548(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData);
  v8 = a2 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHAPAccessoryEvent(0) + 28);
  sub_221917338(v8, &qword_25573C2D0);
  sub_2219175C8((uint64_t)v7, v8, (uint64_t (*)(_QWORD))type metadata accessor for HomeIntelligenceProtoPETSecureSubmitterEventCommonData);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

unint64_t sub_2219BCAE8()
{
  unint64_t result;

  result = qword_25573FEE0;
  if (!qword_25573FEE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25573FEE0);
  }
  return result;
}

ValueMetadata *_s12HAPAccessoryOMa()
{
  return &_s12HAPAccessoryON;
}

char *sub_2219BCB34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)_s23EventCommonDataInternalVMa();
    v9 = v8[5];
    v10 = &v4[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_222596678();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    swift_bridgeObjectRetain();
    v14(v10, v11, v12);
    v14(&v4[v8[6]], (char *)a2 + v8[6], v12);
    v15 = v8[7];
    v16 = &v4[v15];
    v17 = (char *)a2 + v15;
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v18((char *)a2 + v15, 1, v12))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v14(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    v21 = v8[8];
    v22 = &v4[v21];
    v23 = (char *)a2 + v21;
    if (v18((char *)a2 + v21, 1, v12))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v14(v22, v23, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    }
    v25 = v8[9];
    v26 = &v4[v25];
    v27 = (char *)a2 + v25;
    if (v18((char *)a2 + v25, 1, v12))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v14(v26, v27, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
    }
    v29 = v8[10];
    v30 = &v4[v29];
    v31 = (char *)a2 + v29;
    v32 = sub_22259660C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
    v33 = *(int *)(a3 + 24);
    *(_QWORD *)&v4[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)&v4[v33] = *(uint64_t *)((char *)a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2219BCD9C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v2 = (int *)_s23EventCommonDataInternalVMa();
  v3 = a1 + v2[5];
  v4 = sub_222596678();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(a1 + v2[6], v4);
  v7 = a1 + v2[7];
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v8(v7, 1, v4))
    v6(v7, v4);
  v9 = a1 + v2[8];
  if (!v8(v9, 1, v4))
    v6(v9, v4);
  v10 = a1 + v2[9];
  if (!v8(v10, 1, v4))
    v6(v10, v4);
  v11 = a1 + v2[10];
  v12 = sub_22259660C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_2219BCED4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = (int *)_s23EventCommonDataInternalVMa();
  v8 = v7[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_222596678();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v13(v9, v10, v11);
  v13(&a1[v7[6]], &a2[v7[6]], v11);
  v14 = v7[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v17(&a2[v14], 1, v11))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  v19 = v7[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  if (v17(&a2[v19], 1, v11))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v13(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = v7[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (v17(&a2[v23], 1, v11))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v13(v24, v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = v7[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_22259660C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_2219BD110(char *a1, char *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (int *)_s23EventCommonDataInternalVMa();
  v6 = v5[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_222596678();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v11(&a1[v5[6]], &a2[v5[6]], v9);
  v12 = v5[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v11(v13, v14, v9);
LABEL_7:
  v19 = v5[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = v15(&a1[v19], 1, v9);
  v23 = v15(v21, 1, v9);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v11(v20, v21, v9);
LABEL_13:
  v25 = v5[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = v15(&a1[v25], 1, v9);
  v29 = v15(v27, 1, v9);
  if (!v28)
  {
    if (!v29)
    {
      v11(v26, v27, v9);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v26, v27, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
LABEL_19:
  v31 = v5[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_22259660C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2219BD44C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = (int *)_s23EventCommonDataInternalVMa();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_222596678();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v12(&a1[v6[6]], &a2[v6[6]], v10);
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v16(&a2[v13], 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v18 = v6[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v16(&a2[v18], 1, v10))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v22 = v6[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v16(&a2[v22], 1, v10))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v12(v23, v24, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  v26 = v6[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_22259660C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = *(int *)(a3 + 24);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  return a1;
}

char *sub_2219BD674(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  v6 = (int *)_s23EventCommonDataInternalVMa();
  v7 = v6[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_222596678();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12(&a1[v6[6]], &a2[v6[6]], v10);
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(&a1[v13], 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v20 = v6[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v16(&a1[v20], 1, v10);
  v24 = v16(v22, 1, v10);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v21, v22, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  v12(v21, v22, v10);
LABEL_13:
  v26 = v6[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = v16(&a1[v26], 1, v10);
  v30 = v16(v28, 1, v10);
  if (!v29)
  {
    if (!v30)
    {
      v12(v27, v28, v10);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v27, v28, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
LABEL_19:
  v32 = v6[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_22259660C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2219BD990()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219BD99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = _s23EventCommonDataInternalVMa();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2219BDA18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219BDA24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s23EventCommonDataInternalVMa();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_2219BDA9C()
{
  uint64_t result;
  unint64_t v1;

  result = _s23EventCommonDataInternalVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2219BDB14()
{
  return sub_2219018CC(&qword_25573DC20, type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHAPAccessoryEvent, (uint64_t)&unk_22268ADE8);
}

uint64_t sub_2219BDB40(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_2219018CC(&qword_2557402E0, (uint64_t (*)(uint64_t))_s12HAPAccessoryO5EventVMa, (uint64_t)&unk_22268E31C);
  result = sub_2219018CC(&qword_2557402E8, (uint64_t (*)(uint64_t))_s12HAPAccessoryO5EventVMa, (uint64_t)&unk_22268E364);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2219BDB9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2219505A8(a1);
}

void sub_2219BDBC8(char a1)
{
  sub_2225978F0();
  __asm { BR              X10 }
}

uint64_t sub_2219BDC1C()
{
  sub_222596D38();
  swift_bridgeObjectRelease();
  return sub_222597938();
}

void sub_2219BDC98(uint64_t a1, char a2)
{
  sub_2225978F0();
  __asm { BR              X10 }
}

uint64_t sub_2219BDCE8()
{
  sub_222596D38();
  swift_bridgeObjectRelease();
  return sub_222597938();
}

uint64_t sub_2219BDD94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  sub_221917338(v0 + 168, &qword_255740468);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for PrimaryResidentMatterServer()
{
  return objc_opt_self();
}

uint64_t sub_2219BDDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[13] = a1;
  v3[14] = v2;
  v3[2] = a2;
  return swift_task_switch();
}

uint64_t sub_2219BDE14()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v16;

  if (qword_25573B380 != -1)
    swift_once();
  v1 = sub_222596B40();
  v0[15] = v1;
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
  swift_retain();
  v2 = sub_222596B28();
  v3 = sub_222597020();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[13];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = *(_QWORD *)(v5 + 112);
    v8 = *(_QWORD *)(v5 + 120);
    swift_bridgeObjectRetain();
    v0[8] = sub_221921364(v9, v8, &v16);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v2, v3, "[Activate:%s] Creating endpoint description", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v7, -1, -1);
    MEMORY[0x227676FE0](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  v10 = (_QWORD *)v0[13];
  v11 = v10[19];
  v12 = v10[20];
  __swift_project_boxed_opaque_existential_1(v10 + 16, v11);
  v15 = (uint64_t (*)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(**(int **)(v12 + 8)
                                                                                         + *(_QWORD *)(v12 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  v0[17] = v13;
  *v13 = v0;
  v13[1] = sub_2219BE038;
  return v15(v0 + 2, &_s7AdapterVN, &off_25573E798, v11, v12);
}

uint64_t sub_2219BE038(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219BE0A4()
{
  swift_retain();
  sub_22196F470(1uLL, 128);
  return swift_task_switch();
}

uint64_t sub_2219BE0F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)v0[13];
  v1[21] = v0[18];
  v1[22] = &off_25573E6F8;
  swift_unknownObjectRelease();
  v2 = v1[24];
  v0[20] = v2;
  v0[21] = v1[25];
  swift_retain();
  sub_2219C5D38(v2);
  return swift_task_switch();
}

uint64_t sub_2219BE170()
{
  uint64_t v0;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unsigned __int16 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];

  if (*(_QWORD *)(v0 + 160))
    return swift_task_switch();
  swift_retain();
  v2 = sub_222596B28();
  v3 = sub_222597020();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 104);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v24[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = *(_QWORD *)(v5 + 112);
    v9 = *(_QWORD *)(v5 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_221921364(v8, v9, v24);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v2, v3, "[Activate:%s] Ready! Service has no preparation handler set; starting!",
      v6,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v7, -1, -1);
    MEMORY[0x227676FE0](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  swift_retain();
  swift_retain();
  v10 = sub_222596B28();
  v11 = sub_222597020();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 104);
  if (v12)
  {
    v15 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23 = v22;
    *(_DWORD *)v15 = 136315394;
    v17 = *(_QWORD *)(v14 + 112);
    v16 = *(_QWORD *)(v14 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_221921364(v17, v16, &v23);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v18 = objc_msgSend(*(id *)(v13 + 16), sel_endpointID);
    v19 = (unsigned __int16)objc_msgSend(v18, sel_unsignedShortValue);

    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    sub_22259726C();
    swift_bridgeObjectRelease();
    strcpy((char *)v24, "Endpoint.ID(0x");
    HIBYTE(v24[1]) = -18;
    *(_WORD *)(v0 + 264) = v19;
    sub_22196F9E4();
    sub_222596D98();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    *(_QWORD *)(v0 + 72) = sub_221921364(v24[0], v24[1], &v23);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v10, v11, "[Activate:%s] Adding endpoint to the controller on %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v22, -1, -1);
    MEMORY[0x227676FE0](v15, -1, -1);

  }
  else
  {

    swift_release();
    swift_release();
  }
  v20 = *(_QWORD *)(v0 + 16);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v21;
  *v21 = v0;
  v21[1] = sub_2219BEF04;
  return sub_22196F340(*(_QWORD *)(v0 + 144), v20);
}

void sub_2219BE588()
{
  __asm { BR              X10 }
}

uint64_t sub_2219BE5D4()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2 = sub_2225976E0();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return swift_task_switch();
  v3 = v1[13];
  *(_BYTE *)(v0 + 184) = 1;
  v4 = *(int **)(v3 + 208);
  v1[30] = v4;
  if (!v4)
    return swift_task_switch();
  v1[31] = *(_QWORD *)(v1[13] + 216);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v1[32] = v5;
  *v5 = v1;
  v5[1] = sub_2219BF63C;
  return v7(1);
}

uint64_t sub_2219BE6DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 152);
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_222596B28();
  v5 = sub_222597038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17 = v16;
    *(_DWORD *)v8 = 136315394;
    v10 = *(_QWORD *)(v7 + 112);
    v11 = *(_QWORD *)(v7 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_221921364(v10, v11, &v17);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2112;
    v12 = v6;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v13;
    sub_222597134();
    *v9 = v13;

    _os_log_impl(&dword_2218F0000, v4, v5, "[Activate:%s] FAILED to create service description; error %@",
      (uint8_t *)v8,
      0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v16, -1, -1);
    MEMORY[0x227676FE0](v8, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 152);

    swift_release_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BE91C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);
  uint64_t v11;

  swift_retain();
  v1 = sub_222596B28();
  v2 = sub_222597050();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[13];
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v11 = v5;
    v7 = *(_QWORD *)(v3 + 112);
    v6 = *(_QWORD *)(v3 + 120);
    swift_bridgeObjectRetain();
    v0[12] = sub_221921364(v7, v6, &v11);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v1, v2, "[Activate:%s] preparing service", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v5, -1, -1);
    MEMORY[0x227676FE0](v4, -1, -1);

  }
  else
  {

    swift_release();
  }
  v10 = (uint64_t (*)(void))(v0[20] + *(int *)v0[20]);
  v8 = (_QWORD *)swift_task_alloc();
  v0[22] = v8;
  *v8 = v0;
  v8[1] = sub_2219BEABC;
  return v10();
}

uint64_t sub_2219BEABC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219BEB14()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  swift_retain();
  v1 = sub_222596B28();
  v2 = sub_222597050();
  if (os_log_type_enabled(v1, v2))
  {
    v22 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 104);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v25[0] = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = *(_QWORD *)(v3 + 112);
    v7 = *(_QWORD *)(v3 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_221921364(v6, v7, v25);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v1, v2, "[Activate:%s] --> ready! Service prepared.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v5, -1, -1);
    MEMORY[0x227676FE0](v4, -1, -1);
    v8 = v22;
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 160);
    swift_release();
    v8 = v9;
  }
  sub_2219A2938(v8);

  swift_retain();
  swift_retain();
  v10 = sub_222596B28();
  v11 = sub_222597020();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 104);
  if (v12)
  {
    v15 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v24 = v23;
    *(_DWORD *)v15 = 136315394;
    v17 = *(_QWORD *)(v14 + 112);
    v16 = *(_QWORD *)(v14 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_221921364(v17, v16, &v24);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v18 = objc_msgSend(*(id *)(v13 + 16), sel_endpointID);
    LOWORD(v16) = (unsigned __int16)objc_msgSend(v18, sel_unsignedShortValue);

    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    sub_22259726C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Endpoint.ID(0x");
    HIBYTE(v25[1]) = -18;
    *(_WORD *)(v0 + 264) = v16;
    sub_22196F9E4();
    sub_222596D98();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    *(_QWORD *)(v0 + 72) = sub_221921364(v25[0], v25[1], &v24);
    sub_222597134();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v10, v11, "[Activate:%s] Adding endpoint to the controller on %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v23, -1, -1);
    MEMORY[0x227676FE0](v15, -1, -1);

  }
  else
  {

    swift_release();
    swift_release();
  }
  v19 = *(_QWORD *)(v0 + 16);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v20;
  *v20 = v0;
  v20[1] = sub_2219BEF04;
  return sub_22196F340(*(_QWORD *)(v0 + 144), v19);
}

uint64_t sub_2219BEF04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

void sub_2219BEF78()
{
  __asm { BR              X10 }
}

uint64_t sub_2219BEFC8()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2 = sub_2225976E0();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return swift_task_switch();
  v3 = v1[13];
  *(_BYTE *)(v0 + 184) = 2;
  v4 = *(int **)(v3 + 208);
  v1[27] = v4;
  if (!v4)
    return swift_task_switch();
  v1[28] = *(_QWORD *)(v1[13] + 216);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v1[29] = v5;
  *v5 = v1;
  v5[1] = sub_2219BF5A8;
  return v7(2);
}

uint64_t sub_2219BF0C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 192);
  swift_release();
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_222596B28();
  v5 = sub_222597050();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v17 = v16;
    *(_DWORD *)v8 = 136315394;
    v11 = *(_QWORD *)(v7 + 112);
    v10 = *(_QWORD *)(v7 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_221921364(v11, v10, &v17);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2112;
    v12 = v6;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v13;
    sub_222597134();
    *v9 = v13;

    _os_log_impl(&dword_2218F0000, v4, v5, "[Activate:%s] FAILED to add server endpoint; error %@",
      (uint8_t *)v8,
      0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v16, -1, -1);
    MEMORY[0x227676FE0](v8, -1, -1);
    swift_release();

  }
  else
  {
    v14 = *(void **)(v0 + 192);
    swift_release();

    swift_release_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BF32C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 112) + 128), *(_QWORD *)(*(_QWORD *)(v0 + 112) + 152));
  return swift_task_switch();
}

uint64_t sub_2219BF370()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_25573B388 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 120), (uint64_t)qword_2557684C8);
  v1 = sub_222596B28();
  v2 = sub_222597050();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2218F0000, v1, v2, "[RETRIEVE]", v3, 2u);
    MEMORY[0x227676FE0](v3, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_2219BF458(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = v2[13];
  v3 = v2[14];
  sub_221933018(&qword_255740470, a2, (uint64_t (*)(uint64_t))type metadata accessor for PrimaryResidentMatterServer, (uint64_t)&unk_22268E5B8);
  v5 = (_QWORD *)swift_task_alloc();
  v2[25] = v5;
  v5[2] = MEMORY[0x24BEE4AF8];
  v5[3] = v3;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v2[26] = v6;
  *v6 = v2;
  v6[1] = sub_2219BF518;
  return sub_2225973F8();
}

uint64_t sub_2219BF518()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219BF578()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BF5A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219BF600()
{
  uint64_t v0;

  sub_2219A2938(*(_QWORD *)(v0 + 216));
  return swift_task_switch();
}

uint64_t sub_2219BF63C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219BF694()
{
  uint64_t v0;

  sub_2219A2938(*(_QWORD *)(v0 + 240));
  return swift_task_switch();
}

uint64_t sub_2219BF6D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2219BF6E8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + 120);
  v0[3] = v1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_2219C628C;
  v2[3] = v0[2];
  v2[4] = v1;
  return swift_task_switch();
}

uint64_t sub_2219BF760(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2219BF778()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[2] + 120);
  v0[3] = v1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_221930E78;
  v2[5] = v0[2];
  v2[6] = v1;
  return swift_task_switch();
}

uint64_t sub_2219BF7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return swift_task_switch();
}

uint64_t sub_2219BF80C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[10];
  sub_22191658C(v0[11], (uint64_t)(v0 + 2));
  swift_beginAccess();
  sub_2219C60A8((uint64_t)(v0 + 2), v1 + 168);
  swift_endAccess();
  v2 = *(_QWORD *)(v1 + 120);
  v0[12] = v2;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_2219BF8C8;
  v3[2] = v0[10];
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_2219BF8C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219BF918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2219BF934()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, void *, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = *(_QWORD *)(v0[2] + 120);
  v0[4] = v2;
  v3 = (void *)*__swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v6 = (uint64_t (*)(uint64_t, void *, uint64_t))((char *)&dword_255740578 + dword_255740578);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_2219BA1AC;
  return v6(v0[2], v3, v2);
}

void sub_2219BF9C8(char *a1)
{
  sub_22190B70C(*a1);
}

void sub_2219BF9D4()
{
  char *v0;

  sub_2219BDBC8(*v0);
}

void sub_2219BF9DC()
{
  __asm { BR              X10 }
}

uint64_t sub_2219BFA1C()
{
  sub_222596D38();
  return swift_bridgeObjectRelease();
}

void sub_2219BFA84(uint64_t a1)
{
  char *v1;

  sub_2219BDC98(a1, *v1);
}

uint64_t sub_2219BFA8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2219C5B70();
  *a1 = result;
  return result;
}

uint64_t sub_2219BFAB8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2219BFAEC + 4 * byte_22268E444[*v0]))();
}

void sub_2219BFAEC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000022261BA00;
}

void sub_2219BFB0C(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696E6E7572;
  a1[1] = 0xE700000000000000;
}

void sub_2219BFB28(_QWORD *a1@<X8>)
{
  *a1 = 0x6164696C61766E69;
  a1[1] = 0xEB00000000646574;
}

uint64_t sub_2219BFB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2219BFB64()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  const char *v5;
  uint64_t v7;

  if (*(unsigned __int8 *)(*(_QWORD *)(v0 + 32) + 112) - 1 < 2)
  {
    if (qword_25573B380 != -1)
      swift_once();
    v1 = sub_222596B40();
    __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
    v2 = sub_222596B28();
    v3 = sub_222597050();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_13;
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    v5 = "[Start] MatterServer is already started; ignoring duplicate call.";
    goto LABEL_12;
  }
  if (!*(_BYTE *)(*(_QWORD *)(v0 + 32) + 112))
    return swift_task_switch();
  if (qword_25573B380 != -1)
    swift_once();
  v7 = sub_222596B40();
  __swift_project_value_buffer(v7, (uint64_t)qword_2557684B0);
  v2 = sub_222596B28();
  v3 = sub_222597050();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    v5 = "[Start] MatterServer is invalidated so cannot start; ignoring.";
LABEL_12:
    _os_log_impl(&dword_2218F0000, v2, v3, v5, v4, 2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }
LABEL_13:

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BFD04()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 112);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_2219BFD48()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = v0[5];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (qword_25573B380 != -1)
    swift_once();
  v3 = sub_222596B40();
  __swift_project_value_buffer(v3, (uint64_t)qword_2557684B0);
  v4 = sub_222596B28();
  v5 = sub_222597050();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    v0[2] = v2;
    sub_222597134();
    _os_log_impl(&dword_2218F0000, v4, v5, "[Start] %ld services currently registered.", v6, 0xCu);
    MEMORY[0x227676FE0](v6, -1, -1);
  }

  *(_BYTE *)(v0[4] + 112) = 1;
  return swift_task_switch();
}

uint64_t sub_2219BFEB4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *__swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + 128), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 152));
  return swift_task_switch();
}

uint64_t sub_2219BFEFC()
{
  uint64_t v0;

  sub_2219C1B04();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219BFF30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2219BFF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_BYTE *)(v1 + 112) == 3)
  {
    if (qword_25573B380 != -1)
      swift_once();
    v2 = sub_222596B40();
    __swift_project_value_buffer(v2, (uint64_t)qword_2557684B0);
    swift_retain_n();
    v3 = sub_222596B28();
    v4 = sub_22259702C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v9 = v6;
      *(_DWORD *)v5 = 136315138;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0xE000000000000000;
      *(_BYTE *)(v0 + 64) = *(_BYTE *)(v1 + 112);
      sub_222597380();
      *(_QWORD *)(v0 + 32) = sub_221921364(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &v9);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v3, v4, "[Invalidate] skipped; nothing to invalidate (current state %s).",
        v5,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v6, -1, -1);
      MEMORY[0x227676FE0](v5, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 3;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v7;
    *v7 = v0;
    v7[1] = sub_2219C01AC;
    v7[3] = *(_QWORD *)(v0 + 40);
    return swift_task_switch();
  }
}

uint64_t sub_2219C01AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219C01F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C020C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_25573B380 != -1)
    swift_once();
  v1 = sub_222596B40();
  v0[4] = __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
  swift_retain();
  v2 = sub_222596B28();
  v3 = sub_222597050();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[3];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    v7 = *(_QWORD *)(v5 + 112);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_2225973B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v0[2] = v8;
    sub_222597134();
    swift_release();
    _os_log_impl(&dword_2218F0000, v2, v3, "[Invalidate] invalidating %ld services.", v6, 0xCu);
    MEMORY[0x227676FE0](v6, -1, -1);
  }
  else
  {
    swift_release();
  }

  v0[5] = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[3] + 128), *(_QWORD *)(v0[3] + 152));
  return swift_task_switch();
}

uint64_t sub_2219C03B0()
{
  sub_2219C9498();
  return swift_task_switch();
}

uint64_t sub_2219C03F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  sub_221933018(&qword_255740470, a2, (uint64_t (*)(uint64_t))type metadata accessor for PrimaryResidentMatterServer, (uint64_t)&unk_22268E5B8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_2219C048C;
  return sub_2225972D8();
}

uint64_t sub_2219C048C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C04E4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_222596B28();
  v2 = sub_222597050();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2218F0000, v1, v2, "[Invalidate] complete.", v3, 2u);
    MEMORY[0x227676FE0](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C0584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

void sub_2219C059C()
{
  __asm { BR              X10 }
}

uint64_t sub_2219C05D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_25573B380 != -1)
    swift_once();
  v1 = sub_222596B40();
  __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
  v2 = sub_222596B28();
  v3 = sub_22259702C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2218F0000, v2, v3, "[Controller] MatterServer is not started yet; controller should not be ready!",
      v4,
      2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C08A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C08C0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  if (qword_25573B380 != -1)
    swift_once();
  v1 = sub_222596B40();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
  swift_retain();
  v2 = sub_222596B28();
  v3 = sub_222597050();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 128);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    v7 = *(_QWORD *)(v5 + 112);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_2225973B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v0 + 120) = v8;
    sub_222597134();
    swift_release();
    _os_log_impl(&dword_2218F0000, v2, v3, "[Activate] activating %ld services.", v6, 0xCu);
    MEMORY[0x227676FE0](v6, -1, -1);
  }
  else
  {
    swift_release();
  }

  v9 = *(_QWORD *)(v0 + 128) + 168;
  swift_beginAccess();
  sub_2219032D0(v9, v0 + 56, &qword_255740468);
  if (*(_QWORD *)(v0 + 80))
  {
    v10 = *(_QWORD *)(v0 + 128);
    sub_221903314((__int128 *)(v0 + 56), v0 + 16);
    sub_221933018(&qword_255740470, v11, (uint64_t (*)(uint64_t))type metadata accessor for PrimaryResidentMatterServer, (uint64_t)&unk_22268E5B8);
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v12;
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v0 + 16;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v13;
    *v13 = v0;
    v13[1] = sub_2219C0BC4;
    return sub_2225972D8();
  }
  else
  {
    sub_221917338(v0 + 56, &qword_255740468);
    v15 = sub_222596B28();
    v16 = sub_222597038();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_2218F0000, v15, v16, "[Activate] .. failed to get a device controller!", v17, 2u);
      MEMORY[0x227676FE0](v17, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219C0BC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C0C24()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_222596B28();
  v2 = sub_222597050();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_2218F0000, v1, v2, "[Activate] complete.", v3, 2u);
    MEMORY[0x227676FE0](v3, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C0CCC()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for PrimaryResidentMatterServer.StateFSM()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PrimaryResidentMatterServer.StateFSM.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2219C0D5C + 4 * byte_22268E451[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2219C0D90 + 4 * byte_22268E44C[v4]))();
}

uint64_t sub_2219C0D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219C0D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219C0DA0);
  return result;
}

uint64_t sub_2219C0DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219C0DB4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2219C0DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219C0DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrimaryResidentMatterServer.StateFSM.State()
{
  return &type metadata for PrimaryResidentMatterServer.StateFSM.State;
}

unint64_t sub_2219C0DE0()
{
  unint64_t result;

  result = qword_255740448;
  if (!qword_255740448)
  {
    result = MEMORY[0x227676F2C](&unk_22268E538, &type metadata for PrimaryResidentMatterServer.StateFSM.State);
    atomic_store(result, &qword_255740448);
  }
  return result;
}

uint64_t sub_2219C0E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219C0E94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 112);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2225973B0();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v20 = v1 & 0xC000000000000001;
    v21 = v2;
    v22 = v1;
    while (1)
    {
      if (v20)
      {
        v6 = MEMORY[0x227674274](v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      v8 = *(_QWORD *)(v0 + 88);
      v7 = *(_QWORD *)(v0 + 96);
      v9 = sub_222596EF4();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v12 = v11 + 2;
      v11[3] = 0;
      v11[4] = v6;
      sub_2219032D0(v7, v8, &qword_25573FD20);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      swift_retain();
      v13 = *(_QWORD *)(v0 + 88);
      if ((_DWORD)v8 == 1)
      {
        sub_221917338(*(_QWORD *)(v0 + 88), &qword_25573FD20);
        if (!*v12)
          goto LABEL_13;
      }
      else
      {
        sub_222596EE8();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
        if (!*v12)
        {
LABEL_13:
          v14 = 0;
          v16 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_222596EA0();
      v16 = v15;
      swift_unknownObjectRelease();
LABEL_14:
      v17 = **(_QWORD **)(v0 + 72);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = &unk_2557404F8;
      *(_QWORD *)(v18 + 24) = v11;
      v19 = v16 | v14;
      if (v16 | v14)
      {
        v19 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v14;
        *(_QWORD *)(v0 + 40) = v16;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 96);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v19;
      *(_QWORD *)(v0 + 64) = v17;
      swift_task_create();
      swift_release();
      swift_release();
      sub_221917338(v5, &qword_25573FD20);
      v1 = v22;
      if (v21 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2219C1158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

void sub_2219C1170()
{
  __asm { BR              X10 }
}

uint64_t sub_2219C11B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2 = sub_2225976E0();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  v3 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v0 + 184) = 3;
  v4 = *(int **)(v3 + 208);
  *(_QWORD *)(v1 + 24) = v4;
  if (!v4)
    return (*(uint64_t (**)(void))(v1 + 8))();
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 216);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v5;
  *v5 = v1;
  v5[1] = sub_2219C12B8;
  return v7(3);
}

uint64_t sub_2219C12B8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C1310()
{
  uint64_t v0;

  sub_2219A2938(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C1340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219C13B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 112);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  result = sub_2225973B0();
  v2 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v22 = (__int128 *)(v0 + 16);
    v21 = v1 & 0xC000000000000001;
    v23 = v2;
    v24 = v1;
    do
    {
      v25 = v4;
      if (v21)
      {
        v6 = MEMORY[0x227674274](v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      v7 = *(_QWORD *)(v0 + 136);
      v8 = *(_QWORD *)(v0 + 144);
      v10 = *(_QWORD *)(v0 + 120);
      v9 = *(_QWORD *)(v0 + 128);
      v11 = sub_222596EF4();
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      sub_22191658C(v9, (uint64_t)v22);
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = 0;
      v13[3] = 0;
      sub_221903314(v22, (uint64_t)(v13 + 4));
      v13[9] = v10;
      v13[10] = v6;
      sub_2219032D0(v8, v7, &qword_25573FD20);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
      swift_retain();
      swift_retain();
      v14 = *(_QWORD *)(v0 + 136);
      if ((_DWORD)v7 == 1)
      {
        sub_221917338(*(_QWORD *)(v0 + 136), &qword_25573FD20);
      }
      else
      {
        sub_222596EE8();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
      }
      if (v13[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v15 = sub_222596EA0();
        v17 = v16;
        swift_unknownObjectRelease();
      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = **(_QWORD **)(v0 + 112);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = &unk_255740498;
      *(_QWORD *)(v19 + 24) = v13;
      v20 = v17 | v15;
      if (v17 | v15)
      {
        v20 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v15;
        *(_QWORD *)(v0 + 80) = v17;
      }
      v4 = v25 + 1;
      v5 = *(_QWORD *)(v0 + 144);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v20;
      *(_QWORD *)(v0 + 104) = v18;
      swift_task_create();
      swift_release();
      swift_release();
      sub_221917338(v5, &qword_25573FD20);
      v1 = v24;
    }
    while (v23 != v25 + 1);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219C16BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_2219C16D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = *__swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v4 = (char *)&dword_2557404A8 + dword_2557404A8;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_2219437FC;
  return ((uint64_t (*)(_QWORD, uint64_t))v4)(*(_QWORD *)(v0 + 32), v1);
}

uint64_t sub_2219C1750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219C17C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v21 = (__int128 *)(v0 + 16);
    v3 = v1 + 32;
    v4 = sub_222596EF4();
    v20 = *(_QWORD *)(v4 - 8);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v18 = v4;
    do
    {
      v22 = v2;
      v7 = *(_QWORD *)(v0 + 144);
      v6 = *(_QWORD *)(v0 + 152);
      v8 = *(_QWORD *)(v0 + 128);
      v9 = *(_QWORD *)(v0 + 136);
      v19(v6, 1, 1, v4);
      sub_22191658C(v3, (uint64_t)v21);
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = 0;
      v10[3] = 0;
      v10[4] = v8;
      sub_221903314(v21, (uint64_t)(v10 + 5));
      v10[10] = v9;
      sub_2219032D0(v6, v7, &qword_25573FD20);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v7, 1, v4);
      swift_retain();
      swift_retain();
      v11 = *(_QWORD *)(v0 + 144);
      if ((_DWORD)v7 == 1)
      {
        sub_221917338(*(_QWORD *)(v0 + 144), &qword_25573FD20);
      }
      else
      {
        sub_222596EE8();
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v4);
      }
      if (v10[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v12 = sub_222596EA0();
        v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        v12 = 0;
        v14 = 0;
      }
      v4 = v18;
      v15 = **(_QWORD **)(v0 + 112);
      v16 = v14 | v12;
      if (v14 | v12)
      {
        v16 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v12;
        *(_QWORD *)(v0 + 80) = v14;
      }
      v5 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v16;
      *(_QWORD *)(v0 + 104) = v15;
      swift_task_create();
      swift_release();
      sub_221917338(v5, &qword_25573FD20);
      v3 += 40;
      v2 = v22 - 1;
    }
    while (v22 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C1A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v6;
  void *v9;
  _QWORD *v10;
  uint64_t (*v12)(void *, uint64_t, uint64_t);

  v9 = (void *)*__swift_project_boxed_opaque_existential_1(a5, a5[3]);
  v12 = (uint64_t (*)(void *, uint64_t, uint64_t))((char *)&dword_2557404D0 + dword_2557404D0);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_2219C1AB8;
  return v12(v9, a6, a4);
}

uint64_t sub_2219C1AB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2219C1B04()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  if (qword_25573B388 != -1)
    swift_once();
  v1 = sub_222596B40();
  __swift_project_value_buffer(v1, (uint64_t)qword_2557684C8);
  v2 = sub_222596B28();
  v3 = sub_222597050();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2218F0000, v2, v3, "[START]", v4, 2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }

  v0[16] = &off_24E76B910;
  swift_unknownObjectWeakAssign();
  v5 = (void *)v0[17];
  v6 = swift_allocObject();
  swift_weakInit();
  v24 = sub_2219C5FBC;
  v25 = v6;
  v7 = MEMORY[0x24BDAC760];
  v20 = MEMORY[0x24BDAC760];
  v21 = 1107296256;
  v22 = sub_2219C2798;
  v23 = &block_descriptor_11;
  v8 = _Block_copy(&v20);
  swift_release();
  v9 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, CFSTR("HMDAccessoryConnectedNotification"), 0, 0, v8);
  _Block_release(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740508);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_222688C60;
  *(_QWORD *)(v10 + 56) = swift_getObjectType();
  *(_QWORD *)(v10 + 32) = v9;
  v0[18] = v10;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (void *)MEMORY[0x227677094](v0 + 14);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_accessoryBrowser);

    if (!v13)
    {
      __break(1u);
      return;
    }
    v14 = objc_msgSend(v13, sel_chipAccessoryServerBrowser);
    swift_unknownObjectRelease();
    if (v14)
    {
      v15 = swift_allocObject();
      swift_weakInit();
      v24 = sub_2219C5FDC;
      v25 = v15;
      v20 = v7;
      v21 = 1107296256;
      v22 = sub_2219238E0;
      v23 = &block_descriptor_46;
      v16 = _Block_copy(&v20);
      swift_release();
      objc_msgSend(v14, sel_waitForDeviceControllerWithCompletion_, v16);
      _Block_release(v16);

LABEL_11:
      swift_unknownObjectRelease();
      return;
    }
  }
  v17 = sub_222596B28();
  v18 = sub_222597038();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_2218F0000, v17, v18, "Unable to get the Matter server browser! Matter Services will not work.", v19, 2u);
    MEMORY[0x227676FE0](v19, -1, -1);

    goto LABEL_11;
  }
  swift_unknownObjectRelease();

}

void sub_2219C1E78(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, void *, _QWORD *);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  id v24;
  id v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  const char *v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72[4];

  v4 = sub_222596678();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)sub_2225963FC();
  v10 = *(v9 - 1);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25573B388 != -1)
    swift_once();
  v13 = sub_222596B40();
  __swift_project_value_buffer(v13, (uint64_t)qword_2557684C8);
  v14 = *(void (**)(char *, void *, _QWORD *))(v10 + 16);
  v69 = a1;
  v14(v12, a1, v9);
  v15 = sub_222596B28();
  v16 = sub_222597050();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v65 = v8;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v64 = a2;
    v20 = v19;
    v72[0] = v19;
    v63 = v9;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_2225963CC();
    v71 = (id)sub_221921364(v21, v22, v72);
    v9 = v63;
    sub_222597134();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_2218F0000, v15, v16, "Got notification: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v20, -1, -1);
    v23 = v18;
    v8 = v65;
    MEMORY[0x227676FE0](v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, _QWORD *))(v10 + 8))(v12, v9);
  }

  sub_2225963E4();
  if (!v72[3])
  {
    sub_221917338((uint64_t)v72, &qword_2557410E0);
    goto LABEL_12;
  }
  sub_2219BCAE8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v30 = sub_222596B28();
    v31 = sub_22259702C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v71 = v9;
      v72[0] = v33;
      *(_DWORD *)v32 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255740538);
      v34 = sub_222596D20();
      v71 = (id)sub_221921364(v34, v35, v72);
      sub_222597134();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v30, v31, "Ignoring notification (not HMDHAPAccessory) - is class %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v33, -1, -1);
      MEMORY[0x227676FE0](v32, -1, -1);
    }

    return;
  }
  v24 = v71;
  v25 = objc_msgSend(v71, sel_matterNodeID);

  if (v25)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v27 = Strong;
      v28 = sub_222596EF4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = 0;
      v29[3] = 0;
      v29[4] = v27;
      v29[5] = v24;
      sub_22191760C((uint64_t)v8, (uint64_t)&unk_255740548, (uint64_t)v29);
      swift_release();
      return;
    }
    v36 = v24;
    v37 = sub_222596B28();
    v38 = sub_22259702C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v69 = (void *)swift_slowAlloc();
      v71 = v69;
      *(_DWORD *)v39 = 136315394;
      v51 = objc_msgSend(v36, sel_name);
      v52 = sub_222596CF0();
      v54 = v53;

      v70 = sub_221921364(v52, v54, (uint64_t *)&v71);
      sub_222597134();
      swift_bridgeObjectRelease();

      *(_WORD *)(v39 + 12) = 2080;
      v55 = objc_msgSend(v36, sel_uuid);
      v56 = v66;
      sub_222596648();

      sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v57 = v68;
      v58 = sub_222597530();
      v60 = v59;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v56, v57);
      v70 = sub_221921364(v58, v60, (uint64_t *)&v71);
      sub_222597134();
      swift_bridgeObjectRelease();

      v50 = "Ignoring notification (nil delegate) - for %s/%s";
      goto LABEL_19;
    }
  }
  else
  {
    v36 = v24;
    v37 = sub_222596B28();
    v38 = sub_22259702C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v69 = (void *)swift_slowAlloc();
      v72[0] = (uint64_t)v69;
      *(_DWORD *)v39 = 136315394;
      v40 = objc_msgSend(v36, sel_name);
      v41 = sub_222596CF0();
      v43 = v42;

      v71 = (id)sub_221921364(v41, v43, v72);
      sub_222597134();
      swift_bridgeObjectRelease();

      *(_WORD *)(v39 + 12) = 2080;
      v44 = objc_msgSend(v36, sel_uuid);
      v45 = v66;
      sub_222596648();

      sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v46 = v68;
      v47 = sub_222597530();
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v46);
      v71 = (id)sub_221921364(v47, v49, v72);
      sub_222597134();
      swift_bridgeObjectRelease();

      v50 = "Ignoring notification (no matterNodeID) - for %s/%s";
LABEL_19:
      _os_log_impl(&dword_2218F0000, v37, v38, v50, (uint8_t *)v39, 0x16u);
      v61 = v69;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v61, -1, -1);
      MEMORY[0x227676FE0](v39, -1, -1);

      return;
    }
  }

}

uint64_t sub_2219C26C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_2219C26E0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(void *, uint64_t);

  v4 = (uint64_t (*)(void *, uint64_t))&aL_2[*(int *)aL_2];
  v1 = *(id *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2219C274C;
  return v4(*(void **)(v0 + 24), *(_QWORD *)(v0 + 16));
}

uint64_t sub_2219C274C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 24);
  v3 = *v0;
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2219C2798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_2225963FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_2225963D8();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2219C283C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  v7 = a1;
  swift_release();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v7;
  sub_22191760C((uint64_t)v4, (uint64_t)&unk_255740518, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_2219C2960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  return swift_task_switch();
}

uint64_t sub_2219C2978()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t (*v10)(void *, uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v10 = (uint64_t (*)(void *, uint64_t))((char *)&dword_255740520 + dword_255740520);
    v3 = *(id *)(v0 + 48);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_2219C2AE4;
    return v10(*(void **)(v0 + 48), v2);
  }
  else
  {
    if (qword_25573B388 != -1)
      swift_once();
    v6 = sub_222596B40();
    __swift_project_value_buffer(v6, (uint64_t)qword_2557684C8);
    v7 = sub_222596B28();
    v8 = sub_22259702C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_2218F0000, v7, v8, "Ignoring update for Matter Controller (nil delegate)", v9, 2u);
      MEMORY[0x227676FE0](v9, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219C2AE4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_2219C2B40()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C2B70(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2219C6290;
  return v6(a1);
}

id sub_2219C2BD4(uint64_t a1, uint64_t a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  objc_super v8;
  _QWORD v9[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v9[3] = _s27PrimaryResidentDataProviderCMa();
  v9[4] = &off_24E76C010;
  v9[0] = a1;
  swift_defaultActor_initialize();
  *(_QWORD *)(a2 + 112) = MEMORY[0x24BEE4AF8];
  type metadata accessor for PrimaryResidentMatterServer.StateFSM();
  v5 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(_BYTE *)(v5 + 112) = 0;
  sub_222596744();
  *(_QWORD *)(v5 + 120) = sub_222596738();
  *(_QWORD *)(a2 + 120) = v5;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_QWORD *)(a2 + 200) = 0;
  sub_22191658C((uint64_t)v9, a2 + 128);
  swift_release();
  v8.receiver = (id)a2;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_2219C2CC4(void *a1, uint64_t a2)
{
  _QWORD *v2;
  id v3;

  v2[7] = a2;
  v2[5] = &_s7AdapterVN;
  v2[6] = &off_25573E798;
  v2[2] = a1;
  v3 = a1;
  return swift_task_switch();
}

uint64_t sub_2219C2D1C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_25573B380 != -1)
    swift_once();
  v1 = sub_222596B40();
  __swift_project_value_buffer(v1, (uint64_t)qword_2557684B0);
  v2 = sub_222596B28();
  v3 = sub_222597050();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2218F0000, v2, v3, "[Controller] Got Matter Device Controller.", v4, 2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }
  v5 = v0[7];

  v0[8] = *(_QWORD *)(v5 + 120);
  v6 = swift_task_alloc();
  v0[9] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v0 + 2;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219C2E2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[9];
  v2 = swift_task_alloc();
  v0[10] = v2;
  *(_QWORD *)(v2 + 16) = &unk_255740530;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = swift_task_alloc();
  v0[11] = v3;
  *(_QWORD *)(v3 + 16) = &unk_2557406D0;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = sub_2219C2EE4;
  return v6();
}

uint64_t sub_2219C2EE4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C2F58()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C2F9C(void *a1, uint64_t a2)
{
  _QWORD *v2;
  id v3;

  v2[13] = a2;
  v2[5] = &_s16AccessoryAdapterVN;
  v2[6] = &off_24E7675F8;
  v2[2] = a1;
  v3 = a1;
  return swift_task_switch();
}

uint64_t sub_2219C2FF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0 + 2;
  if (qword_25573B380 != -1)
    swift_once();
  v2 = sub_222596B40();
  __swift_project_value_buffer(v2, (uint64_t)qword_2557684B0);
  sub_22191658C((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  v3 = sub_222596B28();
  v4 = sub_222597050();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]), sel_name);
    v8 = sub_222596CF0();
    v10 = v9;

    v0[12] = sub_221921364(v8, v10, &v15);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    _os_log_impl(&dword_2218F0000, v3, v4, "[Connect] device %s did connect!", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v6, -1, -1);
    v11 = v5;
    v1 = v0 + 2;
    MEMORY[0x227676FE0](v11, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  }

  v12 = v0[13];
  v0[14] = *(_QWORD *)(v12 + 120);
  v13 = swift_task_alloc();
  v0[15] = v13;
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219C3208()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[15];
  v2 = swift_task_alloc();
  v0[16] = v2;
  *(_QWORD *)(v2 + 16) = &unk_255740560;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = swift_task_alloc();
  v0[17] = v3;
  *(_QWORD *)(v3 + 16) = &unk_255740568;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_2219C32C0;
  return v6();
}

uint64_t sub_2219C32C0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C3334()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C3378(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;

  v3[102] = a3;
  v3[101] = a2;
  v5 = sub_222596678();
  v3[103] = v5;
  v3[104] = *(_QWORD *)(v5 - 8);
  v3[105] = swift_task_alloc();
  v3[5] = &_s16AccessoryAdapterVN;
  v3[6] = &off_24E7675F8;
  v3[2] = a1;
  v6 = a1;
  return swift_task_switch();
}

uint64_t sub_2219C3400()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 808);
  v2 = v1[19];
  v3 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v2);
  v6 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v4;
  *v4 = v0;
  v4[1] = sub_2219C3490;
  return v6(v0 + 16, *(_QWORD *)(v0 + 808), v2, v3);
}

uint64_t sub_2219C3490(int a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_DWORD *)(v3 + 888) = a1;
  *(_QWORD *)(v3 + 856) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C3500()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  NSObject *log;
  uint64_t v83;
  uint64_t v84;
  os_log_t v85;
  os_log_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_type_t v90;
  os_log_type_t v91[8];
  os_log_type_t v92[8];
  os_log_type_t type;
  uint64_t typea;
  os_log_type_t typeb;
  os_log_type_t typec[8];
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[2];

  v1 = v0 + 16;
  if ((*(_BYTE *)(v0 + 890) & 1) != 0)
  {
    if (qword_25573B380 != -1)
      swift_once();
    v18 = sub_222596B40();
    __swift_project_value_buffer(v18, (uint64_t)qword_2557684B0);
    sub_22191658C(v0 + 16, v0 + 176);
    sub_22191658C(v0 + 16, v0 + 136);
    swift_retain();
    v19 = sub_222596B28();
    v20 = sub_222597020();
    if (os_log_type_enabled(v19, v20))
    {
      v87 = *(_QWORD *)(v0 + 832);
      v84 = *(_QWORD *)(v0 + 840);
      v85 = *(os_log_t *)(v0 + 824);
      v21 = *(_QWORD *)(v0 + 808);
      v22 = swift_slowAlloc();
      typea = swift_slowAlloc();
      v104[0] = typea;
      *(_DWORD *)v22 = 136315650;
      v90 = v20;
      v24 = *(_QWORD *)(v21 + 112);
      v23 = *(_QWORD *)(v21 + 120);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 800) = sub_221921364(v24, v23, v104);
      sub_222597134();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v22 + 12) = 2080;
      v25 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200)), sel_name);
      v26 = sub_222596CF0();
      v28 = v27;

      *(_QWORD *)(v0 + 768) = sub_221921364(v26, v28, v104);
      sub_222597134();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      *(_WORD *)(v22 + 22) = 2080;
      v29 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160)), sel_uuid);
      sub_222596648();

      sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v30 = sub_222597530();
      v32 = v31;
      (*(void (**)(uint64_t, os_log_t))(v87 + 8))(v84, v85);
      *(_QWORD *)(v0 + 728) = sub_221921364(v30, v32, v104);
      sub_222597134();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
      _os_log_impl(&dword_2218F0000, v19, v90, "[%s:%s/%s][Bind] Device does not support service.", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](typea, -1, -1);
      v33 = v22;
      v1 = v0 + 16;
      MEMORY[0x227676FE0](v33, -1, -1);
    }
    else
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
    }

  }
  else
  {
    v2 = (__int128 *)(v0 + 456);
    if (qword_25573B380 != -1)
      swift_once();
    v3 = sub_222596B40();
    *(_QWORD *)(v0 + 864) = __swift_project_value_buffer(v3, (uint64_t)qword_2557684B0);
    sub_22191658C(v0 + 16, v0 + 296);
    sub_22191658C(v0 + 16, v0 + 336);
    swift_retain();
    v4 = sub_222596B28();
    type = sub_222597020();
    if (os_log_type_enabled(v4, type))
    {
      v81 = *(_DWORD *)(v0 + 888);
      v78 = *(_QWORD *)(v0 + 840);
      v79 = *(_QWORD *)(v0 + 824);
      v80 = *(_QWORD *)(v0 + 832);
      v5 = *(_QWORD *)(v0 + 808);
      v6 = swift_slowAlloc();
      v83 = swift_slowAlloc();
      v103 = v83;
      *(_DWORD *)v6 = 136315906;
      log = v4;
      v8 = *(_QWORD *)(v5 + 112);
      v7 = *(_QWORD *)(v5 + 120);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 744) = sub_221921364(v8, v7, &v103);
      sub_222597134();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v6 + 12) = 2080;
      v9 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 320)), sel_name);
      v10 = sub_222596CF0();
      v12 = v11;

      *(_QWORD *)(v0 + 752) = sub_221921364(v10, v12, &v103);
      sub_222597134();
      v1 = v0 + 16;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 296);
      *(_WORD *)(v6 + 22) = 2080;
      v13 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360)), sel_uuid);
      sub_222596648();

      sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v14 = sub_222597530();
      v16 = v15;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      *(_QWORD *)(v0 + 760) = sub_221921364(v14, v16, &v103);
      sub_222597134();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 336);
      *(_WORD *)(v6 + 32) = 2080;
      v104[0] = 0;
      v104[1] = 0xE000000000000000;
      sub_22259726C();
      swift_bridgeObjectRelease();
      strcpy((char *)v104, "Endpoint.ID(0x");
      HIBYTE(v104[1]) = -18;
      *(_WORD *)(v0 + 892) = v81;
      sub_22196F9E4();
      sub_222596D98();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      *(_QWORD *)(v0 + 776) = sub_221921364(v104[0], v104[1], &v103);
      sub_222597134();
      swift_bridgeObjectRelease();
      v4 = log;
      _os_log_impl(&dword_2218F0000, log, type, "[%s:%s/%s][Bind] Device supports service on %s.", (uint8_t *)v6, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v83, -1, -1);
      v17 = v6;
      v2 = (__int128 *)(v0 + 456);
      MEMORY[0x227676FE0](v17, -1, -1);
    }
    else
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v0 + 296);
      __swift_destroy_boxed_opaque_existential_1(v0 + 336);
    }

    v34 = *(_QWORD *)(v0 + 816) + 168;
    swift_beginAccess();
    sub_2219032D0(v34, (uint64_t)v2, &qword_255740468);
    if (*(_QWORD *)(v0 + 480))
    {
      sub_221903314(v2, v0 + 376);
      v35 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 400)), sel_controllerNodeID);
      if (v35)
      {
        v36 = v35;
        v37 = *(unsigned int *)(v0 + 888);
        v38 = *(_QWORD **)(v0 + 808);
        v39 = v38 + 16;
        v40 = objc_msgSend(v35, sel_unsignedLongLongValue);

        v41 = sub_2219748B0((unint64_t)v40);
        v43 = v42;
        v44 = v1;
        v45 = v38[19];
        v46 = v38[20];
        __swift_project_boxed_opaque_existential_1(v39, v45);
        v100 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v46 + 24) + *(_QWORD *)(v46 + 24));
        v47 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 872) = v47;
        *v47 = v0;
        v47[1] = sub_2219C47BC;
        return v100(v44, *(_QWORD *)(v0 + 808), v37, v41, v43, v45, v46);
      }
      sub_22191658C(v1, v0 + 416);
      sub_22191658C(v1, v0 + 576);
      swift_retain();
      v64 = sub_222596B28();
      v65 = sub_222597038();
      if (os_log_type_enabled(v64, v65))
      {
        *(_QWORD *)typec = *(_QWORD *)(v0 + 832);
        v89 = *(_QWORD *)(v0 + 840);
        *(_QWORD *)v92 = *(_QWORD *)(v0 + 824);
        v66 = *(_QWORD *)(v0 + 808);
        v67 = swift_slowAlloc();
        v99 = swift_slowAlloc();
        v104[0] = v99;
        *(_DWORD *)v67 = 136315650;
        v97 = v65;
        v102 = v1;
        v68 = *(_QWORD *)(v66 + 112);
        v69 = *(_QWORD *)(v66 + 120);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 664) = sub_221921364(v68, v69, v104);
        sub_222597134();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v67 + 12) = 2080;
        v70 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 440)), sel_name);
        v71 = sub_222596CF0();
        v73 = v72;

        *(_QWORD *)(v0 + 672) = sub_221921364(v71, v73, v104);
        sub_222597134();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v0 + 416);
        *(_WORD *)(v67 + 22) = 2080;
        v74 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 576), *(_QWORD *)(v0 + 600)), sel_uuid);
        sub_222596648();

        sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v75 = sub_222597530();
        v77 = v76;
        (*(void (**)(uint64_t, os_log_type_t *))(*(_QWORD *)typec + 8))(v89, *(os_log_type_t **)v92);
        *(_QWORD *)(v0 + 680) = sub_221921364(v75, v77, v104);
        sub_222597134();
        v1 = v102;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v0 + 576);
        _os_log_impl(&dword_2218F0000, v64, v97, "[%s:%s/%s][Bind] Device does not have a controller node ID; unable to bind.",
          (uint8_t *)v67,
          0x20u);
        swift_arrayDestroy();
        MEMORY[0x227676FE0](v99, -1, -1);
        MEMORY[0x227676FE0](v67, -1, -1);
      }
      else
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v0 + 416);
        __swift_destroy_boxed_opaque_existential_1(v0 + 576);
      }

      __swift_destroy_boxed_opaque_existential_1(v0 + 376);
    }
    else
    {
      sub_221917338((uint64_t)v2, &qword_255740468);
      sub_22191658C(v1, v0 + 496);
      sub_22191658C(v1, v0 + 536);
      swift_retain();
      v49 = sub_222596B28();
      v50 = sub_222597038();
      if (os_log_type_enabled(v49, v50))
      {
        v86 = *(os_log_t *)(v0 + 840);
        v88 = *(_QWORD *)(v0 + 824);
        *(_QWORD *)v91 = *(_QWORD *)(v0 + 832);
        v51 = *(_QWORD *)(v0 + 808);
        v101 = v1;
        v52 = swift_slowAlloc();
        v98 = swift_slowAlloc();
        v104[0] = v98;
        *(_DWORD *)v52 = 136315650;
        typeb = v50;
        v53 = *(_QWORD *)(v51 + 112);
        v54 = *(_QWORD *)(v51 + 120);
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 656) = sub_221921364(v53, v54, v104);
        sub_222597134();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v52 + 12) = 2080;
        v55 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 520)), sel_name);
        v56 = sub_222596CF0();
        v58 = v57;

        *(_QWORD *)(v0 + 648) = sub_221921364(v56, v58, v104);
        sub_222597134();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v0 + 496);
        *(_WORD *)(v52 + 22) = 2080;
        v59 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 560)), sel_uuid);
        sub_222596648();

        sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v60 = sub_222597530();
        v62 = v61;
        (*(void (**)(os_log_t, uint64_t))(*(_QWORD *)v91 + 8))(v86, v88);
        *(_QWORD *)(v0 + 640) = sub_221921364(v60, v62, v104);
        sub_222597134();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v0 + 536);
        _os_log_impl(&dword_2218F0000, v49, typeb, "[%s:%s/%s][Bind] .. failed to get a device controller!", (uint8_t *)v52, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x227676FE0](v98, -1, -1);
        v63 = v52;
        v1 = v101;
        MEMORY[0x227676FE0](v63, -1, -1);
      }
      else
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v0 + 496);
        __swift_destroy_boxed_opaque_existential_1(v0 + 536);
      }

    }
  }
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C436C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *log;
  os_log_type_t type;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0 + 16;
  v2 = *(void **)(v0 + 856);
  if (qword_25573B380 != -1)
    swift_once();
  v3 = sub_222596B40();
  __swift_project_value_buffer(v3, (uint64_t)qword_2557684B0);
  sub_22191658C(v0 + 16, v0 + 56);
  sub_22191658C(v0 + 16, v0 + 96);
  swift_retain();
  v4 = v2;
  swift_retain();
  v5 = v2;
  v6 = sub_222596B28();
  v7 = sub_222597020();
  if (os_log_type_enabled(v6, v7))
  {
    v23 = *(_QWORD *)(v0 + 840);
    v25 = *(_QWORD *)(v0 + 832);
    v24 = *(_QWORD *)(v0 + 824);
    v8 = *(_QWORD *)(v0 + 808);
    v9 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v9 = 136315906;
    log = v6;
    type = v7;
    v11 = *(_QWORD *)(v8 + 112);
    v10 = *(_QWORD *)(v8 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 792) = sub_221921364(v11, v10, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80)), sel_name);
    v13 = sub_222596CF0();
    v15 = v14;

    *(_QWORD *)(v0 + 784) = sub_221921364(v13, v15, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    *(_WORD *)(v9 + 22) = 2080;
    v16 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120)), sel_uuid);
    sub_222596648();

    sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_222597530();
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    *(_QWORD *)(v0 + 696) = sub_221921364(v17, v19, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    *(_WORD *)(v9 + 32) = 2112;
    v20 = v2;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 688) = v21;
    sub_222597134();
    *v28 = v21;
    v1 = v0 + 16;

    _os_log_impl(&dword_2218F0000, log, type, "[%s:%s/%s][Bind] FAILED Device not bound to service; returned error %@.",
      (uint8_t *)v9,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v29, -1, -1);
    MEMORY[0x227676FE0](v9, -1, -1);

  }
  else
  {

    swift_release_n();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  }
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C47BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 880) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C4820()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  NSObject *log;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v1 = v0 + 16;
  sub_22191658C(v0 + 16, v0 + 256);
  sub_22191658C(v0 + 16, v0 + 216);
  swift_retain();
  v2 = sub_222596B28();
  v3 = sub_222597050();
  if (os_log_type_enabled(v2, v3))
  {
    v20 = *(_DWORD *)(v0 + 888);
    v17 = *(_QWORD *)(v0 + 840);
    v18 = *(_QWORD *)(v0 + 824);
    v19 = *(_QWORD *)(v0 + 832);
    v4 = *(_QWORD *)(v0 + 808);
    v5 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315906;
    type = v3;
    v24 = v23;
    log = v2;
    v6 = *(_QWORD *)(v4 + 112);
    v7 = *(_QWORD *)(v4 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 704) = sub_221921364(v6, v7, &v24);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 280)), sel_name);
    v9 = sub_222596CF0();
    v11 = v10;

    *(_QWORD *)(v0 + 712) = sub_221921364(v9, v11, &v24);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 256);
    *(_WORD *)(v5 + 22) = 2080;
    v12 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 240)), sel_uuid);
    sub_222596648();

    sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v13 = sub_222597530();
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    *(_QWORD *)(v0 + 720) = sub_221921364(v13, v15, &v24);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 216);
    *(_WORD *)(v5 + 32) = 2080;
    v25[0] = 0;
    v25[1] = 0xE000000000000000;
    sub_22259726C();
    swift_bridgeObjectRelease();
    strcpy((char *)v25, "Endpoint.ID(0x");
    HIBYTE(v25[1]) = -18;
    *(_WORD *)(v0 + 894) = v20;
    sub_22196F9E4();
    sub_222596D98();
    sub_222596D50();
    v1 = v0 + 16;
    swift_bridgeObjectRelease();
    sub_222596D50();
    *(_QWORD *)(v0 + 736) = sub_221921364(v25[0], v25[1], &v24);
    sub_222597134();
    swift_bridgeObjectRelease();
    v2 = log;
    _os_log_impl(&dword_2218F0000, log, type, "[%s:%s/%s][Bind] Device bound to service on %s.", (uint8_t *)v5, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v23, -1, -1);
    MEMORY[0x227676FE0](v5, -1, -1);
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 256);
    __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  }

  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C4C20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *log;
  os_log_type_t type;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0 + 16;
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  v2 = *(void **)(v0 + 880);
  if (qword_25573B380 != -1)
    swift_once();
  v3 = sub_222596B40();
  __swift_project_value_buffer(v3, (uint64_t)qword_2557684B0);
  sub_22191658C(v0 + 16, v0 + 56);
  sub_22191658C(v0 + 16, v0 + 96);
  swift_retain();
  v4 = v2;
  swift_retain();
  v5 = v2;
  v6 = sub_222596B28();
  v7 = sub_222597020();
  if (os_log_type_enabled(v6, v7))
  {
    v23 = *(_QWORD *)(v0 + 840);
    v25 = *(_QWORD *)(v0 + 832);
    v24 = *(_QWORD *)(v0 + 824);
    v8 = *(_QWORD *)(v0 + 808);
    v9 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v9 = 136315906;
    log = v6;
    type = v7;
    v11 = *(_QWORD *)(v8 + 112);
    v10 = *(_QWORD *)(v8 + 120);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 792) = sub_221921364(v11, v10, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v12 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80)), sel_name);
    v13 = sub_222596CF0();
    v15 = v14;

    *(_QWORD *)(v0 + 784) = sub_221921364(v13, v15, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    *(_WORD *)(v9 + 22) = 2080;
    v16 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120)), sel_uuid);
    sub_222596648();

    sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_222597530();
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    *(_QWORD *)(v0 + 696) = sub_221921364(v17, v19, &v30);
    sub_222597134();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    *(_WORD *)(v9 + 32) = 2112;
    v20 = v2;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 688) = v21;
    sub_222597134();
    *v28 = v21;
    v1 = v0 + 16;

    _os_log_impl(&dword_2218F0000, log, type, "[%s:%s/%s][Bind] FAILED Device not bound to service; returned error %@.",
      (uint8_t *)v9,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v29, -1, -1);
    MEMORY[0x227676FE0](v9, -1, -1);

  }
  else
  {

    swift_release_n();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  }
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C5078(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  id v5;

  v2[20] = a2;
  v4 = sub_222596678();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[5] = &_s16AccessoryAdapterVN;
  v2[6] = &off_24E7675F8;
  v2[2] = a1;
  v5 = a1;
  return swift_task_switch();
}

uint64_t sub_2219C50FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  NSObject *log;
  _QWORD *v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  uint64_t v33;

  v2 = (_QWORD *)(v0 + 16);
  v3 = (uint64_t *)(v0 + 56);
  if (qword_25573B380 != -1)
    swift_once();
  v4 = sub_222596B40();
  __swift_project_value_buffer(v4, (uint64_t)qword_2557684B0);
  sub_22191658C(v0 + 16, v0 + 56);
  sub_22191658C(v0 + 16, v0 + 96);
  swift_retain_n();
  v5 = sub_222596B28();
  v6 = sub_222597020();
  if (!os_log_type_enabled(v5, v6))
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    swift_release();

    goto LABEL_8;
  }
  v29 = v6;
  log = v5;
  v31 = (_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 176);
  v25 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 160);
  v1 = swift_slowAlloc();
  v28 = swift_slowAlloc();
  v33 = v28;
  *(_DWORD *)v1 = 136315650;
  v8 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80)), sel_name);
  v9 = sub_222596CF0();
  v11 = v10;

  *(_QWORD *)(v0 + 136) = sub_221921364(v9, v11, &v33);
  sub_222597134();
  swift_bridgeObjectRelease();
  v3 = (uint64_t *)(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  *(_WORD *)(v1 + 12) = 2080;
  v12 = objc_msgSend((id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120)), sel_uuid);
  sub_222596648();

  sub_221933018((unint64_t *)&qword_25573F0E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v13 = sub_222597530();
  v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v25);
  *(_QWORD *)(v0 + 144) = sub_221921364(v13, v15, &v33);
  sub_222597134();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  *(_WORD *)(v1 + 22) = 2048;
  v16 = *(_QWORD *)(v27 + 112);
  if (v16 >> 62)
    goto LABEL_18;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_release();
    *v3 = v17;
    sub_222597134();
    swift_release();
    _os_log_impl(&dword_2218F0000, log, v29, "[%s/%s][Check] Device connected; checking for device support (%ld services).",
      (uint8_t *)v1,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v28, -1, -1);
    MEMORY[0x227676FE0](v1, -1, -1);

    v2 = v31;
LABEL_8:
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 112);
    *(_QWORD *)(v0 + 192) = v18;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_2225973B0();
      *(_QWORD *)(v0 + 200) = v19;
      if (!v19)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 200) = v19;
      if (!v19)
        goto LABEL_16;
    }
    if (v19 >= 1)
      break;
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v17 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 208) = 0;
  v20 = *(_QWORD *)(v0 + 192);
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = MEMORY[0x227674274](0);
  }
  else
  {
    v21 = *(_QWORD *)(v20 + 32);
    swift_retain();
  }
  *(_QWORD *)(v0 + 216) = v21;
  v22 = (void *)*__swift_project_boxed_opaque_existential_1(v2, *(_QWORD *)(v0 + 40));
  v32 = (uint64_t (*)(void *, uint64_t, uint64_t))((char *)&dword_2557404D0 + dword_2557404D0);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v23;
  *v23 = v0;
  v23[1] = sub_2219C55AC;
  return v32(v22, v21, *(_QWORD *)(v0 + 160));
}

uint64_t sub_2219C55AC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C5604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  swift_release();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 208) + 1;
    *(_QWORD *)(v0 + 208) = v4;
    v5 = *(_QWORD *)(v0 + 192);
    if ((v5 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x227674274]();
    }
    else
    {
      v6 = *(_QWORD *)(v5 + 8 * v4 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 216) = v6;
    v7 = (void *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v9 = (uint64_t (*)(void *, uint64_t, uint64_t))((char *)&dword_2557404D0 + dword_2557404D0);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v8;
    *v8 = v0;
    v8[1] = sub_2219C55AC;
    return v9(v7, v6, *(_QWORD *)(v0 + 160));
  }
}

uint64_t sub_2219C5704(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  id v4;

  v3[7] = a1;
  v3[8] = a3;
  v3[5] = &_s16AccessoryAdapterVN;
  v3[6] = &off_24E7675F8;
  v3[2] = a2;
  v4 = a2;
  return swift_task_switch();
}

void sub_2219C575C()
{
  __asm { BR              X10 }
}

uint64_t sub_2219C579C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_25573B380 != -1)
    swift_once();
  v2 = sub_222596B40();
  __swift_project_value_buffer(v2, (uint64_t)qword_2557684B0);
  v3 = sub_222596B28();
  v4 = sub_22259702C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2218F0000, v3, v4, "[Device Connect] MatterServer is not started yet; dropping.", v5, 2u);
    MEMORY[0x227676FE0](v5, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_1(v0);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2219C59E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

id sub_2219C5A34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v11[5];

  v0 = _s27PrimaryResidentDataProviderCMa();
  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  swift_unknownObjectWeakInit();
  v1[16] = 0;
  swift_unknownObjectWeakInit();
  v1[17] = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v1[18] = 0;
  swift_unknownObjectWeakAssign();
  v11[3] = v0;
  v11[4] = &off_24E76C010;
  v11[0] = v1;
  type metadata accessor for PrimaryResidentMatterServer();
  v2 = swift_allocObject();
  v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (_QWORD *)((char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v6 + 16))(v5);
  v7 = *v5;
  swift_retain();
  v8 = sub_2219C2BD4(v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_release();
  return v8;
}

uint64_t sub_2219C5B70()
{
  unint64_t v0;

  v0 = sub_2225973EC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2219C5BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_221901E24;
  return sub_2219C1340(a1, a2, v7, v6);
}

uint64_t sub_2219C5C24()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219C5C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 16) = v0 + 32;
  return swift_task_switch();
}

uint64_t sub_2219C5CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255740490 + dword_255740490))(a1, v4);
}

uint64_t sub_2219C5D38(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2219C5D48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_221900360;
  return sub_2219C1750(a1, a2, v6, v7, v8);
}

uint64_t sub_2219C5DC4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219C5E00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1 + 5;
  v8 = v1[10];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_221901E24;
  return sub_2219C1A34(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2219C5E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_221901E24;
  return sub_2219C0E24(a1, a2, v2);
}

uint64_t sub_2219C5EE8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219C5F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221901E24;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_2219C5F74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219C5F98()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_2219C5FBC(void *a1)
{
  uint64_t v1;

  sub_2219C1E78(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_2219C5FDC(void *a1)
{
  return sub_2219C283C(a1);
}

uint64_t sub_2219C5FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 40) = v3;
  return swift_task_switch();
}

uint64_t sub_2219C6048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 80) = v3;
  return swift_task_switch();
}

uint64_t sub_2219C60A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2219C60F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221900360;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_2219C6154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_2219C61B4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221901E24;
  return ((uint64_t (*)(int *))((char *)&dword_2557406C8 + dword_2557406C8))(v2);
}

uint64_t sub_2219C6218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2557406D8 + dword_2557406D8))(a1, v4);
}

uint64_t _s7SecretsVwxx(uint64_t *a1)
{
  unint64_t v1;

  v1 = a1[1];
  if (v1 >> 60 != 15)
    sub_22190D550(*a1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t _s7SecretsVwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_22190D5DC(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7SecretsVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_22190D5DC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *(_QWORD *)a1;
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v4;
      sub_22190D550(v7, v8);
      goto LABEL_8;
    }
    sub_221948E98(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)a2;
  sub_22190D5DC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
LABEL_8:
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7SecretsVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      v6 = *(_QWORD *)a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      sub_22190D550(v6, v4);
      goto LABEL_6;
    }
    sub_221948E98(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s7SecretsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7SecretsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s7SecretsVMa()
{
  return &_s7SecretsVN;
}

HMDUserActivityReportCoordinatorFactory __swiftcall HMDUserActivityReportCoordinatorFactory.init()()
{
  return (HMDUserActivityReportCoordinatorFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id HMDUserActivityReportCoordinatorFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)HMDUserActivityReportCoordinatorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t type metadata accessor for HMDUserActivityReportCoordinatorFactory(uint64_t a1)
{
  return sub_221917374(a1, &qword_2557405B8);
}

id sub_2219C6610(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, char a6, _BYTE *a7)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  id v20;
  _QWORD *v21;
  id v22;
  objc_super v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[5];

  v27[3] = type metadata accessor for DefaultUserActivityReportMessenger();
  v27[4] = &off_24E766E40;
  v27[0] = a2;
  swift_defaultActor_initialize();
  a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating] = 1;
  v14 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_detectorsByContributorType] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_currentReports] = v14;
  sub_222596CF0();
  swift_retain();
  sub_222596B34();
  v15 = &a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_homeUUID];
  v16 = sub_222596678();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  sub_22191658C((uint64_t)v27, (uint64_t)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_messenger]);
  *(_QWORD *)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_dateProvider] = a3;
  *(_QWORD *)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_backgroundTaskManager] = a4;
  v18 = *(double *)&a5;
  if ((a6 & 1) != 0)
    v18 = 86400.0;
  *(double *)&a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_periodicUpdateInterval] = v18;
  v25 = 0;
  v26 = 0xE000000000000000;
  v19 = a3;
  v20 = a4;
  sub_22259726C();
  sub_222596D50();
  sub_222596624();
  sub_222596D50();
  swift_bridgeObjectRelease();
  v21 = &a7[OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_periodicUpdateTimerIdentifier];
  *v21 = 0;
  v21[1] = 0xE000000000000000;
  swift_release();
  v24.receiver = a7;
  v24.super_class = (Class)type metadata accessor for DefaultUserActivityReportCoordinator();
  v22 = objc_msgSendSuper2(&v24, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v22;
}

id sub_2219C684C(void *a1)
{
  uint64_t (*v1)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, char *, uint64_t);
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  void *v18;
  id result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t PresenceFeedRefreshInMinutes;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v36[5];

  v3 = sub_222596678();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36[-1] - v11;
  v13 = objc_msgSend(a1, sel_uuid);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
    goto LABEL_8;
  }
  v14 = v13;
  sub_222596648();

  v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v15(v12, v6, v3);
  v1 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v1(v12, 0, 1, v3);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v16(v12, 1, v3) == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = objc_msgSend(a1, sel_uuid);
  if (!v17)
  {
LABEL_9:
    result = (id)v1(v10, 1, 1, v3);
    goto LABEL_10;
  }
  v18 = v17;
  sub_222596648();

  v15(v10, v6, v3);
  v1(v10, 0, 1, v3);
  result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v10, 1, v3);
  if ((_DWORD)result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  result = objc_msgSend(a1, sel_msgDispatcher);
  if (result)
  {
    v20 = (uint64_t)result;
    v21 = sub_221917374(0, (unint64_t *)&unk_2557405C0);
    v22 = type metadata accessor for DefaultUserActivityReportMessenger();
    swift_allocObject();
    v23 = sub_221922054((uint64_t)v10, v20, v21);
    v24 = objc_msgSend(objc_allocWithZone((Class)HMDDate), sel_init);
    v25 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    PresenceFeedRefreshInMinutes = getPresenceFeedRefreshInMinutes();
    v36[3] = v22;
    v36[4] = &off_24E766E40;
    *(double *)&v27 = (double)PresenceFeedRefreshInMinutes * 60.0;
    v36[0] = v23;
    type metadata accessor for DefaultUserActivityReportCoordinator();
    v28 = (_BYTE *)swift_allocObject();
    v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v22);
    MEMORY[0x24BDAC7A8](v29);
    v31 = (_QWORD *)((char *)&v36[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v32 + 16))(v31);
    v33 = *v31;
    swift_retain();
    v34 = sub_2219C6610((uint64_t)v12, v33, v24, v25, v27, 0, v28);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    swift_release();
    return v34;
  }
LABEL_11:
  __break(1u);
  return result;
}

char *type metadata accessor for MTR()
{
  return (char *)&_sMp_4.AssociatedTypeNames + 3;
}

uint64_t sub_2219C6BCC()
{
  uint64_t v0;

  v0 = sub_222596B40();
  __swift_allocate_value_buffer(v0, qword_255768588);
  __swift_project_value_buffer(v0, (uint64_t)qword_255768588);
  return sub_222596B34();
}

uint64_t sub_2219C6C48(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2219C1AB8;
  return v4();
}

uint64_t sub_2219C6CA0()
{
  uint64_t v0;

  v0 = sub_222596B40();
  __swift_allocate_value_buffer(v0, qword_2557405D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2557405D0);
  sub_222596CF0();
  return sub_222596B34();
}

uint64_t sub_2219C6D14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C6D2C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_25573B3B0 != -1)
    swift_once();
  v1 = sub_222596B40();
  __swift_project_value_buffer(v1, (uint64_t)qword_2557405D0);
  v2 = sub_222596B28();
  v3 = sub_222597020();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2218F0000, v2, v3, "Start", v4, 2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  *(_QWORD *)(v0 + 24) = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_matterServer), *(_QWORD *)(v5+ OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_matterServer+ 24));
  return swift_task_switch();
}

uint64_t sub_2219C6E30()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 120);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219C6E78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = &unk_2557406E8;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = &unk_2557406F0;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_2219C6F30;
  return v6();
}

uint64_t sub_2219C6F30()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C70BC(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_2219C7BA0;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_2219C7134()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C714C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_25573B3B0 != -1)
    swift_once();
  v1 = sub_222596B40();
  __swift_project_value_buffer(v1, (uint64_t)qword_2557405D0);
  v2 = sub_222596B28();
  v3 = sub_222597020();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_2218F0000, v2, v3, "Stop", v4, 2u);
    MEMORY[0x227676FE0](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  *(_QWORD *)(v0 + 24) = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_matterServer), *(_QWORD *)(v5+ OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_matterServer+ 24));
  return swift_task_switch();
}

uint64_t sub_2219C7250()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 120);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219C7298()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = &unk_2557406C0;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = &unk_2557406D0;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_2219C7350;
  return v6();
}

uint64_t sub_2219C7350()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C73C0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C750C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_2219C7584;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_2219C7584()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_2219C7614()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeMatterServicesCoordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

HMDHomeMatterServicesCoordinatorFactory __swiftcall HMDHomeMatterServicesCoordinatorFactory.init()()
{
  return (HMDHomeMatterServicesCoordinatorFactory)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id HMDHomeMatterServicesCoordinatorFactory.init()()
{
  objc_super v1;

  v1.super_class = (Class)HMDHomeMatterServicesCoordinatorFactory;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t type metadata accessor for HomeMatterServicesCoordinator()
{
  return objc_opt_self();
}

unint64_t type metadata accessor for HMDHomeMatterServicesCoordinatorFactory()
{
  unint64_t result;

  result = qword_2557406B8;
  if (!qword_2557406B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2557406B8);
  }
  return result;
}

id sub_2219C7810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  objc_super v20;
  _QWORD v21[5];
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];

  v6 = type metadata accessor for PrimaryResidentMatterServer();
  v25[3] = v6;
  v25[4] = &off_24E76B928;
  v25[0] = a2;
  v23 = type metadata accessor for DefaultHomeMatterServicesFactory();
  v24 = &off_24E76D110;
  v22[0] = a3;
  v7 = (objc_class *)type metadata accessor for HomeMatterServicesCoordinator();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v6);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *))(v15 + 16))((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *v11;
  v21[3] = v6;
  v21[4] = &off_24E76B928;
  swift_release();
  v21[0] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_featuresDataSource] = a1;
  sub_22191658C((uint64_t)v21, (uint64_t)&v8[OBJC_IVAR____TtC13HomeKitDaemon29HomeMatterServicesCoordinator_matterServer]);
  v20.receiver = v8;
  v20.super_class = v7;
  v17 = objc_msgSendSuper2(&v20, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v17;
}

uint64_t sub_2219C799C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_221901E24;
  return sub_2219BF760(v0);
}

uint64_t sub_2219C79E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_221901E24;
  return sub_2219BF6D0(v0);
}

uint64_t sub_2219C7A2C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221900360;
  return ((uint64_t (*)(int *))((char *)&dword_2557406C8 + dword_2557406C8))(v2);
}

uint64_t sub_2219C7A94()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221900360;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_255740708 + dword_255740708))(v2, v3);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_2219C7B30()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221901E24;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_255740718 + dword_255740718))(v2, v3);
}

uint64_t sub_2219C7BA4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2219C7BAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_222596F30();
  if (v1 <= 0x3F)
  {
    result = sub_222596F0C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2219C7C3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_222596F30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_222596F0C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2219C7CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_222596F30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_222596F0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2219C7D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_222596F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_222596F0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2219C7DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_222596F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_222596F0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2219C7E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_222596F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_222596F0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2219C7EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_222596F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_222596F0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2219C7F80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219C7F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_222596F30();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_222596F0C();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2219C800C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219C8018(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_222596F30();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_222596F0C();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s6StreamVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s6StreamVMn);
}

uint64_t sub_2219C80B4()
{
  sub_22196F9E4();
  sub_222596D98();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  return 0x44492E70756F7247;
}

uint64_t sub_2219C8158@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_2219C8540(*a1);
  *(_WORD *)a2 = result;
  *(_BYTE *)(a2 + 2) = BYTE2(result);
  return result;
}

void sub_2219C8188(_WORD *a1@<X8>)
{
  __int16 *v1;
  __int16 v2;
  __int16 v3;

  v2 = *v1;
  v3 = *v1 | 0xFF00;
  if (*((_BYTE *)v1 + 2) != 1)
    v3 = 0;
  if (*((_BYTE *)v1 + 2))
    v2 = v3;
  *a1 = v2;
}

uint64_t sub_2219C81AC()
{
  sub_2219C857C();
  return sub_222596DF8();
}

uint64_t sub_2219C8208()
{
  sub_2219C857C();
  return sub_222596DD4();
}

uint64_t sub_2219C8254()
{
  sub_2225978F0();
  sub_222597914();
  return sub_222597938();
}

uint64_t sub_2219C82AC()
{
  return sub_222597914();
}

ValueMetadata *_s5GroupOMa()
{
  return &_s5GroupON;
}

uint64_t __swift_memcpy3_2(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t _s5GroupO2IDOwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
  }
  v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 2)
    v5 = -1;
  else
    v5 = v4 ^ 0xFF;
  return (v5 + 1);
}

uint64_t _s5GroupO2IDOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554178) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFD)
    v3 = 0;
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
    *(_BYTE *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 2) = -(char)a2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

uint64_t sub_2219C8410(unsigned __int16 *a1)
{
  if (*((unsigned __int8 *)a1 + 2) <= 1u)
    return *((unsigned __int8 *)a1 + 2);
  else
    return *a1 + 2;
}

uint64_t sub_2219C8428(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_WORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 2) = a2;
  return result;
}

ValueMetadata *_s5GroupO2IDOMa()
{
  return &_s5GroupO2IDON;
}

uint64_t sub_2219C8450()
{
  sub_2225978F0();
  sub_222597914();
  return sub_222597938();
}

uint64_t sub_2219C84A4()
{
  return sub_2219C80B4();
}

BOOL sub_2219C84B4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  v2 = *a1;
  v3 = *a2;
  v4 = v2 | 0xFF00;
  if (*((_BYTE *)a1 + 2) != 1)
    v4 = 0;
  if (*((_BYTE *)a1 + 2))
    v2 = v4;
  v5 = v3 | 0xFF00;
  if (*((_BYTE *)a2 + 2) != 1)
    v5 = 0;
  if (*((_BYTE *)a2 + 2))
    v3 = v5;
  return v2 == v3;
}

unint64_t sub_2219C84FC()
{
  unint64_t result;

  result = qword_2557407C0;
  if (!qword_2557407C0)
  {
    result = MEMORY[0x227676F2C](&unk_22268E63C, &_s5GroupO2IDON);
    atomic_store(result, (unint64_t *)&qword_2557407C0);
  }
  return result;
}

uint64_t sub_2219C8540(unsigned __int16 a1)
{
  int v1;
  unsigned __int16 v2;

  v1 = (a1 > 0xFEFEu) << 16;
  if (!a1)
    v1 = 0x20000;
  if (a1 >= 0xFEFFu)
    v2 = a1;
  else
    v2 = a1;
  return v1 & 0xFFFF0000 | v2;
}

unint64_t sub_2219C857C()
{
  unint64_t result;

  result = qword_2557407C8;
  if (!qword_2557407C8)
  {
    result = MEMORY[0x227676F2C](&unk_22268E71C, &_s5GroupO2IDON);
    atomic_store(result, (unint64_t *)&qword_2557407C8);
  }
  return result;
}

uint64_t _s15PrimaryResidentCMa()
{
  return objc_opt_self();
}

uint64_t sub_2219C85E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v26 = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  v25 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v25 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_222596B40();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v3;
  sub_2219950CC(v3, (uint64_t)&off_24E76BEB0);
  v14 = sub_222596B28();
  v15 = sub_222597020();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_2218F0000, v14, v15, "Registering for primary resident changes", v16, 2u);
    MEMORY[0x227676FE0](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = sub_2225970B0();
  v18 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  v19 = swift_allocObject();
  swift_weakInit();
  sub_2219289A8(v26, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (*(unsigned __int8 *)(v25 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v21 = (v5 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v17;
  v22[5] = v19;
  sub_2219289F4((uint64_t)v6, (uint64_t)v22 + v20);
  *(_QWORD *)((char *)v22 + v21) = v27;
  v2[3] = sub_22191760C((uint64_t)v9, (uint64_t)&unk_255740880, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_2219C8854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA20);
  v7[20] = v8;
  v7[21] = *(_QWORD *)(v8 - 8);
  v7[22] = swift_task_alloc();
  v9 = sub_222596B40();
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA28);
  v7[26] = swift_task_alloc();
  v10 = sub_2225970A4();
  v7[27] = v10;
  v7[28] = *(_QWORD *)(v10 - 8);
  v7[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219C8930()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  sub_222597098();
  swift_beginAccess();
  *(_QWORD *)(v0 + 240) = sub_221928C88();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v1;
  *v1 = v0;
  v1[1] = sub_2219C89D0;
  return sub_222596EDC();
}

uint64_t sub_2219C89D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C8A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = sub_2225963FC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v15 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    sub_221928CD0(v15);
    goto LABEL_8;
  }
  v4 = Strong;
  sub_2219950CC(*(_QWORD *)(v0 + 152), (uint64_t)&off_24E76BEB0);
  v5 = sub_222596B28();
  v6 = sub_222597020();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2218F0000, v5, v6, "Received HMDPrimaryResidentChangeMonitorConfirmedDeviceIdentifierChange", v7, 2u);
    MEMORY[0x227676FE0](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  *(_QWORD *)(v0 + 40) = v12;
  *(_QWORD *)(v0 + 48) = &off_24E76BEC8;
  *(_QWORD *)(v0 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  sub_22191658C(v0 + 16, v0 + 56);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3B0);
  sub_222596F00();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v17);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_221928CD0(v18);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v13;
  *v13 = v0;
  v13[1] = sub_2219C8C9C;
  return sub_222596EDC();
}

uint64_t sub_2219C8C9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

uint64_t sub_2219C8D04(uint64_t a1)
{
  return sub_2219C85E0(a1);
}

unint64_t sub_2219C8D24()
{
  return 0xD000000000000045;
}

uint64_t sub_2219C8D40()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2219C8D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 48) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v4 = v0 + v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 28);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_2219C8E34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_221900360;
  return sub_2219C8854(a1, v6, v7, v8, v9, v10, v11);
}

id sub_2219C8EF0(void *a1)
{
  unsigned __int8 v2;
  id result;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = objc_msgSend(a1, sel_isCurrentDevicePrimaryResident);
  result = objc_msgSend(a1, sel_homeManager);
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, sel_capabilitiesController);

    if (!v5)
      return 0;
    v6 = objc_msgSend(v5, sel_currentResidentCapabilities);

    if (!v6)
      return 0;
    v7 = objc_msgSend(v6, sel_supportsDistributedExecutionOnPrimary);
    swift_unknownObjectRelease();
    if ((v2 & 1) == 0)
      return 0;
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Double.minute.getter()
{
  return 60.0;
}

double static Double.hour.getter()
{
  return 3600.0;
}

double static Double.day.getter()
{
  return 86400.0;
}

uint64_t _s3PETVwxx(uint64_t *a1)
{
  unint64_t v1;

  v1 = a1[1];
  if (v1 >> 60 != 15)
    sub_22190D550(*a1, v1);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s3PETVwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_22190D5DC(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t _s3PETVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_22190D5DC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *(_QWORD *)a1;
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v4;
      sub_22190D550(v7, v8);
      goto LABEL_8;
    }
    sub_221948E98(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)a2;
  sub_22190D5DC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
LABEL_8:
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s3PETVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      v6 = *(_QWORD *)a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v5;
      sub_22190D550(v6, v4);
      goto LABEL_6;
    }
    sub_221948E98(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t _s3PETVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s3PETVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s3PETVMa()
{
  return &_s3PETVN;
}

uint64_t sub_2219C92C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  double v14;
  char *v15;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v18[3];
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  char v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = _s10SerializerVMa(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - v11;
  v13 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v13;
  v23 = *(_BYTE *)(v3 + 32);
  v14 = sub_2219E230C((uint64_t)v22, (uint64_t)v18 - v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(a3 + 32))(v12, a2, a3, v14);
  v15 = &v12[*(int *)(v9 + 36)];
  v20 = AssociatedTypeWitness;
  v21 = AssociatedConformanceWitness;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1, v15, AssociatedTypeWitness);
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v18[1] = swift_getDynamicType();
  v18[2] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740888);
  sub_222596D20();
  sub_222596B04();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

unint64_t sub_2219C947C()
{
  return 0xD00000000000002CLL;
}

void sub_2219C9498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  v1 = v0;
  if (qword_25573B388 != -1)
    swift_once();
  v2 = sub_222596B40();
  __swift_project_value_buffer(v2, (uint64_t)qword_2557684C8);
  v3 = sub_222596B28();
  v4 = sub_222597050();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2218F0000, v3, v4, "[INVALIDATE]", v5, 2u);
    MEMORY[0x227676FE0](v5, -1, -1);
  }

  v6 = *(_QWORD *)(v1 + 144);
  if (v6)
  {
    *(_QWORD *)(v1 + 144) = 0;
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v8 = *(void **)(v1 + 136);
      v9 = v6 + 32;
      do
      {
        sub_221921C04(v9, (uint64_t)v11);
        __swift_project_boxed_opaque_existential_1(v11, v11[3]);
        v10 = sub_2225976D4();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        objc_msgSend(v8, sel_removeObserver_, v10);
        swift_unknownObjectRelease();
        v9 += 32;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2219C95F4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_22196DF04(v0 + 120);

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t _s27PrimaryResidentDataProviderCMa()
{
  return objc_opt_self();
}

uint64_t sub_2219C9650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_222596BAC();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v7 = sub_222596B58();
  v5[7] = v7;
  v5[8] = *(_QWORD *)(v7 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219C96F4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
  {
    v2 = (unsigned int *)MEMORY[0x24BDD4740];
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    v2 = (unsigned int *)MEMORY[0x24BDD4748];
LABEL_5:
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *v2, v7);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v8(v3, v4, v7);
    *(_QWORD *)(v0 + 96) = type metadata accessor for ShimAccessoryMatterCapabilities();
    *(_QWORD *)(v0 + 104) = swift_allocObject();
    v8(v5, v3, v7);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_2219C9834;
    return sub_222596B70();
  }
  objc_msgSend(*(id *)(v0 + 24), sel_rejectWithError_, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C9834()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219C9898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (*v6)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v5 = *(void **)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8);
  v6(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1 + OBJC_IVAR____TtC13HomeKitDaemon31ShimAccessoryMatterCapabilities_impl, v2, v4);
  objc_msgSend(v5, sel_fulfillWithValue_, v1);
  swift_release();
  v6(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219C995C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(_QWORD, _QWORD);
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 24);
  v3 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8);
  v3(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  swift_deallocPartialClassInstance();
  v4 = (void *)sub_2225964BC();
  v5 = (void *)sub_2225964BC();

  objc_msgSend(v2, sel_rejectWithError_, v5);
  v3(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2219C9A4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_futureWithPromise_, v12);
  v6 = v12[0];
  if (!v12[0])
    __break(1u);
  v7 = v5;
  v8 = sub_222596EF4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = v6;
  v10 = v6;
  sub_22191760C((uint64_t)v4, (uint64_t)&unk_255740A20, (uint64_t)v9);
  swift_release();

  return v7;
}

uint64_t sub_2219C9B88()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2219C9BB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_221900360;
  return sub_2219C9650(a1, v4, v5, v7, v6);
}

uint64_t static HomeUtilPassCommandHandler.handlePassCommandFor(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_255740A30 + dword_255740A30);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2219C9C98;
  return v7(a1, a2);
}

uint64_t sub_2219C9C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_2219C9E28(void *a1, void *aBlock)
{
  _QWORD *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v2[2] = _Block_copy(aBlock);
  v4 = a1;
  v5 = sub_2225965A0();
  v7 = v6;

  v2[3] = v5;
  v2[4] = v7;
  v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_255740A30 + dword_255740A30);
  v8 = (_QWORD *)swift_task_alloc();
  v2[5] = v8;
  *v8 = v2;
  v8[1] = sub_2219C9EC0;
  return v10(v5, v7);
}

uint64_t sub_2219C9EC0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);

  v4 = v2;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 32);
  v8 = *(_QWORD *)(*v3 + 24);
  v9 = *v3;
  swift_task_dealloc();
  sub_22190D550(v8, v7);
  if (v4)
  {
    a2 = sub_2225964BC();

    v10 = 0;
    v11 = (void *)a2;
  }
  else if (a2)
  {
    v10 = sub_222596CD8();
    swift_bridgeObjectRelease();
    a2 = 0;
    v11 = (void *)v10;
  }
  else
  {
    v10 = 0;
    v11 = 0;
  }
  v12 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 16);
  v12[2](v12, v10, a2);

  _Block_release(v12);
  return (*(uint64_t (**)(void))(v9 + 8))();
}

id HomeUtilPassCommandHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id HomeUtilPassCommandHandler.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeUtilPassCommandHandler();
  return objc_msgSendSuper2(&v2, sel_init);
}

id HomeUtilPassCommandHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeUtilPassCommandHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2219CA064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_2219CA07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  sub_222596378();
  swift_allocObject();
  sub_22259636C();
  sub_2219CAD40();
  sub_222596360();
  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  v3 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 80) = v3;
  if (!*(_BYTE *)(v0 + 40))
  {
    if (v3)
    {
      v7 = qword_25573B3B8;
      swift_bridgeObjectRetain();
      if (v7 != -1)
        swift_once();
      *(_QWORD *)(v0 + 112) = static PassUpdater.shared;
    }
    else if ((v2 & 1) != 0)
    {
      if (qword_25573B3B8 != -1)
        swift_once();
      *(_QWORD *)(v0 + 144) = static PassUpdater.shared;
    }
    else
    {
      if (qword_25573B3B8 != -1)
        swift_once();
      *(_QWORD *)(v0 + 168) = static PassUpdater.shared;
      *(_QWORD *)(v0 + 176) = objc_msgSend((id)objc_opt_self(), sel_untrackedPlaceholderFlow);
    }
    return swift_task_switch();
  }
  if (*(_BYTE *)(v0 + 40) != 1)
  {
    if (qword_25573B3B8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 88) = static PassUpdater.shared;
    return swift_task_switch();
  }
  if (!v1)
  {
    if (qword_25573B3B8 != -1)
      swift_once();
    return swift_task_switch();
  }
  v4 = qword_25573B3B8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v5;
  *v5 = v0;
  v5[1] = sub_2219CA9C8;
  return PassUpdater.homeutilRunTestWithName(_:)(v2, v1);
}

uint64_t sub_2219CA340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_2219CA3B8;
  return v3();
}

uint64_t sub_2219CA3B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA41C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_2219CA430()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CA43C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = v0[14];
  v3 = v0[9];
  v2 = v0[10];
  v4 = (_QWORD *)swift_task_alloc();
  v0[15] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v7 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[16] = v5;
  *v5 = v0;
  v5[1] = sub_2219CA4E0;
  return v7();
}

uint64_t sub_2219CA4E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA550()
{
  uint64_t *v0;

  sub_2219CAD84(v0[8], v0[9], v0[10], 0);
  return swift_task_switch();
}

uint64_t sub_2219CA594()
{
  uint64_t v0;

  sub_2219CAD84(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 0);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_2219CA5D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  sub_2219CAD84(v3, v1, v2, 0);
  sub_2219CAD84(v3, v1, v2, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CA678()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_2219CA6F0;
  return v3();
}

uint64_t sub_2219CA6F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA754()
{
  return swift_task_switch();
}

uint64_t sub_2219CA768()
{
  uint64_t v0;

  sub_2219CAD84(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), 0, 0);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_2219CA7AC()
{
  return swift_task_switch();
}

uint64_t sub_2219CA7C0()
{
  uint64_t v0;

  sub_2219CAD84(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), 0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CA7FC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = swift_task_alloc();
  v2 = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 184) = v1;
  *(_OWORD *)(v1 + 16) = v2;
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v3;
  *v3 = v0;
  v3[1] = sub_2219CA890;
  return v5();
}

uint64_t sub_2219CA890()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA904()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_2219CA940()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CA97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);

  sub_2219CAD84(v1, v2, 0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CA9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD **)v3;
  *(_QWORD *)(*(_QWORD *)v3 + 216) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    v7 = v6[9];
    v8 = v6[10];
    v9 = v6[8];
    v6[28] = a2;
    v6[29] = a1;
    sub_2219CAD84(v9, v7, v8, 1u);
  }
  return swift_task_switch();
}

uint64_t sub_2219CAA50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  sub_2219CAD84(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 1u);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 232), v1);
}

uint64_t sub_2219CAA98()
{
  uint64_t v0;
  void *rawValue;
  _QWORD *v2;

  if (qword_25573B338 != -1)
    swift_once();
  rawValue = homeutilPassTests._rawValue;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v2;
  *v2 = v0;
  v2[1] = sub_2219CAB18;
  return runHomeUtilOnDeviceTests(_:)((uint64_t)rawValue);
}

uint64_t sub_2219CAB18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 248) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 256) = a2;
    *(_QWORD *)(v6 + 264) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_2219CAB90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  sub_2219CAD84(*(_QWORD *)(v0 + 64), 0, *(_QWORD *)(v0 + 80), 1u);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 264), v1);
}

uint64_t sub_2219CABDC()
{
  uint64_t v0;

  sub_2219CAD84(*(_QWORD *)(v0 + 64), 0, *(_QWORD *)(v0 + 80), 1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CAC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  sub_2219CAD84(v3, v1, v2, 1u);
  sub_2219CAD84(v3, v1, v2, 1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for HomeUtilPassCommandHandler()
{
  return objc_opt_self();
}

uint64_t sub_2219CACA0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_2219CACCC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221900360;
  return ((uint64_t (*)(void *, void *))((char *)&dword_255740A60 + dword_255740A60))(v2, v3);
}

unint64_t sub_2219CAD40()
{
  unint64_t result;

  result = qword_255740A70;
  if (!qword_255740A70)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for HomeUtilPassCommand, &type metadata for HomeUtilPassCommand);
    atomic_store(result, (unint64_t *)&qword_255740A70);
  }
  return result;
}

uint64_t sub_2219CAD84(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2219CADA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_221901E24;
  return sub_2219F4EC0(a1, v1);
}

uint64_t sub_2219CADF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_221900360;
  return sub_2219F546C(a1, v4, v5, v6);
}

uint64_t sub_2219CAE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_221901E24;
  return sub_2219F40F8(a1, v1);
}

uint64_t _s19HasCurrentAccessoryCMa()
{
  return objc_opt_self();
}

uint64_t sub_2219CAEDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(char *, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v52 = a1;
  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  v48 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v48 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_222596B40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - v13;
  v54 = v3;
  sub_2219950CC(v3, (uint64_t)&off_24E76C100);
  v15 = sub_222596B28();
  v16 = sub_222597020();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_2218F0000, v15, v16, "Registering for add current accessory notifications", v17, 2u);
    MEMORY[0x227676FE0](v17, -1, -1);
  }

  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  v50 = sub_2225970B0();
  sub_2219950CC(v54, (uint64_t)&off_24E76C100);
  v19 = sub_222596B28();
  v20 = sub_222597020();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_2218F0000, v19, v20, "Registering for remove current accessory notifications", v21, 2u);
    MEMORY[0x227676FE0](v21, -1, -1);
  }

  v18(v12, v8);
  v49 = sub_2225970B0();
  v22 = sub_222596EF4();
  v23 = (uint64_t)v51;
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v47(v51, 1, 1, v22);
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = v53;
  sub_2219289A8(v52, v53);
  v26 = *(unsigned __int8 *)(v48 + 80);
  v27 = (v26 + 48) & ~v26;
  v28 = (v5 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = v26 | 7;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = v50;
  v29[5] = v24;
  sub_2219289F4(v25, (uint64_t)v29 + v27);
  *(_QWORD *)((char *)v29 + v28) = v54;
  swift_retain();
  v30 = sub_22191760C(v23, (uint64_t)&unk_255740B40, (uint64_t)v29);
  v31 = v2 + 3;
  swift_beginAccess();
  v32 = (_QWORD *)v2[3];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[3] = (uint64_t)v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v32 = sub_2219910B0(0, v32[2] + 1, 1, v32);
    *v31 = v32;
  }
  v35 = v32[2];
  v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    v32 = sub_2219910B0((_QWORD *)(v34 > 1), v35 + 1, 1, v32);
    *v31 = v32;
  }
  v32[2] = v35 + 1;
  v32[v35 + 4] = v30;
  swift_endAccess();
  v36 = (uint64_t)v51;
  v47(v51, 1, 1, v22);
  v37 = swift_allocObject();
  swift_weakInit();
  v38 = v53;
  sub_2219289A8(v52, v53);
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = 0;
  v39[3] = 0;
  v39[4] = v49;
  v39[5] = v37;
  sub_2219289F4(v38, (uint64_t)v39 + v27);
  *(_QWORD *)((char *)v39 + v28) = v54;
  swift_retain();
  v40 = sub_22191760C(v36, (uint64_t)&unk_255740B50, (uint64_t)v39);
  swift_beginAccess();
  v41 = (_QWORD *)v2[3];
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v2[3] = (uint64_t)v41;
  if ((v42 & 1) == 0)
  {
    v41 = sub_2219910B0(0, v41[2] + 1, 1, v41);
    *v31 = v41;
  }
  v44 = v41[2];
  v43 = v41[3];
  if (v44 >= v43 >> 1)
  {
    v41 = sub_2219910B0((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
    *v31 = v41;
  }
  v41[2] = v44 + 1;
  v41[v44 + 4] = v40;
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_2219CB41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA20);
  v7[20] = v8;
  v7[21] = *(_QWORD *)(v8 - 8);
  v7[22] = swift_task_alloc();
  v9 = sub_222596B40();
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA28);
  v7[26] = swift_task_alloc();
  v10 = sub_2225970A4();
  v7[27] = v10;
  v7[28] = *(_QWORD *)(v10 - 8);
  v7[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219CB4F8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  sub_222597098();
  swift_beginAccess();
  *(_QWORD *)(v0 + 240) = sub_221928C88();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v1;
  *v1 = v0;
  v1[1] = sub_2219CB598;
  return sub_222596EDC();
}

uint64_t sub_2219CB598()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

uint64_t sub_2219CB5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = sub_2225963FC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v15 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    sub_221928CD0(v15);
    goto LABEL_8;
  }
  v4 = Strong;
  sub_2219950CC(*(_QWORD *)(v0 + 152), (uint64_t)&off_24E76C100);
  v5 = sub_222596B28();
  v6 = sub_222597020();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2218F0000, v5, v6, "Received NSNotification.Name.HMDHomeManagerDidAddCurrentAccessory", v7, 2u);
    MEMORY[0x227676FE0](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  *(_QWORD *)(v0 + 40) = v12;
  *(_QWORD *)(v0 + 48) = &off_24E76C118;
  *(_QWORD *)(v0 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  sub_22191658C(v0 + 16, v0 + 56);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3B0);
  sub_222596F00();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v17);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_221928CD0(v18);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v13;
  *v13 = v0;
  v13[1] = sub_2219CB864;
  return sub_222596EDC();
}

uint64_t sub_2219CB864()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

uint64_t sub_2219CB8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA20);
  v7[20] = v8;
  v7[21] = *(_QWORD *)(v8 - 8);
  v7[22] = swift_task_alloc();
  v9 = sub_222596B40();
  v7[23] = v9;
  v7[24] = *(_QWORD *)(v9 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CA28);
  v7[26] = swift_task_alloc();
  v10 = sub_2225970A4();
  v7[27] = v10;
  v7[28] = *(_QWORD *)(v10 - 8);
  v7[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219CB9A4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_retain();
  sub_222597098();
  swift_beginAccess();
  *(_QWORD *)(v0 + 240) = sub_221928C88();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v1;
  *v1 = v0;
  v1[1] = sub_2219CBA44;
  return sub_222596EDC();
}

uint64_t sub_2219CBA44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

uint64_t sub_2219CBAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = sub_2225963FC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v15 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    sub_221928CD0(v15);
    goto LABEL_8;
  }
  v4 = Strong;
  sub_2219950CC(*(_QWORD *)(v0 + 152), (uint64_t)&off_24E76C100);
  v5 = sub_222596B28();
  v6 = sub_222597020();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2218F0000, v5, v6, "Received NSNotification.Name.HMDHomeManagerDidRemoveCurrentAccessory", v7, 2u);
    MEMORY[0x227676FE0](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 200);
  v9 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  *(_QWORD *)(v0 + 40) = v12;
  *(_QWORD *)(v0 + 48) = &off_24E76C118;
  *(_QWORD *)(v0 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8);
  sub_22191658C(v0 + 16, v0 + 56);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573C3B0);
  sub_222596F00();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v17);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_221928CD0(v18);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v13;
  *v13 = v0;
  v13[1] = sub_2219CBD10;
  return sub_222596EDC();
}

uint64_t sub_2219CBD10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 256) = v0;
  return swift_task_switch();
}

BOOL sub_2219CBD74(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, sel_currentAccessory);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t sub_2219CBDB4(uint64_t a1)
{
  return sub_2219CAEDC(a1);
}

unint64_t sub_2219CBDD4()
{
  return 0xD000000000000049;
}

uint64_t sub_2219CBDF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2219CBE18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_221901E24;
  return sub_2219CB41C(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_2219CBED8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25573C2E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_221900360;
  return sub_2219CB8C8(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t __swift_memcpy6_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s10DeviceTypeVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s10DeviceTypeVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

ValueMetadata *_s10DeviceTypeVMa()
{
  return &_s10DeviceTypeVN;
}

uint64_t sub_2219CC004()
{
  sub_22259726C();
  sub_222596D50();
  sub_22196FEC8();
  sub_222596D98();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_222597380();
  sub_222596D50();
  return 0;
}

_QWORD *sub_2219CC108@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_2219CC128(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2219CC134()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697369766572;
  else
    return 25705;
}

uint64_t sub_2219CC164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2219CCC6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219CC188()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_2219CC194@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_2219CC1B0()
{
  sub_2219CC8A0();
  return sub_2225979BC();
}

uint64_t sub_2219CC1D8()
{
  sub_2219CC8A0();
  return sub_2225979C8();
}

uint64_t sub_2219CC200(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  __int16 v11;
  char v12;
  int v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219CC8A0();
  sub_222597974();
  v13 = a2;
  v12 = 0;
  sub_2219CC96C();
  sub_222597500();
  if (!v2)
  {
    v11 = WORD2(a2);
    v10[7] = 1;
    sub_2219CC9B0();
    sub_222597500();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2219CC340@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2219CC724(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(_WORD *)(a2 + 4) = WORD2(result);
  }
  return result;
}

uint64_t sub_2219CC370(_QWORD *a1)
{
  unsigned int *v1;

  return sub_2219CC200(a1, *v1 | ((unint64_t)*((unsigned __int16 *)v1 + 2) << 32));
}

uint64_t sub_2219CC390()
{
  sub_2225978F0();
  sub_222597920();
  sub_222597914();
  return sub_222597938();
}

uint64_t sub_2219CC3EC()
{
  sub_222597920();
  return sub_222597914();
}

uint64_t sub_2219CC428()
{
  sub_2225978F0();
  sub_222597920();
  sub_222597914();
  return sub_222597938();
}

uint64_t sub_2219CC480()
{
  return sub_2219CC004();
}

BOOL sub_2219CC490(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && *(unsigned __int16 *)(a1 + 4) == *(unsigned __int16 *)(a2 + 4);
}

unint64_t sub_2219CC4B4()
{
  unint64_t result;

  result = qword_255740B58;
  if (!qword_255740B58)
  {
    result = MEMORY[0x227676F2C](&unk_22268E8BC, &_s10DeviceTypeVN);
    atomic_store(result, (unint64_t *)&qword_255740B58);
  }
  return result;
}

_DWORD *sub_2219CC4F8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_2219CC508(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2219CC514()
{
  sub_2219CCD44();
  return sub_222596E04();
}

uint64_t sub_2219CC570()
{
  sub_2219CCD44();
  return sub_222596DE0();
}

uint64_t sub_2219CC5BC()
{
  sub_2225978F0();
  sub_222597920();
  return sub_222597938();
}

uint64_t sub_2219CC600()
{
  return sub_222597920();
}

uint64_t sub_2219CC628()
{
  sub_2225978F0();
  sub_222597920();
  return sub_222597938();
}

BOOL sub_2219CC668(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2219CC67C()
{
  sub_2219CCD88();
  return sub_222596DF8();
}

uint64_t sub_2219CC6D8()
{
  sub_2219CCD88();
  return sub_222596DD4();
}

uint64_t sub_2219CC724(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];
  unsigned __int16 v11;
  char v12;
  unsigned int v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740B60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219CC8A0();
  sub_222597968();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = 0;
  sub_2219CC8E4();
  sub_222597470();
  v7 = v13;
  v10[7] = 1;
  sub_2219CC928();
  sub_222597470();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v8 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 | (v8 << 32);
}

unint64_t sub_2219CC8A0()
{
  unint64_t result;

  result = qword_255740B68;
  if (!qword_255740B68)
  {
    result = MEMORY[0x227676F2C](&unk_22268ECA0, &_s10DeviceTypeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255740B68);
  }
  return result;
}

unint64_t sub_2219CC8E4()
{
  unint64_t result;

  result = qword_255740B70;
  if (!qword_255740B70)
  {
    result = MEMORY[0x227676F2C](&unk_22268EC78, &_s10DeviceTypeV2IDVN);
    atomic_store(result, (unint64_t *)&qword_255740B70);
  }
  return result;
}

unint64_t sub_2219CC928()
{
  unint64_t result;

  result = qword_255740B78;
  if (!qword_255740B78)
  {
    result = MEMORY[0x227676F2C](&unk_22268EC50, &_s10DeviceTypeV8RevisionVN);
    atomic_store(result, (unint64_t *)&qword_255740B78);
  }
  return result;
}

unint64_t sub_2219CC96C()
{
  unint64_t result;

  result = qword_255740B88;
  if (!qword_255740B88)
  {
    result = MEMORY[0x227676F2C](&unk_22268EC28, &_s10DeviceTypeV2IDVN);
    atomic_store(result, (unint64_t *)&qword_255740B88);
  }
  return result;
}

unint64_t sub_2219CC9B0()
{
  unint64_t result;

  result = qword_255740B90;
  if (!qword_255740B90)
  {
    result = MEMORY[0x227676F2C](&unk_22268EC00, &_s10DeviceTypeV8RevisionVN);
    atomic_store(result, (unint64_t *)&qword_255740B90);
  }
  return result;
}

uint64_t _s10DeviceTypeV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2219CCA40 + 4 * byte_22268E8A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2219CCA74 + 4 * byte_22268E8A4[v4]))();
}

uint64_t sub_2219CCA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219CCA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219CCA84);
  return result;
}

uint64_t sub_2219CCA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219CCA98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2219CCA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219CCAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10DeviceTypeV10CodingKeysOMa()
{
  return &_s10DeviceTypeV10CodingKeysON;
}

ValueMetadata *_s10DeviceTypeV8RevisionVMa()
{
  return &_s10DeviceTypeV8RevisionVN;
}

ValueMetadata *_s10DeviceTypeV2IDVMa()
{
  return &_s10DeviceTypeV2IDVN;
}

unint64_t sub_2219CCAE4()
{
  unint64_t result;

  result = qword_255740B98;
  if (!qword_255740B98)
  {
    result = MEMORY[0x227676F2C](&unk_22268E9B4, &_s10DeviceTypeV2IDVN);
    atomic_store(result, (unint64_t *)&qword_255740B98);
  }
  return result;
}

unint64_t sub_2219CCB2C()
{
  unint64_t result;

  result = qword_255740BA0;
  if (!qword_255740BA0)
  {
    result = MEMORY[0x227676F2C](&unk_22268EA54, &_s10DeviceTypeV8RevisionVN);
    atomic_store(result, (unint64_t *)&qword_255740BA0);
  }
  return result;
}

unint64_t sub_2219CCB70(uint64_t a1)
{
  unint64_t result;

  result = sub_2219CC8A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2219CCB98()
{
  unint64_t result;

  result = qword_255740BA8;
  if (!qword_255740BA8)
  {
    result = MEMORY[0x227676F2C](&unk_22268EBD8, &_s10DeviceTypeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255740BA8);
  }
  return result;
}

unint64_t sub_2219CCBE0()
{
  unint64_t result;

  result = qword_255740BB0;
  if (!qword_255740BB0)
  {
    result = MEMORY[0x227676F2C](&unk_22268EAF4, &_s10DeviceTypeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255740BB0);
  }
  return result;
}

unint64_t sub_2219CCC28()
{
  unint64_t result;

  result = qword_255740BB8;
  if (!qword_255740BB8)
  {
    result = MEMORY[0x227676F2C](&unk_22268EB1C, &_s10DeviceTypeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255740BB8);
  }
  return result;
}

uint64_t sub_2219CCC6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2219CCD44()
{
  unint64_t result;

  result = qword_255740BC0;
  if (!qword_255740BC0)
  {
    result = MEMORY[0x227676F2C](&unk_22268EA1C, &_s10DeviceTypeV2IDVN);
    atomic_store(result, (unint64_t *)&qword_255740BC0);
  }
  return result;
}

unint64_t sub_2219CCD88()
{
  unint64_t result;

  result = qword_255740BC8;
  if (!qword_255740BC8)
  {
    result = MEMORY[0x227676F2C](&unk_22268EABC, &_s10DeviceTypeV8RevisionVN);
    atomic_store(result, (unint64_t *)&qword_255740BC8);
  }
  return result;
}

uint64_t sub_2219CCDCC()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if (objc_msgSend(v0, sel_discoveryController))
  {
    sub_222597158();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_22194F8FC((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    type metadata accessor for DiscoveryController(0);
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_221947E0C((uint64_t)v4);
    return 0;
  }
}

void *sub_2219CCE80(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_2225973B0())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x227674274](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2219CCFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_222596678();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_22191CBDC((unint64_t *)&qword_25573FF30, MEMORY[0x24BDCEA88]);
    v27 = sub_222596C90();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_22191CBDC(&qword_25573F350, MEMORY[0x24BDCEA98]);
      v31 = sub_222596CCC();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t static HasAliroAccessory.__derived_enum_equals(_:_:)(char a1, char a2)
{
  char v2;

  v2 = a1 == 2;
  if (a2 != 2)
    v2 = 0;
  if (a1 != 2 && a2 != 2)
    v2 = ((a1 & 1) == 0) ^ a2;
  return v2 & 1;
}

uint64_t sub_2219CD350(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

BOOL static ExpressSettings.__derived_struct_equals(_:_:)(int a1, unsigned int a2)
{
  return ((a1 ^ a2 | ((a1 ^ a2) >> 8)) & 1) == 0;
}

BOOL sub_2219CD3A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

void _s13HomeKitDaemon9ReaderKeyV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1)
{
  char v2;
  char v3;

  sub_2219CFDDC(*a1, a1[1]);
  if ((v2 & 1) != 0)
  {
    sub_2219CFDDC(a1[2], a1[3]);
    if ((v3 & 1) != 0)
      sub_2219CFDDC(a1[4], a1[5]);
  }
}

void sub_2219CD428(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = a1[2];
  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  sub_2219CFDDC(*a1, a1[1]);
  if ((v5 & 1) != 0)
  {
    sub_2219CFDDC(v1, v2);
    if ((v6 & 1) != 0)
      sub_2219CFDDC(v3, v4);
  }
}

uint64_t sub_2219CD4C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 445) = a5;
  *(_BYTE *)(v5 + 444) = a4;
  *(_QWORD *)(v5 + 528) = a3;
  *(_QWORD *)(v5 + 520) = a2;
  *(_QWORD *)(v5 + 512) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  *(_QWORD *)(v5 + 536) = swift_task_alloc();
  v6 = sub_222596678();
  *(_QWORD *)(v5 + 544) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 552) = v7;
  *(_QWORD *)(v5 + 560) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 + 568) = swift_task_alloc();
  *(_QWORD *)(v5 + 576) = swift_task_alloc();
  *(_QWORD *)(v5 + 584) = swift_task_alloc();
  *(_QWORD *)(v5 + 592) = swift_task_alloc();
  *(_QWORD *)(v5 + 600) = swift_task_alloc();
  return swift_task_switch();
}

id sub_2219CD590()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (id)v0[65];
  if (v1)
    v1 = objc_msgSend(v1, sel_integerValue);
  v0[76] = v1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_driver);
  v3 = objc_msgSend(v2, sel_homeManager);
  v0[77] = v3;

  v4 = objc_msgSend(v3, sel_homes);
  if (v4)
  {
    v5 = v4;
    sub_221917374(0, &qword_25573BF80);
    v6 = sub_222596E40();

  }
  else
  {
    v6 = 0;
  }
  v0[60] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740D68);
  sub_22259690C();
  v7 = v0[66];
  swift_bridgeObjectRelease();
  v8 = v0[59];
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v7;
  v10 = sub_2219CCE80(sub_2219D24FC, v9, v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v0[58] = v10;
  v15 = sub_221917374(0, &qword_25573BF80);
  sub_22259690C();

  v11 = (void *)v0[57];
  v0[78] = v11;
  result = objc_msgSend(v11, sel_walletKeyManager, v15);
  v0[79] = result;
  if (result)
  {
    v13 = result;
    v14 = sub_2225968C4();
    v0[80] = v14;
    v0[31] = v0 + 56;
    v0[26] = v0;
    v0[27] = sub_2219CD8E8;
    v0[48] = swift_continuation_init();
    v0[44] = MEMORY[0x24BDAC760];
    v0[45] = 0x40000000;
    v0[46] = sub_2219CF1B0;
    v0[47] = &block_descriptor_12;
    objc_msgSend(v13, sel_fetchWalletKeyColorOptionWithFlow_completion_, v14, v0 + 44);
    return (id)swift_continuation_await();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2219CD8E8()
{
  return swift_task_switch();
}

id sub_2219CD934()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  id result;
  void *v5;
  uint64_t v6;

  v1 = (void *)v0[80];
  v2 = (void *)v0[79];
  v3 = (void *)v0[78];
  v0[81] = v0[56];

  result = objc_msgSend(v3, sel_nfcReaderKeyManager);
  v0[82] = result;
  if (result)
  {
    v5 = result;
    v6 = sub_2225968C4();
    v0[83] = v6;
    v0[23] = v0 + 61;
    v0[18] = v0;
    v0[19] = sub_2219CDA30;
    v0[43] = swift_continuation_init();
    v0[39] = MEMORY[0x24BDAC760];
    v0[40] = 0x40000000;
    v0[41] = sub_2219CF1E0;
    v0[42] = &block_descriptor_3;
    objc_msgSend(v5, sel_fetchOrCreateReaderKeyOnQueueWithRequiresPrivateKey_flow_completion_, 0, v6, v0 + 39);
    return (id)swift_continuation_await();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2219CDA30()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 672) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_2219CDA90()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v1 = *(void **)(v0 + 664);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 624);
  v4 = *(void **)(v0 + 488);
  *(_QWORD *)(v0 + 680) = v4;

  v5 = objc_msgSend(v4, sel_publicKeyExternalRepresentation);
  v6 = sub_2225965A0();
  v8 = v7;

  v36 = v8;
  v37 = v6;
  *(_QWORD *)(v0 + 688) = v6;
  *(_QWORD *)(v0 + 696) = v8;
  v9 = objc_msgSend(v4, sel_identifier);
  v10 = sub_2225965A0();
  v12 = v11;

  v35 = v10;
  *(_QWORD *)(v0 + 704) = v10;
  *(_QWORD *)(v0 + 712) = v12;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v4, sel_publicKey);
  v15 = sub_2225965A0();
  v17 = v16;

  v18 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  sub_22190D550(v15, v17);
  v19 = objc_msgSend(v13, sel_identifier16BytesForKey_, v18);

  v20 = sub_2225965A0();
  v22 = v21;

  *(_QWORD *)(v0 + 720) = v20;
  *(_QWORD *)(v0 + 728) = v22;
  v23 = objc_msgSend(v3, sel_spiClientIdentifier);
  if (!v23)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 552) + 56))(*(_QWORD *)(v0 + 536), 1, 1, *(_QWORD *)(v0 + 544));
    goto LABEL_7;
  }
  v24 = v23;
  v25 = *(_QWORD *)(v0 + 592);
  v26 = *(_QWORD *)(v0 + 552);
  v27 = *(_QWORD *)(v0 + 544);
  v28 = *(_QWORD *)(v0 + 536);
  sub_222596648();

  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  *(_QWORD *)(v0 + 736) = v29;
  v29(v28, v25, v27);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v27);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v28, 1, v27) == 1)
  {
LABEL_7:
    v31 = *(void **)(v0 + 648);
    v32 = *(void **)(v0 + 624);
    v33 = *(void **)(v0 + 616);
    sub_221994B14(*(_QWORD *)(v0 + 536));
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v34 = 0xD000000000000013;
    *(_QWORD *)(v34 + 8) = 0x8000000222621370;
    *(_BYTE *)(v34 + 16) = 1;
    swift_willThrow();
    sub_22190D550(v37, v36);
    sub_22190D550(v35, v12);
    sub_22190D550(v20, v22);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v29(*(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 544));
  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 744) = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219CDDEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 752) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740D70);
  *v1 = v0;
  v1[1] = sub_2219CDE7C;
  return v4(v0 + 432, &unk_255741E28, 0, v2);
}

uint64_t sub_2219CDE7C()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 760) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_2219CDEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 432);
  if (*(_BYTE *)(v0 + 441))
    v1 = 1;
  v2 = *(_QWORD *)(v0 + 760);
  *(_BYTE *)(v0 + 446) = (*(_BYTE *)(v0 + 441) | *(_BYTE *)(v0 + 440)) & 1;
  *(_QWORD *)(v0 + 776) = v1;
  *(_QWORD *)(v0 + 768) = v2;
  return swift_task_switch();
}

uint64_t sub_2219CDF2C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 446) = 1;
  *(_QWORD *)(v0 + 776) = 1;
  *(_QWORD *)(v0 + 768) = 0;
  return swift_task_switch();
}

id sub_2219CDF50()
{
  uint64_t v0;
  id v1;
  id result;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedRegistry);
  result = HMDBulletinBundleIdentifier();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(v1, sel_applicationInfoForBundleIdentifier_, result);
    *(_QWORD *)(v0 + 784) = v4;

    if (v4)
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedBulletinBoard);
    *(_QWORD *)(v0 + 792) = v5;
    if (v5)
    {
      v6 = v5;
      *(_QWORD *)(v0 + 56) = v0 + 442;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_2219CE118;
      *(_QWORD *)(v0 + 304) = swift_continuation_init();
      *(_QWORD *)(v0 + 272) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 280) = 0x40000000;
      *(_QWORD *)(v0 + 288) = sub_2219FA2A0;
      *(_QWORD *)(v0 + 296) = &block_descriptor_9;
      objc_msgSend(v6, sel_fetchAreUserNotificationsEnabledWithCompletion_, v0 + 272);
    }
    else
    {
      *(_BYTE *)(v0 + 447) = 0;
      v7 = objc_msgSend(objc_allocWithZone((Class)HMDHomeWalletDataSource), sel_init);
      *(_QWORD *)(v0 + 800) = v7;
      *(_QWORD *)(v0 + 120) = v0 + 443;
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_2219CE230;
      *(_QWORD *)(v0 + 424) = swift_continuation_init();
      *(_QWORD *)(v0 + 392) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 400) = 0x40000000;
      *(_QWORD *)(v0 + 408) = sub_2219FA2A0;
      *(_QWORD *)(v0 + 416) = &block_descriptor_5;
      objc_msgSend(v7, sel_canNotifyAboutExpressModeWithCompletion_, v0 + 392);
    }
    return (id)swift_continuation_await();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2219CE118()
{
  return swift_task_switch();
}

uint64_t sub_2219CE164()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = *(_BYTE *)(v0 + 442);

  *(_BYTE *)(v0 + 447) = v1;
  v2 = objc_msgSend(objc_allocWithZone((Class)HMDHomeWalletDataSource), sel_init);
  *(_QWORD *)(v0 + 800) = v2;
  *(_QWORD *)(v0 + 120) = v0 + 443;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_2219CE230;
  *(_QWORD *)(v0 + 424) = swift_continuation_init();
  *(_QWORD *)(v0 + 392) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 400) = 0x40000000;
  *(_QWORD *)(v0 + 408) = sub_2219FA2A0;
  *(_QWORD *)(v0 + 416) = &block_descriptor_5;
  objc_msgSend(v2, sel_canNotifyAboutExpressModeWithCompletion_, v0 + 392);
  return swift_continuation_await();
}

uint64_t sub_2219CE230()
{
  return swift_task_switch();
}

id sub_2219CE27C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id result;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = *(void **)(v0 + 800);
  v2 = *(void **)(v0 + 624);
  *(_BYTE *)(v0 + 896) = *(_BYTE *)(v0 + 443);

  v3 = objc_msgSend(v2, sel_currentUser);
  *(_QWORD *)(v0 + 808) = v3;
  if (!v3)
  {
    v25 = *(_QWORD *)(v0 + 720);
    v26 = *(_QWORD *)(v0 + 728);
    v13 = *(_QWORD *)(v0 + 704);
    v14 = *(_QWORD *)(v0 + 696);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = *(void **)(v0 + 680);
    v17 = *(void **)(v0 + 648);
    v18 = *(void **)(v0 + 624);
    v19 = *(void **)(v0 + 616);
    v21 = *(_QWORD *)(v0 + 552);
    v22 = *(_QWORD *)(v0 + 712);
    v23 = *(_QWORD *)(v0 + 544);
    v24 = *(_QWORD *)(v0 + 600);
    sub_2219D2518();
    swift_allocError();
    *v20 = xmmword_22268ECF0;
    swift_willThrow();

    sub_22190D550(v15, v14);
    sub_22190D550(v13, v22);
    sub_22190D550(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(void **)(v0 + 624);
  v5 = objc_msgSend(v3, sel_uuid);
  sub_222596648();

  result = objc_msgSend(v4, sel_walletKeyManager);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = result;
  v8 = *(void **)(v0 + 616);
  *(_BYTE *)(v0 + 897) = objc_msgSend(result, sel_shouldRollWalletKeyAfterMigration);

  v9 = objc_msgSend(v8, sel_homeUUIDsWithAutoAddWalletKeySuppressed);
  sub_22191CBDC((unint64_t *)&qword_25573FF30, MEMORY[0x24BDCEA88]);
  *(_QWORD *)(v0 + 816) = sub_222596F9C();

  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  *(_BYTE *)(v0 + 898) = objc_msgSend(v10, sel_isLostOrNeedsExitAuth);

  result = objc_msgSend((id)objc_opt_self(), sel_systemStore);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v11 = result;
  *(_QWORD *)(v0 + 824) = objc_msgSend(result, sel_getPreferredHH2ControllerKey);

  if (qword_25573B390 != -1)
    swift_once();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 832) = v12;
  *v12 = v0;
  v12[1] = sub_2219CE5A0;
  return (id)ACWGKeyManager.getIssuerKeyPairExternalRepresentationFromKeychain()();
}

uint64_t sub_2219CE5A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 840) = a1;
  *(_QWORD *)(v3 + 848) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219CE600()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  unsigned int v4;
  unsigned __int8 v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  id v41;
  id v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  BOOL v56;
  char v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  char v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  unsigned __int8 v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  unint64_t v90;
  unsigned __int8 v91;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void **)(v0 + 624);
  v91 = objc_msgSend(v2, sel_hasAnyAccessoryWithUnifiedAccessWalletKeySupport);
  v3 = objc_msgSend(v2, sel_hasAnyAccessoryWithACPWalletKeySupport);
  v4 = objc_msgSend(v2, sel_hasAnyAccessoryWithACBWalletKeySupport);
  v5 = objc_msgSend(v2, sel_hasAnyAccessoryWithWalletKeyAndAccessCodeSupport);
  v6 = objc_msgSend(v2, sel_backingStore);
  *(_QWORD *)(v0 + 504) = v6;
  v45 = sub_221917374(0, &qword_25573C1A0);
  sub_22259690C();
  if (v1)
  {
    v7 = *(_QWORD *)(v0 + 848);
    v8 = *(_QWORD *)(v0 + 840);
    v71 = *(void **)(v0 + 824);
    v89 = v6;
    v9 = *(void **)(v0 + 808);
    v83 = *(_QWORD *)(v0 + 720);
    v85 = *(_QWORD *)(v0 + 728);
    v75 = *(_QWORD *)(v0 + 704);
    v77 = *(_QWORD *)(v0 + 712);
    v73 = *(_QWORD *)(v0 + 696);
    v10 = *(_QWORD *)(v0 + 688);
    v11 = *(void **)(v0 + 648);
    v12 = *(void **)(v0 + 624);
    v13 = *(void **)(v0 + 616);
    v87 = *(_QWORD *)(v0 + 600);
    v79 = *(_QWORD *)(v0 + 552);
    v81 = *(_QWORD *)(v0 + 584);
    v14 = *(_QWORD *)(v0 + 544);

    swift_bridgeObjectRelease();
    sub_22191DE10(v8, v7);

    sub_22190D550(v10, v73);
    sub_22190D550(v75, v77);
    sub_22190D550(v83, v85);

    v15 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    v15(v81, v14);
    v15(v87, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v88 = *(_QWORD *)(v0 + 840);
    v90 = *(_QWORD *)(v0 + 848);
    v86 = *(void **)(v0 + 824);
    v84 = *(_BYTE *)(v0 + 898);
    v67 = *(_BYTE *)(v0 + 896);
    v65 = *(_BYTE *)(v0 + 897);
    v66 = *(_BYTE *)(v0 + 447);
    v17 = *(_QWORD *)(v0 + 784);
    v64 = *(_BYTE *)(v0 + 446);
    v62 = *(_QWORD *)(v0 + 776);
    v63 = *(_QWORD *)(v0 + 816);
    v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
    v80 = *(_QWORD *)(v0 + 728);
    v74 = *(_QWORD *)(v0 + 712);
    v76 = *(_QWORD *)(v0 + 720);
    v69 = *(_QWORD *)(v0 + 696);
    v70 = *(_QWORD *)(v0 + 704);
    v68 = *(_QWORD *)(v0 + 688);
    v78 = *(void **)(v0 + 648);
    v61 = *(_QWORD *)(v0 + 608);
    v18 = *(_QWORD *)(v0 + 592);
    v50 = *(_QWORD *)(v0 + 584);
    v51 = *(_QWORD *)(v0 + 600);
    v19 = *(_QWORD *)(v0 + 576);
    v48 = v18;
    v49 = v19;
    v20 = *(_QWORD *)(v0 + 568);
    v52 = *(_QWORD *)(v0 + 560);
    v54 = v20;
    v72 = v5;
    v21 = *(_QWORD *)(v0 + 544);
    v57 = *(_BYTE *)(v0 + 445);
    v55 = *(_BYTE *)(v0 + 444);
    v46 = *(_QWORD *)(v0 + 528);
    v47 = *(_QWORD *)(v0 + 552);
    v22 = *(_QWORD *)(v0 + 520);

    v56 = v22 == 0;
    if (v3)
      v23 = 0;
    else
      v23 = 2;
    if (v4)
      v23 = 1;
    v59 = v23;
    v60 = v17 != 0;
    v24 = *(void **)(v0 + 496);
    v82 = objc_msgSend(v24, sel_context, v45);
    *(_QWORD *)(v0 + 856) = v82;

    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v25(v18, v46, v21);
    v25(v19, v50, v21);
    v25(v20, v51, v21);
    v26 = *(unsigned __int8 *)(v47 + 80);
    v27 = (v26 + 16) & ~v26;
    v28 = (v52 + v26 + v27) & ~v26;
    v29 = (v28 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v29 + 18) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 18) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v26 + v31 + 9) & ~v26;
    v33 = (v32 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v33 + 75) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject();
    *(_QWORD *)(v0 + 864) = v34;
    v58(v34 + v27, v48, v21);
    v58(v34 + v28, v49, v21);
    v35 = v34 + v29;
    *(_QWORD *)v35 = v63;
    *(_BYTE *)(v35 + 8) = v55;
    *(_BYTE *)(v35 + 9) = v65;
    *(_BYTE *)(v35 + 10) = v57;
    v36 = v34 + v30;
    *(_QWORD *)v36 = v62;
    *(_BYTE *)(v36 + 8) = v64;
    *(_BYTE *)(v36 + 9) = v66;
    *(_BYTE *)(v36 + 10) = v67;
    v37 = v34 + v31;
    *(_QWORD *)v37 = v61;
    *(_BYTE *)(v37 + 8) = v56;
    v58(v34 + v32, v54, v21);
    v38 = v34 + v33;
    *(_QWORD *)v38 = v68;
    *(_QWORD *)(v38 + 8) = v69;
    *(_QWORD *)(v38 + 16) = v70;
    *(_QWORD *)(v38 + 24) = v74;
    *(_QWORD *)(v38 + 32) = v76;
    *(_QWORD *)(v38 + 40) = v80;
    *(_BYTE *)(v38 + 48) = v60;
    *(_BYTE *)(v38 + 49) = v84;
    v39 = v34 + ((v33 + 57) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v39 = v78;
    *(_BYTE *)(v39 + 8) = v91;
    *(_BYTE *)(v39 + 9) = v59;
    *(_BYTE *)(v39 + 10) = v72;
    *(_QWORD *)(v34 + v53) = v86;
    v40 = (uint64_t *)(v34 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v40 = v88;
    v40[1] = v90;
    sub_22190D5DC(v68, v69);
    sub_22190D5DC(v70, v74);
    sub_22190D5DC(v76, v80);
    v41 = v78;
    v42 = v86;
    sub_22191DDFC(v88, v90);
    v43 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v43;
    v43[2] = v82;
    v43[3] = sub_2219D269C;
    v43[4] = v34;
    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 880) = v44;
    type metadata accessor for HomePassState(0);
    *v44 = v0;
    v44[1] = sub_2219CEC14;
    return sub_222597848();
  }
}

uint64_t sub_2219CEC14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 888) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2219CEC8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v1 = *(void **)(v0 + 856);
  v2 = *(_QWORD *)(v0 + 840);
  v3 = *(void **)(v0 + 808);
  v19 = *(_QWORD *)(v0 + 720);
  v20 = *(_QWORD *)(v0 + 728);
  v17 = *(_QWORD *)(v0 + 704);
  v18 = *(_QWORD *)(v0 + 712);
  v14 = *(void **)(v0 + 824);
  v15 = *(_QWORD *)(v0 + 696);
  v12 = *(_QWORD *)(v0 + 848);
  v13 = *(_QWORD *)(v0 + 688);
  v4 = *(void **)(v0 + 648);
  v5 = *(void **)(v0 + 624);
  v6 = *(void **)(v0 + 616);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 584);
  v16 = *(_QWORD *)(v0 + 552);
  v9 = *(_QWORD *)(v0 + 544);

  sub_22191DE10(v2, v12);
  sub_22190D550(v13, v15);
  sub_22190D550(v17, v18);
  sub_22190D550(v19, v20);
  v10 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v10(v8, v9);
  v10(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CEDEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *(void **)(v0 + 856);
  v2 = *(_QWORD *)(v0 + 840);
  v3 = *(void **)(v0 + 808);
  v19 = *(_QWORD *)(v0 + 720);
  v17 = *(_QWORD *)(v0 + 712);
  v16 = *(_QWORD *)(v0 + 704);
  v13 = *(void **)(v0 + 824);
  v14 = *(_QWORD *)(v0 + 696);
  v11 = *(_QWORD *)(v0 + 848);
  v12 = *(_QWORD *)(v0 + 688);
  v4 = *(void **)(v0 + 680);
  v5 = *(void **)(v0 + 648);
  v6 = *(void **)(v0 + 624);
  v7 = *(void **)(v0 + 616);
  v20 = *(_QWORD *)(v0 + 600);
  v21 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 552);
  v8 = *(_QWORD *)(v0 + 544);
  swift_release();
  swift_task_dealloc();

  sub_22191DE10(v2, v11);
  sub_22190D550(v12, v14);
  sub_22190D550(v16, v17);
  sub_22190D550(v19, v21);
  v9 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v9(v18, v8);
  v9(v20, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CEF68()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 664);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 624);
  v5 = *(void **)(v0 + 616);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219CF020(id *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_222596678();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(*a1, sel_uuid);
  if (v12)
  {
    v13 = v12;
    sub_222596648();

    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v14, 1, v8);
  sub_22259690C();
  sub_221994B14((uint64_t)v7);
  if (!v2)
  {
    a2 = sub_22259663C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return a2 & 1;
}

uint64_t sub_2219CF1B0(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

uint64_t sub_2219CF1E0(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2219CF26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unsigned __int8 a10, unsigned __int8 a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, _OWORD *a15, unsigned __int8 a16, unsigned __int8 a17, void *a18, unsigned __int8 a19, unsigned __int8 a20,unsigned __int8 a21,void *a22,unint64_t a23,unint64_t a24)
{
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void *v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t result;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  void *v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _OWORD *v84;
  char *v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  void (*v91)(_BYTE *, uint64_t, uint64_t);
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v101;
  int *v102;
  _OWORD *v103;
  uint64_t *v104;
  __int128 v105;
  _QWORD *v106;
  char *v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  unint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  _BYTE v117[12];
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  uint64_t v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unsigned int v135;
  id v136;
  _OWORD *v137;
  int *v138;
  _BYTE *v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  char *v160;
  void *v161;

  v151 = a6;
  v152 = a8;
  v150 = a7;
  v146 = a5;
  v149 = a4;
  v148 = a3;
  v154 = a2;
  v145 = a9;
  v155 = sub_222596678();
  v153 = *(_QWORD *)(v155 - 8);
  v25 = MEMORY[0x24BDAC7A8](v155);
  v27 = &v117[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = &v117[-v29];
  MEMORY[0x24BDAC7A8](v28);
  v32 = &v117[-v31];
  v33 = type metadata accessor for HomePassData(0);
  MEMORY[0x24BDAC7A8](v33);
  v35 = &v117[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = (void *)objc_opt_self();
  v147 = a1;
  v37 = (void *)sub_222596630();
  v38 = objc_msgSend(v36, sel_findHomeWithModelID_, v37);

  v157 = (uint64_t)v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740DE0);
  v39 = v156;
  sub_22259690C();
  if (v39)
    return swift_unknownObjectRelease();
  v142 = v27;
  v143 = "mePassState.swift";
  v156 = "MatterDeviceType(0x";
  v140 = v32;
  v141 = v30;
  v138 = (int *)v33;
  v139 = v35;
  v144 = 0;
  swift_unknownObjectRelease();
  v41 = v159;
  v42 = objc_msgSend(v159, sel_name);
  if (v42)
  {
    v43 = v42;
    v44 = sub_222596CF0();
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = v155;
  v157 = v44;
  v158 = v46;
  v48 = v144;
  sub_22259690C();
  if (v48)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v49 = v159;
  v143 = v160;
  v50 = objc_msgSend(v41, sel_hasOnboardedForWalletKey);
  v136 = v49;
  if (v50)
  {
    v51 = v50;
    v135 = objc_msgSend(v50, sel_BOOLValue);

  }
  else
  {
    v135 = 0;
  }
  v52 = (void *)sub_222596630();
  v53 = objc_msgSend(v41, sel_findHomeMemberWithUUID_, v52);

  v157 = (uint64_t)v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740DE8);
  sub_22259690C();
  swift_unknownObjectRelease();
  v54 = v159;
  v55 = objc_msgSend(v41, sel_matCredGRK);
  if (!v55)
  {
    swift_bridgeObjectRelease();
    sub_2219344F8();
    swift_allocError();
    *(_OWORD *)v88 = xmmword_22268ED00;
    *(_BYTE *)(v88 + 16) = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  v56 = v55;
  v129 = v54;
  v131 = sub_2225965A0();
  v130 = v57;

  v58 = objc_msgSend(v41, sel_accessories);
  v144 = 0;
  v128 = v41;
  if (v58)
  {
    v59 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255740E50);
    v60 = sub_222596E40();

    v61 = v142;
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_2225973B0();
      v62 = result;
      if (result)
        goto LABEL_15;
    }
    else
    {
      v62 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v62)
      {
LABEL_15:
        if (v62 < 1)
        {
          __break(1u);
          return result;
        }
        v63 = 0;
        v156 = (char *)MEMORY[0x24BEE4AF8];
        v64 = v60 & 0xC000000000000001;
        v132 = v60;
        v133 = v60 & 0xC000000000000001;
        do
        {
          if (v64)
            MEMORY[0x227674274](v63, v60);
          else
            swift_unknownObjectRetain();
          v161 = &unk_255852958;
          v65 = swift_dynamicCastObjCProtocolConditional();
          if (v65)
          {
            v66 = (void *)v65;
            swift_unknownObjectRetain();
            v67 = objc_msgSend(v66, sel_preexistingMatCredGRK);
            if (v67)
            {
              v68 = v67;
              v69 = sub_2225965A0();
              v71 = v70;

              v72 = objc_msgSend(v66, sel_preexistingMatCredRGI);
              if (v72)
              {
                v73 = v72;
                v137 = (_OWORD *)v71;
                v74 = sub_2225965A0();
                v76 = v75;

                v77 = objc_msgSend(v66, sel_preexistingMatCredRPK);
                if (v77)
                {
                  v78 = v77;
                  v79 = sub_2225965A0();
                  v134 = v80;
                  swift_unknownObjectRelease_n();

                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v156 = (char *)sub_221991C00(0, *((_QWORD *)v156 + 2) + 1, 1, v156);
                  v81 = v74;
                  v83 = *((_QWORD *)v156 + 2);
                  v82 = *((_QWORD *)v156 + 3);
                  v84 = v137;
                  if (v83 >= v82 >> 1)
                    v156 = (char *)sub_221991C00((_QWORD *)(v82 > 1), v83 + 1, 1, v156);
                  v85 = v156;
                  *((_QWORD *)v156 + 2) = v83 + 1;
                  v86 = &v85[48 * v83];
                  *((_QWORD *)v86 + 4) = v81;
                  *((_QWORD *)v86 + 5) = v76;
                  v87 = v134;
                  *((_QWORD *)v86 + 6) = v79;
                  *((_QWORD *)v86 + 7) = v87;
                  *((_QWORD *)v86 + 8) = v69;
                  *((_QWORD *)v86 + 9) = v84;
                  v60 = v132;
                  v64 = v133;
                  v61 = v142;
                }
                else
                {
                  swift_unknownObjectRelease();
                  sub_22190D550(v74, v76);
                  sub_22190D550(v69, (unint64_t)v137);
                  swift_unknownObjectRelease();
                  v61 = v142;
                  v64 = v133;
                }
              }
              else
              {
                swift_unknownObjectRelease();
                sub_22190D550(v69, v71);
                swift_unknownObjectRelease();
                v61 = v142;
              }
            }
            else
            {
              swift_unknownObjectRelease_n();
              v61 = v142;
            }
          }
          else
          {
            swift_unknownObjectRelease();
          }
          ++v63;
        }
        while (v62 != v63);
        goto LABEL_38;
      }
    }
    v156 = (char *)MEMORY[0x24BEE4AF8];
LABEL_38:
    swift_bridgeObjectRelease_n();
    v47 = v155;
    goto LABEL_39;
  }
  v156 = (char *)MEMORY[0x24BEE4AF8];
  v61 = v142;
LABEL_39:
  v137 = a15;
  v134 = a24;
  v133 = a23;
  v124 = a21;
  v123 = a20;
  v122 = a19;
  v121 = a17;
  v120 = a16;
  LODWORD(v132) = a13;
  v127 = a12;
  v126 = a11;
  v125 = a10;
  v89 = (id)systemInfo();
  v119 = objc_msgSend(v89, sel_isMigrating);

  v118 = objc_msgSend((id)objc_opt_self(), sel_isWalletVisible);
  v90 = v153;
  v91 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v153 + 16);
  v91(v140, v147, v47);
  v91(v141, a14, v47);
  v91(v61, v154, v47);
  v92 = productClass();
  v93 = objc_msgSend(a18, sel_integerValue);
  v94 = objc_msgSend(v129, sel_accessCode);
  v95 = (uint64_t)v94;
  if (v94)
  {
    v96 = objc_msgSend(v94, sel_accessCode);
    swift_unknownObjectRelease();
    if (v96)
    {
      v97 = sub_222596CF0();
      v95 = v98;

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v97 = 0;
      v95 = 0;
    }
    v90 = v153;
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v97 = 0;
  }
  v99 = (uint64_t)v139;
  v100 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v90 + 32);
  v101 = v155;
  v100(v139, v140, v155);
  v102 = v138;
  v100((_BYTE *)(v99 + v138[5]), v141, v101);
  v100((_BYTE *)(v99 + v102[6]), v142, v101);
  v103 = (_OWORD *)(v99 + v102[7]);
  v104 = (uint64_t *)v137;
  v105 = v137[1];
  *v103 = *v137;
  v103[1] = v105;
  v103[2] = *((_OWORD *)v104 + 2);
  v106 = (_QWORD *)(v99 + v102[8]);
  v107 = v143;
  *v106 = v136;
  v106[1] = v107;
  *(_QWORD *)(v99 + v102[9]) = v92;
  *(_BYTE *)(v99 + v102[10]) = v120 & 1;
  *(_BYTE *)(v99 + v102[11]) = v121 & 1;
  *(_QWORD *)(v99 + v102[12]) = v93;
  v108 = (uint64_t *)(v99 + v102[13]);
  *v108 = v97;
  v108[1] = v95;
  v109 = (uint64_t *)(v99 + v102[14]);
  v110 = v130;
  *v109 = v131;
  v109[1] = v110;
  *(_QWORD *)(v99 + v102[15]) = v156;
  *(_BYTE *)(v99 + v102[16]) = v122 & 1;
  *(_BYTE *)(v99 + v102[17]) = v123;
  *(_BYTE *)(v99 + v102[18]) = v124 & 1;
  *(_QWORD *)(v99 + v102[19]) = a22;
  v111 = (unint64_t *)(v99 + v102[20]);
  v112 = v133;
  v113 = v134;
  *v111 = v133;
  v111[1] = v113;
  v114 = v145;
  *(_BYTE *)(v145 + 8) = v119;
  *(_BYTE *)(v114 + 9) = v135;
  *(_BYTE *)(v114 + 10) = v149 & 1;
  *(_BYTE *)(v114 + 11) = v146 & 1;
  *(_BYTE *)(v114 + 12) = v151 & 1;
  *(_BYTE *)(v114 + 13) = v118;
  *(_QWORD *)(v114 + 16) = v150;
  *(_BYTE *)(v114 + 24) = v152 & 1;
  *(_BYTE *)(v114 + 25) = v125 & 1;
  *(_BYTE *)(v114 + 26) = v126 & 1;
  *(_QWORD *)(v114 + 32) = v127;
  *(_BYTE *)(v114 + 40) = v132 & 1;
  *(_QWORD *)v114 = v148;
  v115 = type metadata accessor for HomePassState(0);
  sub_22193D800(v99, v114 + *(int *)(v115 + 60));
  v116 = a22;
  sub_22191DDFC(v112, v113);
  sub_2219D27FC(v104);
  return swift_bridgeObjectRetain();
}

void sub_2219CFDDC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2219CFE28()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2219CFE5C + dword_2219D0034[v0 >> 62]))();
}

uint64_t sub_2219CFE6C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s13HomeKitDaemon0A8PassDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;

  if ((sub_22259663C() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for HomePassData(0);
  if ((sub_22259663C() & 1) == 0)
    return 0;
  if ((sub_22259663C() & 1) == 0)
    return 0;
  v5 = v4[7];
  v6 = *(_QWORD *)(a1 + v5 + 16);
  v7 = *(_QWORD *)(a1 + v5 + 24);
  v8 = *(_QWORD *)(a1 + v5 + 40);
  v43 = *(_QWORD *)(a1 + v5 + 32);
  sub_2219CFDDC(*(_QWORD *)(a1 + v5), *(_QWORD *)(a1 + v5 + 8));
  if ((v9 & 1) == 0)
    return 0;
  sub_2219CFDDC(v6, v7);
  if ((v10 & 1) == 0)
    return 0;
  sub_2219CFDDC(v43, v8);
  if ((v11 & 1) == 0)
    return 0;
  v12 = v4[8];
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  if (v13 == *v15 && v14 == v15[1] || (v16 = sub_2225976E0(), result = 0, (v16 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + v4[9]) != *(_QWORD *)(a2 + v4[9])
      || *(unsigned __int8 *)(a1 + v4[10]) != *(unsigned __int8 *)(a2 + v4[10])
      || *(unsigned __int8 *)(a1 + v4[11]) != *(unsigned __int8 *)(a2 + v4[11])
      || *(_QWORD *)(a1 + v4[12]) != *(_QWORD *)(a2 + v4[12]))
    {
      return 0;
    }
    v18 = v4[13];
    v19 = (_QWORD *)(a1 + v18);
    v20 = *(_QWORD *)(a1 + v18 + 8);
    v21 = (_QWORD *)(a2 + v18);
    v22 = v21[1];
    if (v20)
    {
      if (!v22)
        return 0;
      if (*v19 != *v21 || v20 != v22)
      {
        v23 = sub_2225976E0();
        result = 0;
        if ((v23 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    sub_2219CFDDC(*(_QWORD *)(a1 + v4[14]), *(_QWORD *)(a1 + v4[14] + 8));
    if ((v24 & 1) == 0
      || (sub_221955D38(*(_QWORD *)(a1 + v4[15]), *(_QWORD *)(a2 + v4[15])) & 1) == 0
      || *(unsigned __int8 *)(a1 + v4[16]) != *(unsigned __int8 *)(a2 + v4[16]))
    {
      return 0;
    }
    v25 = v4[17];
    v26 = *(unsigned __int8 *)(a1 + v25);
    v27 = *(unsigned __int8 *)(a2 + v25);
    if (v26 == 2)
    {
      if (v27 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v28 = (v26 & 1) == 0;
      if (v27 == 2 || ((v28 ^ v27) & 1) == 0)
        return result;
    }
    if (*(unsigned __int8 *)(a1 + v4[18]) == *(unsigned __int8 *)(a2 + v4[18]))
    {
      v29 = v4[19];
      v30 = *(void **)(a1 + v29);
      v31 = *(void **)(a2 + v29);
      if (v30)
      {
        if (!v31)
          return 0;
        sub_221917374(0, (unint64_t *)&unk_255740EC0);
        v32 = v31;
        v33 = v30;
        v34 = sub_2225970EC();

        if ((v34 & 1) == 0)
          return 0;
      }
      else if (v31)
      {
        return 0;
      }
      v35 = v4[20];
      v36 = *(_QWORD *)(a1 + v35);
      v37 = *(_QWORD *)(a1 + v35 + 8);
      v38 = (uint64_t *)(a2 + v35);
      v39 = *v38;
      v40 = v38[1];
      if (v37 >> 60 == 15)
      {
        if (v40 >> 60 == 15)
          return 1;
        goto LABEL_41;
      }
      if (v40 >> 60 == 15)
      {
LABEL_41:
        sub_22191DDFC(v36, v37);
        sub_22191DDFC(v39, v40);
        sub_22191DE10(v36, v37);
        sub_22191DE10(v39, v40);
        return 0;
      }
      sub_22191DDFC(v36, v37);
      sub_22191DDFC(v39, v40);
      sub_2219CFDDC(v36, v37);
      v42 = v41;
      sub_22191DE10(v39, v40);
      sub_22191DE10(v36, v37);
      if ((v42 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s13HomeKitDaemon0A9PassStateV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v9;

  if ((sub_2219CCFA0(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)
    || *(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9)
    || *(unsigned __int8 *)(a1 + 10) != *(unsigned __int8 *)(a2 + 10)
    || *(unsigned __int8 *)(a1 + 11) != *(unsigned __int8 *)(a2 + 11)
    || *(unsigned __int8 *)(a1 + 12) != *(unsigned __int8 *)(a2 + 12)
    || *(unsigned __int8 *)(a1 + 13) != *(unsigned __int8 *)(a2 + 13))
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    if (v4)
    {
      if (!v5)
        v6 = 0;
      if (v6 != 1)
        return 0;
    }
    else
    {
      if (v5)
        LOBYTE(v6) = 0;
      if ((v6 & 1) == 0)
        return 0;
    }
  }
  else
  {
    if (v4 != v5)
      LOBYTE(v6) = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  if (*(unsigned __int8 *)(a1 + 25) != *(unsigned __int8 *)(a2 + 25)
    || *(unsigned __int8 *)(a1 + 26) != *(unsigned __int8 *)(a2 + 26))
  {
    return 0;
  }
  v7 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v7 = 1;
    if ((v7 & 1) != 0)
      return 0;
  }
  v9 = *(int *)(type metadata accessor for HomePassState(0) + 60);
  return _s13HomeKitDaemon0A8PassDataV23__derived_struct_equalsySbAC_ACtFZ_0(a1 + v9, a2 + v9);
}

uint64_t initializeBufferWithCopyOfBuffer for HomePassState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  unint64_t v39;
  id v40;
  uint64_t v41;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_WORD *)(a1 + 12) = *((_WORD *)a2 + 6);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v6 = *(int *)(a3 + 60);
    v7 = (uint64_t)a2 + v6;
    v8 = a1 + v6;
    *(_QWORD *)(a1 + 32) = a2[4];
    v9 = sub_222596678();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v8, v7, v9);
    v11 = (int *)type metadata accessor for HomePassData(0);
    v10(v8 + v11[5], v7 + v11[5], v9);
    v10(v8 + v11[6], v7 + v11[6], v9);
    v12 = v11[7];
    v13 = (uint64_t *)(v8 + v12);
    v14 = (_QWORD *)(v7 + v12);
    v15 = *(_QWORD *)(v7 + v12);
    v16 = *(_QWORD *)(v7 + v12 + 8);
    sub_22190D5DC(v15, v16);
    *v13 = v15;
    v13[1] = v16;
    v17 = v14[2];
    v18 = v14[3];
    sub_22190D5DC(v17, v18);
    v13[2] = v17;
    v13[3] = v18;
    v19 = v14[4];
    v20 = v14[5];
    sub_22190D5DC(v19, v20);
    v13[4] = v19;
    v13[5] = v20;
    v21 = v11[8];
    v22 = (_QWORD *)(v8 + v21);
    v23 = (_QWORD *)(v7 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v7 + v11[9]);
    *(_BYTE *)(v8 + v11[10]) = *(_BYTE *)(v7 + v11[10]);
    *(_BYTE *)(v8 + v11[11]) = *(_BYTE *)(v7 + v11[11]);
    *(_QWORD *)(v8 + v11[12]) = *(_QWORD *)(v7 + v11[12]);
    v25 = v11[13];
    v26 = (_QWORD *)(v8 + v25);
    v27 = (_QWORD *)(v7 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v11[14];
    v30 = (uint64_t *)(v8 + v29);
    v31 = (uint64_t *)(v7 + v29);
    v32 = *v31;
    v33 = v31[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22190D5DC(v32, v33);
    *v30 = v32;
    v30[1] = v33;
    *(_QWORD *)(v8 + v11[15]) = *(_QWORD *)(v7 + v11[15]);
    *(_BYTE *)(v8 + v11[16]) = *(_BYTE *)(v7 + v11[16]);
    *(_BYTE *)(v8 + v11[17]) = *(_BYTE *)(v7 + v11[17]);
    *(_BYTE *)(v8 + v11[18]) = *(_BYTE *)(v7 + v11[18]);
    v34 = v11[19];
    v35 = *(void **)(v7 + v34);
    *(_QWORD *)(v8 + v34) = v35;
    v36 = v11[20];
    v37 = v8 + v36;
    v38 = (_OWORD *)(v7 + v36);
    v39 = *(_QWORD *)(v7 + v36 + 8);
    swift_bridgeObjectRetain();
    v40 = v35;
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)v37 = *v38;
    }
    else
    {
      v41 = *(_QWORD *)v38;
      sub_22190D5DC(v41, v39);
      *(_QWORD *)v37 = v41;
      *(_QWORD *)(v37 + 8) = v39;
    }
  }
  return v5;
}

uint64_t type metadata accessor for HomePassData(uint64_t a1)
{
  return sub_221926060(a1, qword_255740CE0);
}

void destroy for HomePassState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 60);
  v5 = sub_222596678();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (int *)type metadata accessor for HomePassData(0);
  v6(v4 + v7[5], v5);
  v6(v4 + v7[6], v5);
  v8 = v4 + v7[7];
  sub_22190D550(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  sub_22190D550(*(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24));
  sub_22190D550(*(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22190D550(*(_QWORD *)(v4 + v7[14]), *(_QWORD *)(v4 + v7[14] + 8));
  swift_bridgeObjectRelease();

  v9 = (uint64_t *)(v4 + v7[20]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_22190D550(*v9, v10);
}

uint64_t initializeWithCopy for HomePassState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  unint64_t v37;
  id v38;
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 60);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_222596678();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  v9 = (int *)type metadata accessor for HomePassData(0);
  v8(v5 + v9[5], v6 + v9[5], v7);
  v8(v5 + v9[6], v6 + v9[6], v7);
  v10 = v9[7];
  v11 = (uint64_t *)(v5 + v10);
  v12 = (_QWORD *)(v6 + v10);
  v13 = *(_QWORD *)(v6 + v10);
  v14 = *(_QWORD *)(v6 + v10 + 8);
  sub_22190D5DC(v13, v14);
  *v11 = v13;
  v11[1] = v14;
  v15 = v12[2];
  v16 = v12[3];
  sub_22190D5DC(v15, v16);
  v11[2] = v15;
  v11[3] = v16;
  v17 = v12[4];
  v18 = v12[5];
  sub_22190D5DC(v17, v18);
  v11[4] = v17;
  v11[5] = v18;
  v19 = v9[8];
  v20 = (_QWORD *)(v5 + v19);
  v21 = (_QWORD *)(v6 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_QWORD *)(v5 + v9[9]) = *(_QWORD *)(v6 + v9[9]);
  *(_BYTE *)(v5 + v9[10]) = *(_BYTE *)(v6 + v9[10]);
  *(_BYTE *)(v5 + v9[11]) = *(_BYTE *)(v6 + v9[11]);
  *(_QWORD *)(v5 + v9[12]) = *(_QWORD *)(v6 + v9[12]);
  v23 = v9[13];
  v24 = (_QWORD *)(v5 + v23);
  v25 = (_QWORD *)(v6 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = v9[14];
  v28 = (uint64_t *)(v5 + v27);
  v29 = (uint64_t *)(v6 + v27);
  v30 = *v29;
  v31 = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22190D5DC(v30, v31);
  *v28 = v30;
  v28[1] = v31;
  *(_QWORD *)(v5 + v9[15]) = *(_QWORD *)(v6 + v9[15]);
  *(_BYTE *)(v5 + v9[16]) = *(_BYTE *)(v6 + v9[16]);
  *(_BYTE *)(v5 + v9[17]) = *(_BYTE *)(v6 + v9[17]);
  *(_BYTE *)(v5 + v9[18]) = *(_BYTE *)(v6 + v9[18]);
  v32 = v9[19];
  v33 = *(void **)(v6 + v32);
  *(_QWORD *)(v5 + v32) = v33;
  v34 = v9[20];
  v35 = v5 + v34;
  v36 = (_OWORD *)(v6 + v34);
  v37 = *(_QWORD *)(v6 + v34 + 8);
  swift_bridgeObjectRetain();
  v38 = v33;
  if (v37 >> 60 == 15)
  {
    *(_OWORD *)v35 = *v36;
  }
  else
  {
    v39 = *(_QWORD *)v36;
    sub_22190D5DC(v39, v37);
    *(_QWORD *)v35 = v39;
    *(_QWORD *)(v35 + 8) = v37;
  }
  return a1;
}

uint64_t assignWithCopy for HomePassState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  int *v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v7 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(int *)(a3 + 60);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_222596678();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v13 = (int *)type metadata accessor for HomePassData(0);
  v12(v9 + v13[5], v10 + v13[5], v11);
  v12(v9 + v13[6], v10 + v13[6], v11);
  v14 = v13[7];
  v15 = (uint64_t *)(v9 + v14);
  v16 = (_QWORD *)(v10 + v14);
  v17 = *(_QWORD *)(v10 + v14);
  v18 = *(_QWORD *)(v10 + v14 + 8);
  sub_22190D5DC(v17, v18);
  v19 = *v15;
  v20 = v15[1];
  *v15 = v17;
  v15[1] = v18;
  sub_22190D550(v19, v20);
  v21 = v16[2];
  v22 = v16[3];
  sub_22190D5DC(v21, v22);
  v23 = v15[2];
  v24 = v15[3];
  v15[2] = v21;
  v15[3] = v22;
  sub_22190D550(v23, v24);
  v25 = v16[4];
  v26 = v16[5];
  sub_22190D5DC(v25, v26);
  v27 = v15[4];
  v28 = v15[5];
  v15[4] = v25;
  v15[5] = v26;
  sub_22190D550(v27, v28);
  v29 = v13[8];
  v30 = (_QWORD *)(v9 + v29);
  v31 = (_QWORD *)(v10 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + v13[9]) = *(_QWORD *)(v10 + v13[9]);
  *(_BYTE *)(v9 + v13[10]) = *(_BYTE *)(v10 + v13[10]);
  *(_BYTE *)(v9 + v13[11]) = *(_BYTE *)(v10 + v13[11]);
  *(_QWORD *)(v9 + v13[12]) = *(_QWORD *)(v10 + v13[12]);
  v32 = v13[13];
  v33 = (_QWORD *)(v9 + v32);
  v34 = (_QWORD *)(v10 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v13[14];
  v36 = (uint64_t *)(v9 + v35);
  v37 = (uint64_t *)(v10 + v35);
  v38 = *v37;
  v39 = v37[1];
  sub_22190D5DC(*v37, v39);
  v40 = *v36;
  v41 = v36[1];
  *v36 = v38;
  v36[1] = v39;
  sub_22190D550(v40, v41);
  *(_QWORD *)(v9 + v13[15]) = *(_QWORD *)(v10 + v13[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v13[16]) = *(_BYTE *)(v10 + v13[16]);
  *(_BYTE *)(v9 + v13[17]) = *(_BYTE *)(v10 + v13[17]);
  *(_BYTE *)(v9 + v13[18]) = *(_BYTE *)(v10 + v13[18]);
  v42 = v13[19];
  v43 = *(void **)(v9 + v42);
  v44 = *(void **)(v10 + v42);
  *(_QWORD *)(v9 + v42) = v44;
  v45 = v44;

  v46 = v13[20];
  v47 = (uint64_t *)(v9 + v46);
  v48 = (uint64_t *)(v10 + v46);
  v49 = *(_QWORD *)(v10 + v46 + 8);
  if ((unint64_t)v47[1] >> 60 != 15)
  {
    if (v49 >> 60 != 15)
    {
      v51 = *v48;
      sub_22190D5DC(v51, v49);
      v52 = *v47;
      v53 = v47[1];
      *v47 = v51;
      v47[1] = v49;
      sub_22190D550(v52, v53);
      return a1;
    }
    sub_221948E98((uint64_t)v47);
    goto LABEL_6;
  }
  if (v49 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v47 = *(_OWORD *)v48;
    return a1;
  }
  v50 = *v48;
  sub_22190D5DC(v50, v49);
  *v47 = v50;
  v47[1] = v49;
  return a1;
}

uint64_t initializeWithTake for HomePassState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 60);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_222596678();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  v9 = (int *)type metadata accessor for HomePassData(0);
  v8(v5 + v9[5], v6 + v9[5], v7);
  v8(v5 + v9[6], v6 + v9[6], v7);
  v10 = v9[7];
  v11 = (_OWORD *)(v5 + v10);
  v12 = (_OWORD *)(v6 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  *(_OWORD *)(v5 + v9[8]) = *(_OWORD *)(v6 + v9[8]);
  *(_QWORD *)(v5 + v9[9]) = *(_QWORD *)(v6 + v9[9]);
  *(_BYTE *)(v5 + v9[10]) = *(_BYTE *)(v6 + v9[10]);
  *(_BYTE *)(v5 + v9[11]) = *(_BYTE *)(v6 + v9[11]);
  *(_QWORD *)(v5 + v9[12]) = *(_QWORD *)(v6 + v9[12]);
  *(_OWORD *)(v5 + v9[13]) = *(_OWORD *)(v6 + v9[13]);
  *(_OWORD *)(v5 + v9[14]) = *(_OWORD *)(v6 + v9[14]);
  *(_QWORD *)(v5 + v9[15]) = *(_QWORD *)(v6 + v9[15]);
  *(_BYTE *)(v5 + v9[16]) = *(_BYTE *)(v6 + v9[16]);
  *(_BYTE *)(v5 + v9[17]) = *(_BYTE *)(v6 + v9[17]);
  *(_BYTE *)(v5 + v9[18]) = *(_BYTE *)(v6 + v9[18]);
  *(_QWORD *)(v5 + v9[19]) = *(_QWORD *)(v6 + v9[19]);
  *(_OWORD *)(v5 + v9[20]) = *(_OWORD *)(v6 + v9[20]);
  return a1;
}

uint64_t assignWithTake for HomePassState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 60);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_BYTE *)(a1 + 40) = v6;
  v10 = sub_222596678();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v9, v8, v10);
  v12 = (int *)type metadata accessor for HomePassData(0);
  v11(v9 + v12[5], v8 + v12[5], v10);
  v11(v9 + v12[6], v8 + v12[6], v10);
  v13 = v12[7];
  v14 = (_QWORD *)(v9 + v13);
  v15 = v8 + v13;
  v16 = *(_QWORD *)(v9 + v13);
  v17 = *(_QWORD *)(v9 + v13 + 8);
  *(_OWORD *)(v9 + v13) = *(_OWORD *)(v8 + v13);
  sub_22190D550(v16, v17);
  v18 = v14[2];
  v19 = v14[3];
  *((_OWORD *)v14 + 1) = *(_OWORD *)(v15 + 16);
  sub_22190D550(v18, v19);
  v20 = v14[4];
  v21 = v14[5];
  *((_OWORD *)v14 + 2) = *(_OWORD *)(v15 + 32);
  sub_22190D550(v20, v21);
  v22 = v12[8];
  v23 = (_QWORD *)(v9 + v22);
  v24 = (uint64_t *)(v8 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + v12[9]) = *(_QWORD *)(v8 + v12[9]);
  *(_BYTE *)(v9 + v12[10]) = *(_BYTE *)(v8 + v12[10]);
  *(_BYTE *)(v9 + v12[11]) = *(_BYTE *)(v8 + v12[11]);
  *(_QWORD *)(v9 + v12[12]) = *(_QWORD *)(v8 + v12[12]);
  v27 = v12[13];
  v28 = (_QWORD *)(v9 + v27);
  v29 = (uint64_t *)(v8 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = v12[14];
  v33 = *(_QWORD *)(v9 + v32);
  v34 = *(_QWORD *)(v9 + v32 + 8);
  *(_OWORD *)(v9 + v32) = *(_OWORD *)(v8 + v32);
  sub_22190D550(v33, v34);
  *(_QWORD *)(v9 + v12[15]) = *(_QWORD *)(v8 + v12[15]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v12[16]) = *(_BYTE *)(v8 + v12[16]);
  *(_BYTE *)(v9 + v12[17]) = *(_BYTE *)(v8 + v12[17]);
  *(_BYTE *)(v9 + v12[18]) = *(_BYTE *)(v8 + v12[18]);
  v35 = v12[19];
  v36 = *(void **)(v9 + v35);
  *(_QWORD *)(v9 + v35) = *(_QWORD *)(v8 + v35);

  v37 = v12[20];
  v38 = (uint64_t *)(v9 + v37);
  v39 = (uint64_t *)(v8 + v37);
  v40 = v38[1];
  if (v40 >> 60 != 15)
  {
    v41 = v39[1];
    if (v41 >> 60 != 15)
    {
      v42 = *v38;
      *v38 = *v39;
      v38[1] = v41;
      sub_22190D550(v42, v40);
      return a1;
    }
    sub_221948E98((uint64_t)v38);
  }
  *(_OWORD *)v38 = *(_OWORD *)v39;
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePassState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219D11C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for HomePassData(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 60)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for HomePassState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2219D1248(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for HomePassData(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 60)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HomePassState(uint64_t a1)
{
  return sub_221926060(a1, qword_255740C28);
}

uint64_t sub_2219D12D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HomePassData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for HomePassData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  _OWORD *v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v42 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_222596678();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v8((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]), v7);
    v9 = a3[7];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = *(_QWORD *)((char *)a2 + v9);
    v13 = *(_QWORD *)((char *)a2 + v9 + 8);
    sub_22190D5DC(v12, v13);
    *v10 = v12;
    v10[1] = v13;
    v14 = v11[2];
    v15 = v11[3];
    sub_22190D5DC(v14, v15);
    v10[2] = v14;
    v10[3] = v15;
    v16 = v11[4];
    v17 = v11[5];
    sub_22190D5DC(v16, v17);
    v10[4] = v16;
    v10[5] = v17;
    v18 = a3[8];
    v19 = a3[9];
    v20 = (_QWORD *)((char *)a1 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
    v23 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
    v24 = a3[13];
    *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[14];
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    v31 = *v30;
    v32 = v30[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22190D5DC(v31, v32);
    *v29 = v31;
    v29[1] = v32;
    v33 = a3[16];
    *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    v34 = a3[18];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    *((_BYTE *)a1 + v34) = *((_BYTE *)a2 + v34);
    v35 = a3[19];
    v36 = a3[20];
    v37 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)a1 + v35) = v37;
    v38 = (char *)a1 + v36;
    v39 = (_OWORD *)((char *)a2 + v36);
    v40 = *(_QWORD *)((char *)a2 + v36 + 8);
    swift_bridgeObjectRetain();
    v41 = v37;
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)v38 = *v39;
    }
    else
    {
      v43 = *(_QWORD *)v39;
      sub_22190D5DC(v43, v40);
      *(_QWORD *)v38 = v43;
      *((_QWORD *)v38 + 1) = v40;
    }
  }
  return a1;
}

void destroy for HomePassData(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  v4 = sub_222596678();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  v6 = a1 + a2[7];
  sub_22190D550(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
  sub_22190D550(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
  sub_22190D550(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22190D550(*(_QWORD *)(a1 + a2[14]), *(_QWORD *)(a1 + a2[14] + 8));
  swift_bridgeObjectRelease();

  v7 = (uint64_t *)(a1 + a2[20]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_22190D550(*v7, v8);
}

uint64_t initializeWithCopy for HomePassData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _OWORD *v38;
  unint64_t v39;
  id v40;
  uint64_t v41;

  v6 = sub_222596678();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8);
  v12 = *(_QWORD *)(a2 + v8 + 8);
  sub_22190D5DC(v11, v12);
  *v9 = v11;
  v9[1] = v12;
  v13 = v10[2];
  v14 = v10[3];
  sub_22190D5DC(v13, v14);
  v9[2] = v13;
  v9[3] = v14;
  v15 = v10[4];
  v16 = v10[5];
  sub_22190D5DC(v15, v16);
  v9[4] = v15;
  v9[5] = v16;
  v17 = a3[8];
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v22 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[14];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  v31 = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22190D5DC(v30, v31);
  *v28 = v30;
  v28[1] = v31;
  v32 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[19];
  v35 = a3[20];
  v36 = *(void **)(a2 + v34);
  *(_QWORD *)(a1 + v34) = v36;
  v37 = a1 + v35;
  v38 = (_OWORD *)(a2 + v35);
  v39 = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  v40 = v36;
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)v37 = *v38;
  }
  else
  {
    v41 = *(_QWORD *)v38;
    sub_22190D5DC(v41, v39);
    *(_QWORD *)v37 = v41;
    *(_QWORD *)(v37 + 8) = v39;
  }
  return a1;
}

uint64_t assignWithCopy for HomePassData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v6 = sub_222596678();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (uint64_t *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8);
  v12 = *(_QWORD *)(a2 + v8 + 8);
  sub_22190D5DC(v11, v12);
  v13 = *v9;
  v14 = v9[1];
  *v9 = v11;
  v9[1] = v12;
  sub_22190D550(v13, v14);
  v15 = v10[2];
  v16 = v10[3];
  sub_22190D5DC(v15, v16);
  v17 = v9[2];
  v18 = v9[3];
  v9[2] = v15;
  v9[3] = v16;
  sub_22190D550(v17, v18);
  v19 = v10[4];
  v20 = v10[5];
  sub_22190D5DC(v19, v20);
  v21 = v9[4];
  v22 = v9[5];
  v9[4] = v19;
  v9[5] = v20;
  sub_22190D550(v21, v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v26 = a3[13];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[14];
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = *v31;
  v33 = v31[1];
  sub_22190D5DC(*v31, v33);
  v34 = *v30;
  v35 = v30[1];
  *v30 = v32;
  v30[1] = v33;
  sub_22190D550(v34, v35);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v36 = a3[19];
  v37 = *(void **)(a1 + v36);
  v38 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v38;
  v39 = v38;

  v40 = a3[20];
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *(_QWORD *)(a2 + v40 + 8);
  if (*(_QWORD *)(a1 + v40 + 8) >> 60 != 15)
  {
    if (v43 >> 60 != 15)
    {
      v45 = *v42;
      sub_22190D5DC(v45, v43);
      v46 = *v41;
      v47 = v41[1];
      *v41 = v45;
      v41[1] = v43;
      sub_22190D550(v46, v47);
      return a1;
    }
    sub_221948E98((uint64_t)v41);
    goto LABEL_6;
  }
  if (v43 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v41 = *(_OWORD *)v42;
    return a1;
  }
  v44 = *v42;
  sub_22190D5DC(v44, v43);
  *v41 = v44;
  v41[1] = v43;
  return a1;
}

uint64_t initializeWithTake for HomePassData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_222596678();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (_OWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v10[2] = v11[2];
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[20];
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for HomePassData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v6 = sub_222596678();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a1 + v8);
  v12 = *(_QWORD *)(a1 + v8 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  sub_22190D550(v11, v12);
  v13 = v9[2];
  v14 = v9[3];
  *((_OWORD *)v9 + 1) = *(_OWORD *)(v10 + 16);
  sub_22190D550(v13, v14);
  v15 = v9[4];
  v16 = v9[5];
  *((_OWORD *)v9 + 2) = *(_OWORD *)(v10 + 32);
  sub_22190D550(v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[13];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[14];
  v30 = *(_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  sub_22190D550(v30, v31);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v32 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v34 = *(void **)(a1 + v33);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);

  v35 = a3[20];
  v36 = (uint64_t *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 8);
  if (v38 >> 60 != 15)
  {
    v39 = v37[1];
    if (v39 >> 60 != 15)
    {
      v40 = *v36;
      *v36 = *v37;
      v36[1] = v39;
      sub_22190D550(v40, v38);
      return a1;
    }
    sub_221948E98((uint64_t)v36);
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
  return a1;
}

uint64_t getEnumTagSinglePayload for HomePassData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219D1D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for HomePassData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219D1E0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_222596678();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2219D1E88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596678();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HasAliroAccessory(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2219D1FB8 + 4 * byte_22268ED10[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for HasAliroAccessory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2219D2070 + 4 * byte_22268ED1A[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2219D20A4 + 4 * byte_22268ED15[v5]))();
}

uint64_t sub_2219D20A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219D20AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219D20B4);
  return result;
}

uint64_t sub_2219D20C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219D20C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2219D20CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219D20D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219D20E0(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_2219D20FC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for HasAliroAccessory()
{
  return &type metadata for HasAliroAccessory;
}

ValueMetadata *type metadata accessor for ReaderKey()
{
  return &type metadata for ReaderKey;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ExpressSettings(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpressSettings(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2219D2248 + 4 * byte_22268ED24[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_2219D227C + 4 * byte_22268ED1F[v4]))();
}

uint64_t sub_2219D227C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_2219D2284(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x2219D228CLL);
  return result;
}

uint64_t sub_2219D2298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x2219D22A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2219D22A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_2219D22AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExpressSettings()
{
  return &type metadata for ExpressSettings;
}

uint64_t _s13HomeKitDaemon9ReaderKeyVwxx_0(uint64_t a1)
{
  sub_22190D550(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_22190D550(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return sub_22190D550(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t *_s13HomeKitDaemon9ReaderKeyVwcp_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  sub_22190D5DC(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  sub_22190D5DC(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  v9 = a2[4];
  v8 = a2[5];
  sub_22190D5DC(v9, v8);
  a1[4] = v9;
  a1[5] = v8;
  return a1;
}

uint64_t *_s13HomeKitDaemon9ReaderKeyVwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = *a2;
  v5 = a2[1];
  sub_22190D5DC(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_22190D550(v6, v7);
  v8 = a2[2];
  v9 = a2[3];
  sub_22190D5DC(v8, v9);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_22190D550(v10, v11);
  v13 = a2[4];
  v12 = a2[5];
  sub_22190D5DC(v13, v12);
  v14 = a1[4];
  v15 = a1[5];
  a1[4] = v13;
  a1[5] = v12;
  sub_22190D550(v14, v15);
  return a1;
}

uint64_t *_s13HomeKitDaemon9ReaderKeyVwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_22190D550(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_22190D550(v6, v7);
  v8 = a1[4];
  v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_22190D550(v8, v9);
  return a1;
}

uint64_t _s13HomeKitDaemon9ReaderKeyVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s13HomeKitDaemon9ReaderKeyVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreexistingKeys()
{
  return &type metadata for PreexistingKeys;
}

uint64_t sub_2219D24FC(id *a1)
{
  uint64_t v1;

  return sub_2219CF020(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_2219D2518()
{
  unint64_t result;

  result = qword_255740D78;
  if (!qword_255740D78)
  {
    result = MEMORY[0x227676F2C](&unk_222690534, &type metadata for ExpectedUpdatePassError);
    atomic_store(result, (unint64_t *)&qword_255740D78);
  }
  return result;
}

uint64_t sub_2219D255C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;

  v1 = sub_222596678();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (v5 + v3 + v4) & ~v3;
  v5 += 7;
  v7 = (v3 + ((((((v5 + v6) & 0xFFFFFFFFFFFFFFF8) + 18) & 0xFFFFFFFFFFFFFFF8) + 18) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v3;
  v8 = (v5 + v7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 75) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v6, v1);
  swift_bridgeObjectRelease();
  v10(v0 + v7, v1);
  v11 = v0 + v8;
  sub_22190D550(*(_QWORD *)(v0 + v8), *(_QWORD *)(v0 + v8 + 8));
  sub_22190D550(*(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24));
  sub_22190D550(*(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40));

  v12 = (uint64_t *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_22190D550(*v12, v13);
  return swift_deallocObject();
}

uint64_t sub_2219D269C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unint64_t v21;

  v3 = *(_QWORD *)(sub_222596678() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 16) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (v6 + v4 + v5) & ~v4;
  v6 += 7;
  v8 = (v6 + v7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 18) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 18) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v4 + v10 + 9) & ~v4;
  v12 = v1 + v8;
  v13 = *(_QWORD *)v12;
  v14 = (v6 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 57) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(unsigned __int8 *)(v12 + 8);
  v17 = *(unsigned __int8 *)(v12 + 9);
  v18 = *(unsigned __int8 *)(v12 + 10);
  v19 = (unsigned __int8 *)(v1 + v9);
  v20 = *(_QWORD *)(v1 + v9);
  v21 = (v14 + 75) & 0xFFFFFFFFFFFFFFF8;
  return sub_2219CF26C(v1 + v5, v1 + v7, v13, v16, v17, v18, v20, v19[8], a1, v19[9], v19[10], *(_QWORD *)(v1 + v10), *(_BYTE *)(v1 + v10 + 8), v1 + v11, (_OWORD *)(v1 + v14), *(_BYTE *)(v1 + v14 + 48), *(_BYTE *)(v1 + v14 + 49), *(void **)(v1 + v15), *(_BYTE *)(v1 + v15 + 8),
           *(_BYTE *)(v1 + v15 + 9),
           *(_BYTE *)(v1 + v15 + 10),
           *(void **)(v1 + v21),
           *(_QWORD *)(v1 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)),
           *(_QWORD *)(v1 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_2219D27F0(uint64_t a1)
{
  uint64_t v1;

  sub_221944D70(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t *sub_2219D27FC(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  sub_22190D5DC(*a1, a1[1]);
  sub_22190D5DC(v2, v3);
  sub_22190D5DC(v4, v5);
  return a1;
}

uint64_t HMDSymptomManager.updateNetworkMismatchInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[23] = v0;
  v2 = sub_222596BB8();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  v3 = sub_222596BD0();
  v1[27] = v3;
  v1[28] = *(_QWORD *)(v3 - 8);
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D28E0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(*(id *)(v0 + 184), sel_dataSource);
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    v2 = v1;
    *(_QWORD *)(v0 + 56) = v0 + 168;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_2219D29BC;
    v3 = swift_continuation_init();
    *(_QWORD *)(v0 + 128) = MEMORY[0x24BDAC760];
    v4 = (_QWORD *)(v0 + 128);
    v4[1] = 0x40000000;
    v4[2] = sub_2219D2BA0;
    v4[3] = &block_descriptor_13;
    v4[4] = v3;
    objc_msgSend(v2, sel_fetchNearbyAccessoriesNotOnCurrentNetworkWithCompletionHandler_, v4);
    return swift_continuation_await();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219D29BC()
{
  return swift_task_switch();
}

uint64_t sub_2219D2A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[29];
  v2 = v0[26];
  v12 = v0[28];
  v13 = v0[27];
  v4 = v0[24];
  v3 = v0[25];
  v5 = (void *)v0[23];
  v6 = v0[21];
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v5, sel_workQueue);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v6;
  v0[14] = sub_2219D2C88;
  v0[15] = v8;
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 1107296256;
  v0[12] = sub_221944BC8;
  v0[13] = &block_descriptor_1_0;
  v9 = _Block_copy(v0 + 10);
  v10 = v5;
  sub_222596BC4();
  v0[22] = MEMORY[0x24BEE4AF8];
  sub_2219D2CA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573F360);
  sub_22198E270();
  sub_222597170();
  MEMORY[0x227674070](0, v1, v2, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_2219D2BA0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_222596678();
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_222596E40();
  return swift_continuation_resume();
}

id sub_2219D2BE4(void *a1)
{
  id result;
  void *v3;

  result = objc_msgSend(a1, sel__isNearbyDiscoveryActive);
  if ((_DWORD)result)
  {
    sub_222596678();
    v3 = (void *)sub_222596E28();
    objc_msgSend(a1, sel_setNearbyAccessoryUUIDsNotOnCurrentNetwork_, v3);

    return objc_msgSend(a1, sel__updateSymptomsForAllRegisteredAccessories);
  }
  return result;
}

uint64_t sub_2219D2C5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_2219D2C88()
{
  uint64_t v0;

  return sub_2219D2BE4(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_2219D2CA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25573F358;
  if (!qword_25573F358)
  {
    v1 = sub_222596BB8();
    result = MEMORY[0x227676F2C](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25573F358);
  }
  return result;
}

uint64_t sub_2219D2E0C(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_2219C7584;
  return HMDSymptomManager.updateNetworkMismatchInfo()();
}

uint64_t sub_2219D2ED4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v14;

  *(_QWORD *)(a4 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + 32) = &off_24E76AB60;
  swift_unknownObjectWeakAssign();
  type metadata accessor for AssertionHandle.Assertion(0);
  v8 = swift_allocObject();
  sub_22259666C();
  if (!a3)
  {
    a2 = sub_222596624();
    a3 = v9;
  }
  v10 = (uint64_t *)(v8 + OBJC_IVAR____TtCC13HomeKitDaemon15AssertionHandle9Assertion_reason);
  *v10 = a2;
  v10[1] = a3;
  *(_QWORD *)(a4 + 16) = v8;
  v11 = *(os_unfair_lock_s **)&a1[OBJC_IVAR___HMDDiscoveryController_assertions];
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_221995E00((uint64_t)&v11[4], v8, &v14);
  os_unfair_lock_unlock(v11 + 6);
  v12 = v14;
  swift_release();
  sub_221998C4C(v8);
  if (v12 == 1)
    sub_221998498();
  swift_release();

  return a4;
}

uint64_t _sSo17HMDSymptomManagerC13HomeKitDaemonE25releaseDiscoveryAssertion15assertionHandleyyXlSg_tF_0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  _BOOL4 v6;
  BOOL v7;

  if (result)
  {
    type metadata accessor for AssertionHandle();
    swift_unknownObjectRetain();
    v1 = swift_dynamicCastClass();
    if (v1)
    {
      v2 = v1;
      v3 = MEMORY[0x227677094](v1 + 24);
      if (v3)
      {
        v4 = *(_QWORD *)(v2 + 16);
        v5 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___HMDDiscoveryController_assertions);
        swift_retain();
        os_unfair_lock_lock(v5 + 6);
        sub_221995E78((uint64_t)&v5[4], &v7);
        os_unfair_lock_unlock(v5 + 6);
        v6 = v7;
        swift_release();
        sub_221998C58(v4);
        if (v6)
          sub_221998840();
        swift_unknownObjectRelease();
      }
      *(_QWORD *)(v2 + 32) = 0;
      swift_unknownObjectWeakAssign();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2219D3118()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_2219D3144()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221901E24;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_255740F38 + dword_255740F38))(v2, v3);
}

uint64_t sub_2219D31B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  _BYTE v8[40];
  __int128 v9;
  __int128 v10;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  *(_QWORD *)&v9 = sub_222596CF0();
  *((_QWORD *)&v9 + 1) = v3;
  sub_222597230();
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_22198D548((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v8);
  if (*((_QWORD *)&v10 + 1))
  {
    if (swift_dynamicCast())
      return v7;
  }
  else
  {
    sub_221947E0C((uint64_t)&v9);
  }
  return 0;
}

uint64_t sub_2219D3290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  _BYTE v8[40];
  __int128 v9;
  __int128 v10;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  *(_QWORD *)&v9 = sub_222596CF0();
  *((_QWORD *)&v9 + 1) = v3;
  sub_222597230();
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_22198D548((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v8);
  if (*((_QWORD *)&v10 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v7;
  }
  else
  {
    sub_221947E0C((uint64_t)&v9);
  }
  return 0;
}

uint64_t _s20WriteThroughStrategyOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s20WriteThroughStrategyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_2219D3408(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_2219D3410(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *_s20WriteThroughStrategyOMa()
{
  return &_s20WriteThroughStrategyON;
}

void sub_2219D342C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1;
    v30 = MEMORY[0x24BEE4AF8];
    sub_22191A848(0, v3, 0);
    v5 = v30;
    v7 = sub_2219D89D0(v4);
    v8 = 0;
    v9 = v4 + 64;
    v24 = v4 + 80;
    v25 = v3;
    v26 = v6;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v4 + 32))
    {
      v12 = (unint64_t)v7 >> 6;
      if ((*(_QWORD *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v4 + 36) != v6)
        goto LABEL_26;
      v27 = v8;
      v13 = v4;
      v14 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v7);
      v28[0] = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      v28[1] = v14;
      v15 = v14;
      sub_2219D7A1C((uint64_t)v28, &v29);
      if (v2)
      {
        swift_release();

        return;
      }

      v16 = v29;
      v30 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      v17 = *(_QWORD *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_22191A848(v17 > 1, v18 + 1, 1);
        v5 = v30;
      }
      *(_QWORD *)(v5 + 16) = v18 + 1;
      *(_QWORD *)(v5 + 8 * v18 + 32) = v16;
      v10 = 1 << *(_BYTE *)(v13 + 32);
      if (v7 >= v10)
        goto LABEL_27;
      v19 = *(_QWORD *)(v9 + 8 * v12);
      if ((v19 & (1 << v7)) == 0)
        goto LABEL_28;
      v4 = v13;
      v6 = v26;
      if (*(_DWORD *)(v13 + 36) != v26)
        goto LABEL_29;
      v20 = v19 & (-2 << (v7 & 0x3F));
      if (v20)
      {
        v10 = __clz(__rbit64(v20)) | v7 & 0xFFFFFFFFFFFFFFC0;
        v2 = 0;
        v11 = v25;
      }
      else
      {
        v21 = v12 + 1;
        v22 = (unint64_t)(v10 + 63) >> 6;
        v2 = 0;
        v11 = v25;
        if (v12 + 1 < v22)
        {
          v23 = *(_QWORD *)(v9 + 8 * v21);
          if (v23)
          {
LABEL_21:
            v10 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v12)
            {
              v23 = *(_QWORD *)(v24 + 8 * v12++);
              if (v23)
              {
                v21 = v12 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      v8 = v27 + 1;
      v7 = v10;
      if (v27 + 1 == v11)
        return;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
}

uint64_t sub_2219D3678(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

unint64_t sub_2219D36DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573BB40);
    v2 = (_QWORD *)sub_2225973D4();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_22193D780();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_221921C04(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v39 = v25;
    v40 = v24;
    sub_221903284(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741120);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_221903284(v8, v9);
    sub_221903284(v9, v44);
    sub_221903284(v44, &v42);
    result = sub_22198D4E4(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_221903284(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_221903284(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_2219D3A84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573BB30);
    v2 = (_QWORD *)sub_2225973D4();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v31 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  v6 = &v35;
  v7 = &v37;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = (uint64_t *)&unk_255741110;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v19 >= v30)
    goto LABEL_32;
  v20 = *(_QWORD *)(v31 + 8 * v19);
  v21 = i + 1;
  if (!v20)
  {
    v21 = i + 2;
    if (i + 2 >= v30)
      goto LABEL_32;
    v20 = *(_QWORD *)(v31 + 8 * v21);
    if (!v20)
    {
      v21 = i + 3;
      if (i + 3 >= v30)
        goto LABEL_32;
      v20 = *(_QWORD *)(v31 + 8 * v21);
      if (!v20)
      {
        v21 = i + 4;
        if (i + 4 >= v30)
          goto LABEL_32;
        v20 = *(_QWORD *)(v31 + 8 * v21);
        if (!v20)
        {
          v22 = i + 5;
          if (i + 5 < v30)
          {
            v20 = *(_QWORD *)(v31 + 8 * v22);
            if (v20)
            {
              v21 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v30)
                break;
              v20 = *(_QWORD *)(v31 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_22193D780();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v32 = (v20 - 1) & v20;
  v18 = __clz(__rbit64(v20)) + (v21 << 6);
  for (i = v21; ; v18 = __clz(__rbit64(v5)) | (i << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v18);
    v33 = *v23;
    v34 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741120);
    swift_dynamicCast();
    sub_221903284(v6, v7);
    sub_221903284(v7, v38);
    sub_221903284(v38, &v36);
    result = sub_22198D4E4(v33, v34);
    v24 = result;
    if ((v25 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = i;
      v15 = v10;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v33;
      v16[1] = v34;
      v10 = v15;
      i = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_221903284(&v36, v17);
      v5 = v32;
      if (!v32)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v26 = (uint64_t *)(v2[6] + 16 * result);
    *v26 = v33;
    v26[1] = v34;
    result = (unint64_t)sub_221903284(&v36, (_OWORD *)(v2[7] + 32 * result));
    v27 = v2[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_34;
    v2[2] = v29;
    v5 = v32;
    if (!v32)
      goto LABEL_11;
LABEL_10:
    v32 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2219D3DF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_backgroundTaskManager;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_backgroundTaskManager);
  v3 = (void *)sub_222596CD8();
  objc_msgSend(v2, sel_cancelTaskWithIdentifier_onObserver_, v3, v0);

  v4 = v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_homeUUID;
  v5 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_messenger);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger;
  v7 = sub_222596B40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_2219D3F08()
{
  sub_2219D3DF4();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2219D3F20()
{
  return type metadata accessor for DefaultUserActivityReportCoordinator();
}

uint64_t type metadata accessor for DefaultUserActivityReportCoordinator()
{
  uint64_t result;

  result = qword_255741028;
  if (!qword_255741028)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2219D3F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_221901E24;
  return sub_2219D4470(a5);
}

uint64_t sub_2219D40C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596EF4();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  swift_retain();
  if ((_DWORD)a1 == 1)
  {
    sub_221917338((uint64_t)v6, &qword_25573FD20);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_222596EE8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_222596EA0();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_255741150;
  *(_QWORD *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_2219D42A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_2219D42B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating;
  v0[3] = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating;
  *(_BYTE *)(v1 + v2) = 1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_2219D432C;
  v3[5] = v0[2];
  return swift_task_switch();
}

uint64_t sub_2219D432C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D4384()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2219D92B0(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2219D43D8;
  return sub_2219D6D90();
}

uint64_t sub_2219D43D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D4430()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(v0 + 24)) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219D4470(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_222596B40();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D44E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v1 = v0;
  v2 = v0[12];
  v3 = v0[9];
  v4 = v0[10];
  v5 = v0[8];
  v6 = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger;
  v0[13] = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[14] = v7;
  v7(v2, v5 + v6, v3);
  swift_retain_n();
  v8 = sub_222596B28();
  v9 = sub_222597020();
  v52 = v0;
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v0[12];
    v48 = v1[10];
    v50 = v1[9];
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136315138;
    v53 = v12;
    v54 = 91;
    v55 = 0xE100000000000000;
    sub_222596624();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    v52[6] = sub_221921364(91, 0xE100000000000000, &v53);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v8, v9, "%s Configuring UserActivityReportCoordinator", v11, 0xCu);
    swift_arrayDestroy();
    v13 = v12;
    v1 = v52;
    MEMORY[0x227676FE0](v13, -1, -1);
    MEMORY[0x227676FE0](v11, -1, -1);

    v14 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v14(v10, v50);
  }
  else
  {
    v15 = v0[12];
    v16 = v0[9];
    v17 = v0[10];

    swift_release_n();
    v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  v1[15] = v14;
  v18 = v1[7];
  if (v18 >> 62)
    goto LABEL_29;
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = swift_bridgeObjectRetain(); v19; i = v1[7])
  {
    v21 = 0;
    v22 = v1 + 2;
    v23 = (uint64_t *)(v1[8]
                    + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_detectorsByContributorType);
    v49 = v19;
    v51 = v18 & 0xC000000000000001;
    v47 = i + 32;
    while (1)
    {
      v26 = v51 ? (_QWORD *)MEMORY[0x227674274](v21, v1[7]) : *(id *)(v47 + 8 * v21);
      v18 = (unint64_t)v26;
      v27 = v21 + 1;
      if (__OFADD__(v21, 1))
        break;
      v1 = objc_msgSend((id)swift_getObjCClassFromObject(), sel_contributorType);
      v28 = v22;
      swift_beginAccess();
      v29 = (id)v18;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v54 = *v23;
      v18 = v54;
      *v23 = 0x8000000000000000;
      v32 = sub_22198D680((uint64_t)v1);
      v33 = *(_QWORD *)(v18 + 16);
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        goto LABEL_27;
      v36 = v31;
      if (*(_QWORD *)(v18 + 24) >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v31 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_22196A48C();
          v18 = v54;
          if ((v36 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_22196740C(v35, isUniquelyReferenced_nonNull_native);
        v18 = v54;
        v37 = sub_22198D680((uint64_t)v1);
        if ((v36 & 1) != (v38 & 1))
        {
          type metadata accessor for HMDHomeActivityStateContributorType(0);
          return sub_222597878();
        }
        v32 = v37;
        if ((v36 & 1) != 0)
        {
LABEL_7:
          v24 = *(_QWORD *)(v18 + 56);

          *(_QWORD *)(v24 + 8 * v32) = v29;
          goto LABEL_8;
        }
      }
      *(_QWORD *)(v18 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v39 = 8 * v32;
      *(_QWORD *)(*(_QWORD *)(v18 + 48) + v39) = v1;
      *(_QWORD *)(*(_QWORD *)(v18 + 56) + v39) = v29;
      v40 = *(_QWORD *)(v18 + 16);
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_28;
      *(_QWORD *)(v18 + 16) = v42;
LABEL_8:
      v1 = v52;
      v25 = v52[8];
      *v23 = v18;
      swift_bridgeObjectRelease();
      v22 = v28;
      swift_endAccess();
      objc_msgSend(v29, sel_setStateChangeDelegate_, v25);

      ++v21;
      if (v27 == v49)
        goto LABEL_24;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    v19 = sub_2225973B0();
  }
LABEL_24:
  v43 = v1[8];
  swift_bridgeObjectRelease();
  v44 = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating;
  v1[16] = OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating;
  *(_BYTE *)(v43 + v44) = 1;
  v45 = (_QWORD *)swift_task_alloc();
  v1[17] = v45;
  *v45 = v1;
  v45[1] = sub_2219D49CC;
  v45[5] = v1[8];
  return swift_task_switch();
}

uint64_t sub_2219D49CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D4A24()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2219D92B0(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_2219D4A78;
  return sub_2219D6D90();
}

uint64_t sub_2219D4A78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D4AD0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17[3];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = v4 + *(_QWORD *)(v0 + 104);
  *(_BYTE *)(v4 + *(_QWORD *)(v0 + 128)) = 0;
  v1(v2, v5, v3);
  swift_retain_n();
  v6 = sub_222596B28();
  v7 = sub_222597020();
  if (os_log_type_enabled(v6, v7))
  {
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v14 = *(_QWORD *)(v0 + 72);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v17[0] = v9;
    v17[1] = 91;
    v17[2] = 0xE100000000000000;
    sub_222596624();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    *(_QWORD *)(v0 + 40) = sub_221921364(91, 0xE100000000000000, v17);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_2218F0000, v6, v7, "%s Configured UserActivityReportCoordinator", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v9, -1, -1);
    MEMORY[0x227676FE0](v8, -1, -1);

    v16(v15, v14);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 72);
    swift_release_n();

    v10(v11, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219D4D08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_2219D4D20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 40)
                 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_detectorsByContributorType);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 48) = *v1;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 104) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  v7 = (_QWORD *)swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v6));
    v10 = (v6 - 1) & v6;
    goto LABEL_5;
  }
  v17 = 63 - v5;
  if ((unint64_t)(63 - v5) <= 0x7F)
    goto LABEL_27;
  v18 = v7[9];
  if (!v18)
  {
    if (v17 >= 0xC0)
    {
      v18 = v7[10];
      if (v18)
      {
        v8 = 2;
        goto LABEL_10;
      }
      if (v17 >= 0x100)
      {
        v18 = v7[11];
        if (v18)
        {
          v8 = 3;
          goto LABEL_10;
        }
        if (v17 >= 0x140)
        {
          v18 = v7[12];
          if (v18)
          {
            v8 = 4;
            goto LABEL_10;
          }
          v20 = 0;
          v21 = v17 >> 6;
          if (v21 <= 5)
            v21 = 5;
          v22 = v21 - 5;
          while (v22 != v20)
          {
            v18 = v7[v20++ + 13];
            if (v18)
            {
              v8 = v20 + 4;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_27:
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = 1;
LABEL_10:
  v10 = (v18 - 1) & v18;
  v9 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_5:
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v10;
  v11 = *(_QWORD *)(v7[6] + 8 * v9);
  v12 = *(void **)(v7[7] + 8 * v9);
  *(_QWORD *)(v0 + 72) = v12;
  v13 = objc_msgSend(v12, sel_latestReport);
  *(_QWORD *)(v0 + 80) = v13;
  if (v13)
  {
    v14 = (uint64_t)v13;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v15;
    *v15 = v0;
    v15[1] = sub_2219D4F30;
    return sub_2219D5380(v14);
  }
  else
  {
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v19;
    *v19 = v0;
    v19[1] = sub_2219D515C;
    return sub_2219D5748(v11, 0);
  }
}

uint64_t sub_2219D4F30()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2219D4F88()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    v6 = *(_QWORD *)(v0 + 48);
    goto LABEL_3;
  }
  v12 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  v13 = (unint64_t)((1 << *(_BYTE *)(v0 + 104)) + 63) >> 6;
  v6 = *(_QWORD *)(v0 + 48);
  if (v12 >= v13)
  {
LABEL_20:
    swift_release();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v14 = v6 + 64;
  v15 = *(_QWORD *)(v6 + 64 + 8 * v12);
  ++v1;
  if (!v15)
  {
    v1 = v12 + 1;
    if (v12 + 1 < v13)
    {
      v15 = *(_QWORD *)(v14 + 8 * v1);
      if (v15)
        goto LABEL_8;
      v1 = v12 + 2;
      if (v12 + 2 < v13)
      {
        v15 = *(_QWORD *)(v14 + 8 * v1);
        if (v15)
          goto LABEL_8;
        v17 = v12 + 3;
        if (v17 < v13)
        {
          v15 = *(_QWORD *)(v14 + 8 * v17);
          if (v15)
          {
            v1 = v17;
            goto LABEL_8;
          }
          while (1)
          {
            v1 = v17 + 1;
            if (__OFADD__(v17, 1))
              break;
            if (v1 >= v13)
              goto LABEL_20;
            v15 = *(_QWORD *)(v14 + 8 * v1);
            ++v17;
            if (v15)
              goto LABEL_8;
          }
LABEL_22:
          __break(1u);
          return;
        }
      }
    }
    goto LABEL_20;
  }
LABEL_8:
  v4 = (v15 - 1) & v15;
  v5 = __clz(__rbit64(v15)) + (v1 << 6);
LABEL_3:
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v4;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v5);
  v8 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v5);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = objc_msgSend(v8, sel_latestReport);
  *(_QWORD *)(v0 + 80) = v9;
  if (v9)
  {
    v10 = (uint64_t)v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v11;
    *v11 = v0;
    v11[1] = sub_2219D4F30;
    sub_2219D5380(v10);
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v16;
    *v16 = v0;
    v16[1] = sub_2219D515C;
    sub_2219D5748(v7, 0);
  }
}

uint64_t sub_2219D515C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_2219D51B4()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v17;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    v6 = *(_QWORD *)(v0 + 48);
    goto LABEL_3;
  }
  v12 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  v13 = (unint64_t)((1 << *(_BYTE *)(v0 + 104)) + 63) >> 6;
  v6 = *(_QWORD *)(v0 + 48);
  if (v12 >= v13)
  {
LABEL_20:
    swift_release();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v14 = v6 + 64;
  v15 = *(_QWORD *)(v6 + 64 + 8 * v12);
  ++v1;
  if (!v15)
  {
    v1 = v12 + 1;
    if (v12 + 1 < v13)
    {
      v15 = *(_QWORD *)(v14 + 8 * v1);
      if (v15)
        goto LABEL_8;
      v1 = v12 + 2;
      if (v12 + 2 < v13)
      {
        v15 = *(_QWORD *)(v14 + 8 * v1);
        if (v15)
          goto LABEL_8;
        v17 = v12 + 3;
        if (v17 < v13)
        {
          v15 = *(_QWORD *)(v14 + 8 * v17);
          if (v15)
          {
            v1 = v17;
            goto LABEL_8;
          }
          while (1)
          {
            v1 = v17 + 1;
            if (__OFADD__(v17, 1))
              break;
            if (v1 >= v13)
              goto LABEL_20;
            v15 = *(_QWORD *)(v14 + 8 * v1);
            ++v17;
            if (v15)
              goto LABEL_8;
          }
LABEL_22:
          __break(1u);
          return;
        }
      }
    }
    goto LABEL_20;
  }
LABEL_8:
  v4 = (v15 - 1) & v15;
  v5 = __clz(__rbit64(v15)) + (v1 << 6);
LABEL_3:
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v4;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v5);
  v8 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v5);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = objc_msgSend(v8, sel_latestReport);
  *(_QWORD *)(v0 + 80) = v9;
  if (v9)
  {
    v10 = (uint64_t)v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v11;
    *v11 = v0;
    v11[1] = sub_2219D4F30;
    sub_2219D5380(v10);
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v16;
    *v16 = v0;
    v16[1] = sub_2219D515C;
    sub_2219D5748(v7, 0);
  }
}

uint64_t sub_2219D5380(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_222596B40();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D53E0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];

  v1 = (void *)v0[4];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[7] + 16))(v0[8], v0[5] + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v0[6]);
  swift_retain_n();
  v2 = v1;
  v3 = sub_222596B28();
  v4 = sub_222597020();
  if (os_log_type_enabled(v3, v4))
  {
    v17 = v0[7];
    v18 = v0[6];
    v19 = v0[8];
    v5 = (void *)v0[4];
    v6 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v20[0] = v16;
    v20[1] = 91;
    v20[2] = 0xE100000000000000;
    sub_222596624();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    v0[2] = sub_221921364(91, 0xE100000000000000, v20);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2112;
    v0[3] = v5;
    v7 = v5;
    sub_222597134();
    *v15 = v5;

    _os_log_impl(&dword_2218F0000, v3, v4, "%s Setting user activity report: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v16, -1, -1);
    MEMORY[0x227676FE0](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v9 = v0[7];
    v8 = v0[8];
    v10 = v0[6];
    v5 = (void *)v0[4];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = (void *)v0[4];
  v12 = objc_msgSend(v11, sel_contributorType);
  objc_msgSend(v11, sel_reason);
  v13 = (_QWORD *)swift_task_alloc();
  v0[9] = v13;
  *v13 = v0;
  v13[1] = sub_2219D56F8;
  return sub_2219D99C4((uint64_t)v5, (uint64_t)v12);
}

uint64_t sub_2219D56F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219D5748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_222596B40();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D57AC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[9] + 16))(v0[10], v0[7] + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v0[8]);
  swift_retain_n();
  v1 = sub_222596B28();
  v2 = sub_222597020();
  if (os_log_type_enabled(v1, v2))
  {
    v13 = v0[8];
    v14 = v0[10];
    v11 = v0[6];
    v12 = v0[9];
    v10 = v0[5];
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315650;
    v15[0] = v4;
    v15[1] = 91;
    v15[2] = 0xE100000000000000;
    sub_222596624();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    v0[2] = sub_221921364(91, 0xE100000000000000, v15);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2048;
    v0[3] = v10;
    sub_222597134();
    *(_WORD *)(v3 + 22) = 2048;
    v0[4] = v11;
    sub_222597134();
    _os_log_impl(&dword_2218F0000, v1, v2, "%s Unsetting user activity report for contributor type: %lu, reason: %lu", (uint8_t *)v3, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v4, -1, -1);
    MEMORY[0x227676FE0](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  }
  else
  {
    v6 = v0[9];
    v5 = v0[10];
    v7 = v0[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  *v8 = v0;
  v8[1] = sub_2219D5A50;
  return sub_2219D99C4(0, v0[5]);
}

uint64_t sub_2219D5A50()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219D5AD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_222596678();
  if (v1 <= 0x3F)
  {
    result = sub_222596B40();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_2219D5BB4(void *a1)
{
  id v1;
  id v2;

  if (!a1)
    return 0x7465736E75;
  v1 = a1;
  v2 = objc_msgSend(v1, sel_description);
  sub_222596CF0();

  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();

  return 678716787;
}

uint64_t sub_2219D5C64()
{
  void **v0;

  return sub_2219D5BB4(*v0);
}

uint64_t sub_2219D5C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v28[2];
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = sub_222596B40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_isCoordinating) & 1) != 0)
    goto LABEL_2;
  if (a1 == 1)
  {
    LOBYTE(v10) = 1;
    return v10 & 1;
  }
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_currentReports);
  swift_beginAccess();
  v12 = *v11;
  v10 = *(_QWORD *)(v12 + 16);
  if (!v10)
    return v10 & 1;
  v13 = sub_22198D680(1);
  if ((v14 & 1) == 0)
    goto LABEL_2;
  v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13);
  if (!v15)
  {
    LOBYTE(v10) = a2 == 1;
    return v10 & 1;
  }
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v6);
    swift_retain_n();
    v20 = v15;
    v21 = sub_222596B28();
    v22 = sub_222597038();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29 = v24;
      *(_DWORD *)v23 = 136315138;
      v28[1] = v23 + 4;
      v31 = 91;
      v32 = 0xE100000000000000;
      v33 = v24;
      sub_222596624();
      v30 = v20;
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      v31 = sub_221921364(v31, v32, &v33);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v21, v22, "%s Not a valid home away report", v23, 0xCu);
      v25 = v29;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v25, -1, -1);
      MEMORY[0x227676FE0](v23, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_2:
    LOBYTE(v10) = 0;
    return v10 & 1;
  }
  v17 = (void *)v16;
  v18 = v15;
  if (objc_msgSend(v17, sel_state) != (id)2)
  {
    if (objc_msgSend(v17, sel_state) == (id)3)
    {
      v26 = sub_2219D3678(a1, (uint64_t)&unk_24E765B08);

      LOBYTE(v10) = v26 | (a2 == 1);
      return v10 & 1;
    }

    goto LABEL_2;
  }

  LOBYTE(v10) = a1 == 2 || a2 == 1;
  return v10 & 1;
}

uint64_t sub_2219D5FD4(void *a1)
{
  id v1;
  id v2;

  if (!a1)
    return 0x7465736E75;
  v1 = a1;
  v2 = objc_msgSend(v1, sel_description);
  sub_222596CF0();

  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();

  return 678716787;
}

uint64_t sub_2219D6088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  void *v36;
  void *v37;
  unsigned int v38;
  id v39;
  char *v40;
  id v41;
  void *v42;
  char *v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70[2];

  v1 = v0;
  v70[1] = *MEMORY[0x24BDAC8D0];
  v2 = sub_222596B40();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v57 - v6;
  v8 = sub_22259660C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v57 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v57 - v16;
  v18 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_dateProvider), "now");
  sub_2225965F4();

  sub_2225965E8();
  v66 = *(void (**)(char *, uint64_t))(v9 + 8);
  v66(v15, v8);
  v64 = v3;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v60 = v1 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger;
  v61 = v19;
  ((void (*)(char *))v19)(v7);
  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v67 = v8;
  v20(v12, v17, v8);
  swift_retain_n();
  v65 = v7;
  v21 = sub_222596B28();
  v22 = sub_222597020();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v62 = v2;
    v24 = v23;
    v59 = swift_slowAlloc();
    v70[0] = v59;
    *(_DWORD *)v24 = 136315394;
    v68 = 91;
    v69 = 0xE100000000000000;
    sub_222596624();
    v58 = v21;
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    v68 = sub_221921364(v68, v69, v70);
    sub_222597134();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    v25 = (void *)sub_2225965DC();
    v26 = objc_msgSend(v25, sel_hmf_localTimeDescription);

    v27 = sub_222596CF0();
    v28 = v17;
    v30 = v29;

    v68 = sub_221921364(v27, v30, v70);
    sub_222597134();
    v17 = v28;
    swift_bridgeObjectRelease();
    v66(v12, v67);
    v31 = v58;
    _os_log_impl(&dword_2218F0000, v58, v22, "%s Scheduling periodic update timer firing at %s", (uint8_t *)v24, 0x16u);
    v32 = v59;
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v32, -1, -1);
    v33 = v24;
    v2 = v62;
    MEMORY[0x227676FE0](v33, -1, -1);

  }
  else
  {
    swift_release_n();
    v66(v12, v67);

  }
  v34 = *(void (**)(char *, uint64_t))(v64 + 8);
  v34(v65, v2);
  v35 = *(void **)(v1 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_backgroundTaskManager);
  v36 = (void *)sub_222596CD8();
  v37 = (void *)sub_2225965DC();
  v68 = 0;
  v38 = objc_msgSend(v35, sel_scheduleTaskWithIdentifier_fireDate_onObserver_selector_error_, v36, v37, v1, sel_handleBackgroundTaskManagerTimerFiredWithNotification_, &v68);

  if (v38)
  {
    v39 = (id)v68;
    v40 = v17;
  }
  else
  {
    v65 = v17;
    v41 = (id)v68;
    v42 = (void *)sub_2225964C8();

    swift_willThrow();
    v43 = v63;
    v61(v63, v60, v2);
    swift_retain();
    v44 = v42;
    swift_retain();
    v45 = v42;
    v46 = sub_222596B28();
    v47 = sub_222597038();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v62 = v2;
      v49 = v48;
      v50 = (_QWORD *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v70[0] = v64;
      *(_DWORD *)v49 = 136315394;
      v68 = 91;
      v69 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      v68 = sub_221921364(v68, v69, v70);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2112;
      v51 = v42;
      v52 = _swift_stdlib_bridgeErrorToNSError();
      v68 = v52;
      sub_222597134();
      *v50 = v52;

      _os_log_impl(&dword_2218F0000, v46, v47, "%s Failed to schedule periodic update timer with error: %@", (uint8_t *)v49, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v50, -1, -1);
      v53 = v64;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v53, -1, -1);
      MEMORY[0x227676FE0](v49, -1, -1);

      v55 = v62;
      v54 = v63;
    }
    else
    {

      swift_release_n();
      v54 = v43;
      v55 = v2;
    }
    v34(v54, v55);
    v40 = v65;
  }
  return ((uint64_t (*)(char *, uint64_t))v66)(v40, v67);
}

uint64_t sub_2219D67A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[3];
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_userInfo);
  if (!v7)
  {
    v20 = 0u;
    v21 = 0u;
    return sub_221917338((uint64_t)&v20, &qword_2557410E0);
  }
  v8 = v7;
  v9 = sub_222596C6C();

  v18[1] = sub_222596CF0();
  v18[2] = v10;
  sub_222597230();
  if (*(_QWORD *)(v9 + 16) && (v11 = sub_22198D548((uint64_t)v19), (v12 & 1) != 0))
  {
    sub_221921C04(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_22192C7DC((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    return sub_221917338((uint64_t)&v20, &qword_2557410E0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v14 = v19[0];
    v15 = v19[1];
    v16 = sub_222596EF4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v2;
    v17[5] = v14;
    v17[6] = v15;
    swift_retain();
    sub_22191760C((uint64_t)v6, (uint64_t)&unk_2557410F0, (uint64_t)v17);
    return swift_release();
  }
  return result;
}

uint64_t sub_2219D6980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_221901E24;
  return sub_2219D69E4(a5, a6);
}

uint64_t sub_2219D69E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_222596B40();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D6A48()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14[3];

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_periodicUpdateTimerIdentifier) != *(_QWORD *)(v0 + 24)
    || *(_QWORD *)(v1
                 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_periodicUpdateTimerIdentifier
                 + 8) != *(_QWORD *)(v0 + 32))
  {
    if ((sub_2225976E0() & 1) == 0)
    {
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v1 = *(_QWORD *)(v0 + 40);
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 16))(*(_QWORD *)(v0 + 64), v1 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, *(_QWORD *)(v0 + 48));
  swift_retain_n();
  v3 = sub_222596B28();
  v4 = sub_222597020();
  v5 = os_log_type_enabled(v3, v4);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v13 = *(_QWORD *)(v0 + 56);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v14[0] = v10;
    v14[1] = 91;
    v14[2] = 0xE100000000000000;
    sub_222596624();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_222596D50();
    *(_QWORD *)(v0 + 16) = sub_221921364(91, 0xE100000000000000, v14);
    sub_222597134();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_2218F0000, v3, v4, "%s handlePeriodicUpdateTimerFired: sending periodic reports", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v10, -1, -1);
    MEMORY[0x227676FE0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v8);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  sub_2219D92B0(0);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v11;
  *v11 = v0;
  v11[1] = sub_2219D6D08;
  return sub_2219D6D90();
}

uint64_t sub_2219D6D08()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219D6D90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[15] = v0;
  v2 = sub_222596B40();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D6E0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  os_log_type_t type;
  uint64_t v43;
  NSObject *log;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v1 = sub_2219D7720();
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v5 = (uint64_t)v1;
    v6 = v4 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger;
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v50(*(_QWORD *)(v0 + 160), v4 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v2);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    log = sub_222596B28();
    type = sub_222597020();
    v7 = os_log_type_enabled(log, type);
    v8 = *(_QWORD *)(v0 + 160);
    v43 = *(_QWORD *)(v0 + 136);
    v45 = *(_QWORD *)(v0 + 128);
    if (v7)
    {
      v9 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v52 = v41;
      *(_DWORD *)v9 = 136315394;
      v53 = 91;
      v54 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      *(_QWORD *)(v0 + 104) = sub_221921364(91, 0xE100000000000000, &v52);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2080;
      type metadata accessor for HMDHomeActivityStateContributorType(0);
      sub_2219D997C();
      swift_bridgeObjectRetain();
      v10 = sub_222596C78();
      v12 = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 112) = sub_221921364(v10, v12, &v52);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, log, type, "%s Sending reports: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v41, -1, -1);
      MEMORY[0x227676FE0](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v13(v8, v45);
    v22 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 128);
    sub_2219D342C(v5);
    v25 = v24;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741108);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_222688C60;
    *(_QWORD *)(inited + 32) = sub_222596CF0();
    *(_QWORD *)(inited + 40) = v27;
    *(_QWORD *)(inited + 48) = v25;
    v28 = sub_221902AC4(inited);
    v50(v22, v6, v23);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_222596B28();
    v30 = sub_22259702C();
    v31 = os_log_type_enabled(v29, v30);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 128);
    if (v31)
    {
      v34 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v52 = v46;
      *(_DWORD *)v34 = 136315394;
      v49 = v33;
      v53 = 91;
      v54 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      *(_QWORD *)(v0 + 88) = sub_221921364(v53, v54, &v52);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255741110);
      v35 = sub_222596C78();
      v37 = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 96) = sub_221921364(v35, v37, &v52);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v29, v30, "%s Sending payload: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v46, -1, -1);
      MEMORY[0x227676FE0](v34, -1, -1);

      v13(v32, v49);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      v13(v32, v33);
    }
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_messenger), *(_QWORD *)(*(_QWORD *)(v0 + 120)+ OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_messenger+ 24));
    v38 = sub_2219D3A84(v28);
    *(_QWORD *)(v0 + 168) = v38;
    swift_bridgeObjectRelease();
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v39;
    *v39 = v0;
    v39[1] = sub_2219D7674;
    return sub_221922144(v38);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 144), v4 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v2);
    swift_retain_n();
    v14 = sub_222596B28();
    v15 = sub_222597020();
    v16 = os_log_type_enabled(v14, v15);
    v18 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    if (v16)
    {
      v51 = *(_QWORD *)(v0 + 144);
      v48 = *(_QWORD *)(v0 + 128);
      v20 = (uint8_t *)swift_slowAlloc();
      v47 = v18;
      v21 = swift_slowAlloc();
      v52 = v21;
      *(_DWORD *)v20 = 136315138;
      v53 = 91;
      v54 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      *(_QWORD *)(v0 + 80) = sub_221921364(91, 0xE100000000000000, &v52);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v14, v15, "%s No reports to send", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v21, -1, -1);
      MEMORY[0x227676FE0](v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v48);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219D7674()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2219D76D4()
{
  uint64_t v0;

  sub_2219D6088();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_2219D7720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_222596B40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_currentReports);
  swift_beginAccess();
  v7 = *v6;
  if (!*(_QWORD *)(*v6 + 16) || (v8 = sub_22198D680(1), (v9 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v2);
    swift_retain_n();
    v17 = sub_222596B28();
    v18 = sub_222597020();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v24 = v20;
      *(_DWORD *)v19 = 136315138;
      v23[1] = v19 + 4;
      v25 = 91;
      v26 = 0xE100000000000000;
      v27 = v20;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      v25 = sub_221921364(v25, v26, &v27);
      sub_222597134();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2218F0000, v17, v18, "%s Home away is unspecified", v19, 0xCu);
      v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v21, -1, -1);
      MEMORY[0x227676FE0](v19, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
  if (!v10)
    return sub_2219D8850(*v6);
  objc_opt_self();
  v11 = swift_dynamicCastObjCClass();
  if (!v11)
    return 0;
  v12 = (void *)v11;
  swift_retain();
  v13 = v10;
  v14 = swift_bridgeObjectRetain();
  sub_2219D8F00(v14, v12);
  v16 = v15;
  swift_release();
  swift_bridgeObjectRelease();

  return (_QWORD *)v16;
}

uint64_t sub_2219D7A1C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  void *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t result;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;

  v3 = *(void **)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741128);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_222688C60;
  *(_QWORD *)(inited + 32) = sub_222596CF0();
  *(_QWORD *)(inited + 40) = v5;
  v6 = sub_222597128();
  v7 = sub_221917374(0, (unint64_t *)&unk_25573F0D0);
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 48) = v6;
  v8 = sub_221902AD0(inited);
  if (v3)
  {
    v9 = sub_222596CF0();
    v11 = v10;
    v12 = v3;
    v41 = v7;
    *(_QWORD *)&v40 = sub_2225970D4();
    sub_221903284(&v40, &v38);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v42 = v8;
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
    MEMORY[0x24BDAC7A8](v14);
    v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    sub_2219D8A58(*v16, v9, v11, isUniquelyReferenced_nonNull_native, &v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    v18 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = sub_222596CF0();
    v21 = v20;
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C070);
    v22 = objc_msgSend(v12, sel_serializedRemoteMessagePayload);
    v23 = sub_222596C6C();

    *(_QWORD *)&v40 = v23;
    sub_221903284(&v40, &v38);
    LOBYTE(v22) = swift_isUniquelyReferenced_nonNull_native();
    v42 = v18;
    v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
    MEMORY[0x24BDAC7A8](v24);
    v26 = (uint64_t *)((char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v27 + 16))(v26);
    sub_2219D8C08(*v26, v19, v21, (char)v22, &v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    v28 = v42;

  }
  else
  {
    v29 = sub_222596CF0();
    v31 = v30;
    v41 = v7;
    *(_QWORD *)&v40 = sub_2225970D4();
    sub_221903284(&v40, &v38);
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v42 = v8;
    v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
    MEMORY[0x24BDAC7A8](v33);
    v35 = (uint64_t *)((char *)&v38 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v36 + 16))(v35);
    sub_2219D8A58(*v35, v29, v31, v32, &v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    v28 = v42;
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v28;
  return result;
}

uint64_t sub_2219D7D98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596EF4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v3;
  v11[5] = a1;
  v11[6] = a2;
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if ((_DWORD)a2 == 1)
  {
    sub_221917338((uint64_t)v8, &qword_25573FD20);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    sub_222596EE8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_222596EA0();
      v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = &unk_2557410C0;
  *(_QWORD *)(v15 + 24) = v11;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_2219D7F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_221901E24;
  return sub_2219D7FDC(a5, a6);
}

uint64_t sub_2219D7FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = sub_222596B40();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D8040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 80)
                 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_detectorsByContributorType);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_22198D680(*(_QWORD *)(v0 + 64)), (v4 & 1) != 0))
  {
    v5 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v3);
    *(_QWORD *)(v0 + 112) = v5;
    v6 = objc_msgSend(v5, sel_latestReport);
    *(_QWORD *)(v0 + 120) = v6;
    if (v6)
    {
      v7 = (uint64_t)v6;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v8;
      *v8 = v0;
      v8[1] = sub_2219D83CC;
      return sub_2219D5380(v7);
    }
    else
    {
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v20;
      *v20 = v0;
      v20[1] = sub_2219D8460;
      return sub_2219D5748(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, *(_QWORD *)(v0 + 88));
    swift_retain_n();
    v10 = sub_222596B28();
    v11 = sub_222597038();
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    if (v12)
    {
      v21 = *(_QWORD *)(v0 + 64);
      v22 = *(_QWORD *)(v0 + 96);
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315394;
      v23[0] = v17;
      v23[1] = 91;
      v23[2] = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      *(_QWORD *)(v0 + 40) = sub_221921364(91, 0xE100000000000000, v23);
      sub_222597134();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v16 + 12) = 2080;
      *(_QWORD *)(v0 + 48) = v21;
      type metadata accessor for HMDHomeActivityStateContributorType(0);
      v18 = sub_222596D20();
      *(_QWORD *)(v0 + 56) = sub_221921364(v18, v19, v23);
      sub_222597134();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v10, v11, "%s Unexpectedly asked to handle state change for detector of unknown type: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v17, -1, -1);
      MEMORY[0x227676FE0](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v13, v15);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219D83CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D8424()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219D8460()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D84B8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void **initializeBufferWithCopyOfBuffer for DefaultUserActivityReportCoordinator.UserActivityValue(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for DefaultUserActivityReportCoordinator.UserActivityValue(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for DefaultUserActivityReportCoordinator.UserActivityValue(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultUserActivityReportCoordinator.UserActivityValue(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DefaultUserActivityReportCoordinator.UserActivityValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_2219D8668(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2219D8680(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for DefaultUserActivityReportCoordinator.UserActivityValue()
{
  return &type metadata for DefaultUserActivityReportCoordinator.UserActivityValue;
}

uint64_t sub_2219D86B0()
{
  return objectdestroy_7Tm_0();
}

uint64_t sub_2219D86B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221901E24;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_221901E24;
  return sub_2219D7FDC(v2, v3);
}

uint64_t sub_2219D8738(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2219C1AB8;
  return v6(a1);
}

uint64_t sub_2219D879C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2219D87D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_221901E24;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_221901E24;
  return sub_2219D69E4(v2, v3);
}

_QWORD *sub_2219D8850(uint64_t a1)
{
  _QWORD *result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255741130);
  result = (_QWORD *)sub_2225973BC();
  v3 = 0;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    v14 = 8 * i;
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    *(_QWORD *)((char *)result + ((i >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << i;
    *(_QWORD *)(result[6] + v14) = v15;
    *(_QWORD *)(result[7] + v14) = 0;
    v16 = result[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v18;
    if (v7)
      goto LABEL_4;
LABEL_5:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_24;
    if (v11 >= v8)
      return result;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return result;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return result;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v7 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return result;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return result;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2219D89D0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_OWORD *sub_2219D8A58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v10 = sub_221917374(0, (unint64_t *)&unk_25573F0D0);
  v29 = v10;
  *(_QWORD *)&v28 = a1;
  v11 = (_QWORD *)*a5;
  v13 = sub_22198D4E4(a2, a3);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a4 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a5;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_221903284(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_22196A62C();
    goto LABEL_7;
  }
  sub_2219676DC(v16, a4 & 1);
  v22 = sub_22198D4E4(a2, a3);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_222597878();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a5;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_2219D8E50(v13, a2, a3, *v26, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_2219D8C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C070);
  v29 = v10;
  *(_QWORD *)&v28 = a1;
  v11 = (_QWORD *)*a5;
  v13 = sub_22198D4E4(a2, a3);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a4 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a5;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_221903284(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_22196A62C();
    goto LABEL_7;
  }
  sub_2219676DC(v16, a4 & 1);
  v22 = sub_22198D4E4(a2, a3);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_222597878();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a5;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_2219D8DAC(v13, a2, a3, *v26, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_2219D8DAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v10;
  _OWORD *result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C070);
  *(_QWORD *)&v15 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  result = sub_221903284(&v15, (_OWORD *)(a5[7] + 32 * a1));
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

_OWORD *sub_2219D8E50(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v10;
  _OWORD *result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = sub_221917374(0, (unint64_t *)&unk_25573F0D0);
  *(_QWORD *)&v15 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  result = sub_221903284(&v15, (_OWORD *)(a5[7] + 32 * a1));
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void sub_2219D8F00(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  int64_t v38;
  uint64_t v39;

  v4 = MEMORY[0x24BEE4B00];
  v5 = a1 + 64;
  v39 = MEMORY[0x24BEE4B00];
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v38 = (unint64_t)(63 - v6) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v8)
    goto LABEL_37;
LABEL_9:
  v17 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v17 < v38)
    {
      v18 = *(_QWORD *)(v5 + 8 * v17);
      v19 = i + 1;
      if (v18)
        goto LABEL_24;
      v19 = i + 2;
      if (i + 2 >= v38)
        goto LABEL_47;
      v18 = *(_QWORD *)(v5 + 8 * v19);
      if (v18)
        goto LABEL_24;
      v19 = i + 3;
      if (i + 3 >= v38)
        goto LABEL_47;
      v18 = *(_QWORD *)(v5 + 8 * v19);
      if (v18)
        goto LABEL_24;
      v19 = i + 4;
      if (i + 4 >= v38)
        goto LABEL_47;
      v18 = *(_QWORD *)(v5 + 8 * v19);
      if (v18)
      {
LABEL_24:
        v8 = (v18 - 1) & v18;
        v21 = __clz(__rbit64(v18)) + (v19 << 6);
        for (i = v19; ; v21 = v30 | (i << 6))
        {
          v26 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v21);
          v27 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v21);
          if (!v27)
            goto LABEL_44;
          v28 = v27;
          v29 = objc_msgSend(a2, sel_state);
          if (v29 == (id)3)
          {
            objc_opt_self();
            v31 = swift_dynamicCastObjCClass();
            v32 = v27;
            if (!v31)
            {
              objc_opt_self();
              v33 = swift_dynamicCastObjCClass();
              v32 = v27;
              if (!v33)
                goto LABEL_42;
            }
          }
          else
          {
            if (v29 != (id)2)
            {

              if (!v8)
                goto LABEL_9;
              goto LABEL_37;
            }
            objc_opt_self();
            v34 = swift_dynamicCastObjCClass();
            v32 = v27;
            if (!v34)
            {
LABEL_42:
              objc_opt_self();
              v35 = swift_dynamicCastObjCClass();
              v32 = v27;
              if (v35)
                goto LABEL_45;

LABEL_44:
              v32 = 0;
            }
          }
LABEL_45:
          v37 = v32;
          v36 = *(_QWORD *)(v4 + 16);
          if (*(_QWORD *)(v4 + 24) <= v36)
          {
            sub_22196713C(v36 + 1, 1);
            v4 = v39;
          }
          sub_2225978F0();
          sub_2225978FC();
          v10 = sub_222597938();
          v11 = v4 + 64;
          v12 = -1 << *(_BYTE *)(v4 + 32);
          v13 = v10 & ~v12;
          v14 = v13 >> 6;
          if (((-1 << v13) & ~*(_QWORD *)(v4 + 64 + 8 * (v13 >> 6))) != 0)
          {
            v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v22 = 0;
            v23 = (unint64_t)(63 - v12) >> 6;
            do
            {
              if (++v14 == v23 && (v22 & 1) != 0)
              {
                __break(1u);
                goto LABEL_48;
              }
              v24 = v14 == v23;
              if (v14 == v23)
                v14 = 0;
              v22 |= v24;
              v25 = *(_QWORD *)(v11 + 8 * v14);
            }
            while (v25 == -1);
            v15 = __clz(__rbit64(~v25)) + (v14 << 6);
          }
          *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
          v16 = 8 * v15;
          *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v26;
          *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v37;
          ++*(_QWORD *)(v4 + 16);

          if (!v8)
            goto LABEL_9;
LABEL_37:
          v30 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      v20 = i + 5;
      if (i + 5 < v38)
      {
        v18 = *(_QWORD *)(v5 + 8 * v20);
        if (v18)
        {
          v19 = i + 5;
          goto LABEL_24;
        }
        while (1)
        {
          v19 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_49;
          if (v19 >= v38)
            break;
          v18 = *(_QWORD *)(v5 + 8 * v19);
          ++v20;
          if (v18)
            goto LABEL_24;
        }
      }
    }
LABEL_47:
    sub_22193D780();
    return;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t sub_2219D92B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  os_log_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v47;
  void *v48;
  id v49;
  id v50;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v52;
  _QWORD *v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t result;
  id v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81[3];
  uint64_t v82;
  unint64_t v83;

  v2 = v1;
  v4 = sub_222596B40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22259660C();
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v76 = a1;
  v77 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &qword_255740000;
  if (a1
    && (v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_currentReports),
        swift_beginAccess(),
        v12 = *v11,
        *(_QWORD *)(v12 + 16))
    && (v13 = sub_22198D680(a1), (v14 & 1) != 0)
    && (v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13)) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, v4);
    v16 = v15;
    swift_retain_n();
    v17 = v16;
    v18 = sub_222596B28();
    v19 = sub_22259702C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      LODWORD(v78) = v20;
      v22 = v21;
      v75 = (_QWORD *)swift_slowAlloc();
      v79 = swift_slowAlloc();
      v81[0] = v79;
      *(_DWORD *)v22 = 136315394;
      v71 = v22 + 4;
      v72 = v18;
      v82 = 91;
      v83 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      v82 = sub_221921364(v82, v83, v81);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      v70 = (uint8_t *)v22;
      *(_WORD *)(v22 + 12) = 2112;
      v82 = (uint64_t)v17;
      v23 = v17;
      a1 = v76;
      v10 = &qword_255740000;
      sub_222597134();
      v24 = v75;
      *v75 = v15;

      v25 = v72;
      v26 = v70;
      _os_log_impl(&dword_2218F0000, v72, (os_log_type_t)v78, "%s Updating lastUpdateTimestamp of other report matching %@", v70, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v24, -1, -1);
      v27 = v79;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v27, -1, -1);
      MEMORY[0x227676FE0](v26, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v68 = objc_msgSend(v17, sel_lastUpdateTimestamp);
    sub_2225965F4();

  }
  else
  {
    v17 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_dateProvider), "now");
    sub_2225965F4();
  }

  v28 = (_QWORD *)(v2 + v10[498]);
  swift_beginAccess();
  v29 = *v28;
  v30 = *(_QWORD *)(*v28 + 64);
  v78 = *v28 + 64;
  v31 = 1 << *(_BYTE *)(v29 + 32);
  v32 = -1;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  v33 = v32 & v30;
  v79 = (unint64_t)(v31 + 63) >> 6;
  v34 = swift_bridgeObjectRetain();
  v35 = 0;
  v75 = (_QWORD *)v34;
  while (v33)
  {
    v38 = __clz(__rbit64(v33));
    v33 &= v33 - 1;
    v39 = v38 | (v35 << 6);
LABEL_29:
    v43 = 8 * v39;
    v44 = *(_QWORD *)(*(_QWORD *)(v34 + 48) + v43);
    v45 = *(void **)(*(_QWORD *)(v34 + 56) + v43);
    if (v44 != a1 && v45 != 0)
    {
      v47 = v45;
      v48 = (void *)sub_2225965DC();
      v49 = objc_msgSend(v47, sel_copyReportWithLastUpdateTimestamp_reason_, v48, 6);

      swift_beginAccess();
      v50 = v49;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v80 = (_QWORD *)*v28;
      v52 = v80;
      v53 = v28;
      *v28 = 0x8000000000000000;
      v55 = sub_22198D680(v44);
      v56 = v52[2];
      v57 = (v54 & 1) == 0;
      v58 = v56 + v57;
      if (__OFADD__(v56, v57))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v59 = v54;
      if (v52[3] >= v58)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v62 = v80;
          if ((v54 & 1) != 0)
            goto LABEL_11;
        }
        else
        {
          sub_22196A2EC();
          v62 = v80;
          if ((v59 & 1) != 0)
            goto LABEL_11;
        }
      }
      else
      {
        sub_22196713C(v58, isUniquelyReferenced_nonNull_native);
        v60 = sub_22198D680(v44);
        if ((v59 & 1) != (v61 & 1))
          goto LABEL_51;
        v55 = v60;
        v62 = v80;
        if ((v59 & 1) != 0)
        {
LABEL_11:
          v36 = v62[7];
          v37 = 8 * v55;

          *(_QWORD *)(v36 + v37) = v50;
          goto LABEL_12;
        }
      }
      v62[(v55 >> 6) + 8] |= 1 << v55;
      v63 = 8 * v55;
      *(_QWORD *)(v62[6] + v63) = v44;
      *(_QWORD *)(v62[7] + v63) = v50;
      v64 = v62[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_49;
      v62[2] = v66;
LABEL_12:
      v28 = v53;
      *v53 = v62;
      swift_bridgeObjectRelease();
      swift_endAccess();

      v34 = (uint64_t)v75;
      a1 = v76;
    }
  }
  v40 = v35 + 1;
  if (__OFADD__(v35, 1))
    goto LABEL_48;
  if (v40 >= v79)
  {
LABEL_44:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v77, v74);
  }
  v41 = *(_QWORD *)(v78 + 8 * v40);
  ++v35;
  if (v41)
    goto LABEL_28;
  v35 = v40 + 1;
  if (v40 + 1 >= v79)
    goto LABEL_44;
  v41 = *(_QWORD *)(v78 + 8 * v35);
  if (v41)
    goto LABEL_28;
  v35 = v40 + 2;
  if (v40 + 2 >= v79)
    goto LABEL_44;
  v41 = *(_QWORD *)(v78 + 8 * v35);
  if (v41)
  {
LABEL_28:
    v33 = (v41 - 1) & v41;
    v39 = __clz(__rbit64(v41)) + (v35 << 6);
    goto LABEL_29;
  }
  v42 = v40 + 3;
  if (v42 >= v79)
    goto LABEL_44;
  v41 = *(_QWORD *)(v78 + 8 * v42);
  if (v41)
  {
    v35 = v42;
    goto LABEL_28;
  }
  while (1)
  {
    v35 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v35 >= v79)
      goto LABEL_44;
    v41 = *(_QWORD *)(v78 + 8 * v35);
    ++v42;
    if (v41)
      goto LABEL_28;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  type metadata accessor for HMDHomeActivityStateContributorType(0);
  result = sub_222597878();
  __break(1u);
  return result;
}

unint64_t sub_2219D997C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255741118;
  if (!qword_255741118)
  {
    type metadata accessor for HMDHomeActivityStateContributorType(255);
    result = MEMORY[0x227676F2C](&unk_2226885F8, v1);
    atomic_store(result, (unint64_t *)&qword_255741118);
  }
  return result;
}

uint64_t sub_2219D99C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_222596B40();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219D9A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v11;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  os_log_type_t type;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_currentReports;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (v3 = sub_22198D680(*(_QWORD *)(v0 + 88)), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
    v6 = (id)v5;
  }
  else
  {
    v5 = 1;
  }
  v7 = *(void **)(v0 + 80);
  *(_QWORD *)(v0 + 128) = v5;
  v8 = *(_QWORD *)(v0 + 88);
  swift_beginAccess();
  v9 = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30 = *(_QWORD *)v1;
  *(_QWORD *)v1 = 0x8000000000000000;
  sub_2219689CC((uint64_t)v7, v8, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v1 = v30;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((sub_2219D5C6C(v8, v5) & 1) != 0)
  {
    sub_2219D92B0(*(_QWORD *)(v0 + 88));
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_2219D9E00;
    return sub_2219D6D90();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC13HomeKitDaemon36DefaultUserActivityReportCoordinator_logger, *(_QWORD *)(v0 + 104));
    v13 = v9;
    swift_retain_n();
    v14 = v13;
    v15 = sub_222596B28();
    v16 = sub_222597020();
    v17 = os_log_type_enabled(v15, v16);
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);
    if (v17)
    {
      v28 = *(_QWORD *)(v0 + 104);
      v25 = *(void **)(v0 + 80);
      type = v16;
      v21 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_DWORD *)v21 = 136315394;
      v29 = v26;
      v30 = 91;
      v31 = 0xE100000000000000;
      sub_222596624();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      sub_222596D50();
      sub_222596D50();
      *(_QWORD *)(v0 + 64) = sub_221921364(91, 0xE100000000000000, &v29);
      sub_222597134();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v22 = v14;
      v23 = sub_2219D5FD4(v25);
      *(_QWORD *)(v0 + 72) = sub_221921364(v23, v24, &v29);
      sub_222597134();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v15, type, "%s Not sending update: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v26, -1, -1);
      MEMORY[0x227676FE0](v21, -1, -1);
      sub_2219D9E90((id)v5);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v28);
    }
    else
    {
      sub_2219D9E90((id)v5);

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219D9E00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219D9E58()
{
  uint64_t v0;

  sub_2219D9E90(*(id *)(v0 + 128));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2219D9E90(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_2219D9EA0()
{
  return objectdestroy_7Tm_0();
}

uint64_t sub_2219D9EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221900360;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_2219D9F08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219D9F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221900360;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2557410C8 + dword_2557410C8))(a1, v4);
}

uint64_t sub_2219D9F9C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2219D9FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_221901E24;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_221901E24;
  return sub_2219D4470(v2);
}

uint64_t sub_2219DA050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[5];
  _OWORD v22[2];
  char v23;

  v4 = v3;
  v8 = sub_222596678();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_OWORD *)(v4 + 16);
  v22[0] = *(_OWORD *)v4;
  v22[1] = v15;
  v23 = *(_BYTE *)(v4 + 32);
  v21[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573DA10);
  v21[4] = sub_2219DA9C0((unint64_t *)&qword_25573E038, (uint64_t *)&unk_25573DA10, (uint64_t)&off_24E7682B8);
  sub_2219032D0(a3, (uint64_t)v14, (uint64_t *)&unk_25573C160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    swift_bridgeObjectRetain();
    v16 = 0;
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    swift_bridgeObjectRetain();
    v16 = sub_22195DAC8((uint64_t)v22);
    v17 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v21[0] = v16;
  v21[1] = v17;
  return sub_2219EC30C((uint64_t)v21, a1, a2);
}

uint64_t sub_2219DA1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[5];

  v19 = a1;
  v5 = sub_22259660C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573BF30);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v20[-1] - v13;
  v20[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573DA10);
  v20[4] = sub_2219DA9C0((unint64_t *)&qword_25573E038, (uint64_t *)&unk_25573DA10, (uint64_t)&off_24E7682B8);
  sub_2219032D0(a3, (uint64_t)v14, &qword_25573BF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    swift_bridgeObjectRetain();
    v15 = 0;
    v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v14, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
    swift_bridgeObjectRetain();
    v15 = sub_2219DA3C8((uint64_t)v12);
    v16 = v17;
    sub_221917338((uint64_t)v12, &qword_25573BF30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20[0] = v15;
  v20[1] = v16;
  return sub_2219EC30C((uint64_t)v20, v19, a2);
}

uint64_t sub_2219DA3C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v19;

  v2 = sub_22259669C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573BF30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22259660C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2219032D0(a1, (uint64_t)v8, &qword_25573BF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_221917338((uint64_t)v8, &qword_25573BF30);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
    sub_222596690();
    v15 = (void *)sub_222596684();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v14, sel_setTimeZone_, v15);

    v16 = (void *)sub_2225965DC();
    v17 = objc_msgSend(v14, sel_stringFromDate_, v16);

    v13 = sub_222596CF0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_2219DA5C4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  float v9;
  char v10;
  float v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  double v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573BF30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573BF40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, sel_lastKnownValue))
  {
    sub_222597158();
    swift_unknownObjectRelease();
  }
  else
  {
    v28 = 0u;
    v29 = 0u;
  }
  sub_2219172F4((uint64_t)&v28, (uint64_t)v25, &qword_2557410E0);
  if (v26)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v8 = 0;
      v9 = v24;
      goto LABEL_9;
    }
  }
  else
  {
    sub_221917338((uint64_t)v25, &qword_2557410E0);
  }
  v8 = 1;
  v9 = 0.0;
LABEL_9:
  if (objc_msgSend(v0, sel_previousValue))
  {
    sub_222597158();
    swift_unknownObjectRelease();
  }
  else
  {
    v28 = 0u;
    v29 = 0u;
  }
  sub_2219172F4((uint64_t)&v28, (uint64_t)v25, &qword_2557410E0);
  if (v26)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = 0;
      v11 = v24;
      goto LABEL_17;
    }
  }
  else
  {
    sub_221917338((uint64_t)v25, &qword_2557410E0);
  }
  v10 = 1;
  v11 = 0.0;
LABEL_17:
  v12 = objc_msgSend(v0, sel_characteristicType);
  if (v12)
  {
    v13 = v12;
    v14 = sub_222596CF0();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573DA10);
  v27 = sub_2219DA9C0((unint64_t *)&qword_25573E038, (uint64_t *)&unk_25573DA10, (uint64_t)&off_24E7682B8);
  v25[0] = v14;
  v25[1] = v16;
  sub_2219EC30C((uint64_t)v25, 0xD000000000000012, 0x8000000222621640);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F988);
  v26 = v17;
  v18 = sub_2219DA9C0(&qword_255741178, &qword_25573F988, (uint64_t)&off_24E7682C8);
  v27 = v18;
  *(float *)v25 = v9;
  BYTE4(v25[0]) = v8;
  sub_2219EC30C((uint64_t)v25, 0x776F6E4B7473616CLL, 0xEE0065756C61566ELL);
  v19 = objc_msgSend(v1, sel_lastKnownValueUpdateTime);
  if (v19)
  {
    v20 = v19;
    sub_2225965F4();

    v21 = sub_22259660C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 0, 1, v21);
  }
  else
  {
    v22 = sub_22259660C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
  }
  sub_2219172F4((uint64_t)v4, (uint64_t)v7, &qword_25573BF30);
  sub_2219DA1E8(0xD000000000000018, 0x8000000222621660, (uint64_t)v7);
  sub_221917338((uint64_t)v7, &qword_25573BF40);
  v26 = v17;
  v27 = v18;
  *(float *)v25 = v11;
  BYTE4(v25[0]) = v10;
  return sub_2219EC30C((uint64_t)v25, 0x73756F6976657270, 0xED000065756C6156);
}

uint64_t sub_2219DA9C0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x227676F2C](&unk_22268B1E8, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2219DAA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  _QWORD v17[3];
  uint64_t v18;

  v17[1] = a2;
  v17[2] = a3;
  v18 = sub_222596B94();
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_222596B7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_222596B4C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = 0;
  }
  else
  {
    *(_QWORD *)v14 = 0;
    v14[8] = 1;
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDD4718], v11);
    sub_222596B88();
    sub_222596B88();
    v15 = sub_222596B64();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15 & 1;
}

uint64_t sub_2219DABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int *v17;
  char v18;
  _QWORD v20[3];
  uint64_t v21;

  v20[1] = a2;
  v20[2] = a3;
  v21 = sub_222596B94();
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596B7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_222596B4C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    *(_QWORD *)v16 = a4;
    v17 = (unsigned int *)MEMORY[0x24BDD4710];
  }
  else
  {
    if (a1)
    {
      v18 = 0;
      return v18 & 1;
    }
    *(_QWORD *)v16 = a4;
    v16[8] = 0;
    v17 = (unsigned int *)MEMORY[0x24BDD4718];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *v17, v13);
  sub_222596B88();
  sub_222596B88();
  v18 = sub_222596B64();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v18 & 1;
}

uint64_t sub_2219DAE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13HomeKitDaemon31ShimAccessoryMatterCapabilities_impl;
  v2 = sub_222596BAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2219DAE60()
{
  return type metadata accessor for ShimAccessoryMatterCapabilities();
}

uint64_t type metadata accessor for ShimAccessoryMatterCapabilities()
{
  uint64_t result;

  result = qword_2557411A8;
  if (!qword_2557411A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2219DAEA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596BAC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2219DAF10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v1 = (uint64_t)v0;
  sub_2225978F0();
  sub_2219DB3AC(v0, (uint64_t)&v7);
  sub_2219DB3AC(&v7, (uint64_t)&v8);
  sub_22259792C();
  v2 = v0[2];
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  sub_2219DB3E8(v1);
  sub_2219701C0((uint64_t)&v6, v2, v3, v4);
  sub_2219DB418(v1);
  return sub_222597938();
}

uint64_t sub_2219DAFC4()
{
  return sub_2219DAF10();
}

uint64_t sub_2219DAFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  sub_22259792C();
  sub_22190D5A0(v3, v4, v5);
  sub_2219701C0(a1, v3, v4, v5);
  return sub_22190D514(v3, v4, v5);
}

uint64_t sub_2219DB080()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  _BYTE v5[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  sub_2225978F0();
  sub_22259792C();
  sub_22190D5A0(v1, v2, v3);
  sub_2219701C0((uint64_t)v5, v1, v2, v3);
  sub_22190D514(v1, v2, v3);
  return sub_222597938();
}

void sub_2219DB11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  if (sub_22190B6E0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8)))
    sub_221970544(v2, v3, v4);
}

uint64_t _s11TaggedValueVwxx(uint64_t a1)
{
  return sub_22190D514(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t _s11TaggedValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  sub_22190D5A0(v3, v4, v5);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t _s11TaggedValueVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  v5 = a2[3];
  v6 = *((_BYTE *)a2 + 32);
  sub_22190D5A0(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_22190D514(v7, v8, v9);
  return a1;
}

uint64_t _s11TaggedValueVwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_22190D514(v4, v5, v6);
  return a1;
}

uint64_t _s11TaggedValueVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s11TaggedValueVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s11TaggedValueVMa()
{
  return &_s11TaggedValueVN;
}

unint64_t sub_2219DB368()
{
  unint64_t result;

  result = qword_255741240;
  if (!qword_255741240)
  {
    result = MEMORY[0x227676F2C](&unk_22268F1E0, &_s11TaggedValueVN);
    atomic_store(result, (unint64_t *)&qword_255741240);
  }
  return result;
}

uint64_t sub_2219DB3AC(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_4(a2, a1);
  return a2;
}

uint64_t sub_2219DB3E8(uint64_t a1)
{
  sub_22190D5A0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_2219DB418(uint64_t a1)
{
  sub_22190D514(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_2219DB448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573FD20);
  v3[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219DB4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v0 + 48) = v5;
  v6 = sub_222596EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  v7[5] = v4;
  v7[6] = v3;
  swift_retain_n();
  swift_retain();
  *(_QWORD *)(v2 + 112) = sub_22191760C(v1, (uint64_t)&unk_255741320, (uint64_t)v7);
  swift_release();
  v8 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v0 + 56) = v8;
  if (v8)
  {
    swift_retain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v9;
    *v9 = v0;
    v9[1] = sub_2219DB5E4;
    return sub_222596F60();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2219DB5E4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2219DB644()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219DB67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v9;
  uint64_t (*v10)(void);

  v6[2] = a5;
  v6[3] = a6;
  if (a4)
  {
    v7 = (_QWORD *)swift_task_alloc();
    v6[4] = v7;
    *v7 = v6;
    v7[1] = sub_2219DB720;
    return sub_222596F60();
  }
  else
  {
    v10 = (uint64_t (*)(void))((char *)a5 + *a5);
    v9 = (_QWORD *)swift_task_alloc();
    v6[5] = v9;
    *v9 = v6;
    v9[1] = sub_2219437FC;
    return v10();
  }
}

uint64_t sub_2219DB720()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219DB774()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(v0 + 16) + *(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2219437FC;
  return v3();
}

uint64_t _s4LockCMa()
{
  return objc_opt_self();
}

uint64_t sub_2219DB7EC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219DB820(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (int *)v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_221900360;
  return sub_2219DB67C(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_2219DB8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25573DBF0;
  if (!qword_25573DBF0)
  {
    v1 = type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService(255);
    result = MEMORY[0x227676F2C](&unk_22268AE60, v1);
    atomic_store(result, (unint64_t *)&qword_25573DBF0);
  }
  return result;
}

uint64_t sub_2219DB8EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService(0) + 20));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2219DB93C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for HomeIntelligenceProtoPETActivityLoggerHMDService(0) + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t sub_2219DB98C()
{
  void **v0;
  void *v1;
  id v2;
  void *v3;

  v1 = *v0;
  swift_getKeyPath();
  v2 = objc_msgSend(v1, sel_serviceType);
  if (v2)
  {
    v3 = v2;
    sub_222596CF0();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2557402F8);
    swift_bridgeObjectRetain();
    swift_setAtWritableKeyPath();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_2219DBA68(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  unint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_22191A810(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x227674274](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_22191A810(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_2219DBCA8();
        v16 = &off_24E76DB08;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_221903314(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v11 = *(_QWORD *)(v3 + 16);
        v12 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_22191A810(v12 > 1, v11 + 1, 1);
          v3 = v17;
        }
        v15 = sub_2219DBCA8();
        v16 = &off_24E76DB08;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_221903314(&v14, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2219DBC30()
{
  id *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(*v0, sel_results);
  if (v1)
  {
    v2 = v1;
    sub_2219DBCA8();
    v3 = sub_222596E40();

  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  v4 = sub_2219DBA68(v3);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_2219DBCA8()
{
  unint64_t result;

  result = qword_255741350;
  if (!qword_255741350)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255741350);
  }
  return result;
}

uint64_t sub_2219DBE38(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v7 = a3[3];
  v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v10 = v9(v7, v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *a4;
  *a4 = 0x8000000000000000;
  sub_221968B04(v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_2219DBFD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Metric.LogEventAdaptor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2219DC040@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_2219E17EC(*a1);
  *a2 = result;
  return result;
}

uint64_t *sub_2219DC068@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

unint64_t sub_2219DC080()
{
  char *v0;
  uint64_t inited;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255741438);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22268F300;
  *(_QWORD *)(inited + 32) = 0x69466957736168;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v2 = *v0;
  v3 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 80) = &off_24E76CB88;
  *(_BYTE *)(inited + 48) = v2;
  *(_QWORD *)(inited + 88) = 0x7265687445736168;
  *(_QWORD *)(inited + 96) = 0xEB0000000074656ELL;
  v4 = v0[1];
  *(_QWORD *)(inited + 128) = v3;
  *(_QWORD *)(inited + 136) = &off_24E76CB88;
  *(_BYTE *)(inited + 104) = v4;
  strcpy((char *)(inited + 144), "primaryService");
  *(_BYTE *)(inited + 159) = -18;
  v5 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 160) = v0[2];
  *(_QWORD *)(inited + 200) = 0xD000000000000016;
  *(_QWORD *)(inited + 208) = 0x8000000222621A30;
  *(_QWORD *)(inited + 216) = v0[3];
  *(_QWORD *)(inited + 256) = 0x4973614869666977;
  *(_QWORD *)(inited + 264) = 0xE900000000000050;
  *(_BYTE *)(inited + 272) = v0[4];
  strcpy((char *)(inited + 312), "ethernetHasIP");
  *(_WORD *)(inited + 326) = -4864;
  *(_BYTE *)(inited + 328) = v0[5];
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000222621A50;
  *(_BYTE *)(inited + 384) = v0[6];
  *(_QWORD *)(inited + 424) = 0xD000000000000016;
  *(_QWORD *)(inited + 432) = 0x8000000222621A70;
  *(_BYTE *)(inited + 440) = v0[7];
  *(_QWORD *)(inited + 480) = 0x616D697250736168;
  *(_QWORD *)(inited + 488) = 0xEA00000000007972;
  *(_BYTE *)(inited + 496) = v0[8];
  strcpy((char *)(inited + 536), "numResidents");
  *(_BYTE *)(inited + 549) = 0;
  *(_WORD *)(inited + 550) = -5120;
  v6 = *((_QWORD *)v0 + 3);
  *(_QWORD *)(inited + 552) = *((_QWORD *)v0 + 2);
  *(_QWORD *)(inited + 184) = v5;
  *(_QWORD *)(inited + 192) = &off_24E76CB98;
  *(_QWORD *)(inited + 240) = v5;
  *(_QWORD *)(inited + 248) = &off_24E76CB98;
  *(_QWORD *)(inited + 296) = v3;
  *(_QWORD *)(inited + 304) = &off_24E76CB88;
  *(_QWORD *)(inited + 352) = v3;
  *(_QWORD *)(inited + 360) = &off_24E76CB88;
  *(_QWORD *)(inited + 408) = v3;
  *(_QWORD *)(inited + 416) = &off_24E76CB88;
  *(_QWORD *)(inited + 464) = v3;
  *(_QWORD *)(inited + 472) = &off_24E76CB88;
  *(_QWORD *)(inited + 520) = v3;
  *(_QWORD *)(inited + 528) = &off_24E76CB88;
  *(_QWORD *)(inited + 576) = v5;
  *(_QWORD *)(inited + 584) = &off_24E76CB98;
  *(_QWORD *)(inited + 592) = 0xD000000000000018;
  *(_QWORD *)(inited + 600) = 0x8000000222621A90;
  *(_QWORD *)(inited + 632) = v5;
  *(_QWORD *)(inited + 640) = &off_24E76CB98;
  *(_QWORD *)(inited + 608) = v6;
  strcpy((char *)(inited + 648), "wifiRSSIStatus");
  *(_BYTE *)(inited + 663) = -18;
  v7 = v0[32];
  *(_QWORD *)(inited + 688) = v5;
  *(_QWORD *)(inited + 696) = &off_24E76CB98;
  *(_QWORD *)(inited + 664) = v7;
  *(_QWORD *)(inited + 704) = 0x4969466957736168;
  *(_QWORD *)(inited + 712) = 0xEB000000006F666ELL;
  LOBYTE(v5) = v0[33];
  *(_QWORD *)(inited + 744) = v3;
  *(_QWORD *)(inited + 752) = &off_24E76CB88;
  *(_BYTE *)(inited + 720) = v5;
  return sub_221902984(inited);
}

uint64_t sub_2219DC31C(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, _BYTE *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t result;
  void (*v39)(char *, _QWORD, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  char v42;
  char *v43;
  int v44;
  uint64_t v45;
  char *v46;
  _BYTE *v47;
  _BYTE *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;

  v55 = a4;
  v47 = a3;
  v48 = a5;
  v7 = sub_2225967A4();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_2225968A0();
  v52 = *(_QWORD *)(v56 - 8);
  v9 = MEMORY[0x24BDAC7A8](v56);
  v53 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v45 - v14;
  v16 = sub_222596888();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a1;
  v20 = sub_22259678C();
  v22 = v21;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
  {
    swift_bridgeObjectRelease();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
    goto LABEL_3;
  }
  v46 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  v32 = sub_222596828();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v20 == v32 && v22 == v34)
  {
    swift_bridgeObjectRelease_n();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
  }
  else
  {
    v36 = sub_2225976E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = v53;
    v23 = v54;
    v26 = v51;
    v25 = v52;
    v27 = v49;
    if ((v36 & 1) == 0)
      goto LABEL_3;
  }
  v43 = v46;
  sub_222596798();
  v44 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v43, v56);
  if (v44 == *MEMORY[0x24BE3E948])
  {
    *v47 = 2;
  }
  else if (v44 == *MEMORY[0x24BE3E950])
  {
    *v47 = 1;
  }
  else
  {
    *v47 = 3;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v56);
  }
LABEL_3:
  v28 = *(_QWORD *)(sub_222596768() + 16);
  swift_bridgeObjectRelease();
  v29 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v27, v23, v26);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v26);
    v30 = v56;
    v31 = v55;
  }
  else
  {
    v37 = *(_QWORD *)(sub_222596774() + 16);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v27, v26);
    v30 = v56;
    v31 = v55;
    if (!v37)
      return result;
  }
  sub_222596798();
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v25 + 104);
  v39(v24, *MEMORY[0x24BE3E950], v30);
  v40 = sub_222596894();
  v41 = *(void (**)(char *, uint64_t))(v25 + 8);
  v41(v24, v30);
  result = ((uint64_t (*)(char *, uint64_t))v41)(v13, v30);
  if ((v40 & 1) != 0
    || (sub_222596798(),
        v39(v24, *MEMORY[0x24BE3E948], v30),
        v42 = sub_222596894(),
        v41(v24, v30),
        result = ((uint64_t (*)(char *, uint64_t))v41)(v13, v30),
        v31 = v48,
        (v42 & 1) != 0))
  {
    *v31 = 1;
  }
  return result;
}

uint64_t sub_2219DC6E4()
{
  return sub_222596CD8();
}

uint64_t sub_2219DC6EC()
{
  return sub_222596E94();
}

uint64_t sub_2219DC6F4()
{
  return sub_222596FD8();
}

uint64_t sub_2219DC6FC()
{
  return sub_222596F6C();
}

uint64_t type metadata accessor for Metric.LogEventAdaptor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Metric()
{
  return &type metadata for Metric;
}

unint64_t sub_2219DC734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  _BYTE v19[40];
  _BYTE v20[56];
  __int128 v21;
  __int16 v22;
  __int128 v23;
  __int128 v24;
  __int16 v25;
  __int128 v26;
  __int128 v27;
  __int16 v28;
  _OWORD v29[2];
  __int16 v30;
  _OWORD v31[2];
  __int16 v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741438);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_22268F310;
  *(_QWORD *)(v2 + 32) = 0xD000000000000016;
  *(_QWORD *)(v2 + 40) = 0x8000000222621820;
  *(_QWORD *)(v2 + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 80) = &off_24E76CB78;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)v1;
  strcpy((char *)(v2 + 88), "numUniqueSSIDs");
  *(_BYTE *)(v2 + 103) = -18;
  v3 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v2 + 128) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v2 + 136) = &off_24E76CB98;
  v4 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v2 + 144) = 0x7571696E556D756ELL;
  *(_QWORD *)(v2 + 152) = 0xEF73444953534265;
  *(_QWORD *)(v2 + 184) = v3;
  *(_QWORD *)(v2 + 192) = &off_24E76CB98;
  *(_QWORD *)(v2 + 160) = v4;
  strcpy((char *)(v2 + 200), "numSharedSSIDs");
  *(_BYTE *)(v2 + 215) = -18;
  *(_QWORD *)(v2 + 240) = v3;
  *(_QWORD *)(v2 + 248) = &off_24E76CB98;
  v5 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v2 + 216) = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v2 + 256) = 0x65726168536D756ELL;
  *(_QWORD *)(v2 + 264) = 0xEF73444953534264;
  *(_QWORD *)(v2 + 296) = v3;
  *(_QWORD *)(v2 + 304) = &off_24E76CB98;
  *(_QWORD *)(v2 + 272) = v5;
  *(_QWORD *)(v2 + 312) = 0xD000000000000023;
  *(_QWORD *)(v2 + 320) = 0x8000000222621840;
  *(_QWORD *)(v2 + 352) = v3;
  *(_QWORD *)(v2 + 360) = &off_24E76CB98;
  v6 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v2 + 368) = 0xD000000000000023;
  *(_QWORD *)(v2 + 376) = 0x8000000222621870;
  *(_QWORD *)(v2 + 408) = v3;
  *(_QWORD *)(v2 + 416) = &off_24E76CB98;
  *(_QWORD *)(v2 + 384) = v6;
  *(_QWORD *)(v2 + 424) = 0xD000000000000022;
  *(_QWORD *)(v2 + 432) = 0x80000002226218A0;
  LOBYTE(v6) = *(_BYTE *)(v1 + 192);
  v7 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v2 + 464) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v2 + 472) = &off_24E76CB88;
  *(_BYTE *)(v2 + 440) = v6;
  *(_QWORD *)(v2 + 480) = 0xD00000000000001FLL;
  *(_QWORD *)(v2 + 488) = 0x80000002226218D0;
  LOBYTE(v5) = *(_BYTE *)(v1 + 193);
  *(_QWORD *)(v2 + 520) = v7;
  *(_QWORD *)(v2 + 528) = &off_24E76CB88;
  *(_BYTE *)(v2 + 496) = v5;
  *(_QWORD *)(v2 + 536) = 0xD00000000000001FLL;
  *(_QWORD *)(v2 + 544) = 0x80000002226218F0;
  LOBYTE(v6) = *(_BYTE *)(v1 + 194);
  *(_QWORD *)(v2 + 576) = v7;
  *(_QWORD *)(v2 + 584) = &off_24E76CB88;
  *(_BYTE *)(v2 + 552) = v6;
  *(_QWORD *)(v2 + 592) = 0xD00000000000001CLL;
  *(_QWORD *)(v2 + 600) = 0x8000000222621910;
  LOBYTE(v6) = *(_BYTE *)(v1 + 195);
  *(_QWORD *)(v2 + 632) = v7;
  *(_QWORD *)(v2 + 640) = &off_24E76CB88;
  *(_BYTE *)(v2 + 608) = v6;
  *(_QWORD *)(v2 + 648) = 0xD000000000000020;
  *(_QWORD *)(v2 + 656) = 0x8000000222621930;
  LOBYTE(v6) = *(_BYTE *)(v1 + 196);
  *(_QWORD *)(v2 + 688) = v7;
  *(_QWORD *)(v2 + 696) = &off_24E76CB88;
  *(_BYTE *)(v2 + 664) = v6;
  *(_QWORD *)(v2 + 704) = 0xD00000000000001DLL;
  *(_QWORD *)(v2 + 712) = 0x8000000222621960;
  LOBYTE(v6) = *(_BYTE *)(v1 + 197);
  *(_QWORD *)(v2 + 744) = v7;
  *(_QWORD *)(v2 + 752) = &off_24E76CB88;
  *(_BYTE *)(v2 + 720) = v6;
  *(_QWORD *)(v2 + 760) = 0xD00000000000001BLL;
  *(_QWORD *)(v2 + 768) = 0x8000000222621980;
  *(_QWORD *)(v2 + 800) = v3;
  *(_QWORD *)(v2 + 808) = &off_24E76CB98;
  v8 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v2 + 776) = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v2 + 816) = 0xD00000000000001ELL;
  *(_QWORD *)(v2 + 824) = 0x80000002226219A0;
  *(_QWORD *)(v2 + 856) = v3;
  *(_QWORD *)(v2 + 864) = &off_24E76CB98;
  *(_QWORD *)(v2 + 832) = v8;
  *(_QWORD *)(v2 + 872) = 0xD00000000000001CLL;
  *(_QWORD *)(v2 + 880) = 0x80000002226219C0;
  v9 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v2 + 912) = v3;
  *(_QWORD *)(v2 + 920) = &off_24E76CB98;
  *(_QWORD *)(v2 + 888) = v9;
  *(_QWORD *)(v2 + 928) = 0xD000000000000014;
  *(_QWORD *)(v2 + 936) = 0x80000002226219E0;
  LOBYTE(v3) = *(_BYTE *)(v1 + 224);
  *(_QWORD *)(v2 + 968) = v7;
  *(_QWORD *)(v2 + 976) = &off_24E76CB88;
  *(_BYTE *)(v2 + 944) = v3;
  *(_QWORD *)(v2 + 984) = 0xD000000000000024;
  *(_QWORD *)(v2 + 992) = 0x8000000222621A00;
  v10 = *(_BYTE *)(v1 + 225);
  *(_QWORD *)(v2 + 1024) = v7;
  *(_QWORD *)(v2 + 1032) = &off_24E76CB88;
  *(_BYTE *)(v2 + 1000) = v10;
  sub_22192541C(v1);
  v18 = sub_221902984(v2);
  v11 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)&v20[40] = *(_OWORD *)(v1 + 24);
  v21 = v11;
  v22 = *(_WORD *)(v1 + 56);
  v12 = sub_2219DC080();
  sub_2219E0C5C(v12, (void (*)(uint64_t, uint64_t, _BYTE *))sub_2219E1364);
  swift_bridgeObjectRelease();
  sub_2219E1398(v1 + 64, (uint64_t)v20);
  sub_2219E1398((uint64_t)v20, (uint64_t)v29);
  if (LOBYTE(v29[0]) != 2)
  {
    v26 = v29[0];
    v27 = v29[1];
    v28 = v30;
    v13 = sub_2219DC080();
    v14 = MEMORY[0x24BDAC7A8](v13);
    sub_2219E0C5C(v14, (void (*)(uint64_t, uint64_t, _BYTE *))sub_2219E140C);
    swift_bridgeObjectRelease();
  }
  sub_2219E1398(v1 + 104, (uint64_t)v19);
  sub_2219E1398((uint64_t)v19, (uint64_t)v31);
  if (LOBYTE(v31[0]) != 2)
  {
    v23 = v31[0];
    v24 = v31[1];
    v25 = v32;
    v15 = sub_2219DC080();
    v16 = MEMORY[0x24BDAC7A8](v15);
    sub_2219E0C5C(v16, (void (*)(uint64_t, uint64_t, _BYTE *))sub_2219E13E0);
    swift_bridgeObjectRelease();
  }
  return v18;
}

uint64_t sub_2219DCBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v10 = a5;
  v11 = a6;
  sub_222596D50();
  v7 = v10;
  v8 = v11;
  sub_22191658C(a3, (uint64_t)&v10);
  return sub_2219EC5D0((uint64_t)&v10, v7, v8);
}

unint64_t sub_2219DCC3C()
{
  return sub_2219DC734();
}

unint64_t sub_2219DCCA4(uint64_t a1, double a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255741438);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22268DCB0;
  v5 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 40) = 0x800000022261FCE0;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = &off_24E76CB88;
  *(_BYTE *)(inited + 48) = a1 & 1;
  *(_QWORD *)(inited + 88) = 0xD000000000000022;
  *(_QWORD *)(inited + 96) = 0x800000022261FD00;
  *(_QWORD *)(inited + 128) = v5;
  *(_QWORD *)(inited + 136) = &off_24E76CB88;
  *(_BYTE *)(inited + 104) = BYTE1(a1) & 1;
  strcpy((char *)(inited + 144), "fetchSucceeded");
  *(_BYTE *)(inited + 159) = -18;
  *(_QWORD *)(inited + 184) = v5;
  *(_QWORD *)(inited + 192) = &off_24E76CB88;
  *(_BYTE *)(inited + 160) = BYTE2(a1) & 1;
  *(_QWORD *)(inited + 200) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 208) = 0x800000022261FD40;
  *(_QWORD *)(inited + 240) = v5;
  *(_QWORD *)(inited + 248) = &off_24E76CB88;
  *(_BYTE *)(inited + 216) = BYTE3(a1) & 1;
  *(_QWORD *)(inited + 256) = 0xD000000000000016;
  *(_QWORD *)(inited + 264) = 0x800000022261FD60;
  *(_QWORD *)(inited + 296) = v5;
  *(_QWORD *)(inited + 304) = &off_24E76CB88;
  *(_BYTE *)(inited + 272) = BYTE4(a1) & 1;
  *(_QWORD *)(inited + 312) = 0xD000000000000026;
  *(_QWORD *)(inited + 320) = 0x800000022261FD80;
  *(_QWORD *)(inited + 352) = v5;
  *(_QWORD *)(inited + 360) = &off_24E76CB88;
  *(_BYTE *)(inited + 328) = BYTE5(a1) & 1;
  *(_QWORD *)(inited + 368) = 0xD000000000000010;
  *(_QWORD *)(inited + 376) = 0x800000022261FDB0;
  *(_QWORD *)(inited + 408) = v5;
  *(_QWORD *)(inited + 416) = &off_24E76CB88;
  *(_BYTE *)(inited + 384) = BYTE6(a1) & 1;
  v6 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 424) = 0xD000000000000011;
  *(_QWORD *)(inited + 432) = 0x800000022261FDD0;
  *(_QWORD *)(inited + 464) = v6;
  *(_QWORD *)(inited + 472) = &off_24E76CBA8;
  *(double *)(inited + 440) = a2;
  return sub_221902984(inited);
}

unint64_t sub_2219DCE4C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = 256;
  if (!*((_BYTE *)v0 + 1))
    v1 = 0;
  v2 = v1 | *(unsigned __int8 *)v0;
  v3 = 0x10000;
  if (!*((_BYTE *)v0 + 2))
    v3 = 0;
  v4 = 0x1000000;
  if (!*((_BYTE *)v0 + 3))
    v4 = 0;
  v5 = v2 | v3 | v4;
  v6 = 0x100000000;
  if (!*((_BYTE *)v0 + 4))
    v6 = 0;
  v7 = 0x10000000000;
  if (!*((_BYTE *)v0 + 5))
    v7 = 0;
  v8 = 0x1000000000000;
  if (!*((_BYTE *)v0 + 6))
    v8 = 0;
  return sub_2219DCCA4(v5 | v6 | v7 | v8, v0[1]);
}

uint64_t sub_2219DCED0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_2219DD1D0((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_2219DD1D0((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x227676FE0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2219DD050(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_2219DD3E0((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_2219DD3E0((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x227676FE0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_2219DD1D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_2225978F0();
    swift_bridgeObjectRetain();
    sub_222596D38();
    v10 = sub_222597938();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_2225976E0() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_2225976E0() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_2219B597C(a1, v5, v26, a4);
}

uint64_t sub_2219DD3E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_2225978F0();
        swift_bridgeObjectRetain();
        sub_222596D38();
        v20 = sub_222597938();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_2225976E0() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_2225976E0() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_2225978F0();
    swift_bridgeObjectRetain();
    sub_222596D38();
    v47 = sub_222597938();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_2225976E0() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_2219B597C(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_2225976E0() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_2219DD91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(char *, uint64_t);
  uint64_t (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  char v79;
  char v80;
  char v81;
  _BYTE *v82;
  _QWORD v83[3];
  uint64_t v84;
  char *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unsigned int v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, _QWORD, uint64_t);
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  __int16 v106;
  char v107[9];

  v86 = a8;
  v90 = a7;
  v87 = a5;
  v92 = a3;
  v89 = a9;
  v104 = sub_2225968A0();
  v96 = *(_QWORD *)(v104 - 8);
  v17 = MEMORY[0x24BDAC7A8](v104);
  v103 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v102 = (char *)v83 - v19;
  v101 = sub_2225967A4();
  v105 = *(_QWORD *)(v101 - 8);
  v20 = MEMORY[0x24BDAC7A8](v101);
  v93 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v95 = (char *)v83 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741430);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_222596888();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v28(v25, 1, 1, v26);
  v107[0] = 0;
  v29 = *(_QWORD *)(a2 + 16);
  v91 = a6;
  v88 = a4;
  if (v29)
  {
    v30 = a2 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    v31 = *(_QWORD *)(v27 + 72);
    do
    {
      if ((sub_22259687C() & 1) != 0)
      {
        sub_221917338((uint64_t)v25, &qword_255741430);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v30, v26);
        v28(v25, 0, 1, v26);
      }
      v30 += v31;
      --v29;
    }
    while (v29);
  }
  swift_bridgeObjectRelease();
  v106 = 0;
  v32 = *(_QWORD *)(a1 + 16);
  v85 = v25;
  if (!v32)
    goto LABEL_19;
  v33 = a1 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
  v34 = *(_QWORD *)(v105 + 72);
  swift_bridgeObjectRetain();
  v84 = v33;
  do
  {
    sub_2219DC31C(v33, (uint64_t)v25, v107, (_BYTE *)&v106 + 1, &v106);
    v33 += v34;
    --v32;
  }
  while (v32);
  swift_bridgeObjectRelease();
  v100 = *(_QWORD *)(a1 + 16);
  if (v100)
  {
    v99 = v34;
    v83[1] = 0;
    v94 = *MEMORY[0x24BE3E950];
    v83[2] = a1;
    result = swift_bridgeObjectRetain();
    v36 = 0;
    v37 = v84;
    v38 = v95;
    v40 = v101;
    v39 = v102;
    v41 = v103;
    do
    {
      v42 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      v98 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
      v98(v38, v37, v40);
      sub_222596798();
      v43 = v96;
      v44 = v104;
      v97 = *(void (**)(char *, _QWORD, uint64_t))(v96 + 104);
      v97(v41, v94, v104);
      v45 = sub_222596894();
      v46 = *(void (**)(char *, uint64_t))(v43 + 8);
      v46(v41, v44);
      v46(v39, v44);
      v47 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
      result = v47(v38, v40);
      if ((v45 & 1) != 0)
        break;
      ++v36;
      v37 += v99;
    }
    while (v42 != v100);
    LODWORD(v95) = v45;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRetain();
    v48 = 0;
    LODWORD(v96) = *MEMORY[0x24BE3E948];
    v49 = v84;
    v50 = v93;
    v52 = v101;
    v51 = v102;
    v53 = v103;
    v54 = v104;
    while (1)
    {
      v55 = v48 + 1;
      if (__OFADD__(v48, 1))
        goto LABEL_57;
      v98(v50, v49, v52);
      sub_222596798();
      v97(v53, v96, v54);
      LODWORD(v105) = sub_222596894();
      v46(v53, v54);
      v46(v51, v54);
      result = v47(v50, v52);
      if ((v105 & 1) != 0)
        break;
      ++v48;
      v49 += v99;
      if (v55 == v100)
      {
        swift_bridgeObjectRelease_n();
        LODWORD(v101) = 0;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease_n();
    LODWORD(v101) = 1;
LABEL_21:
    v57 = v88;
    v56 = (int)v95;
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    LODWORD(v101) = 0;
    v56 = 0;
    v57 = v88;
  }
  LODWORD(v103) = HIBYTE(v106);
  v58 = *(_QWORD *)(v57 + 16);
  LODWORD(v105) = v106;
  LODWORD(v104) = v107[0];
  if (!v58)
  {
    swift_bridgeObjectRelease();
    LODWORD(v102) = 0;
    v65 = v92;
    goto LABEL_36;
  }
  LODWORD(v95) = v56;
  v59 = *(_QWORD *)(sub_2225967D4() - 8);
  v60 = v57 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
  v61 = *(_QWORD *)(v59 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    v63 = sub_2225967BC();
    if (!a11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (v63 == a10 && v64 == a11)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v62 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v62 & 1) != 0)
      break;
LABEL_25:
    v60 += v61;
    if (!--v58)
    {
      swift_bridgeObjectRelease_n();
      LODWORD(v102) = 0;
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_34:
  LODWORD(v102) = 1;
LABEL_35:
  v65 = v92;
  LOBYTE(v56) = (_BYTE)v95;
LABEL_36:
  v66 = *(_QWORD *)(v65 + 16);
  if (!v66)
  {
    v67 = v56;
    swift_bridgeObjectRelease();
    v74 = 0;
    goto LABEL_49;
  }
  v67 = v56;
  v68 = *(_QWORD *)(sub_2225967D4() - 8);
  v69 = v65 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
  v70 = *(_QWORD *)(v68 + 72);
  swift_bridgeObjectRetain();
  while (2)
  {
    v72 = sub_2225967BC();
    if (!a11)
    {
      swift_bridgeObjectRelease();
LABEL_39:
      v69 += v70;
      if (!--v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v74 = 0;
        goto LABEL_49;
      }
      continue;
    }
    break;
  }
  if (v72 == a10 && v73 == a11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_48;
  }
  v71 = sub_2225976E0();
  swift_bridgeObjectRelease();
  if ((v71 & 1) == 0)
    goto LABEL_39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_48:
  v74 = 1;
LABEL_49:
  v75 = v87;
  v76 = v86;
  v77 = (uint64_t)v85;
  v78 = v101;
  v79 = (char)v103;
  swift_bridgeObjectRelease();
  if (v76 == 3)
    v80 = 0;
  else
    v80 = v76;
  if (a12 == 4)
    v81 = 0;
  else
    v81 = a12;
  result = sub_221917338(v77, &qword_255741430);
  v82 = v89;
  *v89 = v67 & 1;
  v82[1] = v78;
  v82[2] = v104;
  v82[3] = v80;
  v82[4] = v79;
  v82[5] = v105;
  v82[6] = (_BYTE)v102;
  v82[7] = v74;
  v82[8] = v90 & 1;
  *((_QWORD *)v82 + 2) = v91;
  *((_QWORD *)v82 + 3) = v75;
  v82[32] = v81;
  v82[33] = a13 & 1;
  return result;
}

void sub_2219DE074(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, char *);
  char *v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  unsigned int v72;
  int v73;
  id v74;
  void *v75;
  id v76;
  int v77;
  int v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  char v90;
  unsigned int v91;
  uint64_t v92;
  __int128 v93;
  _OWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _OWORD *v97;
  void *v98;
  char *v99;
  char *v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD v108[2];
  __int16 v109;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v105 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v95 - v11;
  v13 = sub_2225967D4();
  v107 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v103 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v99 = (char *)&v95 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v104 = (char *)&v95 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v100 = (char *)&v95 - v20;
  v98 = a1;
  v21 = objc_msgSend(a1, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v21)
    goto LABEL_77;
  v22 = v21;
  v23 = objc_msgSend(v21, sel_nearbyVisibleDeviceInfos);

  if (v23
    && (*(_QWORD *)&v108[0] = 0,
        sub_221917374(0, &qword_25573F948),
        sub_222596E34(),
        v23,
        *(_QWORD *)&v108[0]))
  {
    v24 = *(_QWORD *)&v108[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x24BEE4AF8];
  }
  v101 = v24;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_2225973B0();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v96 = a3;
  v97 = a4;
  v95 = a2;
  if (v25)
  {
    if (v25 < 1)
    {
      __break(1u);
      goto LABEL_76;
    }
    v26 = 0;
    v27 = v101;
    v102 = v101 & 0xC000000000000001;
    v106 = MEMORY[0x24BEE4AF8];
    do
    {
      if (v102)
        v28 = (id)MEMORY[0x227674274](v26, v27);
      else
        v28 = *(id *)(v27 + 8 * v26 + 32);
      v29 = v28;
      v30 = objc_msgSend(v28, sel_idsIdentifierString, v95, v96);
      if (v30)
      {
        v31 = v30;
        sub_222596CF0();

        v32 = objc_msgSend(v29, sel_mediaRouteIdString);
        if (v32)
        {
          v33 = v32;
          sub_222596CF0();

        }
        sub_2225967B0();
        v34 = 0;
        v27 = v101;
      }
      else
      {
        v34 = 1;
      }
      v35 = v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v12, v34, 1, v13);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v13) == 1)
      {
        sub_221917338((uint64_t)v12, &qword_255741410);
      }
      else
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v37 = v100;
        v36(v100, v12, v13);
        v36(v104, v37, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v106 = sub_221991524(0, *(_QWORD *)(v106 + 16) + 1, 1, v106);
        v39 = *(_QWORD *)(v106 + 16);
        v38 = *(_QWORD *)(v106 + 24);
        if (v39 >= v38 >> 1)
          v106 = sub_221991524(v38 > 1, v39 + 1, 1, v106);
        v40 = v106;
        *(_QWORD *)(v106 + 16) = v39 + 1;
        v36((char *)(v40+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v39), v104, v13);
      }
      ++v26;
    }
    while (v25 != v26);
  }
  else
  {
    v106 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease_n();
  v41 = objc_msgSend(v98, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v41)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, sel_networkVisibleDeviceInfos);

  v44 = MEMORY[0x24BEE4AF8];
  if (v43)
  {
    *(_QWORD *)&v108[0] = 0;
    sub_221917374(0, &qword_25573F948);
    sub_222596E34();

    if (*(_QWORD *)&v108[0])
      v44 = *(_QWORD *)&v108[0];
  }
  v45 = (uint64_t)v105;
  if (!(v44 >> 62))
  {
    v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46)
      goto LABEL_34;
LABEL_54:
    v48 = MEMORY[0x24BEE4AF8];
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  v45 = (uint64_t)v105;
  v46 = sub_2225973B0();
  if (!v46)
    goto LABEL_54;
LABEL_34:
  if (v46 < 1)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v47 = 0;
  v102 = v44 & 0xC000000000000001;
  v48 = MEMORY[0x24BEE4AF8];
  v104 = (char *)v13;
  do
  {
    if (v102)
      v49 = (id)MEMORY[0x227674274](v47, v44);
    else
      v49 = *(id *)(v44 + 8 * v47 + 32);
    v50 = v49;
    v51 = objc_msgSend(v49, sel_idsIdentifierString, v95);
    if (v51)
    {
      v52 = v51;
      sub_222596CF0();

      v53 = objc_msgSend(v50, sel_mediaRouteIdString);
      if (v53)
      {
        v54 = v53;
        sub_222596CF0();

      }
      v45 = (uint64_t)v105;
      sub_2225967B0();
      v55 = 0;
    }
    else
    {
      v55 = 1;
    }
    v56 = v107;
    v57 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v107 + 56))(v45, v55, 1, v104);

    if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v56 + 48))(v45, 1, v57) == 1)
    {
      sub_221917338(v45, &qword_255741410);
    }
    else
    {
      v58 = v45;
      v59 = *(void (**)(char *, uint64_t, char *))(v56 + 32);
      v60 = v99;
      v59(v99, v58, v57);
      v59(v103, (uint64_t)v60, v57);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v48 = sub_221991524(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
      v62 = *(_QWORD *)(v48 + 16);
      v61 = *(_QWORD *)(v48 + 24);
      if (v62 >= v61 >> 1)
        v48 = sub_221991524(v61 > 1, v62 + 1, 1, v48);
      *(_QWORD *)(v48 + 16) = v62 + 1;
      v59((char *)(v48+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v62), (uint64_t)v103, v57);
      v45 = (uint64_t)v105;
    }
    ++v47;
  }
  while (v46 != v47);
LABEL_55:
  swift_bridgeObjectRelease_n();
  v63 = v98;
  sub_22196D358(v98);
  v65 = v64;
  v107 = v66;
  v68 = v67;
  v69 = objc_msgSend(v63, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v69)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v70 = v69;
  v71 = objc_msgSend(v69, sel_cloudInfo);

  if (!v71)
  {
LABEL_62:
    v73 = 0;
    goto LABEL_63;
  }
  if (!objc_msgSend(v71, sel_hasCloudState))
  {

    goto LABEL_62;
  }
  v72 = objc_msgSend(v71, sel_firstCloudImportComplete);

  if (v72)
    v73 = 1;
  else
    v73 = 2;
LABEL_63:
  v74 = objc_msgSend(v63, sel_appleMediaAccessoryDiagnosticInfo, v95);
  if (!v74)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v75 = v74;
  v76 = objc_msgSend(v74, sel_wifiInfo);

  LODWORD(v105) = v73;
  if (v76)
  {
    v77 = objc_msgSend(v76, sel_networkRSSI);

    if (v77 >= -80)
    {
      if (v77 >= -60)
        v78 = (v77 >> 31) & 3;
      else
        LOBYTE(v78) = 2;
    }
    else
    {
      LOBYTE(v78) = 1;
    }
  }
  else
  {
    LOBYTE(v78) = 0;
  }
  v79 = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80 = v98;
  v81 = objc_msgSend(v98, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v81)
    goto LABEL_81;
  v82 = v81;
  v83 = v68;
  v84 = objc_msgSend(v81, sel_numResidents);

  v85 = objc_msgSend(v80, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v85)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, sel_numAppleMediaAccessories);

  v88 = objc_msgSend(v80, sel_appleMediaAccessoryDiagnosticInfo);
  if (v88)
  {
    v89 = v88;
    v90 = v76 != 0;
    v91 = objc_msgSend(v88, sel_primaryResidentStatus);

    v92 = swift_bridgeObjectRetain();
    sub_2219DD91C(v79, v107, v48, v106, (uint64_t)v84, (uint64_t)v87, v91 == 2, (int)v105, v108, v95, v92, v78, v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v93 = v108[1];
    v94 = v97;
    *v97 = v108[0];
    v94[1] = v93;
    *((_WORD *)v94 + 16) = v109;
    return;
  }
LABEL_83:
  __break(1u);
}

void sub_2219DEA00(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, void *a17, uint64_t a18, uint64_t a19, void *a20,unsigned __int8 a21)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  id v67;
  void *v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  id v93;
  void *v94;
  id v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  char *v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  id v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char v139;
  uint64_t v140;
  id v141;
  char *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char v170;
  char *v171;
  void (**v172)(char *, _QWORD, uint64_t);
  char *v173;
  uint64_t v174;
  char v175;
  void (*v176)(char *, uint64_t);
  char *v177;
  char *v178;
  void (*v179)(char *, uint64_t);
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  unint64_t v195;
  void *v196;
  char *v197;
  char *v198;
  id v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t inited;
  id v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  id v212;
  int v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  void (*v220)(uint64_t, char *, uint64_t);
  uint64_t v221;
  char *v222;
  void (*v223)(char *, uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  char *v229;
  void (**v230)(char *, _QWORD, uint64_t);
  char *v231;
  uint64_t v232;
  char v233;
  void (*v234)(char *, uint64_t);
  char *v235;
  uint64_t v236;
  void (*v237)(char *, uint64_t);
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  id v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  unint64_t v252;
  void *v253;
  char *v254;
  char *v255;
  id v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  id v264;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  char *v273;
  void (*v274)(char *, char *, uint64_t);
  char *v275;
  void (*v276)(char *, uint64_t);
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  char v282;
  char *v283;
  char *v284;
  void (**v285)(char *, _QWORD, uint64_t);
  char *v286;
  uint64_t v287;
  char v288;
  void (*v289)(char *, uint64_t);
  char *v290;
  uint64_t v291;
  char *v292;
  void (*v293)(char *, uint64_t);
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  unint64_t v302;
  int v303;
  char **v304;
  unint64_t v305;
  id v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char v320;
  id v321;
  id v322;
  id v323;
  char v324;
  uint64_t v325;
  char v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  _QWORD *v333;
  char v334;
  char v335;
  char v336;
  char v337;
  void (**v338)(char *, _QWORD, uint64_t);
  id v339;
  int v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  uint64_t v349;
  unint64_t v350;
  uint64_t v351;
  id v352;
  int v353;
  int v354;
  int v355;
  uint64_t v356;
  uint64_t v357;
  int v358;
  _QWORD *v359;
  int v360;
  int v361;
  uint64_t v362;
  id v363;
  id v364;
  uint64_t v365;
  uint64_t v366;
  id v367;
  _QWORD *v368;
  uint64_t v369;
  char *v370;
  unint64_t v371;
  unint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  unint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  char *v385;
  char *v386;
  char *v387;
  unint64_t v388;
  char *v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  char *v396;
  void (**v397)(char *, _QWORD, uint64_t);
  uint64_t v398;
  uint64_t v399;
  int v400;
  __int16 v401;
  int v402;
  __int16 v403;
  int v404;
  __int16 v405;
  _BYTE v406[7];
  _BYTE v407[7];
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  __int128 v415;
  char *v416;
  unint64_t v417;
  unsigned __int8 v418;
  char v419;
  __int128 v420;
  void *v421;
  uint64_t v422;
  unsigned __int8 v423;
  char v424;
  unint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  unsigned __int8 v429;
  unsigned __int8 v430;

  v394 = a8;
  v368 = (_QWORD *)a7;
  v375 = a6;
  v361 = a5;
  v363 = a4;
  v366 = a19;
  v365 = a18;
  v25 = sub_2225968A0();
  v397 = *(void (***)(char *, _QWORD, uint64_t))(v25 - 8);
  v398 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v396 = (char *)&v339 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v395 = (char *)&v339 - v28;
  v29 = sub_2225967A4();
  v399 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v386 = (char *)&v339 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v384 = (char *)&v339 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v383 = (char *)&v339 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v393 = (uint64_t)&v339 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v389 = (char *)&v339 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v339 - v40;
  v42 = sub_222596888();
  v376 = *(_QWORD *)(v42 - 8);
  v377 = v42;
  v43 = MEMORY[0x24BDAC7A8](v42);
  v385 = (char *)&v339 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v387 = (char *)&v339 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v392 = (char *)&v339 - v47;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v379 = (char *)&v339 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v380 = (char *)&v339 - v51;
  v390 = sub_2225967D4();
  v378 = *(_QWORD *)(v390 - 8);
  v52 = MEMORY[0x24BDAC7A8](v390);
  v373 = (char *)&v339 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v369 = (uint64_t)&v339 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v374 = (char *)&v339 - v57;
  MEMORY[0x24BDAC7A8](v56);
  v370 = (char *)&v339 - v58;
  v364 = a17;
  if (!a17)
    goto LABEL_9;
  v59 = objc_msgSend(v364, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v59)
    goto LABEL_280;
  v60 = v59;
  v61 = objc_msgSend(v59, sel_idsInfo);

  if (!v61)
  {
LABEL_281:
    __break(1u);
    goto LABEL_282;
  }
  v62 = objc_msgSend(v61, sel_idsIdentifierString);

  if (!v62)
  {
LABEL_9:
    v66 = v366 == 0;
    goto LABEL_10;
  }
  v63 = sub_222596CF0();
  v65 = v64;

  if (v366)
  {
    if (v63 == v365 && v65 == v366)
    {
      swift_bridgeObjectRelease();
      v66 = 1;
LABEL_10:
      v360 = v66;
      goto LABEL_11;
    }
    v360 = sub_2225976E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v360 = 0;
  }
LABEL_11:
  v367 = a20;
  if (a20)
  {
    v67 = objc_msgSend(v367, sel_appleMediaAccessoryDiagnosticInfo);
    if (v67)
    {
      v68 = v67;
      v69 = objc_msgSend(v67, sel_nearbyVisibleDeviceInfos);

      if (v69)
      {
        v425 = 0;
        sub_221917374(0, &qword_25573F948);
        sub_222596E34();

        v70 = v425;
        if (v425)
          goto LABEL_16;
      }
      goto LABEL_15;
    }
LABEL_282:
    __break(1u);
    goto LABEL_283;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v70 = MEMORY[0x24BEE4AF8];
LABEL_16:
  v71 = (uint64_t)v380;
  if (v70 >> 62)
  {
    swift_bridgeObjectRetain();
    v71 = (uint64_t)v380;
    v72 = sub_2225973B0();
  }
  else
  {
    v72 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v391 = v41;
  v359 = a9;
  v358 = a3;
  v356 = a1;
  v357 = a2;
  if (v72)
  {
    if (v72 < 1)
      goto LABEL_278;
    v73 = 0;
    v371 = v70 & 0xC000000000000001;
    v388 = MEMORY[0x24BEE4AF8];
    v75 = v378;
    v74 = (uint64_t)v379;
    v372 = v70;
    v76 = v72;
    do
    {
      if (v371)
        v77 = (id)MEMORY[0x227674274](v73, v70);
      else
        v77 = *(id *)(v70 + 8 * v73 + 32);
      v78 = v77;
      v79 = objc_msgSend(v77, sel_idsIdentifierString);
      if (v79)
      {
        v80 = v79;
        v81 = sub_222596CF0();
        v381 = v82;
        v382 = v81;

        v83 = objc_msgSend(v78, sel_mediaRouteIdString);
        if (v83)
        {
          v84 = v83;
          sub_222596CF0();

        }
        v71 = (uint64_t)v380;
        sub_2225967B0();
        v85 = 0;
        v41 = v391;
      }
      else
      {
        v85 = 1;
      }
      v86 = v390;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v71, v85, 1, v390);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v71, 1, v86) == 1)
      {
        sub_221917338(v71, &qword_255741410);
      }
      else
      {
        v87 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 32);
        v88 = v370;
        v87(v370, v71, v86);
        v87(v374, (uint64_t)v88, v86);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v89 = v388;
        else
          v89 = sub_221991524(0, *(_QWORD *)(v388 + 16) + 1, 1, v388);
        v91 = *(_QWORD *)(v89 + 16);
        v90 = *(_QWORD *)(v89 + 24);
        if (v91 >= v90 >> 1)
          v89 = sub_221991524(v90 > 1, v91 + 1, 1, v89);
        *(_QWORD *)(v89 + 16) = v91 + 1;
        v92 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        v388 = v89;
        v87((char *)(v89 + v92 + *(_QWORD *)(v75 + 72) * v91), (uint64_t)v374, v86);
        v74 = (uint64_t)v379;
        v71 = (uint64_t)v380;
      }
      ++v73;
      v70 = v372;
    }
    while (v76 != v73);
  }
  else
  {
    v388 = MEMORY[0x24BEE4AF8];
    v75 = v378;
    v74 = (uint64_t)v379;
  }
  swift_bridgeObjectRelease_n();
  if (!v367)
  {
    v96 = MEMORY[0x24BEE4AF8];
    goto LABEL_46;
  }
  v93 = objc_msgSend(v367, sel_appleMediaAccessoryDiagnosticInfo);
  if (!v93)
  {
LABEL_283:
    __break(1u);
    return;
  }
  v94 = v93;
  v95 = objc_msgSend(v93, sel_networkVisibleDeviceInfos);

  v96 = MEMORY[0x24BEE4AF8];
  if (v95)
  {
    v425 = 0;
    sub_221917374(0, &qword_25573F948);
    sub_222596E34();

    if (v425)
      v96 = v425;
  }
LABEL_46:
  if (v96 >> 62)
  {
    swift_bridgeObjectRetain();
    v97 = sub_2225973B0();
    if (v97)
      goto LABEL_48;
LABEL_71:
    v381 = MEMORY[0x24BEE4AF8];
    goto LABEL_72;
  }
  v97 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v97)
    goto LABEL_71;
LABEL_48:
  if (v97 < 1)
    goto LABEL_279;
  v98 = 0;
  v372 = v96 & 0xC000000000000001;
  v381 = MEMORY[0x24BEE4AF8];
  v374 = (char *)v96;
  do
  {
    if (v372)
      v99 = (id)MEMORY[0x227674274](v98, v96);
    else
      v99 = *(id *)(v96 + 8 * v98 + 32);
    v100 = v99;
    v101 = objc_msgSend(v99, sel_idsIdentifierString);
    if (v101)
    {
      v102 = v101;
      v382 = sub_222596CF0();
      v380 = v103;

      v104 = objc_msgSend(v100, sel_mediaRouteIdString);
      if (v104)
      {
        v105 = v104;
        sub_222596CF0();

      }
      sub_2225967B0();
      v106 = 0;
      v41 = v391;
    }
    else
    {
      v106 = 1;
    }
    v107 = v390;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, v106, 1, v390);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v74, 1, v107) == 1)
    {
      sub_221917338(v74, &qword_255741410);
    }
    else
    {
      v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32);
      v109 = v369;
      v108(v369, v74, v107);
      v108((uint64_t)v373, v109, v107);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v110 = v381;
      else
        v110 = sub_221991524(0, *(_QWORD *)(v381 + 16) + 1, 1, v381);
      v112 = *(_QWORD *)(v110 + 16);
      v111 = *(_QWORD *)(v110 + 24);
      if (v112 >= v111 >> 1)
        v110 = sub_221991524(v111 > 1, v112 + 1, 1, v110);
      *(_QWORD *)(v110 + 16) = v112 + 1;
      v113 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      v381 = v110;
      v108(v110 + v113 + *(_QWORD *)(v75 + 72) * v112, (uint64_t)v373, v107);
      v74 = (uint64_t)v379;
    }
    ++v98;
    v96 = (unint64_t)v374;
  }
  while (v97 != v98);
LABEL_72:
  swift_bridgeObjectRelease_n();
  v114 = *(_QWORD *)(v381 + 16);
  if (v114)
  {
    v115 = v381 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    v116 = *(_QWORD *)(v75 + 72);
    swift_bridgeObjectRetain();
    v117 = v114 - 1;
    while (1)
    {
      v118 = v117;
      if (sub_2225967BC() == v394 && v119 == a10)
        break;
      v120 = sub_2225976E0();
      swift_bridgeObjectRelease();
      LODWORD(v370) = v120;
      if ((v120 & 1) == 0)
      {
        v117 = v118 - 1;
        v115 += v116;
        if (v118)
          continue;
      }
      goto LABEL_81;
    }
    swift_bridgeObjectRelease();
    LODWORD(v370) = 1;
LABEL_81:
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v370) = 0;
  }
  v380 = a16;
  v382 = a15;
  v121 = *(_QWORD *)(v388 + 16);
  if (v121)
  {
    v122 = v388 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    v123 = *(_QWORD *)(v75 + 72);
    swift_bridgeObjectRetain();
    v124 = v121 - 1;
    while (1)
    {
      v125 = v124;
      if (sub_2225967BC() == v394 && v126 == a10)
        break;
      v127 = sub_2225976E0();
      swift_bridgeObjectRelease();
      if ((v127 & 1) == 0)
      {
        v124 = v125 - 1;
        v122 += v123;
        if (v125)
          continue;
      }
      goto LABEL_91;
    }
    swift_bridgeObjectRelease();
    v127 = 1;
LABEL_91:
    v355 = v127;
    swift_bridgeObjectRelease();
  }
  else
  {
    v355 = 0;
  }
  v128 = *(_QWORD *)(v381 + 16);
  v129 = v363;
  v130 = v389;
  if (v128)
  {
    v131 = v381 + ((*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80));
    v132 = *(_QWORD *)(v378 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      if (sub_2225967BC() == v382 && v133 == v380)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_103;
      }
      v134 = sub_2225976E0();
      swift_bridgeObjectRelease();
      if ((v134 & 1) != 0)
        break;
      v131 += v132;
      if (!--v128)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_100;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_103:
    v354 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_100:
    v354 = 0;
  }
  v135 = *(_QWORD *)(v388 + 16);
  if (v135)
  {
    v136 = v388 + ((*(unsigned __int8 *)(v378 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80));
    v137 = *(_QWORD *)(v378 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      if (sub_2225967BC() == v382 && v138 == v380)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_115;
      }
      v139 = sub_2225976E0();
      swift_bridgeObjectRelease();
      if ((v139 & 1) != 0)
        break;
      v136 += v137;
      if (!--v135)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_112;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_115:
    v353 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_112:
    v353 = 0;
  }
  v140 = MEMORY[0x24BEE4B08];
  v413 = MEMORY[0x24BEE4B08];
  v414 = MEMORY[0x24BEE4B08];
  v411 = MEMORY[0x24BEE4B08];
  v412 = MEMORY[0x24BEE4B08];
  v409 = MEMORY[0x24BEE4B08];
  v410 = MEMORY[0x24BEE4B08];
  v408 = MEMORY[0x24BEE4B08];
  v141 = objc_msgSend(v129, sel_SSID);
  v142 = v384;
  if (v141)
  {
    v143 = v141;
    v144 = sub_222596CF0();
    v146 = v145;

    sub_2219AEFC8((uint64_t *)&v425, v144, v146);
    swift_bridgeObjectRelease();
    v140 = v414;
    swift_bridgeObjectRetain();
  }
  v369 = v140;
  v147 = objc_msgSend(v129, sel_networkBSSID);
  if (v147)
  {
    v148 = v147;
    v149 = sub_222596CF0();
    v151 = v150;

    sub_2219AEFC8((uint64_t *)&v425, v149, v151);
    swift_bridgeObjectRelease();
    v362 = v413;
    swift_bridgeObjectRetain();
  }
  else
  {
    v362 = MEMORY[0x24BEE4B08];
  }
  v152 = v377;
  v153 = v378;
  v154 = v376;
  v155 = v393;
  v156 = v387;
  v157 = (char *)v368[2];
  v394 = v29;
  v374 = v157;
  if (v157)
  {
    v379 = *(char **)(v375 + 16);
    v373 = (char *)v368
         + ((*(unsigned __int8 *)(v376 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v376 + 80));
    v158 = *(_QWORD *)(v376 + 72);
    v371 = *(_QWORD *)(v376 + 16);
    v372 = v158;
    LODWORD(v388) = *MEMORY[0x24BE3E950];
    swift_bridgeObjectRetain();
    v159 = 0;
    while (1)
    {
      v381 = v159;
      ((void (*)(char *, char *, uint64_t))v371)(v392, &v373[v372 * v159], v152);
      if (!v379)
      {
LABEL_124:
        (*(void (**)(char *, uint64_t))(v154 + 8))(v392, v152);
        goto LABEL_125;
      }
      v160 = v399;
      v161 = v375 + ((*(unsigned __int8 *)(v399 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v399 + 80));
      swift_bridgeObjectRetain();
      v390 = *(_QWORD *)(v160 + 72);
      v162 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 16);
      v163 = v379;
      v162(v41, v161, v29);
      while (1)
      {
        v165 = sub_22259678C();
        v167 = v166;
        if (v165 == sub_222596828() && v167 == v168)
        {
          swift_bridgeObjectRelease_n();
          v169 = v391;
          v162(v130, (uint64_t)v391, v29);
        }
        else
        {
          v170 = sub_2225976E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v169 = v391;
          v162(v130, (uint64_t)v391, v29);
          if ((v170 & 1) == 0)
          {
            v164 = *(void (**)(char *, uint64_t))(v399 + 8);
            v164(v130, v29);
            v164(v169, v29);
            v41 = v169;
            goto LABEL_129;
          }
        }
        v171 = v395;
        sub_222596798();
        v173 = v396;
        v172 = v397;
        v174 = v398;
        v397[13](v396, v388, v398);
        v175 = sub_222596894();
        v176 = (void (*)(char *, uint64_t))v172[1];
        v177 = v173;
        v130 = v389;
        v176(v177, v174);
        v178 = v171;
        v29 = v394;
        v176(v178, v174);
        v179 = *(void (**)(char *, uint64_t))(v399 + 8);
        v179(v130, v29);
        v179(v169, v29);
        v41 = v169;
        if ((v175 & 1) != 0)
          break;
LABEL_129:
        v161 += v390;
        if (!--v163)
        {
          swift_bridgeObjectRelease();
          v152 = v377;
          v153 = v378;
          v142 = v384;
          v154 = v376;
          v155 = v393;
          v156 = v387;
          goto LABEL_124;
        }
        v162(v41, v161, v29);
      }
      swift_bridgeObjectRelease();
      v180 = v392;
      v181 = sub_22259684C();
      if (v182)
      {
        v183 = v181;
        v184 = v182;
        swift_bridgeObjectRetain();
        sub_2219AEFC8((uint64_t *)&v425, v183, v184);
        swift_bridgeObjectRelease();
        sub_2219AEFC8((uint64_t *)&v425, v183, v184);
        swift_bridgeObjectRelease();
      }
      v185 = sub_222596858();
      v153 = v378;
      v142 = v384;
      if (v186)
      {
        sub_2219AEFC8((uint64_t *)&v425, v185, v186);
        swift_bridgeObjectRelease();
      }
      v154 = v376;
      v187 = v180;
      v152 = v377;
      (*(void (**)(char *, uint64_t))(v376 + 8))(v187, v377);
      v155 = v393;
      v156 = v387;
LABEL_125:
      v159 = v381 + 1;
      if ((char *)(v381 + 1) == v374)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (v367)
  {
    v188 = v367;
    sub_2219DE074(v188, v365, v366, &v415);
    v350 = v415;
    v351 = BYTE2(v415);
    v371 = BYTE3(v415);
    v374 = (char *)BYTE8(v415);
    v372 = v417;
    v373 = v416;
    LODWORD(v349) = v418;
    if (BYTE1(v415))
      v189 = 256;
    else
      v189 = 0;
    v190 = 0x100000000;
    if (!BYTE4(v415))
      v190 = 0;
    v346 = v190;
    v347 = v189;
    if (BYTE5(v415))
      v191 = 0x10000000000;
    else
      v191 = 0;
    v192 = 0x1000000000000;
    if (!BYTE6(v415))
      v192 = 0;
    v344 = v192;
    v345 = v191;
    v193 = 0x100000000000000;
    if (!BYTE7(v415))
      v193 = 0;
    v343 = v193;
    if (v419)
      v194 = 256;
    else
      v194 = 0;
    LODWORD(v342) = v194;
    v348 = (unint64_t)v188;
    sub_22196D358(v188);
    v198 = v197;
    v381 = v195;
    v352 = v196;
    if (v196)
    {
      v199 = objc_msgSend(v196, sel_SSID);
      if (v199)
      {
        v200 = v199;
        v201 = sub_222596CF0();
        v203 = v202;

        swift_bridgeObjectRetain();
        sub_2219AEFC8((uint64_t *)&v425, v201, v203);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_222688C60;
        *(_QWORD *)(inited + 32) = v201;
        *(_QWORD *)(inited + 40) = v203;
        v369 = sub_2219DCED0(inited, v369);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      v205 = objc_msgSend(v352, sel_networkBSSID);
      if (v205)
      {
        v206 = v205;
        v207 = sub_222596CF0();
        v209 = v208;

        swift_bridgeObjectRetain();
        sub_2219AEFC8((uint64_t *)&v425, v207, v209);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
        v210 = swift_initStackObject();
        *(_OWORD *)(v210 + 16) = xmmword_222688C60;
        *(_QWORD *)(v210 + 32) = v207;
        *(_QWORD *)(v210 + 40) = v209;
        v362 = sub_2219DCED0(v210, v362);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      v153 = v378;
      v142 = v384;
      v155 = v393;
      v156 = v387;
      v211 = v381;
    }
    else
    {
      v211 = v195;
    }
    v389 = *(char **)(v211 + 16);
    if (v389)
    {
      v390 = *((_QWORD *)v198 + 2);
      v388 = v211 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      LODWORD(v392) = *MEMORY[0x24BE3E940];
      swift_bridgeObjectRetain();
      v215 = 0;
      v379 = v198;
      while (1)
      {
        if ((unint64_t)v215 >= *(_QWORD *)(v211 + 16))
        {
          __break(1u);
LABEL_276:
          __break(1u);
LABEL_277:
          __break(1u);
LABEL_278:
          __break(1u);
LABEL_279:
          __break(1u);
LABEL_280:
          __break(1u);
          goto LABEL_281;
        }
        v216 = *(_QWORD *)(v154 + 72);
        v391 = v215;
        (*(void (**)(char *, unint64_t, uint64_t))(v154 + 16))(v156, v388 + v216 * (_QWORD)v215, v152);
        if (!v390)
        {
LABEL_170:
          (*(void (**)(char *, uint64_t))(v154 + 8))(v156, v152);
          goto LABEL_171;
        }
        v217 = v399;
        v218 = &v198[(*(unsigned __int8 *)(v399 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v399 + 80)];
        swift_bridgeObjectRetain_n();
        v219 = *(_QWORD *)(v217 + 72);
        v220 = *(void (**)(uint64_t, char *, uint64_t))(v217 + 16);
        v221 = v390;
        v222 = v383;
        v220(v155, v218, v29);
        while (1)
        {
          v224 = sub_22259678C();
          v226 = v225;
          if (v224 == sub_222596828() && v226 == v227)
          {
            swift_bridgeObjectRelease_n();
            v220((uint64_t)v222, (char *)v393, v29);
          }
          else
          {
            v228 = sub_2225976E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v155 = v393;
            v220((uint64_t)v222, (char *)v393, v29);
            if ((v228 & 1) == 0)
            {
              v223 = *(void (**)(char *, uint64_t))(v399 + 8);
              v223(v222, v29);
              v223((char *)v155, v29);
              goto LABEL_176;
            }
          }
          v229 = v395;
          sub_222596798();
          v231 = v396;
          v230 = v397;
          v232 = v398;
          v397[13](v396, v392, v398);
          sub_2219E0E24();
          v233 = sub_222596CCC();
          v234 = (void (*)(char *, uint64_t))v230[1];
          v234(v231, v232);
          v235 = v229;
          v29 = v394;
          v236 = v232;
          v222 = v383;
          v234(v235, v236);
          v237 = *(void (**)(char *, uint64_t))(v399 + 8);
          v237(v222, v29);
          v237((char *)v393, v29);
          v155 = v393;
          if ((v233 & 1) == 0)
            break;
LABEL_176:
          v218 += v219;
          if (!--v221)
          {
            v198 = v379;
            swift_bridgeObjectRelease_n();
            v152 = v377;
            v153 = v378;
            v142 = v384;
            v154 = v376;
            v156 = v387;
            v211 = v381;
            goto LABEL_170;
          }
          v220(v155, v218, v29);
        }
        v198 = v379;
        swift_bridgeObjectRelease_n();
        v238 = sub_22259684C();
        if (v239)
        {
          v240 = v238;
          v241 = v239;
          swift_bridgeObjectRetain();
          sub_2219AEFC8((uint64_t *)&v425, v240, v241);
          swift_bridgeObjectRelease();
          sub_2219AEFC8((uint64_t *)&v425, v240, v241);
          swift_bridgeObjectRelease();
        }
        v242 = v387;
        v243 = sub_222596858();
        v152 = v377;
        v153 = v378;
        v142 = v384;
        v154 = v376;
        if (v244)
        {
          sub_2219AEFC8((uint64_t *)&v425, v243, v244);
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v154 + 8))(v242, v152);
        v155 = v393;
        v156 = v242;
        v211 = v381;
LABEL_171:
        v215 = v391 + 1;
        if (v391 + 1 == v389)
        {

          swift_bridgeObjectRelease();
          goto LABEL_190;
        }
      }
    }

LABEL_190:
    v371 = v347 | v350 | (v351 << 16) | (v371 << 24) | v346 | v345 | v344 | v343;
    LODWORD(v381) = v342 | v349;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v212 = v364;
    if (v364)
      goto LABEL_191;
  }
  else
  {
    v373 = 0;
    v374 = 0;
    LODWORD(v381) = 0;
    v371 = 2;
    v372 = 0;
    v212 = v364;
    if (v364)
    {
LABEL_191:
      v245 = v212;
      sub_2219DE074(v245, v365, v366, &v420);
      v347 = v420;
      v348 = BYTE2(v420);
      v349 = BYTE3(v420);
      v379 = (char *)BYTE8(v420);
      v351 = v422;
      v352 = v421;
      LODWORD(v346) = v423;
      if (BYTE1(v420))
        v246 = 256;
      else
        v246 = 0;
      v247 = 0x100000000;
      if (!BYTE4(v420))
        v247 = 0;
      v344 = v247;
      v345 = v246;
      if (BYTE5(v420))
        v248 = 0x10000000000;
      else
        v248 = 0;
      v249 = 0x1000000000000;
      if (!BYTE6(v420))
        v249 = 0;
      v342 = v249;
      v343 = v248;
      v250 = 0x100000000000000;
      if (!BYTE7(v420))
        v250 = 0;
      v341 = v250;
      if (v424)
        v251 = 256;
      else
        v251 = 0;
      v340 = v251;
      v339 = v245;
      sub_22196D358(v245);
      v255 = v254;
      v388 = v252;
      v350 = (unint64_t)v253;
      if (v253)
      {
        v256 = objc_msgSend(v253, sel_SSID);
        if (v256)
        {
          v257 = v256;
          v258 = sub_222596CF0();
          v260 = v259;

          swift_bridgeObjectRetain();
          sub_2219AEFC8((uint64_t *)&v425, v258, v260);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
          v261 = swift_initStackObject();
          *(_OWORD *)(v261 + 16) = xmmword_222688C60;
          *(_QWORD *)(v261 + 32) = v258;
          *(_QWORD *)(v261 + 40) = v260;
          v262 = sub_2219DCED0(v261, v369);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        else
        {
          v262 = v369;
        }
        v369 = v262;
        v264 = objc_msgSend((id)v350, sel_networkBSSID);
        if (v264)
        {
          v265 = v264;
          v266 = sub_222596CF0();
          v268 = v267;

          swift_bridgeObjectRetain();
          sub_2219AEFC8((uint64_t *)&v425, v266, v268);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255741420);
          v269 = swift_initStackObject();
          *(_OWORD *)(v269 + 16) = xmmword_222688C60;
          *(_QWORD *)(v269 + 32) = v266;
          *(_QWORD *)(v269 + 40) = v268;
          v362 = sub_2219DCED0(v269, v362);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        v154 = v376;
        v152 = v377;
        v263 = v388;
      }
      else
      {
        v263 = v252;
      }
      v390 = *(_QWORD *)(v263 + 16);
      if (v390)
      {
        v270 = (char *)*((_QWORD *)v255 + 2);
        v389 = (char *)(v263
                      + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80)));
        LODWORD(v392) = *MEMORY[0x24BE3E940];
        swift_bridgeObjectRetain();
        v271 = 0;
        v387 = v255;
        v383 = v270;
        while (1)
        {
          if ((unint64_t)v271 >= *(_QWORD *)(v263 + 16))
            goto LABEL_276;
          (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v385, &v389[*(_QWORD *)(v154 + 72) * (_QWORD)v271], v152);
          if (!v270)
          {
LABEL_217:
            (*(void (**)(char *, uint64_t))(v154 + 8))(v385, v152);
            goto LABEL_218;
          }
          v391 = v271;
          v272 = v399;
          v273 = &v255[(*(unsigned __int8 *)(v399 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v399 + 80)];
          swift_bridgeObjectRetain_n();
          v393 = *(_QWORD *)(v272 + 72);
          v274 = *(void (**)(char *, char *, uint64_t))(v272 + 16);
          v275 = v270;
          v274(v142, v273, v29);
          while (1)
          {
            v277 = sub_22259678C();
            v279 = v278;
            if (v277 == sub_222596828() && v279 == v280)
            {
              swift_bridgeObjectRelease_n();
              v281 = v386;
              v274(v386, v142, v29);
            }
            else
            {
              v282 = sub_2225976E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v281 = v386;
              v274(v386, v142, v29);
              if ((v282 & 1) == 0)
              {
                v276 = *(void (**)(char *, uint64_t))(v399 + 8);
                v276(v281, v29);
                v276(v142, v29);
                goto LABEL_223;
              }
            }
            v283 = v395;
            sub_222596798();
            v284 = v281;
            v286 = v396;
            v285 = v397;
            v287 = v398;
            v397[13](v396, v392, v398);
            sub_2219E0E24();
            v288 = sub_222596CCC();
            v289 = (void (*)(char *, uint64_t))v285[1];
            v289(v286, v287);
            v290 = v283;
            v29 = v394;
            v291 = v287;
            v292 = v385;
            v289(v290, v291);
            v293 = *(void (**)(char *, uint64_t))(v399 + 8);
            v294 = v284;
            v142 = v384;
            v293(v294, v29);
            v293(v142, v29);
            if ((v288 & 1) == 0)
              break;
LABEL_223:
            v273 += v393;
            if (!--v275)
            {
              v255 = v387;
              swift_bridgeObjectRelease_n();
              v152 = v377;
              v153 = v378;
              v154 = v376;
              v263 = v388;
              v270 = v383;
              v271 = v391;
              goto LABEL_217;
            }
            v274(v142, v273, v29);
          }
          v255 = v387;
          swift_bridgeObjectRelease_n();
          v295 = sub_22259684C();
          if (v296)
          {
            v297 = v295;
            v298 = v296;
            swift_bridgeObjectRetain();
            sub_2219AEFC8((uint64_t *)&v425, v297, v298);
            swift_bridgeObjectRelease();
            sub_2219AEFC8((uint64_t *)&v425, v297, v298);
            swift_bridgeObjectRelease();
          }
          v299 = sub_222596858();
          v301 = v292;
          v152 = v377;
          v153 = v378;
          v154 = v376;
          if (v300)
          {
            sub_2219AEFC8((uint64_t *)&v425, v299, v300);
            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v154 + 8))(v301, v152);
          v263 = v388;
          v270 = v383;
          v271 = v391;
LABEL_218:
          if (++v271 == (char *)v390)
          {

            swift_bridgeObjectRelease();
            goto LABEL_237;
          }
        }
      }

LABEL_237:
      v214 = v345 | v347 | (v348 << 16) | (v349 << 24) | v344 | v343 | v342 | v341;
      v213 = v340 | v346;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v212 = v364;
      goto LABEL_238;
    }
  }
  v379 = 0;
  v351 = 0;
  v352 = 0;
  v213 = 0;
  v214 = 2;
LABEL_238:
  LODWORD(v302) = v361;
  if (v361 >= -80)
    goto LABEL_244;
  v303 = 1;
  v304 = &selRef_userUniqueID;
  if (!v212)
    goto LABEL_248;
LABEL_240:
  v305 = (unint64_t)objc_msgSend(v212, v304[123]);
  if ((v305 & 0x8000000000000000) != 0)
    goto LABEL_277;
  v306 = v367;
  if (v367)
  {
    while (1)
    {
      v302 = (unint64_t)objc_msgSend(v306, v304[123]);
      v212 = v368;
      if ((v302 & 0x8000000000000000) == 0)
        break;
      __break(1u);
LABEL_244:
      if ((int)v302 > -61)
      {
        v303 = ((int)v302 >> 31) & 3;
        v304 = &selRef_userUniqueID;
        if (v212)
          goto LABEL_240;
      }
      else
      {
        v303 = 2;
        v304 = &selRef_userUniqueID;
        if (v212)
          goto LABEL_240;
      }
LABEL_248:
      v305 = 0;
      v306 = v367;
      if (!v367)
        goto LABEL_249;
    }
  }
  else
  {
LABEL_249:
    v302 = 0;
  }
  LODWORD(v395) = v303;
  v396 = (char *)v302;
  v397 = (void (**)(char *, _QWORD, uint64_t))v305;
  v398 = v214;
  v307 = *(_QWORD *)(a11 + 16);
  LODWORD(v399) = v213;
  if (v307)
  {
    v308 = a11 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    v309 = *(_QWORD *)(v153 + 72);
    swift_bridgeObjectRetain();
    v310 = v307 - 1;
    while (1)
    {
      v311 = v310;
      if (sub_2225967BC() == v382 && v312 == v380)
        break;
      v313 = sub_2225976E0();
      swift_bridgeObjectRelease();
      if ((v313 & 1) == 0)
      {
        v310 = v311 - 1;
        v308 += v309;
        if (v311)
          continue;
      }
      goto LABEL_259;
    }
    swift_bridgeObjectRelease();
    v313 = 1;
LABEL_259:
    swift_bridgeObjectRelease();
    v153 = v378;
  }
  else
  {
    v313 = 0;
  }
  v393 = a14;
  v314 = *(_QWORD *)(a12 + 16);
  if (v314)
  {
    v315 = a12 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    v316 = *(_QWORD *)(v153 + 72);
    swift_bridgeObjectRetain();
    v317 = v314 - 1;
    while (1)
    {
      v318 = v317;
      if (sub_2225967BC() == v382 && v319 == v380)
        break;
      v320 = sub_2225976E0();
      swift_bridgeObjectRelease();
      if ((v320 & 1) == 0)
      {
        v317 = v318 - 1;
        v315 += v316;
        if (v318)
          continue;
      }
      goto LABEL_269;
    }
    swift_bridgeObjectRelease();
    v320 = 1;
LABEL_269:
    swift_bridgeObjectRelease();
  }
  else
  {
    v320 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v321 = v363;
  v322 = objc_msgSend(v363, sel_SSID);
  LODWORD(v394) = a21;
  if (v322
    && (v322, (v323 = objc_msgSend(v321, sel_networkBSSID)) != 0))
  {

    v324 = 1;
  }
  else
  {
    v324 = 0;
  }
  v325 = v366;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2219DD91C(v375, (uint64_t)v368, a11, a12, a13, v393, v325 != 0, 1, &v425, v365, v325, (char)v395, v324);
  LODWORD(v386) = v425;
  LODWORD(v385) = BYTE1(v425);
  LODWORD(v384) = WORD1(v425);
  LODWORD(v383) = BYTE4(v425);
  LODWORD(v382) = BYTE5(v425);
  LODWORD(v380) = BYTE6(v425);
  LOBYTE(v325) = HIBYTE(v425);
  v326 = v426;
  v327 = v427;
  v328 = v428;
  LODWORD(v390) = v429;
  LODWORD(v389) = v430;
  v395 = *(char **)(v414 + 16);
  v329 = v357;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v393 = *(_QWORD *)(v413 + 16);
  swift_bridgeObjectRelease();
  v392 = *(char **)(v369 + 16);
  swift_bridgeObjectRelease();
  v391 = *(char **)(v362 + 16);
  swift_bridgeObjectRelease();
  v388 = *(_QWORD *)(v412 + 16);
  swift_bridgeObjectRelease();
  v387 = *(char **)(v408 + 16);
  swift_bridgeObjectRelease();
  v330 = sub_2219DD050(v409, v411);
  swift_bridgeObjectRelease();
  v331 = sub_2219DD050(v410, v330);
  swift_bridgeObjectRelease();
  v332 = *(_QWORD *)(v331 + 16);
  swift_release();
  v333 = v359;
  *v359 = v356;
  v333[1] = v329;
  *((_BYTE *)v333 + 16) = v358;
  *((_BYTE *)v333 + 24) = (_BYTE)v386;
  *((_BYTE *)v333 + 25) = (_BYTE)v385;
  *((_WORD *)v333 + 13) = (_WORD)v384;
  *((_BYTE *)v333 + 28) = (_BYTE)v383;
  *((_BYTE *)v333 + 29) = v382;
  *((_BYTE *)v333 + 30) = (_BYTE)v380;
  *((_BYTE *)v333 + 31) = v325;
  *((_BYTE *)v333 + 32) = v326;
  v333[5] = v327;
  v333[6] = v328;
  *(_DWORD *)((char *)v333 + 17) = *(_DWORD *)v407;
  *((_DWORD *)v333 + 5) = *(_DWORD *)&v407[3];
  *((_DWORD *)v333 + 9) = *(_DWORD *)&v406[3];
  *(_DWORD *)((char *)v333 + 33) = *(_DWORD *)v406;
  v334 = v370 & 1;
  v335 = v355 & 1;
  v336 = v360 & 1;
  v337 = v394 & 1;
  *((_BYTE *)v333 + 56) = v390;
  *((_BYTE *)v333 + 57) = (_BYTE)v389;
  *(_DWORD *)((char *)v333 + 58) = v404;
  *((_WORD *)v333 + 31) = v405;
  v333[8] = v398;
  v333[9] = v379;
  v333[10] = v352;
  v333[11] = v351;
  *((_WORD *)v333 + 48) = v399;
  *(_DWORD *)((char *)v333 + 98) = v402;
  *((_WORD *)v333 + 51) = v403;
  v333[13] = v371;
  v333[14] = v374;
  v333[15] = v373;
  v333[16] = v372;
  *((_WORD *)v333 + 68) = v381;
  *((_WORD *)v333 + 71) = v401;
  *(_DWORD *)((char *)v333 + 138) = v400;
  v333[18] = v395;
  v333[19] = v393;
  v333[20] = v392;
  v333[21] = v391;
  v333[22] = v388;
  v333[23] = v387;
  *((_BYTE *)v333 + 192) = v313 & 1;
  *((_BYTE *)v333 + 193) = v320 & 1;
  *((_BYTE *)v333 + 194) = v354;
  *((_BYTE *)v333 + 195) = v353;
  *((_BYTE *)v333 + 196) = v334;
  *((_BYTE *)v333 + 197) = v335;
  v338 = v397;
  v333[25] = v332;
  v333[26] = v338;
  v333[27] = v396;
  *((_BYTE *)v333 + 224) = v336;
  *((_BYTE *)v333 + 225) = v337;
}

uint64_t sub_2219E0C5C(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[40];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_22191658C(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_221917338((uint64_t)v18, &qword_255741408);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_2219E0E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255741418;
  if (!qword_255741418)
  {
    v1 = sub_2225968A0();
    result = MEMORY[0x227676F2C](MEMORY[0x24BE3E960], v1);
    atomic_store(result, (unint64_t *)&qword_255741418);
  }
  return result;
}

uint64_t initializeWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v4 = *(_OWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 104);
  v7 = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  return a1;
}

__n128 __swift_memcpy226_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for Metric.Setup.NetworkInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_WORD *)(a1 + 26) = *(_WORD *)(a2 + 26);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_BYTE *)(a1 + 197) = *(_BYTE *)(a2 + 197);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  return a1;
}

uint64_t getEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 226))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.Setup.NetworkInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 224) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 226) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 226) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo()
{
  return &type metadata for Metric.Setup.NetworkInfo;
}

uint64_t getEnumTagSinglePayload for Metric.Setup.PrimaryResidentWiFiInfosFetch(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.Setup.PrimaryResidentWiFiInfosFetch(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.Setup.PrimaryResidentWiFiInfosFetch()
{
  return &type metadata for Metric.Setup.PrimaryResidentWiFiInfosFetch;
}

uint64_t sub_2219E1364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2219DCBDC(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x6C6C6F72746E6F63, 0xEB000000005F7265);
}

uint64_t sub_2219E1398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2219E13E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2219DCBDC(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x5F7972616D697270, 0xE800000000000000);
}

uint64_t sub_2219E140C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2219DCBDC(a1, a2, a3, *(_QWORD *)(v3 + 16), 0x726F737365636361, 0xEA00000000005F79);
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Metric.NetworkInfo(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[34])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Metric.NetworkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo()
{
  return &type metadata for Metric.NetworkInfo;
}

ValueMetadata *type metadata accessor for Metric.Setup()
{
  return &type metadata for Metric.Setup;
}

ValueMetadata *type metadata accessor for Metric.Setup.NetworkInfo.SetupCompletionState()
{
  return &type metadata for Metric.Setup.NetworkInfo.SetupCompletionState;
}

unint64_t sub_2219E1524()
{
  unint64_t result;

  result = qword_255741448;
  if (!qword_255741448)
  {
    result = MEMORY[0x227676F2C](&unk_22268F468, &type metadata for Metric.Setup.NetworkInfo.SetupCompletionState);
    atomic_store(result, (unint64_t *)&qword_255741448);
  }
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.WiFiRSSIStatus()
{
  return &type metadata for Metric.NetworkInfo.WiFiRSSIStatus;
}

uint64_t _s13HomeKitDaemon6MetricO5SetupO11NetworkInfoV20SetupCompletionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2219E15C8 + 4 * byte_22268F325[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2219E15FC + 4 * byte_22268F320[v4]))();
}

uint64_t sub_2219E15FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E1604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219E160CLL);
  return result;
}

uint64_t sub_2219E1618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219E1620);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2219E1624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E162C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.FirstCloudImportStatus()
{
  return &type metadata for Metric.NetworkInfo.FirstCloudImportStatus;
}

uint64_t _s13HomeKitDaemon6MetricO11NetworkInfoV14PrimaryServiceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2219E1694 + 4 * byte_22268F32F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2219E16C8 + 4 * byte_22268F32A[v4]))();
}

uint64_t sub_2219E16C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E16D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219E16D8);
  return result;
}

uint64_t sub_2219E16E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219E16ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2219E16F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E16F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Metric.NetworkInfo.PrimaryService()
{
  return &type metadata for Metric.NetworkInfo.PrimaryService;
}

unint64_t sub_2219E1718()
{
  unint64_t result;

  result = qword_255741450;
  if (!qword_255741450)
  {
    result = MEMORY[0x227676F2C](&unk_22268F550, &type metadata for Metric.NetworkInfo.PrimaryService);
    atomic_store(result, (unint64_t *)&qword_255741450);
  }
  return result;
}

unint64_t sub_2219E1760()
{
  unint64_t result;

  result = qword_255741458;
  if (!qword_255741458)
  {
    result = MEMORY[0x227676F2C](&unk_22268F5F0, &type metadata for Metric.NetworkInfo.FirstCloudImportStatus);
    atomic_store(result, (unint64_t *)&qword_255741458);
  }
  return result;
}

unint64_t sub_2219E17A8()
{
  unint64_t result;

  result = qword_255741460;
  if (!qword_255741460)
  {
    result = MEMORY[0x227676F2C](&unk_22268F690, &type metadata for Metric.NetworkInfo.WiFiRSSIStatus);
    atomic_store(result, (unint64_t *)&qword_255741460);
  }
  return result;
}

unint64_t sub_2219E17EC(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

_QWORD *sub_2219E1804(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_222596678();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_2219E188C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_222596678();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2219E18C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2219E191C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2219E1978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2219E19D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_222596678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2219E1A30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219E1A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_222596678();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_2219E1AC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2219E1AD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_222596678();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t _s20ControlBlockInternalVMa()
{
  uint64_t result;

  result = qword_2557414C8;
  if (!qword_2557414C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2219E1B88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596678();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2219E1BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  char v16;
  uint64_t result;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t v32;
  _QWORD v33[2];
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];

  v3 = v2;
  v6 = sub_222596678();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596B40();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s20ControlBlockInternalVMa();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(uint64_t, uint64_t))(a2 + 40);
  v15(a1, a2);
  v16 = v14[*(int *)(v12 + 20)];
  result = sub_2219E22D0((uint64_t)v14);
  if ((v16 & 1) == 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(a1);
    swift_unknownObjectRetain_n();
    v18 = sub_222596B28();
    v19 = sub_22259702C();
    v37 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v36 = v12;
      v21 = v20;
      v35 = swift_slowAlloc();
      v41 = v3;
      v42[0] = v35;
      *(_DWORD *)v21 = 136315394;
      v33[0] = v21 + 4;
      v34 = v18;
      v22 = sub_222597530();
      v41 = sub_221921364(v22, v23, v42);
      v33[1] = v42;
      sub_222597134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v33[0] = v21 + 14;
      v15(a1, a2);
      v24 = v38;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v8, v14, v6);
      sub_221977FA4();
      v25 = sub_222597530();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
      v41 = sub_221921364(v25, v27, v42);
      sub_222597134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v28 = v34;
      _os_log_impl(&dword_2218F0000, v34, (os_log_type_t)v37, "Scheduling %s with uuid: %s", (uint8_t *)v21, 0x16u);
      v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v29, -1, -1);
      v30 = v21;
      v12 = v36;
      MEMORY[0x227676FE0](v30, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
    v31 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 56))(v42, a1, a2);
    *(_BYTE *)(v32 + *(int *)(v12 + 20)) = 1;
    v31(v42, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  }
  return result;
}

uint64_t sub_2219E1F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  int v16;
  uint64_t result;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, _QWORD);
  uint64_t v32;
  _QWORD v33[2];
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];

  v3 = v2;
  v6 = sub_222596678();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596B40();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s20ControlBlockInternalVMa();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(uint64_t, uint64_t))(a2 + 40);
  v15(a1, a2);
  v16 = v14[*(int *)(v12 + 20)];
  result = sub_2219E22D0((uint64_t)v14);
  if (v16 == 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 8))(a1);
    swift_unknownObjectRetain_n();
    v18 = sub_222596B28();
    v19 = sub_22259702C();
    v37 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v36 = v12;
      v21 = v20;
      v35 = swift_slowAlloc();
      v41 = v3;
      v42[0] = v35;
      *(_DWORD *)v21 = 136315394;
      v33[0] = v21 + 4;
      v34 = v18;
      v22 = sub_222597530();
      v41 = sub_221921364(v22, v23, v42);
      v33[1] = v42;
      sub_222597134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v33[0] = v21 + 14;
      v15(a1, a2);
      v24 = v38;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v8, v14, v6);
      sub_221977FA4();
      v25 = sub_222597530();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
      v41 = sub_221921364(v25, v27, v42);
      sub_222597134();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v28 = v34;
      _os_log_impl(&dword_2218F0000, v34, (os_log_type_t)v37, "Descheduling %s with uuid: %s", (uint8_t *)v21, 0x16u);
      v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v29, -1, -1);
      v30 = v21;
      v12 = v36;
      MEMORY[0x227676FE0](v30, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
    v31 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 56))(v42, a1, a2);
    *(_BYTE *)(v32 + *(int *)(v12 + 20)) = 0;
    v31(v42, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  }
  return result;
}

uint64_t sub_2219E22D0(uint64_t a1)
{
  uint64_t v2;

  v2 = _s20ControlBlockInternalVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_2219E230C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  double result;

  sub_22191DDC4(a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)&result = sub_221948AA8(a1, AssociatedTypeWitness, AssociatedConformanceWitness, v6, a2).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for DefaultHomeMatterServicesFactory()
{
  return objc_opt_self();
}

uint64_t sub_2219E23BC()
{
  uint64_t v0;

  sub_221949590(v0 + OBJC_IVAR____TtCOO13HomeKitDaemon16DeviceMediaState16FrameworkAdapter21MediaExperienceVolume_updateStream);
  return swift_deallocClassInstance();
}

uint64_t sub_2219E23EC()
{
  return _s21MediaExperienceVolumeCMa();
}

uint64_t _s21MediaExperienceVolumeCMa()
{
  uint64_t result;

  result = qword_2557415C0;
  if (!qword_2557415C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2219E2430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  sub_2219494A4(319, a2, a3, a4);
  if (v4 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_2219E249C()
{
  return 0xD000000000000037;
}

void sub_2219E24B8(uint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  double v10;
  id v11;
  double v12;
  id v13;
  double v14;
  unint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  char v21;

  sub_22194D80C(a1, a2, a3);
  sub_2219E3174(a6, (uint64_t)&v20);
  if ((v21 & 1) != 0)
  {
    sub_22259798C();
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v10);
    sub_22259798C();
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v12);
  }
  else
  {
    sub_22259798C();
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v14);
    v13 = 0;
  }
  v15 = HIDWORD(a4);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, (unsigned __int16)a4);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v15);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, a5);
  v19 = (void *)sub_222596C54();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_writeAttributeWithEndpointID_clusterID_attributeID_value_expectedValueInterval_timedWriteTimeout_, v16, v17, v18, v19, v11, v13);

}

uint64_t sub_2219E26A0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 88) = v5;
  *(_QWORD *)(v6 + 64) = a3;
  *(_QWORD *)(v6 + 72) = a4;
  *(_DWORD *)(v6 + 36) = a2;
  *(_QWORD *)(v6 + 56) = a1;
  v7 = sub_222597350();
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  v8 = sub_222597368();
  *(_QWORD *)(v6 + 128) = v8;
  *(_QWORD *)(v6 + 136) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219E2744()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if ((*(_QWORD *)(v0 + 80) & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  v1 = 0;
  do
  {
    *(_QWORD *)(v0 + 152) = v1;
    if (v1)
      goto LABEL_9;
    v2 = *(void **)(v0 + 88);
    v3 = *(unsigned int *)(v0 + 36);
    v4 = *(unsigned int *)(v0 + 60);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, *(unsigned __int16 *)(v0 + 56));
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v4);
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v3);
    v8 = objc_msgSend(v2, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v5, v6, v7, 0);

    if (v8)
    {
      v22 = sub_222596C6C();

      sub_22194E168(v22);
      v24 = v23;
      v26 = v25;
      v28 = v27;
LABEL_15:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v24, v26, v28);
    }
    v9 = *(_QWORD *)(v0 + 152);
    if (v9 == *(_QWORD *)(v0 + 80))
    {
      v24 = 0;
      v26 = 0;
      v28 = 255;
      goto LABEL_15;
    }
    v1 = v9 + 1;
  }
  while (!__OFADD__(v9, 1));
  __break(1u);
LABEL_9:
  if (qword_25573B3A8 != -1)
    goto LABEL_17;
LABEL_10:
  v10 = sub_222596B40();
  __swift_project_value_buffer(v10, (uint64_t)qword_255768588);
  v11 = sub_222596B28();
  v12 = sub_22259702C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = swift_slowAlloc();
    *(_DWORD *)v14 = 134218240;
    *(_QWORD *)(v14 + 4) = v1;
    *(_WORD *)(v14 + 12) = 2048;
    *(_QWORD *)(v14 + 14) = v13;
    _os_log_impl(&dword_2218F0000, v11, v12, "readAttributeValueWithRetry((path)) - sleeping to retry read (%ld of %ld attempts)", (uint8_t *)v14, 0x16u);
    MEMORY[0x227676FE0](v14, -1, -1);
  }
  v15 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);

  sub_22259735C();
  *(_QWORD *)(v0 + 40) = v18;
  *(_QWORD *)(v0 + 48) = v17;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_2219018CC(&qword_25573D218, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_222597884();
  sub_2219018CC(&qword_25573D220, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_222597374();
  v19 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  *(_QWORD *)(v0 + 160) = v19;
  v19(v15, v16);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v20;
  *v20 = v0;
  v20[1] = sub_2219E2B8C;
  return sub_222597890();
}

uint64_t sub_2219E2B8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 160))(*(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 96));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 136);
    v3 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 128);
    (*(void (**)(_QWORD, _QWORD))(v2 + 160))(*(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 96));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_2219E2C2C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 176);
  do
  {
    v2 = *(void **)(v0 + 88);
    v3 = *(unsigned int *)(v0 + 36);
    v4 = *(unsigned int *)(v0 + 60);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedShort_, *(unsigned __int16 *)(v0 + 56));
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v4);
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInt_, v3);
    v8 = objc_msgSend(v2, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v5, v6, v7, 0);

    if (v8)
    {
      v23 = sub_222596C6C();

      sub_22194E168(v23);
      if (v1)
      {
        v27 = v1;
        v28 = (void *)objc_opt_self();
        v29 = (void *)sub_222596CD8();
        v30 = (void *)sub_2225964BC();
        objc_msgSend(v28, sel_hmfErrorWithCode_reason_suggestion_underlyingError_, 3, v29, 0, v30);

        swift_willThrow();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v31 = v24;
      v32 = v25;
      v33 = v26;
      goto LABEL_14;
    }
    v9 = *(_QWORD *)(v0 + 152);
    if (v9 == *(_QWORD *)(v0 + 80))
    {
      v31 = 0;
      v32 = 0;
      v33 = 255;
LABEL_14:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v31, v32, v33);
    }
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    *(_QWORD *)(v0 + 152) = v10;
  }
  while (v9 == -1);
  if (qword_25573B3A8 != -1)
LABEL_16:
    swift_once();
  v11 = sub_222596B40();
  __swift_project_value_buffer(v11, (uint64_t)qword_255768588);
  v12 = sub_222596B28();
  v13 = sub_22259702C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 80);
    v15 = swift_slowAlloc();
    *(_DWORD *)v15 = 134218240;
    *(_QWORD *)(v15 + 4) = v10;
    *(_WORD *)(v15 + 12) = 2048;
    *(_QWORD *)(v15 + 14) = v14;
    _os_log_impl(&dword_2218F0000, v12, v13, "readAttributeValueWithRetry((path)) - sleeping to retry read (%ld of %ld attempts)", (uint8_t *)v15, 0x16u);
    MEMORY[0x227676FE0](v15, -1, -1);
  }
  v16 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);

  sub_22259735C();
  *(_QWORD *)(v0 + 40) = v19;
  *(_QWORD *)(v0 + 48) = v18;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_2219018CC(&qword_25573D218, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_222597884();
  sub_2219018CC(&qword_25573D220, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_222597374();
  v20 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  *(_QWORD *)(v0 + 160) = v20;
  v20(v16, v17);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v21;
  *v21 = v0;
  v21[1] = sub_2219E2B8C;
  return sub_222597890();
}

uint64_t sub_2219E3064()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219E30C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_22192F148;
  return sub_2219E26A0(a1 & 0xFFFFFFFF0000FFFFLL, a2, a3, a4, a5);
}

void sub_2219E3148(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_2219E24B8(a1, a2, a3, a4 & 0xFFFFFFFF0000FFFFLL, a5, a6);
}

uint64_t sub_2219E3174(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_2219E31B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2225968A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_ifaceName);
  if (!v11)
    goto LABEL_18;
  v12 = v11;
  v13 = sub_222596CF0();

  v14 = objc_msgSend(a1, sel_type);
  if (!v14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    v32 = sub_2225967A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
  v15 = v14;
  v37 = v13;
  v16 = sub_222596CF0();
  v18 = v17;

  v19 = objc_msgSend(a1, sel_macAddress);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v20 = v19;
  v34 = a2;
  v21 = sub_222596CF0();
  v35 = v22;
  v36 = v21;

  if (v16 == 0x74656E7265687465 && v18 == 0xE800000000000000 || (sub_2225976E0() & 1) != 0)
  {
    v23 = (unsigned int *)MEMORY[0x24BE3E948];
    v24 = v34;
  }
  else
  {
    v23 = (unsigned int *)MEMORY[0x24BE3E950];
    v24 = v34;
    if ((v16 != 0x3132303865656569 || v18 != 0xE900000000000031) && (sub_2225976E0() & 1) == 0)
      v23 = (unsigned int *)MEMORY[0x24BE3E940];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v23, v7);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_ipv4Addresses);
  if (!v25 || (v26 = v25, v38 = 0, sub_222596E34(), v26, !v38))
    swift_bridgeObjectRelease();
  v27 = objc_msgSend(a1, sel_ipv6Addresses);
  if (!v27 || (v28 = v27, v38 = 0, sub_222596E34(), v28, !v38))
    swift_bridgeObjectRelease();
  v29 = sub_222596804();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
  sub_222596780();
  v30 = sub_2225967A4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v24, 0, 1, v30);
}

uint64_t sub_2219E355C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;

  v4 = objc_msgSend(a1, sel_ifaceName);
  if (v4)
  {
    v5 = v4;
    sub_222596CF0();

    objc_msgSend(a1, sel_isPrimary);
    v6 = objc_msgSend(a1, sel_confirmedIfaceName);
    if (v6)
    {
      v7 = v6;
      sub_222596CF0();

    }
    v10 = objc_msgSend(a1, sel_ipv4Addresses);
    if (v10)
    {
      v11 = v10;
      sub_222596E34();

    }
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(a1, sel_routerIPv4);
    if (v12)
    {
      v13 = v12;
      sub_222596CF0();

    }
    v14 = objc_msgSend(a1, sel_networkSignatureV4);
    if (v14)
    {
      v15 = v14;
      sub_222596CF0();

    }
    v16 = objc_msgSend(a1, sel_ipv6Addresses);
    if (v16)
    {
      v17 = v16;
      sub_222596E34();

    }
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(a1, sel_routerIPv6);
    if (v18)
    {
      v19 = v18;
      sub_222596CF0();

    }
    v20 = objc_msgSend(a1, sel_networkSignatureV6);
    if (v20)
    {
      v21 = v20;
      sub_222596CF0();

    }
    sub_222596870();
    v22 = sub_222596888();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
  }
  else
  {
    v8 = sub_222596888();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
}

id sub_2219E3830()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_222596804();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2225968A0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD73C8]), sel_init);
  if (v13)
  {
    v37 = v3;
    sub_22259675C();
    v14 = (void *)sub_222596CD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setMacAddress_, v14);

    sub_22259678C();
    v15 = (void *)sub_222596CD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setIfaceName_, v15);

    sub_222596798();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
    if (v16 == *MEMORY[0x24BE3E940])
    {
      v17 = v5;
      v18 = v38;
    }
    else
    {
      v17 = v5;
      if (v16 == *MEMORY[0x24BE3E948])
      {
        v18 = v38;
      }
      else
      {
        v18 = v38;
        if (v16 != *MEMORY[0x24BE3E950])
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v19 = (void *)sub_222596CD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setType_, v19);

    sub_222596768();
    v20 = (void *)sub_222596E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_mutableCopy);

    sub_222597158();
    swift_unknownObjectRelease();
    sub_2219E7D70();
    if (swift_dynamicCast())
      v21 = v39;
    else
      v21 = 0;
    objc_msgSend(v13, sel_setIpv4Addresses_, v21);

    sub_222596774();
    v22 = (void *)sub_222596E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_mutableCopy);

    sub_222597158();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
      v23 = v39;
    else
      v23 = 0;
    objc_msgSend(v13, sel_setIpv6Addresses_, v23);

    sub_222596750();
    v24 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v2, 1, v37) == 1)
    {
      sub_2219E7DAC((uint64_t)v2);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v17, v2, v24);
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD73C0]), sel_init);
      if (v25)
      {
        v26 = v25;
        v27 = sub_2225967E0();
        v29 = v28;
        v30 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
        sub_22190D550(v27, v29);
        objc_msgSend(v26, sel_setSsid_, v30);

        v31 = sub_2225967F8();
        v33 = v32;
        v34 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
        sub_22190D550(v31, v33);
        objc_msgSend(v26, sel_setBssid_, v34);

        objc_msgSend(v13, sel_setWifiInfo_, v26);
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v24);
    }
  }
  return v13;
}

id sub_2219E3D14()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v17;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD73D0]), sel_init);
  if (v0)
  {
    sub_222596828();
    v1 = (void *)sub_222596CD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setIfaceName_, v1);

    objc_msgSend(v0, sel_setIsPrimary_, sub_22259687C() & 1);
    sub_222596864();
    if (v2)
    {
      v3 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setConfirmedIfaceName_, v3);

    }
    sub_222596834();
    v4 = (void *)sub_222596E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_mutableCopy);

    sub_222597158();
    swift_unknownObjectRelease();
    sub_2219E7D70();
    if (swift_dynamicCast())
      v5 = v17;
    else
      v5 = 0;
    objc_msgSend(v0, sel_setIpv4Addresses_, v5);

    sub_222596840();
    v6 = (void *)sub_222596E28();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_mutableCopy);

    sub_222597158();
    swift_unknownObjectRelease();
    if (swift_dynamicCast())
      v7 = v17;
    else
      v7 = 0;
    objc_msgSend(v0, sel_setIpv6Addresses_, v7);

    sub_22259684C();
    if (v8)
    {
      v9 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV4_, v9);

    }
    sub_222596810();
    if (v10)
    {
      v11 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv4_, v11);

    }
    sub_222596858();
    if (v12)
    {
      v13 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setNetworkSignatureV6_, v13);

    }
    sub_22259681C();
    if (v14)
    {
      v15 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_setRouterIPv6_, v15);

    }
  }
  return v0;
}

void __swiftcall InterfaceInfo.init(name:type:hwAddr:)(HomeKitDaemon::InterfaceInfo *__return_ptr retstr, Swift::String name, Swift::String type, Swift::String hwAddr)
{
  retstr->name = name;
  retstr->type = type;
  retstr->hwAddr = hwAddr;
}

SCDynamicStoreRef sub_2219E3FF0()
{
  const __CFAllocator *v0;
  __CFString *v1;
  SCDynamicStoreRef v2;

  v0 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v1 = (__CFString *)sub_222596CD8();
  v2 = SCDynamicStoreCreate(v0, v1, 0, 0);

  return v2;
}

CFStringRef sub_2219E4050(CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return SCDynamicStoreKeyCreateNetworkInterfaceEntity((CFAllocatorRef)*MEMORY[0x24BDBD240], domain, ifname, entity);
}

uint64_t sub_2219E4070(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFArrayRef v2;
  uint64_t v3;
  CFArrayRef v4;

  v2 = SCDynamicStoreCopyKeyList(a1, a2);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v4 = v2;
    type metadata accessor for CFString(0);
    sub_222596E34();

  }
  return v3;
}

const char *NetworkInfoController.NetworkInfoKey.unsafeMutableAddressor()
{
  return "NetworkInfo";
}

uint64_t static NetworkInfoController.NetworkInfoKey.getter()
{
  return 0x496B726F7774654ELL;
}

void *NetworkInfoController.NetworkServiceInfoKey.unsafeMutableAddressor()
{
  return &static NetworkInfoController.NetworkServiceInfoKey;
}

unint64_t static NetworkInfoController.NetworkServiceInfoKey.getter()
{
  return 0xD000000000000012;
}

id NetworkInfoController.__allocating_init(dataSource:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = sub_2219E78B8(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

id NetworkInfoController.init(dataSource:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_2219E7488((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v9;
}

id NetworkInfoController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id NetworkInfoController.init()()
{
  uint64_t v0;
  id v1;

  type metadata accessor for NetworkInfoSCDataSource();
  v0 = swift_allocObject();
  v1 = sub_2219E7974(v0);
  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

id NetworkInfoController.__deallocating_deinit()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR___HMDNetworkInfoController_store];
  *(_QWORD *)&v0[OBJC_IVAR___HMDNetworkInfoController_store] = 0;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for NetworkInfoController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

Swift::Void __swiftcall NetworkInfoController.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v1);
  v6 = v0;
  v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(), uint64_t *, uint64_t, uint64_t))(v2 + 8))(0xD000000000000015, 0x800000022268F810, sub_2219E7AB0, &v5, v1, v2);
  v4 = *(void **)(v0 + OBJC_IVAR___HMDNetworkInfoController_store);
  *(_QWORD *)(v0 + OBJC_IVAR___HMDNetworkInfoController_store) = v3;

}

void sub_2219E4568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __CFString *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  __int128 v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  const __CFString *v27;
  uint64_t v28;
  BOOL v29;
  BOOL v30;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(id, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(id, void *, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  char v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __CFString *v104;
  unint64_t v105;
  void *v106;
  CFAllocatorRef v107;
  unint64_t v108;
  unint64_t v109;
  const __CFAllocator *v110;
  CFStringRef NetworkGlobalEntity;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(id, CFStringRef, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  NSObject *v126;
  os_log_type_t v127;
  _BOOL4 v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  CFStringRef NetworkServiceEntity;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(id, CFStringRef, uint64_t, uint64_t);
  unint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  _BOOL4 v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  char *v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char v172;
  int v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  const __CFString *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t (*v203)(id, const __CFString *, uint64_t, uint64_t);
  unint64_t v204;
  NSObject *v205;
  os_log_type_t v206;
  uint8_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  _QWORD *v218;
  char *v219;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  uint64_t v228;
  char *v229;
  unint64_t v230;
  char v231;
  void *v232;
  unint64_t v233;
  char v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  int v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  char v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  BOOL v256;
  int64_t v257;
  char *v258;
  unint64_t v259;
  char *v260;
  unint64_t v261;
  unint64_t v262;
  NSObject *v263;
  os_log_type_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  uint64_t *v281;
  unsigned int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  char *v288;
  __CFString *v289;
  __CFString *v290;
  __CFString *v291;
  uint64_t v292;
  unint64_t v293;
  CFStringRef v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  CFStringRef v298;
  const __CFAllocator *v299;
  unint64_t v300;
  id v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  CFStringRef v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t v310;
  _QWORD *v311;
  id v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  char *v323;
  unint64_t v324;

  v1 = v0;
  v284 = sub_222596888();
  v283 = *(_QWORD *)(v284 - 8);
  MEMORY[0x24BDAC7A8](v284);
  v3 = (char *)&v275 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = sub_2225967A4();
  v292 = *(_QWORD *)(v295 - 8);
  MEMORY[0x24BDAC7A8](v295);
  v5 = (__CFString *)((char *)&v275 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v293 = (unint64_t)&v275 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v296 = (uint64_t)&v275 - v9;
  v10 = sub_2225968A0();
  v309 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v303 = (char *)&v275 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v314 = (char *)&v275 - v14;
  v15 = *(void **)(v1 + OBJC_IVAR___HMDNetworkInfoController_store);
  if (!v15)
  {
    v123 = sub_222596B28();
    v124 = sub_222597038();
    if (os_log_type_enabled(v123, v124))
    {
      v125 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v125 = 0;
      _os_log_impl(&dword_2218F0000, v123, v124, "No store", v125, 2u);
      MEMORY[0x227676FE0](v125, -1, -1);
    }

    return;
  }
  v304 = v13;
  v276 = v3;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 24);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource + 32);
  v311 = (_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR___HMDNetworkInfoController_dataSource), v16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 16);
  v312 = v15;
  v19 = v18(v16, v17);
  v21 = *(char **)(v19 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    v133 = sub_222596B28();
    v134 = sub_222597038();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v135 = 0;
      _os_log_impl(&dword_2218F0000, v133, v134, "Couldn't obtain interfaces", v135, 2u);
      MEMORY[0x227676FE0](v135, -1, -1);
    }

    return;
  }
  v323 = (char *)MEMORY[0x24BEE4AF8];
  v324 = MEMORY[0x24BEE4AF8];
  v297 = v1 + OBJC_IVAR___HMDNetworkInfoController_logger;
  LODWORD(v305) = *MEMORY[0x24BE3E950];
  v308 = *(_QWORD **)(v309 + 104);
  v282 = *MEMORY[0x24BE3E948];
  v307 = (CFStringRef)*MEMORY[0x24BDF59B0];
  v294 = (CFStringRef)*MEMORY[0x24BDF59F0];
  v286 = *MEMORY[0x24BDF5AD8];
  v291 = (__CFString *)*MEMORY[0x24BDF59F8];
  v281 = &v318;
  v285 = *MEMORY[0x24BDF5B08];
  v275 = v19;
  v22 = (uint64_t *)(v19 + 72);
  v280 = *MEMORY[0x24BDF59C0];
  v277 = MEMORY[0x24BEE4AD0] + 8;
  *(_QWORD *)&v20 = 136316162;
  v279 = v20;
  v278 = MEMORY[0x24BEE4AD8] + 8;
  v290 = v5;
  v23 = v296;
  v24 = v304;
  do
  {
    v25 = *(v22 - 4);
    v313 = *(v22 - 5);
    v27 = (const __CFString *)*(v22 - 3);
    v26 = (char *)*(v22 - 2);
    v28 = *(v22 - 1);
    v315 = *v22;
    ((void (*)(char *, _QWORD, uint64_t))v308)(v314, v305, v24);
    v316 = v26;
    v29 = v27 == (const __CFString *)0x3132303845454549 && v26 == (char *)0xE900000000000031;
    v302 = v21;
    v306 = v28;
    v298 = v27;
    if (!v29)
    {
      if ((sub_2225976E0() & 1) == 0)
      {
        v30 = v27 == (const __CFString *)0x74656E7265687445 && v316 == (char *)0xE800000000000000;
        if (!v30 && (sub_2225976E0() & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v309 + 8))(v314, v24);
          goto LABEL_56;
        }
      }
      if (v27 == (const __CFString *)0x74656E7265687445 && v316 == (char *)0xE800000000000000)
        goto LABEL_19;
    }
    if ((sub_2225976E0() & 1) != 0)
    {
LABEL_19:
      v32 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = v314;
      (*(void (**)(char *, uint64_t))(v309 + 8))(v314, v24);
      ((void (*)(char *, _QWORD, uint64_t))v308)(v33, v282, v24);
    }
    else
    {
      v32 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v319 = MEMORY[0x24BEE4AF8];
    v318 = MEMORY[0x24BEE4AF8];
    v34 = v311;
    v35 = v311[3];
    v36 = v311[4];
    __swift_project_boxed_opaque_existential_1(v311, v35);
    v310 = v25;
    v37 = (void *)sub_222596CD8();
    v38 = (*(uint64_t (**)(CFStringRef, void *, CFStringRef, uint64_t, uint64_t))(v36 + 24))(v307, v37, v294, v35, v36);

    v39 = v34[3];
    v40 = v34[4];
    __swift_project_boxed_opaque_existential_1(v34, v39);
    v41 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v40 + 32);
    v300 = v38;
    v42 = v41(v312, v38, v39, v40);
    v43 = sub_2219E6CD4(v42, &qword_255741788, (uint64_t *)&unk_25573D3C0);
    swift_bridgeObjectRelease();
    v23 = v32;
    if (v43)
    {
      v44 = sub_222596CF0();
      if (*(_QWORD *)(v43 + 16) && (v46 = sub_22198D4E4(v44, v45), (v47 & 1) != 0))
      {
        v48 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v46);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v319 = v48;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v49 = v311;
    v50 = v311[3];
    v51 = v311[4];
    __swift_project_boxed_opaque_existential_1(v311, v50);
    v52 = (void *)sub_222596CD8();
    v53 = (void *)(*(uint64_t (**)(CFStringRef, void *, __CFString *, uint64_t, uint64_t))(v51 + 24))(v307, v52, v291, v50, v51);

    v54 = v49[3];
    v55 = v49[4];
    __swift_project_boxed_opaque_existential_1(v49, v54);
    v56 = *(uint64_t (**)(id, void *, uint64_t, uint64_t))(v55 + 32);
    v301 = v53;
    v57 = v56(v312, v53, v54, v55);
    v58 = sub_2219E6CD4(v57, &qword_25573BB78, &qword_255741770);
    swift_bridgeObjectRelease();
    if (v58)
    {
      v59 = sub_222596CF0();
      if (*(_QWORD *)(v58 + 16) && (v61 = sub_22198D4E4(v59, v60), (v62 & 1) != 0))
      {
        v63 = *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v61);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v64 = sub_22199E480(v63);
        swift_bridgeObjectRelease();
        if (!v64)
          v64 = MEMORY[0x24BEE4AF8];
        swift_beginAccess();
        v318 = v64;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v65 = sub_222596804();
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
    v66(v32, 1, 1, v65);
    v67 = v303;
    v68 = v304;
    ((void (*)(char *, _QWORD, uint64_t))v308)(v303, v305, v304);
    v69 = sub_222596894();
    v299 = *(const __CFAllocator **)(v309 + 8);
    ((void (*)(char *, uint64_t))v299)(v67, v68);
    if ((v69 & 1) != 0)
    {
      v70 = v311;
      v71 = v311[3];
      v72 = v311[4];
      __swift_project_boxed_opaque_existential_1(v311, v71);
      v73 = (void *)sub_222596CD8();
      v74 = (void *)(*(uint64_t (**)(CFStringRef, void *, uint64_t, uint64_t, uint64_t))(v72 + 24))(v307, v73, v280, v71, v72);

      v75 = v70[3];
      v76 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, v75);
      v77 = (*(uint64_t (**)(id, void *, uint64_t, uint64_t))(v76 + 32))(v312, v74, v75, v76);
      if (!*(_QWORD *)(v77 + 16))
      {
        swift_bridgeObjectRelease();

        v23 = v296;
        goto LABEL_48;
      }
      v78 = sub_22198D4E4(0x4449535342, 0xE500000000000000);
      v23 = v296;
      if ((v79 & 1) == 0
        || (v317 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v78),
            swift_unknownObjectRetain(),
            (swift_dynamicCast() & 1) == 0))
      {
        swift_bridgeObjectRelease();

        goto LABEL_48;
      }
      v81 = (uint64_t)v321;
      v80 = (unint64_t)v322;
      if (!*(_QWORD *)(v77 + 16) || (v82 = sub_22198D4E4(1145656147, 0xE400000000000000), (v83 & 1) == 0))
      {

        swift_bridgeObjectRelease();
LABEL_47:
        sub_22190D550(v81, v80);
        goto LABEL_48;
      }
      v84 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v82);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v317 = v84;
      if ((swift_dynamicCast() & 1) == 0)
      {

        goto LABEL_47;
      }
      v85 = v293;
      sub_2225967EC();

      sub_2219E7DAC(v23);
      v66(v85, 0, 1, v65);
      sub_2219E7E34(v85, v23);
    }
LABEL_48:
    v86 = v310;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v87 = sub_222596B28();
    v88 = sub_22259702C();
    v89 = v88;
    if (os_log_type_enabled(v87, v88))
    {
      v90 = swift_slowAlloc();
      v288 = (char *)swift_slowAlloc();
      v321 = v288;
      *(_DWORD *)v90 = v279;
      swift_beginAccess();
      v91 = swift_bridgeObjectRetain();
      v92 = MEMORY[0x227673E3C](v91, MEMORY[0x24BEE0D00]);
      v93 = v86;
      v95 = v94;
      swift_bridgeObjectRelease();
      v317 = sub_221921364(v92, v95, (uint64_t *)&v321);
      v289 = (__CFString *)v22;
      v96 = (unint64_t)v316;
      v97 = v315;
      v287 = v89;
      sub_222597134();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 12) = 2080;
      swift_beginAccess();
      v98 = swift_bridgeObjectRetain();
      v99 = MEMORY[0x227673E3C](v98, MEMORY[0x24BEE0D00]);
      v101 = v100;
      swift_bridgeObjectRelease();
      v102 = v99;
      v23 = v296;
      v317 = sub_221921364(v102, v101, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 22) = 2080;
      swift_bridgeObjectRetain();
      v317 = sub_221921364(v306, v97, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v90 + 32) = 2080;
      swift_bridgeObjectRetain();
      v317 = sub_221921364(v313, v93, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v90 + 42) = 2080;
      swift_bridgeObjectRetain();
      v317 = sub_221921364((uint64_t)v298, v96, (uint64_t *)&v321);
      v22 = (uint64_t *)v289;
      sub_222597134();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2218F0000, v87, (os_log_type_t)v287, "ObtainedIP: %s  %s mac: %s name: %s type: %s", (uint8_t *)v90, 0x34u);
      v103 = (uint64_t)v288;
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v103, -1, -1);
      MEMORY[0x227676FE0](v90, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v104 = v290;
    v24 = v304;
    (*(void (**)(char *, char *, uint64_t))(v309 + 16))(v303, v314, v304);
    swift_beginAccess();
    swift_beginAccess();
    sub_2219E7DEC(v23, v293);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_222596780();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v105 = v324;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v105 = sub_221991510(0, *(_QWORD *)(v105 + 16) + 1, 1, v105);
    v21 = v302;
    v106 = (void *)v300;
    v107 = v299;
    v109 = *(_QWORD *)(v105 + 16);
    v108 = *(_QWORD *)(v105 + 24);
    if (v109 >= v108 >> 1)
      v105 = sub_221991510(v108 > 1, v109 + 1, 1, v105);
    *(_QWORD *)(v105 + 16) = v109 + 1;
    (*(void (**)(unint64_t, __CFString *, uint64_t))(v292 + 32))(v105+ ((*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80))+ *(_QWORD *)(v292 + 72) * v109, v104, v295);

    v324 = v105;
    sub_2219E7DAC(v23);
    ((void (*)(char *, uint64_t))v107)(v314, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_56:
    v22 += 6;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  v110 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  NetworkGlobalEntity = SCDynamicStoreKeyCreateNetworkGlobalEntity((CFAllocatorRef)*MEMORY[0x24BDBD240], v307, v294);
  v112 = v311[3];
  v113 = v311[4];
  __swift_project_boxed_opaque_existential_1(v311, v112);
  v114 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v113 + 32);
  v290 = (__CFString *)NetworkGlobalEntity;
  v115 = v114(v312, NetworkGlobalEntity, v112, v113);
  v116 = v115;
  if (*(_QWORD *)(v115 + 16) && (v117 = sub_22198D4E4(0x537972616D697250, 0xEE00656369767265), (v118 & 1) != 0))
  {
    v119 = *(_QWORD *)(*(_QWORD *)(v116 + 56) + 8 * v117);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v319 = v119;
    v120 = swift_dynamicCast();
    v121 = (uint64_t)v321;
    if (!v120)
      v121 = 0;
    v309 = v121;
    if (v120)
      v122 = (uint64_t)v322;
    else
      v122 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v309 = 0;
    v122 = 0;
  }
  swift_bridgeObjectRetain_n();
  v126 = sub_222596B28();
  v127 = sub_222597020();
  v128 = os_log_type_enabled(v126, v127);
  v313 = v122;
  if (v128)
  {
    v129 = (uint8_t *)swift_slowAlloc();
    v130 = swift_slowAlloc();
    v321 = (char *)v130;
    *(_DWORD *)v129 = 136315138;
    if (v122)
      v131 = v309;
    else
      v131 = 7104878;
    if (v122)
      v132 = v122;
    else
      v132 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v319 = sub_221921364(v131, v132, (uint64_t *)&v321);
    v122 = v313;
    sub_222597134();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v126, v127, "primaryServiceName %s", v129, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v130, -1, -1);
    MEMORY[0x227676FE0](v129, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v298 = (CFStringRef)*MEMORY[0x24BDF5990];
  NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v110, v307, v298, v294);
  v137 = v311[3];
  v138 = v311[4];
  __swift_project_boxed_opaque_existential_1(v311, v137);
  v139 = *(uint64_t (**)(id, CFStringRef, uint64_t, uint64_t))(v138 + 40);
  v289 = (__CFString *)NetworkServiceEntity;
  v140 = v139(v312, NetworkServiceEntity, v137, v138);
  swift_bridgeObjectRetain_n();
  v141 = sub_222596B28();
  v142 = sub_222597020();
  v143 = os_log_type_enabled(v141, v142);
  v299 = v110;
  if (v143)
  {
    v144 = (uint8_t *)swift_slowAlloc();
    v145 = swift_slowAlloc();
    v321 = (char *)v145;
    *(_DWORD *)v144 = 136315138;
    type metadata accessor for CFString(0);
    v147 = v146;
    v148 = swift_bridgeObjectRetain();
    v149 = MEMORY[0x227673E3C](v148, v147);
    v151 = v150;
    swift_bridgeObjectRelease();
    v152 = v149;
    v122 = v313;
    v319 = sub_221921364(v152, v151, (uint64_t *)&v321);
    sub_222597134();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2218F0000, v141, v142, "v4ServiceKeys %s", v144, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v145, -1, -1);
    MEMORY[0x227676FE0](v144, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v140 >> 62)
    goto LABEL_203;
  v153 = *(_QWORD *)((v140 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_87:
  if (!v153)
  {
    v308 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_142:
    swift_bridgeObjectRelease();
    v200 = SCDynamicStoreKeyCreateNetworkServiceEntity(v299, v307, v298, v291);
    v201 = v311[3];
    v202 = v311[4];
    __swift_project_boxed_opaque_existential_1(v311, v201);
    v203 = *(uint64_t (**)(id, const __CFString *, uint64_t, uint64_t))(v202 + 40);
    v291 = (__CFString *)v200;
    v204 = v203(v312, v200, v201, v202);
    swift_bridgeObjectRetain_n();
    v205 = sub_222596B28();
    v206 = sub_222597020();
    if (os_log_type_enabled(v205, v206))
    {
      v207 = (uint8_t *)swift_slowAlloc();
      v208 = swift_slowAlloc();
      v321 = (char *)v208;
      *(_DWORD *)v207 = 136315138;
      type metadata accessor for CFString(0);
      v210 = v209;
      v211 = swift_bridgeObjectRetain();
      v212 = MEMORY[0x227673E3C](v211, v210);
      v214 = v213;
      swift_bridgeObjectRelease();
      v319 = sub_221921364(v212, v214, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease_n();
      v122 = v313;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v205, v206, "v6serviceKeys %s", v207, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v208, -1, -1);
      MEMORY[0x227676FE0](v207, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v140 = (unint64_t)v308;
    if (v204 >> 62)
    {
      swift_bridgeObjectRetain();
      v215 = sub_2225973B0();
      swift_bridgeObjectRelease();
      if (v215)
        goto LABEL_147;
    }
    else
    {
      v215 = *(_QWORD *)((v204 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v215)
      {
LABEL_147:
        v216 = 0;
        v217 = v204 & 0xC000000000000001;
        v218 = (_QWORD *)(v204 & 0xFFFFFFFFFFFFFF8);
        v307 = (CFStringRef)(v204 + 32);
        v310 = *MEMORY[0x24BDF5A68];
        v298 = (CFStringRef)*MEMORY[0x24BDF5B30];
        v296 = v140 + 72;
        v305 = MEMORY[0x24BEE4AD0] + 8;
        v294 = (CFStringRef)0x8000000222621BF0;
        v288 = (char *)0x8000000222621C10;
        v300 = v204 & 0xC000000000000001;
        v299 = (const __CFAllocator *)(v204 & 0xFFFFFFFFFFFFFF8);
        v293 = v204;
        v292 = v215;
        do
        {
          if (v217)
          {
            v219 = (char *)MEMORY[0x227674274](v216, v204);
          }
          else
          {
            if (v216 >= v218[2])
              goto LABEL_202;
            v219 = *(&v307->isa + v216);
          }
          v316 = v219;
          if (__OFADD__(v216++, 1))
          {
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            swift_bridgeObjectRetain();
            v153 = sub_2225973B0();
            swift_bridgeObjectRelease();
            goto LABEL_87;
          }
          v221 = v311[3];
          v222 = v311[4];
          __swift_project_boxed_opaque_existential_1(v311, v221);
          v223 = (*(uint64_t (**)(id, char *, uint64_t, uint64_t))(v222 + 32))(v312, v316, v221, v222);
          v224 = sub_222596CF0();
          if (*(_QWORD *)(v223 + 16) && (v226 = sub_22198D4E4(v224, v225), (v227 & 1) != 0))
          {
            v228 = *(_QWORD *)(*(_QWORD *)(v223 + 56) + 8 * v226);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v319 = v228;
            if ((swift_dynamicCast() & 1) != 0)
            {
              v314 = v321;
              v315 = (uint64_t)v322;
              if (v122)
              {
                v321 = (char *)sub_222596CF0();
                v322 = v229;
                v319 = v309;
                v320 = v122;
                sub_2219344B4();
                swift_bridgeObjectRetain();
                sub_22259714C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              if (!*(_QWORD *)(v223 + 16))
              {
                v232 = 0;
                goto LABEL_174;
              }
              v230 = sub_22198D4E4(0xD000000000000010, (uint64_t)v294);
              if ((v231 & 1) != 0)
              {
                v319 = *(_QWORD *)(*(_QWORD *)(v223 + 56) + 8 * v230);
                swift_unknownObjectRetain();
                if (swift_dynamicCast())
                  v232 = v322;
                else
                  v232 = 0;
                if (!*(_QWORD *)(v223 + 16))
                {
LABEL_174:
                  v306 = 0;
                  goto LABEL_175;
                }
              }
              else
              {
                v232 = 0;
                if (!*(_QWORD *)(v223 + 16))
                  goto LABEL_174;
              }
              v233 = sub_22198D4E4(0xD000000000000016, (uint64_t)v288);
              if ((v234 & 1) == 0)
                goto LABEL_174;
              v319 = *(_QWORD *)(*(_QWORD *)(v223 + 56) + 8 * v233);
              swift_unknownObjectRetain();
              v235 = swift_dynamicCast();
              v236 = (uint64_t)v322;
              if (!v235)
                v236 = 0;
              v306 = v236;
LABEL_175:
              v237 = sub_222596CF0();
              if (*(_QWORD *)(v223 + 16) && (v239 = sub_22198D4E4(v237, v238), (v240 & 1) != 0))
              {
                v241 = *(_QWORD *)(*(_QWORD *)(v223 + 56) + 8 * v239);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                v319 = v241;
                v242 = swift_dynamicCast();
                v243 = v322;
                if (!v242)
                  v243 = 0;
                v304 = (uint64_t)v243;
              }
              else
              {
                swift_bridgeObjectRelease();
                v304 = 0;
              }
              v244 = sub_222596CF0();
              v246 = *(_QWORD *)(v223 + 16);
              v302 = (char *)v216;
              if (v246 && (v247 = sub_22198D4E4(v244, v245), (v248 & 1) != 0))
              {
                v249 = *(_QWORD *)(*(_QWORD *)(v223 + 56) + 8 * v247);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v321 = (char *)v249;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573D3C0);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v250 = (char *)v319;
LABEL_187:
                  v303 = v250;
                  v251 = v315;
                  v252 = v314;
                  v253 = *(_QWORD *)(v140 + 16);
                  if (v253)
                  {
                    v301 = v232;
                    v254 = v296;
                    while (1)
                    {
                      v255 = *(_QWORD *)(v254 - 8);
                      v256 = *(char **)(v254 - 32) == v252 && *(_QWORD *)(v254 - 24) == v251;
                      if (v256 || (sub_2225976E0() & 1) != 0)
                        break;
                      v254 += 120;
                      --v253;
                      v251 = v315;
                      v252 = v314;
                      if (!v253)
                      {

                        v122 = v313;
                        v140 = (unint64_t)v308;
                        v204 = v293;
                        v215 = v292;
                        v216 = (unint64_t)v302;
                        goto LABEL_200;
                      }
                    }
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v215 = v292;
                    v216 = (unint64_t)v302;
                    if (v255)
                    {
                      swift_bridgeObjectRelease();
                      v306 = v255;
                    }
                    v122 = v313;
                    v140 = (unint64_t)v308;
                    v204 = v293;
                  }
                  else
                  {

                    v216 = (unint64_t)v302;
                  }
LABEL_200:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v217 = v300;
                  v218 = v299;
                  continue;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              v250 = (char *)MEMORY[0x24BEE4AF8];
              goto LABEL_187;
            }

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
        }
        while (v216 != v215);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v257 = *(_QWORD *)(v140 + 16);
    if (v257)
    {
      v321 = (char *)MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_22191A7C8(0, v257, 0);
      v258 = v321;
      v259 = v140 + 72;
      v260 = v276;
      do
      {
        v315 = v257;
        v316 = v258;
        LODWORD(v314) = *(unsigned __int8 *)(v259 - 40);
        v313 = *(_QWORD *)(v259 - 32);
        v311 = *(_QWORD **)(v259 - 16);
        v310 = *(_QWORD *)(v259 + 24);
        v309 = *(_QWORD *)(v259 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v258 = v316;
        sub_222596870();
        v321 = v258;
        v262 = *((_QWORD *)v258 + 2);
        v261 = *((_QWORD *)v258 + 3);
        if (v262 >= v261 >> 1)
        {
          sub_22191A7C8(v261 > 1, v262 + 1, 1);
          v260 = v276;
          v258 = v321;
        }
        v259 += 120;
        *((_QWORD *)v258 + 2) = v262 + 1;
        (*(void (**)(char *, char *, uint64_t))(v283 + 32))(&v258[((*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80))+ *(_QWORD *)(v283 + 72) * v262], v260, v284);
        v257 = v315 - 1;
      }
      while (v315 != 1);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v258 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v323 = v258;
    v263 = sub_222596B28();
    v264 = sub_222597020();
    if (os_log_type_enabled(v263, v264))
    {
      v265 = swift_slowAlloc();
      v266 = swift_slowAlloc();
      v321 = (char *)v266;
      *(_DWORD *)v265 = 136315394;
      swift_beginAccess();
      v267 = swift_bridgeObjectRetain();
      v268 = MEMORY[0x227673E3C](v267, v295);
      v270 = v269;
      swift_bridgeObjectRelease();
      v318 = sub_221921364(v268, v270, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease();
      *(_WORD *)(v265 + 12) = 2080;
      swift_beginAccess();
      v271 = swift_bridgeObjectRetain();
      v272 = MEMORY[0x227673E3C](v271, v284);
      v274 = v273;
      swift_bridgeObjectRelease();
      v317 = sub_221921364(v272, v274, (uint64_t *)&v321);
      sub_222597134();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2218F0000, v263, v264, "%s %s", (uint8_t *)v265, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x227676FE0](v266, -1, -1);
      MEMORY[0x227676FE0](v265, -1, -1);
    }

    swift_beginAccess();
    return;
  }
  if (v153 >= 1)
  {
    v154 = 0;
    v316 = (char *)(MEMORY[0x24BEE4AD0] + 8);
    v301 = (id)*MEMORY[0x24BDF5AF8];
    v300 = 0x8000000222621BF0;
    v296 = 0x8000000222621C10;
    v308 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      if ((v140 & 0xC000000000000001) != 0)
      {
        v155 = (id)MEMORY[0x227674274](v154, v140);
        if (!v122)
          goto LABEL_97;
      }
      else
      {
        v155 = *(id *)(v140 + 8 * v154 + 32);
        if (!v122)
        {
LABEL_97:
          v157 = 0;
          goto LABEL_98;
        }
      }
      v321 = (char *)sub_222596CF0();
      v322 = v156;
      v319 = v309;
      v320 = v122;
      sub_2219344B4();
      swift_bridgeObjectRetain();
      v157 = sub_22259714C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_98:
      v158 = v311[3];
      v159 = v311[4];
      __swift_project_boxed_opaque_existential_1(v311, v158);
      v160 = (*(uint64_t (**)(id, id, uint64_t, uint64_t))(v159 + 32))(v312, v155, v158, v159);
      v161 = sub_222596CF0();
      if (*(_QWORD *)(v160 + 16))
      {
        v163 = sub_22198D4E4(v161, v162);
        if ((v164 & 1) != 0)
        {
          v165 = *(_QWORD *)(*(_QWORD *)(v160 + 56) + 8 * v163);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          v319 = v165;
          if ((swift_dynamicCast() & 1) == 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_92;
          }
          v315 = (uint64_t)v321;
          v314 = v322;
          if (!*(_QWORD *)(v160 + 16))
          {
            v306 = 0;
            v310 = 0;
            goto LABEL_120;
          }
          v166 = sub_22198D4E4(0xD000000000000010, v300);
          if ((v167 & 1) != 0)
          {
            v319 = *(_QWORD *)(*(_QWORD *)(v160 + 56) + 8 * v166);
            swift_unknownObjectRetain();
            v168 = swift_dynamicCast();
            v169 = (uint64_t)v321;
            if (!v168)
              v169 = 0;
            v310 = v169;
            if (v168)
              v170 = (uint64_t)v322;
            else
              v170 = 0;
            v306 = v170;
            if (!*(_QWORD *)(v160 + 16))
            {
LABEL_120:
              v305 = 0;
              v304 = 0;
              goto LABEL_121;
            }
          }
          else
          {
            v310 = 0;
            v306 = 0;
            if (!*(_QWORD *)(v160 + 16))
              goto LABEL_120;
          }
          v171 = sub_22198D4E4(0xD000000000000016, v296);
          if ((v172 & 1) == 0)
            goto LABEL_120;
          v319 = *(_QWORD *)(*(_QWORD *)(v160 + 56) + 8 * v171);
          swift_unknownObjectRetain();
          v173 = swift_dynamicCast();
          v174 = (uint64_t)v321;
          if (!v173)
            v174 = 0;
          v305 = v174;
          if (v173)
            v175 = v322;
          else
            v175 = 0;
          v304 = (uint64_t)v175;
LABEL_121:
          v176 = sub_222596CF0();
          if (*(_QWORD *)(v160 + 16) && (v178 = sub_22198D4E4(v176, v177), (v179 & 1) != 0))
          {
            v180 = *(_QWORD *)(*(_QWORD *)(v160 + 56) + 8 * v178);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            v319 = v180;
            v181 = swift_dynamicCast();
            v182 = (uint64_t)v321;
            if (!v181)
              v182 = 0;
            v303 = (char *)v182;
            if (v181)
              v183 = v322;
            else
              v183 = 0;
            v302 = v183;
          }
          else
          {
            swift_bridgeObjectRelease();
            v303 = 0;
            v302 = 0;
          }
          v184 = sub_222596CF0();
          if (*(_QWORD *)(v160 + 16) && (v186 = sub_22198D4E4(v184, v185), (v187 & 1) != 0))
          {
            v188 = *(_QWORD *)(*(_QWORD *)(v160 + 56) + 8 * v186);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v321 = (char *)v188;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573D3C0);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v189 = v319;
LABEL_136:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v308 = sub_2219913EC(0, v308[2] + 1, 1, v308);
              v191 = v308[2];
              v190 = v308[3];
              v192 = MEMORY[0x24BEE4AF8];
              if (v191 >= v190 >> 1)
              {
                v199 = sub_2219913EC((_QWORD *)(v190 > 1), v191 + 1, 1, v308);
                v192 = MEMORY[0x24BEE4AF8];
                v308 = v199;
              }
              v193 = v308;
              v308[2] = v191 + 1;
              v194 = &v193[15 * v191];
              *((_BYTE *)v194 + 32) = v157 & 1;
              v195 = v314;
              v194[5] = v315;
              v194[6] = v195;
              v196 = v304;
              v194[7] = v305;
              v194[8] = v196;
              v197 = v303;
              v194[9] = v189;
              v194[10] = v197;
              v198 = v310;
              v194[11] = v302;
              v194[12] = v198;
              v194[13] = v306;
              v194[14] = v192;
              *(_OWORD *)(v194 + 15) = 0u;
              *(_OWORD *)(v194 + 17) = 0u;
              goto LABEL_91;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v189 = MEMORY[0x24BEE4AF8];
          goto LABEL_136;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_91:

LABEL_92:
      v122 = v313;
      if (v153 == ++v154)
        goto LABEL_142;
    }
  }
  __break(1u);
}

unint64_t sub_2219E6CD4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v30;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = (_QWORD *)sub_2225973D4();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v6) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v9 << 6);
      v14 = v9;
    }
    else
    {
      v15 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      if (v15 >= v27)
      {
LABEL_33:
        sub_22193D780();
        return (unint64_t)v4;
      }
      v16 = *(_QWORD *)(v28 + 8 * v15);
      v14 = v9 + 1;
      if (!v16)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= v27)
          goto LABEL_33;
        v16 = *(_QWORD *)(v28 + 8 * v14);
        if (!v16)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= v27)
            goto LABEL_33;
          v16 = *(_QWORD *)(v28 + 8 * v14);
          if (!v16)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= v27)
              goto LABEL_33;
            v16 = *(_QWORD *)(v28 + 8 * v14);
            if (!v16)
            {
              v17 = v9 + 5;
              if (v9 + 5 >= v27)
                goto LABEL_33;
              v16 = *(_QWORD *)(v28 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v14 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_38;
                  if (v14 >= v27)
                    goto LABEL_33;
                  v16 = *(_QWORD *)(v28 + 8 * v14);
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v14 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v12 = (v16 - 1) & v16;
      v13 = __clz(__rbit64(v16)) + (v14 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22193D780();
      swift_release();
      return 0;
    }
    result = sub_22198D4E4(v20, v19);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v10 = (uint64_t *)(v4[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v10 = v20;
      v10[1] = v19;
      v11 = v4[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v11 + 8 * v21) = v30;
      goto LABEL_8;
    }
    if (v4[2] >= v4[3])
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v4[6] + 16 * result);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(v4[7] + 8 * result) = v30;
    v24 = v4[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_36;
    v4[2] = v26;
LABEL_8:
    v9 = v14;
    v7 = v12;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t NetworkInfoController.obtainNetworkInfoProto()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v0 = sub_222596888();
  v37 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2225967A4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2219E4568();
  v9 = MEMORY[0x24BEE4AF8];
  v38 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(v7 + 16);
  v35 = v8;
  if (v10)
  {
    v33 = v7;
    v34 = v0;
    v11 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v36 = *(_QWORD *)(v4 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v12(v6, v11, v3);
      v13 = sub_2219E3830();
      v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v13)
      {
        MEMORY[0x227673E0C](v14);
        if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_222596E64();
        sub_222596E88();
        sub_222596E58();
      }
      v11 += v36;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v15 = v38;
    v9 = MEMORY[0x24BEE4AF8];
    v0 = v34;
    v16 = v35;
  }
  else
  {
    v16 = v8;
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v38 = v9;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v19 = *(_QWORD *)(v37 + 72);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v20(v2, v18, v0);
      v21 = sub_2219E3D14();
      v22 = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v2, v0);
      if (v21)
      {
        MEMORY[0x227673E0C](v22);
        if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_222596E64();
        sub_222596E88();
        sub_222596E58();
      }
      v18 += v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v9 = v38;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741660);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_222688C00;
  *(_QWORD *)(inited + 32) = 0x496B726F7774654ELL;
  *(_QWORD *)(inited + 40) = 0xEB000000006F666ELL;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_2225973A4();
    swift_bridgeObjectRelease_n();
    v15 = v31;
  }
  else
  {
    v24 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_22259771C();
    if (swift_dynamicCastMetatype() || (v27 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_20:
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = (_QWORD *)(v24 + 32);
      while (*v28)
      {
        ++v28;
        if (!--v27)
          goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      v15 = v24 | 1;
    }
  }
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x8000000222621B70;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_2225973A4();
    swift_bridgeObjectRelease_n();
    v9 = v32;
  }
  else
  {
    v25 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_22259771C();
    if (swift_dynamicCastMetatype() || (v29 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_23:
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = (_QWORD *)(v25 + 32);
      while (*v30)
      {
        ++v30;
        if (!--v29)
          goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      v9 = v25 | 1;
    }
  }
  *(_QWORD *)(inited + 72) = v9;
  return sub_221902C24(inited);
}

id sub_2219E7488(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  char *v8;
  id v9;
  objc_super v11;
  uint64_t v12[5];

  v12[3] = a3;
  v12[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_222596CF0();
  v8 = a2;
  sub_222596B34();
  *(_QWORD *)&v8[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_22191658C((uint64_t)v12, (uint64_t)&v8[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for NetworkInfoController();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v9;
}

void sub_2219E7580()
{
  CFArrayRef v0;

  v0 = SCNetworkInterfaceCopyAll();
  type metadata accessor for SCNetworkInterface(0);
  sub_222596E34();

}

unint64_t sub_2219E77F4(const __SCDynamicStore *a1, const __CFString *a2)
{
  CFPropertyListRef v2;
  const void *v3;
  CFTypeID TypeID;
  unint64_t v5;
  uint64_t v7;

  v2 = SCDynamicStoreCopyValue(a1, a2);
  if (!v2)
    return sub_2219022C4(MEMORY[0x24BEE4AF8]);
  v3 = v2;
  TypeID = CFDictionaryGetTypeID();
  if (TypeID == CFGetTypeID(v3)
    && (swift_unknownObjectRetain(),
        __swift_instantiateConcreteTypeFromMangledName(&qword_255741768),
        swift_dynamicCast()))
  {
    swift_unknownObjectRelease();
    return v7;
  }
  else
  {
    v5 = sub_2219022C4(MEMORY[0x24BEE4AF8]);
    swift_unknownObjectRelease();
  }
  return v5;
}

id sub_2219E78B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone((Class)type metadata accessor for NetworkInfoController());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_2219E7488((uint64_t)v9, v10, a3, a4);
}

uint64_t type metadata accessor for NetworkInfoSCDataSource()
{
  return objc_opt_self();
}

id sub_2219E7974(uint64_t a1)
{
  objc_class *v2;
  id v3;
  char *v4;
  id v5;
  objc_super v7;
  _QWORD v8[5];

  v2 = (objc_class *)type metadata accessor for NetworkInfoController();
  v3 = objc_allocWithZone(v2);
  v8[3] = type metadata accessor for NetworkInfoSCDataSource();
  v8[4] = &off_24E76D260;
  v8[0] = a1;
  sub_222596CF0();
  swift_retain();
  v4 = (char *)v3;
  sub_222596B34();
  *(_QWORD *)&v4[OBJC_IVAR___HMDNetworkInfoController_store] = 0;
  sub_22191658C((uint64_t)v8, (uint64_t)&v4[OBJC_IVAR___HMDNetworkInfoController_dataSource]);

  v7.receiver = v4;
  v7.super_class = v2;
  v5 = objc_msgSendSuper2(&v7, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t type metadata accessor for NetworkInfoController()
{
  uint64_t result;

  result = qword_255741758;
  if (!qword_255741758)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for InterfaceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for InterfaceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InterfaceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InterfaceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InterfaceInfo()
{
  return &type metadata for InterfaceInfo;
}

uint64_t sub_2219E7CBC()
{
  return type metadata accessor for NetworkInfoController();
}

uint64_t sub_2219E7CC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_222596B40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2219E7D44()
{
  sub_2219E4568();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_2219E7D70()
{
  unint64_t result;

  result = qword_255741778;
  if (!qword_255741778)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255741778);
  }
  return result;
}

uint64_t sub_2219E7DAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2219E7DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2219E7E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for NetworkInfoController.PartialNetworkServiceInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkInfoController.PartialNetworkServiceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfoController.PartialNetworkServiceInfo()
{
  return &type metadata for NetworkInfoController.PartialNetworkServiceInfo;
}

uint64_t sub_2219E8238()
{
  uint64_t v0;

  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtCOO13HomeKitDaemon16DeviceMediaState16FrameworkAdapter24MediaRemotePlaybackState_notificationTask))
  {
    swift_retain();
    sub_222596F48();
    swift_release();
  }
  MRMediaRemoteSetWantsNowPlayingNotifications();
  sub_221949590(v0 + OBJC_IVAR____TtCOO13HomeKitDaemon16DeviceMediaState16FrameworkAdapter24MediaRemotePlaybackState_updateStream);
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCOO13HomeKitDaemon16DeviceMediaState16FrameworkAdapter24MediaRemotePlaybackState_notificationCenter));
  return swift_deallocClassInstance();
}

uint64_t sub_2219E82D8()
{
  return _s24MediaRemotePlaybackStateCMa();
}

uint64_t _s24MediaRemotePlaybackStateCMa()
{
  uint64_t result;

  result = qword_2557417C0;
  if (!qword_2557417C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2219E831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  sub_2219494A4(319, a2, a3, a4);
  if (v4 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_2219E83A0()
{
  return 0xD00000000000003ALL;
}

uint64_t HMAccessorySleepWakeState.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x656B617741;
  v2 = 0x746C7561666564;
  if (a1 == 1)
    v2 = 0x7065656C53;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x6E776F6E6B6E55;
}

uint64_t sub_2219E842C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 0x656B617741;
  v3 = 0x746C7561666564;
  if (*v0 == 1)
    v3 = 0x7065656C53;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x6E776F6E6B6E55;
}

uint64_t sub_2219E84A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2219E84CC()
{
  sub_2219E8B84();
  return sub_2225979BC();
}

uint64_t sub_2219E84F4()
{
  sub_2219E8B84();
  return sub_2225979C8();
}

uint64_t sub_2219E851C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x615065766F6D6572;
  if (*v0 != 1)
    v1 = 1953719668;
  if (*v0)
    return v1;
  else
    return 0x73736150646461;
}

uint64_t sub_2219E8578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2219EA5CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219E859C()
{
  sub_2219E8A30();
  return sub_2225979BC();
}

uint64_t sub_2219E85C4()
{
  sub_2219E8A30();
  return sub_2225979C8();
}

uint64_t sub_2219E85F4()
{
  return 12383;
}

uint64_t sub_2219E8604()
{
  sub_2219E8AFC();
  return sub_2225979BC();
}

uint64_t sub_2219E862C()
{
  sub_2219E8AFC();
  return sub_2225979C8();
}

uint64_t sub_2219E8654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2225976E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2219E86D0()
{
  sub_2219E8A74();
  return sub_2225979BC();
}

uint64_t sub_2219E86F8()
{
  sub_2219E8A74();
  return sub_2225979C8();
}

uint64_t HomeUtilPassCommand.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a5;
  v25 = a4;
  v29 = a2;
  v30 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741858);
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741860);
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741868);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741870);
  v32 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E8A30();
  sub_222597974();
  if (!(_BYTE)v31)
  {
    LOBYTE(v33) = 1;
    sub_2219E8AFC();
    sub_2225974A0();
    LOBYTE(v33) = v29 & 1;
    v34 = v30;
    v35 = v25;
    sub_2219E8B40();
    v20 = v24;
    sub_222597500();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v15);
  }
  if (v31 == 1)
  {
    LOBYTE(v33) = 2;
    sub_2219E8A74();
    v18 = v26;
    sub_2225974A0();
    v33 = v29;
    v34 = v30;
    sub_2219E8AB8();
    v19 = v28;
    sub_222597500();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v15);
  }
  LOBYTE(v33) = 0;
  sub_2219E8B84();
  sub_2225974A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v15);
}

unint64_t sub_2219E8A30()
{
  unint64_t result;

  result = qword_255741878;
  if (!qword_255741878)
  {
    result = MEMORY[0x227676F2C](&unk_222690110, &type metadata for HomeUtilPassCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741878);
  }
  return result;
}

unint64_t sub_2219E8A74()
{
  unint64_t result;

  result = qword_255741880;
  if (!qword_255741880)
  {
    result = MEMORY[0x227676F2C](&unk_2226900C0, &type metadata for HomeUtilPassCommand.TestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741880);
  }
  return result;
}

unint64_t sub_2219E8AB8()
{
  unint64_t result;

  result = qword_255741888;
  if (!qword_255741888)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for TestCommand, &type metadata for TestCommand);
    atomic_store(result, (unint64_t *)&qword_255741888);
  }
  return result;
}

unint64_t sub_2219E8AFC()
{
  unint64_t result;

  result = qword_255741890;
  if (!qword_255741890)
  {
    result = MEMORY[0x227676F2C](&unk_222690070, &type metadata for HomeUtilPassCommand.RemovePassesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741890);
  }
  return result;
}

unint64_t sub_2219E8B40()
{
  unint64_t result;

  result = qword_255741898;
  if (!qword_255741898)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for RemovePassesCommand, &type metadata for RemovePassesCommand);
    atomic_store(result, (unint64_t *)&qword_255741898);
  }
  return result;
}

unint64_t sub_2219E8B84()
{
  unint64_t result;

  result = qword_2557418A0;
  if (!qword_2557418A0)
  {
    result = MEMORY[0x227676F2C](&unk_222690020, &type metadata for HomeUtilPassCommand.AddPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418A0);
  }
  return result;
}

uint64_t HomeUtilPassCommand.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_2219E9384(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_2219E8BEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_2219E9384(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_2219E8C1C(_QWORD *a1)
{
  uint64_t v1;

  return HomeUtilPassCommand.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_2219E8C3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D614E656D6F68;
  else
    return 7105633;
}

uint64_t sub_2219E8C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2219EA728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2219E8C94()
{
  sub_2219E9864();
  return sub_2225979BC();
}

uint64_t sub_2219E8CBC()
{
  sub_2219E9864();
  return sub_2225979C8();
}

uint64_t RemovePassesCommand.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557418A8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E9864();
  sub_222597974();
  v13 = 0;
  sub_2225974DC();
  if (!v4)
  {
    v12 = 1;
    sub_2225974AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t RemovePassesCommand.init(from:)(_QWORD *a1)
{
  return sub_2219E98A8(a1) & 1;
}

uint64_t sub_2219E8E30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_2219E98A8(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_2219E8E60(_QWORD *a1)
{
  unsigned __int8 *v1;

  return RemovePassesCommand.encode(to:)(a1, *v1, *((_QWORD *)v1 + 1), *((_QWORD *)v1 + 2));
}

uint64_t sub_2219E8E7C()
{
  return 0x656D614E74736574;
}

uint64_t sub_2219E8E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D614E74736574 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2225976E0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2219E8F28()
{
  sub_2219E99FC();
  return sub_2225979BC();
}

uint64_t sub_2219E8F50()
{
  sub_2219E99FC();
  return sub_2225979C8();
}

uint64_t TestCommand.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557418B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E99FC();
  sub_222597974();
  sub_2225974AC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t TestCommand.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557418C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E99FC();
  sub_222597968();
  if (!v1)
  {
    v7 = sub_22259741C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_2219E9174@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557418C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E99FC();
  sub_222597968();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_22259741C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_2219E9298(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2557418B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2219E99FC();
  sub_222597974();
  sub_2225974AC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2219E9384(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741960);
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741968);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741970);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741978);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2219E8A30();
  v13 = v34;
  sub_222597968();
  if (!v13)
  {
    v25 = v4;
    v15 = v30;
    v14 = v31;
    v34 = v9;
    v16 = sub_22259747C();
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      if (*(_BYTE *)(v16 + 32))
      {
        if (*(_BYTE *)(v16 + 32) == 1)
        {
          LOBYTE(v33) = 1;
          sub_2219E8AFC();
          sub_222597404();
          sub_2219EA84C();
          v17 = v26;
          sub_222597470();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v17);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v11, v8);
          v11 = v33;
        }
        else
        {
          LOBYTE(v33) = 2;
          sub_2219E8A74();
          sub_222597404();
          sub_2219EA808();
          v21 = v27;
          sub_222597470();
          v22 = v34;
          (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v21);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v8);
          v11 = v33;
        }
      }
      else
      {
        LOBYTE(v33) = 0;
        sub_2219E8B84();
        sub_222597404();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v25);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v11, v8);
        v11 = 0;
      }
    }
    else
    {
      v18 = v11;
      v11 = sub_2225972A8();
      swift_allocError();
      v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25573BC88);
      *v20 = &type metadata for HomeUtilPassCommand;
      sub_222597410();
      sub_22259729C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v11);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v18, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v11;
}

unint64_t sub_2219E9864()
{
  unint64_t result;

  result = qword_2557418B0;
  if (!qword_2557418B0)
  {
    result = MEMORY[0x227676F2C](&unk_22268FFD0, &type metadata for RemovePassesCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418B0);
  }
  return result;
}

uint64_t sub_2219E98A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741958);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_2219E9864();
  sub_222597968();
  if (!v1)
  {
    v9[15] = 0;
    LOBYTE(v7) = sub_22259744C();
    v9[14] = 1;
    sub_22259741C();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 1;
}

unint64_t sub_2219E99FC()
{
  unint64_t result;

  result = qword_2557418C0;
  if (!qword_2557418C0)
  {
    result = MEMORY[0x227676F2C](&unk_22268FF80, &type metadata for TestCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418C0);
  }
  return result;
}

uint64_t sub_2219E9A40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for HomeUtilPassCommand(uint64_t a1)
{
  return sub_2219CAD84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for HomeUtilPassCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2219E9A40(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for HomeUtilPassCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2219E9A40(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_2219CAD84(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for HomeUtilPassCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2219CAD84(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeUtilPassCommand(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeUtilPassCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2219E9C18(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2219E9C30(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomeUtilPassCommand()
{
  return &type metadata for HomeUtilPassCommand;
}

uint64_t destroy for RemovePassesCommand()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeKitDaemon19RemovePassesCommandVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemovePassesCommand(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemovePassesCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemovePassesCommand(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RemovePassesCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemovePassesCommand()
{
  return &type metadata for RemovePassesCommand;
}

uint64_t getEnumTagSinglePayload for TestCommand(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TestCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TestCommand()
{
  return &type metadata for TestCommand;
}

ValueMetadata *type metadata accessor for TestCommand.CodingKeys()
{
  return &type metadata for TestCommand.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RemovePassesCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2219E9EFC + 4 * byte_22268F9F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2219E9F30 + 4 * byte_22268F9F0[v4]))();
}

uint64_t sub_2219E9F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E9F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219E9F40);
  return result;
}

uint64_t sub_2219E9F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219E9F54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2219E9F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219E9F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemovePassesCommand.CodingKeys()
{
  return &type metadata for RemovePassesCommand.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for HomeUtilPassCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2219E9FC8 + 4 * byte_22268F9FF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2219E9FFC + 4 * byte_22268F9FA[v4]))();
}

uint64_t sub_2219E9FFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219EA004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2219EA00CLL);
  return result;
}

uint64_t sub_2219EA018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2219EA020);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2219EA024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2219EA02C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeUtilPassCommand.CodingKeys()
{
  return &type metadata for HomeUtilPassCommand.CodingKeys;
}

ValueMetadata *type metadata accessor for HomeUtilPassCommand.AddPassCodingKeys()
{
  return &type metadata for HomeUtilPassCommand.AddPassCodingKeys;
}

ValueMetadata *type metadata accessor for HomeUtilPassCommand.RemovePassesCodingKeys()
{
  return &type metadata for HomeUtilPassCommand.RemovePassesCodingKeys;
}

uint64_t _s13HomeKitDaemon11TestCommandV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2219EA0A8 + 4 * byte_22268FA04[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2219EA0C8 + 4 * byte_22268FA09[v4]))();
}

_BYTE *sub_2219EA0A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2219EA0C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2219EA0D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2219EA0D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2219EA0E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2219EA0E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HomeUtilPassCommand.TestCodingKeys()
{
  return &type metadata for HomeUtilPassCommand.TestCodingKeys;
}

unint64_t sub_2219EA108()
{
  unint64_t result;

  result = qword_2557418D0;
  if (!qword_2557418D0)
  {
    result = MEMORY[0x227676F2C](&unk_22268FC28, &type metadata for HomeUtilPassCommand.TestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418D0);
  }
  return result;
}

unint64_t sub_2219EA150()
{
  unint64_t result;

  result = qword_2557418D8;
  if (!qword_2557418D8)
  {
    result = MEMORY[0x227676F2C](&unk_22268FCE0, &type metadata for HomeUtilPassCommand.RemovePassesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418D8);
  }
  return result;
}

unint64_t sub_2219EA198()
{
  unint64_t result;

  result = qword_2557418E0;
  if (!qword_2557418E0)
  {
    result = MEMORY[0x227676F2C](&unk_22268FDE8, &type metadata for HomeUtilPassCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418E0);
  }
  return result;
}

unint64_t sub_2219EA1E0()
{
  unint64_t result;

  result = qword_2557418E8;
  if (!qword_2557418E8)
  {
    result = MEMORY[0x227676F2C](&unk_22268FEA0, &type metadata for RemovePassesCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418E8);
  }
  return result;
}

unint64_t sub_2219EA228()
{
  unint64_t result;

  result = qword_2557418F0;
  if (!qword_2557418F0)
  {
    result = MEMORY[0x227676F2C](&unk_22268FF58, &type metadata for TestCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418F0);
  }
  return result;
}

unint64_t sub_2219EA270()
{
  unint64_t result;

  result = qword_2557418F8;
  if (!qword_2557418F8)
  {
    result = MEMORY[0x227676F2C](&unk_22268FEC8, &type metadata for TestCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2557418F8);
  }
  return result;
}

unint64_t sub_2219EA2B8()
{
  unint64_t result;

  result = qword_255741900;
  if (!qword_255741900)
  {
    result = MEMORY[0x227676F2C](&unk_22268FEF0, &type metadata for TestCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741900);
  }
  return result;
}

unint64_t sub_2219EA300()
{
  unint64_t result;

  result = qword_255741908;
  if (!qword_255741908)
  {
    result = MEMORY[0x227676F2C](&unk_22268FE10, &type metadata for RemovePassesCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741908);
  }
  return result;
}

unint64_t sub_2219EA348()
{
  unint64_t result;

  result = qword_255741910;
  if (!qword_255741910)
  {
    result = MEMORY[0x227676F2C](&unk_22268FE38, &type metadata for RemovePassesCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741910);
  }
  return result;
}

unint64_t sub_2219EA390()
{
  unint64_t result;

  result = qword_255741918;
  if (!qword_255741918)
  {
    result = MEMORY[0x227676F2C](&unk_22268FD08, &type metadata for HomeUtilPassCommand.AddPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741918);
  }
  return result;
}

unint64_t sub_2219EA3D8()
{
  unint64_t result;

  result = qword_255741920;
  if (!qword_255741920)
  {
    result = MEMORY[0x227676F2C](&unk_22268FD30, &type metadata for HomeUtilPassCommand.AddPassCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741920);
  }
  return result;
}

unint64_t sub_2219EA420()
{
  unint64_t result;

  result = qword_255741928;
  if (!qword_255741928)
  {
    result = MEMORY[0x227676F2C](&unk_22268FC50, &type metadata for HomeUtilPassCommand.RemovePassesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741928);
  }
  return result;
}

unint64_t sub_2219EA468()
{
  unint64_t result;

  result = qword_255741930;
  if (!qword_255741930)
  {
    result = MEMORY[0x227676F2C](&unk_22268FC78, &type metadata for HomeUtilPassCommand.RemovePassesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741930);
  }
  return result;
}

unint64_t sub_2219EA4B0()
{
  unint64_t result;

  result = qword_255741938;
  if (!qword_255741938)
  {
    result = MEMORY[0x227676F2C](&unk_22268FB98, &type metadata for HomeUtilPassCommand.TestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741938);
  }
  return result;
}

unint64_t sub_2219EA4F8()
{
  unint64_t result;

  result = qword_255741940;
  if (!qword_255741940)
  {
    result = MEMORY[0x227676F2C](&unk_22268FBC0, &type metadata for HomeUtilPassCommand.TestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741940);
  }
  return result;
}

unint64_t sub_2219EA540()
{
  unint64_t result;

  result = qword_255741948;
  if (!qword_255741948)
  {
    result = MEMORY[0x227676F2C](&unk_22268FD58, &type metadata for HomeUtilPassCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741948);
  }
  return result;
}

unint64_t sub_2219EA588()
{
  unint64_t result;

  result = qword_255741950;
  if (!qword_255741950)
  {
    result = MEMORY[0x227676F2C](&unk_22268FD80, &type metadata for HomeUtilPassCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255741950);
  }
  return result;
}

uint64_t sub_2219EA5CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736150646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615065766F6D6572 && a2 == 0xEC00000073657373 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953719668 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2219EA728(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_2225976E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E656D6F68 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2219EA808()
{
  unint64_t result;

  result = qword_255741980;
  if (!qword_255741980)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for TestCommand, &type metadata for TestCommand);
    atomic_store(result, (unint64_t *)&qword_255741980);
  }
  return result;
}

unint64_t sub_2219EA84C()
{
  unint64_t result;

  result = qword_255741988;
  if (!qword_255741988)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for RemovePassesCommand, &type metadata for RemovePassesCommand);
    atomic_store(result, (unint64_t *)&qword_255741988);
  }
  return result;
}

id Account.__deallocating_deinit()
{
  return sub_2219EB504(type metadata accessor for Account);
}

uint64_t type metadata accessor for Account()
{
  return objc_opt_self();
}

uint64_t Account.ChangeObserver.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
  swift_beginAccess();
  return MEMORY[0x227677094](v1);
}

uint64_t Account.ChangeObserver.delegate.setter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  _QWORD aBlock[6];

  v1 = &v0[OBJC_IVAR___HMDAccountChangeObserver_delegate];
  swift_beginAccess();
  v2 = MEMORY[0x227677094](v1);
  swift_unknownObjectWeakAssign();
  if (v2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    v3 = *(void **)&v0[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v0;
    aBlock[4] = sub_2219EAB14;
    aBlock[5] = v4;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2219EAB34;
    aBlock[3] = &block_descriptor_14;
    v5 = _Block_copy(aBlock);
    v6 = v0;
    swift_release();
    objc_msgSend(v3, sel_registerAccountChangeEventHandler_, v5);
    _Block_release(v5);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_2219EAAF0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2219EAB14(void *a1, int a2)
{
  sub_2219EAF9C(a1, a2);
}

void sub_2219EAB34(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(void *, uint64_t);
  id v6;

  v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a2, a3);
  swift_release();

}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

void (*Account.ChangeObserver.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___HMDAccountChangeObserver_delegate;
  v3[10] = v1;
  v3[11] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[9] = MEMORY[0x227677094](v5);
  return sub_2219EAC1C;
}

void sub_2219EAC1C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;

  v3 = *(_QWORD **)a1;
  v4 = MEMORY[0x227677094](*(_QWORD *)(*(_QWORD *)a1 + 80) + *(_QWORD *)(*(_QWORD *)a1 + 88));
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    if (!v4)
    {
      v5 = (char *)v3[10];
      v6 = *(void **)&v5[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      v3[4] = sub_2219EB5A0;
      v3[5] = v7;
      *v3 = MEMORY[0x24BDAC760];
      v3[1] = 1107296256;
      v3[2] = sub_2219EAB34;
      v3[3] = &block_descriptor_7_0;
      v8 = _Block_copy(v3);
      v9 = v5;
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v6, sel_registerAccountChangeEventHandler_, v8);
      _Block_release(v8);
    }
  }
  else if (!v4)
  {
    v10 = (char *)v3[10];
    v11 = *(void **)&v10[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber];
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v10;
    v3[4] = sub_2219EB5A0;
    v3[5] = v12;
    *v3 = MEMORY[0x24BDAC760];
    v3[1] = 1107296256;
    v3[2] = sub_2219EAB34;
    v3[3] = &block_descriptor_14_0;
    v13 = _Block_copy(v3);
    v14 = v10;
    swift_release();
    objc_msgSend(v11, sel_registerAccountChangeEventHandler_, v13);
    _Block_release(v13);
    goto LABEL_8;
  }
  swift_unknownObjectRelease();
LABEL_8:
  swift_unknownObjectRelease();
  free(v3);
}

id Account.ChangeObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Account.ChangeObserver.init()()
{
  id v0;
  objc_class *v1;
  char *v2;
  id v3;
  objc_super v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedSubscriber);
  v1 = (objc_class *)type metadata accessor for Account.ChangeObserver();
  v2 = (char *)objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR___HMDAccountChangeObserver_eventSubscriber] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for Account.ChangeObserver()
{
  return objc_opt_self();
}

void sub_2219EAF9C(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  NSObject *v32;
  NSObject *v33;
  _QWORD *v34;
  uint8_t *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint8_t *v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  uint64_t v43;

  v3 = v2;
  v43 = *MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v7 = sub_222596B40();
  v8 = *(NSObject **)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v38 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v38 - v15;
  if (a1)
  {
    v17 = *MEMORY[0x24BE047F0];
    v41 = a1;
    if (-[NSObject aa_isAccountClass:](v41, sel_aa_isAccountClass_, v17))
    {
      switch(a2)
      {
        case 1:
        case 2:
        case 4:
        case 5:

          break;
        case 3:
          sub_2219950CC(ObjectType, (uint64_t)&off_24E76D9D0);
          v28 = v41;
          v29 = sub_222596B28();
          v30 = sub_222597038();
          if (os_log_type_enabled(v29, v30))
          {
            v31 = (uint8_t *)swift_slowAlloc();
            v38 = (_QWORD *)swift_slowAlloc();
            v41 = v8;
            v42 = v28;
            v39 = v31;
            *(_DWORD *)v31 = 138412290;
            v32 = v28;
            v40 = v28;
            v33 = v32;
            v8 = v41;
            sub_222597134();
            v34 = v38;
            *v38 = a1;

            v35 = v39;
            v28 = v40;
            _os_log_impl(&dword_2218F0000, v29, v30, "Account removed %@", v39, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
            swift_arrayDestroy();
            MEMORY[0x227676FE0](v34, -1, -1);
            MEMORY[0x227676FE0](v35, -1, -1);
          }
          else
          {

            v29 = v28;
          }

          ((void (*)(char *, uint64_t))v8[1].isa)(v16, v7);
          v36 = v3 + OBJC_IVAR___HMDAccountChangeObserver_delegate;
          swift_beginAccess();
          v37 = (void *)MEMORY[0x227677094](v36);
          if (v37)
          {
            objc_msgSend(v37, sel_accountChangeObserver_observedDeletedAccount_, v3, v28);
            swift_unknownObjectRelease();
          }

          break;
        default:
          sub_2219950CC(ObjectType, (uint64_t)&off_24E76D9D0);
          v24 = sub_222596B28();
          v25 = sub_222597038();
          if (os_log_type_enabled(v24, v25))
          {
            v26 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v26 = 67109120;
            LODWORD(v42) = a2;
            sub_222597134();
            _os_log_impl(&dword_2218F0000, v24, v25, "Unexpected, unhandled account change case: %u", v26, 8u);
            MEMORY[0x227676FE0](v26, -1, -1);
            v27 = v41;
          }
          else
          {
            v27 = v24;
            v24 = v41;
          }

          ((void (*)(char *, uint64_t))v8[1].isa)(v14, v7);
          break;
      }
      return;
    }

  }
  sub_2219950CC(ObjectType, (uint64_t)&off_24E76D9D0);
  v18 = a1;
  v19 = sub_222596B28();
  v20 = sub_22259702C();
  if (os_log_type_enabled(v19, v20))
  {
    v40 = v7;
    v41 = v8;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    if (a1)
    {
      v42 = v18;
      v23 = v18;
    }
    else
    {
      v42 = 0;
    }
    sub_222597134();
    v8 = v41;
    *v22 = a1;

    _os_log_impl(&dword_2218F0000, v19, v20, "Ignoring change for non-primary account %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573EC50);
    swift_arrayDestroy();
    MEMORY[0x227676FE0](v22, -1, -1);
    MEMORY[0x227676FE0](v21, -1, -1);
    v7 = (uint64_t)v40;
  }
  else
  {

    v19 = v18;
  }

  ((void (*)(char *, uint64_t))v8[1].isa)(v11, v7);
}

id Account.ChangeObserver.__deallocating_deinit()
{
  return sub_2219EB504(type metadata accessor for Account.ChangeObserver);
}

id sub_2219EB504(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_2219EB56C()
{
  return 0xD000000000000018;
}

uint64_t sub_2219EB5A4()
{
  uint64_t v0;

  sub_221949590(v0 + OBJC_IVAR____TtCOO13HomeKitDaemon16DeviceMediaState16FrameworkAdapter9PineBoard_updateStream);
  return swift_deallocClassInstance();
}

uint64_t sub_2219EB5D4()
{
  return _s9PineBoardCMa();
}

uint64_t _s9PineBoardCMa()
{
  uint64_t result;

  result = qword_255741A18;
  if (!qword_255741A18)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2219EB618()
{
  return 0xD00000000000002BLL;
}

ValueMetadata *type metadata accessor for DefaultMobileAssetManagerDataSource()
{
  return &type metadata for DefaultMobileAssetManagerDataSource;
}

id sub_2219EB644(unint64_t a1, __int16 a2)
{
  unint64_t v3;
  void *ObjCClassFromMetadata;
  void *v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
      return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_accessGrantForAllNodesWithPrivilege_, a1);
    v3 = a1 >> 24;
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v5 = (void *)sub_222597944();
    v6 = objc_msgSend(ObjCClassFromMetadata, sel_accessGrantForGroupID_privilege_, v5, v3);
  }
  else
  {
    v7 = a2;
    v8 = HIBYTE(a2);
    v9 = (void *)swift_getObjCClassFromMetadata();
    sub_2219745EC(a1, v7);
    v5 = (void *)sub_22259795C();
    v6 = objc_msgSend(v9, sel_accessGrantForNodeID_privilege_, v5, v8);
  }
  v10 = v6;

  if (v10)
  return v10;
}

uint64_t _s21AppleMediaAccessoriesCMa()
{
  return objc_opt_self();
}

id sub_2219EB774(void *a1)
{
  id result;
  void *v2;
  id v3;
  id v4;

  result = objc_msgSend(a1, sel_homeManager);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_capabilitiesController);

    if (v3)
    {
      v4 = objc_msgSend(v3, sel_currentResidentCapabilities);

      if (v4)
      {
        v3 = objc_msgSend(v4, sel_supportsDistributedExecutionOnAppleMediaAccessories);
        swift_unknownObjectRelease();
      }
      else
      {
        return 0;
      }
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_2219EB818()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_attributes);
  if (!v1)
    return sub_221902508(MEMORY[0x24BEE4AF8]);
  v2 = v1;
  v3 = sub_222596C6C();

  return v3;
}

id sub_2219EB890()
{
  id *v0;

  return objc_msgSend(*v0, sel_wasDownloadable);
}

id sub_2219EB8B0()
{
  id *v0;

  return objc_msgSend(*v0, sel_wasPurgeable);
}

uint64_t sub_2219EB8D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_2219EB8EC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(id *)(v0 + 136);
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_2219EB994;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_221947048;
  v4[3] = &block_descriptor_1_1;
  v4[4] = v3;
  objc_msgSend(v2, sel_startDownload_then_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_2219EB994()
{
  return swift_task_switch();
}

uint64_t sub_2219EB9E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2219EBA18()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_2219EBAAC;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_221944BF4;
  v4[3] = &block_descriptor_15;
  v4[4] = v3;
  objc_msgSend(v2, sel_purge_, v4);
  return swift_continuation_await();
}

uint64_t sub_2219EBAAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 8))(*(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t HMMediaRepeatState.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 6710863;
      break;
    case 2:
      result = 6647375;
      break;
    case 3:
      result = 7105601;
      break;
    default:
      result = 0x746C7561666564;
      break;
  }
  return result;
}

uint64_t sub_2219EBB6C()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 6710863;
      break;
    case 2:
      result = 6647375;
      break;
    case 3:
      result = 7105601;
      break;
    default:
      result = 0x746C7561666564;
      break;
  }
  return result;
}

uint64_t sub_2219EBBE8(void *a1, uint64_t a2)
{
  return sub_2219EBFF8(a1, a2, (unint64_t *)&qword_25573FFF0);
}

uint64_t sub_2219EBBFC(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;

  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    v3 = sub_222597200();
    swift_release();
    return v3 & 1;
  }
  else
  {
    if (*(_QWORD *)(a2 + 16)
      && (__swift_instantiateConcreteTypeFromMangledName(&qword_255740000),
          v5 = sub_222596C90(),
          v6 = -1 << *(_BYTE *)(a2 + 32),
          v7 = v5 & ~v6,
          ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
    {
      v8 = ~v6;
      do
      {
        v9 = sub_222596CCC();
        if ((v9 & 1) != 0)
          break;
        v7 = (v7 + 1) & v8;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    else
    {
      v9 = 0;
    }
    return v9 & 1;
  }
}

uint64_t sub_2219EBD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_2225978F0();
    sub_222596D38();
    v6 = sub_222597938();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2225976E0() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2225976E0() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2219EBE60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_222596678();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_2219018CC((unint64_t *)&qword_25573FF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]), v6 = sub_222596C90(), v7 = -1 << *(_BYTE *)(a2 + 32), v8 = v6 & ~v7, ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_2219018CC(&qword_25573F350, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_222596CCC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_2219EBFE4(void *a1, uint64_t a2)
{
  return sub_2219EBFF8(a1, a2, &qword_25573F568);
}

uint64_t sub_2219EBFF8(void *a1, uint64_t a2, unint64_t *a3)
{
  id v4;
  char v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  id v17;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v4 = a1;
    v5 = sub_222597200();

    return v5 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v8 = sub_2225970E0(),
        v9 = -1 << *(_BYTE *)(a2 + 32),
        v10 = v8 & ~v9,
        v11 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    v14 = 0;
    return v14 & 1;
  }
  sub_221917374(0, a3);
  v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v10);
  v13 = sub_2225970EC();

  if ((v13 & 1) == 0)
  {
    v15 = ~v9;
    v16 = (v10 + 1) & v15;
    if (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      do
      {
        v17 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v16);
        v14 = sub_2225970EC();

        if ((v14 & 1) != 0)
          break;
        v16 = (v16 + 1) & v15;
      }
      while (((*(_QWORD *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  v14 = 1;
  return v14 & 1;
}

uint64_t *PassUpdater.shared.unsafeMutableAddressor()
{
  if (qword_25573B3B8 != -1)
    swift_once();
  return &static PassUpdater.shared;
}

uint64_t PassUpdater.homeutil_updatePass(state:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2219EC1AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v7)(_QWORD *, void *, uint64_t, uint64_t);

  v2 = v0[5];
  v1 = v0[6];
  v3 = swift_task_alloc();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v7 = (uint64_t (*)(_QWORD *, void *, uint64_t, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE18);
  *v4 = v0;
  v4[1] = sub_2219EC258;
  return v7(v0 + 2, &unk_25573CE10, v3, v5);
}

uint64_t sub_2219EC258()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EC2C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_2219EC2D8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EC30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_221903314((__int128 *)a1, (uint64_t)v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    v7 = v16;
    v8 = v17;
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x24BDAC7A8](v9);
    v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v12 + 16))(v11);
    sub_2219F70A0((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native, &v14, v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *v3 = v14;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_221917338(a1, &qword_255741D10);
    sub_2219F6430(a2, a3, (void (*)(unint64_t, uint64_t))sub_221903314, (void (*)(void))sub_221969208, (uint64_t)v15);
    swift_bridgeObjectRelease();
    return sub_221917338((uint64_t)v15, &qword_255741D10);
  }
}

uint64_t sub_2219EC45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741410);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2225967D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_221917338(a1, &qword_255741410);
    sub_2219F615C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_221917338((uint64_t)v10, &qword_255741410);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_221968480((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2219EC5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_221903314((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_221968C70(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_221917338(a1, &qword_255741DE0);
    sub_2219F6430(a2, a3, (void (*)(unint64_t, uint64_t))sub_221903314, (void (*)(void))sub_22196A9B8, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_221917338((uint64_t)v9, &qword_255741DE0);
  }
}

uint64_t sub_2219EC6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C38);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HomePassData(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_221917338(a1, &qword_255741C38);
    sub_2219F653C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_221917338((uint64_t)v10, &qword_255741C38);
  }
  else
  {
    sub_2219175C8(a1, (uint64_t)v13, type metadata accessor for HomePassData);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_221968DC4((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2219EC81C(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_221901E24;
  return v4();
}

uint64_t PassUpdater.addRandomPass()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2219EC890()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2219EC908;
  return v3();
}

uint64_t sub_2219EC908()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EC96C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassUpdater.homeutilRemovePassWith(homeName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2219EC994()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v7 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_2219ECA38;
  return v7();
}

uint64_t sub_2219ECA38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219ECAA8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassUpdater.homeutilRemoveAllPasses()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2219ECAF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2219ECB6C;
  return v3();
}

uint64_t sub_2219ECB6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t PassUpdater.homeutilRunTestWithName(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2219ECBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (qword_25573B338 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_2219F73AC(v4, sub_2219F5DCC);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v5[2])
  {
    v7 = v5[4];
    v6 = v5[5];
    *(_QWORD *)(v0 + 40) = v6;
    v9 = v5[6];
    v8 = v5[7];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    v10 = swift_allocObject();
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v10 + 16) = v9;
    *(_QWORD *)(v10 + 24) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573F5F8);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_222688C60;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = &unk_25573F638;
    *(_QWORD *)(v12 + 24) = v10;
    *(_QWORD *)(v11 + 32) = v7;
    *(_QWORD *)(v11 + 40) = v6;
    *(_QWORD *)(v11 + 48) = &unk_255741BA0;
    *(_QWORD *)(v11 + 56) = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25573CDF8);
    v13 = swift_allocObject();
    *(_QWORD *)(v0 + 56) = v13;
    *(_OWORD *)(v13 + 16) = xmmword_222688C60;
    *(_QWORD *)(v13 + 32) = 0x796D6D7564;
    *(_QWORD *)(v13 + 40) = 0xE500000000000000;
    *(_QWORD *)(v13 + 48) = v11;
    swift_bridgeObjectRetain();
    swift_retain();
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v14;
    *v14 = v0;
    v14[1] = sub_2219ECDFC;
    return runHomeUtilOnDeviceTests(_:)(v13);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(0x6E756F6620746F6ELL, 0xE900000000000064);
  }
}

uint64_t sub_2219ECDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 72) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 80) = a2;
    *(_QWORD *)(v6 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_2219ECE84()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80));
}

uint64_t sub_2219ECEC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassUpdater.homeutilTest()()
{
  return swift_task_switch();
}

uint64_t sub_2219ECF20()
{
  uint64_t v0;
  void *rawValue;
  _QWORD *v2;

  if (qword_25573B338 != -1)
    swift_once();
  rawValue = homeutilPassTests._rawValue;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v2;
  *v2 = v0;
  v2[1] = sub_2219C9C98;
  return runHomeUtilOnDeviceTests(_:)((uint64_t)rawValue);
}

id sub_2219ECFA0()
{
  objc_class *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  objc_super v5;

  v0 = (objc_class *)type metadata accessor for PassUpdater();
  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v2 = sub_222596738();
  v3 = MEMORY[0x24BEE4B00];
  v1[14] = v2;
  v1[15] = v3;
  swift_release();
  v5.receiver = v1;
  v5.super_class = v0;
  result = objc_msgSendSuper2(&v5, sel_init);
  static PassUpdater.shared = (uint64_t)result;
  return result;
}

id PassUpdater.__allocating_init()()
{
  objc_class *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v2 = sub_222596738();
  v3 = MEMORY[0x24BEE4B00];
  v1[14] = v2;
  v1[15] = v3;
  swift_release();
  v5.receiver = v1;
  v5.super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static PassUpdater.shared.getter()
{
  if (qword_25573B3B8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t PassUpdater.updatePassFor(homeUUID:isOnboarding:isRollingForHH2:optionsNumber:flow:)(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = v5;
  *(_BYTE *)(v6 + 97) = a3;
  *(_BYTE *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_2219ED158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, void *, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_BYTE *)(v0 + 97);
  v4 = *(_BYTE *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  *(_BYTE *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = v1;
  v11 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE18);
  *v8 = v0;
  v8[1] = sub_2219ED230;
  return v11(v0 + 16, &unk_255741BC0, v7, v9);
}

uint64_t sub_2219ED230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219ED2A0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219ED2D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 48) = a7;
  *(_BYTE *)(v7 + 97) = a6;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a4;
  *(_BYTE *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2219ED2FC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_BYTE *)(v0 + 97);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *(_BYTE *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 32) = v3;
  *(_BYTE *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  sub_222596CF0();
  *(_QWORD *)(v0 + 64) = v7;
  sub_2225968D0();
  *(_QWORD *)(v0 + 72) = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE18);
  *v9 = v0;
  v9[1] = sub_2219ED3F4;
  return sub_2225968F4();
}

uint64_t sub_2219ED3F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219ED480()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219ED4C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 289) = a5;
  *(_QWORD *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 176) = a6;
  *(_BYTE *)(v6 + 288) = a2;
  *(_QWORD *)(v6 + 152) = a1;
  *(_QWORD *)(v6 + 160) = a3;
  *(_QWORD *)(v6 + 184) = type metadata accessor for HomePassState(0);
  *(_QWORD *)(v6 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219ED534()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  if (*(_BYTE *)(v0 + 288) == 1)
    v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HMDHomeKeySetupWalletLogEventV2()), sel_init);
  else
    v1 = 0;
  *(_QWORD *)(v0 + 200) = v1;
  v2 = *(void **)(v0 + 168);
  sub_22259726C();
  swift_bridgeObjectRelease();
  sub_222596678();
  sub_2219018CC((unint64_t *)&qword_25573F0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_222597530();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  *(_QWORD *)(v0 + 120) = v2;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741D78);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2219ED6A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_BYTE *)(v0 + 289);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_BYTE *)(v0 + 288);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 33) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v6;
  *v6 = v0;
  v6[1] = sub_2219ED750;
  return sub_2225968B8();
}

uint64_t sub_2219ED750()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    v3 = (_QWORD *)swift_task_alloc();
    v2[29] = v3;
    *v3 = v2;
    v3[1] = sub_2219ED7EC;
    v4 = v2[22];
    v3[7] = v2[24];
    v3[8] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_2219ED7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = v3;
  v5[30] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219ED85C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219ED89C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v1 = *(void **)(v0 + 224);
  *(_QWORD *)(v0 + 128) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
  if (swift_dynamicCast())
  {
    sub_2219F8C10(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    sub_22259726C();
    sub_222596D50();
    swift_getErrorValue();
    sub_2225976BC();
    sub_2225968E8();
    swift_bridgeObjectRelease();

  }
  else
  {
    v3 = *(_QWORD *)(v0 + 200);

    sub_22259726C();
    sub_222596D50();
    swift_getErrorValue();
    sub_2225976BC();
    MEMORY[0x2276738F0](0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    if (v3)
    {
      v4 = *(id *)(v0 + 200);
      sub_2225968E8();
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedLogEventSubmitter);
      v6 = (void *)sub_2225964BC();
      objc_msgSend(v5, sel_submitLogEvent_error_, v4, v6);

      swift_unknownObjectRelease();
    }
  }
  v7 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EDAC8()
{
  _QWORD *v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (_BYTE *)v0[25];
  if (v1)
  {
    v1[OBJC_IVAR____TtC13HomeKitDaemon31HMDHomeKeySetupWalletLogEventV2_success] = 1;
    v2 = v1;
    sub_2225968E8();
    objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedLogEventSubmitter), sel_submitLogEvent_, v2);
    swift_unknownObjectRelease();

  }
  v0[31] = sub_2225968C4();
  sub_222596CF0();
  v0[32] = v3;
  sub_2225968D0();
  v0[33] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[34] = v5;
  *v5 = v0;
  v5[1] = sub_2219EDC08;
  return sub_2225968F4();
}

uint64_t sub_2219EDC08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2219EDC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 152);

  sub_2219173AC(v2, type metadata accessor for HomePassState);
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EDD04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v7;

  v1 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v7 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(void **)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 152);

  sub_2219173AC(v3, type metadata accessor for HomePassState);
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EDDA0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  sub_2219173AC(*(_QWORD *)(v0 + 192), type metadata accessor for HomePassState);
  v1 = *(void **)(v0 + 240);
  *(_QWORD *)(v0 + 128) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
  if (swift_dynamicCast())
  {
    sub_2219F8C10(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    sub_22259726C();
    sub_222596D50();
    swift_getErrorValue();
    sub_2225976BC();
    sub_2225968E8();
    swift_bridgeObjectRelease();

  }
  else
  {
    v3 = *(_QWORD *)(v0 + 200);

    sub_22259726C();
    sub_222596D50();
    swift_getErrorValue();
    sub_2225976BC();
    MEMORY[0x2276738F0](0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    if (v3)
    {
      v4 = *(id *)(v0 + 200);
      sub_2225968E8();
      v5 = objc_msgSend((id)objc_opt_self(), sel_sharedLogEventSubmitter);
      v6 = (void *)sub_2225964BC();
      objc_msgSend(v5, sel_submitLogEvent_error_, v4, v6);

      swift_unknownObjectRelease();
    }
  }
  v7 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EE144(uint64_t a1, char a2, char a3, void *a4, void *a5, const void *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  id v12;
  id v13;

  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a7;
  *(_QWORD *)(v7 + 40) = a4;
  *(_BYTE *)(v7 + 121) = a3;
  *(_BYTE *)(v7 + 120) = a2;
  v11 = sub_222596678();
  *(_QWORD *)(v7 + 64) = v11;
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 80) = swift_task_alloc();
  *(_QWORD *)(v7 + 88) = _Block_copy(a6);
  sub_222596648();
  v12 = a4;
  v13 = a5;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219EE200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v11)(uint64_t, void *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 121);
  v6 = *(_BYTE *)(v0 + 120);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_BYTE *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v1;
  *(_QWORD *)(v7 + 40) = v4;
  *(_BYTE *)(v7 + 48) = v5;
  *(_QWORD *)(v7 + 56) = v2;
  v11 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE18);
  *v8 = v0;
  v8[1] = sub_2219EE2DC;
  return v11(v0 + 16, &unk_255741D08, v7, v9);
}

uint64_t sub_2219EE2DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EE350()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 88);
  v2 = *(void **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(void **)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));

  swift_release();
  sub_221917374(0, (unint64_t *)&qword_25573CE40);
  v6 = (void *)sub_222596E28();
  ((void (**)(_QWORD, uint64_t, void *, void *, _QWORD))v1)[2](v1, v3, v6, v4, 0);

  _Block_release(v1);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EE420()
{
  uint64_t v0;
  void *v1;
  void (**v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = *(void **)(v0 + 112);
  v2 = *(void (***)(_QWORD))(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(void **)(v0 + 40);
  v6 = *(void **)(v0 + 48);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  swift_release();
  v8 = (void *)sub_2225964BC();

  v2[2](v2);
  _Block_release(v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EE4D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_2219EE4F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t *v8;
  _QWORD *v9;
  int8x16_t v11;

  v11 = *(int8x16_t *)(v0 + 56);
  v1 = (void *)objc_opt_self();
  type metadata accessor for HomePassState(0);
  v2 = (void *)sub_222596630();
  type metadata accessor for HomePassData(0);
  v3 = (void *)sub_222596630();
  v4 = objc_msgSend(v1, sel_passSerialNumberWithHomeUUID_userUUID_, v2, v3);

  v5 = sub_222596CF0();
  v7 = v6;

  *(_QWORD *)(v0 + 72) = v7;
  sub_22259726C();
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0xE000000000000000;
  sub_222596D50();
  sub_222596D50();
  sub_222596D50();
  sub_222597380();
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 48);
  v8 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v8;
  v8[1].i64[0] = v5;
  v8[1].i64[1] = v7;
  v8[2] = vextq_s8(v11, v11, 8uLL);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE18);
  *v9 = v0;
  v9[1] = sub_2219EE6CC;
  return sub_2225968B8();
}

uint64_t sub_2219EE6CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2219EE758()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EE7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[167] = a5;
  v5[166] = a4;
  v5[165] = a3;
  v5[164] = a2;
  v5[163] = a1;
  v6 = sub_222596678();
  v5[168] = v6;
  v5[169] = *(_QWORD *)(v6 - 8);
  v5[170] = swift_task_alloc();
  v7 = type metadata accessor for HomePassState(0);
  v5[171] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[172] = v8;
  v5[173] = *(_QWORD *)(v8 + 64);
  v5[174] = swift_task_alloc();
  v5[175] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741C38);
  v5[176] = swift_task_alloc();
  v5[177] = swift_task_alloc();
  v9 = type metadata accessor for HomePassData(0);
  v5[178] = v9;
  v5[179] = *(_QWORD *)(v9 - 8);
  v5[180] = swift_task_alloc();
  v5[181] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219EE8BC()
{
  _QWORD *v0;
  uint64_t v1;

  if (qword_25573B3C8 != -1)
    swift_once();
  v0[182] = static PassLibrary.shared;
  if (qword_25573B3C0 != -1)
    swift_once();
  v1 = unk_2557685E0;
  v0[183] = qword_2557685D8;
  v0[184] = v1;
  return swift_task_switch();
}

uint64_t sub_2219EE964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v0 + 1464);
  v1 = *(_QWORD *)(v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1312);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 1480) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v7 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1488) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE58);
  *(_QWORD *)(v0 + 1496) = v5;
  *v4 = v0;
  v4[1] = sub_2219EEA30;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v7)(v0 + 1288, &unk_25573CE50, v3, v5);
}

uint64_t sub_2219EEA30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1504) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EEAA4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1512) = *(_QWORD *)(v0 + 1288);
  return swift_task_switch();
}

uint64_t sub_2219EEAC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  __int128 v24;
  void **v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  _QWORD *v46;
  uint64_t v47;

  v1 = *(void **)(v0 + 1512);
  if (v1)

  v2 = *(_QWORD *)(v0 + 1328);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 120);
  if (!*(_QWORD *)(v3 + 16))
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1432) + 56);
    v11(*(_QWORD *)(v0 + 1416), 1, 1, *(_QWORD *)(v0 + 1424));
LABEL_9:
    sub_221917338(*(_QWORD *)(v0 + 1416), &qword_255741C38);
    goto LABEL_13;
  }
  v4 = *(_QWORD *)(v0 + 1320);
  v5 = *(_QWORD *)(v0 + 1312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_22198D4E4(v5, v4);
  v7 = *(_QWORD *)(v0 + 1432);
  v8 = *(_QWORD *)(v0 + 1424);
  v9 = *(_QWORD *)(v0 + 1416);
  if ((v10 & 1) != 0)
  {
    sub_221916548(*(_QWORD *)(v3 + 56) + *(_QWORD *)(v7 + 72) * v6, *(_QWORD *)(v0 + 1416), type metadata accessor for HomePassData);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v11(v9, 0, 1, v8);
  }
  else
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v11(*(_QWORD *)(v0 + 1416), 1, 1, v8);
  }
  v12 = *(_QWORD *)(v0 + 1432);
  v13 = *(_QWORD *)(v0 + 1424);
  v14 = *(_QWORD *)(v0 + 1416);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v13) == 1)
    goto LABEL_9;
  v15 = *(_QWORD *)(v0 + 1448);
  v16 = *(_QWORD *)(v0 + 1440);
  v17 = *(_QWORD *)(v0 + 1400);
  v18 = *(_QWORD *)(v0 + 1336);
  sub_2219175C8(*(_QWORD *)(v0 + 1416), v15, type metadata accessor for HomePassData);
  sub_221916548(v18, v17, type metadata accessor for HomePassState);
  sub_221916548(v15, v16, type metadata accessor for HomePassData);
  if (v1)
    _s13HomeKitDaemon0A8PassDataV23__derived_struct_equalsySbAC_ACtFZ_0(*(_QWORD *)(v0 + 1400) + *(int *)(*(_QWORD *)(v0 + 1368) + 60), *(_QWORD *)(v0 + 1440));
  v19 = *(_QWORD *)(v0 + 1448);
  v20 = *(_QWORD *)(v0 + 1400);
  sub_2219173AC(*(_QWORD *)(v0 + 1440), type metadata accessor for HomePassData);
  sub_2219173AC(v20, type metadata accessor for HomePassState);
  sub_2219173AC(v19, type metadata accessor for HomePassData);
LABEL_13:
  *(_QWORD *)(v0 + 1520) = v11;
  v21 = *(_QWORD *)(v0 + 1504);
  sub_2219F00D0(*(_QWORD *)(v0 + 1336), v1 != 0, v0 + 1048);
  if (v21)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  sub_22259726C();
  *(_QWORD *)(v0 + 1248) = 0;
  *(_QWORD *)(v0 + 1256) = 0xE000000000000000;
  sub_222596D50();
  sub_2219F7FE4((__int128 *)(v0 + 1048), v0 + 880);
  sub_222597380();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  sub_2219F7FE4((__int128 *)(v0 + 1048), v0 + 992);
  if (*(_QWORD *)(v0 + 1000))
  {
    v24 = *(_OWORD *)(v0 + 1008);
    *(_OWORD *)(v0 + 936) = *(_OWORD *)(v0 + 992);
    *(_OWORD *)(v0 + 952) = v24;
    *(_OWORD *)(v0 + 968) = *(_OWORD *)(v0 + 1024);
    *(_DWORD *)(v0 + 983) = *(_DWORD *)(v0 + 1039);
    sub_2219F8004((__int128 *)(v0 + 952), v0 + 1200);
    *(_QWORD *)(v0 + 1608) = *(_QWORD *)(v0 + 936);
    *(_QWORD *)(v0 + 1616) = *(_QWORD *)(v0 + 944);
    sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F801C);
    sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F801C);
    sub_2219F8064(v0 + 1200);
    swift_bridgeObjectRetain();
    if (!v1)
      sub_2219F05A4(*(_QWORD *)(v0 + 1336));
    v25 = (void **)(v0 + 1224);
    sub_2219F8004((__int128 *)(v0 + 1200), v0 + 1224);
    if (*(_BYTE *)(v0 + 1240))
    {
      if (*(_BYTE *)(v0 + 1240) == 1)
      {
        v26 = 0;
        v27 = *v25;
      }
      else
      {
        v26 = *(void **)(v0 + 1224);
        v27 = *(void **)(v0 + 1232);
        v29 = v26;
        v30 = v27;
        sub_2219F8120(v0 + 1200);
      }
    }
    else
    {
      v27 = 0;
      v26 = *v25;
    }
    *(_QWORD *)(v0 + 1632) = v26;
    *(_QWORD *)(v0 + 1624) = v27;
    v31 = *(_QWORD *)(v0 + 1424);
    v32 = *(_QWORD *)(v0 + 1392);
    v33 = *(_QWORD *)(v0 + 1384);
    v34 = *(_QWORD *)(v0 + 1376);
    v35 = *(_QWORD *)(v0 + 1368);
    v36 = *(_QWORD *)(v0 + 1360);
    v37 = *(_QWORD *)(v0 + 1352);
    v38 = *(_QWORD *)(v0 + 1344);
    v39 = *(_QWORD *)(v0 + 1336);
    *(_WORD *)(v0 + 988) = *(_WORD *)(v0 + 985);
    *(_QWORD *)(v0 + 1640) = static PassLibrary.shared;
    v40 = unk_2557685E0;
    *(_QWORD *)(v0 + 1648) = qword_2557685D8;
    *(_QWORD *)(v0 + 1656) = v40;
    v41 = *(int *)(v35 + 60);
    *(_DWORD *)(v0 + 932) = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v39 + v41 + *(int *)(v31 + 20), v38);
    sub_221916548(v39, v32, type metadata accessor for HomePassState);
    v42 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v43 = swift_allocObject();
    *(_QWORD *)(v0 + 1664) = v43;
    sub_2219175C8(v32, v43 + v42, type metadata accessor for HomePassState);
    v44 = v43 + ((v33 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
    v45 = *(_OWORD *)(v0 + 952);
    *(_OWORD *)v44 = *(_OWORD *)(v0 + 936);
    *(_OWORD *)(v44 + 16) = v45;
    *(_OWORD *)(v44 + 32) = *(_OWORD *)(v0 + 968);
    *(_DWORD *)(v44 + 47) = *(_DWORD *)(v0 + 983);
  }
  else
  {
    if (!v1)
    {
      v46 = *(_QWORD **)(v0 + 1304);
      v47 = MEMORY[0x24BEE4AF8];
      *v46 = 2;
      v46[1] = v47;
      v46[2] = 0;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
    *(_QWORD *)(v0 + 1528) = static PassLibrary.shared;
    v28 = unk_2557685E0;
    *(_QWORD *)(v0 + 1536) = qword_2557685D8;
    *(_QWORD *)(v0 + 1544) = v28;
  }
  return swift_task_switch();
}

uint64_t sub_2219EF0B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EF154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 1536);
  v1 = *(_QWORD *)(v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1312);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 1552) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v6 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1560) = v4;
  *v4 = v0;
  v4[1] = sub_2219EF208;
  return ((uint64_t (*)(void))v6)();
}

uint64_t sub_2219EF208()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1568) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EF27C()
{
  return swift_task_switch();
}

uint64_t sub_2219EF290()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[176];
  v2 = v0[165];
  v3 = v0[164];
  swift_beginAccess();
  sub_2219F653C(v3, v2, v1);
  sub_221917338(v1, &qword_255741C38);
  swift_endAccess();
  v0[197] = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219EF338()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1584) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C78);
  *v1 = v0;
  v1[1] = sub_2219EF3C8;
  return v4(v0 + 1296, &unk_255741E18, 0, v2);
}

uint64_t sub_2219EF3C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1592) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EF42C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EF4C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1600) = *(_QWORD *)(v0 + 1296);
  return swift_task_switch();
}

uint64_t sub_2219EF4E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _BOOL8 v3;
  id v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 1600);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2225973B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v3 = v2 == 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedRecorder);
  v5 = (void *)sub_222596CD8();
  objc_msgSend(v4, sel_recordRemovedWalletKeyWithSerialNumber_noWalletKeysRemaining_, v5, v3);

  v6 = *(_QWORD **)(v0 + 1304);
  v7 = MEMORY[0x24BEE4AF8];
  *v6 = 2;
  v6[1] = v7;
  v6[2] = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EF638()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EF6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 1664);
  v13 = *(_OWORD *)(v0 + 1648);
  v2 = *(_QWORD *)(v0 + 1640);
  v3 = *(_WORD *)(v0 + 988);
  v4 = *(_QWORD *)(v0 + 1632);
  v5 = *(_QWORD *)(v0 + 1624);
  v6 = *(_QWORD *)(v0 + 1616);
  v7 = *(_QWORD *)(v0 + 1608);
  v8 = *(_QWORD *)(v0 + 1360);
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 1672) = v9;
  *(_OWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v8;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = &unk_255741C48;
  *(_QWORD *)(v9 + 88) = v1;
  *(_WORD *)(v9 + 96) = v3;
  *(_QWORD *)&v13 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1680) = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C58);
  *v10 = v0;
  v10[1] = sub_2219EF7D0;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v13)(v0 + 16, &unk_255741C50, v9, v11);
}

uint64_t sub_2219EF7D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1688) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EF844()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[170];
  v2 = v0[169];
  v3 = v0[168];
  v4 = v0[3];
  v0[212] = v0[2];
  v0[213] = v4;
  memcpy(v0 + 57, v0 + 4, 0x1A8uLL);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2219EF8DC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[214] = static PassLibrary.shared;
  v1 = unk_2557685E0;
  v0[215] = qword_2557685D8;
  v0[216] = v1;
  return swift_task_switch();
}

uint64_t sub_2219EF910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 1720);
  v1 = *(_QWORD *)(v0 + 1320);
  v2 = *(_QWORD *)(v0 + 1312);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 1736) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v6 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1744) = v4;
  *v4 = v0;
  v4[1] = sub_2219EF9CC;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, _QWORD))v6)(v0 + 1280, &unk_255741C60, v3, *(_QWORD *)(v0 + 1496));
}

uint64_t sub_2219EF9CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1752) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219EFA40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[170];
  v2 = v0[169];
  v3 = v0[168];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2219EFAC4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1632);
  v2 = *(void **)(v0 + 1624);
  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);

  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219EFB8C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1760) = *(_QWORD *)(v0 + 1280);
  return swift_task_switch();
}

uint64_t sub_2219EFBA8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;

  if (*(_QWORD *)(v0 + 1760))
  {
    v21 = *(void **)(v0 + 1760);
    v22 = v0 + 1048;
    v1 = *(_QWORD *)(v0 + 1696);
    v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 1520);
    v3 = *(_QWORD *)(v0 + 1424);
    v4 = *(_QWORD *)(v0 + 1408);
    v5 = *(_QWORD *)(v0 + 1320);
    v6 = *(_QWORD *)(v0 + 1312);
    sub_221916548(*(_QWORD *)(v0 + 1336) + *(int *)(v0 + 932), v4, type metadata accessor for HomePassData);
    v2(v4, 0, 1, v3);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_2219EC6B4(v4, v6, v5);
    swift_endAccess();
    if (v1)
    {
      if (v1 != 1)
      {
        sub_221987C70(v0 + 456);
        goto LABEL_9;
      }
      v7 = objc_msgSend((id)objc_opt_self(), sel_sharedRecorder, v21);
      sub_2219F6EC0((const void *)(v0 + 456));
      sub_221987C70(v0 + 456);
      v8 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_recordUpdatedWalletKey_, v8);
    }
    else
    {
      v7 = objc_msgSend((id)objc_opt_self(), sel_sharedRecorder, v21);
      sub_2219F6EC0((const void *)(v0 + 456));
      sub_221987C70(v0 + 456);
      v8 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_recordAddedWalletKey_, v8);
    }

LABEL_9:
    v13 = *(_QWORD *)(v0 + 1704);
    v14 = *(_QWORD *)(v0 + 1696);
    v15 = *(void **)(v0 + 1632);
    v16 = *(void **)(v0 + 1624);
    v17 = v21;
    sub_22259726C();
    *(_QWORD *)(v0 + 1264) = 0;
    *(_QWORD *)(v0 + 1272) = 0xE000000000000000;
    sub_222596D50();
    *(_QWORD *)(v0 + 1152) = v14;
    *(_QWORD *)(v0 + 1160) = v13;
    *(_QWORD *)(v0 + 1168) = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741C68);
    sub_222597380();
    sub_2225968E8();
    sub_2219F8094(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);

    swift_bridgeObjectRelease();
    sub_2219F8094(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);
    v18 = *(_QWORD *)(v0 + 1760);
    v19 = *(_QWORD *)(v0 + 1304);
    *(_OWORD *)v19 = *(_OWORD *)(v0 + 1696);
    *(_QWORD *)(v19 + 16) = v18;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  v9 = *(void **)(v0 + 1632);
  v10 = *(void **)(v0 + 1624);
  swift_bridgeObjectRelease();
  sub_221987C70(v0 + 456);
  sub_2219344F8();
  swift_allocError();
  *(_QWORD *)v11 = 0xD00000000000003ELL;
  *(_QWORD *)(v11 + 8) = 0x8000000222621FC0;
  *(_BYTE *)(v11 + 16) = 0;
  swift_willThrow();
  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);

  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_2219EFFA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_221987C70(v0 + 456);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F0008()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1632);
  v2 = *(void **)(v0 + 1624);
  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);

  sub_2219F8094(v0 + 1048, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2219F80D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2219F00D0(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  int v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  unint64_t v41;
  int *v42;
  int v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  id v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a3;
  v5 = type metadata accessor for HomePassState(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v53 - v10;
  v12 = a1 + *(int *)(v9 + 60);
  v13 = (int *)type metadata accessor for HomePassData(0);
  v58 = v13[16];
  v14 = *(_BYTE *)(v12 + v58);
  sub_221916548(a1, (uint64_t)v11, type metadata accessor for HomePassState);
  if ((v14 & 1) != 0)
  {
    sub_2219173AC((uint64_t)v11, type metadata accessor for HomePassState);
  }
  else
  {
    v15 = v11[*(int *)(v5 + 60) + v13[17]];
    sub_2219173AC((uint64_t)v11, type metadata accessor for HomePassState);
    if (v15 == 2)
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = v59;
      goto LABEL_31;
    }
  }
  if ((a2 & 1) == 0)
  {
    if (*(_QWORD *)(v12 + v13[9]) == 5)
    {
      if ((*(_BYTE *)(a1 + 40) & 1) != 0)
      {
        sub_221916548(a1, (uint64_t)v8, type metadata accessor for HomePassState);
        v24 = v8[26];
        sub_2219173AC((uint64_t)v8, type metadata accessor for HomePassState);
        if ((v24 & 1) != 0)
          v25 = 256;
        else
          v25 = 0;
        v54 = v25 | v24 & 1;
        v55 = 1;
        goto LABEL_20;
      }
      v55 = 1;
    }
    else
    {
      if (*(_BYTE *)(v12 + v13[10]) == 1)
        v26 = *(unsigned __int8 *)(a1 + 25);
      else
        v26 = 0;
      v55 = v26;
      if ((*(_BYTE *)(a1 + 40) & 1) != 0)
      {
        sub_221916548(a1, (uint64_t)v8, type metadata accessor for HomePassState);
        sub_2219173AC((uint64_t)v8, type metadata accessor for HomePassState);
        v54 = 0;
        goto LABEL_20;
      }
    }
    v54 = (*(unsigned __int16 *)(a1 + 32) << 6) & 0x100 | (*(unsigned __int16 *)(a1 + 32) >> 1) & 1;
    goto LABEL_20;
  }
  v54 = 2;
  v55 = 1;
LABEL_20:
  v57 = v13;
  v27 = (uint64_t *)(v12 + v13[7]);
  v28 = v27[2];
  v29 = v27[3];
  v30 = *v27;
  v31 = v27[1];
  v32 = objc_allocWithZone(MEMORY[0x24BE6EF60]);
  sub_22190D5DC(v28, v29);
  sub_22190D5DC(v30, v31);
  v33 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v34 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v56 = objc_msgSend(v32, sel_initWithReaderGroupIdentifier_readerGroupPublicKey_, v33, v34);
  sub_22190D550(v30, v31);
  sub_22190D550(v28, v29);

  v35 = v27[4];
  v36 = v27[5];
  v37 = objc_allocWithZone(MEMORY[0x24BE6E9C0]);
  sub_22190D5DC(v30, v31);
  sub_22190D5DC(v35, v36);
  v38 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v39 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v40 = objc_msgSend(v37, sel_initWithReaderGroupIdentifier_readerGroupPublicKey_, v38, v39);
  sub_22190D550(v30, v31);
  v41 = v36;
  v42 = v57;
  sub_22190D550(v35, v41);

  v43 = *(unsigned __int8 *)(v12 + v42[17]);
  if (*(_BYTE *)(v12 + v58) == 1)
  {
    if (v43 == 2)
    {
      v19 = 0;
      v58 = 0;
      v44 = v56;
      v45 = v56;
      v18 = v56;
    }
    else
    {
      v44 = v56;
      v18 = v56;
      v58 = 2;
      v45 = v40;
      v19 = v40;
    }
  }
  else
  {
    if (v43 == 2)
    {
      sub_2219344F8();
      swift_allocError();
      *(_QWORD *)v46 = 0xD000000000000047;
      *(_QWORD *)(v46 + 8) = 0x8000000222622100;
      *(_BYTE *)(v46 + 16) = 0;
      swift_willThrow();

      return;
    }
    v19 = 0;
    v58 = 1;
    v45 = v40;
    v18 = v40;
    v44 = v56;
  }
  v47 = v45;
  if (*(_BYTE *)(v12 + v42[11]))
    v21 = 7;
  else
    v21 = 1;
  v48 = (void *)objc_opt_self();
  v49 = (void *)sub_222596630();
  v50 = (void *)sub_222596630();
  v51 = objc_msgSend(v48, sel_passSerialNumberWithHomeUUID_userUUID_, v49, v50);

  v16 = sub_222596CF0();
  v17 = v52;

  v22 = v55 | (v54 << 8);
  v20 = v58;
  v23 = v59;
LABEL_31:
  *(_QWORD *)v23 = v16;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v19;
  *(_QWORD *)(v23 + 32) = v20;
  *(_QWORD *)(v23 + 40) = v21;
  *(_WORD *)(v23 + 48) = v22;
  *(_BYTE *)(v23 + 50) = BYTE2(v22);
}

uint64_t sub_2219F05A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  char v12;
  char v13;
  int v14;
  char v15;
  _OWORD *v16;
  uint64_t result;
  _OWORD *v18;
  id v19;
  void *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for HomePassState(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v24 - v7;
  v9 = a1 + *(int *)(v6 + 60);
  if ((sub_2219EBE60(v9, *(_QWORD *)a1) & 1) != 0)
  {
    sub_2219D2518();
    swift_allocError();
    *v10 = 0;
    v10[1] = 0;
  }
  else if (*(_BYTE *)(a1 + 8) == 1)
  {
    sub_2219D2518();
    swift_allocError();
    *v11 = xmmword_2226902F0;
  }
  else
  {
    v12 = *(_BYTE *)(a1 + 9);
    sub_221916548(a1, (uint64_t)v8, type metadata accessor for HomePassState);
    if ((v12 & 1) != 0)
    {
      sub_2219173AC((uint64_t)v8, type metadata accessor for HomePassState);
    }
    else
    {
      v13 = v8[10];
      sub_2219173AC((uint64_t)v8, type metadata accessor for HomePassState);
      if ((v13 & 1) == 0)
      {
        sub_2219D2518();
        swift_allocError();
        *v21 = xmmword_2226902C0;
        return swift_willThrow();
      }
    }
    v14 = *(unsigned __int8 *)(a1 + 11);
    sub_221916548(a1, (uint64_t)v5, type metadata accessor for HomePassState);
    if (v14 == 1)
    {
      v15 = v5[12];
      sub_2219173AC((uint64_t)v5, type metadata accessor for HomePassState);
      if ((v15 & 1) == 0)
      {
        sub_2219D2518();
        swift_allocError();
        *v16 = xmmword_2226902D0;
        return swift_willThrow();
      }
    }
    else
    {
      sub_2219173AC((uint64_t)v5, type metadata accessor for HomePassState);
    }
    if ((*(_BYTE *)(a1 + 13) & 1) != 0)
    {
      result = type metadata accessor for HomePassData(0);
      if (*(_BYTE *)(v9 + *(int *)(result + 44)) == 1)
      {
        sub_2219D2518();
        swift_allocError();
        *v18 = xmmword_2226902E0;
      }
      else
      {
        v22 = *(_QWORD *)(a1 + 16);
        if (*(_BYTE *)(a1 + 24) == 1)
        {
          if (!v22)
            return result;
          sub_2219344F8();
          swift_allocError();
          *(_QWORD *)v23 = 0xD000000000000030;
          *(_QWORD *)(v23 + 8) = 0x80000002226220C0;
          *(_BYTE *)(v23 + 16) = 0;
        }
        else
        {
          objc_msgSend((id)objc_opt_self(), sel_homekitErrorWithPassLibraryErrorCode_, v22);
        }
      }
    }
    else
    {
      sub_222596CF0();
      v19 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v20 = (void *)sub_222596CD8();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_initWithDomain_code_userInfo_, v20, 8, 0);

    }
  }
  return swift_willThrow();
}

uint64_t sub_2219F08D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;

  *(_QWORD *)(v5 + 440) = a1;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 448) = v10;
  *v10 = v5;
  v10[1] = sub_2219F095C;
  return sub_2219F0C98(v5 + 16, a2, a4, a5, a3);
}

uint64_t sub_2219F095C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;

  v2 = *v1;
  v57 = *(_QWORD *)(v2 + 24);
  v58 = *(_QWORD *)(v2 + 16);
  v55 = *(_QWORD *)(v2 + 40);
  v56 = *(_QWORD *)(v2 + 32);
  v53 = *(_QWORD *)(v2 + 56);
  v54 = *(_QWORD *)(v2 + 48);
  v51 = *(_QWORD *)(v2 + 72);
  v52 = *(_QWORD *)(v2 + 64);
  v49 = *(_QWORD *)(v2 + 88);
  v50 = *(_QWORD *)(v2 + 80);
  v47 = *(_QWORD *)(v2 + 104);
  v48 = *(_QWORD *)(v2 + 96);
  v45 = *(_QWORD *)(v2 + 120);
  v46 = *(_QWORD *)(v2 + 112);
  v43 = *(_QWORD *)(v2 + 136);
  v44 = *(_QWORD *)(v2 + 128);
  v41 = *(_QWORD *)(v2 + 152);
  v42 = *(_QWORD *)(v2 + 144);
  v40 = *(_QWORD *)(v2 + 160);
  v59 = *(_OWORD *)(v2 + 168);
  v3 = *(_QWORD *)(v2 + 200);
  v33 = *(_QWORD *)(v2 + 192);
  v34 = *(_QWORD *)(v2 + 184);
  v38 = *(_BYTE *)(v2 + 376);
  v39 = *(_BYTE *)(v2 + 305);
  v36 = *(_BYTE *)(v2 + 401);
  v37 = *(_BYTE *)(v2 + 400);
  v35 = *(_BYTE *)(v2 + 402);
  v5 = *(_QWORD *)(v2 + 208);
  v4 = *(_QWORD *)(v2 + 216);
  v6 = *(_QWORD *)(v2 + 224);
  v7 = *(_QWORD *)(v2 + 232);
  v8 = *(_QWORD *)(v2 + 240);
  v9 = *(_BYTE *)(v2 + 248);
  v12 = *(_QWORD *)(v2 + 256);
  v13 = *(_QWORD *)(v2 + 264);
  v14 = *(_QWORD *)(v2 + 272);
  v15 = *(_QWORD *)(v2 + 280);
  v16 = *(_QWORD *)(v2 + 288);
  v17 = *(_QWORD *)(v2 + 296);
  v18 = *(_BYTE *)(v2 + 304);
  v19 = *(_QWORD *)(v2 + 312);
  v20 = *(_QWORD *)(v2 + 320);
  v21 = *(_QWORD *)(v2 + 328);
  v22 = *(_QWORD *)(v2 + 336);
  v23 = *(_QWORD *)(v2 + 344);
  v24 = *(_QWORD *)(v2 + 352);
  v25 = *(_QWORD *)(v2 + 360);
  v26 = *(_QWORD *)(v2 + 368);
  v27 = *(_QWORD *)(v2 + 384);
  v28 = *(_QWORD *)(v2 + 392);
  v29 = *(_QWORD *)(v2 + 408);
  v30 = *(_QWORD *)(v2 + 416);
  v31 = *(_QWORD *)(v2 + 424);
  v32 = *(_QWORD *)(v2 + 432);
  swift_task_dealloc();
  if (!v0)
  {
    v10 = *(_QWORD *)(v2 + 440);
    *(_QWORD *)v10 = v58;
    *(_QWORD *)(v10 + 8) = v57;
    *(_QWORD *)(v10 + 16) = v56;
    *(_QWORD *)(v10 + 24) = v55;
    *(_QWORD *)(v10 + 32) = v54;
    *(_QWORD *)(v10 + 40) = v53;
    *(_QWORD *)(v10 + 48) = v52;
    *(_QWORD *)(v10 + 56) = v51;
    *(_QWORD *)(v10 + 64) = v50;
    *(_QWORD *)(v10 + 72) = v49;
    *(_QWORD *)(v10 + 80) = v48;
    *(_QWORD *)(v10 + 88) = v47;
    *(_QWORD *)(v10 + 96) = v46;
    *(_QWORD *)(v10 + 104) = v45;
    *(_QWORD *)(v10 + 112) = v44;
    *(_QWORD *)(v10 + 120) = v43;
    *(_QWORD *)(v10 + 128) = v42;
    *(_QWORD *)(v10 + 136) = v41;
    *(_QWORD *)(v10 + 144) = v40;
    *(_QWORD *)(v10 + 168) = v34;
    *(_QWORD *)(v10 + 176) = v33;
    *(_QWORD *)(v10 + 184) = v3;
    *(_QWORD *)(v10 + 192) = v5;
    *(_QWORD *)(v10 + 200) = v4;
    *(_QWORD *)(v10 + 208) = v6;
    *(_QWORD *)(v10 + 216) = v7;
    *(_QWORD *)(v10 + 224) = v8;
    *(_BYTE *)(v10 + 232) = v9;
    *(_QWORD *)(v10 + 240) = v12;
    *(_QWORD *)(v10 + 248) = v13;
    *(_QWORD *)(v10 + 256) = v14;
    *(_QWORD *)(v10 + 264) = v15;
    *(_QWORD *)(v10 + 272) = v16;
    *(_QWORD *)(v10 + 280) = v17;
    *(_BYTE *)(v10 + 288) = v18;
    *(_BYTE *)(v10 + 289) = v39;
    *(_QWORD *)(v10 + 296) = v19;
    *(_QWORD *)(v10 + 304) = v20;
    *(_QWORD *)(v10 + 312) = v21;
    *(_QWORD *)(v10 + 320) = v22;
    *(_QWORD *)(v10 + 328) = v23;
    *(_QWORD *)(v10 + 336) = v24;
    *(_QWORD *)(v10 + 344) = v25;
    *(_QWORD *)(v10 + 352) = v26;
    *(_BYTE *)(v10 + 360) = v38;
    *(_QWORD *)(v10 + 368) = v27;
    *(_QWORD *)(v10 + 376) = v28;
    *(_BYTE *)(v10 + 384) = v37;
    *(_BYTE *)(v10 + 385) = v36;
    *(_BYTE *)(v10 + 386) = v35;
    *(_QWORD *)(v10 + 392) = v29;
    *(_QWORD *)(v10 + 400) = v30;
    *(_QWORD *)(v10 + 408) = v31;
    *(_QWORD *)(v10 + 416) = v32;
    *(_OWORD *)(v10 + 152) = v59;
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219F0C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[170] = a5;
  v5[169] = a4;
  v5[168] = a3;
  v5[167] = a2;
  v5[166] = a1;
  v6 = sub_2225964E0();
  v5[171] = v6;
  v5[172] = *(_QWORD *)(v6 - 8);
  v5[173] = swift_task_alloc();
  v7 = sub_222596540();
  v5[174] = v7;
  v5[175] = *(_QWORD *)(v7 - 8);
  v5[176] = swift_task_alloc();
  v5[177] = swift_task_alloc();
  v5[178] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219F0D4C()
{
  _QWORD *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;

  static PassFileUtilities.createPassDirectory()(v0[178]);
  v1 = (id *)v0[170];
  v2 = v0[169];
  v3 = v0[168];
  sub_22259726C();
  swift_bridgeObjectRelease();
  v0[179] = sub_2219018CC(&qword_25573CDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_222597530();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  sub_22199B54C(v3, v2, v1, (uint64_t)(v0 + 2));
  v4 = v0[173];
  v26 = v0[172];
  v0[180] = v0[2];
  *(_OWORD *)(v0 + 181) = *(_OWORD *)(v0 + 3);
  v0[183] = v0[5];
  v5 = v0[9];
  v0[186] = v0[8];
  v0[187] = v5;
  v6 = v0[11];
  v0[188] = v0[10];
  v0[189] = v6;
  v0[192] = v0[14];
  *(_OWORD *)(v0 + 193) = *(_OWORD *)(v0 + 15);
  v0[195] = v0[17];
  v0[198] = v0[20];
  *(_OWORD *)(v0 + 199) = *(_OWORD *)(v0 + 21);
  v7 = v0[24];
  v0[201] = v0[23];
  v0[202] = v7;
  v0[203] = v0[25];
  v0[206] = v0[28];
  *(_OWORD *)(v0 + 207) = *(_OWORD *)(v0 + 29);
  *((_BYTE *)v0 + 1888) = *((_BYTE *)v0 + 248);
  *(_OWORD *)(v0 + 209) = *((_OWORD *)v0 + 16);
  v8 = v0[35];
  v0[211] = v0[34];
  v0[212] = v8;
  v9 = v0[37];
  v0[213] = v0[36];
  v0[214] = v9;
  *((_BYTE *)v0 + 1880) = *((_BYTE *)v0 + 304);
  *((_BYTE *)v0 + 1872) = *((_BYTE *)v0 + 305);
  v10 = v0[40];
  v0[215] = v0[39];
  v0[216] = v10;
  v0[217] = v0[41];
  v11 = v0[45];
  v0[220] = v0[44];
  v0[221] = v11;
  v0[222] = v0[46];
  *((_BYTE *)v0 + 1864) = *((_BYTE *)v0 + 376);
  v12 = v0[49];
  v0[223] = v0[48];
  v0[224] = v12;
  *((_BYTE *)v0 + 1856) = *((_BYTE *)v0 + 400);
  *((_BYTE *)v0 + 1896) = *((_BYTE *)v0 + 401);
  *((_BYTE *)v0 + 1858) = *((_BYTE *)v0 + 402);
  v13 = v0[52];
  v0[225] = v0[51];
  v0[226] = v13;
  v14 = v0[54];
  v0[227] = v0[53];
  v15 = v0[171];
  *((_OWORD *)v0 + 92) = *((_OWORD *)v0 + 3);
  *((_OWORD *)v0 + 95) = *((_OWORD *)v0 + 6);
  *((_OWORD *)v0 + 98) = *((_OWORD *)v0 + 9);
  *((_OWORD *)v0 + 102) = *((_OWORD *)v0 + 13);
  *((_OWORD *)v0 + 109) = *((_OWORD *)v0 + 21);
  v0[228] = v14;
  sub_22259726C();
  v0[163] = 0;
  v0[164] = 0xE000000000000000;
  sub_222596D50();
  memcpy(v0 + 108, v0 + 2, 0x1A8uLL);
  sub_222597380();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v0[161] = sub_222596CF0();
  v0[162] = v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v4, *MEMORY[0x24BDCD7A0], v15);
  sub_2219344B4();
  sub_222596534();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v4, v15);
  swift_bridgeObjectRelease();
  sub_2225963C0();
  swift_allocObject();
  sub_2225963B4();
  memcpy(v0 + 55, v0 + 2, 0x1A8uLL);
  sub_2219F850C();
  v17 = sub_2225963A8();
  v19 = v18;
  swift_release();
  sub_2225965B8();
  v20 = v0[178];
  v21 = v0[170];
  v22 = v0[168];
  sub_22190D550(v17, v19);
  sub_22259726C();
  swift_bridgeObjectRelease();
  sub_222597530();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v0[165] = v21;
  v23 = swift_task_alloc();
  v0[229] = v23;
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = v22;
  v24 = (_QWORD *)swift_task_alloc();
  v0[230] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CDB0);
  sub_22191CA68((unint64_t *)&qword_25573CDB8, &qword_25573CDB0);
  *v24 = v0;
  v24[1] = sub_2219F142C;
  return sub_222596DB0();
}

uint64_t sub_2219F142C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1848) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F1498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  char v12;
  char v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v1 = *(_QWORD *)(v0 + 1848);
  static PassFileUtilities.zipPassDirectory(passDirectoryURL:)(*(_QWORD *)(v0 + 1408));
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 1424);
    v3 = *(_QWORD *)(v0 + 1392);
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 1400) + 8);
    v4(*(_QWORD *)(v0 + 1416), v3);
    sub_221987C70(v0 + 16);
    sub_2219F9CE4(v2, 1);
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_222597530();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    v4(v2, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    v45 = *(_QWORD *)(v0 + 1824);
    v44 = *(_QWORD *)(v0 + 1816);
    v43 = *(_OWORD *)(v0 + 1800);
    v42 = *(_QWORD *)(v0 + 1792);
    v40 = *(_QWORD *)(v0 + 1776);
    v41 = *(_QWORD *)(v0 + 1784);
    v39 = *(_QWORD *)(v0 + 1768);
    v37 = *(_OWORD *)(v0 + 1736);
    v38 = *(_OWORD *)(v0 + 1752);
    v36 = *(_OWORD *)(v0 + 1720);
    v34 = *(_QWORD *)(v0 + 1704);
    v35 = *(_QWORD *)(v0 + 1712);
    v33 = *(_OWORD *)(v0 + 1688);
    v32 = *(_OWORD *)(v0 + 1672);
    v30 = *(_QWORD *)(v0 + 1656);
    v31 = *(_QWORD *)(v0 + 1664);
    v28 = *(_OWORD *)(v0 + 1624);
    v29 = *(_OWORD *)(v0 + 1640);
    v27 = *(_OWORD *)(v0 + 1608);
    v26 = *(_QWORD *)(v0 + 1584);
    v25 = *(_OWORD *)(v0 + 1568);
    v24 = *(_OWORD *)(v0 + 1552);
    v23 = *(_OWORD *)(v0 + 1536);
    v22 = *(_OWORD *)(v0 + 1520);
    v20 = *(_OWORD *)(v0 + 1488);
    v21 = *(_OWORD *)(v0 + 1504);
    v18 = *(_OWORD *)(v0 + 1456);
    v19 = *(_OWORD *)(v0 + 1472);
    v5 = *(_QWORD *)(v0 + 1424);
    v6 = *(_QWORD *)(v0 + 1416);
    v7 = *(_QWORD *)(v0 + 1408);
    v8 = *(_QWORD *)(v0 + 1400);
    v9 = *(_QWORD *)(v0 + 1392);
    v15 = *(_QWORD *)(v0 + 1336);
    v10 = *(_QWORD *)(v0 + 1328);
    v16 = *(_OWORD *)(v0 + 1592);
    v17 = *(_OWORD *)(v0 + 1440);
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_222597530();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v11(v6, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15, v7, v9);
    sub_2219F9CE4(v5, 1);
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_222597530();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    v11(v5, v9);
    v12 = *(_BYTE *)(v0 + 1888);
    LOBYTE(v8) = *(_BYTE *)(v0 + 1880);
    LOBYTE(v9) = *(_BYTE *)(v0 + 1872);
    v13 = *(_BYTE *)(v0 + 1864);
    LOBYTE(v6) = *(_BYTE *)(v0 + 1856);
    LOBYTE(v11) = *(_BYTE *)(v0 + 1896);
    LOBYTE(v7) = *(_BYTE *)(v0 + 1858);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_OWORD *)v10 = v17;
    *(_OWORD *)(v10 + 16) = v18;
    *(_OWORD *)(v10 + 32) = v19;
    *(_OWORD *)(v10 + 48) = v20;
    *(_OWORD *)(v10 + 64) = v21;
    *(_OWORD *)(v10 + 80) = v22;
    *(_OWORD *)(v10 + 96) = v23;
    *(_OWORD *)(v10 + 112) = v24;
    *(_OWORD *)(v10 + 128) = v25;
    *(_QWORD *)(v10 + 144) = v26;
    *(_OWORD *)(v10 + 152) = v16;
    *(_OWORD *)(v10 + 168) = v27;
    *(_OWORD *)(v10 + 184) = v28;
    *(_OWORD *)(v10 + 200) = v29;
    *(_QWORD *)(v10 + 216) = v30;
    *(_QWORD *)(v10 + 224) = v31;
    *(_BYTE *)(v10 + 232) = v12;
    *(_OWORD *)(v10 + 240) = v32;
    *(_OWORD *)(v10 + 256) = v33;
    *(_QWORD *)(v10 + 272) = v34;
    *(_QWORD *)(v10 + 280) = v35;
    *(_BYTE *)(v10 + 288) = v8;
    *(_BYTE *)(v10 + 289) = v9;
    *(_OWORD *)(v10 + 296) = v36;
    *(_OWORD *)(v10 + 312) = v37;
    *(_OWORD *)(v10 + 328) = v38;
    *(_QWORD *)(v10 + 344) = v39;
    *(_QWORD *)(v10 + 352) = v40;
    *(_BYTE *)(v10 + 360) = v13;
    *(_QWORD *)(v10 + 368) = v41;
    *(_QWORD *)(v10 + 376) = v42;
    *(_BYTE *)(v10 + 384) = v6;
    *(_BYTE *)(v10 + 385) = (_BYTE)v11;
    *(_BYTE *)(v10 + 386) = v7;
    *(_OWORD *)(v10 + 392) = v43;
    *(_QWORD *)(v10 + 408) = v44;
    *(_QWORD *)(v10 + 416) = v45;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F19A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 1424);
  v2 = *(_QWORD *)(v0 + 1416);
  v3 = *(_QWORD *)(v0 + 1400);
  v4 = *(_QWORD *)(v0 + 1392);
  sub_221987C70(v0 + 16);
  swift_task_dealloc();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  sub_2219F9CE4(v1, 1);
  sub_22259726C();
  swift_bridgeObjectRelease();
  sub_222597530();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v5(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassUpdater.removeOrphanedPassesWith(flow:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2219F1AF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_2219F1B88;
  return v6();
}

uint64_t sub_2219F1B88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F1BF8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F1C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_2219F1C40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_222596CF0();
  v0[4] = v1;
  sub_2225968D0();
  v0[5] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_2219F1CF8;
  return sub_2225968F4();
}

uint64_t sub_2219F1CF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_2219F1D74()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F1EE4(void *a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  id v5;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v5 = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2219F1F3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = v0[2];
  v1 = v0[3];
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_2219F1FD4;
  return v6();
}

uint64_t sub_2219F1FD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F2048()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);

  swift_release();
  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F209C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);

  swift_release();
  swift_task_dealloc();
  v3 = (void *)sub_2225964BC();

  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F211C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573C160);
  v2[11] = swift_task_alloc();
  v3 = sub_222596678();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219F21B4()
{
  uint64_t v0;

  sub_2225968E8();
  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 128) = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219F2238()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C78);
  *(_QWORD *)(v0 + 144) = v2;
  *v1 = v0;
  v1[1] = sub_2219F22CC;
  return v4(v0 + 40, &unk_255741E18, 0, v2);
}

uint64_t sub_2219F22CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F2330()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_2219F234C()
{
  uint64_t v0;
  uint64_t *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  void (*v31)(uint64_t, uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;

  v1 = (uint64_t *)(v0 + 56);
  v2 = objc_msgSend((id)objc_opt_self(), sel_driver);
  v3 = objc_msgSend(v2, sel_homeManager);
  *(_QWORD *)(v0 + 168) = v3;

  v4 = objc_msgSend(v3, sel_homes);
  if (v4)
  {
    v5 = v4;
    sub_221917374(0, &qword_25573BF80);
    v6 = sub_222596E40();

  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 64) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255740D68);
  sub_22259690C();
  if (v7)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22259726C();
    sub_222596D50();
    swift_getErrorValue();
    sub_2225976BC();
    MEMORY[0x2276738F0](0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = *v1;
    if ((unint64_t)*v1 >> 62)
      goto LABEL_25;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v10; v10 = sub_2225973B0())
    {
      v11 = 0;
      v48 = v9 & 0xC000000000000001;
      v50 = *(_QWORD *)(v0 + 104);
      v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v46 = v9;
      v47 = v0;
      v45 = v10;
      while (1)
      {
        v14 = v48 ? (id)MEMORY[0x227674274](v11, v9) : *(id *)(v9 + 8 * v11 + 32);
        v15 = v14;
        if (__OFADD__(v11, 1))
          break;
        v16 = objc_msgSend(v14, sel_uuid);
        if (v16)
        {
          v17 = v16;
          sub_222596648();

          v18 = 0;
        }
        else
        {
          v18 = 1;
        }
        v19 = *(_QWORD *)(v0 + 96);
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v50 + 56))(*(_QWORD *)(v0 + 88), v18, 1, v19);
        sub_22259690C();
        sub_221917338(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_25573C160);
        v20 = v15;
        v21 = objc_msgSend(v15, sel_currentUser, v19);
        v22 = *(_QWORD *)(v0 + 120);
        if (v21)
        {
          v23 = v21;
          v24 = *(_QWORD *)(v0 + 112);
          v25 = *(_QWORD *)(v0 + 96);
          v26 = v12;
          v27 = objc_opt_self();
          v49 = v20;
          v28 = (void *)sub_222596630();
          v29 = objc_msgSend(v23, sel_uuid);
          sub_222596648();

          v30 = (void *)sub_222596630();
          v31 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v31(v24, v25);
          v32 = (void *)v27;
          v12 = v26;
          v33 = objc_msgSend(v32, sel_passSerialNumberWithHomeUUID_userUUID_, v28, v30);

          v34 = sub_222596CF0();
          v36 = v35;

          v31(v22, v25);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_221990A5C(0, v26[2] + 1, 1, v26);
          v38 = v12[2];
          v37 = v12[3];
          v0 = v47;
          v10 = v45;
          v13 = v11 + 1;
          if (v38 >= v37 >> 1)
            v12 = sub_221990A5C((_QWORD *)(v37 > 1), v38 + 1, 1, v12);
          v12[2] = v38 + 1;
          v39 = &v12[2 * v38];
          v39[4] = v34;
          v39[5] = v36;
          v9 = v46;
        }
        else
        {
          (*(void (**)(_QWORD, _QWORD))(v50 + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));

          v13 = v11 + 1;
        }
        ++v11;
        if (v13 == v10)
          goto LABEL_27;
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
    }
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_27:
    v40 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease_n();
    v42 = sub_2219B74B4((uint64_t)v12);
    *(_QWORD *)(v0 + 176) = v42;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = v40;
    v43 = swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v43;
    *(_QWORD *)(v43 + 16) = v42;
    *(_QWORD *)(v43 + 24) = v41;
    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v44;
    sub_22191CA68(&qword_255741D60, &qword_255741C78);
    *v44 = v0;
    v44[1] = sub_2219F2A54;
    return sub_222596DB0();
  }
}

uint64_t sub_2219F295C()
{
  return swift_task_switch();
}

uint64_t sub_2219F2970()
{
  uint64_t v0;

  sub_22259726C();
  sub_222596D50();
  swift_getErrorValue();
  sub_2225976BC();
  MEMORY[0x2276738F0](0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F2A54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_2219F2AE4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F2B40()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_22259726C();
  sub_222596D50();
  swift_getErrorValue();
  sub_2225976BC();
  MEMORY[0x2276738F0](0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F2C48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v3[5] = a2;
  v3[6] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741C38);
  v5 = swift_task_alloc();
  v6 = *a1;
  v3[7] = v5;
  v3[8] = v6;
  return swift_task_switch();
}

uint64_t sub_2219F2CB0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  id v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = objc_msgSend(*(id *)(v0 + 64), sel_serialNumber);
  v3 = sub_222596CF0();
  v5 = v4;

  LOBYTE(v1) = sub_2219EBD2C(v3, v5, v1);
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(void **)(v0 + 64);
    sub_22259726C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_description);
    sub_222596CF0();

    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    v9 = objc_msgSend(v7, sel_serialNumber);
    sub_222596CF0();

    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    if (qword_25573B3C8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 72) = static PassLibrary.shared;
    return swift_task_switch();
  }
}

uint64_t sub_2219F2E98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[8];
  v2 = swift_task_alloc();
  v0[10] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_2219F2F2C;
  return v5();
}

uint64_t sub_2219F2F2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F2F9C()
{
  return swift_task_switch();
}

uint64_t sub_2219F2FB0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = objc_msgSend(*(id *)(v0 + 64), sel_serialNumber);
  v3 = sub_222596CF0();
  v5 = v4;

  swift_beginAccess();
  sub_2219F653C(v3, v5, v1);
  sub_221917338(v1, &qword_255741C38);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3070()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassUpdater.setExpressSettingsFor(passSerialNumber:enableNFCExpress:enableUWB:authData:flow:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = v7;
  *(_QWORD *)(v8 + 32) = a5;
  *(_QWORD *)(v8 + 40) = a6;
  *(_BYTE *)(v8 + 89) = a4;
  *(_BYTE *)(v8 + 88) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2219F30D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 48);
  v9 = *(_OWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 89);
  v3 = *(_BYTE *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_BYTE *)(v6 + 24) = v3;
  *(_BYTE *)(v6 + 25) = v2;
  *(_OWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)&v9 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_2219F31A4;
  return ((uint64_t (*)(void))v9)();
}

uint64_t sub_2219F31A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F3214()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3248(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = a8;
  *(_QWORD *)(v8 + 32) = a5;
  *(_QWORD *)(v8 + 40) = a6;
  *(_BYTE *)(v8 + 105) = a4;
  *(_BYTE *)(v8 + 104) = a3;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2219F3270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v10 = *(_OWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 105);
  v4 = *(_BYTE *)(v0 + 104);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *(_BYTE *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 17) = v3;
  *(_OWORD *)(v5 + 24) = v10;
  *(_QWORD *)(v5 + 40) = v2;
  *(_QWORD *)(v5 + 48) = v1;
  sub_222596CF0();
  *(_QWORD *)(v0 + 72) = v6;
  sub_2225968D0();
  *(_QWORD *)(v0 + 80) = v7;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v8;
  *v8 = v0;
  v8[1] = sub_2219F3370;
  return sub_2225968F4();
}

uint64_t sub_2219F3370()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219F33FC(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_BYTE *)(v7 + 169) = a3;
  *(_BYTE *)(v7 + 168) = a2;
  return swift_task_switch();
}

uint64_t sub_2219F3420()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[5];
  v1 = v0[6];
  sub_22259726C();
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  v0[2] = v2;
  v0[3] = v1;
  sub_22191DDFC(v2, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741D28);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  if (qword_25573B3C8 != -1)
    swift_once();
  v0[9] = static PassLibrary.shared;
  if (qword_25573B3C0 != -1)
    swift_once();
  v3 = unk_2557685E0;
  v0[10] = qword_2557685D8;
  v0[11] = v3;
  return swift_task_switch();
}

uint64_t sub_2219F3628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v7 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE58);
  *v4 = v0;
  v4[1] = sub_2219F36E8;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v7)(v0 + 32, &unk_255741D30, v3, v5);
}

uint64_t sub_2219F36E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F375C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_2219F3778()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    objc_opt_self();
    v2 = swift_dynamicCastObjCClass();
    *(_QWORD *)(v0 + 128) = v2;
    if (v2)
    {
      *(_QWORD *)(v0 + 136) = static PassLibrary.shared;
      v3 = v1;
      return swift_task_switch();
    }
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000023;
    *(_QWORD *)(v6 + 8) = 0x80000002226221B0;
    *(_BYTE *)(v6 + 16) = 0;
    swift_willThrow();

  }
  else
  {
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v5 = 0xD000000000000028;
    *(_QWORD *)(v5 + 8) = 0x8000000222622180;
    *(_BYTE *)(v5 + 16) = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F38E0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_BYTE *)(v0 + 169);
  v6 = *(_BYTE *)(v0 + 168);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v7;
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v2;
  *(_BYTE *)(v7 + 32) = v6;
  *(_BYTE *)(v7 + 33) = v5;
  *(_QWORD *)(v7 + 40) = v4;
  *(_QWORD *)(v7 + 48) = v3;
  v10 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  *v8 = v0;
  v8[1] = sub_2219F39D4;
  return v10();
}

uint64_t sub_2219F39D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F3A44()
{
  return swift_task_switch();
}

uint64_t sub_2219F3A58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3A90()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F3ACC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3C6C(int a1, char a2, char a3, void *a4, void *a5, void *aBlock, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;

  *(_QWORD *)(v7 + 16) = a5;
  *(_QWORD *)(v7 + 24) = a7;
  *(_BYTE *)(v7 + 97) = a3;
  *(_BYTE *)(v7 + 96) = a2;
  *(_QWORD *)(v7 + 32) = _Block_copy(aBlock);
  *(_QWORD *)(v7 + 40) = sub_222596CF0();
  *(_QWORD *)(v7 + 48) = v10;
  if (a4)
  {
    v11 = a4;
    v12 = a5;
    swift_retain();
    a4 = (void *)sub_2225965A0();
    v14 = v13;

  }
  else
  {
    v15 = a5;
    swift_retain();
    v14 = 0xF000000000000000;
  }
  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = v14;
  return swift_task_switch();
}

uint64_t sub_2219F3D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v9 = *(_OWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 97);
  v5 = *(_BYTE *)(v0 + 96);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 25) = v4;
  *(_OWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v1;
  *(_QWORD *)&v9 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_2219F3DEC;
  return ((uint64_t (*)(void))v9)();
}

uint64_t sub_2219F3DEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F3E60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 32);

  swift_release();
  sub_22191DE10(v1, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F3EE0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v1 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);

  swift_release();
  sub_22191DE10(v3, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v5 = (void *)sub_2225964BC();

  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  _Block_release(*(const void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id PassUpdater.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  objc_super v4;

  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v1 = sub_222596738();
  v2 = MEMORY[0x24BEE4B00];
  v0[14] = v1;
  v0[15] = v2;
  swift_release();
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for PassUpdater();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t PassUpdater.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PassUpdater.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PassUpdater.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2219F40CC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_222596CF0();
  qword_2557685D8 = result;
  unk_2557685E0 = v1;
  return result;
}

uint64_t sub_2219F40F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[22] = a2;
  v3 = sub_222596678();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = type metadata accessor for HomePassData(0);
  v2[30] = swift_task_alloc();
  v2[31] = type metadata accessor for HomePassState(0);
  v2[32] = swift_task_alloc();
  return swift_task_switch();
}

id sub_2219F41CC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id result;
  void *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_createNIST256KeyPair);
  if (v2)
  {
    v3 = v2;
    v4 = sub_2225965A0();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v6;
  v56 = MEMORY[0x24BDCDDE8];
  sub_22259690C();
  sub_22191DE10(v4, v6);
  v7 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 272) = v7;
  v8 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v9 = objc_msgSend(v1, sel_publicKeyExternalRepresentationFromKeyPairExternalRepresentation_, v8, v56);

  if (v9)
  {
    v10 = sub_2225965A0();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  v57 = MEMORY[0x24BDCDDE8];
  sub_22259690C();
  sub_22191DE10(v10, v12);
  v64 = *(_QWORD *)(v0 + 48);
  v65 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 280) = v64;
  *(_QWORD *)(v0 + 288) = v65;
  v13 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v14 = objc_msgSend(v1, sel_publicKeyFromKeyPairExternalRepresentation_, v13, v57);

  if (v14)
  {
    v15 = sub_2225965A0();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 96) = v15;
  *(_QWORD *)(v0 + 104) = v17;
  v58 = MEMORY[0x24BDCDDE8];
  sub_22259690C();
  sub_22191DE10(v15, v17);
  v18 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 304) = v18;
  v19 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v20 = objc_msgSend(v1, sel_privateKeyFromKeyPairExternalRepresentation_, v19, v58);

  if (v20)
  {
    v21 = sub_2225965A0();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 128) = v21;
  *(_QWORD *)(v0 + 136) = v23;
  v59 = MEMORY[0x24BDCDDE8];
  sub_22259690C();
  v24 = *(_QWORD *)(v0 + 200);
  v62 = *(_QWORD *)(v0 + 192);
  v63 = *(_QWORD *)(v0 + 184);
  sub_22191DE10(v21, v23);
  v25 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 312) = v25;
  *(_QWORD *)(v0 + 320) = v26;
  v27 = (void *)objc_opt_self();
  v61 = v25;
  v28 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v29 = objc_msgSend(v27, sel_identifierForKey_, v28, v59, v26, v61);

  v30 = sub_2225965A0();
  v32 = v31;

  *(_QWORD *)(v0 + 328) = v30;
  *(_QWORD *)(v0 + 336) = v32;
  v33 = (void *)_s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
  v34 = objc_msgSend(v1, sel_identifier16BytesForKey_, v33);

  v35 = sub_2225965A0();
  v37 = v36;

  *(_QWORD *)(v0 + 344) = v35;
  *(_QWORD *)(v0 + 352) = v37;
  sub_22259666C();
  sub_22259666C();
  sub_22259666C();
  sub_22190D5DC(v64, v65);
  sub_22190D5DC(v30, v32);
  sub_22190D5DC(v35, v37);
  sub_22259666C();
  sub_222596624();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v24, v63);
  v38 = sub_2219F7324(4);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  swift_bridgeObjectRelease();
  v45 = MEMORY[0x227673D1C](v38, v40, v42, v44);
  v47 = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 360) = v45;
  *(_QWORD *)(v0 + 368) = v47;
  *(_QWORD *)(v0 + 376) = productClass();
  v48 = objc_msgSend((id)objc_opt_self(), sel_createGroupResolvingKey);
  if (v48)
  {
    v49 = v48;
    v50 = sub_2225965A0();
    v52 = v51;

  }
  else
  {
    v50 = 0;
    v52 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 160) = v50;
  *(_QWORD *)(v0 + 168) = v52;
  v60 = MEMORY[0x24BDCDDE8];
  sub_22259690C();
  sub_22191DE10(v50, v52);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 144);
  result = objc_msgSend((id)objc_opt_self(), sel_systemStore, v60);
  if (result)
  {
    v54 = result;
    *(_QWORD *)(v0 + 400) = objc_msgSend(result, sel_getPreferredHH2ControllerKey);

    if (qword_25573B390 != -1)
      swift_once();
    v55 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v55;
    *v55 = v0;
    v55[1] = sub_2219F49AC;
    return (id)ACWGKeyManager.getIssuerKeyPairExternalRepresentationFromKeychain()();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2219F49AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 416) = a1;
  *(_QWORD *)(v3 + 424) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F4A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = *(_QWORD *)(v0 + 416);
  v26 = *(_QWORD *)(v0 + 424);
  v23 = *(_QWORD *)(v0 + 392);
  v24 = *(_QWORD *)(v0 + 400);
  v21 = *(_QWORD *)(v0 + 376);
  v22 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 360);
  v20 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 344);
  v17 = *(_OWORD *)(v0 + 280);
  v18 = *(_OWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 256);
  v27 = *(_QWORD *)(v0 + 248);
  v5 = *(int **)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 32);
  v9(v4, *(_QWORD *)(v0 + 224), v8);
  v9(v4 + v5[5], v6, v8);
  v9(v4 + v5[6], v7, v8);
  v10 = v4 + v5[7];
  *(_OWORD *)v10 = v17;
  *(_OWORD *)(v10 + 16) = v18;
  *(_QWORD *)(v10 + 32) = v2;
  *(_QWORD *)(v10 + 40) = v1;
  v11 = (_QWORD *)(v4 + v5[8]);
  *v11 = v19;
  v11[1] = v20;
  *(_QWORD *)(v4 + v5[9]) = v21;
  *(_BYTE *)(v4 + v5[10]) = 1;
  *(_BYTE *)(v4 + v5[11]) = 0;
  *(_QWORD *)(v4 + v5[12]) = 0;
  *(_OWORD *)(v4 + v5[13]) = xmmword_222689F00;
  v12 = (_QWORD *)(v4 + v5[14]);
  *v12 = v22;
  v12[1] = v23;
  *(_QWORD *)(v4 + v5[15]) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v4 + v5[16]) = 1;
  *(_BYTE *)(v4 + v5[17]) = 1;
  *(_BYTE *)(v4 + v5[18]) = 1;
  *(_QWORD *)(v4 + v5[19]) = v24;
  v13 = (_QWORD *)(v4 + v5[20]);
  *v13 = v25;
  v13[1] = v26;
  *(_QWORD *)v3 = MEMORY[0x24BEE4B08];
  *(_DWORD *)(v3 + 8) = 256;
  *(_WORD *)(v3 + 12) = 256;
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 1;
  *(_WORD *)(v3 + 25) = 257;
  *(_QWORD *)(v3 + 32) = 6;
  *(_BYTE *)(v3 + 40) = 0;
  sub_2219175C8(v4, v3 + *(int *)(v27 + 60), type metadata accessor for HomePassData);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 432) = v14;
  *v14 = v0;
  v14[1] = sub_2219F4C38;
  v15 = *(_QWORD *)(v0 + 176);
  v14[7] = *(_QWORD *)(v0 + 256);
  v14[8] = v15;
  return swift_task_switch();
}

uint64_t sub_2219F4C38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(*(_QWORD *)v4 + 440) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    swift_bridgeObjectRelease();

  }
  return swift_task_switch();
}

uint64_t sub_2219F4CBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 288);
  v12 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 256);
  sub_22190D550(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  sub_22190D550(v5, v4);
  sub_22190D550(v7, v6);
  sub_22190D550(v1, v2);
  sub_22190D550(v3, v12);
  sub_22190D550(v8, v11);
  sub_2219173AC(v9, type metadata accessor for HomePassState);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F4DC8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 280);
  v9 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 336);
  sub_22190D550(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
  sub_22190D550(v5, v4);
  sub_22190D550(v7, v6);
  sub_22190D550(v1, v2);
  sub_22190D550(v3, v12);
  sub_22190D550(v8, v9);
  sub_2219173AC(v11, type metadata accessor for HomePassState);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F4EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_2219F4ED4()
{
  uint64_t v0;

  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219F4F3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C78);
  *(_QWORD *)(v0 + 56) = v2;
  *v1 = v0;
  v1[1] = sub_2219F4FD0;
  return v4(v0 + 16, &unk_255741E18, 0, v2);
}

uint64_t sub_2219F4FD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F5034()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2219F5050()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = v0[9];
  v1 = (_QWORD *)swift_task_alloc();
  v0[10] = v1;
  sub_22191CA68(&qword_255741D60, &qword_255741C78);
  *v1 = v0;
  v1[1] = sub_2219F50D0;
  return sub_222596DB0();
}

uint64_t sub_2219F50D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219F5144()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5150()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5184(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741C38);
  v4 = swift_task_alloc();
  v5 = *a1;
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch();
}

uint64_t sub_2219F51EC()
{
  uint64_t v0;

  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 64) = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219F5254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_2219F52E8;
  return v5();
}

uint64_t sub_2219F52E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F5358()
{
  return swift_task_switch();
}

uint64_t sub_2219F536C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = objc_msgSend(*(id *)(v0 + 56), sel_serialNumber);
  v3 = sub_222596CF0();
  v5 = v4;

  swift_beginAccess();
  sub_2219F653C(v3, v5, v1);
  sub_221917338(v1, &qword_255741C38);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F542C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_2219F5488()
{
  uint64_t v0;

  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = static PassLibrary.shared;
  return swift_task_switch();
}

uint64_t sub_2219F54F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C78);
  *(_QWORD *)(v0 + 72) = v2;
  *v1 = v0;
  v1[1] = sub_2219F5584;
  return v4(v0 + 16, &unk_255741E18, 0, v2);
}

uint64_t sub_2219F5584()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F55E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2219F5604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 88);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  v3 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  sub_22191CA68(&qword_255741D60, &qword_255741C78);
  *v4 = v0;
  v4[1] = sub_2219F56AC;
  return sub_222596DB0();
}

uint64_t sub_2219F56AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 112) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2219F572C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5738()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5774(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741C38);
  v6 = swift_task_alloc();
  v7 = *a1;
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch();
}

void sub_2219F57E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v1 = *(void **)(v0 + 72);
  v2 = (void *)sub_222596CD8();
  v3 = objc_msgSend(v1, sel_fieldForKey_, v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = objc_msgSend(v3, sel_value);

  if (!v4)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = sub_222596CF0();
  v9 = v8;

  if (v7 == v6 && v9 == v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_2225976E0();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
  }
  if (qword_25573B3C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 80) = static PassLibrary.shared;
  swift_task_switch();
}

uint64_t sub_2219F5948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[9];
  v2 = swift_task_alloc();
  v0[11] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_2219F59DC;
  return v5();
}

uint64_t sub_2219F59DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219F5A4C()
{
  return swift_task_switch();
}

uint64_t sub_2219F5A60()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = objc_msgSend(*(id *)(v0 + 72), sel_serialNumber);
  v3 = sub_222596CF0();
  v5 = v4;

  swift_beginAccess();
  sub_2219F653C(v3, v5, v1);
  sub_221917338(v1, &qword_255741C38);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5B20()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_2219F7738(a3, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))sub_2219F8C24);
  if (v3[2])
  {
    v4 = v3[4];
    v6 = v3[6];
    v5 = v3[7];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v7 + 24) = v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_2219F5C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = a1;
  if ((a1 != a5 || a2 != a6) && (sub_2225976E0() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return v6;
}

uint64_t sub_2219F5CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;

  v3[2] = a1;
  v3[3] = a2;
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_2219F5D18;
  v6[7] = a3;
  v6[8] = a2;
  return swift_task_switch();
}

uint64_t sub_2219F5D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)*v4;
  v9 = (_QWORD *)*v4;
  swift_task_dealloc();
  if (v3)
    return ((uint64_t (*)(void))v9[1])();
  v8[5] = a3;
  v8[6] = a2;
  v8[7] = a1;
  return swift_task_switch();
}

uint64_t sub_2219F5DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD **)(v0 + 16);
  *v3 = *(_QWORD *)(v0 + 56);
  v3[1] = v1;
  v3[2] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219F5DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2219F5B60(a1, a2, a3);
}

uint64_t PassUpdaterOperationResult.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x6465646461;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x64657461647075;
      break;
    case 2:
      result = 0x6465766F6D6572;
      break;
    case 3:
      result = 0x726F727265;
      break;
    default:
      result = sub_222597854();
      __break(1u);
      break;
  }
  return result;
}

unint64_t PassUpdaterOperationResult.init(rawValue:)(unint64_t a1)
{
  return sub_2219F78F8(a1);
}

unint64_t sub_2219F5E94@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_2219F78F8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2219F5EC4()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x6465646461;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x64657461647075;
      break;
    case 2:
      result = 0x6465766F6D6572;
      break;
    case 3:
      result = 0x726F727265;
      break;
    default:
      result = sub_222597854();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_2219F5F68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_221901E24;
  return v6();
}

uint64_t sub_2219F5FBC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_221901E24;
  return v7();
}

uint64_t sub_2219F6010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_222596EF4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_222596EE8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_221917338(a1, &qword_25573FD20);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_222596EA0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2219F615C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22198D4E4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v18 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_221969864();
      v11 = v18;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_2225967D4();
    v14 = MEMORY[0x24BE3E8A0];
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a3, v12 + *(_QWORD *)(v15 + 72) * v8, v13);
    sub_2219F6CB8(v8, v11, (uint64_t (*)(_QWORD))v14);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v17 = sub_2225967D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
}

uint64_t sub_2219F6298(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22198D5E4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_221969AC0();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_222596678();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_2219F6680(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2219F6370(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_22198D650(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_221969CF0();
    v7 = v10;
  }

  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v4);
  sub_2219F6920(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_2219F6430@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  double result;
  uint64_t v17;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_22198D4E4(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v17 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v17;
    }
    swift_bridgeObjectRelease();
    a3(*(_QWORD *)(v15 + 56) + 40 * v12, a5);
    sub_2219F6AD0(v12, v15);
    *v8 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

uint64_t sub_2219F653C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_22198D4E4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_22196ABB8();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for HomePassData(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_2219175C8(v12 + *(_QWORD *)(v14 + 72) * v8, a3, type metadata accessor for HomePassData);
    sub_2219F6CB8(v8, v11, type metadata accessor for HomePassData);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for HomePassData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

unint64_t sub_2219F6674(unint64_t a1, uint64_t a2)
{
  return sub_2219F6CB8(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE3E8A0]);
}

unint64_t sub_2219F6680(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_222596678();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_22259717C();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_2219018CC((unint64_t *)&qword_25573FF30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_222596C90();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2219F6920(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_22259717C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_2225970E0();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_BYTE *)(v18 + v3);
            v20 = (_BYTE *)(v18 + v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_2219F6AD0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_22259717C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2225978F0();
        swift_bridgeObjectRetain();
        sub_222596D38();
        v11 = sub_222597938();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2219F6CB8(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_22259717C();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_2225978F0();
        swift_bridgeObjectRetain();
        sub_222596D38();
        v11 = sub_222597938();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2219F6EC0(const void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v11[6];

  v2 = sub_222596D14();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_222596390();
  MEMORY[0x24BDAC7A8](v3);
  v11[3] = &type metadata for PassJSON;
  v11[4] = sub_2219F84C8();
  v11[5] = sub_2219F850C();
  v11[0] = swift_allocObject();
  memcpy((void *)(v11[0] + 16), a1, 0x1A8uLL);
  sub_2225963C0();
  swift_allocObject();
  sub_221987AE4((uint64_t)a1);
  sub_2225963B4();
  sub_222596384();
  sub_22259639C();
  __swift_project_boxed_opaque_existential_1(v11, (uint64_t)&type metadata for PassJSON);
  v4 = sub_2225963A8();
  v6 = v5;
  sub_222596D08();
  v7 = sub_222596CFC();
  if (v8)
    v9 = v7;
  else
    v9 = 0xD000000000000016;
  sub_22190D550(v4, v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v9;
}

uint64_t sub_2219F70A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a6;
  v35 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  v15 = (_QWORD *)*a5;
  v17 = sub_22198D4E4(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    v23 = (_QWORD *)*a5;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1(v24);
      return sub_221903314(&v33, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_221969208();
    goto LABEL_7;
  }
  sub_2219655AC(v20, a4 & 1);
  v26 = sub_22198D4E4(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_222597878();
    __break(1u);
    return result;
  }
  v17 = v26;
  v23 = (_QWORD *)*a5;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v34);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_2219F726C(v17, a2, a3, (uint64_t)v30, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2219F726C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a6;
  v21 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v14 = (_QWORD *)(a5[6] + 16 * a1);
  *v14 = a2;
  v14[1] = a3;
  result = sub_221903314(&v19, a5[7] + 40 * a1);
  v16 = a5[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a5[2] = v18;
  return result;
}

uint64_t sub_2219F7324(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_222596D44();
    return sub_222596DA4();
  }
  return result;
}

_QWORD *sub_2219F73AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v22 = v4;
    v5 = *(v3 - 1);
    v6 = *v3;
    v7 = *(v3 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = a2(v7, v5, v6);
    if (v9)
    {
      v12 = v8;
      v13 = v9;
      v14 = v10;
      v15 = v11;
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = v14;
      *(_QWORD *)(v16 + 24) = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_221991AF4(0, v22[2] + 1, 1, v22);
      v18 = v4[2];
      v17 = v4[3];
      if (v18 >= v17 >> 1)
        v4 = sub_221991AF4((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
      v4[2] = v18 + 1;
      v19 = &v4[4 * v18];
      v19[4] = v12;
      v19[5] = v13;
      v19[6] = &unk_255741D90;
      v19[7] = v16;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v3 += 3;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2219F753C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219F7560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255741B98 + dword_255741B98))(a1, v4);
}

uint64_t sub_2219F75D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *(_QWORD *)v10 = v2;
  *(_QWORD *)(v10 + 8) = sub_221901E24;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v9;
  *(_BYTE *)(v10 + 97) = v8;
  *(_QWORD *)(v10 + 24) = v4;
  *(_QWORD *)(v10 + 32) = v6;
  *(_BYTE *)(v10 + 96) = v5;
  *(_QWORD *)(v10 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2219F766C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 25);
  v7 = *(_QWORD *)(v1 + 32);
  v11 = *(_OWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *(_QWORD *)v9 = v2;
  *(_QWORD *)(v9 + 8) = sub_221901E24;
  *(_QWORD *)(v9 + 56) = v8;
  *(_OWORD *)(v9 + 40) = v11;
  *(_QWORD *)(v9 + 24) = v4;
  *(_QWORD *)(v9 + 32) = v7;
  *(_BYTE *)(v9 + 105) = v6;
  *(_BYTE *)(v9 + 104) = v5;
  *(_QWORD *)(v9 + 16) = a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for PassUpdater()
{
  return objc_opt_self();
}

_QWORD *sub_2219F7738(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *, uint64_t))
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v23 = v4;
    v5 = *(v3 - 1);
    v6 = *v3;
    v7 = *(v3 - 3);
    v8 = *(v3 - 2);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v6;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v10 = a2(v7, v8, &unk_255741DA0, v9);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    swift_release();
    if (v12)
    {
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v14;
      *(_QWORD *)(v17 + 24) = v16;
      swift_release();
      swift_bridgeObjectRelease();
      v4 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_221991AF4(0, v23[2] + 1, 1, v23);
      v19 = v4[2];
      v18 = v4[3];
      if (v19 >= v18 >> 1)
        v4 = sub_221991AF4((_QWORD *)(v18 > 1), v19 + 1, 1, v4);
      v4[2] = v19 + 1;
      v20 = &v4[4 * v19];
      v20[4] = v10;
      v20[5] = v12;
      v20[6] = &unk_255741DA8;
      v20[7] = v17;
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      v4 = v23;
    }
    v3 += 4;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_2219F78F8(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_2219F790C()
{
  unint64_t result;

  result = qword_255741BF0;
  if (!qword_255741BF0)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for PassUpdaterOperationResult, &type metadata for PassUpdaterOperationResult);
    atomic_store(result, (unint64_t *)&qword_255741BF0);
  }
  return result;
}

id sub_2219F7950(id result, void *a2, unsigned __int8 a3)
{
  id v3;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    v3 = result;
    result = a2;
  }
  return result;
}

void destroy for TargetPass(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_2219F79B4(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_2219F79B4(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2)
      return;

    a1 = a2;
  }

}

uint64_t initializeWithCopy for TargetPass(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_2219F7950(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t assignWithCopy for TargetPass(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_2219F7950(v4, v5, v6);
  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_2219F79B4(v7, v8, v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TargetPass(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_2219F79B4(v6, v7, v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetPass(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 51))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TargetPass(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 51) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetPass()
{
  return &type metadata for TargetPass;
}

uint64_t initializeBufferWithCopyOfBuffer for EndPoints(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_2219F7D70(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2219F7950);
}

void destroy for EndPoints(uint64_t a1)
{
  sub_2219F79B4(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t *assignWithCopy for EndPoints(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2219F7DCC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2219F7950, (void (*)(uint64_t, uint64_t, uint64_t))sub_2219F79B4);
}

uint64_t *assignWithTake for EndPoints(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2219F7E38(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2219F79B4);
}

uint64_t getEnumTagSinglePayload for EndPoints(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EndPoints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2219F7CF4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2219F7CFC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EndPoints()
{
  return &type metadata for EndPoints;
}

ValueMetadata *type metadata accessor for PassUpdaterOperationResult()
{
  return &type metadata for PassUpdaterOperationResult;
}

uint64_t initializeBufferWithCopyOfBuffer for UnexpectedUpdatePassError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_2219F7D70(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2219F7D30);
}

uint64_t sub_2219F7D30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for UnexpectedUpdatePassError(uint64_t a1)
{
  return sub_2219F7D58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2219F7D58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2219F7D70(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for UnexpectedUpdatePassError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2219F7DCC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_2219F7D30, (void (*)(uint64_t, uint64_t, uint64_t))sub_2219F7D58);
}

uint64_t *sub_2219F7DCC(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for UnexpectedUpdatePassError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_2219F7E38(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2219F7D58);
}

uint64_t *sub_2219F7E38(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnexpectedUpdatePassError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnexpectedUpdatePassError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2219F7F08(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_2219F7F20(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UnexpectedUpdatePassError()
{
  return &type metadata for UnexpectedUpdatePassError;
}

unint64_t sub_2219F7F48(uint64_t a1)
{
  unint64_t result;

  result = sub_2219344F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2219F7F6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_221901E24;
  return sub_2219EE7A0(a1, v4, v5, v7, v6);
}

uint64_t sub_2219F7FE4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_DWORD *)(a2 + 47) = *(_DWORD *)((char *)a1 + 47);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_2219F8004(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

id sub_2219F801C(uint64_t a1, uint64_t a2, void *a3, void *a4, unsigned __int8 a5)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_2219F7950(a3, a4, a5);
  }
  return result;
}

uint64_t sub_2219F8064(uint64_t a1)
{
  sub_2219F7950(*(id *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_2219F8094(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16));
  return a1;
}

void sub_2219F80D8(uint64_t a1, uint64_t a2, void *a3, void *a4, unsigned __int8 a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_2219F79B4(a3, a4, a5);
  }
}

uint64_t sub_2219F8120(uint64_t a1)
{
  sub_2219F79B4(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_2219F8150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  int *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  v1 = type metadata accessor for HomePassState(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 60);
  v6 = sub_222596678();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (int *)type metadata accessor for HomePassData(0);
  v7(v5 + v8[5], v6);
  v7(v5 + v8[6], v6);
  v9 = v5 + v8[7];
  sub_22190D550(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
  sub_22190D550(*(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24));
  sub_22190D550(*(_QWORD *)(v9 + 32), *(_QWORD *)(v9 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22190D550(*(_QWORD *)(v5 + v8[14]), *(_QWORD *)(v5 + v8[14] + 8));
  swift_bridgeObjectRelease();

  v10 = (uint64_t *)(v5 + v8[20]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_22190D550(*v10, v11);
  swift_bridgeObjectRelease();
  sub_2219F79B4(*(void **)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(void **)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24), *(_BYTE *)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 32));
  return swift_deallocObject();
}

uint64_t sub_2219F82C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v8 = *(_QWORD *)(type metadata accessor for HomePassState(0) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v3 + v9;
  v11 = v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_221901E24;
  v12[55] = a1;
  v13 = (_QWORD *)swift_task_alloc();
  v12[56] = v13;
  *v13 = v12;
  v13[1] = sub_2219F095C;
  return sub_2219F0C98((uint64_t)(v12 + 2), a2, v10, v11, a3);
}

uint64_t sub_2219F8390(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_221901E24;
  return sub_2219FA868(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_2219F8450(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_221901E24;
  return sub_2219FDAFC(a1, v4, v5, v7, v6);
}

unint64_t sub_2219F84C8()
{
  unint64_t result;

  result = qword_255741C80;
  if (!qword_255741C80)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for PassJSON, &type metadata for PassJSON);
    atomic_store(result, (unint64_t *)&qword_255741C80);
  }
  return result;
}

unint64_t sub_2219F850C()
{
  unint64_t result;

  result = qword_255741C88;
  if (!qword_255741C88)
  {
    result = MEMORY[0x227676F2C](&protocol conformance descriptor for PassJSON, &type metadata for PassJSON);
    atomic_store(result, &qword_255741C88);
  }
  return result;
}

uint64_t sub_2219F8550()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2219F8638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 25);
  v5 = *(void **)(v0 + 32);
  v6 = *(void **)(v0 + 40);
  v8 = *(void **)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_221901E24;
  return ((uint64_t (*)(int, char, char, void *, void *, void *, uint64_t))((char *)&dword_255741C98
                                                                                   + dword_255741C98))(v2, v3, v4, v5, v6, v8, v7);
}

uint64_t sub_2219F86D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255741CB8 + dword_255741CB8))(a1, v4);
}

uint64_t sub_2219F8748()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219F877C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_221901E24;
  return ((uint64_t (*)(void *, void *, uint64_t))((char *)&dword_255741CD0 + dword_255741CD0))(v2, v3, v4);
}

uint64_t sub_2219F87F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_221901E24;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t objectdestroy_60Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2219F8898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  const void *v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 25);
  v5 = *(void **)(v0 + 32);
  v6 = *(void **)(v0 + 40);
  v8 = *(const void **)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_221900360;
  return ((uint64_t (*)(uint64_t, char, char, void *, void *, const void *, uint64_t))((char *)&dword_255741CF8
                                                                                             + dword_255741CF8))(v2, v3, v4, v5, v6, v8, v7);
}

uint64_t sub_2219F8938()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 17);
  v8 = *(_OWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_221901E24;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 64) = v4;
  *(_OWORD *)(v6 + 40) = v8;
  *(_BYTE *)(v6 + 169) = v3;
  *(_BYTE *)(v6 + 168) = v2;
  return swift_task_switch();
}

uint64_t sub_2219F89C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 33))
    v6 = 256;
  else
    v6 = 0;
  v7 = v6 | *(unsigned __int8 *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_221901E24;
  return sub_2219FDF0C(a1, v4, v5, v7, v9, v8);
}

uint64_t sub_2219F8A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_221901E24;
  return sub_2219F211C(a1, v1);
}

uint64_t sub_2219F8AB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_221901E24;
  return sub_2219F2C48(a1, v5, v4);
}

uint64_t sub_2219F8B10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_BYTE *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_221901E24;
  return sub_2219ED4C8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2219F8B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 33);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_221900360;
  return sub_2219CD4C4(a1, v4, v5, v6, v7);
}

uint64_t sub_2219F8C10(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 6)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2219F8C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2219F5C20(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_2219F8C2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_221901E24;
  return sub_2219F5184(a1, v1);
}

uint64_t sub_2219F8C7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221901E24;
  return sub_2219FD7F8(a1, v4);
}

uint64_t sub_2219F8CD4(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_221901E24;
  return sub_2219F5774(a1, v4, v5, v6);
}

unint64_t destroy for ExpectedUpdatePassError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13HomeKitDaemon23ExpectedUpdatePassErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ExpectedUpdatePassError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExpectedUpdatePassError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpectedUpdatePassError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ExpectedUpdatePassError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 5;
  }
  return result;
}

_QWORD *sub_2219F8F48(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpectedUpdatePassError()
{
  return &type metadata for ExpectedUpdatePassError;
}

void destroy for TargetPassState(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    sub_2219F79B4(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  }
}

uint64_t initializeWithCopy for TargetPassState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(void **)(a2 + 16);
    v6 = *(void **)(a2 + 24);
    v7 = *(_BYTE *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_2219F7950(v5, v6, v7);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  }
  return a1;
}

uint64_t assignWithCopy for TargetPassState(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v11 = (void *)*((_QWORD *)a2 + 2);
      v12 = (void *)*((_QWORD *)a2 + 3);
      v13 = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      sub_2219F7950(v11, v12, v13);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v12;
      *(_BYTE *)(a1 + 32) = v13;
      goto LABEL_6;
    }
LABEL_8:
    v14 = *a2;
    v15 = a2[1];
    v16 = a2[2];
    *(_DWORD *)(a1 + 47) = *(_DWORD *)((char *)a2 + 47);
    *(_OWORD *)(a1 + 16) = v15;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)a1 = v14;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2219F79B4(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (void *)*((_QWORD *)a2 + 2);
  v6 = (void *)*((_QWORD *)a2 + 3);
  v7 = *((_BYTE *)a2 + 32);
  sub_2219F7950(v5, v6, v7);
  v8 = *(void **)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2219F79B4(v8, v9, v10);
LABEL_6:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)((char *)a2 + 49);
  return a1;
}

uint64_t assignWithTake for TargetPassState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_2219F79B4(*(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
LABEL_5:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_2219F79B4(v6, v7, v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TargetPassState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 51))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TargetPassState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 47) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

double sub_2219F92E8(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 50) = 0;
    *(_WORD *)(a1 + 48) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TargetPassState()
{
  return &type metadata for TargetPassState;
}

unint64_t sub_2219F9330(uint64_t a1)
{
  unint64_t result;

  result = sub_2219D2518();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t static PassFileUtilities.createPassDirectory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  void *v37;
  void *v38;
  unsigned __int8 v39;
  id v40;
  id v41;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50[3];

  v46 = a1;
  v50[2] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2225964E0();
  v48 = *(_QWORD *)(v1 - 8);
  v49 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_222596540();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v43 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  sub_2219F97E0();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v20 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v21 = objc_msgSend(v20, sel_resourceURL);

  if (v21)
  {
    sub_22259651C();

    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v16, 0, 1, v4);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v16, 1, 1, v4);
  }
  sub_2219F981C((uint64_t)v16, (uint64_t)v18);
  sub_22199BE88((uint64_t)v18, (uint64_t)v10);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v23(v10, 1, v4) == 1)
  {
    sub_22199BED0((uint64_t)v10);
    v22(v13, 1, 1, v4);
LABEL_7:
    sub_22199BED0((uint64_t)v13);
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v31 = 0xD000000000000029;
    *(_QWORD *)(v31 + 8) = 0x8000000222622360;
    *(_BYTE *)(v31 + 16) = 0;
    swift_willThrow();
    return sub_22199BED0((uint64_t)v18);
  }
  v50[0] = (id)sub_222596CF0();
  v50[1] = v24;
  v25 = *MEMORY[0x24BDCD7A0];
  v44 = v22;
  v26 = v18;
  v27 = v48;
  v28 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v3, v25, v49);
  sub_2219344B4();
  sub_222596534();
  v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  v18 = v26;
  v29(v3, v28);
  swift_bridgeObjectRelease();
  v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v10, v4);
  v44(v13, 0, 1, v4);
  if (v23(v13, 1, v4) == 1)
    goto LABEL_7;
  v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v47, v13, v4);
  v33 = v45;
  v34 = v46;
  sub_2219F9AC0(v46);
  if (v33)
  {
    v35 = v32;
  }
  else
  {
    v36 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v37 = (void *)sub_222596504();
    v38 = (void *)sub_222596504();
    v50[0] = 0;
    v39 = objc_msgSend(v36, sel_copyItemAtURL_toURL_error_, v37, v38, v50);

    if ((v39 & 1) != 0)
    {
      v40 = v50[0];
    }
    else
    {
      v41 = v50[0];
      sub_2225964C8();

      swift_willThrow();
      sub_2219F9CE4(v34, 1);
      swift_willThrow();
      v30((char *)v34, v4);
    }
    v35 = v47;
  }
  v30(v35, v4);
  return sub_22199BED0((uint64_t)v18);
}

unint64_t sub_2219F97E0()
{
  unint64_t result;

  result = qword_255741DE8;
  if (!qword_255741DE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255741DE8);
  }
  return result;
}

uint64_t sub_2219F981C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573F980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static PassFileUtilities.writePassJSON(passJSON:to:)(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  _BYTE __dst[424];

  sub_2225963C0();
  swift_allocObject();
  sub_2225963B4();
  memcpy(__dst, a1, sizeof(__dst));
  sub_2219F850C();
  v3 = sub_2225963A8();
  v5 = v4;
  result = swift_release();
  if (!v1)
  {
    sub_2225965B8();
    return sub_22190D550(v3, v5);
  }
  return result;
}

id static PassFileUtilities.zipPassDirectory(passDirectoryURL:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_222596540();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_222596CF0();
  sub_222596510();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(objc_allocWithZone((Class)HMDFileManager), sel_init);
  v7 = (void *)sub_222596504();
  v8 = (void *)sub_222596504();
  v13[0] = 0;
  v9 = objc_msgSend(v6, sel_zipItemAtURL_toURL_error_, v7, v8, v13);

  v10 = v13[0];
  if ((v9 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
    return v10;
  }
  else
  {
    v12 = v13[0];
    sub_2225964C8();

    swift_willThrow();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2219F9AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_2225964E0();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_222596678();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_222596540();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = HMDCreateHomeKitDaemonCacheDirectory();
  if (v12)
  {
    v13 = v12;
    sub_222596CF0();
    v21[0] = v2;
    v21[1] = a1;

    sub_2225964F8();
    swift_bridgeObjectRelease();
    sub_22259666C();
    v14 = sub_222596624();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v24 = v14;
    v25 = v16;
    v17 = v26;
    v18 = v21[0];
    (*(void (**)(char *, _QWORD, _QWORD))(v26 + 104))(v4, *MEMORY[0x24BDCD7A0], v21[0]);
    sub_2219344B4();
    sub_222596534();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v18);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v11, v23);
  }
  else
  {
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v20 = 0xD00000000000002CLL;
    *(_QWORD *)(v20 + 8) = 0x80000002226223B0;
    *(_BYTE *)(v20 + 16) = 0;
    return swift_willThrow();
  }
}

void sub_2219F9CE4(uint64_t a1, char a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  void *v8;
  id v9[4];

  v9[3] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v4 = (void *)sub_222596504();
  v9[0] = 0;
  v5 = objc_msgSend(v3, sel_removeItemAtURL_error_, v4, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    v8 = (void *)sub_2225964C8();

    swift_willThrow();
    if ((a2 & 1) != 0)
    {
      v9[0] = 0;
      v9[1] = (id)0xE000000000000000;
      sub_22259726C();
      sub_222596D50();
      sub_222596540();
      sub_2219F9EEC();
      sub_222597530();
      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      swift_getErrorValue();
      sub_2225976BC();
      sub_2225968E8();

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
}

ValueMetadata *type metadata accessor for PassFileUtilities()
{
  return &type metadata for PassFileUtilities;
}

unint64_t sub_2219F9EEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25573CDC0;
  if (!qword_25573CDC0)
  {
    v1 = sub_222596540();
    result = MEMORY[0x227676F2C](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, &qword_25573CDC0);
  }
  return result;
}

void sub_2219F9F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_2225971A0();
    sub_221917374(0, (unint64_t *)&qword_25573CE40);
    sub_221994504((unint64_t *)&qword_25573CE48, (unint64_t *)&qword_25573CE40);
    sub_222596FC0();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v12 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_2225971F4())
      goto LABEL_31;
    sub_221917374(0, (unint64_t *)&qword_25573CE40);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v10 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_31;
LABEL_10:
    v11 = objc_msgSend(v10, sel_paymentType);

    if (v11 == (id)1004)
      goto LABEL_31;
  }
  if (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v3 << 6);
LABEL_9:
    v10 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v10)
      goto LABEL_31;
    goto LABEL_10;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16)
      goto LABEL_31;
    v14 = *(_QWORD *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      v3 = v12 + 2;
      if (v12 + 2 >= v16)
        goto LABEL_31;
      v14 = *(_QWORD *)(v17 + 8 * v3);
      if (!v14)
      {
        v3 = v12 + 3;
        if (v12 + 3 >= v16)
          goto LABEL_31;
        v14 = *(_QWORD *)(v17 + 8 * v3);
        if (!v14)
        {
          v3 = v12 + 4;
          if (v12 + 4 >= v16)
            goto LABEL_31;
          v14 = *(_QWORD *)(v17 + 8 * v3);
          if (!v14)
          {
            v3 = v12 + 5;
            if (v12 + 5 >= v16)
              goto LABEL_31;
            v14 = *(_QWORD *)(v17 + 8 * v3);
            if (!v14)
            {
              v15 = v12 + 6;
              while (v16 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_22193D780();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v4 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t *PassLibrary.shared.unsafeMutableAddressor()
{
  if (qword_25573B3C8 != -1)
    swift_once();
  return &static PassLibrary.shared;
}

uint64_t static CanAddHomeKeyToWallet.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  _BOOL4 v5;
  unsigned int v6;
  int v7;

  v5 = (a4 & 1) == 0 && a1 == a3;
  v6 = a4 & 1;
  if (a3)
    v7 = a4 & 1;
  else
    v7 = 0;
  if (a3)
    v6 = 0;
  if (a1)
    v6 = v7;
  if ((a2 & 1) != 0)
    return v6;
  else
    return v5;
}

uint64_t sub_2219FA2A0(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

id sub_2219FA2B4()
{
  objc_class *v0;
  _QWORD *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for PassLibrary();
  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v1[14] = sub_222596738();
  swift_release();
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  static PassLibrary.shared = (uint64_t)result;
  return result;
}

id PassLibrary.__allocating_init()()
{
  objc_class *v0;
  _QWORD *v1;
  objc_super v3;

  v1 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v1[14] = sub_222596738();
  swift_release();
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t static PassLibrary.shared.getter()
{
  if (qword_25573B3C8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t PassLibrary.configureAndAddOrUpdatePass(typeIdentifier:serialNumber:homeSPIClientIdentifier:uaDescriptor:aliroDescriptor:expressSettings:makePass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v9 + 536) = v8;
  *(_QWORD *)(v9 + 528) = v13;
  *(_QWORD *)(v9 + 520) = v12;
  *(_WORD *)(v9 + 568) = v11;
  *(_QWORD *)(v9 + 504) = a7;
  *(_QWORD *)(v9 + 512) = a8;
  *(_QWORD *)(v9 + 488) = a5;
  *(_QWORD *)(v9 + 496) = a6;
  *(_QWORD *)(v9 + 472) = a3;
  *(_QWORD *)(v9 + 480) = a4;
  *(_QWORD *)(v9 + 456) = a1;
  *(_QWORD *)(v9 + 464) = a2;
  return swift_task_switch();
}

uint64_t sub_2219FA478()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 536);
  v2 = *(_WORD *)(v0 + 568);
  v3 = *(_QWORD *)(v0 + 512);
  v5 = *(_QWORD *)(v0 + 480);
  v4 = *(_QWORD *)(v0 + 488);
  v11 = *(_OWORD *)(v0 + 464);
  v12 = *(_OWORD *)(v0 + 496);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 544) = v6;
  v7 = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v6 + 16) = v11;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v1;
  *(_OWORD *)(v6 + 56) = v12;
  *(_QWORD *)(v6 + 72) = v3;
  *(_OWORD *)(v6 + 80) = v7;
  *(_WORD *)(v6 + 96) = v2;
  *(_QWORD *)&v12 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C58);
  *v8 = v0;
  v8[1] = sub_2219FA574;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v12)(v0 + 16, &unk_255741C50, v6, v9);
}

uint64_t sub_2219FA574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 560) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FA5D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v1 = *(_QWORD *)(v0 + 456);
  v29 = *(_OWORD *)(v0 + 16);
  v27 = *(_OWORD *)(v0 + 48);
  v28 = *(_OWORD *)(v0 + 32);
  v25 = *(_OWORD *)(v0 + 80);
  v26 = *(_OWORD *)(v0 + 64);
  v23 = *(_OWORD *)(v0 + 112);
  v24 = *(_OWORD *)(v0 + 96);
  v21 = *(_OWORD *)(v0 + 144);
  v22 = *(_OWORD *)(v0 + 128);
  v20 = *(_OWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 176);
  v39 = *(_OWORD *)(v0 + 216);
  v40 = *(_OWORD *)(v0 + 200);
  v38 = *(_OWORD *)(v0 + 232);
  v36 = *(_QWORD *)(v0 + 256);
  v37 = *(_QWORD *)(v0 + 248);
  v34 = *(_OWORD *)(v0 + 288);
  v35 = *(_OWORD *)(v0 + 272);
  v32 = *(_QWORD *)(v0 + 312);
  v33 = *(_QWORD *)(v0 + 304);
  v30 = *(_OWORD *)(v0 + 344);
  v31 = *(_OWORD *)(v0 + 328);
  v18 = *(_OWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 376);
  v16 = *(_QWORD *)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 408);
  v15 = *(_QWORD *)(v0 + 400);
  v13 = *(_OWORD *)(v0 + 424);
  v2 = *(_BYTE *)(v0 + 264) & 1;
  v3 = *(_BYTE *)(v0 + 320) & 1;
  v4 = *(_BYTE *)(v0 + 321) & 1;
  v5 = *(_BYTE *)(v0 + 392) & 1;
  v6 = *(_QWORD *)(v0 + 440);
  v12 = *(_QWORD *)(v0 + 448);
  v7 = *(_BYTE *)(v0 + 416) & 1;
  v8 = *(_BYTE *)(v0 + 417) & 1;
  v9 = *(_BYTE *)(v0 + 418) & 1;
  v11 = *(_OWORD *)(v0 + 184);
  swift_task_dealloc();
  *(_OWORD *)v1 = v29;
  *(_OWORD *)(v1 + 16) = v28;
  *(_OWORD *)(v1 + 32) = v27;
  *(_OWORD *)(v1 + 48) = v26;
  *(_OWORD *)(v1 + 64) = v25;
  *(_OWORD *)(v1 + 80) = v24;
  *(_OWORD *)(v1 + 96) = v23;
  *(_OWORD *)(v1 + 112) = v22;
  *(_OWORD *)(v1 + 128) = v21;
  *(_OWORD *)(v1 + 144) = v20;
  *(_QWORD *)(v1 + 160) = v19;
  *(_OWORD *)(v1 + 168) = v11;
  *(_OWORD *)(v1 + 184) = v40;
  *(_OWORD *)(v1 + 200) = v39;
  *(_OWORD *)(v1 + 216) = v38;
  *(_QWORD *)(v1 + 232) = v37;
  *(_QWORD *)(v1 + 240) = v36;
  *(_BYTE *)(v1 + 248) = v2;
  *(_OWORD *)(v1 + 256) = v35;
  *(_OWORD *)(v1 + 272) = v34;
  *(_QWORD *)(v1 + 288) = v33;
  *(_QWORD *)(v1 + 296) = v32;
  *(_BYTE *)(v1 + 304) = v3;
  *(_BYTE *)(v1 + 305) = v4;
  *(_OWORD *)(v1 + 312) = v31;
  *(_OWORD *)(v1 + 328) = v30;
  *(_OWORD *)(v1 + 344) = v18;
  *(_QWORD *)(v1 + 360) = v17;
  *(_QWORD *)(v1 + 368) = v16;
  *(_BYTE *)(v1 + 376) = v5;
  *(_QWORD *)(v1 + 384) = v15;
  *(_QWORD *)(v1 + 392) = v14;
  *(_BYTE *)(v1 + 400) = v7;
  *(_BYTE *)(v1 + 401) = v8;
  *(_BYTE *)(v1 + 402) = v9;
  *(_OWORD *)(v1 + 408) = v13;
  *(_QWORD *)(v1 + 424) = v6;
  *(_QWORD *)(v1 + 432) = v12;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FA834()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FA868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  __int16 v13;

  *(_WORD *)(v8 + 1666) = v13;
  *(_QWORD *)(v8 + 1480) = v12;
  *(_OWORD *)(v8 + 1464) = v11;
  *(_QWORD *)(v8 + 1456) = a8;
  *(_QWORD *)(v8 + 1448) = a7;
  *(_QWORD *)(v8 + 1440) = a6;
  *(_QWORD *)(v8 + 1432) = a5;
  *(_QWORD *)(v8 + 1424) = a4;
  *(_QWORD *)(v8 + 1416) = a3;
  *(_QWORD *)(v8 + 1408) = a2;
  *(_QWORD *)(v8 + 1400) = a1;
  v9 = sub_222596540();
  *(_QWORD *)(v8 + 1488) = v9;
  *(_QWORD *)(v8 + 1496) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 1504) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2219FA930()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v0[173] = v1;
  v5 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();
  v0[189] = 0;

  v0[190] = v0[164];
  v2 = (void *)objc_opt_self();
  v3 = sub_222596CD8();
  v0[191] = v3;
  v0[15] = v0 + 174;
  v0[10] = v0;
  v0[11] = sub_2219FAB38;
  v0[144] = swift_continuation_init();
  v0[140] = MEMORY[0x24BDAC760];
  v0[141] = 0x40000000;
  v0[142] = sub_2219FC8C4;
  v0[143] = &block_descriptor_34;
  objc_msgSend(v2, sel_acquireAssertionOfType_withReason_completion_, 1, v3, v0 + 140, v5);
  return swift_continuation_await();
}

uint64_t sub_2219FAB38()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 1536) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_2219FABDC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  __int16 v13;
  void *v14;
  uint64_t v15;
  __int16 v17;
  __int16 v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v1 = *(void **)(v0 + 1528);
  v2 = *(void **)(v0 + 1392);
  *(_QWORD *)(v0 + 1544) = v2;

  if (!v2)
  {
    v14 = *(void **)(v0 + 1520);
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_BYTE *)(v15 + 16) = 3;
    swift_willThrow();
    goto LABEL_6;
  }
  v3 = *(void **)(v0 + 1520);
  v4 = v2;
  v5 = (void *)sub_222596CD8();
  v6 = (void *)sub_222596CD8();
  v7 = objc_msgSend(v3, sel_passWithPassTypeIdentifier_serialNumber_, v5, v6);
  *(_QWORD *)(v0 + 1552) = v7;

  sub_22259726C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1344) = v7;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE58);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init);
  *(_QWORD *)(v0 + 1560) = v9;
  if (v8)
  {
    v10 = v9;
    v11 = *(_QWORD *)(v0 + 1512);
    v12 = v8;
    v13 = sub_2219FED40(v12);
    if (v11)
    {
      v14 = *(void **)(v0 + 1520);

      objc_msgSend(v4, sel_invalidate);
LABEL_6:

      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v18 = v13;

    v17 = v18 & 0x101;
  }
  else
  {
    v17 = 2;
  }
  *(_WORD *)(v0 + 1668) = v17;
  v25 = *(void **)(v0 + 1520);
  v19 = *(void **)(v0 + 1464);
  v20 = *(void **)(v0 + 1456);
  sub_22259726C();
  swift_bridgeObjectRelease();
  *(_WORD *)(v0 + 1664) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741ED8);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  sub_22259726C();
  sub_222596D50();
  sub_222596D50();
  sub_222596D50();
  sub_222596678();
  sub_2219018CC((unint64_t *)&qword_25573F0E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_222597530();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  *(_QWORD *)(v0 + 1320) = v20;
  v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741EE0);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_222596D50();
  *(_QWORD *)(v0 + 1304) = v19;
  v22 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741EE8);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v23 = sub_222596CD8();
  *(_QWORD *)(v0 + 1568) = v23;
  v24 = sub_222596630();
  *(_QWORD *)(v0 + 1576) = v24;
  *(_QWORD *)(v0 + 248) = v0 + 1280;
  *(_QWORD *)(v0 + 208) = v0;
  *(_QWORD *)(v0 + 216) = sub_2219FB13C;
  *(_QWORD *)(v0 + 1232) = swift_continuation_init();
  *(_QWORD *)(v0 + 1200) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 1208) = 0x40000000;
  *(_QWORD *)(v0 + 1216) = sub_2219FC964;
  *(_QWORD *)(v0 + 1224) = &block_descriptor_35_0;
  objc_msgSend(v25, sel_configureHomeAuxiliaryCapabilitiesForSerialNumber_homeIdentifier_fromUnifiedAccessDescriptor_andAliroDescriptor_completion_, v23, v24, v21, v22, v0 + 1200);
  return swift_continuation_await();
}

uint64_t sub_2219FB13C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 1584) = *(_QWORD *)(*(_QWORD *)v0 + 240);
  return swift_task_switch();
}

uint64_t sub_2219FB1E0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (void *)v0[197];
  v2 = (void *)v0[196];
  v3 = (int *)v0[184];
  v4 = v0[160];
  v0[199] = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v5 = *v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[200] = v6;
  *v6 = v0;
  v6[1] = sub_2219FB2A4;
  return ((uint64_t (*)(_QWORD *, _QWORD, uint64_t))((char *)v3 + v5))(v0 + 34, v0[188], v4);
}

uint64_t sub_2219FB2A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;

  v2 = *v1;
  v3 = *v1 + 424;
  *(_QWORD *)(v2 + 1608) = v0;
  v57 = *(_QWORD *)(v2 + 280);
  v58 = *(_QWORD *)(v2 + 272);
  v55 = *(_QWORD *)(v2 + 296);
  v56 = *(_QWORD *)(v2 + 288);
  v53 = *(_QWORD *)(v2 + 312);
  v54 = *(_QWORD *)(v2 + 304);
  v50 = *(_QWORD *)(v2 + 328);
  v51 = *(_QWORD *)(v2 + 320);
  v42 = *(_QWORD *)(v2 + 344);
  v43 = *(_QWORD *)(v2 + 336);
  v40 = *(_QWORD *)(v2 + 360);
  v41 = *(_QWORD *)(v2 + 352);
  v38 = *(_QWORD *)(v2 + 376);
  v39 = *(_QWORD *)(v2 + 368);
  v36 = *(_QWORD *)(v2 + 392);
  v37 = *(_QWORD *)(v2 + 384);
  v34 = *(_QWORD *)(v2 + 408);
  v35 = *(_QWORD *)(v2 + 400);
  v33 = *(_QWORD *)(v2 + 416);
  v59 = *(_OWORD *)v3;
  v52 = *(_BYTE *)(v3 + 80);
  v48 = *(_BYTE *)(v3 + 137);
  v49 = *(_BYTE *)(v3 + 136);
  v46 = *(_BYTE *)(v3 + 232);
  v47 = *(_BYTE *)(v3 + 208);
  v44 = *(_BYTE *)(v3 + 234);
  v45 = *(_BYTE *)(v3 + 233);
  v5 = *(_QWORD *)(v2 + 440);
  v4 = *(_QWORD *)(v2 + 448);
  v7 = *(_QWORD *)(v2 + 456);
  v6 = *(_QWORD *)(v2 + 464);
  v9 = *(_QWORD *)(v2 + 472);
  v8 = *(_QWORD *)(v2 + 480);
  v10 = *(_QWORD *)(v2 + 488);
  v11 = *(_QWORD *)(v2 + 496);
  v13 = *(_QWORD *)(v2 + 520);
  v14 = *(_QWORD *)(v2 + 512);
  v15 = *(_QWORD *)(v2 + 528);
  v16 = *(_QWORD *)(v2 + 536);
  v17 = *(_QWORD *)(v2 + 544);
  v18 = *(_QWORD *)(v2 + 552);
  v19 = *(_QWORD *)(v2 + 568);
  v20 = *(_QWORD *)(v2 + 576);
  v21 = *(_QWORD *)(v2 + 584);
  v22 = *(_QWORD *)(v2 + 592);
  v23 = *(_QWORD *)(v2 + 600);
  v24 = *(_QWORD *)(v2 + 608);
  v25 = *(_QWORD *)(v2 + 616);
  v26 = *(_QWORD *)(v2 + 624);
  v27 = *(_QWORD *)(v2 + 640);
  v28 = *(_QWORD *)(v2 + 648);
  v29 = *(_QWORD *)(v2 + 664);
  v30 = *(_QWORD *)(v2 + 672);
  v31 = *(_QWORD *)(v2 + 680);
  v32 = *(_QWORD *)(v2 + 688);
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v2 + 696) = v58;
    *(_QWORD *)(v2 + 704) = v57;
    *(_QWORD *)(v2 + 712) = v56;
    *(_QWORD *)(v2 + 720) = v55;
    *(_QWORD *)(v2 + 728) = v54;
    *(_QWORD *)(v2 + 736) = v53;
    *(_QWORD *)(v2 + 744) = v51;
    *(_QWORD *)(v2 + 752) = v50;
    *(_QWORD *)(v2 + 760) = v43;
    *(_QWORD *)(v2 + 768) = v42;
    *(_QWORD *)(v2 + 776) = v41;
    *(_QWORD *)(v2 + 784) = v40;
    *(_QWORD *)(v2 + 792) = v39;
    *(_QWORD *)(v2 + 800) = v38;
    *(_QWORD *)(v2 + 808) = v37;
    *(_QWORD *)(v2 + 816) = v36;
    *(_QWORD *)(v2 + 824) = v35;
    *(_QWORD *)(v2 + 832) = v34;
    *(_QWORD *)(v2 + 840) = v33;
    *(_QWORD *)(v2 + 864) = v5;
    *(_QWORD *)(v2 + 872) = v4;
    *(_QWORD *)(v2 + 880) = v7;
    *(_QWORD *)(v2 + 888) = v6;
    *(_QWORD *)(v2 + 896) = v9;
    *(_QWORD *)(v2 + 904) = v8;
    *(_OWORD *)(v2 + 848) = v59;
    *(_QWORD *)(v2 + 912) = v10;
    *(_QWORD *)(v2 + 920) = v11;
    *(_BYTE *)(v2 + 928) = v52;
    *(_QWORD *)(v2 + 936) = v14;
    *(_QWORD *)(v2 + 944) = v13;
    *(_QWORD *)(v2 + 952) = v15;
    *(_QWORD *)(v2 + 960) = v16;
    *(_QWORD *)(v2 + 968) = v17;
    *(_QWORD *)(v2 + 976) = v18;
    *(_BYTE *)(v2 + 984) = v49;
    *(_BYTE *)(v2 + 985) = v48;
    *(_QWORD *)(v2 + 992) = v19;
    *(_QWORD *)(v2 + 1000) = v20;
    *(_QWORD *)(v2 + 1008) = v21;
    *(_QWORD *)(v2 + 1016) = v22;
    *(_QWORD *)(v2 + 1024) = v23;
    *(_QWORD *)(v2 + 1032) = v24;
    *(_QWORD *)(v2 + 1040) = v25;
    *(_QWORD *)(v2 + 1048) = v26;
    *(_BYTE *)(v2 + 1056) = v47;
    *(_QWORD *)(v2 + 1064) = v27;
    *(_QWORD *)(v2 + 1072) = v28;
    *(_BYTE *)(v2 + 1080) = v46;
    *(_BYTE *)(v2 + 1081) = v45;
    *(_BYTE *)(v2 + 1082) = v44;
    *(_QWORD *)(v2 + 1088) = v29;
    *(_QWORD *)(v2 + 1096) = v30;
    *(_QWORD *)(v2 + 1104) = v31;
    *(_QWORD *)(v2 + 1112) = v32;
  }
  return swift_task_switch();
}

uint64_t sub_2219FB654()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (void *)v0[190];
  v2 = v0[188];
  if (v0[194])
  {
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_2219018CC(&qword_25573CDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_222597530();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    v3 = sub_222596504();
    v0[202] = v3;
    v0[7] = (char *)v0 + 1670;
    v0[2] = v0;
    v0[3] = sub_2219FB95C;
    v0[149] = swift_continuation_init();
    v0[145] = MEMORY[0x24BDAC760];
    v0[146] = 0x40000000;
    v0[147] = sub_2219FA2A0;
    v0[148] = &block_descriptor_40;
    objc_msgSend(v1, sel_replaceUnsignedPassAtURL_withCompletionHandler_, v3, v0 + 145);
  }
  else
  {
    v4 = v0[187];
    v5 = v0[186];
    sub_22259726C();
    swift_bridgeObjectRelease();
    sub_2219018CC(&qword_25573CDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_222597530();
    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741EF0);
    v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_222688C60;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v7 + v6, v2, v5);
    v8 = sub_222596E28();
    v0[203] = v8;
    swift_bridgeObjectRelease();
    v0[23] = v0 + 166;
    v0[18] = v0;
    v0[19] = sub_2219FBE1C;
    v0[159] = swift_continuation_init();
    v0[155] = MEMORY[0x24BDAC760];
    v0[156] = 0x40000000;
    v0[157] = sub_221944BF4;
    v0[158] = &block_descriptor_37;
    objc_msgSend(v1, sel_addUnsignedPassesAtURLs_withCompletionHandler_, v8, v0 + 155);
  }
  return swift_continuation_await();
}

uint64_t sub_2219FB95C()
{
  return swift_task_switch();
}

uint64_t sub_2219FB9D4()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned int v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_BYTE *)(v0 + 1670);

  if ((v1 & 1) != 0)
  {
    *(_QWORD *)(v0 + 1632) = 1;
    v2 = *(void **)(v0 + 1520);
    v3 = (void *)sub_222596CD8();
    v4 = (void *)sub_222596CD8();
    v5 = objc_msgSend(v2, sel_passWithPassTypeIdentifier_serialNumber_, v3, v4);
    *(_QWORD *)(v0 + 1640) = v5;

    if (v5)
    {
      objc_opt_self();
      v6 = swift_dynamicCastObjCClass();
      if (v6)
      {
        v7 = (void *)v6;
        v8 = v5;
        sub_22259726C();
        swift_bridgeObjectRelease();
        v9 = objc_msgSend(v7, sel_description);
        sub_222596CF0();

        sub_222596D50();
        swift_bridgeObjectRelease();
        sub_2225968E8();
        swift_bridgeObjectRelease();
        v10 = swift_task_alloc();
        *(_QWORD *)(v0 + 1648) = v10;
        *(_QWORD *)v10 = v0;
        *(_QWORD *)(v10 + 8) = sub_2219FC324;
        v11 = *(_DWORD *)(v0 + 1666);
        *(_QWORD *)(v10 + 224) = *(_QWORD *)(v0 + 1440);
        *(_OWORD *)(v10 + 208) = xmmword_2226897B0;
        *(_DWORD *)(v10 + 264) = v11;
        *(_QWORD *)(v10 + 200) = v7;
        return swift_task_switch();
      }
      v19 = v5;
      swift_bridgeObjectRelease();
      sub_221987C70(v0 + 696);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_221987C70(v0 + 696);
    }
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v20 = 0xD000000000000026;
    *(_QWORD *)(v20 + 8) = 0x80000002226229A0;
    *(_BYTE *)(v20 + 16) = 0;
    swift_willThrow();

    v21 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v22 = (void *)sub_222596504();
    *(_QWORD *)(v0 + 1360) = 0;
    v23 = objc_msgSend(v21, sel_removeItemAtURL_error_, v22, v0 + 1360);

    v17 = *(void **)(v0 + 1360);
    if (!v23)
      goto LABEL_10;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_221987C70(v0 + 696);
    sub_2219344F8();
    swift_allocError();
    *(_OWORD *)v13 = xmmword_2226905A0;
    *(_BYTE *)(v13 + 16) = 3;
    swift_willThrow();
    v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v15 = (void *)sub_222596504();
    *(_QWORD *)(v0 + 1336) = 0;
    v16 = objc_msgSend(v14, sel_removeItemAtURL_error_, v15, v0 + 1336);

    v17 = *(void **)(v0 + 1336);
    if (!v16)
    {
LABEL_10:
      v24 = v17;
      v25 = (void *)sub_2225964C8();

      swift_willThrow();
      goto LABEL_11;
    }
  }
  v18 = v17;
LABEL_11:
  v26 = *(void **)(v0 + 1552);
  v27 = *(void **)(v0 + 1544);
  v28 = *(void **)(v0 + 1520);
  v29 = *(_QWORD *)(v0 + 1504);
  v30 = *(_QWORD *)(v0 + 1496);
  v31 = *(_QWORD *)(v0 + 1488);

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  objc_msgSend(v27, sel_invalidate);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FBE1C()
{
  return swift_task_switch();
}

uint64_t sub_2219FBE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  int v17;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  unsigned int v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 1328);

  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_221987C70(v0 + 696);
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v2 = v1;
    *(_QWORD *)(v2 + 8) = 0;
    *(_BYTE *)(v2 + 16) = 2;
    swift_willThrow();
    v3 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v4 = (void *)sub_222596504();
    *(_QWORD *)(v0 + 1352) = 0;
    v5 = objc_msgSend(v3, sel_removeItemAtURL_error_, v4, v0 + 1352);

    v6 = *(void **)(v0 + 1352);
    if (v5)
    {
      v7 = v6;
    }
    else
    {
      v19 = v6;
      v20 = (void *)sub_2225964C8();

      swift_willThrow();
    }
    v21 = *(void **)(v0 + 1544);
    v22 = *(void **)(v0 + 1520);
    v23 = *(_QWORD *)(v0 + 1504);
    v24 = *(_QWORD *)(v0 + 1496);
    v25 = *(_QWORD *)(v0 + 1488);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    *(_QWORD *)(v0 + 1632) = 0;
    v8 = *(void **)(v0 + 1520);
    v9 = (void *)sub_222596CD8();
    v10 = (void *)sub_222596CD8();
    v11 = objc_msgSend(v8, sel_passWithPassTypeIdentifier_serialNumber_, v9, v10);
    *(_QWORD *)(v0 + 1640) = v11;

    if (v11)
    {
      objc_opt_self();
      v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        v13 = (void *)v12;
        v14 = v11;
        sub_22259726C();
        swift_bridgeObjectRelease();
        v15 = objc_msgSend(v13, sel_description);
        sub_222596CF0();

        sub_222596D50();
        swift_bridgeObjectRelease();
        sub_2225968E8();
        swift_bridgeObjectRelease();
        v16 = swift_task_alloc();
        *(_QWORD *)(v0 + 1648) = v16;
        *(_QWORD *)v16 = v0;
        *(_QWORD *)(v16 + 8) = sub_2219FC324;
        v17 = *(_DWORD *)(v0 + 1666);
        *(_QWORD *)(v16 + 224) = *(_QWORD *)(v0 + 1440);
        *(_OWORD *)(v16 + 208) = xmmword_2226897B0;
        *(_DWORD *)(v16 + 264) = v17;
        *(_QWORD *)(v16 + 200) = v13;
        return swift_task_switch();
      }
      v26 = v11;
      swift_bridgeObjectRelease();
      sub_221987C70(v0 + 696);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_221987C70(v0 + 696);
    }
    sub_2219344F8();
    swift_allocError();
    *(_QWORD *)v27 = 0xD000000000000026;
    *(_QWORD *)(v27 + 8) = 0x80000002226229A0;
    *(_BYTE *)(v27 + 16) = 0;
    swift_willThrow();

    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v29 = (void *)sub_222596504();
    *(_QWORD *)(v0 + 1360) = 0;
    v30 = objc_msgSend(v28, sel_removeItemAtURL_error_, v29, v0 + 1360);

    v31 = *(void **)(v0 + 1360);
    if (v30)
    {
      v32 = v31;
    }
    else
    {
      v33 = v31;
      v34 = (void *)sub_2225964C8();

      swift_willThrow();
    }
    v35 = *(void **)(v0 + 1552);
    v21 = *(void **)(v0 + 1544);
    v22 = *(void **)(v0 + 1520);
    v36 = *(_QWORD *)(v0 + 1504);
    v37 = *(_QWORD *)(v0 + 1496);
    v38 = *(_QWORD *)(v0 + 1488);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  }
  objc_msgSend(v21, sel_invalidate);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC324()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_221987C70(v2 + 696);
  }
  return swift_task_switch();
}

uint64_t sub_2219FC3F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 1640);
  v2 = *(_QWORD *)(v0 + 1632);
  v3 = *(_QWORD *)(v0 + 1592);
  v4 = *(_QWORD **)(v0 + 1400);

  *v4 = v2;
  v4[1] = v3;
  memcpy(v4 + 2, (const void *)(v0 + 696), 0x1A8uLL);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v6 = (void *)sub_222596504();
  *(_QWORD *)(v0 + 1376) = 0;
  v7 = objc_msgSend(v5, sel_removeItemAtURL_error_, v6, v0 + 1376);

  v8 = *(void **)(v0 + 1376);
  if (v7)
  {
    v9 = v8;
  }
  else
  {
    v10 = v8;
    v11 = (void *)sub_2225964C8();

    swift_willThrow();
  }
  v12 = *(void **)(v0 + 1552);
  v13 = *(void **)(v0 + 1544);
  v14 = *(void **)(v0 + 1520);
  v15 = *(_QWORD *)(v0 + 1504);
  v16 = *(_QWORD *)(v0 + 1496);
  v17 = *(_QWORD *)(v0 + 1488);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  objc_msgSend(v13, sel_invalidate);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC57C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 1528);
  v2 = *(void **)(v0 + 1520);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC5FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 1576);
  v2 = *(void **)(v0 + 1568);
  v3 = *(void **)(v0 + 1560);
  v4 = *(void **)(v0 + 1552);
  v5 = *(void **)(v0 + 1544);
  v6 = *(void **)(v0 + 1520);
  swift_willThrow();

  objc_msgSend(v5, sel_invalidate);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC6C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 1560);
  v2 = *(void **)(v0 + 1544);
  v3 = *(void **)(v0 + 1520);

  objc_msgSend(v2, sel_invalidate);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC75C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 1640);

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = (void *)sub_222596504();
  *(_QWORD *)(v0 + 1368) = 0;
  v4 = objc_msgSend(v2, sel_removeItemAtURL_error_, v3, v0 + 1368);

  v5 = *(void **)(v0 + 1368);
  if (v4)
  {
    v6 = v5;
  }
  else
  {
    v7 = v5;
    v8 = (void *)sub_2225964C8();

    swift_willThrow();
  }
  v9 = *(void **)(v0 + 1552);
  v10 = *(void **)(v0 + 1544);
  v11 = *(void **)(v0 + 1520);
  v12 = *(_QWORD *)(v0 + 1504);
  v13 = *(_QWORD *)(v0 + 1496);
  v14 = *(_QWORD *)(v0 + 1488);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  objc_msgSend(v10, sel_invalidate);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FC8C4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_2219FF1FC((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2219FC964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  v5 = *(_QWORD *)(a1 + 32);
  if (a5)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
    swift_allocError();
    *v7 = a5;
    v8 = a5;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_221917374(0, (unint64_t *)&qword_25573CE40);
    v10 = sub_222596E40();
    v11 = sub_222596E40();
    v12 = sub_222596E40();
    v13 = *(uint64_t **)(*(_QWORD *)(v5 + 64) + 40);
    *v13 = v10;
    v13[1] = v11;
    v13[2] = v12;
    return swift_continuation_throwingResume();
  }
}

uint64_t PassLibrary.pass(with:serialNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_2219FCA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v7 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25573CE58);
  *v4 = v0;
  v4[1] = sub_2219FCB28;
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))v7)(v0 + 16, &unk_25573CE50, v3, v5);
}

uint64_t sub_2219FCB28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FCB98()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2219FCBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_2219FCBC4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *(_QWORD *)(v0 + 24) = v1;
  v8 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();
  v2 = *(_QWORD **)(v0 + 32);

  v3 = *(void **)(v0 + 16);
  v4 = (void *)sub_222596CD8();
  v5 = (void *)sub_222596CD8();
  v6 = objc_msgSend(v3, sel_passWithPassTypeIdentifier_serialNumber_, v4, v5, v8);

  *v2 = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassLibrary.allHomeKeyPasses()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_2219FCD38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741C78);
  *v1 = v0;
  v1[1] = sub_2219FCDC8;
  return v4(v0 + 16, &unk_255741E18, 0, v2);
}

uint64_t sub_2219FCDC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FCE2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FCE38(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

void sub_2219FCE50()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *(_QWORD *)(v0 + 24) = v1;
  v14 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();

  v2 = *(void **)(v0 + 16);
  v3 = objc_msgSend(v2, sel_passes, v14);
  sub_221917374(0, &qword_255741ED0);
  v4 = sub_222596E40();

  v16 = MEMORY[0x24BEE4AF8];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
LABEL_16:
    v13 = *(_QWORD **)(v0 + 32);

    *v13 = v12;
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  swift_bridgeObjectRetain();
  v5 = sub_2225973B0();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_15;
LABEL_3:
  if (v5 >= 1)
  {
    v15 = v2;
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x227674274](i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_secureElementPass);
      if (v9
        && (v10 = v9, v11 = objc_msgSend(v9, sel_isHomeKeyPass), v10, (v11 & 1) != 0))
      {
        sub_2225972E4();
        sub_222597314();
        sub_222597320();
        sub_2225972F0();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v2 = v15;
    v12 = v16;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t PassLibrary.canAddHomeKey()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_2219FD0E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, void *, _QWORD, uint64_t);

  v4 = (uint64_t (*)(uint64_t, void *, _QWORD, uint64_t))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255740D70);
  *v1 = v0;
  v1[1] = sub_2219FD178;
  return v4(v0 + 16, &unk_255741E28, 0, v2);
}

uint64_t sub_2219FD178()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_2219FD1E4()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 25))
    v1 = 1;
  else
    v1 = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, (*(_BYTE *)(v0 + 25) | *(_BYTE *)(v0 + 24)) & 1);
}

uint64_t sub_2219FD204()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(1, 1);
}

uint64_t sub_2219FD214(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
  return swift_task_switch();
}

uint64_t sub_2219FD22C()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v0[10] = v1;
  v5 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();

  v2 = (void *)v0[18];
  v0[22] = v2;
  sub_2225968E8();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6E998]), sel_init, v5);
  v0[23] = v3;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_2219FD3DC;
  v0[14] = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_2219FD65C;
  v0[13] = &block_descriptor_30;
  objc_msgSend(v2, sel_canAddSecureElementPassWithConfiguration_completion_, v3, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_2219FD3DC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2219FD43C()
{
  uint64_t v0;
  char v1;
  _BOOL8 v2;
  uint64_t v3;
  void *v4;
  BOOL v5;

  v1 = *(_BYTE *)(v0 + 144);

  v2 = (v1 & 1) == 0;
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(void **)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 192) == 0;
  sub_22259726C();
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  sub_222596D50();
  *(_QWORD *)(v0 + 144) = v2;
  *(_BYTE *)(v0 + 152) = v5;
  sub_222597380();
  sub_2225968E8();

  swift_bridgeObjectRelease();
  *(_QWORD *)v3 = v2;
  *(_BYTE *)(v3 + 8) = v5;
  *(_BYTE *)(v3 + 9) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FD53C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(v0 + 184);
  v1 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_getErrorValue();
  v3 = sub_2225978B4();

  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(void **)(v0 + 176);
  LOBYTE(v2) = *(_QWORD *)(v0 + 192) == 0;
  sub_22259726C();
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0xE000000000000000;
  sub_222596D50();
  *(_QWORD *)(v0 + 144) = v3;
  *(_BYTE *)(v0 + 152) = (_BYTE)v2;
  sub_222597380();
  sub_2225968E8();

  swift_bridgeObjectRelease();
  *(_QWORD *)v4 = v3;
  *(_BYTE *)(v4 + 8) = (_BYTE)v2;
  *(_BYTE *)(v4 + 9) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FD65C(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25573EC80);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t PassLibrary.removePass(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2219FD6F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_2219FD788;
  return v5();
}

uint64_t sub_2219FD788()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FD7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_2219FD810()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *(_QWORD *)(v0 + 24) = v1;
  v6 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();
  v2 = *(void **)(v0 + 32);

  v3 = *(void **)(v0 + 16);
  sub_22259726C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_description, v6);
  sub_222596CF0();

  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_removePass_, v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassLibrary.removePass(withPassTypeIdentifier:serialNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2219FD9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)&v6 = (int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_2219FDA8C;
  return ((uint64_t (*)(void))v6)();
}

uint64_t sub_2219FDA8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FDAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  return swift_task_switch();
}

uint64_t sub_2219FDB18()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v9;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  *(_QWORD *)(v0 + 24) = v1;
  v9 = sub_221917374(0, &qword_255741EC8);
  sub_22259690C();

  v2 = *(void **)(v0 + 16);
  v3 = (void *)sub_222596CD8();
  v4 = (void *)sub_222596CD8();
  v5 = objc_msgSend(v2, sel_passWithPassTypeIdentifier_serialNumber_, v3, v4, v9);

  if (v5)
  {
    v6 = v5;
    sub_22259726C();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v6, sel_description);
    sub_222596CF0();

    sub_222596D50();
    swift_bridgeObjectRelease();
    sub_222596D50();
    sub_222596D50();
    sub_2225968E8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_removePass_, v6);

  }
  else
  {
    sub_22259726C();
    sub_222596D50();
    sub_222596D50();
    sub_2225968E8();
    swift_bridgeObjectRelease();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassLibrary.setExpressSettings(_:pass:authData:)(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  *(_WORD *)(v5 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_2219FDDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_WORD *)(v0 + 72);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v5 & 1;
  *(_BYTE *)(v6 + 33) = HIBYTE(v5) & 1;
  *(_QWORD *)(v6 + 40) = v3;
  *(_QWORD *)(v6 + 48) = v2;
  v9 = (uint64_t (*)(void))((int)*MEMORY[0x24BE3E820] + MEMORY[0x24BE3E820]);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v7;
  *v7 = v0;
  v7[1] = sub_2219FDE9C;
  return v9();
}

uint64_t sub_2219FDE9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FDF0C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int16 v11;
  uint64_t v12;

  v11 = a4 & 0x101;
  v12 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)v12 = v6;
  *(_QWORD *)(v12 + 8) = sub_221900360;
  *(_QWORD *)(v12 + 216) = a6;
  *(_QWORD *)(v12 + 224) = a2;
  *(_WORD *)(v12 + 266) = 2;
  *(_WORD *)(v12 + 264) = v11;
  *(_QWORD *)(v12 + 200) = a3;
  *(_QWORD *)(v12 + 208) = a5;
  return swift_task_switch();
}

uint64_t sub_2219FDF9C(uint64_t a1, __int16 a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 216) = a5;
  *(_QWORD *)(v6 + 224) = v5;
  *(_WORD *)(v6 + 266) = a3;
  *(_WORD *)(v6 + 264) = a2;
  *(_QWORD *)(v6 + 200) = a1;
  *(_QWORD *)(v6 + 208) = a4;
  return swift_task_switch();
}

uint64_t sub_2219FDFC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void *v3;
  __int16 v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = v0 + 184;
  v2 = *(unsigned __int16 *)(v0 + 264);
  if (*(_WORD *)(v0 + 264) == 2)
  {
    v2 = *(unsigned __int16 *)(v0 + 266);
    v3 = *(void **)(v0 + 200);
    if (*(_WORD *)(v0 + 266) == 2)
    {
      v4 = sub_2219FED40(*(void **)(v0 + 200));
      v3 = *(void **)(v0 + 200);
      sub_22259726C();
      *(_QWORD *)(v0 + 144) = 0;
      *(_QWORD *)(v0 + 152) = 0xE000000000000000;
      sub_222596D50();
      v5 = objc_msgSend(v3, sel_description);
      sub_222596CF0();

      sub_222596D50();
      swift_bridgeObjectRelease();
      sub_222596D50();
      *(_BYTE *)(v0 + 184) = v4 & 1;
      *(_BYTE *)(v0 + 185) = HIBYTE(v4) & 1;
      sub_222597380();
      sub_2225968E8();
      swift_bridgeObjectRelease();
      v6 = (void *)(v4 & 0x101);
      goto LABEL_7;
    }
    sub_22259726C();
    *(_QWORD *)(v0 + 144) = 0;
    *(_QWORD *)(v0 + 152) = 0xE000000000000000;
    sub_222596D50();
    v8 = objc_msgSend(v3, sel_description);
    sub_222596CF0();

    sub_222596D50();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(void **)(v0 + 200);
    sub_22259726C();
    *(_QWORD *)(v0 + 144) = 0;
    *(_QWORD *)(v0 + 152) = 0xE000000000000000;
    sub_222596D50();
    v7 = objc_msgSend(v3, sel_description);
    sub_222596CF0();

    sub_222596D50();
    swift_bridgeObjectRelease();
  }
  sub_222596D50();
  *(_BYTE *)(v0 + 184) = v2 & 1;
  *(_BYTE *)(v0 + 185) = BYTE1(v2) & 1;
  sub_222597380();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  v6 = (void *)(v2 & 0x1010101);
LABEL_7:
  v9 = (void *)sub_2219FEEF0(v3, v6);
  *(_QWORD *)(v0 + 232) = v9;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init);
  *(_QWORD *)(v0 + 240) = v10;
  sub_22259726C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 144) = v9;
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255741EA0);
  sub_222596D20();
  sub_222596D50();
  swift_bridgeObjectRelease();
  sub_2225968E8();
  swift_bridgeObjectRelease();
  if (v9)
  {
    v12 = *(_QWORD *)(v0 + 216);
    v13 = v11;
    if (v12 >> 60 == 15)
      v14 = 0;
    else
      v14 = _s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0();
    *(_QWORD *)(v0 + 256) = v14;
    *(_QWORD *)(v0 + 56) = v1;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_2219FE694;
    *(_QWORD *)(v0 + 176) = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 152) = 0x40000000;
    *(_QWORD *)(v0 + 160) = sub_2219FE798;
    *(_QWORD *)(v0 + 168) = &block_descriptor_23;
    objc_msgSend(v10, sel_setExpressWithPassConfiguration_credential_handler_, v13, v14, v0 + 144);
  }
  else
  {
    v15 = objc_msgSend(*(id *)(v0 + 200), sel_uniqueID);
    if (v15)
    {
      v16 = v15;
      v17 = sub_222596CF0();
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    *(_QWORD *)(v0 + 144) = v17;
    *(_QWORD *)(v0 + 152) = v19;
    v22 = MEMORY[0x24BEE0D00];
    sub_22259690C();
    swift_bridgeObjectRelease();
    v21 = sub_222596CD8();
    *(_QWORD *)(v0 + 248) = v21;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 120) = v1;
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_2219FE598;
    *(_QWORD *)(v0 + 176) = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 152) = 0x40000000;
    *(_QWORD *)(v0 + 160) = sub_2219FE798;
    *(_QWORD *)(v0 + 168) = &block_descriptor_16;
    objc_msgSend(v10, sel_removeExpressPassWithUniqueIdentifierV2_completion_, v21, v0 + 144, v22, 0xD000000000000018, 0x8000000222622460);
  }
  return swift_continuation_await();
}

uint64_t sub_2219FE598()
{
  return swift_task_switch();
}

uint64_t sub_2219FE5E4()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 184);

  swift_bridgeObjectRelease();
  v3 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 240);
  if ((v1 & 1) != 0)
  {

  }
  else
  {
    sub_2219344F8();
    swift_allocError();
    *(_OWORD *)v4 = xmmword_2226905B0;
    *(_BYTE *)(v4 + 16) = 3;
    swift_willThrow();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FE694()
{
  return swift_task_switch();
}

uint64_t sub_2219FE6E0()
{
  uint64_t v0;
  void *v1;
  char v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 232);
  v2 = *(_BYTE *)(v0 + 184);

  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 240);
  if ((v2 & 1) != 0)
  {

  }
  else
  {
    sub_2219344F8();
    swift_allocError();
    *(_OWORD *)v5 = xmmword_2226905B0;
    *(_BYTE *)(v5 + 16) = 3;
    swift_willThrow();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2219FE798(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_221917374(0, &qword_255741EA8);
    sub_221994504(&qword_255741EB0, &qword_255741EA8);
    v5 = sub_222596F9C();
  }
  else
  {
    v5 = 0;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 64) + 40);
  *(_BYTE *)v6 = a2;
  *(_QWORD *)(v6 + 8) = v5;
  return swift_continuation_resume();
}

uint64_t PassLibrary.homeutilGetExpressSettings(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2219FE84C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, void *, uint64_t, ValueMetadata *);

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(_QWORD *, void *, uint64_t, ValueMetadata *))((int)*MEMORY[0x24BE3E820]
                                                                          + MEMORY[0x24BE3E820]);
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_2219FE8EC;
  return v5(v0 + 7, &unk_25573CEB8, v2, &type metadata for ExpressSettings);
}

uint64_t sub_2219FE8EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2219FE95C()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 57))
    v1 = 256;
  else
    v1 = 0;
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 | *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_2219FE980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_2219FE998()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 *v11;
  uint64_t v13;

  v1 = objc_msgSend(*(id *)(v0 + 56), sel_uniqueID);
  if (v1)
  {
    v2 = v1;
    v3 = sub_222596CF0();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v5;
  v13 = MEMORY[0x24BEE0D00];
  sub_22259690C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init, v13);
  v7 = (void *)sub_222596CD8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_expressPassConfigurationWithPassUniqueIdentifier_, v7);

  if (v8)
  {
    v9 = objc_msgSend(v8, sel_isNFCExpressEnabled);
    v10 = objc_msgSend(v8, sel_isUWBExpressEnabled);

  }
  else
  {

    v9 = 0;
    v10 = 0;
  }
  v11 = *(unsigned __int8 **)(v0 + 48);
  *v11 = v9;
  v11[1] = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id PassLibrary.init()()
{
  _QWORD *v0;
  objc_super v2;

  swift_defaultActor_initialize();
  sub_222596744();
  swift_retain();
  v0[14] = sub_222596738();
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassLibrary();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for PassLibrary()
{
  return objc_opt_self();
}

uint64_t PassLibrary.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PassLibrary.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PassLibrary.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2219FEC94(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

ValueMetadata *type metadata accessor for CanAddHomeKeyToWallet()
{
  return &type metadata for CanAddHomeKeyToWallet;
}

id sub_2219FECE0(uint64_t a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_hardwareSupportsExpressForAutomaticSelectionTechnologyType_, a1);
}

uint64_t sub_2219FED18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_2219FED40(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;

  v2 = objc_msgSend(a1, sel_uniqueID);
  if (v2)
  {
    v3 = v2;
    sub_222596CF0();

  }
  v11 = MEMORY[0x24BEE0D00];
  sub_22259690C();
  result = swift_bridgeObjectRelease();
  if (!v1)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6ED30]), sel_init, v11);
    v6 = (void *)sub_222596CD8();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v5, sel_expressPassConfigurationWithPassUniqueIdentifier_, v6);

    if (v7)
    {
      v8 = objc_msgSend(v7, sel_isNFCExpressEnabled);
      v9 = objc_msgSend(v7, sel_isUWBExpressEnabled);

      if (v9)
        v10 = 256;
      else
        v10 = 0;
      return v10 | v8;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_2219FEEF0(void *a1, id a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t aBlock[6];
  void *v18;

  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
    v6 = a1;
  v18 = v5;
  v16 = sub_221917374(0, &qword_255741EB8);
  sub_22259690C();

  if (v2)
    return (uint64_t)a2;
  v7 = (void *)aBlock[0];
  if (((unsigned __int16)a2 & 0x100) != 0)
  {
    v9 = objc_msgSend(a1, sel_secureElementPass, v16);
    v10 = v9;
    if (v9)
    {
      v11 = objc_msgSend(v9, sel_paymentApplications);

      if (v11)
      {
        sub_221917374(0, (unint64_t *)&qword_25573CE40);
        sub_221994504((unint64_t *)&qword_25573CE48, (unint64_t *)&qword_25573CE40);
        v10 = (void *)sub_222596F9C();

      }
      else
      {
        v10 = 0;
      }
    }
    v18 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255741EC0);
    sub_22259690C();
    swift_bridgeObjectRelease();
    sub_2219F9F34(aBlock[0]);
    v8 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v13 = objc_allocWithZone(MEMORY[0x24BE6EAE8]);
  aBlock[4] = (uint64_t)sub_2219FECE0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2219FED18;
  aBlock[3] = (uint64_t)&block_descriptor_24;
  v14 = _Block_copy(aBlock);
  a2 = objc_msgSend(v13, sel_initForPaymentPass_isNFCExpressEnabled_isUWBExpressEnabled_withTechologyTest_, v7, a2 & 1, v8 & 1, v14);

  _Block_release(v14);
  swift_release();
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
    return (uint64_t)a2;
  __break(1u);
  return result;
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_2219FF1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255741EF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2219FF244()
{
  uint64_t v0;

  sub_22196B2C4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t _s14ValueReferenceCMa()
{
  return objc_opt_self();
}

uint64_t _s14ValueReferenceC7BackingOwxx(uint64_t a1)
{
  return sub_22196B2C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14ValueReferenceC7BackingOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22196B2A0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14ValueReferenceC7BackingOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22196B2A0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_22196B2C4(v6, v7, v8);
  return a1;
}

uint64_t _s14ValueReferenceC7BackingOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_22196B2C4(v4, v5, v6);
  return a1;
}

uint64_t _s14ValueReferenceC7BackingOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 13);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0xC | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s14ValueReferenceC7BackingOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 16 * (((-a2 >> 2) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_2219FF428(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_2219FF444(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_2219FF454(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xF | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *_s14ValueReferenceC7BackingOMa()
{
  return &_s14ValueReferenceC7BackingON;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HMCContext.saveOrThrow()()
{
  void *v0;
  id v1;
  id v2;
  id v3[2];

  v3[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3[0] = 0;
  if ((objc_msgSend(v0, sel_save_, v3) & 1) == 0)
  {
    if (v3[0])
      v1 = v3[0];
    else
      v2 = objc_msgSend((id)objc_opt_self(), sel_hmErrorWithCode_, -1);
    swift_willThrow();
  }
}

uint64_t HMCContext.performAndWait<A>(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2219FF560()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_2219FF5FC;
  return sub_222597848();
}

uint64_t sub_2219FF5FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t HMCContext.unsafeSynchronousThrowingBlock<A>(block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];
  id v29;

  v26 = a4;
  v5 = v4;
  v9 = sub_222597110();
  v27 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v29 = 0;
  v15 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v25 - v13, 1, 1, a3);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = &v29;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_2219FFCB8;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_2219FFCF8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2219FFD18;
  aBlock[3] = &block_descriptor_17;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_unsafeSynchronousBlock_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v14, v9);
    v21 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3) == 1)
    {
      v22 = *(void (**)(char *, uint64_t))(v20 + 8);
      v22(v12, v21);
      v23 = v29;
      if (!v29)
      {
        objc_msgSend((id)objc_opt_self(), sel_hmErrorWithCode_, -1);
        v23 = 0;
      }
      v24 = v23;
      swift_willThrow();
      v22(v14, v21);

      return swift_release();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v26, v12, a3);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v9);

      return swift_release();
    }
  }
  return result;
}

void sub_2219FF920(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  void *v16;
  _QWORD aBlock[6];

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25573EC80);
  v10 = sub_222596EC4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)aBlock - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - v12, a1, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = a5;
  *((_QWORD *)v15 + 3) = a3;
  *((_QWORD *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], v13, v10);
  aBlock[4] = sub_2219FFDE4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_221944BC8;
  aBlock[3] = &block_descriptor_11;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_performBlock_, v16);
  _Block_release(v16);
}

void sub_2219FFA90(uint64_t a1)
{
  uint64_t v1;

  sub_2219FF920(a1, *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t sub_2219FFA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(void);
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v5 = *(_QWORD *)(a4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void (*)(void))MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v13 - v10;
  v9();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25573EC80);
  sub_222596EC4();
  sub_222596EB8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, a4);
}

uint64_t sub_2219FFBCC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v8 = sub_222597110();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - v11;
  a2(v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(v12, 0, 1, a5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(a1, v12, v8);
}

uint64_t sub_2219FFCA8()
{
  return swift_deallocObject();
}

uint64_t sub_2219FFCB8()
{
  uint64_t v0;

  return sub_2219FFBCC(*(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_2219FFCC8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2219FFCE8()
{
  return swift_deallocObject();
}

uint64_t sub_2219FFCF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2219FFD18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_2219FFD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25573EC80);
  v1 = sub_222596EC4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2219FFDE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25573EC80);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_222596EC4() - 8) + 80);
  return sub_2219FFA9C(v0[3], v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2), v1);
}

uint64_t sub_2219FFE48(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x24BDAC470];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_221A000A0(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x24BDAC470];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_221A0022C(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x24BDAC470];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_221A00418(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_221A00590(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + (v1 ^ 0x5EF))
                              + (((*(_QWORD *)a1 == *(_QWORD *)(a1 + 8)) * ((51 * (v1 ^ 0x5DA)) ^ 0x630)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_221A00618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0xC7F991DE6408E19);
  v5 = v4 - 159353952;
  if (v4 - 159353952 < 0)
    v5 = 159353952 - v4;
  *(_DWORD *)(v1 - 0xC7F991DE6408E19) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((93
                                * ((v5 ^ 0xF9CB9BF3) + 1459613664 + ((v5 << (v3 - 44)) & 0xF39737E6) != ((v3 - 104) ^ 0x50CB8E16))) ^ v3)))();
}

uint64_t sub_221A006AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v2 - 0xC7F991DE6408E15) + 4 * (v5 - 1355516884)) = *(_DWORD *)(*(_QWORD *)(v3 - 0xC7F991DE6408E15)
                                                                                           + 4 * (v5 - 1355516884));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((425 * (v5 - 1 == v1)) ^ (v4 - 444)))
                            - ((211 * ((v4 - 444) ^ 0x476u)) ^ 0x5CDLL)))();
}

void sub_221A00724()
{
  JUMPOUT(0x221A006ECLL);
}

void sub_221A00730(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BR              X9 }
}

uint64_t sub_221A0080C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * (((&a4 | 0xA509F51) - (&a4 & 0xA509F51)) ^ 0xD496228A);
  a7 = &STACK[0x37021DA48139155A];
  a4 = &STACK[0x42E48BBDD224DE3D];
  a5 = v10;
  a8 = v12 ^ 0x64BC49B;
  a6 = (v11 + 172) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v11 - 1)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v10 - 0x27681A84B35EB0EDLL) == v8)
                                                        * (37 * (((v11 + 211) | 0x418) ^ 0x51C) + 1560)) ^ v11))
                                          - 4))(v13);
}

uint64_t sub_221A00900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((((a11 ^ v11) < 0x15) * (((v13 - 1296) | 0xB0) - 125)) ^ v13))
                            - 12))();
}

uint64_t sub_221A00934()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  int v4;

  *v1 = v0;
  v4 = v0 - ((2 * v0) & 0x317341DE) + 414818497 + ((2 * (v3 - 11)) ^ 0xA32);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((602
                                          * ((((3 * ((v3 - 11) ^ 0x52B)) ^ 0x1DFFFFC3) & (2 * v4) ^ 0x1173418C)
                                           + (v4 ^ 0x96465F39)
                                           + 2010721788 != 114896338)) ^ (v3 - 11)))
                            - 8))();
}

uint64_t sub_221A009D0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((244
                                          * ((((a1 + 1147) ^ (v2 + v1 + ((a1 + 1212) ^ 0x71000501u) < 8)) & 1) == 0)) ^ a1))
                            - 12))();
}

uint64_t sub_221A00A28(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v4 - v5 - (unint64_t)(6 * (a4 ^ 0x5DCu)) + 1478 > 0x1F;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((4 * v7) | (16 * v7)) ^ a4)) - 8))();
}

uint64_t sub_221A00A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6
                                                     + 8
                                                     * (((((v5 < 0x20) ^ (a5 - 17)) & 1)
                                                       * (((a5 - 1401) | 0x2AA) - 723)) ^ a5))
                                         - 12))(0);
}

uint64_t sub_221A00AC4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;

  v9 = v6 + v5 + v7;
  v10.i64[0] = 0x3232323232323232;
  v10.i64[1] = 0x3232323232323232;
  v11 = v2 + v9;
  v12 = v3 + v9;
  v13 = veorq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (int)((((v4 & 0xFFFFFFE0) == 32) * (((a2 & 0xC12997FF) + 440) ^ 0x74E)) ^ ((a2 & 0xC12997FF) + 796)))
                            - 4))();
}

void sub_221A00B34()
{
  JUMPOUT(0x221A00AE8);
}

void sub_221A00B40()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_221A00D88(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  BOOL v6;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x27681A84B35EB0F9) + 503480823;
  v4 = *(_DWORD *)a1 + v1 + 380801153;
  v5 = (v4 < 0x41F83143) ^ (v3 < 0x41F83143);
  v6 = v3 < v4;
  if (v5)
    v6 = v4 < 0x41F83143;
  v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BR              X11 }
}

uint64_t sub_221A00E88()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 + 34 + 14 * (v0 ^ 0xD1) - 361) * (v2 == 1236742230)) ^ v0)))();
}

uint64_t sub_221A00EC0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(_DWORD *)(v1 - 0x27681A84B35EB0F5) == 310716794) ^ (v0 + 26)) & 1)
                                     * (((v0 + 697466275) & 0xD66D8371) + 507)) ^ v0)))();
}

uint64_t sub_221A00F1C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(*(_QWORD *)(v3 - 0x27681A84B35EB105) + (v5 - 1547459025 + v2)) = *(_BYTE *)(*(_QWORD *)(v3 - 0x27681A84B35EB105) + v2 - 310717355 + ((v1 + 707075844) & 0xD5DADBF6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((189 * (v2 - 1 == a1)) ^ v1)) - 12))();
}

void sub_221A00F98()
{
  JUMPOUT(0x221A00F60);
}

uint64_t sub_221A00FA0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v3 = ((v0 - 1119) & *(_DWORD *)(v1 - 0x27681A84B35EB0F1)) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (((v0 - 71) ^ v3) & 1)) & 0xEF | (16
                                                                                       * (((v0 - 71) ^ v3) & 1)) | v0)))();
}

void sub_221A00FE0()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x27681A84B35EB0EDLL) = -1645193683;
}

void sub_221A014F0(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BR              X15 }
}

void sub_221A0161C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;

  *(_DWORD *)(a4 + v5) = v4;
}

uint64_t sub_221A02520(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 1224239923 * (((a1 | 0x8C9528F6) - (_DWORD)a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  v2 = a1[4] - v1;
  v3 = *a1 ^ v1;
  v5 = v3 - 1051670498;
  v4 = v3 - 1051670498 < 0;
  LODWORD(v6) = 1051670498 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + (int)(v2 ^ 0xF4))
                              + (int)((484 * (v6 != ((2 * (_DWORD)v6) & 0xD0B90CAE))) ^ v2)
                              - 1)
                            - 4))();
}

void sub_221A025D8(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 - 0xC7F991DE6408E15) = (v2 + 1750894167) ^ 0xD7B70E58;
  *(_DWORD *)(v1 - 0xC7F991DE6408E19) = a1 + 1;
}

void sub_221A02630(uint64_t a1)
{
  int v1;

  v1 = (628203409 * ((1303688841 - (a1 | 0x4DB4B689) + (a1 | 0xB24B4976)) ^ 0x30C34545)) ^ *(_DWORD *)(a1 + 16) ^ 0x43C;
  __asm { BR              X7 }
}

uint64_t sub_221A027E8(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  int v7;
  unint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v7 + a1) & a2 ^ (1022 * (v9 == 31))))
                            - ((5 * ((((v7 + a1) & a2) + a5) & a6 ^ a7)) ^ v8)))();
}

void sub_221A0284C()
{
  JUMPOUT(0x221A027B4);
}

uint64_t sub_221A02854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_DWORD *)(a11 - 0x7542B2AE5773787) = 1292221340 - v16;
  v22 = 1224239923 * (((v21 - 136) & 0x8278F9B6 | ~((v21 - 136) | 0x8278F9B6)) ^ 0x8F34FB9E);
  *(_DWORD *)(v21 - 120) = v22 + v20 - 620;
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 136) = v22 ^ 0x3EAF37E3;
  sub_221A02520((_DWORD *)(v21 - 136));
  v23 = 1759421093 * ((2 * ((v21 - 136) & 0x4FEBF750) - (v21 - 136) - 1340864343) ^ 0x369B8FD);
  *(_DWORD *)(v21 - 136) = ((v20 ^ 0x1BF9F000) & (v17 << 6))
                         - v23
                         + ((v17 << ((v20 + 53) & 0xB7 ^ 0x32)) ^ 0x8DFCF9B9)
                         + 2069626752;
  *(_QWORD *)(v21 - 128) = a15;
  *(_DWORD *)(v21 - 120) = v20 - v23 + 636;
  sub_221A2271C(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20 + 1374699841 * ((v21 - 136) ^ 0x6DF41809) + 635;
  *(_QWORD *)(v21 - 136) = a16;
  *(_QWORD *)(v21 - 128) = &STACK[0xC7F991DE6408E5D];
  sub_221A00590(v21 - 136);
  *(_DWORD *)(v21 - 120) = v20
                         + 1178560073
                         * ((((v21 - 136) ^ 0xFBA47593 | 0x3D05B776)
                           - ((v21 - 136) ^ 0xFBA47593)
                           + (((v21 - 136) ^ 0xFBA47593) & 0xC2FA4889)) ^ 0x7C35BA87)
                         + 775;
  *(_QWORD *)(v21 - 128) = a16;
  *(_QWORD *)(v21 - 112) = a15;
  v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 ^ 0x3F7)))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((31 * (*(_DWORD *)(v21 - 136) > 0xFF9D8B2u)) ^ v20))
                                          - 4))(v24);
}

uint64_t sub_221A02AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v17 - 120) = a14 + 1374699841 * ((v17 - 136) ^ 0x6DF41809) + 142;
  *(_QWORD *)(v17 - 136) = v16;
  *(_QWORD *)(v17 - 128) = v14;
  v18 = sub_221A00590(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((914 * (a11 < ((a14 + 199) ^ (a14 - 118) ^ 0x13E))) ^ a14)))(v18);
}

uint64_t sub_221A02B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_DWORD *)(v20 - 120) = v19
                         + 1374699841 * ((2 * ((v20 - 136) & 0xB04ADC0) - (v20 - 136) + 1962627641) ^ 0x190F4A30)
                         - 57;
  *(_QWORD *)(v20 - 136) = a16;
  *(_QWORD *)(v20 - 128) = a14;
  sub_221A00590(v20 - 136);
  v21 = 1759421093 * (((v20 - 136) & 0x61219070 | ~((v20 - 136) | 0x61219070)) ^ 0x2DA3DFDB);
  *(_DWORD *)(v20 - 120) = v19 - v21 - 56;
  *(_QWORD *)(v20 - 128) = v16;
  *(_DWORD *)(v20 - 136) = 156825914 - v21;
  sub_221A2271C(v20 - 136);
  *(_DWORD *)(v20 - 120) = v19
                         + 1178560073
                         * ((((v20 - 136) | 0xECCF7CEC) - (v20 - 136) + ((v20 - 136) & 0x13308310)) ^ 0x565B048E)
                         + 83;
  *(_QWORD *)(v20 - 112) = v16;
  *(_QWORD *)(v20 - 128) = a16;
  v22 = v17(v20 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((*(_DWORD *)(v20 - 136) <= 0xFF9D8B2u) | ((*(_DWORD *)(v20 - 136) <= 0xFF9D8B2u) << 7)) ^ (v19 - 472)))
                                          - (((v19 ^ 0x95u) - 1236) ^ 0x93)))(v22);
}

uint64_t sub_221A02CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((27
                                          * (((2 * a13) & 0xB7F5F7DE)
                                           + (a13 ^ 0x5BFAFBEF)
                                           + (((v14 ^ 0x4F4) + 1119) ^ 0xF77FBBFE)
                                           - 1400551921 > 0x7FFFFFFD)) ^ v14))
                            - 4))();
}

void sub_221A038C8()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1200];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = (unint64_t)&v2[qword_255742BE0 ^ qword_255742C48];
  qword_255742C48 = 536075833 * (v0 + 0x793AB71194CDC804);
  qword_255742BE0 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  *(_DWORD *)*(&off_24E772B10
             + ((57 * ((qword_255742BE0 + qword_255742C48) ^ 0xFC)) ^ byte_2226936C0[byte_22269FA60[(57 * ((qword_255742BE0 + qword_255742C48) ^ 0xFC))] ^ 0x1B])
             - 206) = 1645153785;
  v1 = ((uint64_t (*)(uint64_t))*(&off_24E772B10
                                         + ((57
                                                                          * ((qword_255742BE0 + qword_255742C48) ^ 0xFC)) ^ byte_222696D20[byte_2226934C0[(57 * ((qword_255742BE0 + qword_255742C48) ^ 0xFC))] ^ 0x85])
                                         + 22))(512);
  *(_QWORD *)*(&off_24E772B10
             + ((57 * ((qword_255742BE0 + qword_255742C48) ^ 0xFC)) ^ byte_22269FB60[byte_22269AE70[(57 * ((qword_255742BE0 + qword_255742C48) ^ 0xFC))] ^ 0x53])
             - 107) = v1;
  __asm { BR              X8 }
}

void sub_221A03A74()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_221A0B180(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xC7F991DE6408E19) - 1369292382;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 1369292382;
  v4 = (v2 < 937545218) ^ (v3 < 937545218);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < 937545218;
  else
    v6 = v5;
  v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~(_DWORD)a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  __asm { BR              X15 }
}

uint64_t sub_221A0B274()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = ((147 * (v2 ^ 0x3F2)) ^ 0xA12D6B27) + v3;
  v5 = v1 - 1590858969 + ((v2 - 1009) | 0xD0) + 375;
  v6 = v5 < 715979222;
  v7 = v4 < v5;
  if (v4 < 715979222 != v6)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1605 * !v7) ^ v2)) - 4))();
}

uint64_t sub_221A0B2FC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  if (((v3 + 801) ^ 0x76807059) + v2 >= 0)
    v2 = 318707904 - v2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                 + 8
                                                                                 * ((1132
                                                                                   * (v2
                                                                                    - 159354951
                                                                                    + ((v3 - 1476574434) & 0x5802BFEF) > (int)((77 * ((v3 + 801) ^ 0x3EC)) ^ 0xFFFFF9AE))) ^ (v3 + 801)))
                                                                     - 4))(a1, 1476575215, 4135612345, 4294965678);
}

uint64_t sub_221A0B3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  unsigned int v9;
  _QWORD *v10;
  _QWORD *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((31
                                          * ((*(_DWORD *)(*v11 + 4 * v14) ^ (v13 + a6) & a7 ^ (v9
                                                                                               + ((v13 + a8) & v12)
                                                                                               + 1399)) > (*(_DWORD *)(*v10 + 4 * v14) ^ v9))) ^ v13))
                            - 4))();
}

uint64_t sub_221A0B43C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v0 + 8 * ((((((v3 + v1) & v2) + 61) ^ (v3 + 801)) * (v4 < v5)) ^ v3)))();
}

void sub_221A0B468()
{
  JUMPOUT(0x221A0B3A4);
}

_DWORD *sub_221A0B470(_DWORD *result)
{
  int v1;
  int v2;

  *result = ((v2 + 600) ^ 0x1FF3B737) - v1;
  return result;
}

uint64_t sub_221A0B4A0(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;

  v1 = 1759421093 * ((~(_DWORD)a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = *((_DWORD *)*(&off_24E772B10 + (v2 ^ 0x769)) + 83);
  v4 = (*(_DWORD *)(a1 + 16) ^ v1) - 16856931;
  v5 = v3 + 402133936 > v4;
  if (v4 < 0x17F813B0 != v3 > 0xE807EC4F)
    v5 = v3 > 0xE807EC4F;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + (v2 ^ 0x724)) + ((v5 * ((v2 ^ 0x25B) - 1303)) ^ v2) - 1)
                            - 12))();
}

uint64_t sub_221A0B588()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = v2 + 749603472;
  v5 = v4 < 0x45A755A3;
  v6 = v1 + 1168594339 < v4;
  if (v5 != v1 > 0xBA58AA5C)
    v7 = v5;
  else
    v7 = v6;
  return (*(uint64_t (**)(void))(v0 + 8 * ((54 * ((((v3 - 1361) ^ v7) & 1) == 0)) ^ v3)))();
}

uint64_t sub_221A0B5F8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;

  v5 = v4 | 0x182;
  v6 = *(_DWORD *)(v3 + 336);
  v7 = (*(_DWORD *)(a1 + 4) ^ v1) + 354516975;
  if (v6 > 0x73C32EE1 != v7 < (((v5 + 1152) | 0x108) ^ 0x8C3CD610))
    v8 = v6 > 0x73C32EE1;
  else
    v8 = v6 - 1942171362 > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1528 * !v8) ^ v5)) - ((v5 + 1152) ^ 0x60ELL)))();
}

uint64_t sub_221A0B698()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v2 + 80333165;
  v5 = v4 < 0x7BE51A9C;
  v6 = v3 + (v1 ^ 0x25B) + 2078610318 < v4;
  if (v5 != v3 > (v1 ^ 0x841AE036))
    v6 = v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((944 * !v6) ^ v1)))();
}

uint64_t sub_221A0B710(_DWORD *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v3 + 352);
  v6 = (*a1 ^ v1) + 237531176;
  v7 = v5 + 2 * (v4 ^ 0x6D2) - 1915799556 > v6;
  if (v5 > 0x7230C0F5 != v6 < ((184 * (v4 ^ 0x55F)) ^ 0x8DCF383A))
    v7 = v5 > 0x7230C0F5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((253 * v7) ^ v4 ^ 0x42E)) - 8))();
}

uint64_t sub_221A0B7A8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;
  int v8;

  v5 = v2 - 2132719391;
  v6 = v5 < 0x8817C3;
  v7 = v3 + 8918979 < v5;
  if (v6 != v3 > v4 - 8920820)
    v7 = v6;
  if (v7)
    v8 = a2;
  else
    v8 = a2 + 1;
  *(_DWORD *)(result + 12) = v8;
  return result;
}

uint64_t sub_221A0B7FC(uint64_t a1, uint64_t a2)
{
  return off_24E76E520[(16 * (*(_DWORD *)(a2 + 4) == 1206753096)) | 0xA5u](4294925278);
}

uint64_t sub_221A0B838@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return (*(uint64_t (**)(_QWORD))(v2 + 3096))(0);
}

void sub_221A0B8A4()
{
  JUMPOUT(0x221A0B874);
}

void sub_221A0B8B0(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xB19902B9219B199) + 604313364;
  v3 = *(_DWORD *)(a1 + 20) + v1 - 316474524;
  v4 = v2 < 0x39B10190;
  v5 = v2 > v3;
  if (v3 < 0x39B10190 != v4)
    v5 = v4;
  __asm { BR              X9 }
}

uint64_t sub_221A0B990(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((196
                                * (((*(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 363588221))
                                   - ((2 * *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 - 363588221))) & 0xFFDF)
                                   + 1155520751) & 0x1F) != (v3 ^ 0x712))) ^ v3)))();
}

uint64_t sub_221A0B9E4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  v4 = v3 ^ 0x6FC;
  v5 = ((v4 - 77) ^ 0xBB970340) + v0;
  v6 = v2 - 226943326 > v5;
  if (v2 - 226943326 < (v4 + 136644383) != v5 < 0x825091D)
    v6 = v2 - 226943326 < (v4 + 136644383);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((8 * !v6) | (!v6 << 10)) ^ v4)) - 8))();
}

uint64_t sub_221A0BA64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v5 = *(char *)(v1 + (v4 + 1));
  v6 = *(unsigned __int8 *)(v1 + (v4 + 1));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8 * ((1688 * (((v3 ^ 0x4F ^ (v5 >= 0)) & 1) == 0)) ^ v3)))(a1, ((v6 << ((v3 - 102) & 0xB6 ^ 3)) & 0x7E) + (v6 ^ 0xF7FDDF3F) + 1341110268);
}

uint64_t sub_221A0BAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1910
                                          * (((((v6 + 65) & 0x7F ^ 0xFCDBFBFF) + 2 * ((v6 + 65) & 0x7F)) & 0xFCDBFFFC) == ((299 * (a5 ^ 0x1F8)) ^ 0xFCDBFB02))) ^ a5))
                            - ((a5 ^ 0x1F8u)
                             + 1788)
                            + 1786))();
}

uint64_t sub_221A0BB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v11 = v9 + a7 + ((v10 - 1633) | 0x110) - 211221332;
  v12 = v11 < 0x5F0ECD7;
  v13 = v11 > v7 - 1184700757;
  if ((v7 - 1184700757) < 0x5F0ECD7 != v12)
    v13 = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * ((156 * !v13) | v10)))();
}

uint64_t sub_221A0BBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v12 = *(unsigned __int8 *)(v7 + (v10 + v9 + 2));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v8 + 8 * (v11 ^ (958 * (a7 != -52691968)))))(a1, (v12 ^ 0x47EFBFBB) - 141440 + ((((v11 + 1361) ^ 0x5D9) - 357) & (2 * v12)));
}

uint64_t sub_221A0BC4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  v12 = *(unsigned __int8 *)(v8 + (a5 + v11 + 1794));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 8 * ((1557 * (v10 - 1 == a6)) ^ a8)))(a1, ((v12 | ((((a8 + 807) | 0x100) ^ 0x1268C202) + (a2 << 8))) ^ 0xFFFFD7FB)+ 1206763328+ ((2 * (v12 | ((((a8 + 807) | 0x100) ^ 0x1268C202) + (a2 << 8)))) & 0xFFFFAFF6));
}

uint64_t sub_221A0BCB8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v8 = v5 + v6 + v7 + 1599204958;
  v9 = (a3 + 1448515837) & 0xA9A961FE;
  v10 = a3 - 1284;
  v11 = a2 + v8 + 121046671;
  v12 = v3 + 1953524854;
  v13 = (v12 < 0xC0FE72A2) ^ (v11 < 0xC0FE72A2);
  v14 = v11 > v12;
  if (v13)
    v14 = v11 < 0xC0FE72A2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1247 * !v14) ^ v10)) - v9 + 502))();
}

uint64_t *sub_221A0BD58@<X0>(uint64_t *result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = result[6];
  v10 = *result;
  v9 = result[1];
  *a3 = v5 + 1541701226;
  *(_DWORD *)(v10 - 0x5F8E90DD494572B7) = v4;
  *(_DWORD *)(v8 - 0x56530F603BC303ACLL) = a2;
  *(_QWORD *)(v9 - 0x4FF3ADA337C70005) = v3 + v7 - 1910103002 + ((v6 + 4) | 0x500u);
  *((_DWORD *)result + 8) = 1645153785;
  return result;
}

void sub_221A0BDE0(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1374699841 * (((_DWORD)a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  v2 = *a1 + v1;
  __asm { BR              X13 }
}

uint64_t sub_221A0BE98@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  _DWORD v7[2];
  uint64_t v8;

  v5 = 1755732067 * ((v7 & 0x9095DB2C | ~(v7 | 0x9095DB2C)) ^ 0xB1AC9908);
  v8 = v2;
  v7[0] = (v3 - (((v1 + 43) ^ 0xB54A6CA2) & (v4 + 1853089944)) + 299838324) ^ v5;
  v7[1] = (v1 + 7) ^ v5;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v1 ^ 0x245)) - 8))(v7);
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_221A0C048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  a13 = 108757529 * (((&a12 | 0x956C4C34) - (&a12 & 0x956C4C34)) ^ 0x75F02E1F) + 1695027452;
  v15 = sub_221A43B78(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((275 * (a12 == 1645153785)) ^ v13)))(v15);
}

uint64_t sub_221A0C0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a12 = &STACK[0x4BD26FD1213425B1];
  a14 = 1307 - 460628867 * ((2 * (&a12 & 0x44AF77C8) - &a12 - 1152350160) ^ 0xF7C60A4D);
  sub_221A1F8D0((uint64_t)&a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14
                                                                                + 8
                                                                                * ((23
                                                                                  * (((a13 == 1645153785) ^ 0x2F) & 1)) ^ 0x2A6u)))(v15, v16, v17, v18, v19);
}

uint64_t sub_221A0C180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, int a15)
{
  int v15;
  int v16;
  __int16 v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v19 = 1178560073 * ((2 * (&a12 & 0x1E6864C8) - &a12 - 510158029) ^ 0x5B03E351);
  a13 = v19
      + (v15 ^ 0xD57F7D4A ^ (53 * (v17 & 0x9F3 ^ 0x12E)))
      + (((((v17 & 0x9F3) - 2) | 0xC) ^ 0xAAFEFEDA) & (2 * v15))
      + 2063454782;
  a15 = ((v17 & 0x9F3) + 709) ^ v19;
  a14 = a11;
  sub_221A2F97C((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18
                                                                                          + 8
                                                                                          * ((14 * (a12 != v16 + 689)) ^ v17 & 0x9F3u))
                                                                              - 8))(v20, v21, v22, v23, v24);
}

uint64_t sub_221A0C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = (((&a12 | 0xFB74E5AA) - (&a12 & 0xFB74E5AA)) ^ 0xB7E267D7) * v20;
  a15 = v21 + v19 + 2138963059;
  a16 = 635686783 - v21;
  a12 = &STACK[0x58A7AA08624568E6];
  a13 = a11;
  a14 = v21 - 279984296;
  v22 = sub_221A43F44((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((1580 * (a17 == ((v19 - 1118674286) & 0x42AD9EF1) + v17)) ^ v19))
                                          - 8))(v22);
}

uint64_t sub_221A0C338()
{
  void (*v0)(unsigned int *);
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unint64_t *v8;
  int v9;
  unint64_t *v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t *v13;
  unint64_t *v14;

  v5 = 53 * (v4 ^ 0x120);
  v13 = &STACK[0x384B062F076094AC];
  v14 = v8;
  v11 = (v4 + 44) ^ (1374699841 * (&v11 ^ 0x6DF41809));
  ((void (*)(unsigned int *))(*(_QWORD *)(v2 + 8 * (v4 ^ 0x198)) - 8))(&v11);
  v13 = v8;
  v11 = (v4 + 545) ^ (1755732067 * (((&v11 | 0x68EC43F5) - (&v11 & 0x68EC43F5)) ^ 0xB62AFE2E));
  sub_221A3FFB0((uint64_t)&v11);
  if ((_DWORD)v14 == v5 + v1)
    v6 = v9;
  else
    v6 = (int)v14;
  v12 = v4 + ((&v11 & 0x85FB557C | ~(&v11 | 0x85FB557C)) ^ 0x70F0A4AC) * v3 + 728;
  v13 = v8;
  v0(&v11);
  v12 = v5 + ((2 * (&v11 & 0x2037FE78) - &v11 + 1606943108) ^ 0x553C0FAB) * v3 + 340;
  v13 = v10;
  v0(&v11);
  return v6 ^ (v1 + 689);
}

void sub_221A0C4E0(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = qword_255742BE8 - (_QWORD)&v3 + qword_255742BE0;
  qword_255742BE8 = 536075833 * (v2 + 0x793AB71194CDC804);
  qword_255742BE0 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  ((void (*)(char *, void (*)()))*(&off_24E772B10
                                            + ((57
                                                                             * ((qword_255742BE0 - qword_255742BE8) ^ 0xFC)) ^ byte_222696E20[byte_2226935C0[(57 * ((qword_255742BE0 - qword_255742BE8) ^ 0xFC))] ^ 0xF7])
                                            + 47))((char *)*(&off_24E772B10+ ((57 * (qword_255742BE8 ^ 0xFC ^ qword_255742BE0)) ^ byte_22269FB60[byte_22269AE70[(57 * (qword_255742BE8 ^ 0xFC ^ qword_255742BE0))] ^ 0xB6])+ 19)- 4, sub_221A440DC);
  __asm { BR              X9 }
}

uint64_t sub_221A0C5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(a1 + 8 * ((41 * (**(_QWORD **)(v1 + 1616) != 0)) ^ 0x3D1u)))();
}

uint64_t sub_221A0C624()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1608))(v0);
}

uint64_t sub_221A0C64C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = *(_DWORD *)a1 ^ v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + v2 - 386)
                              + ((30 * ((v3 - 843402718) < 4 * (unint64_t)v7)) ^ v2)
                              - 1)
                            - (v2 ^ 0x51Fu)
                            + 1191))();
}

uint64_t sub_221A0C71C()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v2 ^ (67 * (v0 != 843402718))))
                            - (((v2 + 110787148) & 0xF9658379)
                             - 205)
                            + 424))();
}

uint64_t sub_221A0C76C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1884 * (((v1 - 361) | 0xA2) == 434)) ^ (v1 - 245))) - 4))();
}

uint64_t sub_221A0C7E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((971 * (((a2 - 863) ^ (a2 - 6)) + a4 != v6)) ^ a2)) - 12))();
}

uint64_t sub_221A0C830(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1884 * (v3 + 8 == ((a2 - 162) | 0xA2) - 402)) ^ (a2 - 46))) - 4))();
}

uint64_t sub_221A0C86C(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v7 = v3 > 0x7CA4B262;
  if (v7 == v6 - 1136057856 < -2091168355)
    v7 = v6 - 1136057856 < v5;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v4 + 8 * (((a3 + 1107) * v7) ^ a3)) - 4))(a1, (a3 + 46));
}

uint64_t sub_221A0C8D8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_221A0C7E4(a1, a2, *(_DWORD *)(*v4 + 4 * (v5 - 1192373149)), v3, a3);
}

uint64_t sub_221A0C904(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 32) = a3;
  return result;
}

void sub_221A0C90C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  v2 = (*(_BYTE *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  ((void (*)(char *, void (*)()))*(&off_24E772B10 + v1 - 1289))((char *)*(&off_24E772B10 + v1 - 1458) - 4, sub_221A444C0);
  v3 = *(_QWORD *)*(&off_24E772B10 + v1 - 1503);
  v5 = v1 + 1755732067 * (((&v4 | 0x1283C73D) - (&v4 & 0x1283C73D)) ^ 0xCC457AE6) - 580;
  v4 = v3;
  sub_221A411B0((uint64_t)&v4);
  __asm { BR              X9 }
}

uint64_t sub_221A0CA5C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1541
                                          * (**(_DWORD **)(v2 + 8 * (v0 ^ 0x3C2)) == ((v0 + 725) ^ 0x34B) - 1698)) ^ v0))
                            - 8))();
}

uint64_t sub_221A0CB18@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[30];
  _BYTE v23[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 - 1290));
  v9 = *v8;
  v10 = *(_QWORD *)(v6 + 8 * (a1 - 1323));
  v11 = *(_BYTE **)(v10 - 4);
  v22[0] = *v11 - 71;
  v22[1] = v11[1] - 71;
  v22[2] = v11[2] - 71;
  v22[3] = v11[3] - 71;
  v22[4] = v11[4] - 71;
  v22[5] = v11[5] - 71;
  v22[6] = v11[6] - 71;
  v22[7] = v11[7] - 71;
  v22[8] = v11[8] - 71;
  v22[9] = v11[9] - 71;
  v22[10] = v11[10] - 71;
  v22[11] = v11[11] - 71;
  v22[12] = v11[12] - 71;
  v22[13] = v11[13] - 71;
  v22[14] = v11[14] - 71;
  v22[15] = v11[15] - 71;
  v22[16] = v11[16] - 71;
  v22[17] = v11[17] - 71;
  v22[18] = v11[18] - 71;
  v22[19] = v11[19] - 71;
  v22[20] = v11[20] - 71;
  v22[21] = v11[21] - 71;
  v12 = *(_BYTE **)(v10 - 4);
  v22[22] = v12[22] - 71;
  v22[23] = v12[23] - 71;
  v22[24] = v12[24] - 71;
  v22[25] = v12[25] - 71;
  v22[26] = v12[26] - 71;
  v22[27] = v12[27] - 71;
  v22[28] = v12[28] - 71;
  v22[29] = v12[29] - 71;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x525));
  v14 = v13(v9, v22, v2);
  v15 = ((2 * v14) & 0xBFCFF7EE) + (v14 ^ 0x5FE7FBF7);
  if (v15 != 1609038839)
  {
    if (v15 == 1609039941)
    {
      v16 = *v8;
      v17 = *(_BYTE **)(*(_QWORD *)(v6 + 8 * (v4 - 1349)) - 4);
      v23[0] = *v17 - 70;
      v23[1] = v17[1] - 70;
      v23[2] = v17[2] - 70;
      v23[3] = v17[3] - 70;
      v23[4] = v17[4] - 70;
      v23[5] = v17[5] - 70;
      v23[6] = v17[6] - 70;
      v23[7] = v17[7] - 70;
      v23[8] = v17[8] - 70;
      v23[9] = v17[9] - 70;
      v23[10] = v17[10] - 70;
      v23[11] = v17[11] - 70;
      v23[12] = v17[12] - 70;
      v23[13] = v17[13] - 70;
      v23[14] = v17[14] - 70;
      v23[15] = v17[15] - 70;
      v23[16] = v17[16] - 70;
      v23[17] = v17[17] - 70;
      v23[18] = v17[18] - 70;
      v23[19] = v17[19] - 70;
      v18 = v13(v16, v23, v2);
      v19 = (2 * v18) & 0xB1CDF7BE;
      v15 = (v18 ^ 0x58E6FBDF) - 2359306;
    }
    else
    {
      v19 = -119865378;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 344) |= (3 * (v4 ^ 0x7DF)) ^ 0x6A8;
  *(_DWORD *)(v7 + 44) = 746457987;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 1406)))(*v2, v7 + 332, v7 + 336, v7 + 340, v3);
  v21 = *(_QWORD *)(v1 + 8);
  *(_DWORD *)(*(_QWORD *)(v1 + 24) - 0x705CCB0086AF2A86) = *v2;
  *(_DWORD *)(v21 - 0x4CAF57822185BF99) = *v3;
  *(_DWORD *)(v1 + 20) = 1645153785;
  return result;
}

void sub_221A0CF3C(uint64_t a1)
{
  int v1;

  v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BR              X11 }
}

uint64_t sub_221A0CFF4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 != 0) * (a1 ^ 0x102)) ^ a1)))();
}

uint64_t sub_221A0D028@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = 3 * (a1 ^ 0x91);
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((205 * (*v1 != 0)) ^ v5)) - 12))(v6);
}

uint64_t sub_221A0D060()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 521138062;
  *(_DWORD *)(v0 + 56) = 746457987;
  return result;
}

uint64_t sub_221A0D0A0@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((205 * (*v1 != 0)) ^ a1 ^ 0x1B1)) - 12))();
}

void sub_221A0D0CC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BR              X9 }
}

uint64_t sub_221A0D198@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v14 = *(_DWORD *)(v8 - 0x27681A84B35EB0F5) + *a1 - v12 + ((v13 + 2132657639) & 0x80E23D37 ^ 0xBD783FD5);
  v15 = 1759421093 * (&a5 ^ 0xB37DB054);
  a8 = v13 - v15 + 40;
  a7 = v8;
  a5 = v14 - v15 + 415266632;
  a6 = v15 + 1236742230;
  v16 = ((uint64_t (*)(int *))(*(_QWORD *)(a2 + 8 * (v13 - 509)) - 4))(&a5);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((502 * (*v10 == v9)) ^ v13)))(v16);
}

uint64_t sub_221A0D26C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (((*(_QWORD *)(v0 + 8) == 0x58C2F3F47EC954F5) * (v1 - 1298)) ^ v1))
                            - ((v1 + 202) ^ 0x5F9)))();
}

uint64_t sub_221A0D2B4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1004 * ((((v0 + 1) ^ (v1 == 1116194070)) & 1) == 0)) ^ v0)))();
}

void sub_221A0D2E8()
{
  _DWORD *v0;

  *v0 = -1645193696;
}

void sub_221A0D520(uint64_t a1)
{
  _BYTE v2[8];

  qword_255742B78 = 536075833 * ((unint64_t)&v2[qword_255742BE0 - qword_255742B78] ^ 0x86C548EE6B3237FCLL);
  qword_255742BE0 = qword_255742B78;
  MEMORY[0x1DEE39758](0x255742BC8, sub_221A440DC);
  __asm { BR              X9 }
}

uint64_t sub_221A0D60C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((240 * ((((**(_QWORD **)(v1 + 1616) == 0) ^ 0xE1F45F16) & 1) == 0)) ^ 0x25Fu))
                            - 8))();
}

uint64_t sub_221A0D64C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1176))(v0);
}

uint64_t sub_221A0D674(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  int v3;
  int v4;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDALL) = v2 & 0x1FF ^ 0xB31524D1;
  *(_QWORD *)(v1 - 0x5C6940C6B1BC6FFALL) = 0x6731FE5437D4814ALL;
  *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDELL) = 369984849;
  v3 = v2 ^ 0x8E;
  if (v3 == 1)
  {
    v4 = 369984865;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x5C6940C6B1BC6FE2) = -1830205819;
    v4 = 369984869;
LABEL_5:
    *(_QWORD *)(v1 - 0x5C6940C6B1BC6FF2) = 0xBEF60CFC367E8474;
    *(_QWORD *)(v1 - 0x5C6940C6B1BC6FEALL) = 0x4109F303C9817B8BLL;
    *(_DWORD *)(v1 - 0x5C6940C6B1BC6FDELL) = v4;
  }
  *(_DWORD *)(result + 4) = 1284260520;
  return result;
}

uint64_t sub_221A0D7BC(uint64_t a1, uint64_t a2)
{
  return off_24E76E528[((194 * (*(_DWORD *)(a2 + 4) != 1206753084)) ^ 0x24Au) - 1]();
}

uint64_t sub_221A0D7F8()
{
  return 4294925278;
}

uint64_t sub_221A0D800(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x1EEBF92F)
                       - 148926504
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x5E);
  return 0;
}

void sub_221A0D838(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v4 = v2 - 159353952;
  v3 = v2 - 159353952 < 0;
  v5 = 159353952 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951) - 345) | 0x109;
  __asm { BR              X10 }
}

uint64_t sub_221A0D968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, int a7, unsigned int a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(*v9 + 4 * a8) != v8) * a6) ^ a7))
                            - ((a7 - 80) ^ a5)
                            + 713))();
}

void sub_221A0D99C()
{
  JUMPOUT(0x221A0D930);
}

uint64_t sub_221A0D9A4(uint64_t result)
{
  *(_DWORD *)(result + 4) = 313388984;
  return result;
}

void sub_221A0DA48(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BR              X10 }
}

uint64_t sub_221A0DAD4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x27681A84B35EB0EDLL) == 1645153785) * ((856 * (v1 ^ 0xD8)) ^ 0x7D5)) ^ v1)))();
}

uint64_t sub_221A0DB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x27681A84B35EB0F5) - 1309758810;
  v4 = *(_DWORD *)(v1 - 0x27681A84B35EB0F9) - 1602345780;
  v5 = v3 < ((v2 - 112831669) & 0x6B9A6DEu) - 999042242;
  v6 = v3 > v4;
  if (v5 == v4 < 0xC473D418)
    v5 = v6;
  return (*(uint64_t (**)(void))(a1 + 8 * ((13 * v5) ^ v2)))();
}

uint64_t sub_221A0DBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  v7 = 11 * (v6 ^ 0x6D5);
  v8 = *(_QWORD *)(v4 - 0x27681A84B35EB105);
  v9 = *(unsigned __int8 *)(v8 + (v3 - 310716791)) ^ 0x32;
  v10 = ((*(unsigned __int8 *)(v8 + (v3 - 310716794)) ^ 0x32) << 24) | ((*(unsigned __int8 *)(v8 + (v3 - 310716793)) ^ 0x32) << 16) | ((*(unsigned __int8 *)(v8 + v3 - 310717010 + 2 * ((v7 + 936947223) & 0xC8274FF9 ^ 0x205)) ^ 0x32) << 8) | v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((203
                                          * (((v2 + v10 - 2 * (v10 & (v2 + 6) ^ v9 & 6) + 0x1000000) & 0xFFFFFF ^ 0xF0DF9)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) != -96652631)) ^ v7))
                            - 8))();
}

void sub_221A0DCC0()
{
  _DWORD *v0;

  *v0 = -1645193524;
}

uint64_t sub_221A0DE70@<X0>(_QWORD *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(*a1 - 0x42E48BBDD224DE3DLL) = v6 + v5 + 8;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((19 * (*v3 != (((a2 - 641) | 0x42) ^ v4 ^ (((a2 - 592) ^ 0xCB) * v7)))) ^ (a2 - 592))))();
}

uint64_t sub_221A0DEE4@<X0>(_QWORD *a1@<X0>, int a2@<W4>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;

  *(_QWORD *)(*a1 - 0x42E48BBDD224DE3DLL) = 0;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((19 * (*v3 != ((((a2 ^ 0x3D0) - 49) | 0x42) ^ v4 ^ (109 * (a2 ^ 0x31B))))) ^ a2 ^ 0x3D0)))();
}

void sub_221A0DF54(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x37021DA48139154ELL) = v3;
  *v1 = v2;
  JUMPOUT(0x221A0DE68);
}

void gLg1CWr7p()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 108757529 * ((v0 + 70320331 - 2 * (v0 & 0x43100CB)) ^ 0xE4AD62E0) + 1695027452;
  sub_221A43B78(v0);
  __asm { BR              X8 }
}

uint64_t sub_221A0E048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20,unsigned int a21,int a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = 1759421093 * (&a19 ^ 0xB37DB054);
  HIDWORD(a19) = v25 ^ 0x771B5177;
  a20 = v25 + 1806;
  a22 = v25 ^ 0x18F94B49;
  LODWORD(a19) = v25 ^ 0x7FA6CEE2;
  ((void (*)(unint64_t **))(*(_QWORD *)(v24 + 392) - 12))(&a19);
  LODWORD(a12) = a21;
  a21 = 1307
      - 460628867
      * (((&a19 | 0x79CC505F) - &a19 + (&a19 & 0x8633AFA0)) ^ 0x355AD222);
  a19 = &STACK[0x4BD26FD1213425D9];
  sub_221A1F8D0((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (v22 | ((a20 == 1645153785) << 8))) - 4))(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
}

uint64_t sub_221A0E150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,uint64_t a22,unsigned int a23,uint64_t a24)
{
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  void (*v31)(int *);
  unsigned int v32;
  uint64_t v33;

  v29 = 1178560073
      * (((&a20 | 0x2DEBD9B6) - &a20 + (&a20 & 0xD2142648)) ^ 0x977FA1D4);
  a23 = v29 ^ 0x3E8;
  a22 = a17;
  a21 = ((2 * v26) & 0xBCFBBE7E) + (v26 ^ 0x5E7DDF3F) - 234917126 + v29;
  sub_221A2F97C((uint64_t)&a20);
  v30 = 1178560073
      * (((&a20 | 0xA44E095A) - &a20 + (&a20 & 0x5BB1F6A0)) ^ 0x1EDA7138);
  a23 = (((2 * v25) & 0xFF9AFFFE) + (v25 ^ 0xFFCD7FFF) + 196320555) ^ v30;
  a21 = v30 + 1289;
  a22 = a17;
  a24 = v24;
  v31 = (void (*)(int *))(*(_QWORD *)(v28 + 1024) - 8);
  v31(&a20);
  v32 = 1178560073 * ((&a20 - 791991911 - 2 * (&a20 & 0xD0CB2999)) ^ 0x6A5F51FB);
  a22 = a17;
  a24 = a14;
  a23 = v32 ^ ((a13 ^ 0x3FB7BDBB) - 875995281 + ((2 * a13) & 0x7F6F7B76));
  a21 = v32 + 1289;
  v33 = ((uint64_t (*)(int *))v31)(&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((2034 * (a20 == 1645153785)) ^ 0x35Du)) - 12))(v33);
}

uint64_t sub_221A0E340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, uint64_t a20,int a21,int a22,int a23,int a24)
{
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  if (a12 >= 0x608FEDF6)
    v27 = 1010542952;
  else
    v27 = 635686783;
  v28 = 460628867 * ((&a19 + 663701623 - 2 * ((unint64_t)&a19 & 0x278F4877)) ^ 0x6B19CA0A);
  a23 = v27 - v28;
  a21 = v28 - 628183178;
  a22 = v28 + v25 + 2138962536;
  a19 = &STACK[0x58A7AA0862456916];
  a20 = a16;
  v29 = sub_221A43F44((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((101
                                                        * (a24 != v24 + ((v25 + 2122744248) & 0x81797F1F) - 545 - 495)) ^ v25))
                                          - 12))(v29);
}

uint64_t sub_221A0E434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                        + 8
                                                                        * (int)(((v12
                                                                                + 24
                                                                                + ((v12 + 1527559566) & 0xA4F349EE)
                                                                                + 117)
                                                                               * (a12 > 0x608FEDF5)) ^ v12))
                                                            - 4))(a1, a2, a3);
}

uint64_t sub_221A0E4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unsigned int *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  a23 = (v23 - 10) ^ (1225351577
                    * ((2 * (&a19 & 0x486B7D40) - &a19 + 932479672) ^ 0x140E5AAE));
  a20 = a15;
  a21 = v28;
  a22 = v24;
  ((void (*)(unsigned int *))(*(_QWORD *)(v27 + 8 * (v23 - 299)) - 8))(&a19);
  a19 = (v23 - 19) ^ (1374699841 * (((&a19 | 0x5275727) + (~&a19 | 0xFAD8A8D8)) ^ 0x68D34F2F));
  a21 = a15;
  a20 = a10;
  v26(&a19);
  a20 = a15;
  a19 = (v23 + 482) ^ (1755732067
                     * (((&a19 | 0xA2C01B31) - &a19 + (&a19 & 0x5D3FE4C8)) ^ 0x7C06A6EA));
  v29 = sub_221A3FFB0((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * ((1216 * ((_DWORD)a21 == 123 * (v23 ^ 0x16B) + 1645152924)) ^ v23))
                                          - 8))(v29);
}

uint64_t sub_221A0E6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((607 * (a17 == v18)) ^ v17))
                            - (((251 * v19) - 904) ^ (v17 - 199685485) & 0xBE6F75D)))();
}

uint64_t sub_221A0E708@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, int a8, int a9)
{
  unsigned int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((387 * ((((a9 ^ v9) > a6) ^ (a1 - 115) ^ 0x37) & 1)) ^ a1)))();
}

uint64_t sub_221A0E74C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = v0 - ((v0 << (((v1 + 19) & 0xDF) - 92)) & 0x82B34678) - 1051090116;
  v4 = ((v1 ^ 0xECF2B880) & (2 * v3) ^ 0x80B20068) + (v3 ^ 0x3720FFC9) + 1845473215 == 1685654708;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)) - 8))();
}

uint64_t sub_221A0E7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  _BOOL4 v12;

  v12 = v10 + v9 + 159818507 >= ((31 * (v8 ^ 0x165)) ^ (a8 + 1068)) - 928899231;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 | (4 * v12)) ^ v8 ^ 0x7B9)) - 12))();
}

uint64_t sub_221A0E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((61 * (v7 - a7 < (unint64_t)(v8 + 486) - 919)) ^ v8))
                            + 928899231
                            - ((v8 + 2002648558) & 0xBFFFE0E7)))();
}

uint64_t sub_221A0E8B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 >= 3 * (a2 ^ 0x284u) - 889) * ((a2 - v8) ^ (a8 + 888))) ^ a2)))();
}

uint64_t sub_221A0E8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v15 = (v12 + v10);
  v16 = *(_OWORD *)(v9 + v15 - 15);
  v17 = *(_OWORD *)(v9 + v15 - 31);
  v18 = a7 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((303 * (929 * (v13 ^ (a8 + 859)) - 1826 == (v11 & 0xFFFFFFE0))) ^ (v8 + v13 + 309))))(929);
}

uint64_t sub_221A0E950(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a3 | (v3 != v4))) - ((a3 - 997) ^ 0x359)))();
}

uint64_t sub_221A0E97C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((1843 * ((v9 & 0x18) == ((a2 - v8) ^ (a8 + 1524) ^ 0x399))) ^ a2)))();
}

uint64_t sub_221A0E9B4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)(a7 - 7 + (v10 + v8 - v11)) = *(_QWORD *)(v7 - 7 + (v10 + v8 - v11));
  return (*(uint64_t (**)(void))(v12 + 8 * ((1414 * ((a1 ^ 0x2F5) + v11 - 356 == (v9 & 0xFFFFFFF8))) ^ a1)))();
}

uint64_t sub_221A0EA00(int a1, int a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a3 + (a4 - v6)) = *(_QWORD *)(v7 + (a4 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 + v6 - 356 == a2) * a5) ^ a1)))();
}

uint64_t sub_221A0EA2C(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 | ((((v2 == a2) ^ (v4 - 23)) & 1) << 7)))
                            - ((v4 - 142744005) & 0x3FDFF8FF ^ (unint64_t)(v3 + 16))))();
}

uint64_t sub_221A0EA74@<X0>(uint64_t a1@<X6>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v7 ^ (a2 + 1712) ^ (v5 - 821)) + v6) = *(_BYTE *)(v4
                                                                                 + (v7 ^ (a2 + 1712) ^ (v5 - 821))
                                                                                 + v6);
  return (*(uint64_t (**)(void))(v8 + 8 * ((853 * (v6 - 1 == a3)) ^ (v3 + v7 + 465))))();
}

uint64_t sub_221A0EAB8()
{
  unsigned int v0;
  void (*v1)(_BYTE *);
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[4];
  unsigned int v8;
  uint64_t v9;

  v8 = v2
     + 535753261
     * ((2 * ((v7 ^ 0x7401F681) & 0x44CCC51) - (v7 ^ 0x7401F681) + 2075341740) ^ 0x546CB02)
     + 168;
  v9 = v5;
  v1(v7);
  v9 = v6;
  v8 = ((v2 - 744574573) & 0x2C614F1F)
     + 535753261 * ((((2 * v7) | 0xAEBB6136) - v7 + 681725797) ^ 0xDDA9BEB4)
     - 11;
  v1(v7);
  return v3 ^ v0;
}

void sub_221A0EBC0(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD v13[2];
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  int32x4_t v24;
  unint64_t *v25;
  int32x4_t v26;
  int32x4_t v27;
  uint64_t v28;
  uint64_t *v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t *v42;
  int v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v2 = 3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E);
  v3 = *(_DWORD *)(a1 + 4);
  v4 = *(_DWORD *)a1 ^ v2;
  v5 = 1178560073
     * ((((&v41 | 0x135B03A) ^ 0xFFFFFFFE) - (~&v41 | 0xFECA4FC5)) ^ 0x445E37A7);
  v6 = *(_DWORD *)(a1 + 8) ^ v2;
  v17 = 3804331
      * (((a1 | 0xF8BBF308D29CC998) - (a1 | 0x7440CF72D633667) + 0x7440CF72D633667) ^ 0x3712930CAC49EC6ELL);
  v7 = v3 + v2;
  v41 = 1076023948 - v5;
  v43 = v4 - v5 + 1172345383;
  v25 = &STACK[0x5C6940C6B1BC7126];
  v42 = &STACK[0x5C6940C6B1BC7126];
  sub_221A0D674((uint64_t)&v41);
  v8 = v6;
  v32 = v7 - 1515316656;
  v16 = v7 + 1773184230;
  v19 = v7 - 829826358;
  v18 = v7 - 119409945;
  v13[1] = (char *)&v13[-147572436] + 1;
  v20 = 55 * (v4 ^ 0x27u);
  v28 = v4 ^ 0x666u;
  v29 = &v40;
  v26 = vdupq_n_s32(0xC41E1BF2);
  v27 = vdupq_n_s32(0x620F0DFFu);
  v22 = (v4 + 271127083) & 0xEFD6EFF9;
  v15 = v4 + 1037830021;
  v14 = v4 - 1343287479;
  v34 = (v4 - 1343287479);
  v30 = 622 * (v4 ^ 0x36);
  v31 = v4;
  v24 = vdupq_n_s32(0x620F0DF9u);
  v21 = a1;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = (char *)*(&off_24E772B10 + (v4 ^ 0x1E)) - 8;
  v23 = v20 + *(_QWORD *)&v10[8 * v4] - 1049;
  v11 = v8 - 176919824 + ~(((v8 + 690444800) & 0x4C4D10FF ^ v8 & 0x10) << ((v4 + 64) ^ 0x75));
  v35 = (HIBYTE(v11) ^ 0x4C) - ((v11 >> 23) & 0x64) + 50;
  v36 = (BYTE2(v11) ^ 0x4D) - ((v11 >> 15) & 0x64) + 50;
  v37 = (BYTE1(v11) ^ 0x10) - ((2 * (BYTE1(v11) ^ 0x10)) & 0x64) + 50;
  v38 = (v8 - 16 + ~((v8 ^ v8 & 0x10) << ((v4 + 64) ^ 0x75))) ^ 0xDD;
  v12 = *(_QWORD *)&v10[8
                      * ((26 * (((2 * v39) & 0xA ^ 8) + (v39 & 0x3F ^ 0x6F3FFFD1u) - 1866465281 < 0xFFFFFFC0)) ^ (v4 + 58))]
      - 8;
  v33 = v9;
  __asm { BR              X13 }
}

uint64_t sub_221A0EFCC@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a3 + (a4 + v7)) = *(_BYTE *)(a2 + ((5 * (v4 ^ a1)) ^ (v6 + 1341)) + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((419 * ((a4 & 0xFFFFFFC0) != v8)) ^ v4)) - 8))();
}

uint64_t sub_221A0F018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,unsigned int a54,int a55,unsigned __int8 a56)
{
  int v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, char *);
  uint64_t v63;
  uint64_t v64;
  int v65;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _BOOL4 v72;

  v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(v58 + 8 * v56);
  HIDWORD(a12) = v57;
  v63 = a56 ^ 0x5Fu;
  if ((_DWORD)v63 == 2)
  {
    v72 = (unint64_t)&a39 < a30 && v59 < (unint64_t)&a48;
    return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v58
                                                               + 8
                                                               * (int)(((((a2 + 972) | 0x112) ^ 0x505) * v72) ^ (a2 + 1233)))
                                                   - (a29 ^ 0x65A)))(a54, a54);
  }
  else if ((_DWORD)v63 == 1)
  {
    v64 = ((_DWORD)a2 + 40) | 0x81u;
    v65 = a2 + 169;
    v67 = (unint64_t)&a39 >= a30 || v59 >= (unint64_t)&a48;
    v68 = (v64 + 637);
    v69 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * (int)((v68 * v67) ^ v65)) - 4);
    return v69(v64, 1075421723, v69, v68, &a39, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else
  {
    a50 = v60 + 2 * (a50 ^ v60) - (v61 & (4 * (a50 ^ v60)));
    a51 = 2 * (a51 ^ v60) + v60 - (v61 & (4 * (a51 ^ v60)));
    a52 = 2 * (a52 ^ v60) + v60 - (v61 & (4 * (a52 ^ v60)));
    a53 = 2 * (a53 ^ v60) + v60 - (v61 & (4 * (a53 ^ v60)));
    return v62(v63, a2, 3005633205, a4, &a39);
  }
}

uint64_t sub_221A0FFA4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32,uint64_t a33,uint64_t a34,int a35)
{
  uint64_t v35;
  unsigned int v36;
  _BOOL4 v37;
  _BOOL4 v38;
  _BOOL4 v39;

  v36 = a35 + 2117096340 + a7;
  v37 = v36 < 0xCB0A057B;
  v38 = v36 > a32;
  if (a32 < 0xCB0A057B != v37)
    v39 = v37;
  else
    v39 = v38;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((634 * !v39) ^ (a2 + 1022))) - 12))();
}

uint64_t sub_221A10028(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (47 * (v7 + a3 + 63 < (v7 + a3)))))
                            - ((26 * (a7 ^ 0x4DEu)) ^ 0x38)))();
}

uint64_t sub_221A10084(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  *(_BYTE *)(a4 + v9) = *(_BYTE *)(v12 + (v8 + a3))
                      - ((*(_BYTE *)(v12 + (v8 + a3)) << (((v10 + 113) | a8) - 30)) & a6)
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 != 63) * v13) ^ v10)) - 12))();
}

uint64_t sub_221A100D8(uint64_t a1, uint64_t a2, int a3, int8x16_t *a4)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  *a4 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v7 + (v4 + a3)), vandq_s8(vaddq_s8(*(int8x16_t *)(v7 + (v4 + a3)), *(int8x16_t *)(v7 + (v4 + a3))), v9)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 + 317)) - 12))();
}

uint64_t sub_221A10134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * ((984
                                                                         * (((((_DWORD)a2 + 528) ^ (a13 - 1998991134 + (((_DWORD)a2 - 52) | 0x44u) + 1317 < 0xFFFFFFFB)) & 1) == 0)) ^ ((int)a2 + 441))))(a1, a2, a3, a4);
}

void sub_221A101A8()
{
  JUMPOUT(0x221A0F328);
}

uint64_t sub_221A101C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  _BOOL4 v19;

  v19 = a16 < 0xF3E5C5F5;
  if (v19 == (v16 - 1492379478) < 0xF3E5C5F5)
    LOBYTE(v19) = v16 - 1492379478 < a16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * (((16 * ((v17 ^ 0x3F ^ v19) & 1)) & 0xDF | (32 * ((v17 ^ 0x3F ^ v19) & 1))) ^ v17))
                            - 4))();
}

uint64_t sub_221A10248@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W5>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = a2 < v9;
  *(_BYTE *)(a4 + (a6 + v8)) = *(_BYTE *)(v11 + (v6 + a3))
                                           - (a5 & (2 * *(_BYTE *)(v11 + (v6 + a3))))
                                           + 50;
  v13 = a1 + v6 + 1;
  v14 = v12 ^ (v13 < v9);
  v15 = v13 < a2;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((16 * !v12) | (32 * !v12)) ^ v7)) - 4))();
}

uint64_t sub_221A102C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;

  v52 = 628203409 * ((-671978737 - ((v51 - 168) | 0xD7F26B0F) + ((v51 - 168) | 0x280D94F0)) ^ 0xAA8598C3);
  *(_DWORD *)(v51 - 160) = v52 + v49 - 646;
  *(_DWORD *)(v51 - 156) = a15 - v52;
  STACK[0x358] = a24;
  v53 = sub_221A21EB0(v51 - 168);
  v54 = a49 & 0x3F;
  *(&a40 + (v54 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v50
                                                                       + 8
                                                                       * ((105 * ((v54 ^ 0x14) < 0x38)) ^ v49))
                                                           - ((v49 + 2049300052) & 0x85DA233C)
                                                           + 48))(v53, a32, 3005633205);
}

uint64_t sub_221A103C0()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v0 - 1180579210) < 0x38) * (3 * (v2 ^ 0x1ED) - 42)) ^ (v2 + 461))))(50);
}

uint64_t sub_221A10408@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v1;
  v5 = v2 + v1;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((a1 - 905) ^ 0x68C) - 1039)
                                          * ((unint64_t)(v6 - v4 + 1180579210) < 8)) ^ a1))
                            - 8))();
}

uint64_t sub_221A10460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(a10 + v12 + (v10 ^ 0x68F)) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)((624 * ((v11 & 0xFFFFFFFFFFFFFFF8) == 8)) | v10)) - 8))();
}

uint64_t sub_221A104A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + (v5 ^ a5)) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)(((v6 == 0) * v8) | v5)) - 8))();
}

uint64_t sub_221A104D4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1) | 2) - 509) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_221A104FC@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a3 + v4;
  *(_BYTE *)(a2 + v6) = a1;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((unint64_t)(v6 + 1) < 0x38) | (2 * ((unint64_t)(v6 + 1) < 0x38))) ^ v3 ^ 3)))();
}

uint64_t sub_221A10530(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(a4 + v5 + v6) = a1;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((unint64_t)(v5 + v6 + 1) < 0x38) | (2
                                                                            * ((unint64_t)(v5 + v6 + 1) < 0x38))) ^ v4)))();
}

void sub_221A1055C()
{
  JUMPOUT(0x221A0F324);
}

uint64_t sub_221A10898()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 != v0) * ((v2 - 1209) ^ 0x27D)) ^ v2)) - 12))();
}

uint64_t sub_221A108E0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + v4;
  *(_BYTE *)(a1 + v7) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x40) * v3) ^ (a2 + 1209))) - 12))();
}

void sub_221A10920()
{
  JUMPOUT(0x221A0F324);
}

uint64_t sub_221A10930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  int v37;
  int v38;
  uint64_t v39;
  BOOL v40;

  v40 = (v38 & 0xFFFFFFFC) == ((v37 | 0x92) ^ 0x2E1) + 1998989753;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(v39
                                                             + 8
                                                             * (((2
                                                                * (((19 * ((v37 | 0x92) ^ 0xE1)) ^ v40) & 1)) & 0xF7 | (8 * (((19 * ((v37 | 0x92) ^ 0xE1)) ^ v40) & 1))) ^ (v37 | 0x92))))(a1, a2, &a37);
}

uint64_t sub_221A10994@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(a2 + (a3 + v5)) = *(_BYTE *)(a1 + v3 - 1998989808);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1737 * (((v3 + 1) & 0xFFFFFFFCLL) == v6)) ^ (v4 - 313))))();
}

uint64_t sub_221A109F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v26 = 628203409 * ((~((v25 - 168) | 0x9F6F2C5F) + ((v25 - 168) & 0x9F6F2C5F)) ^ 0xE218DF93);
  *(_DWORD *)(v25 - 160) = v26 + v24 + 1001;
  *(_DWORD *)(v25 - 156) = 507371030 - v26;
  STACK[0x358] = a24;
  v27 = sub_221A21EB0(v25 - 168);
  return a20(v27);
}

uint64_t sub_221A10A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,int a53)
{
  uint64_t v53;
  uint64_t v55;
  unint64_t v56;

  if (BYTE4(a32) == 2)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                          + 8
                                          * ((140 * (a53 != 62 * (a2 ^ 0x26) + 369983733)) ^ ((int)a2 + 1064)))
                              - 12))();
  if (BYTE4(a32) == 1)
    return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                          + 8
                                          * (((2 * (a53 == 369984849)) | (16 * (a53 == 369984849))) ^ ((int)a2 + 1050)))
                              - ((2 * (_DWORD)a2) ^ 0x426u)
                              + 1090))();
  v55 = 103 * (a2 ^ 0x31);
  v56 = ((unint64_t)&a37 ^ 0x7DFFFDE1BDDDED78 ^ v55)
      + ((2 * (_QWORD)&a37) & 0xFBFFFBC37BBBDEF0)
      - 0x601C90400009019ELL;
  a52 = ((v56 + 35) ^ 0xBA) * (v56 + 103 * (a2 ^ 0x31) + 49);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 + 8 * (int)v55) - 4))(a1, a2, a19, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

void sub_221A10DAC()
{
  JUMPOUT(0x221A10D7CLL);
}

uint64_t sub_221A10DB4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v4;

  memset((void *)(v1 - 204), 50, 16);
  v2 = 235795823 * ((((v1 - 168) | 0xEB9F054C) - ((v1 - 168) & 0xEB9F054C)) ^ 0x7F324C15);
  *(_DWORD *)(v1 - 160) = v2 + 1596901039;
  *(_DWORD *)(v1 - 132) = (a1 + 1809) ^ v2;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_24E772B10 + a1 - 11) - 4))(v1 - 168);
  *(_DWORD *)(v4 + 12) = *(_DWORD *)(v1 - 136);
  return result;
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_221A10F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;

  a15 = 108757529
      * (((&a14 | 0x7488BE6A) - &a14 + (&a14 & 0x8B774190)) ^ 0x9414DC41)
      + 1695027452;
  v17 = sub_221A43B78(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((924 * (a14 == 1645153785)) ^ v15)) - 4))(v17);
}

uint64_t sub_221A10FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a16 = 1307 - 460628867 * ((&a14 & 0x9E53D03D | ~(&a14 | 0x9E53D03D)) ^ 0x2D3AADBF);
  a14 = &STACK[0x4BD26FD1213425B9];
  sub_221A1F8D0((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((17 * (a15 == v16)) ^ 0x4AD))
                                                                                                - 4))(v18, v19, v20, v21, v22, v23, v24);
}

uint64_t sub_221A1106C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  a16 = v19 + 1224239923 * ((&a14 & 0xD2B4AA2E | ~(&a14 | 0xD2B4AA2E)) ^ 0xDFF8A806) + 1201;
  a17 = v17;
  a15 = a12;
  v23 = ((uint64_t (*)(int *))(*(_QWORD *)(v21 + 8 * (v19 ^ 0xB0)) - 12))(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8 * (((a14 == v18) * (v22 + v19 + 840366501 + 600)) ^ v19))
                                          - 4))(v23);
}

uint64_t sub_221A11120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, unsigned int a17, unsigned int a18, int a19)
{
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 460628867 * (&a14 ^ 0x4C96827D);
  a18 = 635686783 - v23;
  a14 = &STACK[0x58A7AA08624568F6];
  a15 = a12;
  a16 = v23 - 910010299;
  a17 = v23 + v20 + 2138963185;
  v24 = sub_221A43F44((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * (((a19 == v19) * (((v20 ^ (v21 + 602)) - v21 + 300) ^ 0x789)) ^ v20))
                                          - 4))(v24);
}

uint64_t sub_221A111D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void (*v21)(unsigned int *);
  uint64_t v22;

  a14 = (v20 - 390) ^ (1374699841
                     * ((&a14 - 762734092 - 2 * (&a14 & 0xD28999F4)) ^ 0xBF7D81FD));
  a15 = &STACK[0x384B062F07609560];
  a16 = a11;
  v21 = (void (*)(unsigned int *))(*(_QWORD *)(v19 + 8 * (v20 ^ 0x26A)) - 8);
  v21(&a14);
  a14 = (v20 - 390) ^ (1374699841
                     * ((&a14 + 2125390926 - 2 * (&a14 & 0x7EAEE44E)) ^ 0x135AFC47));
  a15 = &STACK[0x384B062F07609564];
  a16 = a11;
  v21(&a14);
  a14 = (v20 + 111) ^ (1755732067
                     * ((791046139 - (&a14 | 0x2F2667FB) + (&a14 | 0xD0D99804)) ^ 0xE1F25DF));
  a15 = a11;
  v22 = sub_221A3FFB0((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((((v20 - v16 - 1) ^ ((_DWORD)a16 == v17)) & 1)
                                                        * (v20 ^ 0x2F5)) ^ v20))
                                          - 4))(v22);
}

uint64_t sub_221A1133C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)((1534 * (a14 == v14)) ^ v16 ^ 0x2A)) - (v16 ^ 0x2DBLL)))();
}

uint64_t sub_221A11380()
{
  _QWORD *v0;
  int v1;
  int v2;
  void (*v4)(_BYTE *);
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE v8[4];
  int v9;
  uint64_t v10;

  *v0 = v2 ^ v7 ^ 0x5019F7ADu;
  v10 = v5;
  v9 = 535753261 * (((v8 | 0x7AAA3359) + (~v8 | 0x8555CCA6)) ^ 0x705E3D77) - 840365647 + v2;
  v4(v8);
  v9 = 535753261 * ((v8 - 1904952353 - 2 * ((unint64_t)v8 & 0x8E74BBDF)) ^ 0x8480B5F0)
     - 840365647
     + v2;
  v10 = v6;
  v4(v8);
  return v1 ^ 0x620F0DF9u;
}

uint64_t sub_221A11490(uint64_t a1)
{
  int v1;
  signed int v2;

  v1 = *(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33) + 2;
  v2 = (v1 ^ 0xF680737B) + *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  if (v2 < 0)
    v2 = -v2;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + v1 - 177)
                              + ((((v2 ^ 0xBDEDFFF6) + 1108475913 + ((2 * v2) & 0x7BDBFFEC) < 0x7FFFFFFF)
                                * ((v1 - 1262923266) & 0x4B46ADFF ^ 0x60E)) ^ v1)
                              - 1)
                            - (((v1 - 18) | 0x10u) ^ 0xD5)))();
}

uint64_t sub_221A11594(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  _QWORD *v5;
  unsigned int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a5
                                        + 8 * (((*(_DWORD *)(*v5 + 4 * v6) != a2) * (((a4 - 22) | 0x18) ^ a3)) ^ a4))
                            - 12))();
}

void sub_221A115CC()
{
  JUMPOUT(0x221A11550);
}

uint64_t sub_221A115D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(result + 4) = a6;
  return result;
}

void sub_221A115DC()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  char v3;

  v0 = MEMORY[0x24BDAC7A8]();
  if (*(_QWORD *)(v0 + 24))
    v2 = *(_QWORD *)(v0 + 8) == 0x58A7AA08624568E6;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BR              X8 }
}

uint64_t sub_221A11708()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  int v8;

  LODWORD(STACK[0x468]) = v0;
  v5 = v4 - 200;
  *(_BYTE *)v5 = (-85 * ((2 * ((v4 + 56) & 0x38) - (v4 + 56) - 57) ^ 0x31)) ^ 0x2E;
  STACK[0x2A8] = (unint64_t)&STACK[0x4CAF57822185C49D];
  *(_QWORD *)(v5 + 8) = &STACK[0x4CAF57822185C49D];
  STACK[0x2B0] = (unint64_t)&STACK[0x705CCB0086AF2F6E];
  *(_QWORD *)(v5 + 24) = &STACK[0x705CCB0086AF2F6E];
  *(_DWORD *)(v4 - 184) = 3804331 * ((2 * ((v4 - 200) & 0x59AF7138) - (v4 - 200) - 1504670009) ^ 0xD885AB31) + v2 + 856;
  v6 = *(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0x2CE));
  STACK[0x2A0] = (unint64_t)v6;
  v7 = v6(v4 - 200);
  v8 = *(_DWORD *)(v4 - 180);
  LODWORD(STACK[0x618]) = v8;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((v8 == 1645153785) * ((((v2 + 592) | 4) + 556) ^ (v2 - 231))) ^ v2)))(v7);
}

#error "221A1203C: call analysis failed (funcsize=363)"

uint64_t sub_221A12040()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  STACK[0x2C8] = v1;
  STACK[0x4D8] = 0;
  v6 = 235795823 * ((565679011 - ((v5 - 200) | 0x21B793A3) + ((v5 - 200) | 0xDE486C5C)) ^ 0x4AE52505);
  v4[1] = 0x15C2A15CF2725D85;
  v7 = STACK[0x2B8];
  *(_DWORD *)(v5 - 200) = v6 ^ 0xE4EF48AC;
  *(_DWORD *)(v5 - 164) = v3 - v6 - 440;
  v8 = STACK[0x2C0];
  v4[2] = v7;
  v4[3] = v8;
  v9 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v0 + 8 * (v3 - 626)) - 12);
  STACK[0x2D0] = (unint64_t)v9;
  v10 = v9(v5 - 200);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((22 * (*(_DWORD *)(v5 - 168) != 1645153785)) ^ v3))
                                          - ((v3 ^ 0x14Du)
                                           + 676)
                                          + 1249))(v10);
}

uint64_t sub_221A12120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  LODWORD(STACK[0x4AC]) = v4;
  STACK[0x620] = STACK[0x460];
  LODWORD(STACK[0x618]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((((179 * (((v3 - 1197) | 0x44) ^ 0x7B)
                                                                           - 1018159216) & 0x3CAFDFCB ^ 0x597)
                                                                         * (v4 == v6)) ^ ((v3 - 1197) | 0x44))))(a1, a2, a3, 2649773600);
}

void sub_221A173B8()
{
  JUMPOUT(0x221A11F98);
}

uint64_t sub_221A17450(unint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 304) = v2 - 176;
  *(_QWORD *)(v5 + 96) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 | (2 * (v4 > a1)))) - ((v1 - 22) ^ 0x33FLL)))();
}

uint64_t sub_221A174F4@<X0>(uint64_t a1@<X0>, char a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(a1 + (v6 + v7)) = *(_BYTE *)(v9 + (v6 + v7)) ^ *(_BYTE *)(v4
                                                                                                 + ((v6 + v7) & 0xFLL)) ^ *(_BYTE *)(v5 + ((v6 + v7) & 0xFLL)) ^ *(_BYTE *)(((v6 + v7) & 0xFLL) + v3 + 2) ^ (((v6 + v7) & 0xF) * (a3 ^ 0x80)) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((120 * ((v6 + 1 + v7) < 0x150)) ^ a3)) - 8))();
}

uint64_t sub_221A1755C@<X0>(uint64_t a1@<X0>, char a2@<W3>, int a3@<W5>, char a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (v9 + a3);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(v12 + v13) ^ *(_BYTE *)(v7 + (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v6 + 2) ^ ((v13 & 0xF) * a4) ^ a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 - 1 != v10) * a5) ^ a6)) - 8))();
}

uint64_t sub_221A175BC@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14)
{
  int v14;
  uint64_t v15;
  _QWORD *v16;
  int8x16_t *v17;
  uint64_t v18;

  v17 = (int8x16_t *)((char *)&STACK[0x6C0] + STACK[0x3D0] + (a7 ^ 0x991D124D801601E0));
  *v17 = veorq_s8(*a14, (int8x16_t)xmmword_2226906B0);
  v18 = v16[47];
  v16[48] = a1;
  v16[49] = a1;
  v16[47] = 435 * (v14 ^ 0x662u) + v18 - 1708;
  return ((uint64_t (*)(int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (v14 ^ ((v17 == a1) | ((v17 == a1) << 8))))
                                                                                           - 8))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_221A17640@<X0>(unsigned __int8 *a1@<X0>, int a2@<W4>, char a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  unsigned __int8 v84;
  int v85;
  uint64_t v86;
  int v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  char v102;
  int v103;
  char v104;
  unsigned int v105;
  int v106;
  char v107;
  uint64_t v108;
  int v109;
  unint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  uint64_t v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  unint64_t v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  int v224;
  int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  int v258;
  int v259;
  BOOL v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unint64_t v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  char *v277;
  char *v278;
  char *v279;
  unsigned int v280;
  unsigned int v281;
  char *v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  unsigned int v294;
  uint64_t v295;
  unsigned int v296;
  uint64_t v297;
  unsigned int v298;
  uint64_t v299;
  char *v300;
  char *v301;
  int v302;
  int v303;
  unsigned int v304;
  uint64_t v305;
  char *v306;
  int v307;
  unint64_t v308;
  unint64_t v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unint64_t v318;
  unsigned int v319;
  int v320;
  _BYTE *v322;
  unsigned __int8 *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  int v336;
  uint64_t v337;
  int v338;
  int v339;
  uint64_t v340;

  v61 = (unsigned __int8 *)&STACK[0x19C0] + a4;
  *v61 = *a1;
  *(_QWORD *)(v61 + 1) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v61 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v61 + 13) = *(_WORD *)(a1 + 13);
  v61[15] = a1[15];
  v62 = *((_QWORD *)a1 + 1);
  *((_QWORD *)v61 + 2) = *(_QWORD *)a1;
  *((_QWORD *)v61 + 3) = v62;
  v63 = (v57 - 589705933) & 0x23262F86;
  v64 = *(_QWORD *)(v59 + 8 * (v57 - 1560)) - 12;
  v65 = *(_QWORD *)(v59 + 8 * (v57 - 1531));
  v66 = *(_QWORD *)(v59 + 8 * (v57 - 1546)) - 12;
  v67 = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 14) ^ 0x86));
  v68 = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 10) ^ 0xCBLL));
  LODWORD(v62) = (((*(unsigned __int8 *)(v65 + (v61[8] ^ 0x65)) + (v61[8] ^ a2) - 123) ^ 0xF5) << 24) | (((v68 ^ (16 * v68)) ^ 0x25) << 8);
  v69 = ((v61[7] ^ 0x90) + *(_BYTE *)(v64 + (v61[7] ^ 0x7CLL)) - 85) | ((((v61[4] ^ 0x13)
                                                                                         + *(unsigned __int8 *)(v65 + ((((v57 + 51) & 0x86) - 68) ^ v61[4]))
                                                                                         - 123) ^ 0xE6) << 24);
  v70 = *(_QWORD *)(v59 + 8 * (v57 - 1733));
  v71 = *(unsigned __int8 *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 1) ^ 0x1ALL));
  v72 = (v71 >> 1) ^ (((((v71 ^ 0xA7) + (v71 & 0xD5 ^ a3) + 1) ^ v71 & 0xDF) & 0xF0) >> 4) ^ 0x3C;
  v73 = ((v61[3] ^ 0xB8) + *(_BYTE *)(v64 + (v61[3] ^ 0x54)) - 85) | ((v71 ^ 0x37 ^ (v72 - ((2 * v72) & 0xA6) + 83)) << 16);
  LOBYTE(v71) = *(_BYTE *)(v66 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 6) ^ 0x2ELL));
  v74 = *(_BYTE *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 13) ^ 0x5BLL)) ^ 0x72;
  v75 = v69 & 0xFFFF00FF | (((v71 ^ (16 * v71)) ^ 0x39) << 8);
  v76 = *(unsigned __int8 *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 13) ^ 0x5BLL)) ^ 0x72 ^ (v74 >> 4) ^ (v74 >> 1);
  v77 = (((v67 ^ (16 * v67)) ^ 0xE9) << 8) | ((v76 - ((2 * v76) & 0x2E) + 23) << 16);
  LOBYTE(v72) = *(_BYTE *)(v70 + (*((unsigned __int8 *)&STACK[0x19C0] + a4 + 5) ^ 0xEDLL));
  v78 = ((v72 ^ 0x72) >> 4) ^ ((v72 ^ 0x72) >> 1);
  v324 = v70;
  v326 = v65;
  v327 = v64;
  LODWORD(v62) = v62 & 0xFF00FF00 | ((v61[11] ^ 0x3E) + *(_BYTE *)(v64 + (v61[11] ^ 0xD2)) - 85) | (((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ ((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ 0x72) >> 4) ^ ((*(_BYTE *)(v70 + (v61[9] ^ 0x38)) ^ 0x72) >> 1)) ^ 0xD9) << 16);
  v325 = v66;
  v79 = v73 & 0xFFFF00FF | (((*(unsigned __int8 *)(v65 + (*v61 ^ 0x81)) + (*v61 ^ 0xD0) - 123) ^ 0x3C) << 24) | (((*(_BYTE *)(v66 + (v61[2] ^ 0x22)) ^ (16 * *(_BYTE *)(v66 + (v61[2] ^ 0x22)))) ^ 0x17) << 8);
  LODWORD(STACK[0x428]) = (v77 & 0xFFFFFF00 | ((((v61[12] ^ 0x13) + *(unsigned __int8 *)(v65 + (v61[12] ^ 0x42)) - 123) ^ 0xE6) << 24) | (*(_BYTE *)(v64 + (v61[15] ^ 0x38)) + (v61[15] ^ 0xD4) - 85)) ^ 0x5DA22AEE;
  LODWORD(STACK[0x3D8]) = v79 ^ 0x29843879;
  LODWORD(STACK[0x300]) = (v75 & 0xFF00FFFF | ((v72 ^ 0x6C ^ (v78
                                                                                              - ((2 * v78) & 0x62)
                                                                                              + 49)) << 16)) ^ HIDWORD(a34);
  LODWORD(STACK[0x408]) = v62 ^ 0x18D17C97;
  v322 = *(_BYTE **)(v60 + 384);
  v323 = *(unsigned __int8 **)(v60 + 392);
  STACK[0x420] = 14;
  HIDWORD(v333) = (v63 ^ 0x619) + 301;
  v80 = v66;
  LODWORD(v61) = *(unsigned __int8 *)(v66 + (BYTE4(v333) ^ 0x15u ^ v323[14]));
  STACK[0x320] = 4;
  v81 = v323[4];
  v82 = (((16 * (_DWORD)v61) ^ 0xFFFFFFA0) - ((2 * ((16 * (_DWORD)v61) ^ 0xFFFFFFA0)) & 0x60) + 58) ^ v61;
  LOBYTE(v61) = *(_BYTE *)(v65 + (v81 ^ 0xE6));
  STACK[0x460] = 15;
  v83 = v323[15];
  v84 = ((_BYTE)v61 + (v81 ^ 0xB7) - 123) ^ 0xE5;
  if ((v83 & 0x20) != 0)
    v85 = -32;
  else
    v85 = 32;
  v86 = (v85 + v83);
  v87 = *(unsigned __int8 *)(v64 + (v86 ^ 0xDD));
  STACK[0x418] = 6;
  v88 = *(unsigned __int8 *)(v66 + (v323[6] ^ 0x51));
  v339 = v87 + (v86 ^ 0x31);
  STACK[0x328] = 12;
  STACK[0x2D0] = 0;
  HIDWORD(v89) = v88 ^ (((16 * v88) ^ 0xFFFFFFA0) - ((2 * ((16 * v88) ^ 0xFFFFFFA0)) & 0x60) + 58) ^ 0x3F;
  LODWORD(v89) = BYTE4(v89) & 0xF8;
  v90 = ((v89 >> 3) | ((unint64_t)v84 << 13)) ^ 0x58F620A6;
  v91 = (v90 >> 21) | ((_DWORD)v90 << 11);
  v338 = *(unsigned __int8 *)(v65 + (v323[12] ^ 0xF7) - 2 * ((v323[12] ^ 0xF7) & 0xAEu) + 174) - (v323[12] ^ 0xF7);
  v92 = *v323;
  STACK[0x3D0] = 3;
  v93 = v323[3];
  v94 = *(unsigned __int8 *)(v65 + (v92 ^ 0xD8)) + (v92 ^ 0x76) - 2 * (v92 ^ 0x76);
  STACK[0x400] = 8;
  v336 = (v93 ^ 0xFFFFFFBB) + *(unsigned __int8 *)(v64 + (v93 ^ 0x57));
  v95 = (v323[8] ^ 0xA7) + *(_BYTE *)(v65 + (v323[8] ^ 0xF6));
  STACK[0x3C0] = 7;
  LOBYTE(v93) = (v323[7] ^ 0xE9) + *(_BYTE *)(v64 + (v323[7] ^ 5)) - 85;
  STACK[0x298] = 13;
  v96 = *(unsigned __int8 *)(v70 + (v323[13] ^ 0x12));
  v97 = v96 ^ ((((v96 ^ 0x72u) >> 3) & 4 ^ v96 & 0xA4 | ((v96 ^ 0x72u) >> 3) & 0xFFFFFFFB ^ (v96 ^ 0x72) & 0x5A) >> 1);
  LOBYTE(v96) = *(_BYTE *)(v70 + (v323[5] ^ 0x9CLL));
  v98 = ((v96 ^ 0x72) >> 4) ^ ((v96 ^ 0x72) >> 1);
  v99 = v93 | ((v96 ^ 0xE6 ^ (v98 - ((2 * v98) & 0x62) + 49)) << 16);
  STACK[0x290] = 9;
  v100 = *(unsigned __int8 *)(v70 + (v323[9] ^ 0x76));
  v101 = (v100 ^ 0x72u) >> 3;
  v102 = v100 & 8 | 0x37;
  if ((v101 & v100 & 8) != 0)
    v102 = 110 - v102;
  v103 = v100 ^ ((((v101 + v102 - 55) ^ (v100 ^ 0x72) & 0xF7) & 0xFE) >> 1);
  STACK[0x228] = 1;
  v104 = *(_BYTE *)(v64 + (v323[11] ^ 0x12)) + (v323[11] ^ 0xFE);
  v105 = *(_BYTE *)(v70 + (v323[1] ^ 0xCFLL)) ^ 0x72;
  v106 = *(unsigned __int8 *)(v70 + (v323[1] ^ 0xCFLL)) ^ 0x72 ^ (v105 >> 4) ^ (v105 >> 1);
  STACK[0x258] = 10;
  v107 = *(_BYTE *)(v80 + (v323[10] ^ 0xFBLL));
  v108 = *(_QWORD *)(v59 + 8 * (v63 - 769)) - 4;
  HIDWORD(v331) = (v107 ^ (16 * v107)) ^ 0x23;
  v109 = *(_DWORD *)(v108 + 4 * ((v107 ^ (16 * v107)) ^ 0xACu));
  HIDWORD(v110) = v109 ^ 0x7763;
  LODWORD(v110) = v109 ^ 0x55D90000;
  v111 = *(_QWORD *)(v59 + 8 * (v63 - 704)) - 8;
  LODWORD(v333) = v97;
  v112 = *(_DWORD *)(v111 + 4 * (v97 ^ 0x17));
  HIDWORD(v340) = v63;
  LODWORD(v331) = v94 - 124;
  v113 = *(_QWORD *)(v59 + 8 * (v63 - 734)) - 4;
  v114 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v94 - 124) ^ 0xF9u)) ^ (16 * (v112 ^ 0xB4C82AC9)
                                                                                          + 1452181747
                                                                                          - ((32 * (v112 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v115 = v112 ^ (v114 - 905743237 - ((2 * v114) & 0x9406E8F6));
  HIDWORD(v330) = v99 ^ v91;
  v116 = v99 ^ v91 ^ 0xDD03A24B;
  v117 = (v99 ^ v91) ^ 0x78;
  v118 = *(_QWORD *)(v59 + 8 * (v63 ^ 0x394)) - 8;
  LODWORD(v334) = v82;
  v119 = *(_DWORD *)(v108 + 4 * (v82 ^ 0x71u));
  v120 = *(_DWORD *)(v118 + 4 * v117) ^ v115;
  HIDWORD(v110) = v119 ^ 0x7763;
  LODWORD(v110) = v119 ^ 0x55D90000;
  v332 = __PAIR64__(v103, v106);
  v121 = *(_DWORD *)(v111 + 4 * (v106 ^ 0xBFu)) ^ 0xB4C82AC9;
  v122 = (v110 >> 16) ^ (16 * v121 + 1452181747 - ((32 * v121) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v116));
  HIDWORD(v329) = (v104 - 85);
  v123 = *(_DWORD *)(v118 + 4 * (HIDWORD(v329) ^ 0xB9u)) ^ v121 ^ (v122 - 905743237 - ((2 * v122) & 0x9406E8F6));
  v124 = *(_DWORD *)(v111 + 4 * BYTE2(v116)) ^ 0xB4C82AC9;
  v125 = *(unsigned __int8 *)(v80 + (v323[2] ^ 0x26)) ^ 0xFFFFFF82;
  LODWORD(v329) = v125 ^ (16 * v125);
  v126 = *(_DWORD *)(v108 + 4 * (v329 ^ 0xFBu));
  HIDWORD(v110) = v126 ^ 0x7763;
  LODWORD(v110) = v126 ^ 0x55D90000;
  HIDWORD(v328) = (v95 - ((2 * v95 + 10) & 0x4E) - 84);
  v127 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIDWORD(v328) ^ 0x40u)) ^ (16 * v124
                                                                           + 1452181747
                                                                           - ((32 * v124) & 0xAD1D11E0));
  LODWORD(v330) = v339 - 85;
  v128 = *(_DWORD *)(v118 + 4 * ((v339 - 85) ^ 0xEBu)) ^ v124 ^ (v127
                                                                                  - 905743237
                                                                                  - ((2 * v127) & 0x9406E8F6));
  v129 = *(_DWORD *)(v111 + 4 * (v103 ^ 0xEu)) ^ 0xB4C82AC9;
  v130 = *(_DWORD *)(v108 + 4 * (BYTE1(v91) ^ 0x31u));
  HIDWORD(v110) = v130 ^ 0x7763;
  LODWORD(v110) = v130 ^ 0x55D90000;
  v131 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v338 - 124) ^ 0xF7u)) ^ (16 * v129
                                                                                           + 1452181747
                                                                                           - ((32 * v129) & 0xAD1D11E0));
  HIDWORD(a20) = v336 - 85;
  LODWORD(v328) = v338 - 124;
  v132 = *(_DWORD *)(v118 + 4 * ((v336 - 85) ^ 0x33u)) ^ v129 ^ (v131
                                                                                  - 905743237
                                                                                  - ((2 * v131) & 0x9406E8F6));
  v133 = *(_DWORD *)(v111 + 4 * (BYTE2(v132) ^ 0xBBu)) ^ 0xB4C82AC9;
  v134 = *(_DWORD *)(v108 + 4 * (BYTE1(v128) ^ 0xF4u));
  HIDWORD(v110) = v134 ^ 0x7763;
  LODWORD(v110) = v134 ^ 0x55D90000;
  BYTE1(v134) = BYTE1(v123) ^ 0xAD;
  v135 = v133 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v120) ^ 0xE3)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v123 ^ 0xDBu)) ^ (16 * v133 + 1452181747 - ((32 * v133) & 0xAD1D11E0)) ^ (v110 >> 16);
  v136 = *(_DWORD *)(v111 + 4 * (BYTE2(v120) ^ 0x24u));
  v137 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v132 ^ 0x22E) >> 8));
  HIDWORD(v110) = v137 ^ 0x7763;
  LODWORD(v110) = v137 ^ 0x55D90000;
  v138 = (16 * (v136 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v136 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v123 ^ 0xF15ADDB) >> 24)) ^ (v110 >> 16);
  v139 = v138 - 905743237 - ((2 * v138) & 0x9406E8F6);
  v140 = *(_DWORD *)(v118 + 4 * (v128 ^ 0x80u)) ^ v136;
  v141 = *(_DWORD *)(v111 + 4 * (BYTE2(v123) ^ 0xD6u)) ^ 0xB4C82AC9;
  v142 = (16 * v141 + 1452181747 - ((32 * v141) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v128) ^ 0x19));
  v143 = *(_DWORD *)(v108 + 4 * (BYTE1(v120) ^ 0xCCu));
  HIDWORD(v110) = v143 ^ 0x7763;
  LODWORD(v110) = v143 ^ 0x55D90000;
  v144 = *(_DWORD *)(v118 + 4 * (v132 ^ 0x2Eu)) ^ v141 ^ (v110 >> 16) ^ (v142
                                                                                          - 905743237
                                                                                          - ((2 * v142) & 0x9406E8F6));
  v145 = *(_DWORD *)(v111 + 4 * (BYTE2(v128) ^ 0x32u));
  v146 = *(_DWORD *)(v108 + 4 * BYTE1(v134));
  HIDWORD(v110) = v146 ^ 0x7763;
  LODWORD(v110) = v146 ^ 0x55D90000;
  v147 = (v110 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v132) ^ 0xBD)) ^ (16 * (v145 ^ 0xB4C82AC9)
                                                                         + 1452181747
                                                                         - ((32 * (v145 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v148 = v145 ^ *(_DWORD *)(v118 + 4 * (v120 ^ 0x69u)) ^ 0xC501FC0D ^ (v147
                                                                                        - 905743237
                                                                                        - ((2 * v147) & 0x9406E8F6));
  v149 = v148
       - ((2 * v148) & 0x5F186BF6)
       + 797718011
       - ((2 * (v148 - ((2 * v148) & 0x5F186BF6) + 797718011)) & 0xFCE7E61C)
       - 25955570;
  v150 = *(_DWORD *)(v111 + 4 * (BYTE2(v149) ^ 0xB0u));
  BYTE2(v132) = BYTE2(v144) ^ 0xEB;
  v151 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v144 ^ 0xDFF9) >> 8));
  v152 = (16 * (v150 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v150 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v135) ^ 0x5C)) ^ (((v151 ^ 0x55D97763u) >> (v135 & 0x10 ^ 0x10) >> (v135 & 0x10)) + ((v151 << 16) ^ 0x77630000));
  v153 = *(_DWORD *)(v118 + 4 * ((v140 ^ v139) ^ 0x10u)) ^ v150 ^ (v152
                                                                                    - 905743236
                                                                                    + ~((2 * v152) & 0x9406E8F6));
  LOWORD(v150) = v135 ^ 0xA05B;
  v154 = *(_DWORD *)(v111 + 4 * ((v135 ^ 0xB559A05B) >> 16)) ^ 0xB4C82AC9;
  v155 = (16 * v154 + 1452181747 - ((32 * v154) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v140 ^ ~v139) >> 24));
  v156 = *(_DWORD *)(v108 + 4 * (BYTE1(v149) ^ 0x60u));
  HIDWORD(v110) = v156 ^ 0x7763;
  LODWORD(v110) = v156 ^ 0x55D90000;
  v157 = *(_DWORD *)(v118 + 4 * (v144 ^ 0xF9u)) ^ v154 ^ ((v155 ^ (v110 >> 16))
                                                                           - 905743237
                                                                           - ((2 * (v155 ^ (v110 >> 16))) & 0x9406E8F6));
  v158 = *(_DWORD *)(v113 + 4 * (HIBYTE(v144) ^ 5));
  HIDWORD(v110) = v158 ^ 0xF3;
  LODWORD(v110) = v158 ^ 0x568E8800;
  v159 = *(_DWORD *)(v111 + 4 * (((v140 ^ v139) >> 16) ^ 0xFDu)) ^ 0xB4C82AC9;
  v160 = (((v110 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v159) ^ (((v110 >> 10) ^ 0x25EB099C) >> 22);
  v161 = *(_DWORD *)(v108 + 4 * BYTE1(v150));
  HIDWORD(v110) = v161 ^ 0x7763;
  LODWORD(v110) = v161 ^ 0x55D90000;
  v162 = *(_DWORD *)(v118
                   + 4
                   * ((v148
                                      - ((2 * v148) & 0xF6)
                                      - 5
                                      - ((2 * (v148 - ((2 * v148) & 0xF6) - 5)) & 0x1C)
                                      + 14) ^ 0x3Du)) ^ v159 ^ (v110 >> 16) ^ (v160
                                                                             - 905743237
                                                                             - ((2 * v160) & 0x9406E8F6));
  v163 = *(_DWORD *)(v108 + 4 * (((unsigned __int16)(v140 ^ v139) >> 8) ^ 0xE7u));
  HIDWORD(v110) = v163 ^ 0x7763;
  LODWORD(v110) = v163 ^ 0x55D90000;
  v164 = *(_DWORD *)(v111 + 4 * BYTE2(v132)) ^ 0xB4C82AC9;
  v165 = (v110 >> 16) ^ (16 * v164 + 1452181747 - ((32 * v164) & 0xAD1D11E0)) ^ *(_DWORD *)(v113
                                                                                          + 4 * (HIBYTE(v149) ^ 0x17));
  v166 = *(_DWORD *)(v118 + 4 * (v150 ^ 0x33u)) ^ v164;
  v167 = v162 ^ 0xF1F7E4A6;
  v168 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v162 ^ 0xE4A6) >> 8));
  v169 = v166 ^ (v165 - 905743237 - ((2 * v165) & 0x9406E8F6));
  HIDWORD(v110) = v168 ^ 0x7763;
  LODWORD(v110) = v168 ^ 0x55D90000;
  v170 = *(_DWORD *)(v111 + 4 * (BYTE2(v169) ^ 0x62u)) ^ 0xB4C82AC9;
  v171 = (16 * v170 + 1452181747 - ((32 * v170) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v153) ^ 0x69));
  v172 = *(_DWORD *)(v118 + 4 * (v157 ^ 0x68u)) ^ v170 ^ (v110 >> 16) ^ (v171
                                                                                          - 905743237
                                                                                          - 2
                                                                                          * (v171 & 0x4A03747F ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v153) ^ 0x69)) & 4));
  v173 = *(_DWORD *)(v111 + 4 * (BYTE2(v153) ^ 0x93u)) ^ 0xB4C82AC9;
  v174 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v169 ^ 0x2957) >> 8));
  HIDWORD(v110) = v174 ^ 0x7763;
  LODWORD(v110) = v174 ^ 0x55D90000;
  v175 = (16 * v173 + 1452181747 - ((32 * v173) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v157) ^ 0xCE)) ^ (v110 >> 16);
  v176 = *(_DWORD *)(v118 + 4 * (v162 ^ 0x15u)) ^ v173 ^ (v175 - 905743237 - ((2 * v175) & 0x9406E8F6));
  v177 = *(_DWORD *)(v111 + 4 * (BYTE2(v157) ^ 0x60u)) ^ 0xB4C82AC9;
  v178 = *(_DWORD *)(v108 + 4 * (BYTE1(v153) ^ 0xB1u));
  HIDWORD(v110) = v178 ^ 0x7763;
  LODWORD(v110) = v178 ^ 0x55D90000;
  v179 = (16 * v177 + 1452181747 - ((32 * v177) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v167)) ^ (v110 >> 16);
  v180 = *(_DWORD *)(v118 + 4 * (v169 ^ 0x57u)) ^ v177 ^ (v179 - 905743237 - ((2 * v179) & 0x9406E8F6));
  if ((v157 & 0x1000) != 0)
    v181 = -16;
  else
    v181 = 16;
  v182 = (BYTE1(v157) ^ 0xC) + v181;
  v183 = *(_DWORD *)(v111 + 4 * BYTE2(v167)) ^ 0xB4C82AC9;
  v184 = *(_DWORD *)(v108 + 4 * (v182 ^ 0x83u));
  v185 = *(_DWORD *)(v113 + 4 * (HIBYTE(v169) ^ 0xA1)) ^ HIWORD(v184) ^ (v184 << 16) ^ (16 * v183
                                                                                        + 1452181747
                                                                                        - ((32 * v183) & 0xAD1D11E0)) ^ 0x776355D9;
  v186 = *(_DWORD *)(v118 + 4 * (v153 ^ 0xAAu)) ^ v183 ^ (v185 - 905743237 - ((2 * v185) & 0x9406E8F6));
  v187 = v186 ^ 0xEFBC3B44;
  v188 = *(_DWORD *)(v111 + 4 * ((v186 ^ 0xEFBC3B44) >> 16)) ^ 0xB4C82AC9;
  v189 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v180 ^ 0x8D48) >> 8));
  HIDWORD(v190) = v189 ^ 0x7763;
  LODWORD(v190) = v189 ^ 0x55D90000;
  v191 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v172) ^ 0xCC)) ^ (16 * v188
                                                                         + 1452181747
                                                                         - ((32 * v188) & 0xAD1D11E0));
  v192 = *(_DWORD *)(v118 + 4 * (v176 ^ 0xA9u)) ^ v188 ^ (v191 - 905743237 - ((2 * v191) & 0x9406E8F6));
  LOWORD(v188) = v172 ^ 0xD583;
  v193 = *(_DWORD *)(v111 + 4 * (((v172 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xB4C82AC9;
  v194 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v186 ^ 0x3B44) >> 8));
  HIDWORD(v190) = v194 ^ 0x7763;
  LODWORD(v190) = v194 ^ 0x55D90000;
  v195 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v176)) ^ (16 * v193 + 1452181747 - ((32 * v193) & 0xAD1D11E0));
  v196 = *(_DWORD *)(v118 + 4 * (v180 ^ 0x48u)) ^ v193 ^ (v195 - 905743237 - ((2 * v195) & 0x9406E8F6));
  v197 = *(_DWORD *)(v111 + 4 * ((v176 ^ 0xE93411A9) >> 16)) ^ 0xB4C82AC9;
  v198 = *(_DWORD *)(v108 + 4 * BYTE1(v188));
  HIDWORD(v190) = v198 ^ 0x7763;
  LODWORD(v190) = v198 ^ 0x55D90000;
  v199 = (16 * v197 + 1452181747 - ((32 * v197) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v180 ^ 0x807D8D48) >> 24)) ^ (v190 >> 16);
  v200 = *(_DWORD *)(v118 + 4 * (v186 ^ 0x77u)) ^ v197 ^ (v199 - 905743237 - ((2 * v199) & 0x9406E8F6));
  v201 = *(_DWORD *)(v111 + 4 * (BYTE2(v180) ^ 0xBEu)) ^ 0xB4C82AC9;
  v202 = *(_DWORD *)(v108 + 4 * (BYTE1(v176) ^ 0x82u));
  HIDWORD(v190) = v202 ^ 0x7763;
  LODWORD(v190) = v202 ^ 0x55D90000;
  v203 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * HIBYTE(v187)) ^ (16 * v201 + 1452181747 - ((32 * v201) & 0xAD1D11E0));
  v204 = *(_DWORD *)(v118 + 4 * v188) ^ v201 ^ (v203 - 905743237 - ((2 * v203) & 0x9406E8F6));
  v205 = *(_DWORD *)(v111 + 4 * ((v204 ^ 0x950DA39D) >> 16)) ^ 0xB4C82AC9;
  v206 = (16 * v205 + 1452181747 - ((32 * v205) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v192 ^ 0x11521BCA) >> 24));
  v207 = *(_DWORD *)(v108 + 4 * (BYTE1(v200) ^ 0x89u));
  HIDWORD(v190) = v207 ^ 0x7763;
  LODWORD(v190) = v207 ^ 0x55D90000;
  v208 = v206 - 905743237 - ((2 * v206) & 0x9406E8F6);
  BYTE1(v206) = BYTE1(v196) ^ 0xD1;
  v209 = v205 ^ *(_DWORD *)(v118 + 4 * (v196 ^ 0x88u)) ^ (v190 >> 16) ^ v208;
  v210 = *(_DWORD *)(v111 + 4 * ((v192 ^ 0x11521BCA) >> 16));
  v211 = *(_DWORD *)(v108 + 4 * (BYTE1(v204) ^ 0x30u));
  HIDWORD(v190) = v211 ^ 0x7763;
  LODWORD(v190) = v211 ^ 0x55D90000;
  v212 = (v209 ^ 0x71C9D6C4) - 2 * ((v209 ^ 0x71C9D6C4) & 0x3A5692AD ^ v209 & 9);
  v213 = (16 * (v210 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v210 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v196) ^ 0xDF)) ^ (v190 >> 16);
  v200 ^= 0x7A851A70u;
  v214 = *(_DWORD *)(v118 + 4 * (v200 ^ 0x33u)) ^ v210 ^ (v213 - 905743237 - ((2 * v213) & 0x9406E8F6));
  v215 = *(_DWORD *)(v111 + 4 * (BYTE2(v196) ^ 0xA7u)) ^ 0xB4C82AC9;
  v216 = *(_DWORD *)(v108 + 4 * (BYTE1(v192) ^ 0x88u));
  HIDWORD(v190) = v216 ^ 0x7763;
  LODWORD(v190) = v216 ^ 0x55D90000;
  v217 = (16 * v215 + 1452181747 - ((32 * v215) & 0xAD1D11E0)) ^ (v190 >> 16) ^ *(_DWORD *)(v113
                                                                                          + 4
                                                                                          * ((HIBYTE(v200) ^ -HIBYTE(v200) ^ ((HIBYTE(v200) ^ 0xFFFFFF16) + 234))
                                                                                           + 233));
  v218 = *(_DWORD *)(v118 + 4 * (v204 ^ 0x9Du)) ^ v215 ^ (v217 - 905743237 - ((2 * v217) & 0x9406E8F6));
  v219 = *(_DWORD *)(v111 + 4 * BYTE2(v200));
  v220 = *(_DWORD *)(v108 + 4 * BYTE1(v206));
  HIDWORD(v190) = v220 ^ 0x7763;
  LODWORD(v190) = v220 ^ 0x55D90000;
  v221 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v204) ^ 0x7C)) ^ (16 * (v219 ^ 0xB4C82AC9)
                                                                         + 1452181747
                                                                         - ((32 * (v219 ^ 0xB4C82AC9)) & 0xAD1D11E0));
  v222 = *(_DWORD *)(v118 + 4 * (v192 ^ 0xF9u)) ^ v219 ^ (v221 - 905743237 - ((2 * v221) & 0x9406E8F6));
  v223 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v218 ^ 0xDE69) >> 8));
  HIDWORD(v190) = v223 ^ 0x7763;
  LODWORD(v190) = v223 ^ 0x55D90000;
  v224 = *(_DWORD *)(v111 + 4 * (BYTE2(v222) ^ 0x4Fu));
  v212 -= 1168731484;
  v225 = (v190 >> 16) ^ (16 * (v224 ^ 0xB4C82AC9) + 1452181747 - ((32 * (v224 ^ 0xB4C82AC9)) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v212) ^ 0xD3));
  v226 = *(_DWORD *)(v118 + 4 * (v214 ^ 0x1Au)) ^ v224 ^ (v225 - 905743237 - ((2 * v225) & 0x9406E8F6));
  v227 = *(_DWORD *)(v108 + 4 * (BYTE1(v222) ^ 0x15u));
  HIDWORD(v190) = v227 ^ 0x7763;
  LODWORD(v190) = v227 ^ 0x55D90000;
  v228 = *(_DWORD *)(v111 + 4 * (BYTE2(v212) ^ 0x3Cu)) ^ 0xB4C82AC9;
  v229 = v228 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v214) ^ 0x69)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v218 ^ 0x69u)) ^ ((v190 >> 16) - 905743237 - ((2 * (v190 >> 16)) & 0x9406E8F6)) ^ (16 * v228 + 1452181747 - ((32 * v228) & 0xAD1D11E0));
  v230 = *(_DWORD *)(v111 + 4 * (BYTE2(v214) ^ 0x32u)) ^ 0xB4C82AC9;
  v231 = *(_DWORD *)(v108 + 4 * (BYTE1(v212) ^ 0xF9u));
  HIDWORD(v190) = v231 ^ 0x7763;
  LODWORD(v190) = v231 ^ 0x55D90000;
  v232 = (16 * v230 + 1452181747 - ((32 * v230) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v218 ^ 0x5FEEDE69) >> 24)) ^ (v190 >> 16);
  v233 = *(_DWORD *)(v118
                   + 4
                   * ((((v222 ^ 0x86) + (v222 ^ 0xFFFFFF4A) + 1) ^ 0xFFFFFFFE)
                    + (v222 ^ 0x86))) ^ v230 ^ (v232 - 905743237 - ((2 * v232) & 0x9406E8F6));
  v234 = *(_DWORD *)(v111 + 4 * (BYTE2(v218) ^ 0x2Du)) ^ 0xB4C82AC9;
  v235 = *(_DWORD *)(v108 + 4 * (BYTE1(v214) ^ 0xF5u));
  HIDWORD(v190) = v235 ^ 0x7763;
  LODWORD(v190) = v235 ^ 0x55D90000;
  v236 = (v190 >> 16) ^ (16 * v234 + 1452181747 - ((32 * v234) & 0xAD1D11E0)) ^ *(_DWORD *)(v113
                                                                                          + 4
                                                                                          * ((HIBYTE(v222) ^ 0xA1) & 0x90 ^ 0x86u ^ (~(2 * (HIBYTE(v222) ^ 0xA1 | 0x90)) + (HIBYTE(v222) ^ 0xA1 | 0x90))));
  v237 = *(_DWORD *)(v118 + 4 * ~(_BYTE)v212) ^ v234 ^ (v236 - 905743236 + ~((2 * v236) & 0x9406E8F6));
  v238 = *(_DWORD *)(v111 + 4 * ((v237 ^ 0x59A5F4B7) >> 16)) ^ 0xB4C82AC9;
  v239 = *(_DWORD *)(v108 + 4 * ((unsigned __int16)(v233 ^ 0x872B) >> 8));
  HIDWORD(v190) = v239 ^ 0x7763;
  LODWORD(v190) = v239 ^ 0x55D90000;
  v240 = (16 * v238 + 1452181747 - ((32 * v238) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v226) ^ 0x66)) ^ (v190 >> 16);
  v241 = *(_DWORD *)(v118 + 4 * (v229 ^ 0xEEu)) ^ v238 ^ (v240 - 905743237 - ((2 * v240) & 0x9406E8F6));
  v242 = *(_DWORD *)(v111 + 4 * (BYTE2(v226) ^ 0xEDu)) ^ 0xB4C82AC9;
  v243 = *(_DWORD *)(v108 + 4 * (BYTE1(v237) ^ 0x67u));
  HIDWORD(v190) = v243 ^ 0x7763;
  LODWORD(v190) = v243 ^ 0x55D90000;
  v244 = v242 ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v229) ^ 0xD6)) ^ *(_DWORD *)(v118
                                                                            + 4 * (v233 ^ 0x18u)) ^ (16 * v242 + 1452181747 - ((32 * v242) & 0xAD1D11E0)) ^ ((v190 >> 16) - 905743237 - ((2 * (v190 >> 16)) & 0x9406E8F6));
  v245 = *(_DWORD *)(v111 + 4 * (BYTE2(v229) ^ 0x56u)) ^ 0xB4C82AC9;
  v246 = *(_DWORD *)(v108 + 4 * (BYTE1(v226) ^ 0x91u));
  HIDWORD(v190) = v246 ^ 0x7763;
  LODWORD(v190) = v246 ^ 0x55D90000;
  v247 = *(_DWORD *)(v113 + 4 * ((v233 ^ 0x911B872B) >> 24)) ^ v245 ^ 0x6D41727E ^ (16 * v245
                                                                                    + 1452181747
                                                                                    - ((32 * v245) & 0xAD1D11E0)) ^ (v190 >> 16);
  v248 = *(_DWORD *)(v111 + 4 * (BYTE2(v233) ^ 0xD8u)) ^ 0xB4C82AC9;
  v249 = *(_DWORD *)(v108 + 4 * (BYTE1(v229) ^ 0xE4u));
  HIDWORD(v190) = v249 ^ 0x7763;
  LODWORD(v190) = v249 ^ 0x55D90000;
  v250 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v237) ^ 0xB0)) ^ (16 * v248
                                                                         + 1452181747
                                                                         - ((32 * v248) & 0xAD1D11E0));
  v251 = *(_DWORD *)(v118 + 4 * (v226 ^ 0x6Fu)) ^ v248 ^ (v250 - 905743237 - ((2 * v250) & 0x9406E8F6));
  v252 = *(_DWORD *)(v108
                   + 4
                   * (((unsigned __int16)(*(_WORD *)(v118 + 4 * (v226 ^ 0x6Fu)) ^ v248 ^ (v250 + 29819 - ((2 * v250) & 0xE8F6))) >> 8) ^ 0x66u));
  HIDWORD(v190) = v252 ^ 0x7763;
  LODWORD(v190) = v252 ^ 0x55D90000;
  v253 = v190 >> 16;
  HIDWORD(v190) = *(_DWORD *)(v118 + 4 * (v237 ^ 0xB7u)) ^ 0xD68BD0C1;
  LODWORD(v190) = HIDWORD(v190);
  v254 = v244 ^ 0x177CD9D9;
  v255 = *(_DWORD *)(v111 + 4 * (BYTE2(v241) ^ 0x74u)) ^ 0xB4C82AC9;
  v256 = *(_DWORD *)(v113 + 4 * ((v244 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v255 ^ (16 * v255
                                                                                     + 1452181747
                                                                                     - ((32 * v255) & 0xAD1D11E0)) ^ v253;
  v257 = (v256 & 0x200 ^ 0xE7FEFFBE) + 2 * (v256 & 0x200);
  LODWORD(v190) = (v190 >> 21) ^ __ROR4__(v247, 21) ^ 0x549BF9D9;
  HIDWORD(v190) = v190;
  v258 = v190 >> 11;
  v259 = *(_DWORD *)(v118 + 4 * ((v190 >> 11) ^ 0xEFu));
  v260 = ((v257 + 402718786) & (v259 ^ 0xCA03747B)) == 0;
  v261 = *(_DWORD *)(v111 + 4 * (BYTE2(v251) ^ 0x72u)) ^ 0xB4C82AC9;
  v262 = *(_DWORD *)(v108 + 4 * (BYTE1(v258) ^ 0xA0u));
  HIDWORD(v190) = v262 ^ 0x7763;
  LODWORD(v190) = v262 ^ 0x55D90000;
  v263 = (v190 >> 16) ^ *(_DWORD *)(v113 + 4 * ((v241 ^ 0xD4B73D47) >> 24)) ^ (16 * v261
                                                                               + 1452181747
                                                                               - ((32 * v261) & 0xAD1D11E0));
  v264 = *(_DWORD *)(v118 + 4 * (v244 ^ 0xEAu)) ^ v261 ^ (v263 - 905743237 - ((2 * v263) & 0x9406E8F6));
  v265 = v257 + 1003347924;
  v266 = 197910352 - v257;
  if (v260)
    v266 = v265;
  v267 = ((v259 ^ 0xD68BD0C1) - 600629138 + v266) ^ v256 & 0xFFFFFDFF;
  v268 = *(_DWORD *)(v111 + 4 * BYTE2(v254)) ^ 0xB4C82AC9;
  v269 = *(_DWORD *)(v108 + 4 * (BYTE1(v241) ^ 0xAEu));
  HIDWORD(v270) = v269 ^ 0x7763;
  LODWORD(v270) = v269 ^ 0x55D90000;
  v271 = (16 * v268 + 1452181747 - ((32 * v268) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * ((v258 ^ 0x1EA133EFu) >> 24));
  v272 = *(_DWORD *)(v118 + 4 * (v251 ^ 0xDu)) ^ v268 ^ (v270 >> 16) ^ (v271
                                                                                         - 905743237
                                                                                         - 2
                                                                                         * (v271 & 0x4A03747F ^ *(_DWORD *)(v113 + 4 * ((v258 ^ 0x1EA133EFu) >> 24)) & 4));
  v273 = *(_DWORD *)(v111 + 4 * (BYTE2(v258) ^ 0x62u)) ^ 0xB4C82AC9;
  v274 = *(_DWORD *)(v108 + 4 * BYTE1(v254));
  HIDWORD(v270) = v274 ^ 0x7763;
  LODWORD(v270) = v274 ^ 0x55D90000;
  v275 = (16 * v273 + 1452181747 - ((32 * v273) & 0xAD1D11E0)) ^ *(_DWORD *)(v113 + 4 * (HIBYTE(v251) ^ 0x32)) ^ (v270 >> 16);
  v276 = *(_DWORD *)(v118 + 4 * (v241 ^ 0x74u)) ^ v273 ^ (v275 - 905743237 - ((2 * v275) & 0x9406E8F6));
  v277 = (char *)*(&off_24E772B10 + v63 - 726) - 4;
  v278 = (char *)*(&off_24E772B10 + v63 - 686) - 12;
  v279 = (char *)*(&off_24E772B10 + v63 - 677) - 12;
  v280 = *(_DWORD *)&v278[4 * (BYTE2(v264) ^ 0x99)] ^ 0x858E78B5;
  v281 = v280 ^ (*(_DWORD *)&v277[4 * (((v267 ^ 0xF137909F) >> 24) ^ 0xB4)]
               + (((v267 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
               - 1891546004) ^ (v280 >> 2) ^ *(_DWORD *)&v279[4 * (v272 ^ 0x79)] ^ (v280 >> 4);
  v282 = (char *)*(&off_24E772B10 + (v63 ^ 0x32D)) - 8;
  v283 = *(_DWORD *)&v282[4 * ((unsigned __int16)(v276 ^ 0x7C9C) >> 8)] ^ 0x44850E66;
  v284 = ((v272 ^ 0x7B)
        - 162178079
        + ((2 * (((v272 ^ 0x7B) + 112) & 0x17E ^ (v272 ^ 0xBC37B | 0x7FFFFFF1))) ^ 0xF0C3001D)) ^ v283 ^ (1515496080 * v283);
  v285 = HIBYTE(v272);
  v286 = v264 ^ 0x6792B6A6;
  v287 = *(_DWORD *)&v277[4 * (((v264 ^ 0x6792B6A6) >> 24) ^ 0xB4)];
  LODWORD(v335) = *(_DWORD *)&v277[4 * (HIBYTE(v272) ^ 0xB4)];
  LODWORD(v340) = (v276 ^ 0x250E7C9C) >> 24;
  HIDWORD(v337) = *(_DWORD *)&v277[4 * (v340 ^ 0xB4)];
  v288 = *(_DWORD *)&v278[4 * (BYTE2(v276) ^ 5)];
  v289 = *(_DWORD *)&v278[4 * ((v267 ^ 0xF137909F) >> 16)];
  HIDWORD(v335) = *(_DWORD *)&v278[4 * ((v272 ^ 0xBC37B) >> 16)];
  v290 = *(_DWORD *)&v282[4 * ((unsigned __int16)(v272 ^ 0xC37B) >> 8)];
  HIDWORD(v334) = *(_DWORD *)&v282[4 * ((unsigned __int16)(v264 ^ 0xB6A6) >> 8)];
  v291 = *(_DWORD *)&v282[4 * (BYTE1(v267) ^ 0x5E)];
  v292 = *(_DWORD *)&v279[4 * (v267 ^ 0x9D)];
  v293 = *(_DWORD *)&v279[4 * (v276 ^ 0x9E)];
  LODWORD(v337) = *(_DWORD *)&v279[4 * (v264 ^ 0xA4)];
  v294 = ((v281 ^ v284) - 1180827501 - ((2 * (v281 ^ v284)) & 0x733C0126)) ^ LODWORD(STACK[0x300]);
  v295 = (uint64_t)*(&off_24E772B10 + v63 - 849);
  v322[5] = *(_BYTE *)(v295 + (((v294 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v294 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0xF7) - 14) ^ 0xB9;
  v296 = v288 ^ 0x858E78B5 ^ ((HIBYTE(v286) ^ 0x9FD52929) - 1891546004 + v287) ^ ((v288 ^ 0x858E78B5) >> 2) ^ ((v288 ^ 0x858E78B5) >> 4) ^ v290 ^ 0x44850E66 ^ v292 ^ (1515496080 * (v290 ^ 0x44850E66)) ^ ((v267 ^ 0x9F) - 162178079 + ((2 * (((v267 ^ 0x9F) + 112) & 0x17E ^ (v267 ^ 0xF137909F | 0x7FFFFFF1))) ^ 0xF0C3001D));
  v297 = (v296 + 696531065 - ((2 * v296) & 0x53087184) + 73) ^ LODWORD(STACK[0x3D8]);
  v298 = v297 ^ 0x22A932A6;
  v299 = (BYTE1(v298) | 0x88) ^ (v298 >> 8) & 0x88;
  v300 = (char *)*(&off_24E772B10 + (v63 ^ 0x3E4)) - 12;
  v322[2] = (((unsigned __int16)(v297 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v297 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v300[v299 ^ 0x14] ^ 3) - ((2 * v300[v299 ^ 0x14]) & 0x20) - 112);
  v301 = (char *)*(&off_24E772B10 + v63 - 844) - 4;
  LODWORD(v299) = v301[HIBYTE(v294) ^ 0xEFLL];
  HIDWORD(v270) = v299 ^ 0x1B;
  LODWORD(v270) = (v299 ^ 0x40) << 24;
  v322[STACK[0x320]] = (v270 >> 29) ^ 0x83;
  v302 = v289 ^ 0x858E78B5 ^ ((v285 ^ 0x9FD52929) - 1891546004 + v335) ^ ((v289 ^ 0x858E78B5) >> 2) ^ ((v289 ^ 0x858E78B5) >> 4);
  v303 = v302 & 0x1000000 | 0x287B5FB3;
  if ((v302 & 0x1000000 & ~v293) != 0)
    v303 = 1358348134 - v303;
  v304 = v302 & 0xFEFFFFFF ^ (1515496080 * (HIDWORD(v334) ^ 0x44850E66)) ^ ((((v276 ^ 0x9C)
                                                                            - 162178079
                                                                            + ((2
                                                                              * (((v276 ^ 0x9C) + 112) & 0xFFFFFF7F ^ (v276 ^ 0x250E7C9C | 0x7FFFFFF0))) ^ 0xF0C3001F)) ^ v293)
                                                                          - 679174067
                                                                          + v303);
  v305 = HIDWORD(v334) ^ 0x44850E66 ^ LODWORD(STACK[0x408]) ^ (v304 + 416382103 - ((2 * v304) & 0x31A2F9A2) + 58);
  v306 = (char *)*(&off_24E772B10 + (v63 ^ 0x3D4)) - 4;
  LOBYTE(v304) = v306[BYTE4(v334) ^ 0x66u ^ LOBYTE(STACK[0x408]) ^ (v304
                                                                                   - 105
                                                                                   - ((2 * v304) & 0xA2)
                                                                                   + 58) ^ 0x28];
  v322[11] = v304 & 0xFB ^ ((v304 | 0xFB) + 24) ^ 0x38;
  v307 = v301[BYTE3(v297) ^ 0xF9];
  HIDWORD(v308) = v307 ^ 0x1B;
  LODWORD(v308) = (v307 ^ 0x40) << 24;
  v309 = STACK[0x2D0];
  v322[STACK[0x2D0]] = (v308 >> 29) ^ 0xFB;
  v322[STACK[0x228]] = BYTE2(v298) ^ 0x61 ^ ((BYTE2(v298) ^ 0x61) + ((16 - 2 * (BYTE2(v298) ^ 0x61)) | 9) - 13) ^ 0xB8 ^ *(_BYTE *)(v295 + (BYTE2(v298) ^ 0xB5));
  v310 = (v340 ^ 0x9FD52929) - 1891546004 + HIDWORD(v337);
  v311 = HIDWORD(v335) ^ 0x858E78B5 ^ ((HIDWORD(v335) ^ 0x858E78B5) >> 4) ^ ((HIDWORD(v335) ^ 0x858E78B5) >> 2);
  v312 = (v311 & 0x80000 ^ 0xBF5FFADD) + 2 * (v311 & 0x80000);
  v260 = ((v312 + 1084228899) & v310) == 0;
  v313 = v312 + 1929342327;
  v314 = -239115471 - v312;
  if (v260)
    v314 = v313;
  v315 = v337 ^ (v286 + 2096205936) ^ (((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF ^ (1515496080 * (v291 ^ 0x44850E66)))
                                                      + 2036583281
                                                      + ~(2
                                                        * (((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF ^ (1515496080 * (v291 ^ 0x44850E66))) & 0x7963CB7A ^ ((v310 - 845113428 + v314) ^ v311 & 0xFFF7FFFF) & 0xA)));
  v316 = v291 ^ LODWORD(STACK[0x428]) ^ (v315 + 1570908894 - ((2 * v315) & 0xBB4455BC));
  v322[STACK[0x298]] = *(_BYTE *)(v295 + (BYTE2(v316) ^ 0x1E) + ((v316 >> 15) & 0x1A8 ^ 0xFFFFFFD7) + 213) ^ BYTE2(v316) ^ ((BYTE2(v316) ^ 0x1E) + ((16 - 2 * (BYTE2(v316) ^ 0x1E)) | 9) - 13) ^ 0x98;
  v317 = v301[HIBYTE(v316) ^ 0xBELL];
  HIDWORD(v318) = v317 ^ 0x1B;
  LODWORD(v318) = (v317 ^ 0x40) << 24;
  v322[STACK[0x328]] = (v318 >> 29) ^ 0x50;
  v322[STACK[0x290]] = ((v305 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v305 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                         + ((16
                                                                           - 2
                                                                           * (((v305 ^ 0xCFDDD967) >> 16) ^ 0x94)) | 9)
                                                                         - 13) ^ *(_BYTE *)(v295
                                                                                          + (((v305 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  v319 = (((v316 ^ 0x1BB09C49) >> 4) & 0xF0 | ((unsigned __int16)(v316 ^ 0x9C49) >> 12)) ^ 0xE6;
  v322[STACK[0x420]] = v300[((v319 >> 4) & 0xFFFFFF0F | (16 * (v319 & 0xF))) ^ 0xAELL] ^ (((v319 >> 4) & 0xF | (16 * (v319 & 0xF)))
                                                                                        - ((v319 >> 3) & 6)
                                                                                        + 3) ^ 0x2B;
  v322[STACK[0x258]] = (((unsigned __int16)(v305 ^ 0xD967) >> 8) - (((v305 ^ 0xCFDDD967) >> 7) & 6) + 3) ^ 0xDB ^ v300[((unsigned __int16)(v305 ^ 0xD967) >> 8) ^ 0xA0];
  v322[STACK[0x418]] = (((unsigned __int16)(v294 ^ 0xC6B3) >> 8) - (((v294 ^ 0x5244C6B3) >> 7) & 6) + 3) ^ v300[((unsigned __int16)(v294 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  v322[STACK[0x3D0]] = v306[v297 ^ 0x95] ^ 0x86;
  v322[STACK[0x3C0]] = v306[v294 ^ 0x7FLL] ^ 0x17;
  v322[STACK[0x460]] = v306[v316 ^ 0xE6] ^ 0xB8;
  v320 = v301[BYTE3(v305) ^ 0x49];
  HIDWORD(v318) = v320 ^ 0x1B;
  LODWORD(v318) = (v320 ^ 0x40) << 24;
  v322[STACK[0x400]] = (v318 >> 29) ^ 0x2E;
  HIDWORD(a13) = v63 ^ 0x619;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, unint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 + 8 * ((56 * ((((_DWORD)v309 - 699207985 - ((2 * (_DWORD)v309 + 32) & 0xACA5DD9E) + 16) ^ 0xD652EEC0) < 0x150)) | v63)) - 8))(9, v305, v297, 230, v306, v309, v300, 1149570662, a5, a6, a7, a8, a9, a10, a11, a12, a13, v322, v323,
           v324,
           v325,
           v326,
           v327,
           a20,
           v328,
           v329,
           v330,
           v331,
           v332,
           v333,
           v334,
           v335,
           v337,
           v340,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           2,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_221A198E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,unsigned __int8 a25,int a26,int a27,unsigned __int8 a28,int a29,unsigned __int8 a30,int a31,int a32,int a33,unsigned __int8 a34,int a35,int a36,int a37,char a38)
{
  LODWORD(STACK[0x3D8]) = (a25 | ((((a37 ^ 0x54A) - 122) ^ a32) << 24) | ((a28 ^ 0xEF) << 8) | ((a34 ^ 0x92) << 16)) ^ 0xB104EBA2;
  LODWORD(STACK[0x300]) = a31 ^ 0xBE1F7410;
  LODWORD(STACK[0x408]) = ((a33 << 8) | (a27 << 24) | ((a35 ^ 0x77) << 16) | a29) ^ 0x310F566E;
  LODWORD(STACK[0x428]) = ((((a36 ^ 0xBC) << 16) + ((a26 ^ 0x1A) << 24)) | a30 | ((a38 ^ a4) << 8)) ^ 0x4E33834F;
  JUMPOUT(0x221A179CCLL);
}

uint64_t sub_221A199D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  unint64_t v19;

  v19 = STACK[0x550];
  STACK[0x668] -= 32;
  *(_BYTE *)(v19 + 335) = *(_BYTE *)(a14 + 335) ^ 0xCD ^ *((_BYTE *)*(&off_24E772B10 + (a18 ^ 0x526)) + 3) ^ *((_BYTE *)*(&off_24E772B10 + (a18 ^ 0x586)) + 13) ^ *((_BYTE *)*(&off_24E772B10 + a18 - 1220) + (((a18 - 1437) | 0x441u) ^ 0x440) + 11) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * a18) - 4))();
}

void sub_221A19AA8()
{
  JUMPOUT(0x221A19A18);
}

uint64_t sub_221A19AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  int v8;
  uint64_t v9;

  STACK[0x3B0] = a8;
  *(_QWORD *)(a2 + 304) -= 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((7 * (v8 ^ 0x4F0)) ^ v8 ^ 0x786))
                            - (v8 + 162)
                            + 1245))();
}

uint64_t sub_221A19AF8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v10 = *(_BYTE **)(v9 + 344);
  a8[12] = ((-93 * (a1 ^ 0xE6)) ^ 0xE9) + 50;
  a8[13] = 50;
  a8[14] = 50;
  a8[15] = 51;
  v10[16] ^= *a8 ^ 0x32;
  v10[17] ^= a8[1] ^ 0x32;
  v10[18] ^= a8[2] ^ 0x32;
  v10[19] ^= a8[3] ^ 0x32;
  v10[20] ^= a8[4] ^ 0x32;
  v10[21] ^= a8[5] ^ 0x32;
  v10[22] ^= a8[6] ^ 0x32;
  v10[23] ^= a8[7] ^ 0x32;
  v10[24] ^= a8[8] ^ 0x32;
  v10[25] ^= a8[9] ^ 0x32;
  v10[26] ^= a8[10] ^ 0x32;
  v10[27] ^= a8[11] ^ 0x32;
  v10[28] ^= a8[12] ^ 0x32;
  v10[29] ^= a8[13] ^ 0x32;
  v10[30] ^= a8[14] ^ 0x32;
  v10[31] ^= a8[15] ^ 0x32;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (a1 - 395)) - 4))(1254, 50);
}

void sub_221A19D04()
{
  JUMPOUT(0x221A19B30);
}

uint64_t sub_221A19D0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((60 * (LODWORD(STACK[0x46C]) != ((v4 - 225) | 0x451) + 1206751714)) ^ ((v4 - 225) | 0x451)))
                            - ((((v4 - 225) | 0x451u) - 895) ^ a4)))();
}

uint64_t sub_221A19D8C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * (*(_BYTE *)(v2 + (a1 + 1252)) == 50)) ^ v1))
                            - ((v1 ^ 0x483u)
                             - 278)
                            + 1083))();
}

uint64_t sub_221A19DD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((60 * (v5 != v4 + 1206751714)) ^ v4))
                            - ((v4 - 895) ^ a4)))();
}

uint64_t sub_221A19E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  int v40;
  unint64_t v41;

  LODWORD(STACK[0x46C]) = 1206753083;
  v41 = STACK[0x648];
  STACK[0x4C0] = 335;
  *(_BYTE *)(v41 + 335) = (a39 ^ 0xBA) * (a39 + 17);
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * (int)(((STACK[0x4C0] == 0) * (((v40 + 1002725785) & 0xC43B9DD9) - 1065)) ^ (v40 + 1002725785) & 0xC43B9DD9)))();
}

void sub_221A1A158()
{
  JUMPOUT(0x221A1A120);
}

uint64_t sub_221A1A160@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v3 = a1 - 430;
  v4 = a1 + 141;
  v5 = ((uint64_t (*)(void))STACK[0x310])();
  LODWORD(STACK[0x688]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (((v1 == v4 + 1645152532) * (v3 - 581)) ^ v3)) - 8))(v5);
}

uint64_t sub_221A1A1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v7 = LODWORD(STACK[0x468]);
  v8 = STACK[0x3C8];
  v9 = STACK[0x2C8];
  v10 = STACK[0x448];
  v11 = *(_QWORD *)(v6 + 8 * (v5 - 1210));
  STACK[0x428] = STACK[0x2C8] + 2353;
  STACK[0x420] = v10 + 49;
  STACK[0x418] = v9 + 2333;
  STACK[0x410] = v10 + 29;
  STACK[0x408] = v9 + 2313;
  STACK[0x400] = v10 + 9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v11 - 8))(a1, a2, v7, 2649773600, a5, v8);
}

void sub_221A1AB80()
{
  int v0;

  LODWORD(STACK[0x680]) = v0;
  JUMPOUT(0x221A1AB00);
}

uint64_t sub_221A1ABAC(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  STACK[0x460] = v3;
  v7 = STACK[0x49C];
  *(_DWORD *)(*(_QWORD *)(v6 + 448) + ((a3 - 1133293923 + v7 - 1188) & 0xFFFFFFFC)) = v4;
  LODWORD(STACK[0x49C]) = v7 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((99
                                          * ((((v7 - 1133293854) < 0x40) ^ (a3 - 66)) & 1)) ^ (a3 - 65)))
                            - 8))();
}

uint64_t sub_221A1C2A4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;

  v9 = v5 + v3;
  v10 = *(_DWORD *)(a1 + 4 * (v9 - 8)) ^ *(_DWORD *)(a1 + 4 * (v9 - 3));
  v11 = *(_DWORD *)(a1 + 4 * (v9 - 16)) ^ *(_DWORD *)(a1 + 4 * (v9 - 14)) ^ (v10 + v8 - (v6 & (2 * v10)));
  HIDWORD(v12) = (v1 - 335) ^ (v8 + 136) ^ v11;
  LODWORD(v12) = v11;
  *(_DWORD *)(a1 + 4 * (v2 + v5)) = (v12 >> 31) + v8 - (v6 & (2 * (v12 >> 31)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v2 + 1 + v5) > 0x4F) * v4) ^ v1)) - 8))();
}

uint64_t sub_221A1C330()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_221A1C42C()
{
  JUMPOUT(0x221A1C358);
}

uint64_t sub_221A1C444(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((121 * ((a2 + 1 + v4) > 0x27)) ^ v2)) - 8))();
}

uint64_t sub_221A1C508(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((((a3 + 1 + v7) > 0x3B) * v6) ^ v4))
                                          - 8))(a4);
}

uint64_t sub_221A1C5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((241 * ((a6 + 1 + v8) > 0x4F)) ^ v6)) - 4))();
}

void sub_221A1C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;

  LODWORD(STACK[0x57C]) = v8;
  LODWORD(STACK[0x498]) = v12;
  LODWORD(STACK[0x544]) = v9;
  LODWORD(STACK[0x614]) = v11;
  LODWORD(STACK[0x5C8]) = v10;
  v17 = *(_QWORD *)(v16 + 432);
  v18 = *(_DWORD *)(v17 - 0x5C6940C6B1BC6FE2);
  LODWORD(STACK[0x49C]) = v15 + 80;
  v19 = ((v13 - 452) ^ (v14 - 997) ^ v18) + (v10 ^ v14);
  *(_DWORD *)(v17 - 0x5C6940C6B1BC6FE2) = v19 + v14 - (a8 & (2 * v19));
  JUMPOUT(0x221A1C724);
}

uint64_t sub_221A1C834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;
  unint64_t v66;
  int v67;
  uint64_t v69;

  v66 = STACK[0x488];
  v67 = *(unsigned __int8 *)(STACK[0x488] - 0x5C6940C6B1BC6FDALL) ^ 0x5F;
  if (v67 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                 + 8
                                                                 * ((562
                                                                   * (((a55 ^ (*(_DWORD *)(v66 - 0x5C6940C6B1BC6FDELL) == 369984849)) & 1) == 0)) ^ ((int)a3 + 74)))
                                                     - 8))(a1, 25);
  if (v67 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 + 8 * ((111 * (*(_DWORD *)(v66 - 0x5C6940C6B1BC6FDELL) != (((LODWORD(STACK[0x468]) - 469) | 0xA0) ^ 0x160D86E1))) ^ (LODWORD(STACK[0x468]) + 74))) - 8))(a1, 25, a3, a4, 1099626267, 1695, 26919485, 858949875);
  v69 = LODWORD(STACK[0x468]);
  STACK[0x480] = 91;
  *(_BYTE *)(v66 - 0x5C6940C6B1BC6FDFLL) = (a65 + 7 * ((a3 - 71) ^ 0x2D)) * ((a65 - 44) ^ 0xBA);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v65
                                                               + 8 * ((932 * (STACK[0x480] == 0)) ^ ((int)a3 - 839)))
                                                   - 12))(v69, 25);
}

void sub_221A1D1D8()
{
  JUMPOUT(0x221A1D190);
}

uint64_t sub_221A1D1E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_221A1D214(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;

  *(_DWORD *)(a6 + 52) = (((((v8 + a3 - 1089 - 164) ^ v6) + (LODWORD(STACK[0x684]) ^ v8)) % 0x2710) ^ 0xEFFFDBB9)
                       + 1006630752
                       + ((2 * ((((v8 + a3 - 1089 - 164) ^ v6) + (LODWORD(STACK[0x684]) ^ v8)) % 0x2710)) & 0x3772);
  v9 = STACK[0x68C];
  LODWORD(STACK[0x4AC]) = STACK[0x68C];
  return (*(uint64_t (**)(void))(v7 + 8 * ((1169 * (v9 == v8)) ^ (a3 - 1089))))();
}

void sub_221A1D29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  *a6 = STACK[0x52C];
  a6[85] = STACK[0x4E4];
  a6[86] = STACK[0x61C];
  a6[87] = STACK[0x60C];
  a6[88] = STACK[0x4EC];
  JUMPOUT(0x221A169ACLL);
}

void sub_221A1D2CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 304) -= 1616;
  LODWORD(STACK[0x4AC]) = a4 + 174;
  JUMPOUT(0x221A169ACLL);
}

void sub_221A1D2E8()
{
  JUMPOUT(0x221A169ACLL);
}

void sub_221A1D2F0()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 36) = v0 | 4;
}

uint64_t sub_221A1D2F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v4;
  uint64_t v5;
  int v6;

  STACK[0x3B0] = v4;
  LODWORD(STACK[0x618]) = a4 - 10;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1443 * (((STACK[0x3B0] == 0) ^ (v6 - 84)) & 1)) ^ (v6 - 596))))();
}

uint64_t sub_221A1D48C()
{
  int v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((v0 - 521138063 + ((v2 + 1098251017) & 0xBE8A07F7) - 1253 >= (v2 ^ 0x344u) - 670) ^ v2)))();
}

uint64_t sub_221A1D4D8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;

  LODWORD(STACK[0x618]) = v1 - 10;
  v4 = STACK[0x530];
  v5 = LODWORD(STACK[0x5F4]);
  STACK[0x508] = v5;
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v2
                                                                        + 8
                                                                        * ((1625
                                                                          * ((_DWORD)v5 != ((v3 - 35477226) & 0x21D537C ^ 0x178))) ^ (v3 - 711)))
                                                            - ((v3 - 1045827046) & 0x3E5609CB)
                                                            + 199))(a1, v4);
}

void sub_221A1D4E8()
{
  JUMPOUT(0x221A1D4F0);
}

void sub_221A1D524(uint64_t a1@<X1>, int a2@<W8>)
{
  void (*v2)(_QWORD, uint64_t, _QWORD);
  uint64_t v3;
  int v4;

  v4 = a2 ^ 0x674;
  v2(*(unsigned int *)STACK[0x318], a1, LODWORD(STACK[0x334]) - 1862247496 + (a2 ^ 0x674u) - 1253);
  *(_DWORD *)(v3 - 200) = (v4 + 426521764) ^ (535753261
                                            * ((1828448706 - ((v3 - 200) | 0x6CFBE9C2) + ((v3 - 200) | 0x9304163D)) ^ 0x99F01812));
  sub_221A446E8((_DWORD *)(v3 - 200));
  JUMPOUT(0x221A1D5B4);
}

uint64_t sub_221A1D5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;

  v49 = STACK[0x530];
  v50 = LODWORD(STACK[0x5F4]) ^ ((v47 ^ 0x26B) - 1099358560);
  v51 = (2 * LODWORD(STACK[0x5F4])) & 0x7CF23ED6;
  v52 = 235795823 * ((((2 * (v48 - 200)) | 0x7ACDC568) - (v48 - 200) - 1030152884) ^ 0xA9CBABED);
  v53 = v48 - 200;
  *(_QWORD *)(v53 + 8) = v44;
  *(_QWORD *)(v53 + 16) = a42;
  *(_QWORD *)(v53 + 32) = v45;
  *(_DWORD *)(v48 - 136) = v52 + v50 + v51 + 1307043736;
  *(_BYTE *)(v53 + 24) = 111 * ((((2 * (v48 + 56)) | 0x68) - (v48 + 56) + 76) ^ 0xED) - 30;
  *(_QWORD *)(v53 + 56) = v49;
  *(_QWORD *)(v53 + 48) = a43;
  *(_DWORD *)(v48 - 160) = (v47 - 485) ^ v52;
  *(_DWORD *)(v48 - 200) = (v43 + 760079447) ^ v52;
  v54 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E772B10 + v47 - 642) - 8))(v48 - 200);
  v55 = *(_DWORD *)(v48 - 132);
  LODWORD(STACK[0x618]) = v55;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v46 + 8 * ((1847 * (v55 == 1645153785)) ^ v47))
                                          - (((v47 + 389) | 0xC0u) ^ 0x4E9)))(v54);
}

uint64_t sub_221A1D718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  int v38;
  uint64_t v39;
  int v40;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * (int)((((LODWORD(STACK[0x590]) ^ v38) != a38 - 1368499268)
                                               * (((v40 + 445943596) & 0xE56B74ED) - 678)) ^ v40))
                            - 4))();
}

uint64_t sub_221A1D76C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);

  LODWORD(STACK[0x618]) = v1 + 391;
  v5 = LODWORD(STACK[0x618]);
  v6 = 235795823 * (((v3 | 0x68728E509914D92ELL) - (v3 & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  v7 = a1 - 976199517 + v6;
  *(_DWORD *)(v4 - 192) = -235795823 * (((v3 | 0x9914D92E) - (v3 & 0x9914D92E)) ^ 0xDB99077);
  *(_DWORD *)(v4 - 188) = v6 ^ (a1 - 976199517) ^ 0x73;
  v8 = (uint64_t *)(v4 - 200);
  v8[2] = v6 ^ 0x9DF05623;
  *v8 = v5 ^ v6;
  *(_DWORD *)(v4 - 176) = a1 - v6 - 1501687097;
  *(_DWORD *)(v4 - 172) = v7 + 106;
  *(_DWORD *)(v4 - 168) = v7;
  v9 = ((uint64_t (*)(uint64_t))STACK[0x3B8])(v4 - 200);
  STACK[0x3B0] = 0;
  v10 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 164));
  LODWORD(STACK[0x334]) = 1862247496;
  return v10(v9);
}

uint64_t sub_221A1D7EC@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = ((unint64_t)&STACK[0x508] ^ 0xF3F3F9DFAFEB7F9FLL)
     + 0x5D9F8EE7FE9CD861
     + ((2 * (_QWORD)&STACK[0x508]) & 0xE7E7F3BF5FD6FF30);
  v6 = v2 - 1;
  *(_QWORD *)(v4 + 24) = v6;
  *(_BYTE *)(a1 + v6) = (a2 ^ 0x66 ^ v5 ^ 0xA4) * (v5 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1814 * (*(_QWORD *)(v4 + 24) == 0)) ^ a2)) - 8))();
}

void sub_221A1D87C()
{
  JUMPOUT(0x221A1D840);
}

void sub_221A1D884(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD, uint64_t, _QWORD);

  v2(*(unsigned int *)STACK[0x318], a2, 0);
  JUMPOUT(0x221A1D8C4);
}

uint64_t sub_221A1D994()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(void);

  STACK[0x3B0] = 0;
  v2 = *(_DWORD *)(STACK[0x3C8] + 56);
  *(_DWORD *)(STACK[0x3C8] + 56) = v2 + 1;
  v3 = *(uint64_t (**)(void))(v1 + 8 * ((1804 * ((v0 ^ 0xD381F09D) + v2 < 0xFFFFFFFA)) ^ (v0 - 1129)));
  LODWORD(STACK[0x334]) = 1862247496;
  return v3();
}

void sub_221A1D9E8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = v0 ^ 0x499;
  *(_DWORD *)(v2 - 200) = ((v0 ^ 0x499) + 426522893) ^ (535753261
                                                      * ((v2 + 1931614134 - 2 * ((v2 - 200) & 0x7322187E)) ^ 0x79D61651));
  sub_221A446E8((_DWORD *)(v2 - 200));
  *(_BYTE *)v1 = (-85 * ((v2 + 56) ^ 0xF6)) ^ 0x2F;
  *(_QWORD *)(v1 + 24) = STACK[0x2B0];
  *(_QWORD *)(v1 + 8) = STACK[0x2A8];
  *(_DWORD *)(v2 - 184) = 3804331 * ((v2 - 200) ^ 0x7ED525F6) + v3 + 1389;
  ((void (*)(uint64_t))STACK[0x2A0])(v2 - 200);
  STACK[0x3B0] = 0;
  LODWORD(STACK[0x334]) = 1862247496;
  JUMPOUT(0x221A1D4F4);
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_221A1DAF8@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 208))();
  return 0;
}

uint64_t sub_221A1DB0C()
{
  return 4294925273;
}

void sub_221A1DB18(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = 1374699841 * ((2 * (&v8 & 0x59A7A858) - &v8 + 643323809) ^ 0x4BAC4FA8);
  v7 = *(_DWORD *)(a1 + 64) - v1 - v6;
  v13 = v6 ^ ((*(_DWORD *)a1 ^ v1) - 757538690);
  v14 = v3;
  v15 = v7 + 1047456190;
  v9 = v6 ^ (v2 + 368399990);
  v8 = v5;
  v12 = v4;
  v10 = v5;
  sub_221A443A8((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_221A1DCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, int a13, uint64_t a14, int a15)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = *(unsigned __int8 *)(v16 + 24) - v17;
  v25 = 1759421093 * (&a10 ^ 0xB37DB054);
  a11 = &STACK[0x17594DE9181849F3];
  a14 = v22;
  a12 = ((v24 ^ 0xFE) + ((v24 << (v23 - 120)) & ((v23 ^ 0xC2) + 127) ^ 2) - 5) ^ (-91 * (&a10 ^ 0x54));
  a13 = v25 + 395618377 + v21;
  a15 = v23 - v25 + 906;
  v26 = ((uint64_t (*)(int *))(*(_QWORD *)(v15 + 8 * (v23 ^ 0x5A)) - 4))(&a10);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a10 != v19) * v18) ^ v23)) - 8))(v26);
}

uint64_t sub_221A1DD74()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v2 + 25) | 0x29) ^ 0xAD) * ((v0 - 1281217511) > 0xFFFFFFFD)) ^ (v2 + 366)))
                            - 8))();
}

void sub_221A1DDB8(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(a1 - 0x384B062F07609540) = v2 - 1;
  *(_DWORD *)(v1 + 68) = 1645153785;
}

void Fc3vhtJDvr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X8 }
}

uint64_t sub_221A1DFC4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *a4 = 0;
  *a5 = 0;
  a18 = 108757529 * ((&a17 & 0xA7DA3C6 | ~(&a17 | 0xA7DA3C6)) ^ 0x151E3E12) + 1695027452;
  v21 = sub_221A43B78(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1110 * (a17 == v20)) ^ v18)))(v21);
}

uint64_t sub_221A1E04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v23 = 1759421093 * ((&a17 - 826825291 - 2 * (&a17 & 0xCEB7A5B5)) ^ 0x7DCA15E1);
  HIDWORD(a17) = v23 ^ 0x771B5177;
  a18 = v23 + 1806;
  a20 = v23 ^ 0x18F94B49;
  LODWORD(a17) = v23 ^ 0x7FA6CEE2;
  ((void (*)(unint64_t **))(*(_QWORD *)(v22 + 392) - 12))(&a17);
  a17 = &STACK[0x4BD26FD1213425D9];
  a19 = 1307 - 460628867 * ((((2 * &a17) | 0x9D678C32) - &a17 + 827079143) ^ 0x82254464);
  sub_221A1F8D0((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((11 * (a18 == v21)) ^ 0x296u)))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10);
}

uint64_t sub_221A1E154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;

  v26 = 1178560073 * ((((2 * &a17) | 0x572E13FC) - &a17 + 1416164866) ^ 0x1103719C);
  a18 = ((2 * v23) & 0xE6FBE672) + (v23 ^ 0x737DF339) - 587243776 + v26;
  a20 = v26 ^ 0x3E8;
  a19 = a16;
  sub_221A2F97C((uint64_t)&a17);
  v27 = 1178560073 * (((~&a17 & 0x8CEF827A) - (~&a17 | 0x8CEF827B)) ^ 0x367BFA19);
  a21 = v21;
  a20 = v27 ^ ((v22 ^ 0x5BFF7F7E) - 1350459988 + ((2 * v22) & 0xB7FEFEFC));
  a19 = a16;
  a18 = v27 + 1289;
  v28 = ((uint64_t (*)(int *))(*(_QWORD *)(v25 + 1024) - 8))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1916 * (a17 == 1645153785)) ^ 0x323u)))(v28);
}

uint64_t sub_221A1E2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,unsigned int a21,int a22)
{
  int v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  if (a12 >= 0x608FEDF6)
    v25 = 1010542952;
  else
    v25 = 635686783;
  v26 = 460628867
      * ((((&a17 | 0x2AEB2E12) ^ 0xFFFFFFFE) - (~&a17 | 0xD514D1ED)) ^ 0x99825390);
  a17 = &STACK[0x58A7AA0862456906];
  a18 = a16;
  a19 = v26 - 1703100402;
  a20 = v26 + v23 + 2138962557;
  a21 = v25 - v26;
  v27 = sub_221A43F44((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((22 * (a22 == v22 + v23 - 141 + ((v23 + 367) | 0x160) - 2184)) ^ v23)))(v27);
}

uint64_t sub_221A1E3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  int v12;
  unsigned int v13;
  uint64_t v14;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v14
                                                     + 8 * (((((v12 + 466728956) & 0x71D) - 699) * (a12 < v13)) ^ v12)))(a1, a2);
}

uint64_t sub_221A1E440@<X0>(uint64_t a1@<X8>, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, _BYTE *a6, int a7, char a8, uint64_t a9, uint64_t a10, unsigned int a11, char *a12, _BYTE *a13, uint64_t a14, unsigned int a15)
{
  _BYTE *v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void (*v20)(unsigned int *);
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;

  v22 = v15;
  a12 = &a8 + a1;
  a13 = a6;
  a11 = (v18 - 1177) ^ (((2 * (&a11 & 0x7F331FB0) - &a11 - 2134056888) ^ 0xED38F841) * v16);
  v20(&a11);
  a13 = v22;
  a14 = v17;
  a15 = ((v18 ^ 0xFE) - 938) ^ (1225351577 * (&a11 ^ 0x239AD816));
  a12 = a6;
  ((void (*)(unsigned int *))(*(_QWORD *)(v21 + 8 * (v18 ^ 0x5B3u)) - 8))(&a11);
  a12 = a3;
  a13 = a6;
  a11 = ((v18 ^ 0xFE) - 947) ^ (1374699841
                              * ((-1001333016 - (&a11 | 0xC450DEE8) + (&a11 | 0x3BAF2117)) ^ 0x565B391E));
  v20(&a11);
  a11 = ((v18 ^ 0xFE) - 446) ^ (1755732067
                              * ((((&a11 | 0x3445A058) ^ 0xFFFFFFFE) - (~&a11 | 0xCBBA5FA7)) ^ 0x157CE27C));
  a12 = a6;
  v23 = sub_221A3FFB0((uint64_t)&a11);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((27
                                                        * ((_DWORD)a13 != (((v18 ^ 0xFE) - 45646309) & 0x7FFB)
                                                                        + 1645152982)) ^ v18 ^ 0xFEu))
                                          - (v18 ^ 0x114u)
                                          + 1246))(v23);
}

uint64_t sub_221A1E604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  int v14;
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((a14 != v14) * ((v16 - 532) ^ (v16 - 451))) ^ v16)) - 8))();
}

uint64_t sub_221A1E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (((a13 != ((v15 + 1678211847) & 0x87B7 ^ (v13 - 925)))
                                          * ((v15 + 1678211847) ^ 0x64077FB4)) ^ (v15 + 49)))
                            - 8))();
}

uint64_t sub_221A1E688@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD))(v4 + 8 * (v1 - 1731)))(a1 ^ v2) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (((v1 - 1412) | 0x102) ^ 0x336)) ^ v1)))();
}

uint64_t sub_221A1E6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;

  v16 = a13 ^ (v14 - 1291) ^ (v13 - 1656909894) & 0x62C26DB7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((232
                                          * (((2 * (v16 - ((2 * v16) & 0xEDAA0BF4) + 1993672186)) & 0xDFDBFDDA ^ (((v13 - 901) | 0x308) - 846593368))
                                           + ((v16 - ((2 * v16) & 0xEDAA0BF4) + 1993672186) ^ 0x1938FB17)
                                           - 1610946564 != 266921705)) ^ (v13 - 1333)))
                            - 12))();
}

uint64_t sub_221A1E78C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v1 + v0 + ((v2 - 874430325) & 0x341EBEEDu) - 1877869966 < (((v2 + 8993113) | 0xA8160008) ^ 0xA89F4081);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2 * v4) | (4 * v4) | v2)) - 8))();
}

uint64_t sub_221A1E810(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((a4 - 1904335010) ^ 0x26E16D76 ^ v5) + ((a4 - 1904335010) & 0x7181D2F1))
                                          * ((unint64_t)(v4 - a1) > 0x1F)) ^ a4))
                            - 4))();
}

uint64_t sub_221A1E860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((v7 < ((a5 - v6 - 213) ^ (v5 + 1686))) * ((a5 + 21) ^ 0x100)) ^ a5)))();
}

uint64_t sub_221A1E894(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v8 + v7 + v6 + 1696;
  v11 = v3 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v5 & 0xFFFFFFE0) != 32) * ((a2 - v2) ^ 0x604)) ^ (v4 + a2 + 410))))();
}

void sub_221A1E8F0()
{
  JUMPOUT(0x221A1E8B4);
}

uint64_t sub_221A1E8FC(uint64_t a1)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  _DWORD *v6;
  void (*v7)(_BYTE *);
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[4];
  unsigned int v11;
  uint64_t v12;

  *v3 = a1;
  *v6 = v2;
  v4 = (v1 - 1155) | 0x202;
  v12 = v8;
  v11 = v1
      - 500
      + 535753261
      * (((v10 | 0x252138E8) - v10 + (v10 & 0xDADEC710)) ^ 0x2FD536C7)
      + 226;
  v7(v10);
  v12 = v9;
  v11 = v4
      + 535753261 * ((992398163 - (v10 | 0x3B26CB53) + (v10 | 0xC4D934AC)) ^ 0xCE2D3A83)
      + 367;
  v7(v10);
  return 0;
}

void sub_221A1EBB4(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_221A1EC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a66;
  uint64_t v66;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(*(_QWORD *)(v66 + 3744) - 8))(a1, a2, a3, a4, a5, a6, a7, 3102982430, a9, &a66, a11, &STACK[0x4FF3ADA337C70055]);
}

uint64_t sub_221A1ED84()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (int)(((((v0 - 338895378) & 0xDFBFE7EB) + 879966575) * (v2 == v3)) ^ v0))
                            - ((v0 + 1645) ^ 0x738)))();
}

uint64_t sub_221A1EDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;

  return (*(uint64_t (**)(void))(v18 + 8 * ((107 * ((((v17 - 1641) ^ 0xFFFFFF2F) & v19) - a17 == -3)) ^ v17)))();
}

uint64_t sub_221A1EE14@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((a1 - 880016978) | 0xC428) + 879967018) * (v1 == 369238551)) ^ a1))
                            - 8))();
}

uint64_t sub_221A1EE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  _BOOL4 v27;

  v25 = 2 * (v21 ^ (v22 + 125) ^ 0x10F);
  v26 = v21 + 879967956;
  v27 = a21 - 94734047 < (v24 - 937898909);
  if ((a21 - 94734047) < 0x1006639E != (v24 - 937898909) < 0x1006639E)
    v27 = (v24 - 937898909) < 0x1006639E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v27 * (v25 ^ 0x1C0)) ^ v26)) - 8))();
}

uint64_t sub_221A1F01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v21 = 628203409 * ((v20 - 152) ^ 0x82880C33);
  *(_DWORD *)(v20 - 136) = v17 - v21 + 1538;
  *(_DWORD *)(v20 - 132) = v19 - v21 + 77623025;
  *(_QWORD *)(v20 - 152) = a14;
  *(_QWORD *)(v20 - 144) = a12;
  *(_QWORD *)(v20 - 112) = a17;
  *(_QWORD *)(v20 - 104) = a13;
  *(_QWORD *)(v20 - 128) = a15;
  v22 = (*(uint64_t (**)(uint64_t))(a6 + 8 * (v17 ^ 0x19D)))(v20 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * (((*(_DWORD *)(v20 - 120) == (((v17 + 134791456) | 0xC3840489) ^ 0xA983CB50))
                                                        * ((355 * (v17 ^ 0x105)) ^ 0x58D)) ^ v17))
                                          - 8))(v22);
}

uint64_t sub_221A1F110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(v11 + 48 * (v13 + a8)) == 470551612) * (((16 * v8) ^ 0x6FF0 ^ (v9 + 256)) + 879967002)) ^ v8))
                                                                                       - 4))(a1, a2, a3, a4, a5, v12);
}

uint64_t sub_221A1F170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;

  if ((v5 - 1155520739) <= 0x19 && ((1 << (v5 + 29)) & 0x3014001) != 0)
    __asm { BR              X10 }
  return a5 ^ 0x9DF05627;
}

void sub_221A1F8D0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *((_QWORD *)*(&off_24E772B10 + v1 - 1265)
       + ((61 * (((uint64_t (*)(uint64_t))*(&off_24E772B10 + v1 - 1081))(32) != 0)) ^ v1)
       - 1)
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_221A1F960(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x23F5AF4C23F5AF4CLL;
  *(_QWORD *)(result + 16) = 0xA94A23B81285297ALL;
  *(_DWORD *)(result + 24) = 1645153785;
  *(_QWORD *)(v2 - 0x4BD26FD1213425A1) = result + 0x27681A84B35EB105;
  *((_DWORD *)v1 + 2) = 1645153785;
  return result;
}

void sub_221A1F9E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_221A1FA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1906 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x13Eu)))();
}

uint64_t sub_221A1FA50()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = v1 - ((2 * v1 + 1881461128) & 0x82B34678) + 2037124096;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((912
                                          * (((2 * v2) & 0xECF2B9EA ^ 0x80B20068) + (v2 ^ 0x3720FFC9) + 1845473215 != 1685654708)) ^ 0x4AAu))
                            - 4))();
}

uint64_t sub_221A1FB04(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v4 + 8 * ((26 * (a4 + a3 + v5 + 973 + (v5 ^ 0x9869E38) > 7)) ^ v5)))();
}

uint64_t sub_221A1FB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * (a8 ^ (207 * ((unint64_t)(v9 - a5 - 1167) > 0x1F))))
                            - 4))();
}

uint64_t sub_221A1FB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  unsigned int v9;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((((a8 + 2059979559) & 0x33F0) + 118) ^ 0xC21B0EF2 ^ ((((a8 + 2059979559) & 0x33F0)
                                                                                            + 118) | 0x38) ^ 0xC21B0EC4)
                                     * (v9 < 0x20)) ^ (a8 + 2059979559) & 0x33F0)))();
}

uint64_t sub_221A1FBEC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v12 = a7 + a3 + a4 + 2015;
  v13 = v10 + v12;
  v14 = *(_OWORD *)(v13 - 31);
  v15 = v9 + v12;
  *(_OWORD *)(v15 - 15) = *(_OWORD *)(v13 - 15);
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v11 & 0xFFFFFFE0) != 32) * (((v8 + a6 + 1315) | 0xC) - 1540)) ^ (v8 + a6 + 124))))();
}

void sub_221A1FC48()
{
  JUMPOUT(0x221A1FC04);
}

uint64_t sub_221A1FC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(a5 + 1424) = v6 + ((v7 - v5) ^ 0x2D86C0A4);
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_221A1FDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(v5 + (v8 + v7)) = *(_BYTE *)(v6 + (v8 + v7));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((41
                                                                         * (((v8 - 1 == a4) ^ (((a3 - 31) & 0xF7) - 104)) & 1)) ^ (a3 - 86405151) & 0x5266FF7u))
                                                           - 8))(a1, a2, (((a3 - 86405151) & 0x5266FF7) - 1385) | 0x482u);
}

void sub_221A1FE10(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

uint64_t sub_221A1FE98@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((*(_BYTE *)(v2 - 0x27681A84B35EB0F1) & 1) == 0) ^ (a1 - 1)) & 1)
                                * (a1 ^ 0x218)) ^ a1)))();
}

void sub_221A1FED8(int a1@<W8>)
{
  uint64_t v2;
  _BYTE v3[80];

  *(_BYTE *)(v2 - 0x27681A84B35EB0E6) = ((((unint64_t)v3 ^ 0xFFFFEE7FFFDAFB87) + 121) ^ 0xBA)
                                        * (((unint64_t)v3 ^ 0xFFFFEE7FFFDAFB87) - 118);
  __asm { BR              X15 }
}

void sub_221A20104()
{
  JUMPOUT(0x221A200D4);
}

void sub_221A2010C()
{
  int v0;
  uint64_t v1;

  (*(void (**)(void))(v1 + 8 * (v0 - 1003)))();
  JUMPOUT(0x221A20124);
}

uint64_t sub_221A20140(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)off_24E76E520[((8 * (*(_DWORD *)(a2 + 4) != 1206753096)) | ((*(_DWORD *)(a2 + 4) != 1206753096) << 6)) ^ 0x99u]
                                          - 12))(4294925278);
}

uint64_t sub_221A20188@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 9208) - 12))(0);
}

uint64_t sub_221A201E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v5)) = *(_BYTE *)(v4 + (v7 + v5));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v7 - 1 != v2) * v6) ^ v3)) - 12))(0);
}

void sub_221A20214(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_24E772B10 + (v1 ^ 0x1C2)))((char *)*(&off_24E772B10 + v1 - 229) - 4, sub_221A440DC);
  __asm { BR              X11 }
}

uint64_t sub_221A202D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((883 * (**(_QWORD **)(v1 + 8 * (v2 ^ 0x1E8)) == 0)) ^ v2))
                            - ((v2 - 1332780451) & 0x4F709ED1)
                            + 585))();
}

uint64_t sub_221A2032C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x2C2)))(v1);
}

void sub_221A2034C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_221A2039C@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((19 * (v1 == 1206753083)) ^ 0x58Du)) - 8))();
}

uint64_t sub_221A203D4(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + (v3 ^ (v2 + 687)) + v1 + 4) = 79;
  *a1 = v1;
  return 0;
}

uint64_t sub_221A20408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v3 + v4) + 4) = ((2 * **(_BYTE **)(a2 + 8)) & 0x9F) + (**(_BYTE **)(a2 + 8) ^ 0x4F);
  v5 = *(_DWORD *)(a2 + 4) - 650652805;
  v6 = v5 < 0x21256AB6;
  v7 = v5 > 0x21256AB7;
  if (v6)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((1572 * !v7) ^ 0x3BAu)) - 8))();
}

void sub_221A204B8()
{
  JUMPOUT(0x221A2043CLL);
}

void sub_221A204C0(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) == 159353952
    || *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) == 159353952;
  v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BR              X14 }
}

uint64_t sub_221A205D0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((a1 + v3 + 71 * (v2 ^ 0xEAu) - 1056 >= 0x7FFFFF7D)
                                     * (((v2 + 301361902) & 0xEE0995EF) + 49)) ^ v2)))();
}

uint64_t sub_221A20630(int a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);

  v3 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                    + 8
                                                                    * ((1868 * (v2 > ((a1 - 776) | 0x444) - 1239)) ^ a1))
                                                        - 8);
  return v3(v3, 136689414, 1868);
}

uint64_t sub_221A206A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _BOOL4 v20;

  v20 = v17 > v19;
  *(_DWORD *)(a14 + 4 * (a2 - 136689414)) = v15;
  if (v20 == a2 - 912297563 < ((v16 - 598) | 0x11A) + 1371874575)
    v20 = a2 - 912297563 < v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((977 * !v20) ^ v16)) - 8))();
}

uint64_t sub_221A20724(int a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (46 * (v2 == 0)))) - ((a1 + 118) ^ 0x419)))();
}

uint64_t sub_221A20758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8 * (int)((((v12 + 1694736606) & 0x9AFC5BF7 ^ 0x26B) * (v11 > a10)) ^ v12))
                            - ((v12 - 2048383028) & 0x7A17D5E7)
                            + 441))();
}

uint64_t sub_221A207DC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((925 * (*(_DWORD *)(a14 + 4 * (v16 + v17 + 1)) == v15)) ^ (a1 + 588)))
                            - ((23 * (a1 ^ 0x1C8) - 265) | 0xC5u)
                            + 219))();
}

uint64_t sub_221A20838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v11 + v10 >= (v9 - 68 + a5)) * v7) ^ v9))
                            - (((v9 - 43) | v6) ^ v8)))();
}

void sub_221A20874()
{
  JUMPOUT(0x221A207F8);
}

void sub_221A2087C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_221A20C74(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  _DWORD v5[2];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 159353952 >= 0)
    v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19) - 159353952;
  else
    v2 = 159353952 - *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) - 159353952 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19) - 159353952;
  else
    v3 = 159353952 - *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19);
  v6 = *(_QWORD *)(a1 + 8);
  v5[1] = (460628867 * ((1088039055 - (v5 | 0x40DA288F) + (v5 | 0xBF25D770)) ^ 0xF3B3550D)) ^ (v1 + 290);
  sub_221A30320((uint64_t)v5);
  if (v2 >= v3)
    v4 = v3;
  else
    v4 = v2;
  __asm { BR              X16 }
}

uint64_t sub_221A20E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  _BOOL4 v15;

  v11 = v4 - 413931738;
  v12 = 4 * (v7 + v5);
  v13 = (*(_DWORD *)(*(_QWORD *)(v10 - 0xC7F991DE6408E15) + v12) ^ v6)
      - (*(_DWORD *)(*(_QWORD *)(v9 - 0xC7F991DE6408E15) + v12) ^ v6);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v12) = v13
                                                           + v6
                                                           - ((((v3 - 387) | 0x140) ^ (v8 + 434)) & (2 * v13));
  v15 = v7 - 1538539199 < 1733551910 && v7 - 1538539199 >= v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v15 * v2) ^ v3)) - 12))();
}

uint64_t sub_221A20F14()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 141438039 < (int)(v3 + 1266045501);
  if (v3 > 0x3489ADC2 != v2 + 141438039 < -881438147)
    v4 = v3 > 0x3489ADC2;
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v4 * (((v1 - 453) | 0x320) ^ 0x90)) ^ v1)))();
}

uint64_t sub_221A20F8C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 773424304 < (int)(v3 + 1898030669 + v1 + 903);
  if (v3 > 0xEDE5569 != v2 + 773424304 < (int)(((v1 + 27859501) & 0xFE56E7FA) - 249452628))
    v4 = v3 > 0xEDE5569;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((57 * v4) | v1)) - 4))();
}

uint64_t sub_221A21014@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;
  uint64_t v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v14 = v7 - 903;
  v15 = v12 > v6;
  v16 = 4 * (v10 + v8);
  v17 = v3 + 404716728 + (*(_DWORD *)(*(_QWORD *)(v13 - 0xC7F991DE6408E15) + v16) ^ 0x401477F0);
  *(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v16) = v17 + v9 - (v11 & (2 * v17));
  LODWORD(v16) = v10 + 1 + v4;
  v18 = v15 ^ ((int)v16 < a1 + 746);
  v19 = (int)v16 < v5;
  if (!v18)
    v15 = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1163 * v15) ^ v14)) - 4))();
}

uint64_t sub_221A21110()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((v1 == (v2 - 202) + 0x5BD59A0E7E08128) * ((v2 ^ 0x338) - 444)) ^ v2))
                            - 4))();
}

uint64_t sub_221A21154()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((691 * (v2 + v3 + ((v1 - 466) | 0x220u) + 538 - 1083 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_221A21190@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v8;
  int v9;
  signed int v10;
  int v11;
  _BOOL4 v12;

  v6 = a1 - 1515627297;
  v7 = a1 - 321;
  v8 = v4 - 179107018 < -1201983204;
  v9 = (**(_DWORD **)(a2 - 0xC7F991DE6408E15) ^ 0x401477F0) + 1;
  **(_DWORD **)(a2 - 0xC7F991DE6408E15) = v9 + v3 - (v5 & (2 * v9));
  v10 = (v6 & 0x5A56A53A ^ 0xBEA6F4D2) + 2041856053;
  v11 = v8 ^ (v10 < -1201983204);
  v12 = v10 < v4 - 179107018;
  if (!v11)
    v8 = v12;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((269 * !v8) ^ v7)))(1515627834);
}

void sub_221A21264()
{
  JUMPOUT(0x221A211F8);
}

uint64_t sub_221A21270@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;
  int v18;
  _BOOL4 v19;

  v14 = (a1 - 229) | 0x33;
  v15 = 4 * (v10 + v8);
  v16 = v3 + 404716727 + (*(_DWORD *)(*(_QWORD *)(v13 - 0xC7F991DE6408E15) + v15) ^ v9);
  *(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v15) = v16 + v9 - ((v16 << ((v14 + 84) & 0xF6 ^ 0xC3)) & v11);
  v17 = v12 > v7;
  LODWORD(v15) = v10 + 1 + v5;
  v18 = v17 ^ ((int)v15 < v4);
  v19 = (int)v15 < v6;
  if (!v18)
    v17 = v19;
  return (*(uint64_t (**)(void))(v2 + 8 * ((350 * v17) ^ v14)))();
}

uint64_t sub_221A21378()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((247 * (v2 + v3 - 1 < ((v1 + 393399162) & 0xE88D367D ^ 0x7FFFFBE7))) ^ (v1 + 596)))
                            - 8))();
}

uint64_t sub_221A213F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((197
                                          * (*(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15)
                                                       + 4 * (v3 + v5 + ((v2 + 12) | 0x50u) - 1141)) == v4 + 262 * (((v2 + 12) | 0x50) ^ 0x470) - 1048)) ^ ((v2 + 12) | 0x50)))
                            - 8))();
}

uint64_t sub_221A2145C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((108 * (((v1 ^ ((v3 + v2 - 2) < 0x7FFFFFFF)) & 1) == 0)) ^ v1))
                            - ((v1 - 1178509359) & 0x463E9E36)
                            + 536))();
}

uint64_t sub_221A214B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((197
                                               * (*(_DWORD *)(v1 + 4 * (v4 + (v2 ^ v3) + v6 - 1141)) == v5 + 262 * (v2 ^ v3 ^ 0x470) - 1048)) ^ v2 ^ v3))
                            - 8))();
}

void sub_221A21504(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0xC7F991DE6408E19) = (((v3 + v2) * (v1 - 1901766679)) ^ 0x5DFFADE4)
                                        - 1417683332
                                        + ((2 * (v3 + v2) * (v1 - 1901766679)) & 0xBBFF5BC8);
}

void sub_221A21590(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BR              X9 }
}

uint64_t sub_221A2163C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 - 527) ^ 0x348 ^ ((a1 + 4) | 0x108)) * (v1 != 0)) ^ a1))
                            - 8))();
}

uint64_t sub_221A21684()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = (*(_BYTE *)(v3 - 0x27681A84B35EB0F1) & 1) == 0
    && (*(_DWORD *)(v2 + 16) ^ v0) - 193011051 < ((v1 - 478) | 0x100u) - 337;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v6 | (16 * v6)) ^ v1)) - 4))();
}

uint64_t sub_221A216F0@<X0>(uint64_t (*a1)(unsigned int *)@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v11 = 3804331 * (((&a3 | 0xCAC897F1) - (&a3 & 0xCAC897F1)) ^ 0xB41DB207);
  a7 = v11 + 384812048;
  a3 = v11 + 1116194082;
  a4 = v11 + v10 + 248;
  a5 = v7;
  a6 = v8;
  v12 = a1(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v8 - 0x27681A84B35EB0EDLL) != ((v10 + 369513487) & 0xE9F9ABF9) + 1645153504)
                                                        * ((v10 + 1017) ^ 0x500)) | v10))
                                          - 12))(v12);
}

void sub_221A217C0()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;

  v5 = v3 - (((v4 + 1008) ^ 0x989A24D6) & (2 * v3 - 386021972)) + 1087108037;
  *v7 = (HIBYTE(v5) ^ 0x4C) - ((v5 >> 23) & 0x64) + 50;
  v7[1] = (BYTE2(v5) ^ 0x4D) - ((v5 >> 15) & 0x64) + 50;
  v7[2] = (BYTE1(v5) ^ 0x10) - ((2 * (BYTE1(v5) ^ 0x10)) & 0x64) + 50;
  v7[3] = (v3 - (((v4 - 16) ^ 0xD6) & (2 * v3 - 84)) - 59) ^ 0xDD;
  v6 = v2 - ((2 * v2) & 0x3749B0E77A16C552) + 0x1BA4D873BD0B62A9;
  v7[4] = (HIBYTE(v6) ^ 0x1B) - ((2 * (HIBYTE(v6) ^ 0x1B)) & 0x64) + 50;
  v7[5] = (BYTE6(v6) ^ 0xA4) - ((2 * (BYTE6(v6) ^ 0xA4)) & 0x64) + 50;
  v7[6] = (BYTE5(v6) ^ 0xD8) + (~(2 * (BYTE5(v6) ^ 0xD8)) | 0x9B) + 51;
  v7[7] = (BYTE4(v6) ^ 0x73) - 2 * ((BYTE4(v6) ^ 0x73) & 0x36 ^ BYTE4(v6) & 4) + 50;
  v7[8] = (((v2 - ((2 * (_DWORD)v2) & 0x7A16C552) - 1123327319) >> 24) ^ 0xBD)
        - ((2 * (((v2 - ((2 * (_DWORD)v2) & 0x7A16C552) - 1123327319) >> 24) ^ 0xBD)) & 0x64)
        + 50;
  v7[9] = (BYTE2(v6) ^ 0xB) - ((2 * (BYTE2(v6) ^ 0xB)) & 0x64) + 50;
  v7[10] = (BYTE1(v6) ^ 0x62) - 2 * ((BYTE1(v6) ^ 0x62) & 0x36 ^ BYTE1(v6) & 4) + 50;
  v7[11] = (v2 - ((2 * v2) & 0x52) - 87) ^ 0x9B;
  *v0 = *(_DWORD *)(v1 - 0x27681A84B35EB0EDLL);
}

uint64_t sub_221A21EB0(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  v2 = *(_DWORD *)(a1 + 8) - v1;
  v3 = v1 + *(_DWORD *)(a1 + 12) - 507371026;
  v4 = (*(_DWORD *)(*(_QWORD *)a1 - 0x5C6940C6B1BC6FF6) ^ 0x6731FE54) + v3;
  v5 = v4 - ((2 * v4) & 0xCE63FCA8) + 1731329620;
  *(_DWORD *)(*(_QWORD *)a1 - 0x5C6940C6B1BC6FF6) = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + (v2 ^ 0x437)) + ((277 * ((v5 ^ 0x6731FE54) < v3)) ^ v2) - 1)
                            - 8))();
}

void sub_221A21F78(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) = (*(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) ^ 0x37D4814A)
                                         + 936673610
                                         - ((2 * (*(_DWORD *)(a1 - 0x5C6940C6B1BC6FFALL) ^ 0x37D4814A) + 2) & 0x6FA90294)
                                         + 1;
}

void sub_221A21FC0(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  _BOOL4 v5;

  v1 = 235795823 * (((_DWORD)a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  v2 = a1[9] + v1;
  v3 = *a1 ^ v1;
  v5 = (v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 603979776;
  __asm { BR              X11 }
}

uint64_t sub_221A22090@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 8);
  v16 = 1755732067
      * (((&a4 | 0xA5876138) - &a4 + (&a4 & 0x5A789EC0)) ^ 0x7B41DCE3);
  a8 = v16 + v14 + 301;
  a9 = &STACK[0xF250A47131524F5];
  a6 = v15;
  a7 = &STACK[0x4B30070DAA05F9E0];
  a10 = (99 * (((&a4 | 0x38) - &a4 + (&a4 & 0xC0)) ^ 0xE3)) ^ 0xC5;
  a5 = ((v11 ^ 0x1B729855) + 394248036 + ((v11 << ((v14 - 29) ^ 0x36)) & 0xFD3BA1FE ^ 0xC91A8154)) ^ v16;
  a4 = &STACK[0x330904BA72E93EC4];
  v17 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v14 ^ 0x12F)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((1381 * (a11 == 1645153785)) ^ v14)) - 8))(v17);
}

uint64_t sub_221A221C8()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((((v2 + 724978375) & 0xD4C9B7A7 ^ 0x45A) * (v1 == 603979776)) ^ v2))
                            - ((v2 - 618880059) & 0x24E35BBB ^ 0x3B4)))();
}

uint64_t sub_221A22228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((29 * (a10 + 4 >= a10)) ^ v10))
                                          - (v10 ^ 0x291 ^ (13 * (v10 ^ 0x6F5u)) ^ 0xCLL)))(a1);
}

uint64_t sub_221A222A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (692 * (v1 != 0xD86A8E34)))) - 12))();
}

uint64_t sub_221A222F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 > 0x13057B94;
  *(_BYTE *)(a1 + (v7 - 281128576)) = *(_BYTE *)(v1 + (v7 - 281128576));
  if (v9 == v7 - 600254996 < v3)
    v9 = v7 - 600254996 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v2)) - 12))();
}

uint64_t sub_221A2237C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((15
                                          * (((2 * v1) & 0xDF59FFDE ^ 0x90511C48)
                                           + (v1 ^ 0xB7C671DB)
                                           + ((v0 - 808) ^ 0xF7DF7F8F) != 1737260655)) ^ v0))
                            - 12))();
}

uint64_t sub_221A223E8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2015
                                          * ((((v0 - 1873608687) < 0xC) ^ (-83 * (v1 ^ 4))) & 1)) ^ v1))
                            - (v1 + 69)
                            + 336))();
}

uint64_t sub_221A22444(int a1, int a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((28
                                          * (((a3 + a1 + v4 - (v3 & 3) + 1486) & 0xFFFFFFFC) <= a1
                                                                                              + v4
                                                                                              + ((((a2 - 878) | 0x304)
                                                                                                + a3) ^ (20 * (a2 ^ 0x77Eu))))) ^ a2))
                            - 12))();
}

uint64_t sub_221A224AC@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v6 - 519);
  a3.i32[0] = *(_DWORD *)(a2 + (v8 ^ 0x4FF) + a1);
  *(_DWORD *)(a2 - 3 + (v3 + v4 + v8 - 1007 - 271)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((1019 * (v5 != 4)) ^ v8)) - 8))();
}

uint64_t sub_221A22510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a1 - 3 + (v3 + v2)) = *(_DWORD *)(v1 - 3 + (v3 + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 4) * (((v4 - 71) | 2) ^ 0x77A)) ^ (v4 + 311))) - 8))();
}

uint64_t sub_221A22564(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 - 660417817) & 0x275D2D5D ^ 0x127) * (v1 == v2)) ^ a1)) - 4))();
}

uint64_t sub_221A225A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((529 * (v4 - 1 != v2)) ^ (v5 + 40))) - (v5 ^ 0x2ECu) + 948))();
}

uint64_t sub_221A225E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1570
                                          * ((((v0 - 696) ^ (*(_QWORD *)(v1 + 16) == 0x2E91F1FE0AA58417)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_221A22628@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a1 - 0x2E91F1FE0AA58417) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * ((980 * (*(_QWORD *)(v4 + 24) != 0x5412677448247A30)) ^ (v3 - 612)))
                            - 8))();
}

void sub_221A22680(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x5412677448247A30) = v2;
  *(_DWORD *)(v1 + 32) = 1645153785;
}

void sub_221A2271C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  __asm { BR              X14 }
}

uint64_t sub_221A227E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v7;
  uint64_t v8;
  unsigned int v9;

  v5 = 108757529 * ((1436736608 - (&v7 | 0x55A2DC60) + (&v7 | 0xAA5D239F)) ^ 0x4AC141B4);
  v8 = v1;
  v7 = v5 + v3 + 163;
  v9 = (v2 - ((((739 * (v3 ^ 0x312)) ^ 0xED4E0848) + v4) & 0xC39B409E) + 1484039958) ^ v5;
  return ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x38E)) - 8))(&v7);
}

void sub_221A22958(uint64_t a1, uint64_t a2)
{
  int v3;
  int v5;
  unint64_t *v6;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 1178560073 * ((&v5 - 1556789680 - 2 * ((unint64_t)&v5 & 0xA3354650)) ^ 0x19A13E32);
  v5 = 1076023948 - v3;
  v6 = &STACK[0x5C6940C6B1BC70A6];
  v7 = 1172345435 - v3;
  sub_221A0D674((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_221A22AFC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;

  v5 = v1 - 2147479261;
  if (v5 <= 0x40)
    v5 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((659 * (v4 - v0 - v2 + v5 > 0xE)) ^ 0x492u)) - 12))();
}

uint64_t sub_221A22B68(unsigned int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v7 = v2 + v1;
  v8 = v7 - 2147479261;
  if ((v7 - 2147479261) <= 0x40)
    v8 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((11 * (v6 - v7 >= (v4 + v8))) ^ a1)) - 12))();
}

uint64_t sub_221A22BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  int v23;
  int v24;
  uint64_t v25;

  return ((uint64_t (*)(void))(*(_QWORD *)(v25
                                        + 8
                                        * ((46
                                          * ((unint64_t)(&a23 + a14 + (v23 + v24 + 1975)) > 0xF)) | 0x581u))
                            - 4))();
}

uint64_t sub_221A22C18@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t *v6;
  int v7;
  int8x16_t v8;
  int8x16_t v9;

  v7 = 638 * (v4 ^ 0x517);
  v8.i64[0] = 0x6464646464646464;
  v8.i64[1] = 0x6464646464646464;
  v9.i64[0] = 0x3232323232323232;
  v9.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(v2 + a1 + (v7 ^ 0x17D ^ (v1 + 897))) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v8)), v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((489 * (((v3 + 1) & 0x1FFFFFFF0) != 16)) ^ v7))
                            - 8))();
}

void sub_221A22C9C()
{
  JUMPOUT(0x221A22C5CLL);
}

uint64_t sub_221A22CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (((((v3 - 1867562114) & 0x50B70A) + 879) * (v1 == v2)) ^ v3))
                                                   - (v3
                                                    - 735)
                                                   + 670))(a1, 2427853056);
}

uint64_t sub_221A22CF8@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  *(&a17 + (a2 + v17)) = *(_BYTE *)(v18 + v21 - 1473562207)
                                     - ((*(unsigned __int8 *)(v18 + v21 - 1473562207) << ((v19 + 104) ^ 0xB)) & 0x64)
                                     + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((107 * ((a1 + a2 + 49) > 0x3F)) ^ v19)) - 12))();
}

uint64_t sub_221A22D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int32x4_t a41,int32x4_t a42,int32x4_t a43,int32x4_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t (*v52)(__n128, __n128, __n128, __n128, __n128);
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint8x16_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  uint16x8_t v65;
  int8x16_t v66;
  uint8x16_t v67;
  uint16x8_t v68;
  uint16x8_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int8x16_t v73;
  uint8x16_t v74;
  int8x16_t v77;
  int8x16_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int v86;
  int v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v94;
  uint8x16_t v95;
  uint16x8_t v96;
  uint16x8_t v97;
  uint8x16_t v98;
  uint8x16_t v103;
  uint16x8_t v104;
  uint16x8_t v105;
  int32x4_t v106;
  int32x4_t v107;
  int32x4_t v108;
  int32x4_t v109;
  uint64_t v110;
  _DWORD *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  int8x16x4_t v124;
  int8x16x4_t v125;

  v120 = v45;
  v52 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v46 + 8 * v44) - 4);
  v53.n128_u64[0] = 0x3232323232323232;
  v53.n128_u64[1] = 0x3232323232323232;
  v54 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v55 = (__n128)vdupq_n_s32(0x620F0DF9u);
  v123 = v51 - 16;
  v56.n128_u64[0] = 0x6464646464646464;
  v56.n128_u64[1] = 0x6464646464646464;
  v57 = (__n128)vdupq_n_s32(0xC41E1BF2);
  HIDWORD(a13) = a13 + 972540699;
  v58 = HIDWORD(a31);
  v59 = a33;
  v60 = BYTE4(a34) ^ 0x5F;
  HIDWORD(a16) = BYTE4(a34) ^ 0x5F;
  if (v60 == 2)
  {
    v121 = __PAIR64__(a32, HIDWORD(a31));
    v122 = __PAIR64__(a33, HIDWORD(a32));
    v125 = vld4q_s8((const char *)&a22 + 4);
    v94 = a6 + a5 + 337;
    LODWORD(a16) = HIDWORD(a33);
    v95 = (uint8x16_t)veorq_s8(v125.val[0], (int8x16_t)v53);
    v96 = vmovl_u8(*(uint8x8_t *)v95.i8);
    v97 = vmovl_high_u8(v95);
    v98 = (uint8x16_t)veorq_s8(v125.val[1], (int8x16_t)v53);
    _Q22 = vmovl_u8(*(uint8x8_t *)v98.i8);
    _Q21 = vmovl_high_u8(v98);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v103 = (uint8x16_t)veorq_s8(v125.val[2], (int8x16_t)v53);
    v104 = vmovl_high_u8(v103);
    v105 = vmovl_u8(*(uint8x8_t *)v103.i8);
    v125.val[0] = veorq_s8(v125.val[3], (int8x16_t)v53);
    v125.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v125.val[0]);
    v125.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[1]);
    v125.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[1].i8);
    v125.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v125.val[0].i8);
    v125.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v125.val[0]);
    v125.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v125.val[0].i8);
    v106 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v105.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), 0x18uLL)), v125.val[0]);
    v107 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v105, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v96), 0x18uLL)), v125.val[3]);
    v108 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v104.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8), 0x18uLL)), v125.val[1]);
    v109 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v104, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v97), 0x18uLL)), v125.val[2]);
    v125.val[0] = veorq_s8(vandq_s8((int8x16_t)v106, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)v125.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[3] = veorq_s8(vandq_s8((int8x16_t)v107, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[1] = veorq_s8(vandq_s8((int8x16_t)v108, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v125.val[2] = veorq_s8(vandq_s8((int8x16_t)v109, (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v125.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a43 = vaddq_s32(vsubq_s32(v108, vaddq_s32((int32x4_t)v125.val[1], (int32x4_t)v125.val[1])), (int32x4_t)v55);
    a44 = vaddq_s32(vsubq_s32(v109, vaddq_s32((int32x4_t)v125.val[2], (int32x4_t)v125.val[2])), (int32x4_t)v55);
    a41 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v125.val[0], (int32x4_t)v125.val[0])), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32(v107, vaddq_s32((int32x4_t)v125.val[3], (int32x4_t)v125.val[3])), (int32x4_t)v55);
    v110 = v94 ^ 0x184u;
    v111 = (_DWORD *)&a41 + v49 + 1580584629;
    v112 = *(v111 - 8) ^ *(v111 - 3);
    v113 = v110 ^ (v50 + 340);
    v114 = *(v111 - 16);
    v115 = v114 ^ *(v111 - 14) ^ (v112 + v113 - ((2 * v112) & 0xC41E1BF2));
    HIDWORD(v117) = v115 ^ v50;
    LODWORD(v117) = v115;
    v116 = v117 >> 31;
    v118 = (v50 + v116);
    *v111 = v118 - ((2 * v116) & 0xC41E1BF2);
    v119 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * ((1617 * (v51 != 1580584566)) ^ v94)) - 12);
    return v119(v110, 1580584630, v58, v59, v119, v118, v114, v113, a9, a10, a11, a12, a13, a14, v120, a16, v121, v122, v52,
             v123,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
  else if (v60 == 1)
  {
    v124 = vld4q_s8((const char *)&a22 + 4);
    v61 = 41 * (a5 ^ (a5 - 13));
    v62 = (uint8x16_t)veorq_s8(v124.val[0], (int8x16_t)v53);
    v63 = vmovl_high_u8(v62);
    v64 = (int8x16_t)vmovl_high_u16(v63);
    v65 = vmovl_u8(*(uint8x8_t *)v62.i8);
    v66 = (int8x16_t)vmovl_high_u16(v65);
    v67 = (uint8x16_t)veorq_s8(v124.val[1], (int8x16_t)v53);
    v68 = vmovl_u8(*(uint8x8_t *)v67.i8);
    v69 = vmovl_high_u8(v67);
    v70 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8));
    v71 = vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66);
    v72 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8));
    v73 = vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v64);
    v74 = (uint8x16_t)veorq_s8(v124.val[2], (int8x16_t)v53);
    _Q22 = (int8x16_t)vmovl_high_u8(v74);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v74.i8);
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v82 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v124.val[0] = veorq_s8(v124.val[3], (int8x16_t)v53);
    v124.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v83 = (int32x4_t)vorrq_s8(vorrq_s8(v70, v77), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8), 0x18uLL));
    v124.val[1] = vorrq_s8(vorrq_s8(v71, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[1]), 0x18uLL));
    v84 = (int32x4_t)vorrq_s8(vorrq_s8(v72, v82), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8), 0x18uLL));
    v85 = (int32x4_t)vorrq_s8(vorrq_s8(v73, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v124.val[0]), 0x18uLL));
    a43 = vaddq_s32(vsubq_s32(v84, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v84, v84), (int8x16_t)v57)), (int32x4_t)v55);
    a44 = vaddq_s32(vsubq_s32(v85, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v85, v85), (int8x16_t)v57)), (int32x4_t)v55);
    a41 = vaddq_s32(vsubq_s32(v83, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v83, v83), (int8x16_t)v57)), (int32x4_t)v55);
    a42 = vaddq_s32(vsubq_s32((int32x4_t)v124.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1]), (int8x16_t)v57)), (int32x4_t)v55);
    v86 = (HIDWORD(a31) ^ (v47 + (v61 ^ 0x3FF) - 490))
        + ((a33 ^ v47) & (a32 ^ 0xAEC4588A) | (a32 ^ v47) & (HIDWORD(a32) ^ v47))
        - 2059938322
        + *((_DWORD *)*(&off_24E772B10 + (int)v61 - 387) + v123 + v49 - 1)
        + (a41.i32[(*((_BYTE *)*(&off_24E772B10 + (int)(v61 ^ 0x235)) + v123 + v49 - 4) - 31)] ^ v50);
    v87 = v86 + v47 - (v48 & (2 * v86));
    v88 = (char *)*(&off_24E772B10 + (int)(v61 ^ 0x278)) - 4;
    v89 = (((v87 ^ v47) << (v88[v123 + v49] - 98)) | ((v87 ^ v47) >> (98 - v88[v123 + v49]))) + (a32 ^ v47);
    v90 = v48 & (2 * v89);
    v91 = v89 + v47 - v90;
    v92 = *(uint64_t (**)(char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (int)(v61 | 0xEA));
    return v92(v88, v61, v92, a33, v90, 1580584629, HIDWORD(a32), v91, a9, a10, a11, a12, a13, a14, v45, a16, __PAIR64__(a32, HIDWORD(a31)), __PAIR64__(a33, HIDWORD(a32)), v52,
             v123,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
  else
  {
    HIDWORD(a31) = 2 * (HIDWORD(a31) ^ v47) + v47 - (v48 & (4 * (HIDWORD(a31) ^ v47)));
    LODWORD(a32) = 2 * (a32 ^ v47) + v47 - (v48 & (4 * (a32 ^ v47)));
    HIDWORD(a32) = 2 * (HIDWORD(a32) ^ v47) + v47 - (v48 & (4 * (HIDWORD(a32) ^ v47)));
    LODWORD(a33) = 2 * (a33 ^ v47) + v47 - (v48 & (4 * (a33 ^ v47)));
    return v52(v53, v54, v55, v56, v57);
  }
}

uint64_t sub_221A238A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  unsigned int v15;
  uint64_t v16;
  _BOOL4 v17;

  if (v15 < 0x9BE37C17 != (a15 + 1141814776) < 0x9BE37C17)
    v17 = (a15 + 1141814776) < 0x9BE37C17;
  else
    v17 = a15 + 1141814776 > v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((!v17 * (((a6 + a5 - 187) | 0x210) - 511)) ^ (a6 + a5 + 1100)))
                            - 8))();
}

uint64_t sub_221A23934(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((1951 * (v5 - 152100823 + v6 - 60 + a5 + v6 - 820 >= (v5 + a4))) ^ v6))
                            - 4))();
}

uint64_t sub_221A2397C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((460
                                          * (a14
                                           + v15
                                           - (unint64_t)(v14 - 152100823 + a5 + a1 - 760 + 697) < 0x10)) ^ a1))
                            - 4))();
}

uint64_t sub_221A239C8@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  char v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v8) = *(_BYTE *)(v10 + (v5 + a1))
                      - (v4 & (2 * *(_BYTE *)(v10 + (v5 + a1))))
                      + 50;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + 1 == (a4 ^ (a2 - 57)) + 7) * v7) ^ (a3 + a4 + 371))))();
}

uint64_t sub_221A23A18@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>, int8x16_t a7@<Q0>, int8x16_t a8@<Q3>)
{
  int v8;
  int8x16_t *v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;

  v12 = *(int8x16_t *)(v11 + v8 + (((a6 ^ (a2 - 3)) * a4) ^ (a1 - 9)));
  *v9 = vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a8)), a7);
  return (*(uint64_t (**)(void))(v10 + 8 * (a5 ^ (a3 + a6 + 393))))();
}

uint64_t sub_221A23A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = v13 + 1674314577 < (a13 + 1505040564);
  if ((a13 + 1505040564) < 0xBBA0C9B0 != (v13 + 1674314577) < 0xBBA0C9B0)
    v16 = (a13 + 1505040564) < 0xBBA0C9B0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (int)((v16 | (2 * v16)) ^ v14)) - (v14 ^ 0x2B1)))();
}

uint64_t sub_221A23AEC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v39;

  v34 = (a2 - 113401905) & 0xB7FE76BF;
  v35 = 628203409 * ((~((v33 - 120) | 0xCC5631E2) + ((v33 - 120) & 0xCC5631E2)) ^ 0xB121C22E);
  v39 = (a2 + 415) | 0x10;
  *(_QWORD *)(v33 - 120) = a11;
  *(_DWORD *)(v33 - 112) = v35 + a2 + 1005;
  *(_DWORD *)(v33 - 108) = a13 - v35 - 1135465194;
  v36 = sub_221A21EB0(v33 - 120);
  v37 = a32 & 0x3F;
  *(&a23 + (v37 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32
                                                      + 8 * ((223 * ((v37 ^ 0x14) > v39 - 424)) ^ a2))
                                          - (v34 ^ 0xB13C16B3)))(v36);
}

uint64_t sub_221A23C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((44 * (((v6 == 63) ^ (v7 - a6)) & 1)) ^ v7))
                            - ((v7 + 202) ^ 0x2ADLL)))();
}

uint64_t sub_221A23C3C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((27 * ((((v1 ^ 0x6B0) - 1006) ^ v0) < 8)) ^ v1)) - 4))();
}

uint64_t sub_221A23C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  int v23;
  unsigned int v24;
  char v25;
  uint64_t v26;

  *(_QWORD *)(&a23 + v24 + 1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((342 * ((v25 & 0x38) == 8)) ^ v23))
                            - ((v23 - 570) ^ 0x1DBLL)))();
}

uint64_t sub_221A23CC0(double a1)
{
  double *v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v1 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v2)) - (v3 ^ 0x1DB)))();
}

uint64_t sub_221A23CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v6 ^ (877 * (v8 != v7))))
                            + 2973505203
                            - (v6 - a6)
                            + 8))();
}

void sub_221A23D20()
{
  JUMPOUT(0x221A22D70);
}

uint64_t sub_221A23D30@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  unsigned int v26;
  int v27;
  _BOOL4 v28;

  v25 = v18 < v20;
  *(&a18 + 12 * (v21 ^ 0x2BDu) + a3 + v22) = *(_BYTE *)(v24 + (v19 + a2))
                                           - ((2 * *(_BYTE *)(v24 + (v19 + a2))) & 0x64)
                                           + 50;
  v26 = v19 + 1 + a1;
  v27 = v25 ^ (v26 < v20);
  v28 = v26 < v18;
  if (!v27)
    v25 = v28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v25 | (2 * v25)) ^ v21)) - 8))();
}

uint64_t sub_221A23DAC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1039 * (a3 - 1370612763 < ((277 * (v4 ^ (a1 - 5))) ^ 0x551u))) ^ (a2 + v4 + 233)))
                            - 12))();
}

uint64_t sub_221A23DF8@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1;
  v4 = a1 - 1370612763;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  else
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((unint64_t)(v5 - v3 + 1370612763) > 7)
                                               * ((v1 + 1837422910) & 0x927B23FB ^ 0xB5)) | v1))
                            - 12))();
}

uint64_t sub_221A23E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  *(_QWORD *)(&a23 + v24 - 1370612763) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * ((863 * ((v23 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ ((v25 - 1837423955) | 0x29)))
                            - ((((v25 - 1837423955) | 0x29u) + 331) ^ 0x2C4)))();
}

uint64_t sub_221A23ED4(double a1)
{
  int v1;
  uint64_t v2;
  double *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *v3 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v5 == 0) * v4) ^ v1)) - (v2 ^ 0x2C4)))();
}

uint64_t sub_221A23F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 ^ (1953 * (v5 != v6))))
                            - ((a5 + ((v7 - 581) | 0x220u) - 675) ^ 0xB13C16B3)))();
}

void sub_221A23F40()
{
  JUMPOUT(0x221A22D70);
}

uint64_t sub_221A243F0@<X0>(uint64_t a1@<X2>, char a2@<W4>, char a3@<W5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int v35;
  _BOOL4 v36;

  v35 = *((_DWORD *)&a19 + ((v33 + v31) >> (a3 + a2 + v32 + 13 + 35)) + 18);
  *(_BYTE *)(a1 + (v33 + v31 + 1)) = (BYTE2(v35) ^ 0x3B) - ((2 * (BYTE2(v35) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a1 + (v33 + v31)) = (HIBYTE(v35) ^ 0x51) - ((2 * (HIBYTE(v35) ^ 0x51)) & 0x64) + 50;
  *(_BYTE *)(a1 + (v33 + v31 + 3)) = v35 ^ 0x47;
  *(_BYTE *)(a1 + (v33 + v31 + 2)) = (BYTE1(v35) ^ 0xA7) - ((2 * (BYTE1(v35) ^ 0xA7)) & 0x64) + 50;
  if (v33 + 1230102376 < a4 != a31 - 1338440525 < a4)
    v36 = a31 - 1338440525 < a4;
  else
    v36 = v33 + 1230102376 < (a31 - 1338440525);
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * ((496 * !v36) ^ v32)) - 8))();
}

void sub_221A24574()
{
  JUMPOUT(0x221A24538);
}

uint64_t sub_221A24580()
{
  return 0;
}

void sub_221A245C0(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~(_DWORD)a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BR              X10 }
}

uint64_t sub_221A2465C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 != ((v1 + 1075) ^ 0x5A312C9E)) * (v1 - 253)) ^ (v1 + 363)))
                            - 4))();
}

uint64_t sub_221A246B0@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v1 + 939) ^ 0x26)) - 4))();
}

uint64_t sub_221A247D8@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((127 * (((v5 - 36) ^ (v4 == ((v5 + a1) & a2) + v3)) & 1)) ^ v5))
                            - 4))();
}

uint64_t sub_221A24814@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1465 * (v1 != 461 * (v2 ^ 0x29C) - 1383)) ^ v2)) - 4))();
}

uint64_t sub_221A24848@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(*(_QWORD *)(v3 - 0xC7F991DE6408E15) + 4 * (v2 + v1)) = v4;
  v6 = v2 + v5 + 712 - 1382;
  *(_DWORD *)(v3 - 0xC7F991DE6408E19) = v6;
  v7 = v6 + v1;
  if (v6 + v1 < 0)
    v7 = -v7;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((69
                                * ((v7 ^ 0x3D7FACEB)
                                 + (((v5 + 712) ^ 0x7AFF5CB1) & (2 * v7))
                                 - 1031777824
                                 + ((((v5 + 712) ^ 0x5F2) + 123) | 0x24) >= 0)) ^ (v5 + 712) ^ 0x5F2)))();
}

uint64_t sub_221A24920@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  _QWORD *v4;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((*(_DWORD *)(*v4 + 4 * a1) == v2) * ((v3 + 1043585895) & 0xC1CC2537 ^ 0x4C6)) ^ v3)))();
}

uint64_t sub_221A24960@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((69 * (v2 - 1 + ((v1 + 123) | 0x24) >= 0)) ^ v1)))();
}

uint64_t sub_221A24998(uint64_t result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *(_DWORD *)(result + 24) = 1261507126;
  return result;
}

void sub_221A249DC(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~(_DWORD)a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  v2 = *(_DWORD *)(a1 + 40) ^ v1;
  if (*(_QWORD *)(a1 + 48) | *(_QWORD *)(a1 + 64))
    v3 = *(_DWORD *)(a1 + 24) + v1 == 1354219139;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X9 }
}

uint64_t sub_221A24B34@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[1] == 0x1171F84DB0CF5C20 || (v1[7] | v1[4]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1402 * (((a1 + 56) ^ v4) & 1)) ^ a1)) - 8))();
}

uint64_t sub_221A24B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *(_QWORD *)(v35 + 72);
  *(_DWORD *)(v33 - 0x1171F84DB0CF5C20) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((2043 * (v37 != 0xC7F991DE6408E1DLL)) ^ v32)))(v37, 0x7542B2AE5773797, &a25, &a30, &a32, &a28, &a20, 0xC7F991DE6408E1DLL, a9, a10, v34);
}

uint64_t sub_221A24C28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * (((a8 - 925) * (v10 == 0)) ^ (a8 - 363))) - ((a8 + 1873335829) & 0x905726BF ^ 0x86)))(a3 + a7, a1, a2, a3, a4, a5, a6, a7, a9, a10);
}

uint64_t sub_221A24D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v27 = v18 ^ 0x6A4;
  v28 = ((v26 - 1956630864 - 2 * ((v26 - 144) & 0x8B602F40)) ^ 0x31F45722) * v19;
  *(_DWORD *)(v26 - 116) = v28 + v21 + (v18 ^ 0x9796BF8);
  *(_QWORD *)(v26 - 136) = v20;
  *(_QWORD *)(v26 - 128) = a1;
  *(_DWORD *)(v26 - 144) = v28 + v18 + 166;
  ((void (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v18 - 21)) - 12))(v26 - 144);
  *(_QWORD *)(v26 - 144) = v23;
  *(_QWORD *)(v26 - 136) = a16;
  *(_DWORD *)(v26 - 128) = (v27 - 44) ^ (628203409
                                       * ((((2 * (v26 - 144)) | 0x6174B83A) - (v26 - 144) + 1329964003) ^ 0x3232502E));
  ((void (*)(uint64_t))(*(_QWORD *)(v22 + 8 * (v27 - 1446)) - 12))(v26 - 144);
  *(_QWORD *)(v26 - 144) = a17;
  *(_QWORD *)(v26 - 136) = a16;
  *(_DWORD *)(v26 - 128) = v27
                         + 1374699841 * (((~(v26 - 144) & 0xF8095E0E) - (~(v26 - 144) | 0xF8095E0F)) ^ 0x95FD4606)
                         - 507;
  *(_QWORD *)(v26 - 112) = a15;
  *(_QWORD *)(v26 - 104) = v23;
  *(_QWORD *)(v26 - 120) = a18;
  v29 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v27 - 1361)))(v26 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24
                                                      + 8
                                                      * (int)(((((v27 + 870714261) & 0xCC19EECB) - 135) * (v25 == 0)) | v27))
                                          - 4))(v29);
}

uint64_t sub_221A24F74()
{
  _DWORD *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 535753261 * (((((v5 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v5 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v5 - 144) = (v2 - 1439 + v1 - 510816560) ^ v6;
  *(_DWORD *)(v5 - 128) = v2 - 1439 - v6 + 289;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 136) = v8;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * (v2 - 1462)) - 8))(v5 - 144);
  *v10 = v9;
  *v0 = 1645153785;
  return result;
}

void sub_221A250C8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  v2 = *(_QWORD *)(a1 + 8);
  v3[0] = v1 + 628203409 * (((v3 | 0xF56E3C19) + (~v3 | 0xA91C3E6)) ^ 0x77E6302B) - 501;
  v4 = v2;
  sub_221A11490((uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_221A25200@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 ^ v3) >> 4) & 0xFFF6EF8 ^ 0x5AA4270) + (((v4 ^ v3) >> 5) ^ 0x6D2A9EC5) - 375855535;
  v7 = v5 > v1 + 1503173062 && v5 < v2 + 1503174093;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((948 * v7) ^ v1)) - (((v1 - 882) | 0xAu) ^ 0x92)))();
}

uint64_t sub_221A25288@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((v1 & 0x1F) != 8) * ((v2 + 1656200023) & 0x9D4866EF ^ 0x28F)) ^ v2))
                            - 8))();
}

uint64_t sub_221A252D0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a1
                                                     + 8
                                                     * (((((v2 ^ 0x2B) + 325) ^ (v2 + 289))
                                                       * ((v1 + 1879029626) > 0x7FFFFFFE)) ^ v2))
                                         - 8))((((v2 ^ 0x2B) + 325) ^ (v2 + 289)) * ((v1 + 1879029626) > 0x7FFFFFFE));
}

void sub_221A25330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  char v6;
  int v7;
  int v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;

  v13 = v5 + 1879029627;
  v14 = *(_QWORD *)(v11 - 0xC7F991DE6408E15);
  v15 = (*(_DWORD *)(v14 + 4 * (v12 - 1)) ^ (a5 + v7 - 1030)) >> v6;
  v16 = 4 * v13;
  *(_DWORD *)(v14 + v16) = v15 + v7 - (v8 & (2 * v15));
  v17 = v18 - (*(_DWORD *)(*(_QWORD *)(v11 - 0xC7F991DE6408E15) + v16) == v7);
  if ((*v9 + v10) >= 0x7FFFFFFF)
    v17 = 318707904 - v17;
  *v9 = v17;
}

void sub_221A255F0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_221A25664@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2
                                          * (((a1 - 1206753083) ^ 0x7FFF75CFFFFAEFB9)
                                           - 0x7FFF75CF03D79510
                                           + ((2 * (a1 - 1206753083)) & 0x1FFF5DF72) == 4230175401)) | 0x14Cu))
                            - 8))();
}

uint64_t sub_221A256F8()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v6 = *(unsigned __int8 *)(v4 + v3 - 0x2500E162B343AFF1) - *(unsigned __int8 *)(v1 + v3 - 0x2500E162B343AFF1);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * (((((((2 * v2) ^ 0x61E) - 1769999280) & (2 * v6)) + (v6 ^ v0) == v0)
                                                        * (v2 ^ 0x41C)) ^ v2))
                                          - 8))(4294925278);
}

uint64_t sub_221A25760()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v1 < v0;
  if (v5 == v2 - 0x2500E161B7205547 < v0)
    v5 = v2 - 0x2500E161B7205547 < v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v3 ^ (2 * !v5))) - (v3 ^ 0x2E5u) + 929))();
}

uint64_t sub_221A257C8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (1203 * (a1 == 1206753092))))
                                          - (((v1 ^ 0x251u) + 1267140013) ^ 0x4B8707ADLL)))(4294925278);
}

uint64_t sub_221A2581C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1697
                                          * (((2 * (*v0 - 42)) & 0xEDBE4FCE) + ((*v0 - 42) ^ 0x76DF27E7) == 1994336231)) ^ v1))
                            - ((v1 - 38) | 0x25u)
                            + 491))();
}

uint64_t sub_221A25884()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1010
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0 + v3 - 1 - 503)) ^ v3))
                            - 12))();
}

uint64_t sub_221A258D4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1360
                                          * ((((*(unsigned __int8 *)(v2 + 2) - 72) << (v3 + 9)) & v1)
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25934()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2015
                                          * (((((v3 - 257) | 0x100) ^ (v1 - 405)) & (2
                                                                                   * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25984()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1473
                                          * ((((*(unsigned __int8 *)(v2 + 4) - 247) << (v3 + 9)) & v1)
                                           + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v3))
                            - 12))();
}

uint64_t sub_221A259D0(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2026
                                          * (((((v3 - 115) | 0x72) ^ a1) & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25A20()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)
                                          * (((v3 - 152) | 0x97) + 908)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25A6C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1901
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0 + v4 - 503)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25AB8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                           + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)
                                          * (((v3 - 4) | 3) ^ 0x383)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25B04(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 527506314;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * (v3 - 333)) ^ (v3 - 165)))
                            - ((v3 - 2031810561) & 0x791AF7FF ^ 0x1FBLL)))();
}

uint64_t sub_221A25B68(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((11
                                          * ((v3 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                           + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v2) == v2)) ^ v4))
                            - ((v4 - 239) ^ 0x104)))();
}

uint64_t sub_221A25BB0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((907
                                          * ((((*(unsigned __int8 *)(v3 + 1) - 134) << (v2 ^ 0xF6)) & v1)
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25BF4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)
                                          * ((66 * (v2 ^ 0x1F3)) ^ 0x2E3)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25C3C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1925
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v2))
                            - ((v2 + 1802593605) & 0x948E99CB ^ 0x104)))();
}

uint64_t sub_221A25C90()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                           + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)
                                          * (v2 + 1339)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25CC8()
{
  int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((1627
                                               * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                                + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)) ^ v2))
                            - (v2 ^ 0x1FBLL)))();
}

uint64_t sub_221A25D0C(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1809
                                          * ((v2 & (2 * (*(unsigned __int8 *)(v4 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v4 + 6) - 1) ^ v1) == v1 + a1 - 264)) ^ v3))
                            - 12))();
}

uint64_t sub_221A25D4C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1896
                                          * (((v2 ^ 0xFF ^ (v1 - 264)) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25D8C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((637
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                           + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0
                                                                                        + ((v2 + 340298752) & 0xEBB7735B)
                                                                                        - 339)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25DE4(int a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 + 96) + 1428) = 527506318;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * (((a1 - 337) | 0x290) - 494)) | a1))
                            - 12))();
}

uint64_t sub_221A25E34(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v6 << (31 * (v4 ^ 1) - 22)) & v3) + (v6 ^ v2) != v2) * ((v4 ^ 0x101) + 22)) ^ v4))
                            - 12))();
}

uint64_t sub_221A25E88()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1370
                                          * (((v1 + ((v2 + 1269073064) & 0xB45B7B7F) - 319) & (2
                                                                                             * (*(unsigned __int8 *)(v3 + 1)
                                                                                              - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25EDC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((177
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v0) == v0)) ^ v2))
                            - (v2 + 40)
                            + 307))();
}

uint64_t sub_221A25F18()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1410
                                          * (((v1 + v3 - 319) & (2 * (*(unsigned __int8 *)(v4 + 3) - 134)))
                                           + ((*(unsigned __int8 *)(v4 + 3) - 134) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25F54()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1878
                                          * ((((*(unsigned __int8 *)(v3 + 4) - 247) << (((v2 + 104) & 0xBF) - 62)) & v1)
                                           + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A25FA8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((203
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == ((v2 + 40) ^ (v0 - 271)))) ^ v2))
                            - 12))();
}

uint64_t sub_221A25FE8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((828
                                          * ((v1 & (2 * (*(unsigned __int8 *)(v4 + 6) + (v3 ^ 0xFFFFFEC0))))
                                           + ((*(unsigned __int8 *)(v4 + 6) + (v3 ^ 0xFFFFFEC0)) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A26024()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1128
                                          * (((v1 + (v2 ^ 0x28) - 319) & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)) | v2))
                            - 12))();
}

uint64_t sub_221A26068()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1792
                                          * ((((11 * (v2 ^ 0x10A)) ^ (v1 - 221)) & (2
                                                                                  * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                           + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == v0)) ^ v2))
                            - 12))();
}

uint64_t sub_221A260B4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  int v7;
  uint64_t v8;

  v5 = (v1 ^ 0x44) + 319;
  *(_DWORD *)(*(_QWORD *)(v3 + 96) + 1428) = 527506330;
  v6 = (v1 ^ 0x44) - 54;
  v7 = 1178560073 * ((2 * ((v4 - 120) & 0x128615B8) - (v4 - 120) - 310777277) ^ 0x57ED9221);
  *(_QWORD *)(v4 - 112) = v4 + 0x5C6940C6B1BC6F5ELL;
  *(_DWORD *)(v4 - 120) = (((v5 ^ 0x583) + 776745519) ^ (a1 - 1)) - v7;
  *(_DWORD *)(v4 - 104) = v5 - v7 + 1172344777;
  v8 = sub_221A0D674(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * ((1410
                                                       * (*(_DWORD *)v3
                                                        - 165236985
                                                        + ((*(_DWORD *)(v4 - 152) << (v6 ^ 0x1C)) & 0x7A ^ 0x28)
                                                        + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xA7ED9FA9) < 0xFFFFFFC0)) ^ v5)))(v8, 313836798);
}

uint64_t sub_221A2628C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;

  v26 = v22 + 1477599300;
  if (v26 <= 0x40)
    v26 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8 * (a21 ^ (8 * (-v21 - v23 + ((a21 - 1020) ^ (a8 - 787)) + v26 > 0xE))))
                            + 1267140513
                            - (a21 ^ (v25 - 1777))))();
}

uint64_t sub_221A2630C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;

  v13 = v9 + v8;
  v14 = v13 + a2;
  if ((v13 + a2) <= 0x40)
    v14 = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (int)(((((a1 + 757975018) & 0xD2D235E5) - 167)
                                               * (a8 - v13 >= (v10 + a8 + v11 + v14))) ^ a1))
                            - (((a1 + 1207959791) | 0x38703A1u) ^ (unint64_t)(a6 + 8))))();
}

uint64_t sub_221A26384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((19
                                * (a13
                                 + v16
                                 - 220
                                 + (unint64_t)(v13 + ((v14 - 275302696) & 0x5BEFCFE7 ^ 0x139567E6u)) > 0xF)) ^ v14)))();
}

uint64_t sub_221A263D8@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t *v7;
  int8x16_t v8;
  int8x16_t v9;

  v8.i64[0] = 0x6464646464646464;
  v8.i64[1] = 0x6464646464646464;
  v9.i64[0] = 0x3232323232323232;
  v9.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(v4 + a2 + ((a1 + v3 + 708) ^ (v2 + 787))) = vaddq_s8(vsubq_s8(*v7, vandq_s8(vaddq_s8(*v7, *v7), v8)), v9);
  return (*(uint64_t (**)(int8x16_t *))(v6
                                                + 8 * ((105 * (((v5 + 1) & 0x1FFFFFFF0) == 16)) ^ (a1 + v3 + 1588))))(v7 + 1);
}

void sub_221A26444()
{
  JUMPOUT(0x221A263FCLL);
}

uint64_t sub_221A26450(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((a2 - 763) | 4) ^ 0x6D6) * (v6 == v7)) ^ a2))
                            - ((a2 - a5 - 708) ^ (unint64_t)(a6 + 8))))();
}

uint64_t sub_221A26494@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(v8 - 220 + (((v5 - v9 + 30) ^ 0xFFFFFFE1) & (a3 + v3))) = *(_BYTE *)(v4 + v7 - 313836798)
                                                                                     - ((2
                                                                                       * *(_BYTE *)(v4 + v7 - 313836798)) & 0x64)
                                                                                     + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((767 * ((a2 + a3 + 1) < 0x40)) ^ (a1 + v5 + 1420)))
                            - 12))();
}

uint64_t sub_221A26510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,uint64_t (*a24)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128),int a25,int a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t (*v42)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128);
  const char *v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  uint16x8_t v59;
  int8x16_t v60;
  uint8x16_t v61;
  uint16x8_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  uint8x16_t v68;
  int8x16_t v71;
  int8x16_t v76;
  int32x4_t v77;
  int32x4_t v78;
  uint8x16_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint8x16_t v83;
  uint8x16_t v88;
  uint16x8_t v89;
  uint16x8_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  _DWORD *v95;
  int v96;
  unsigned int v97;
  unint64_t v98;
  int8x16x4_t v99;
  int8x16x4_t v100;

  v42 = *(uint64_t (**)(_QWORD, __n128, __n128, __n128, __n128, __n128, __n128))(v33 + 8 * v32);
  a19 = a13 - 1361199332;
  a18 = ((v32 + 184812002) | v37) ^ 0x5B4E77BD;
  v43 = (const char *)(v40 - 220);
  v44 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v45.n128_u64[0] = 0x3232323232323232;
  v45.n128_u64[1] = 0x3232323232323232;
  v46 = (__n128)vdupq_n_s32(0x620F0DF9u);
  a27 = v36 - 16;
  v47.n128_u64[0] = 0x6464646464646464;
  v47.n128_u64[1] = 0x6464646464646464;
  v48.n128_u64[0] = 0x3333333333333333;
  v48.n128_u64[1] = 0x3333333333333333;
  v49 = (__n128)vdupq_n_s32(0xC41E1BF2);
  v50 = (v41 + 1997669178) & 0x3D66F774;
  a25 = v50 ^ 0x239;
  a26 = v35 - 374;
  v51 = *(_DWORD *)(v40 - 148);
  v52 = *(_DWORD *)(v40 - 144);
  v54 = *(_DWORD *)(v40 - 140);
  v53 = *(_DWORD *)(v40 - 136);
  v55 = *(_BYTE *)(v40 - 124) ^ 0x5F;
  a17 = *(unsigned __int8 *)(v40 - 124) ^ 0x5F;
  if (v55 == 2)
  {
    a20 = v51;
    a21 = v52;
    a22 = v54;
    a23 = v53;
    a24 = v42;
    v100 = vld4q_s8(v43);
    a16 = *(_DWORD *)(v40 - 132);
    v80 = (uint8x16_t)veorq_s8(v100.val[0], (int8x16_t)v45);
    v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    v82 = vmovl_high_u8(v80);
    v83 = (uint8x16_t)veorq_s8(v100.val[1], (int8x16_t)v45);
    _Q23 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q22 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    v88 = (uint8x16_t)veorq_s8(v100.val[2], (int8x16_t)v45);
    v89 = vmovl_high_u8(v88);
    v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v100.val[0] = veorq_s8(v100.val[3], (int8x16_t)v45);
    v100.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v100.val[0]);
    v100.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[1]);
    v100.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v100.val[1].i8);
    v100.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v100.val[0].i8);
    v100.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[0]);
    v100.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v100.val[0].i8);
    v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v100.val[0]);
    v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v100.val[3]);
    v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v100.val[1]);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v100.val[2]);
    v100.val[0] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)v100.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[3] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[1] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v100.val[2] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v44), (int8x16_t)(*(_OWORD *)&v100.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a31 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v100.val[1], (int32x4_t)v100.val[1])), (int32x4_t)v46);
    a32 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v100.val[2], (int32x4_t)v100.val[2])), (int32x4_t)v46);
    a29 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v100.val[0], (int32x4_t)v100.val[0])), (int32x4_t)v46);
    a30 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v100.val[3], (int32x4_t)v100.val[3])), (int32x4_t)v46);
    v95 = (_DWORD *)&a29 + v39 + 1485875768;
    v96 = *(v95 - 8) ^ *(v95 - 3);
    v97 = *(v95 - 16) ^ *(v95 - 14) ^ (v96 + v34 - ((2 * v96) & 0xC41E1BF2));
    HIDWORD(v98) = v97 ^ v34;
    LODWORD(v98) = v97;
    *v95 = (v98 >> 31) + v34 - ((2 * (v98 >> 31)) & 0xC41E1BF2);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33
                                                        + 8
                                                        * (((4 * (v36 != 1485875705)) | (16 * (v36 != 1485875705))) ^ (a5 + v41 + 950)))
                                            - 8))(150);
  }
  else if (v55 == 1)
  {
    a20 = v51;
    a21 = v52;
    a22 = v54;
    a23 = v53;
    a24 = v42;
    v99 = vld4q_s8(v43);
    v56 = (uint8x16_t)veorq_s8(v99.val[0], (int8x16_t)v45);
    v57 = vmovl_high_u8(v56);
    v58 = (int8x16_t)vmovl_high_u16(v57);
    v59 = vmovl_u8(*(uint8x8_t *)v56.i8);
    v60 = (int8x16_t)vmovl_high_u16(v59);
    v61 = (uint8x16_t)veorq_s8(v99.val[1], (int8x16_t)v45);
    v62 = vmovl_u8(*(uint8x8_t *)v61.i8);
    v63 = vmovl_high_u8(v61);
    v64 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.i8));
    v65 = vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v60);
    v66 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8));
    v67 = vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v58);
    v68 = (uint8x16_t)veorq_s8(v99.val[2], (int8x16_t)v45);
    _Q23 = (int8x16_t)vmovl_high_u8(v68);
    _Q22 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v68.i8);
    v71 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v76 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL);
    __asm { SHLL2           V23.4S, V23.8H, #0x10 }
    v99.val[0] = veorq_s8(v99.val[3], (int8x16_t)v45);
    v99.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v99.val[0].i8);
    v99.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v99.val[0]);
    v77 = (int32x4_t)vorrq_s8(vorrq_s8(v64, v71), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v99.val[1].i8), 0x18uLL));
    v99.val[1] = vorrq_s8(vorrq_s8(v65, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v99.val[1]), 0x18uLL));
    v78 = (int32x4_t)vorrq_s8(vorrq_s8(v66, v76), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v99.val[0].i8), 0x18uLL));
    v99.val[0] = vorrq_s8(vorrq_s8(v67, _Q23), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v99.val[0]), 0x18uLL));
    a31 = vaddq_s32(vsubq_s32(v78, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v78, v78), (int8x16_t)v49)), (int32x4_t)v46);
    a32 = vaddq_s32(vsubq_s32((int32x4_t)v99.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v99.val[0], (int32x4_t)v99.val[0]), (int8x16_t)v49)), (int32x4_t)v46);
    a29 = vaddq_s32(vsubq_s32(v77, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v77, v77), (int8x16_t)v49)), (int32x4_t)v46);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v99.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v99.val[1], (int32x4_t)v99.val[1]), (int8x16_t)v49)), (int32x4_t)v46);
    return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(v33
                                                                + 8 * ((1059 * (a27 + 1 == v36)) ^ v50))
                                                    - 12))(150, v44);
  }
  else
  {
    *(_DWORD *)(v40 - 148) = 2 * (v51 ^ v35) + v35 - (v38 & (4 * (v51 ^ v35)));
    *(_DWORD *)(v40 - 144) = 2 * (v52 ^ v35) + v35 - (v38 & (4 * (v52 ^ v35)));
    *(_DWORD *)(v40 - 140) = 2 * (v54 ^ v35) + v35 - (v38 & (4 * (v54 ^ v35)));
    *(_DWORD *)(v40 - 136) = 2 * (v53 ^ v35) + v35 - (v38 & (4 * (v53 ^ v35)));
    return v42(150, v44, v45, v46, v47, v48, v49);
  }
}

uint64_t sub_221A270A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  _BOOL4 v19;

  if (a17 < a16 != (a14 - 32199846) < 0x10C97018)
    v19 = (a14 - 32199846) < 0x10C97018;
  else
    v19 = a14 - 32199846 > a17;
  return (*(uint64_t (**)(void))(v17
                              + 8 * ((!v19 * (((95 * (v18 ^ (v18 + 1)) - 219) | 0x680) ^ 0x6F1)) ^ (a5 + v18 + 577))))();
}

uint64_t sub_221A27144(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 + 1208417726) | 0x3800325) ^ (v6 - 32))
                                          * (a2 + a4 + 63 >= (a2 + a4))) | v4))
                            - 4))();
}

uint64_t sub_221A27190(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8
                                        * ((477
                                          * (a13
                                           + v13
                                           - (unint64_t)(a2
                                                              + (v14 ^ (v16 - 1598))
                                                              + ((v14 - 71884507) & 0x4FCFDFBDu)
                                                              + 1446849464) > 0xF)) ^ v14))
                            - 4))();
}

uint64_t sub_221A271F4(double a1, double a2, double a3, int8x16_t a4, int8x16_t a5, uint64_t a6, int a7, uint64_t a8, int a9, int a10)
{
  int8x16_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *v10 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v13 + (a7 + a9)), a5), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v13 + (a7 + a9)), *(int8x16_t *)(v13 + (a7 + a9))), a4)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (a10 + v11 + 269)) - 8))();
}

uint64_t sub_221A27258@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  *(_BYTE *)(v6 + a5) = *(_BYTE *)(v9 + (a2 + a3))
                      + (v7 | ~(2 * *(_BYTE *)(v9 + (a2 + a3))))
                      + 51;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * (((a5 + (v5 - v10 + 60) != 123) * a1) ^ (a4 + v5 + 1309)))
                            - 8))();
}

uint64_t sub_221A272AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v15 = a2 + 1583058440 < (a13 + 254059018);
  if ((a13 + 254059018) < 0x71105306 != (a2 + 1583058440) < 0x71105306)
    v15 = (a13 + 254059018) < 0x71105306;
  return (*(uint64_t (**)(void))(v13 + 8 * (int)((v15 * (((v14 + 220361917) & 0xF2DD8B2F) - 214)) ^ v14)))();
}

uint64_t sub_221A27320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v16 = 628203409 * ((((v15 - 120) | 0x96D41AAA) - ((v15 - 120) & 0x96D41AAA)) ^ 0x145C1699);
  *(_QWORD *)(v15 - 120) = a10;
  *(_DWORD *)(v15 - 112) = v16 + v14 + 787;
  *(_DWORD *)(v15 - 108) = a13 - v16 + ((v14 - a5 - 185) ^ 0xF7D52AB3);
  v17 = sub_221A21EB0(v15 - 120);
  v18 = *(_DWORD *)(v15 - 152) & 0x3F;
  *(_BYTE *)(v15 - 220 + (v18 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((38
                                                        * ((v18 ^ 0x14) > ((v14 + 918) | 0x215u) - 1662)) ^ v14))
                                          - 4))(v17);
}

uint64_t sub_221A27420(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * (((((v1 == 63) ^ (v2 - 116)) & 1)
                                                                 * ((v2 ^ 0x18) - 1252)) ^ v2))
                                                   - 4))(a1, -560347418);
}

uint64_t sub_221A27458()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (396 * ((v0 ^ 0x2Bu) > 7))))
                            - ((v1 + 1809836352) & 0xDFA717B7)
                            - ((v1 + 8585172) | 0x4B040124u)
                            + 2534281030))();
}

uint64_t sub_221A274BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  char v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 220 + v5 + 1) = 0x3232323232323232;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * (int)((((v6 & 0x38) == 8)
                                                             * ((v7 - 189157558) & 0xBFBF4FBD ^ 0x756)) ^ (a5 + v7 + 1558)))
                                          - 12))(1267140513);
}

void sub_221A27528()
{
  JUMPOUT(0x221A27500);
}

uint64_t sub_221A27530@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v3 < v4;
  *(_BYTE *)(v9 - 220 + (a3 - 98667421)) = *(_BYTE *)(v7 + (a1 + a2))
                                                       + (v8 ^ 0x2F)
                                                       - ((2 * *(_BYTE *)(v7 + (a1 + a2))) & 0x64);
  v11 = a1 + 1 + v5;
  v12 = v10 ^ (v11 < v4);
  v13 = v11 < v3;
  if (!v12)
    v10 = v13;
  return (*(uint64_t (**)(void))(v6 + 8 * ((52 * v10) ^ v8)))();
}

uint64_t sub_221A275B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((195
                                                                          * (a4 + ((48 * (v5 ^ (v6 + 8))) ^ 0xDE99C766) < 0x38)) ^ (v5 + a3)))
                                                            - 4))(a1, a2, -560347418);
}

uint64_t sub_221A275FC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = a1 - 1827487934 + ((v1 + 1804562031) & 0xDFF797B5);
  if (v3 <= 0x38)
    v3 = 56;
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((1762 * (v3 - a1 + ((v1 + 1337421373) & 0xFBCF97E7) - 706793099 > 7)) ^ v1)))();
}

uint64_t sub_221A2767C@<X0>(uint64_t a1@<X2>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 220 + a3 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((824
                                          * (((v3 - 1963967430) & 0x2988BD7D ^ 0x155) == (v4 & 0xFFFFFFFFFFFFFFF8))) ^ (a2 + v3 + 1312)))
                            - 12))();
}

uint64_t sub_221A276EC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  char v4;

  return (*(uint64_t (**)(void))(v3 + 8 * ((221 * (((v0 == v1) ^ (v4 + v2 - 93)) & 1)) ^ v2)))();
}

void sub_221A2771C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v6;
  int v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;

  v7 = *(unsigned __int8 *)(v5 - 124) ^ 0x5F;
  if (v7 == 1)
  {
    v14 = *(_DWORD *)(v5 - 156);
    v13 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = ((8 * v13) ^ 0xA0) - ((2 * ((8 * v13) ^ 0xA0)) & 0x60) + 50;
    *(_BYTE *)(v5 - 163) = ((v13 >> 5) ^ (a5 + v6 - 95))
                         - 2 * (((v13 >> 5) ^ (a5 + v6 - 95)) & 0x33 ^ ((v13 & 0x20) != 0))
                         + 50;
    v11 = 100;
    *(_BYTE *)(v5 - 162) = ((v13 >> 13) ^ 0x8F) - ((2 * ((v13 >> 13) ^ 0x8F)) & 0x64) + 50;
    HIDWORD(v15) = v14 ^ 0xA;
    LODWORD(v15) = v13 ^ 0x60000000;
    *(_BYTE *)(v5 - 161) = ((v13 >> 21) ^ 0x39) - ((2 * ((v13 >> 21) ^ 0x39)) & 0x64) + 50;
    *(_BYTE *)(v5 - 160) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v5 - 159) = ((v14 >> 5) ^ 0xA) - 2 * (((v14 >> 5) ^ 0xA) & 0x37 ^ (v14 >> 5) & 5) + 50;
    *(_BYTE *)(v5 - 158) = ((v14 >> 13) ^ 0xA4) - ((2 * ((v14 >> 13) ^ 0xA4)) & 0x64) + 50;
    v8 = a5 + v6 + 5;
    v12 = (v14 >> 21) ^ 0xFFFFFFBE;
  }
  else
  {
    if (v7 != 2)
      goto LABEL_6;
    v8 = -34 * (v6 ^ (v6 - 5));
    v9 = *(_DWORD *)(v5 - 156);
    v12 = *(_DWORD *)(v5 - 152);
    *(_BYTE *)(v5 - 164) = (v8 ^ (v9 >> 21) ^ 0xE8)
                         - 2 * ((v8 ^ (v9 >> 21) ^ 0xE8) & 0x33 ^ ((v9 & 0x200000) != 0))
                         + 50;
    *(_BYTE *)(v5 - 163) = ((v9 >> 13) ^ 0xA4) - 2 * (((v9 >> 13) ^ 0xA4) & 0x3A ^ (v9 >> 13) & 8) + 50;
    *(_BYTE *)(v5 - 162) = ((v9 >> 5) ^ 0xA) + (~(2 * ((v9 >> 5) ^ 0xA)) | 0x9B) + 51;
    HIDWORD(v10) = v9 ^ 0xA;
    LODWORD(v10) = v12 ^ 0x60000000;
    *(_BYTE *)(v5 - 161) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v5 - 160) = ((v12 >> 21) ^ 0x39) - 2 * (((v12 >> 21) ^ 0x39) & 0x36 ^ (v12 >> 21) & 4) + 50;
    *(_BYTE *)(v5 - 159) = ((v12 >> 13) ^ 0x8F) - ((2 * ((v12 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v5 - 158) = ((v12 >> 5) ^ 0xF2) - ((2 * ((v12 >> 5) ^ 0xF2)) & 0x64) + 50;
    v11 = 96;
    LOBYTE(v12) = (8 * v12) ^ 0xA0;
  }
  *(_BYTE *)(v5 - 157) = v12 - (v11 & (2 * v12)) + ((v8 + 105) & 0xE5 ^ 0x97);
LABEL_6:
  JUMPOUT(0x221A2651CLL);
}

uint64_t sub_221A27B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v5 ^ ((8 * (v7 == v6)) | (16 * (v7 == v6)))))
                            + a1
                            - (((v5 - 1645) | 1u)
                             - a5
                             + 16)))();
}

void sub_221A27B70()
{
  JUMPOUT(0x221A2651CLL);
}

uint64_t sub_221A27B84@<X0>(uint64_t a1@<X1>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)(v5 - 220 + a3 + a1) = 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1565
                                          * ((((unint64_t)(a3 + 1 + a1) < 0x40) ^ (13 * (v3 ^ (v6 - 5)))) & 1)) ^ (a2 + v3 + 87)))
                            - 4))();
}

uint64_t sub_221A27C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;

  v10 = v7 - 1734423542 + ((v5 + 1115685440) | 0x9070300);
  v11 = *(_DWORD *)(v9 - 220 + (v10 & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a3 + v10) = (HIBYTE(v11) ^ 0x51) - ((2 * (HIBYTE(v11) ^ 0x51)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3)) = (BYTE2(v11) ^ 0x3B) - ((2 * (BYTE2(v11) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3 + 1)) = (BYTE1(v11) ^ 0xA7) - ((2 * (BYTE1(v11) ^ 0xA7)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v7 + v3 + 2)) = v11 ^ 0x47;
  v12 = *(_DWORD *)(v9 - 128) + 364390470;
  v13 = v12 < v4;
  v14 = v7 + 267092298 < v12;
  if (v7 + 267092298 < v4 != v13)
    v14 = v13;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v14 * v6) ^ v5)))();
}

void sub_221A27DD4()
{
  JUMPOUT(0x221A27D94);
}

void sub_221A27E18(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  _DWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  v2 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19) - 159353952 >= 0)
    v4 = *(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19) - 159353952;
  else
    v4 = 159353952 - *(_DWORD *)(*(_QWORD *)a1 - 0xC7F991DE6408E19);
  v3 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0xC7F991DE6408E19) - 159353952 >= 0)
    v5 = *(_DWORD *)(v3 - 0xC7F991DE6408E19) - 159353952;
  else
    v5 = 159353952 - *(_DWORD *)(v3 - 0xC7F991DE6408E19);
  v7[1] = (460628867 * (((v7 | 0xE042447A) - (v7 & 0xE042447A)) ^ 0xACD4C607)) ^ (v1 + 693);
  v8 = v2;
  sub_221A30320((uint64_t)v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X14 }
}

uint64_t sub_221A27FAC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  _BOOL4 v13;
  uint64_t v14;
  int v15;

  v11 = v9 - 27;
  v12 = (2 * (v9 - 27)) ^ 0x596;
  v13 = v3 > 0x34F7BADB;
  v14 = 4 * (v6 + v4);
  v15 = v7
      + 966000769
      + (*(_DWORD *)(*(_QWORD *)(v10 - 0xC7F991DE6408E15) + v14) ^ (v8 + v12 - 1394))
      + (*(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v14) ^ v8);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v14) = v15 + v8 - (v5 & (2 * v15));
  if (v13 == v6 - 619284429 < -888650460)
    v13 = v6 - 619284429 < (int)(v3 + 1258833188);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((255 * !v13) ^ v11)) - 12))();
}

uint64_t sub_221A280DC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v3 - 2010637295 > 2014963970 || v3 - 2010637295 < v2 - 132519677;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((212 * v5) ^ v1)) - ((v1 - 152439432) & 0x91605FF) + 230))();
}

uint64_t sub_221A2813C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v18;

  v13 = v3 - 1253;
  v14 = 4 * (v9 + v7);
  v15 = v2 + v10 + (*(_DWORD *)(*(_QWORD *)(v12 - 0xC7F991DE6408E15) + v14) ^ (v11 + v13 + 93 - 234));
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v14) = v15 + v11 - (v8 & (2 * v15));
  v16 = v9 + 1 + v4;
  v18 = v16 > v5 || v16 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((233 * v18) ^ (v13 + 1253))) - 4))();
}

uint64_t sub_221A28204()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 + 1086776997 > 817410966 || v2 + 1086776997 < v3 - 1330072681;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((v5 * ((v1 + 2) ^ 0x66 ^ (5 * (v1 ^ 0x1F1)))) ^ v1)) - 12))();
}

uint64_t sub_221A28260@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v10 + v8);
  v14 = v3 + v11 + (*(_DWORD *)(*(_QWORD *)(a2 - 0xC7F991DE6408E15) + v13) ^ v12);
  *(_DWORD *)(*(_QWORD *)(a1 - 0xC7F991DE6408E15) + v13) = v14 + v12 - ((v14 << ((v7 ^ 6) + 23)) & v9);
  v15 = v10 + 1 + v4;
  v17 = v15 > v5 || v15 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v17) | (4 * v17)) ^ v7 ^ 6)) - 12))();
}

uint64_t sub_221A28328()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((85 * (v1 == ((v2 + 75) ^ 0x49CCCEB039940553))) ^ v2))
                            - (v2 ^ 0x50Au)
                            + 133))();
}

void sub_221A28370(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0xC7F991DE6408E19) = (((v3 + v2) * (v1 - 1901766679)) ^ 0x2D7FCE79)
                                        - 603996697
                                        + ((2 * (v3 + v2) * (v1 - 1901766679)) & 0x5AFF9CF2);
}

void sub_221A28450(uint64_t a1)
{
  int v1;

  v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~(_DWORD)a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BR              X9 }
}

uint64_t sub_221A28504@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1696 * (v2 != (v1 ^ 0x7D6) + 100575459)) ^ v1)) - 8))();
}

uint64_t sub_221A28558@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((59 * (v1 ^ 0xC3)) ^ 0x36)) - 4))();
}

uint64_t sub_221A28680@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v4 == ((v5 + 702) ^ a1 ^ (v3 + 731))) * a2) ^ v5)) - 8))();
}

uint64_t sub_221A286AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v2 + 214) ^ 0x74) * (v1 != 0)) ^ v2)) - 8))();
}

uint64_t sub_221A286D4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v6 = v3 + v2;
  v7 = (v5 ^ 0x389) + v3;
  *(_DWORD *)(*(_QWORD *)(v4 - 0xC7F991DE6408E15) + 4 * v6) = a1;
  *(_DWORD *)(v4 - 0xC7F991DE6408E19) = v7;
  v8 = v7 + v2;
  if (v7 + v2 < 0)
    v8 = -v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (int)(((v5 ^ 0x7D6) + 1808758879) & 0x943083EF ^ (((int)((v8 ^ 0xBDFFAD62)
                                                                                                 + ((v8 << ((((v5 ^ 0xD6) + 95) & 0xEF) + 84)) & 0x7BFF5AC4)
                                                                                                 + 1107317405) > (int)(((((v5 ^ 0x7D6) + 1808758879) & 0x943083EF) - 802879662) & 0x2FDAF8FD ^ 0xFFFFFF02)) << 6)))
                            - 8))();
}

uint64_t sub_221A287D0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*(_DWORD *)(*v3 + 4 * v4) == v1) * ((v2 - 15499184) & 0xEC7FFF ^ 0x40E)) ^ v2))
                            - 8))();
}

uint64_t sub_221A28814@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (v1 ^ ((v2 - 1 > (int)((v1 - 802879662) & 0x2FDAF8FD ^ 0xFFFFFF02)) << 6)))
                            - 8))();
}

_DWORD *sub_221A28858(_DWORD *result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *result = 85258470;
  return result;
}

uint64_t sub_221A2889C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  char v8;

  v2 = qword_255742BE0 - qword_255742C50 - (_QWORD)&v8;
  qword_255742C50 = 536075833 * v2 + 0x793AB71194CDC804;
  qword_255742BE0 = 536075833 * (v2 ^ 0x86C548EE6B3237FCLL);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = 57 * ((qword_255742BE0 + 57 * v2 + 4) ^ 0xFC);
  v5 = (char *)*(&off_24E772B10 + (v4 ^ byte_22269AF70[byte_222696F20[v4] ^ 0x84]) - 54) - 8;
  if (v3 == 1206753086)
    __asm { BR              X17 }
  if (v3 == 1206753093)
  {
    v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X1 }
  }
  return 4294925278;
}

void sub_221A28F60(unint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  _QWORD *v7;
  char *v8;
  unsigned int v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unint64_t v21;
  _QWORD *v22;
  int32x4_t v23;
  int32x4_t v24;
  int32x4_t v25;
  uint64_t v26;
  unint64_t *v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned int v37;
  unint64_t *v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v2 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v3 = *(_DWORD *)(a1 + 16) + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v4 = 1178560073 * ((1588112264 - (&v37 | 0x5EA8AB88) + (&v37 | 0xA1575477)) ^ 0x1BC32C15);
  v5 = *(_DWORD *)(a1 + 36);
  v21 = 1755732067
      * (((a1 | 0xDEEEE61CC66703ELL) - (a1 | 0xF211119E33998FC1) - 0xDEEEE61CC66703FLL) ^ 0xD045495E12A0CDE5);
  v6 = v5 + 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  v39 = v2 - v4 + 1172345356;
  v37 = 1076023948 - v4;
  v27 = &STACK[0x5C6940C6B1BC7306];
  v38 = &STACK[0x5C6940C6B1BC7306];
  sub_221A0D674((uint64_t)&v37);
  v7 = (_QWORD *)a1;
  v8 = (char *)*(&off_24E772B10 + (int)(v2 - 37)) - 8;
  v20 = ((v2 + 177) | 0x4E8) + v6 + 206677213;
  v19 = 1484105499;
  v18 = v6 - 857971597;
  v12 = v6 + 1138537797;
  v11 = v6 - 770055748;
  v10 = (char *)&v10 - 250415509;
  v17 = 143 * (v2 ^ 0x46);
  v16 = v17 ^ 0x5875A21C;
  v13 = (v2 - 1913092366) & 0x72077DBF;
  v15 = v13 ^ 0x52C;
  v31 = v2 ^ 0x6F;
  v30 = v2 ^ 0x22;
  v14 = v2 ^ 0x22;
  v29 = v14;
  v28 = v2;
  v24 = vdupq_n_s32(0x620F0DF9u);
  v25 = vdupq_n_s32(0x620F0DFFu);
  v23 = vdupq_n_s32(0xC41E1BF2);
  v22 = v7;
  v26 = *v7;
  v9 = v3
     - (((v3 << (((((v2 - 79) | 0xE8) + 48) | 0xE0) ^ 0x52 ^ (((v2 - 79) | 0xE8) + 3) & 0xBF)) + 655359252) & 0x989A21DE)
     - 539684999;
  v32 = (HIBYTE(v9) ^ 0x4C) - ((v9 >> 23) & 0x64) + 50;
  v33 = (BYTE2(v9) ^ 0x4D) - ((v9 >> 15) & 0x64) + 50;
  v34 = (BYTE1(v9) ^ 0x10) - ((2 * (BYTE1(v9) ^ 0x10)) & 0x64) + 50;
  v35 = (v3
       - ((((_BYTE)v3 << (((((v2 - 79) | 0xE8) + 48) | 0xE0) ^ 0x52 ^ (((v2 - 79) | 0xE8) + 3) & 0xBF)) + 20) & 0xDE)
       + 121) ^ 0xDD;
  __asm { BR              X15 }
}

uint64_t sub_221A29364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  char v21;
  int v22;
  uint64_t v23;

  *(_BYTE *)(a4 + (v22 + v20 - 921 - 352)) = v21;
  *(_BYTE *)(a4 + (a9 - 1862623871)) = *(_BYTE *)(a6 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((1627 * ((((v20 - 1194) | 1) ^ 0x4Bu) > 2)) ^ (v20 - 921))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_221A2A704@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (a3 - 1862623870)) = *(_BYTE *)(a2 + (v5 - 1900496073));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1595 * ((v4 & 0xFFFFFFFC) == ((v3 - 272) ^ 0x71474487))) ^ v3))
                            - 4))();
}

uint64_t sub_221A2A760@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t (*a22)(uint64_t))
{
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v25 = (v22 - 1690666352) & 0x64C5845F;
  *(_BYTE *)(a1 + (a3 + 2)) = *(_BYTE *)(a2 + (v23 - 1900496151 + v25));
  v26 = 628203409 * ((-420577316 - ((v24 - 160) | 0xE6EE7FDC) + ((v24 - 160) | 0x19118023)) ^ 0x9B998C10);
  *(_DWORD *)(v24 - 152) = v26 + v25 + 974;
  *(_DWORD *)(v24 - 148) = 507371030 - v26;
  *(_QWORD *)(v24 - 160) = a21;
  v27 = sub_221A21EB0(v24 - 160);
  return a22(v27);
}

uint64_t sub_221A2A808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  int v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = a11 < 0x9000B19B;
  if (v14 == (v11 + 938535170) < 0x9000B19B)
    v14 = v11 + 938535170 < a11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v14 * (((v12 - 1221) | 0x19) ^ 0x41)) ^ v12)) - 12))();
}

uint64_t sub_221A2A888@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _BOOL4 v13;
  unsigned int v14;
  int v15;
  _BOOL4 v16;

  v13 = a3 < v9;
  *(_BYTE *)(a4 + (a6 + a2)) = *(_BYTE *)(v12 + (v6 + v8))
                                           - (a5 & (2 * *(_BYTE *)(v12 + (v6 + v8))))
                                           + 50;
  v14 = a1 + v6 + 1;
  v15 = v13 ^ (v14 < v9);
  v16 = v14 < a3;
  if (!v15)
    v13 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * v11) ^ v7)) - 12))();
}

uint64_t sub_221A2A8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v29 = 628203409 * ((((v28 - 160) | 0x8BCD2C81) + (~(v28 - 160) | 0x7432D37E)) ^ 0x94520B3);
  *(_DWORD *)(v28 - 152) = v29 + v26 + 962;
  *(_DWORD *)(v28 - 148) = a10 - v29;
  *(_QWORD *)(v28 - 160) = a26;
  v30 = sub_221A21EB0(v28 - 160);
  v31 = STACK[0x310] & 0x3F ^ ((v26 ^ 0x39Au) - 941);
  *((_BYTE *)&STACK[0x2CC] + v31) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((968 * (v31 > 0x37)) ^ v26)) - 4))(v30);
}

uint64_t sub_221A2A9F0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 - 247) ^ (v0 == 63)) & 1) == 0) * (7 * (v1 ^ 0x3CC) - 86)) ^ v1))
                            - 4))();
}

uint64_t sub_221A2AA48@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((477 * ((a1 ^ 0x2Bu) > 7)) ^ (v1 | 0x10))))();
}

uint64_t sub_221A2AA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v10) = v13;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((409 * ((v11 & 0x38) - (unint64_t)(v9 + 322) == -393)) ^ (v9 + 623))))();
}

uint64_t sub_221A2AACC(int a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == v4) * a1) ^ v1)))();
}

uint64_t sub_221A2AAEC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0x1DE) + ((v1 - 392) | 0x52) + 673) * (v2 != v0)) ^ v1)))();
}

uint64_t sub_221A2AB34@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)(a1 + a2 + v3) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a2 + v3 + (unint64_t)(v2 ^ v5) - 90 > 0x3F) * v4) ^ (v2 + 299))))();
}

void sub_221A2AB68()
{
  JUMPOUT(0x221A29908);
}

uint64_t sub_221A2AB90()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1556 * (((v2 - 1967077713) & 0x753F3BC7u) + v0 - 250416935 < 0x38)) ^ (v2 + 663)))
                            - 12))();
}

uint64_t sub_221A2ABF0@<X0>(unsigned int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = ((v2 + ((a1 - 2076846039) & 0x7BCA27FD) - 669) ^ (a1 - 1511176519) & 0x5A12B6CF) + v1;
  if (v4 <= 0x38)
    v4 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2000 * (v4 - v1 + 250416225 > 7)) ^ a1)) - 12))();
}

uint64_t sub_221A2AC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v10) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (int)((14
                                               * ((((((v11 + 1227796478) & 0xB6D14FF7) - 29) ^ (((((v11 + 1227796478) & 0xB6D14FF7)
                                                                                                - 747) & v9) == 8)) & 1) == 0)) ^ (v11 + 1227796478) & 0xB6D14FF7))
                            - 8))();
}

uint64_t sub_221A2ACE4(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + v5) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((14 * (a1 & ~(v3 ^ (v4 == v5)))) ^ v1)) - 8))();
}

uint64_t sub_221A2AD14()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (32 * (v0 == v1))))
                            - ((v2 - 1315803975) & 0x4E6D90CF ^ 0x43)))();
}

uint64_t sub_221A2AD5C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + a2 + v3) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + 1 + v3) < 0x38) * v5) ^ (v2 + 663)))
                            - 12))();
}

void sub_221A2AD8C()
{
  char v0;
  int v1;
  unsigned int v2;
  int v3;
  unint64_t v4;
  char v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  char v11;
  char v12;
  char v13;
  int v14;
  unint64_t v15;

  v1 = LOBYTE(STACK[0x32C]) ^ 0x5F;
  if (v1 == 1)
  {
    v8 = STACK[0x310];
    v9 = STACK[0x30C];
    v10 = LODWORD(STACK[0x310]) >> 5;
    v11 = v10 ^ 0xF2;
    v12 = (v10 ^ 0xF2) & 0x37 ^ v10 & 5;
    v5 = v0 ^ 0x26;
    v13 = v11 - 2 * v12;
    v14 = LODWORD(STACK[0x310]) >> 13;
    LOBYTE(STACK[0x304]) = (v0 ^ 0x26)
                         + ((8 * LOBYTE(STACK[0x310])) ^ 0xA0)
                         - ((2 * ((8 * LOBYTE(STACK[0x310])) ^ 0xA0)) & 0x60)
                         - 55;
    LOBYTE(STACK[0x305]) = v13 + 50;
    LOBYTE(STACK[0x306]) = (v14 ^ 0x8F) + (~(2 * (v14 ^ 0x8F)) | 0x9B) + 51;
    LOBYTE(STACK[0x307]) = ((v8 >> 21) ^ 0x39) - 2 * (((v8 >> 21) ^ 0x39) & 0x36 ^ (v8 >> 21) & 4) + 50;
    HIDWORD(v15) = v9 ^ 0xA;
    LODWORD(v15) = v8 ^ 0x60000000;
    v6 = 100;
    LOBYTE(STACK[0x308]) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x309]) = ((v9 >> 5) ^ 0xA) - ((2 * ((v9 >> 5) ^ 0xA)) & 0x64) + 50;
    LOBYTE(STACK[0x30A]) = ((v9 >> 13) ^ 0xA4) - ((2 * ((v9 >> 13) ^ 0xA4)) & 0x64) + 50;
    v7 = (v9 >> 21) ^ 0xFFFFFFBE;
  }
  else
  {
    if (v1 != 2)
      goto LABEL_6;
    v2 = STACK[0x30C];
    v7 = STACK[0x310];
    v3 = LODWORD(STACK[0x30C]) >> 13;
    LOBYTE(STACK[0x304]) = ((LODWORD(STACK[0x30C]) >> 21) ^ 0xBE)
                         - 2 * (((LODWORD(STACK[0x30C]) >> 21) ^ 0xBE) & 0x33 ^ ((STACK[0x30C] & 0x200000) != 0))
                         + 50;
    LOBYTE(STACK[0x305]) = (v3 ^ (v0 + 85)) - 2 * ((v3 ^ (v0 + 85)) & 0x33 ^ ((v2 & 0x2000) != 0)) + 50;
    LOBYTE(STACK[0x306]) = ((v2 >> 5) ^ 0xA) - 2 * (((v2 >> 5) ^ 0xA) & 0x37 ^ (v2 >> 5) & 5) + 50;
    HIDWORD(v4) = v2 ^ 0xA;
    LODWORD(v4) = v7 ^ 0x60000000;
    LOBYTE(STACK[0x307]) = (v4 >> 29) - ((2 * (v4 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x308]) = ((v7 >> 21) ^ 0x39) - ((2 * ((v7 >> 21) ^ 0x39)) & 0x64) + 50;
    LOBYTE(STACK[0x309]) = ((v7 >> 13) ^ 0x8F) - ((2 * ((v7 >> 13) ^ 0x8F)) & 0x64) + 50;
    LOBYTE(STACK[0x30A]) = ((v7 >> 5) ^ 0xF2) - 2 * (((v7 >> 5) ^ 0xF2) & 0x36 ^ (v7 >> 5) & 4) + 50;
    v5 = v0 + 26;
    v6 = 96;
    LOBYTE(v7) = (8 * v7) ^ 0xA0;
  }
  LOBYTE(STACK[0x30B]) = v7 + ((v5 - 10) & 0xEF) - (v6 & (2 * v7)) - 29;
LABEL_6:
  JUMPOUT(0x221A29908);
}

uint64_t sub_221A2AFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  int v36;
  uint64_t v37;
  int v39;
  unint64_t v40;

  if (a31 == 2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37
                                                       + 8
                                                       * ((961
                                                         * (((LODWORD(STACK[0x328]) == 369984849) ^ (v36 - 34)) & 1)) ^ (v36 + 1245))))(a1, a11);
  if (a31 == 1)
    return (*(uint64_t (**)(void))(v37 + 8 * ((56 * (LODWORD(STACK[0x328]) == v36 + 369984770)) ^ (v36 + 1221))))();
  v39 = (16 * v36) ^ 0x560;
  v40 = ((unint64_t)&a36 ^ 0x3B7E7DF27E694F73)
      - 0x18019002680273
      + (((_QWORD)&a36 << (((16 * v36) ^ 0x60u) + 113)) & 0x76FCFBE4FCD29EE0);
  LOBYTE(STACK[0x327]) = ((((v39 - 81) & 0xFE) + 124) ^ v40) * (v40 + 17);
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * v39) - 8))();
}

void sub_221A2B32C()
{
  JUMPOUT(0x221A2B2F8);
}

uint64_t sub_221A2B334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;

  v42 = *(_QWORD *)(a18 + 24);
  memset((void *)(v40 - 176), 50, 16);
  v43 = 235795823 * (((v40 - 160) & 0xA61497F7 | ~((v40 - 160) | 0xA61497F7)) ^ 0xCD462151);
  *(_DWORD *)(v40 - 152) = v43 + 1596901039;
  *(_QWORD *)(v40 - 160) = v40 - 192;
  *(_DWORD *)(v40 - 124) = (v37 + 1799) ^ v43;
  *(_QWORD *)(v40 - 144) = &a37;
  *(_QWORD *)(v40 - 136) = v42;
  *(_QWORD *)(v40 - 120) = v40 + 0x3EAB24E7EEDAAD1ALL;
  v44 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v41 + 8 * (v37 - 21)) - 4))(v40 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((1117
                                                        * (*(_DWORD *)(v40 - 128) == v39 + ((v37 + 34) | 0x403) - 1123)) ^ v37))
                                          - 4))(v44);
}

uint64_t sub_221A2B43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 8) + v0 - 0x7A12F6E83BCD2E84)
     - *(unsigned __int8 *)(v5 + v0 - 0x7A12F6E83BCD2E84);
  v7 = v0 + 1;
  v9 = (v6 ^ 0xFD6C6FCF) + ((v4 - 1044) ^ 0x73FFF5B2) + ((2 * v6) & 0xFAD8DF9E) != 1902929356 || v7 == v2 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((473 * v9) ^ v4)) - 4))();
}

uint64_t sub_221A2B4C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = 1178560073 * ((v3 - 160 - 2 * ((v3 - 160) & 0xDE8BE26CF99EC706) - 0x21741D93066138FALL) ^ 0xC577B284430ABF64);
  *(_QWORD *)(v3 - 144) = v4 + 1902929356;
  *(_DWORD *)(v3 - 132) = v4;
  *(_DWORD *)(v3 - 128) = v4 + a1 + 2104632311;
  *(_QWORD *)(v3 - 120) = v1 - v4;
  *(_DWORD *)(v3 - 156) = ((a1 + 1671359681) ^ 0x6B) + v4;
  *(_DWORD *)(v3 - 152) = ((a1 + 1671359681) ^ 0x3E) + v4;
  *(_DWORD *)(v3 - 136) = a1 + 1671359681 + v4;
  v5 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E772B10 + a1 - 8) - 8))(v3 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v3 - 160)) - 4))(v5);
}

void sub_221A2B594()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 32) = 1645153785;
}

void sub_221A2B5E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_221A2B640()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((7 * (v1 == 1206753083)) ^ 0x47Au)) - 4))();
}

uint64_t sub_221A2B674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v4 = v3 + 1013;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 1612862051;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 159353952;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 816;
  v5 = *(_QWORD *)(a1 + 96) + 0xC7F991DE640913DLL;
  v6 = 1178560073
     * (((&v8 ^ 0xF4D518DC | 0xA372392C)
       - (&v8 ^ 0xF4D518DC)
       + ((&v8 ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992);
  v9 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  v10 = v5;
  v12 = v6 + v4 + 306418366;
  v8 = v6 + 308;
  ((void (*)(unsigned int *))(*(_QWORD *)(a3 + 968) - 12))(&v8);
  return (1279786127 * v11 - 1666208810);
}

void sub_221A2B7D8(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BR              X10 }
}

uint64_t sub_221A2B8A4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v3) == 45 * (v4 ^ 0x29C) + v1)
                                          * (((v4 ^ 0x29C) + 1940) ^ 0x792)) ^ v4))
                            - 12))();
}

uint64_t sub_221A2B8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = a1;
  v5 = v1;
  v6 = v2 + 1374699841 * ((2 * (&v4 & 0x37738180) - &v4 - 930316676) ^ 0xA5786675) + 1072;
  return sub_221A00590((uint64_t)&v4);
}

void sub_221A2BA68(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BR              X9 }
}

void sub_221A2BB3C()
{
  _DWORD *v0;

  *v0 = -1645193696;
}

uint64_t sub_221A2C12C(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - (_DWORD)a1 - 2065322948) ^ 0x3E71D45E);
  v2 = a1[1] + v1;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + (int)(v2 ^ 0x753))
                              + (int)(((((*a1 - v1) ^ 0x620F0DF9) - 1 < 0x63) * (v2 - 1751 + (v2 ^ 0x7DB) - 322)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_221A2C1C8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x67843F9A1244BACBLL) = (a2 ^ 0x9DF0F206)
                                                              - ((v2 - 1004659888) & (2 * (a2 ^ 0x9DF0F206) - 85198))
                                                              + 1645111186;
  return result;
}

uint64_t sub_221A2C268(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)off_24E76E528[((109 * (*(_DWORD *)(a2 + 4) != 1206753084)) ^ 0x3A7u) - 1] - 8))();
}

uint64_t sub_221A2C2A8()
{
  return 4294925278;
}

uint64_t sub_221A2C2B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = **(_BYTE **)(a2 + 8) != 0;
  *(_BYTE *)(a1 + 88) = (v2 ^ 0x2F) + 2 * v2;
  return 0;
}

void sub_221A2C2E8(uint64_t a1)
{
  int v1;
  int v2;
  _BYTE v3[4];
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~(_DWORD)a1 | 0xE19DA171))) ^ 0x101C35A);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = (460628867 * ((((v3 | 0xC87E0ECA) ^ 0xFFFFFFFE) - (~v3 | 0x3781F135)) ^ 0x7B177348)) ^ (v1 - 113);
  sub_221A30320((uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_221A2C428@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((((131 * ((v1 - 877) ^ 0x182)) ^ 0x191) * (((v3 ^ v2) & 0x1F) == 0xF)) ^ v1))
                            - 4))();
}

uint64_t sub_221A2C498@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;

  v4 = ((v2 + 892) ^ 0xB0240DD2) + (v3 ^ 0xCFFFFFD5) + 2145122043 + (v1 & 0x9FFFFFAA) < 0x7FFFFFFF;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((8 * (((v2 ^ 0x29 ^ v4) & 1) == 0)) & 0xDF | (32 * ((v2 ^ 0x229 ^ ~v4) & 1))) ^ v2))
                            - 12))();
}

uint64_t sub_221A2C51C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((511 * (v1 + 287788292 < ((v2 - 2113754378) & 0x7DFD53BFu) + 2147482700)) ^ v2))
                            - 4))();
}

uint64_t sub_221A2C57C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  unsigned __int8 v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0xC7F991DE6408E15) + 4 * (v1 + v2 + 1)) = -1075083249;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1884 * ((v4 ^ ((v1 + v2) < 0x7FFFFFFF)) & 1)) ^ (v3 - 18)))
                            - 4))();
}

uint64_t sub_221A2C5DC@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  char v4;
  int v5;
  _QWORD *v6;
  int v7;
  unsigned int v8;

  *(_DWORD *)(*v6 + 4 * (a2 + v3 + 1)) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((((v4 - 122) ^ (a2 + v3 < v8)) & 1) * a1) ^ v7))
                            - 4))();
}

void sub_221A2C618()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  int v5;
  int v6;

  v5 = 963203894 - v0;
  if (*v4 + 1988129696 >= ((v3 - 390) ^ 0x3B3))
    v6 = v5;
  else
    v6 = v1;
  *v4 += v2 + v6 + 2;
}

void sub_221A2C964(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_221A2C9CC()
{
  return 4294925278;
}

void sub_221A2CB54(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) != 0x27681A84B35EB105
    && *(_QWORD *)(a1 + 16) != 0x3EEC7284B8A20CABLL
    && *(_QWORD *)a1 != 0x66706D739F962A92;
  v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BR              X9 }
}

uint64_t sub_221A2CC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((1069 * (*(_DWORD *)(a18 - 0x27681A84B35EB0EDLL) == 1645153785)) ^ v19)) - (((v19 - 564) | 0x51Cu) ^ 0x516)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_221A2CCC8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  unsigned int v26;
  _BOOL4 v27;

  v24.n128_u64[0] = 0x6464646464646464;
  v24.n128_u64[1] = 0x6464646464646464;
  v25.n128_u64[0] = 0x3232323232323232;
  v25.n128_u64[1] = 0x3232323232323232;
  v26 = *(_DWORD *)(a22 - 0x27681A84B35EB0F5) - 1184605341;
  v27 = v26 < 0xCBE984DD;
  if (v26 >= 0xCBE984DD)
    v27 = v26 > 0xCBE984DD;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v23
                                                                                             + 8
                                                                                             * ((v27
                                                                                               * ((149 * (v22 ^ 0x512)
                                                                                                 - 1222) ^ 0x3FC)) ^ (149 * (v22 ^ 0x512))))
                                                                                 - ((5 * ((149 * (v22 ^ 0x512)) ^ 0x691u)) ^ 0x22DLL)))(a1, a2, a3, a4, v24, v25);
}

uint64_t sub_221A2CF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27)
{
  int v27;
  uint64_t v28;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v28 + 8 * (v27 - 559)) - 8))((((((v27 ^ 0x3A2) + 242) | 0x119) ^ 0x25F)
                                                                                       + 536870464) & a27);
}

uint64_t sub_221A2DC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  _BOOL4 v23;
  _BOOL4 v24;

  *(_BYTE *)(*v19 + (v17 + a8)) = -78;
  v21 = (((v18 - 888) | 0x20) ^ 0x2FE47CEB) + v17;
  v22 = ((a17 - 504887143) < 0x50E7ACE1) ^ (v21 < 0x50E7ACE1);
  v23 = v21 < a17 - 504887143;
  if (v22)
    v24 = (a17 - 504887143) < 0x50E7ACE1;
  else
    v24 = v23;
  return (*(uint64_t (**)(void))(v20 + 8 * ((23 * v24) ^ v18)))();
}

uint64_t sub_221A2DCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _BOOL4 v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v16 = v12 < v8;
  *(_BYTE *)(*v14 + (v9 + 1 + a8)) = 50;
  v17 = v10 + v9 + 499;
  v18 = v16 ^ (v17 < v8 + v11 - 1422);
  v19 = v17 < v12;
  if (!v18)
    v16 = v19;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v16 * v13) ^ v11)))();
}

void sub_221A2DD00(int a1@<W8>)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 0x3EEC7284B8A20CABLL) = *v1;
  *(_DWORD *)(v4 - 0x66706D739F962A92) = a1;
  *v1 = 0;
  *(_QWORD *)(v7 - 0x27681A84B35EB0FDLL) = 0x23F5AF4C23F5AF4CLL;
  *v2 = 310716794;
  *(_DWORD *)(v7 - 0x27681A84B35EB0F1) = ((*(_DWORD *)(v7 - 0x27681A84B35EB0F1) & 0xFFFFFFFE ^ 0x42D83F58 | 0x95997BD8)
                                          - (*(_DWORD *)(v7 - 0x27681A84B35EB0F1) & 0xFFFFFFFE ^ 0x42D83F58 | 0x6A668427)
                                          + 1785103399) ^ 0xD7414481;
  *(_DWORD *)(v6 + 28) = *v5;
}

void jfkdDAjba3jd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6)
{
  int v6[10];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  *a5 = 0;
  *a6 = 0;
  v6[1] = 108757529
        * (((v6 | 0x51085D1D) - v6 + (v6 & 0xAEF7A2E0)) ^ 0xB1943F36)
        + 1695027452;
  sub_221A43B78(v6);
  __asm { BR              X8 }
}

uint64_t sub_221A2DEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a15 = &STACK[0x4BD26FD1213425B9];
  a17 = 1307 - 460628867 * ((&a15 & 0xA1039BA5 | ~(&a15 | 0xA1039BA5)) ^ 0x126AE627);
  sub_221A1F8D0((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((16 * (a16 == 1645153785)) | v17)) - 12))(v19, v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_221A2DF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v26 = 1178560073 * ((&a15 & 0x443E359C | ~(&a15 | 0x443E359C)) ^ 0x155B201);
  a17 = a12;
  a18 = v26 ^ 0x3E8;
  a16 = (v22 ^ 0xF3FDF27D) + ((2 * v22) & 0xE7FBE4FA) + 1551851452 + v26;
  sub_221A2F97C((uint64_t)&a15);
  v27 = 1178560073 * (((&a15 | 0xFEB9F472) - (&a15 & 0xFEB9F472)) ^ 0x442D8C10);
  a17 = a12;
  a18 = v27 ^ 0x3E8;
  a16 = ((2 * v21) & 0xECFABD76) + 1098 + (v21 ^ 0xF67D5EBB) + 1509945140 + v27;
  sub_221A2F97C((uint64_t)&a15);
  v28 = 1178560073 * ((1638435589 - (&a15 | 0x61A88B05) + (&a15 | 0x9E5774FA)) ^ 0x24C30C98);
  a18 = v28 ^ ((v20 ^ 0x4BF17F7E) - 1081107028 + ((2 * v20) & 0x97E2FEFC));
  a19 = v19;
  a17 = a12;
  a16 = v28 + 1289;
  sub_221A21590((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * ((750 * (a15 == 1645153785)) ^ 0x451u)) - 12))(v29, v30, v31, v32, v33, v34, v35, v36, v25, v23);
}

uint64_t sub_221A2E18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, unsigned int a17, unsigned int a18, unsigned int a19, int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 460628867 * ((&a15 & 0x289C561E | ~(&a15 | 0x289C561E)) ^ 0x9BF52B9C);
  a19 = 635686783 - v22;
  a17 = v22 + 1697367587;
  a18 = v22 + v20 + 2138962262;
  a15 = &STACK[0x58A7AA08624568F6];
  a16 = a12;
  v23 = sub_221A43F44((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((27
                                                        * (((v20 + 101) ^ (a20 == ((v20 - 1363541339) & 0x5145FBB7 ^ 0x620F0F5E))) & 1)) ^ v20))
                                          - 12))(v23);
}

uint64_t sub_221A2E27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, unint64_t *a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v22 = v19 & 0x70D0B2DF;
  a16 = a11;
  a17 = &STACK[0x72E1645BEBB64033];
  a19 = (v22 + 211) ^ (1225351577 * (&a15 ^ 0x239AD816));
  a18 = &STACK[0x1E6EF7153090DEA];
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v22 - 78)) - 8))(&a15);
  a16 = &STACK[0x384B062F07609564];
  a17 = a11;
  a15 = (v22 + 202) ^ (1374699841 * (&a15 ^ 0x6DF41809));
  ((void (*)(unsigned int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x3Au)) - 8))(&a15);
  a16 = a11;
  a15 = (v22 + 703) ^ (1755732067
                     * ((2 * (&a15 & 0x22973738) - &a15 + 1567148230) ^ 0x83AE751D));
  v23 = sub_221A3FFB0((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((((_DWORD)a17 == 1645153785) * (((v22 - 677531922) & 0x286254D3) + 369)) ^ v22)))(v23);
}

uint64_t sub_221A2E3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v14;
  uint64_t v15;

  return (*(uint64_t (**)(void))(v15 + 8 * ((910 * (a14 == ((221 * (v14 ^ 0x8A)) ^ 0x620F09A8))) ^ v14)))();
}

uint64_t sub_221A2E430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  unsigned int v13;
  uint64_t v14;

  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((691 * (a13 != ((((v13 + 756930384) & 0xD2E22C71) + 1645152037) ^ (v13 + 1536)))) ^ v13)))();
}

uint64_t sub_221A2E488@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (*(uint64_t (**)(_QWORD))(v2 + 8 * (v1 - 1453)))(a1 ^ 0x620F0DF9u) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v4 * ((v1 - 1207) ^ 0x5C7 ^ (5 * (v1 ^ 0x652)))) ^ v1)) - 8))();
}

uint64_t sub_221A2E4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  uint64_t v14;
  unsigned int v15;

  v15 = (a13 ^ 0x620F0DF9) + ((v13 + 494461987) & 0xE2871B56 ^ 0x76D504A8) - ((2 * (a13 ^ 0x620F0DF9)) & 0xEDAA0BF4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1615
                                          * (((2 * v15) & 0xDFDBFDDA ^ 0xCD8A09D0)
                                           + ((v13 - 329) ^ 0x1938FB98 ^ v15)
                                           - 1610946564 != 266921705)) ^ v13))
                            - 12))();
}

uint64_t sub_221A2E58C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 + v0 + v2 - 1877868607) > 7) * (v2 - 334)) | v2)))();
}

uint64_t sub_221A2E5D8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v4 = v2 + 761;
  v5 = v1 - a1 < (v4 ^ 0x46BuLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v5 | (16 * v5)) ^ v4)) - 12))();
}

uint64_t sub_221A2E618(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v6
                                                              + 8
                                                              * (((((v4 < 0x20) ^ (a4 - v5 - 99)) & 1)
                                                                * (a4 - 812)) ^ a4))
                                                  - 4))(a1, (a4 - 146));
}

uint64_t sub_221A2E658(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v4 + v5 + v6;
  v11 = v1 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((v2 & 0xFFFFFFE0) == 32) * ((38 * (v7 ^ (v3 + 1095))) ^ 0x44D)) ^ (v8 + v7 + 734)))
                            - 8))();
}

void sub_221A2E6C0()
{
  JUMPOUT(0x221A2E670);
}

uint64_t sub_221A2E6CC(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(_BYTE *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v7 = a1;
  *v8 = v2;
  v5 = (v1 ^ 0x4DE) - 426;
  v13 = v9;
  v12 = (v1 ^ 0x4DE) + (v11 ^ 0xAF40E2F) * v4 - 76;
  v3(v11);
  v13 = v10;
  v12 = v5 + ((((2 * v11) | 0xC2DB3190) - v11 + 512911160) ^ 0xEB9996E7) * v4 + 350;
  v3(v11);
  return 0;
}

void sub_221A2E95C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~(_DWORD)a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BR              X14 }
}

void sub_221A2EA74(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + a1) = 159353952;
}

void sub_221A2F97C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BR              X10 }
}

uint64_t sub_221A2FA54@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 3804331 * (((&a3 | 0x81ADAAE9) + (~&a3 | 0x7E525516)) ^ 0xFF788F1E);
  a5 = &STACK[0x58C2F3F47EC954F5];
  a6 = v8;
  a7 = v10 + 910892480;
  a3 = v10 + 1116194074;
  a4 = v10 + v7 - 480;
  v11 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a1 + 8 * (v7 - 818)) - 12))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((1204 * (*(_DWORD *)(v8 - 0x27681A84B35EB0EDLL) == 1645153785)) ^ v7)))(v11);
}

void sub_221A2FB20(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  _BYTE *v4;

  v3 = v1[1] - v2 - ((2 * (v1[1] - v2) + 1594186638) & 0x989A21DE) - 70271306;
  *v4 = (HIBYTE(v3) ^ 0x4C) - ((v3 >> 23) & 0x64) + 50;
  v4[1] = (BYTE2(v3) ^ 0x4D) - ((v3 >> 15) & 0x64) + 50;
  v4[2] = (BYTE1(v3) ^ 0x10) - ((2 * (BYTE1(v3) ^ 0x10)) & 0x64) + 50;
  v4[3] = v3 ^ 0xDD;
  *v1 = *a1;
}

void sub_221A2FBE4(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_221A2FC28()
{
  return 4294925273;
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X8 }
}

uint64_t sub_221A2FD1C(uint64_t a1, int a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 0;
  v4 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((7 * v4) ^ 0x2D2u)) - 4))();
}

uint64_t sub_221A2FD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;

  a14 = v15
      + 108757529 * ((-1250741474 - (&a13 | 0xB573331E) + (&a13 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      + 1695026727;
  v16 = sub_221A43B78(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((1788 * (a13 == ((239 * (v15 ^ 0x2D6)) ^ 0x620F0F34))) ^ v15))
                                          - ((v15 - 1689052227) ^ 0x9B531E96)))(v16);
}

uint64_t sub_221A2FE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = v16 - 460628867 * (((&a13 | 0x8BDC4BD5) + (~&a13 | 0x7423B42A)) ^ 0xC74AC9A9) + 590;
  a13 = &STACK[0x4BD26FD1213425B9];
  sub_221A1F8D0((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (int)(((a14 != v15) * ((v16 - 76030703) ^ 0xFB77DFC6)) ^ v16))
                                                                                       - ((v16 - 76030703) & 0x9FDB3EB3 ^ 0x9B531E96)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_221A2FEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 1178560073 * (&a13 ^ 0xBA947862);
  a17 = v17;
  a14 = v23 + v22 - 128;
  a16 = (((v22 + 1974771810) & 0x8A4B5F9E ^ 0x1FF95825)
       + ((2 * v18) & 0xD70F7EF6)
       + (v18 ^ 0xEB87BDAE ^ ((v22 - 884) | 0xC0))) ^ v23;
  a15 = a12;
  v24 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 8 * (v22 ^ 0x509)) - 8))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * (((a13 != v19) | (2 * (a13 != v19))) ^ v22)) - 12))(v24);
}

uint64_t sub_221A2FFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, int a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v21 = 460628867 * ((&a13 - 1886733488 - 2 * ((unint64_t)&a13 & 0x8F8ABB50)) ^ 0xC31C392D);
  a13 = &STACK[0x58A7AA08624568EE];
  a14 = a12;
  a15 = v21 - 1370370129;
  a16 = v21 + 2138961942 + v20;
  a17 = 635686783 - v21;
  v22 = sub_221A43F44((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (((a18 == ((v20 - 693) ^ (v18 + 307)))
                                                        * (((v20 - 1146) | 0x4A0) - 748)) ^ v20))
                                          - 12))(v22);
}

uint64_t sub_221A3009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a14 = (v16 - 1111) ^ (1374699841
                      * ((((&a14 | 0x21ACE69C) ^ 0xFFFFFFFE) - (~&a14 | 0xDE531963)) ^ 0xB3A7016A));
  a15 = &STACK[0x384B062F07609554];
  a16 = a10;
  v19 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v17 + 8 * (v16 - 1275)) - 8))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((121 * (a12 == ((v16 - 1710155678) | 0x1420080) - 960762009)) ^ v16)))(v19);
}

uint64_t sub_221A3015C()
{
  uint64_t v0;
  void (*v1)(unsigned int *);
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = 1689051594
      - 108757529 * ((2 * (&v9 & 0x4A6220) - &v9 + 2142608861) ^ 0x9F29FFF6)
      + v3
      + 93;
  v11 = v0;
  v12 = v6;
  v13 = 0x3B4E8EE293AAEC8ALL;
  (*(void (**)(unsigned int *))(v4 + 8 * (v3 + 1689051594)))(&v9);
  v9 = (v3 + 1689052348) ^ (1755732067
                          * (((&v9 | 0x7744F355) - (&v9 & 0x7744F355)) ^ 0xA9824E8E));
  v11 = v6;
  sub_221A3FFB0((uint64_t)&v9);
  v10 = v3
      + 1689051594
      + 535753261 * ((((2 * &v9) | 0xA365A42A) - &v9 + 776809963) ^ 0xDB46DC3A)
      + 937;
  v11 = v6;
  v1(&v9);
  v11 = v8;
  v10 = v3
      + 1689052227
      + 535753261 * ((&v9 & 0x5FB4813F | ~(&v9 | 0x5FB4813F)) ^ 0xAABF70EF)
      + 304;
  v1(&v9);
  return v7 ^ v2;
}

void sub_221A30320(uint64_t a1)
{
  int v1;
  _DWORD v2[2];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  v3 = *(_QWORD *)(a1 + 8);
  v2[0] = v1 + 628203409 * (((v2 | 0xF7CBF79) + (~v2 | 0xF0834086)) ^ 0x8DF4B34B) - 617;
  sub_221A11490((uint64_t)v2);
  __asm { BR              X8 }
}

void sub_221A3041C()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0xC7F991DE6408E19) - 159353953) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *v0 = v3;
}

void sub_221A30488(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - (_DWORD)a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BR              X14 }
}

uint64_t sub_221A305A8()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;

  v4 = v0 + 295202885 < (int)((v1 ^ 0x1B17FF6C) + v3);
  if (v3 > 0x64E8035A != v0 + 295202885 < -1692926811)
    v4 = v3 > 0x64E8035A;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((v4 << 9) | (v4 << 10) | v1 ^ 0x2EC)) - 12))(0x5795C76E21738119);
}

uint64_t sub_221A306E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, _QWORD *a5@<X6>, unsigned int a6@<W7>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v19;

  v17 = a1 + a3 + (*(_DWORD *)(v7 + 4 * v12) ^ v9) + a6 * (unint64_t)(*(_DWORD *)(*a5 + 4 * a2) ^ v9);
  *(_DWORD *)(v7 + 4 * v12) = v17
                            + (((((v11 - 1990494502) & 0x76A48BC9) - 708) | 0x20) ^ (v9 + 283))
                            - (((_DWORD)v17 << (((v11 - 38) & 0xC9 ^ v13) - 69)) & 0x7FD7101E);
  v19 = a2 - 1793570764 < a7 && a2 - 1793570764 >= a4;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v8
                                                               + 8 * ((v11 - 1990494502) & 0x76A48BC9 ^ (v19 * v10)))
                                                   - 4))((v14 ^ HIDWORD(v17)) + (v15 & (v17 >> 31)) + v16);
}

uint64_t sub_221A307A0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((57 * (a1 != ((v2 + 866) | 0x101u) + 0x5795C76E21737B70)) | v2))
                            - 8))();
}

uint64_t sub_221A30804@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v4 = a1 - 1211;
  v5 = v1 + 77641432 < (int)(v3 + 236995384);
  if (v3 > ((a1 - 1211) ^ 0x71DFBC29u) != v1 + 77641432 < (int)((a1 - 1381569963) & 0x52591147 ^ 0x8E20427E))
    v5 = v3 > (v4 ^ 0x71DFBC29u);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1310 * v5) ^ v4)) - 4))();
}

uint64_t sub_221A308FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  int v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;

  v14 = a1 - 0x5795C76E21738119 + (*(_DWORD *)(v2 + 4 * v4) ^ v5);
  *(_DWORD *)(v2 + 4 * v4) = v14 + v5 - ((2 * v14) & 0x7FD7101E);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v8 + 88 + v6) & v7 ^ a2 ^ (v14 >> (((v8 + 88) ^ v9)
                                                                                * v10
                                                                                - 86)))
                                           + v12
                                           + (v11 & (2 * (v14 >> (((v8 + 88) ^ v9) * v10 - 86)))) != 0x5795C76E21738119)
                                          * v13) ^ (v8 + 88)))
                            - 8))();
}

uint64_t sub_221A309A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  _BOOL4 v14;
  int v15;
  _BOOL4 v16;

  v13 = *a10 - 176105989;
  v14 = v10 - 176105989 < v12 + 2130730981;
  v15 = v14 ^ (v13 < ((v12 - 630) | 0x146) + 2130731285);
  v16 = v10 - 176105989 > v13;
  if (!v15)
    v14 = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1483 * v14) ^ v12)) - 8))();
}

void sub_221A30A18()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t sub_221A30A3C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  v2 = *(_DWORD *)a1 ^ v1;
  v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (!v5)
    v7 = v6;
  return (*((uint64_t (**)(void))*(&off_24E772B10 + v2 - 1300) + ((573 * (v3 >> 5 < v7)) ^ v2) - 1))();
}

uint64_t sub_221A30AEC@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0xC7F991DE6408E15) + 4 * v3) ^ 0xBFEB880F) >> a2) ^ 0xE0F36651;
  *(_DWORD *)(result + 4) = v4 & 0xC4EA2BA4 ^ 0x3264FBF1 ^ ((v4 & 0xC4822281 | 0x12788964)
                                                          - (v4 & 0x680924 | 0xED87769B)
                                                          - 309889381);
  return result;
}

uint64_t sub_221A30B6C(uint64_t result)
{
  *(_DWORD *)(result + 4) = 538735252;
  return result;
}

void sub_221A30B7C()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x24BDAC7A8]();
  v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~(_DWORD)v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BR              X13 }
}

uint64_t sub_221A30CF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;

  v46 = &a39 + v39;
  v65 = &a29 + v39;
  v64 = &a31 + v39;
  v63 = &a35 + v39;
  v62 = &a37 + v39;
  v61 = &a33 + v39;
  v59 = v40;
  v60 = &a25 + v39;
  v66 = &a23 + v39;
  v47 = *a1;
  v48 = a1[5];
  v68 = a1[4];
  LODWORD(a13) = v42 + 380;
  *(_QWORD *)(v45 - 104) = *(_QWORD *)(*a1 - 0x7542B2AE577378FLL);
  *(_QWORD *)(v45 - 128) = &a39 + v39;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x3BB37F04 | ~((v45 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = a3;
  v67 = *(void (**)(uint64_t))(a2 + 8 * ((int)v42 - 1378));
  v69 = v41;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 136) = v48;
  *(_QWORD *)(v45 - 128) = v66;
  *(_DWORD *)(v45 - 144) = (v42 - 453) ^ (((2 * ((v45 - 144) & 0x7323D130) - (v45 - 144) + 215756489) ^ 0x2F46F6DF) * v43);
  *(_QWORD *)(v45 - 120) = v46;
  *(_QWORD *)(v45 - 112) = v47;
  ((void (*)(uint64_t))((char *)*(&off_24E772B10 + (int)v42 - 1504) - 4))(v45 - 144);
  *(_QWORD *)(v45 - 104) = v46;
  *(_DWORD *)(v45 - 112) = v42 + 380 + 1224239923 * ((v45 + 460286470 - 2 * ((v45 - 144) & 0x1B6F6A96)) ^ 0xE9DC9741);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v65;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v65;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v64;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0xFA6987D9 | ~((v45 - 144) | 0xFA6987D9)) ^ 0xF72585F1);
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v64;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923
                         * ((((v45 - 144) | 0x89678349) - (v45 - 144) + ((v45 - 144) & 0x76987CB0)) ^ 0x7BD47E9E);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v63;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v63;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v62;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923
                         * ((((v45 - 144) | 0xA3105CC4) - (v45 - 144) + ((v45 - 144) & 0x5CEFA338)) ^ 0x51A3A113);
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v62;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x9B210A30 | ~((v45 - 144) | 0x9B210A30)) ^ 0x966D0818);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v61;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 104) = v61;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * ((((v45 - 144) | 0x95C539CC) - ((v45 - 144) & 0x95C539CC)) ^ 0x6776C41B);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 128) = v60;
  *(_QWORD *)(v45 - 120) = v48;
  v67(v45 - 144);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 136) = v66;
  *(_QWORD *)(v45 - 104) = v60;
  *(_QWORD *)(v45 - 128) = v66;
  *(_QWORD *)(v45 - 120) = v48;
  *(_DWORD *)(v45 - 112) = v42
                         + 380
                         + 1224239923 * (((v45 - 144) & 0x8BC4ED51 | ~((v45 - 144) | 0x8BC4ED51)) ^ 0x8688EF79);
  v67(v45 - 144);
  v49 = *(_QWORD *)(v47 - 0x7542B2AE5773797);
  *(_DWORD *)(v45 - 128) = v42
                         + 1374699841
                         * ((-1520606683 - ((v45 - 144) | 0xA55D6225) + ((v45 - 144) | 0x5AA29DDA)) ^ 0x375685D3)
                         - 79;
  *(_QWORD *)(v45 - 144) = v49;
  *(_QWORD *)(v45 - 136) = v44;
  sub_221A00590(v45 - 144);
  *(_QWORD *)(v45 - 136) = v68;
  *(_DWORD *)(v45 - 144) = v42 + 235795823 * ((v45 - 862440077 - 2 * ((v45 - 144) & 0xCC983603)) ^ 0x58357F5A) - 1147;
  sub_221A0D838(v45 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(v69 + 8 * (int)((((*(_DWORD *)(v45 - 140) - 313388985) < 0x7FFFFFFF) * (((v42 - 1428) | 0x54) + ((v42 - 1051) ^ 0xFFFFFEC0))) ^ v42)))(v50, v51, v52, v53, v54, v55, v56, v57, v59, v60, v61, v62, v63, v64, v65, v66, a12, a13, v42);
}

uint64_t sub_221A311F8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  v5 = 1224239923 * ((v4 - 144) ^ 0xF2B3FDD7);
  *(_DWORD *)(v4 - 128) = v5 + v0 + 10;
  *(_DWORD *)(v4 - 144) = v5 ^ 0x3EAF37E3;
  *(_QWORD *)(v4 - 136) = v8;
  sub_221A02520((_DWORD *)(v4 - 144));
  *(_QWORD *)(v4 - 104) = v1;
  *(_DWORD *)(v4 - 112) = v0
                        + 1224239923 * ((2 * ((v4 - 144) & 0x53DB0AB8) - (v4 - 144) + 740619589) ^ 0xDE970892)
                        + 1724;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 144) = v3;
  *(_QWORD *)(v4 - 136) = v8;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = ((v0 + 556) | 0x98)
                        + 1374699841 * ((((v4 - 144) | 0xF444FDE1) + (~(v4 - 144) | 0xBBB021E)) ^ 0x99B0E5E9)
                        + 557;
  *(_QWORD *)(v4 - 144) = v1;
  *(_QWORD *)(v4 - 136) = v7;
  return sub_221A00590(v4 - 144);
}

void sub_221A32268(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BR              X14 }
}

uint64_t sub_221A32398@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;

  v14 = v11 > 0x21B7F2B0;
  *(_DWORD *)(a9 + 4 * (v9 + a1)) = *(_DWORD *)(*(_QWORD *)(v12 - 0xC7F991DE6408E15) + 4 * (v9 + a1));
  if (v14 == v9 + 985134360 < -565703345)
    v14 = v9 + 985134360 < (int)(v11 + 1581780303);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((510 * !v14) ^ (v10 - 799))) - 8))(3729263951);
}

uint64_t sub_221A32440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v18;

  v16 = v14 - 963 + v13 - 986969928;
  v18 = v16 > 1757160217 || v16 < a13 - 390323430;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((23 * v18) ^ v14)) - 12))();
}

uint64_t sub_221A324B0@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  _BOOL4 v19;

  *(_DWORD *)(a10 + 4 * (v10 + a2)) = a1;
  v17 = v12 + v10 + 555;
  v19 = v17 > ((v11 - 1139021551) & 0x43E4132B) + v13 || v17 < v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((v19 * v15) ^ v11)) - 12))();
}

uint64_t sub_221A32504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * ((((2 * v6) ^ 0x40A)
                                                                                            * (v5 == 0)) ^ v6))
                                                                              - ((v6 - 480591215) & 0x1CA53FFF ^ 0x4B7)))(a1, a2, a3, a4, a5);
}

uint64_t sub_221A3255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;

  v17 = 1374699841 * ((2 * ((v16 - 128) & 0x66A9F4B8) - (v16 - 128) + 425069377) ^ 0x74A21348);
  *(_DWORD *)(v16 - 128) = v15 - v17 - 188;
  *(_DWORD *)(v16 - 124) = v17 + ((a13 << 6) & 0xDB9F1FC0) + ((32 * a13) ^ 0x6DCF8FF5) - 621380673;
  *(_QWORD *)(v16 - 120) = a14;
  sub_221A0BDE0((_DWORD *)(v16 - 128));
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1972 * (*a10 + ((v15 - 159355000) ^ v15 ^ 0x307u) > 0x7FFFFFFE)) ^ v15))
                            - 4))();
}

uint64_t sub_221A3263C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 112) = v14
                         + 1374699841 * (((~(v18 - 128) & 0x2D3D96EC) - (~(v18 - 128) | 0x2D3D96ED)) ^ 0x40C98EE4)
                         + 427;
  *(_QWORD *)(v18 - 128) = a14;
  *(_QWORD *)(v18 - 120) = &STACK[0xC7F991DE6408E5D];
  sub_221A00590(v18 - 128);
  *(_QWORD *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 112) = v14
                         + ((((v18 - 128) ^ 0x5F497C76) & 0x2F4F9D48 | ~((v18 - 128) ^ 0x5F497C76 | 0x2F4F9D48)) ^ 0x356D66A3)
                         * v16
                         + 567;
  *(_QWORD *)(v18 - 104) = v17;
  v19 = ((uint64_t (*)(uint64_t))*(&off_24E772B10 + (v14 ^ 0x4A7)))(v18 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * (int)(((*(_DWORD *)(v18 - 128) > ((v14 + 1618980239) ^ 0x607FB2C9u)
                                                                                       + 268031314)
                                                             * (((v14 + 1618980239) & 0x9F804EFF) + 405)) ^ v14))
                                          - 4))(v19);
}

uint64_t sub_221A32760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  int v18;
  int v19;

  v18 = (v17 + 888) | 0x12;
  v19 = 1075 - (a16 - 159353952 + v18);
  if (a16 - 159353952 + v18 - 1075 >= 0)
    v19 = a16 - 159353952 + v18 - 1075;
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((int)((v19 ^ 0x9BFFDFF5) + ((2 * v19) & 0x37FFBFEA) + 1677729802) > (int)((v18 - 906) ^ 0xFFFFFF56))
                                              * ((v18 + 778) ^ 0x4BB)) ^ v18)))(3219884047);
}

uint64_t sub_221A3280C(int a1)
{
  uint64_t v1;
  unsigned int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(v1 + 4 * v2) != a1) * ((v3 + 906) ^ 0xA9)) ^ v3)))();
}

uint64_t sub_221A3283C()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - 1 > (int)((v1 - 906) ^ 0xFFFFFF56)) * ((v1 + 778) ^ 0x4BB)) ^ v1)))();
}

uint64_t sub_221A32878()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 32);
  *(_DWORD *)(v2 - 112) = v0 + 1374699841 * ((v2 - 128) ^ 0x6DF41809) - 376;
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v3;
  return sub_221A00590(v2 - 128);
}

uint64_t sub_221A32D2C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = *(_DWORD *)(a1 + 24) - v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0xC7F991DE6408E19);
  v6 = v4 - 159353952;
  v5 = v4 - 159353952 < 0;
  v7 = 159353952 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + v2 - 1195)
                              + ((944 * ((v3 - 2129462123) >= 4 * (unint64_t)v8)) ^ v2)
                              - 1)
                            - 12))();
}

uint64_t sub_221A32DF4()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((v2 + 632557832) & 0xDA4BEEEA ^ (29 * (v1 == 2129462123))))
                            - (((v2 + 632557832) & 0xDA4BEEEA)
                             - 4)
                            + 1208))();
}

uint64_t sub_221A32E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 28) = v1;
  return result;
}

uint64_t sub_221A32E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (int)((v3 - 173) ^ 0x4A))
                                                                    - v3
                                                                    + 1216))(a1, v3, 3219884047, v2);
}

uint64_t sub_221A32EC0@<X0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;

  *(_BYTE *)(*a1 + (a4 + a5)) = ((a3 ^ v7) >> v8)
                                            - (((a3 ^ v7) >> v8 << ((a2 + 49) ^ 0xD4)) & (a2 - 96))
                                            + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 | (a4 - 1 == v6) | (16 * (a4 - 1 == v6)))) - 12))();
}

uint64_t sub_221A32F1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                + 8
                                                                                * (int)((74 * (v5 == 24)) ^ (a2 - 173)))
                                                                    - a2
                                                                    + 1216))(a1, a2, a3, v4);
}

uint64_t sub_221A32F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 - 1798686946 > 2047817217 || v4 - 1798686946 < v3;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v5 ^ (193 * v7)))
                                                                    - 5 * (v5 ^ 0x4E3u)
                                                                    + 1216))(a1, 5 * (v5 ^ 0x4E3u), 3219884047, v2);
}

uint64_t sub_221A32FA8@<X0>(_QWORD *a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_221A32EC0(a1, v5 + 173, *(_DWORD *)(*v3 + 4 * (v4 - 1699021736 + v5 + 173)), v2, a2);
}

void sub_221A32FD4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X13 }
}

uint64_t sub_221A330F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * (v3 ^ (1928 * (v4 != 0xEB8F3DED))))
                                                                    - 12))(a1, a2, a3, (v3 + 69));
}

uint64_t sub_221A33140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;

  v15 = v7 > v9;
  *(_BYTE *)(v13 + (v11 - 271286987)) = *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 ^ 0x1E3))
                                                               + (((_BYTE)v11 + 53) & 0xF)
                                                               - 4) ^ *(_BYTE *)(v4 + (v11 - 271286987)) ^ (23 * ((v11 + 53) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 - 321)) + (((_BYTE)v11 + 53) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v12 + 8 * (v5 - 314)) + (((_BYTE)v11 + 53) & 0xF) + (a4 ^ 0x1F3) - 8);
  if (v15 == v11 - 1983323350 < v6)
    v15 = v11 - 1983323350 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((v15 * v10) ^ v5)) - 12))();
}

uint64_t sub_221A331F4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((52
                                * ((((v0 + 753702940) & 0xD313674B ^ 0xE6FAFFEC) & (2 * v1) ^ 0xC61A79CA)
                                 + (v1 ^ 0x18F2411A)
                                 + ((v0 - 1193) ^ 0x3EE3DA49) != 845240498)) ^ v0)))();
}

uint64_t sub_221A33270()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((98 * (v2 + v1 + v0 + 209878278 >= (v0 - 1531))) ^ v0)))();
}

uint64_t sub_221A332D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((30
                                          * ((((a3 + a7 - 350 + a8 + 333) < 0xFFFFFFF0) ^ (81 * (a7 ^ 0xC7))) & 1)) ^ a7))
                            - 8))();
}

uint64_t sub_221A33324(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v21;

  v12 = (a3 + v9 + v8 + 1227);
  v13 = v12 + v10;
  v14 = v12 & 0xF;
  v15 = v14 - v13 + v6;
  v16 = (v7 | v14) - v13;
  v17 = (v5 | v14) - v13;
  v21 = v15 > 0xF && v4 - v10 >= (((a4 ^ 0x15u) + 575) ^ 0x5BDuLL) && (unint64_t)(v16 + 1) > 0xF && v17 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((248 * v21) ^ a4)) - 12))();
}

uint64_t sub_221A333A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                       + 8
                                                                       * ((788
                                                                         * (((v7 < 0x10) ^ ((a7 ^ 0x37) - 1)) & 1)) ^ a7))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_221A333E0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  int8x16_t v65;
  uint64_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16x4_t v70;
  int8x16x4_t v71;

  v63 = a4 + 2;
  v64 = (a4 + 1289949719) & 0xB31CEFDF;
  v70.val[1].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)a2 + v63 + 21 + 121) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v70.val[2].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v65.i64[0] = 0x8787878787878787;
  v65.i64[1] = 0x8787878787878787;
  v66 = a2 + ((v64 - 527) ^ (v57 - 126));
  v70.val[0].i64[0] = ((_BYTE)a2 + ((v64 - 15) ^ (v57 - 126))) & 0xF;
  v70.val[0].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_2226906C0).u64[0];
  v71.val[0].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a2 + 2) & 0xF;
  v71.val[2].i64[1] = a2 & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v71.val[0].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a2 + 1) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v67.i64[1] = vqtbl4q_s8(v71, (int8x16_t)xmmword_2226906C0).u64[0];
  v68 = vrev64q_s8(vmulq_s8(v67, v65));
  *(int8x16_t *)(*(_QWORD *)(v62 - 120) - 15 + v66) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v59 + (v66 & 0xF) - 15), *(int8x16_t *)(v56 - 15 + v66)), veorq_s8(*(int8x16_t *)((v66 & 0xF) + v60 - 14), *(int8x16_t *)(v58 + (v66 & 0xF) - 15))), vextq_s8(v68, v68, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a56 + 8 * (int)((13 * ((v61 & 0xFFFFFFF0) != 16)) ^ v64)) - 12))();
}

void sub_221A33558()
{
  JUMPOUT(0x221A334E4);
}

uint64_t sub_221A33564(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((a7 ^ 0x70) + 614 * (a7 ^ 0x180) - 1679) * (v7 == a3)) ^ a7))
                            - 12))();
}

uint64_t sub_221A335A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((353 * ((((a8 - 350) ^ (((a8 - 1220) & v8) == 0)) & 1) == 0)) ^ a8))
                                          - 8))(a1);
}

uint64_t sub_221A335E4@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  int8x16x4_t v63;

  v60 = v58 + a3 + v57;
  v61 = v60 + v52 - a1;
  v63.val[0].i64[0] = v61 & 0xF;
  v63.val[0].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 12) & 0xF;
  v63.val[1].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 11) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + ((102 * (a2 ^ 0x98)) ^ 6)) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 9) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 8) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)v60 - (_BYTE)a1 + 7) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)v60 - (_BYTE)a1 + 6) & 0xF;
  *(int8x8_t *)(v59 - 7 + v61) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v54 + v63.val[0].i64[0] - 7), *(int8x8_t *)(v51 - 7 + v61)), veor_s8(*(int8x8_t *)(v63.val[0].i64[0] + v55 - 6), *(int8x8_t *)(v53 + v63.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v63, (int8x16_t)xmmword_2226906D0), (int8x8_t)0x8787878787878787)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a51 + 8 * ((1531 * (a1 - (v56 & 0xFFFFFFF8) == -8)) ^ a2))
                                         - 12))((__n128)xmmword_2226906D0);
}

void sub_221A33704()
{
  JUMPOUT(0x221A33634);
}

uint64_t sub_221A3370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v26
                                                                                + 8
                                                                                * ((((v25 - 350) ^ 0x120) * (v24 == a7)) ^ v25))
                                                                    - 8))(a24, a2, a3, (v25 - 350) ^ 0x29Cu);
}

uint64_t sub_221A3374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v12 + (a6 + v8)) = *(_BYTE *)(v10 + ((a6 + v8) & 0xFLL)) ^ *(_BYTE *)(v6
                                                                                               + (a6 + v8)) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v8) & 0xF) + v11 + 1) ^ *(_BYTE *)(v9 + (((_BYTE)a6 + (_BYTE)v8) & 0xF)) ^ (((a6 + v8) & 0xF) * ((a5 ^ 0x9C) - 107));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((1008 * (a6 - 1 != v7)) ^ (a5 + 622))) - 4))();
}

uint64_t sub_221A337B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;

  v50 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v48 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x2CB40BEC8D7CDE9DLL), (int8x16_t)xmmword_2226906E0);
  if (v47)
    v51 = v50 == 0x39E8CCF6252BBBF8;
  else
    v51 = 1;
  v52 = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)(((((((_DWORD)a4 - 16) ^ v52) & 1) == 0) * (a4 + 763)) ^ a4)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_221A33830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  uint64_t v48;
  _BOOL4 v50;

  v50 = (_DWORD)a25 == v47 + 547374634 || (((_BYTE)a25 + 4) & 0xF) != 11 * (v47 ^ 0x1D3) - 539;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (v47 ^ (16 * v50))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_221A33880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57)
{
  uint64_t v57;

  return ((uint64_t (*)(void))(*(_QWORD *)(v57
                                        + 8
                                        * (a57 ^ (1830
                                                * (((2 * (a25 - ((2 * a55) & 0x73F15AF2) + 425223533)) & 0xF7EFFEEE ^ 0x73E15AE2)
                                                 + ((a25 - ((2 * a55) & 0x73F15AF2) + 425223533) ^ 0x420F520E)
                                                 - 277165155 != 1802685204))))
                            - 12))();
}

uint64_t sub_221A33948(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((a2 + a1 + 13 * (v2 ^ 0x20Fu) - 2079850918 > 7) * (v2 + 872)) ^ v2))
                            - 12))();
}

uint64_t sub_221A339C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((2 * a3) ^ 0x442) * ((v6 + a6 - 16) > 0xFFFFFFEF)) ^ a3))
                            - 8))();
}

uint64_t sub_221A339FC(int a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (a2 + a1 + v6);
  v10 = v9 + v7 + 1;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  ++v11;
  v14 = v4 + v11;
  v15 = v5 + v12;
  v16 = v5 + v11;
  v17 = v3 + v12;
  v18 = v3 + v11;
  v20 = v14 > v7 && v13 < v10;
  if (v16 > v7 && v15 < v10)
    v20 = 1;
  v23 = v18 > v7 && v17 < v10 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a3 ^ (1455 * (v23 ^ 1))))
                            - (((a3 + 727) - 416) ^ a3 ^ 0x141u)))();
}

uint64_t sub_221A33A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((((a6 - 2008942240) & 0x77BE03DF ^ 0x253)
                                                                         * (v6 < 0x10)) ^ a6))
                                                           - ((a6 + 1710980831) & 0x9A047FFE ^ 0x3E0)))(a1, a2, 0);
}

uint64_t sub_221A33AE4(int a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  v19.val[1].i64[0] = ((_BYTE)v8 + 9) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v8 + 8) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v8 + 7) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v8 + 6) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v8 + 5) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v8 + 4) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v8 + 3) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 2) & 0xF;
  v20.val[1].i64[0] = (v8 + 1) & 0xF;
  v20.val[1].i64[1] = v8 & 0xF;
  v20.val[2].i64[0] = (v8 - 1) & 0xF;
  v20.val[2].i64[1] = (v8 + 14) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 + 13) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 12) & 0xF;
  v12.i64[0] = 0x505050505050505;
  v12.i64[1] = 0x505050505050505;
  v13.i64[0] = 0x3232323232323232;
  v13.i64[1] = 0x3232323232323232;
  v14 = v9 + a2 + a1 - 539 + (a4 ^ 0x1FFu);
  v19.val[0].i64[0] = ((_BYTE)v9 + (_BYTE)a2 + (_BYTE)a1 - 27 + ~(_BYTE)a4) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v8 + 10) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_2226906C0).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_2226906C0).u64[0];
  v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 - 15 + v14), *(int8x16_t *)(v6 + (v14 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v7 + (v14 & 0xF) - 15), *(int8x16_t *)(v5 + (v14 & 0xF) - 15))));
  v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(v10 - 15 + v14) = vextq_s8(v17, v17, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((1673 * ((v4 & 0xFFFFFFF0) == 16)) ^ a4)) - 8))();
}

void sub_221A33C40()
{
  JUMPOUT(0x221A33BBCLL);
}

uint64_t sub_221A33C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,uint64_t a57)
{
  unsigned __int8 *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  unsigned __int8 v70;
  unint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  char *v140;
  char *v141;
  int v142;
  char *v143;
  int v144;
  char *v145;
  int v146;
  int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned __int8 *v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned __int8 v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  uint64_t v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  uint64_t v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  uint64_t v266;
  int v267;
  int v268;
  unint64_t v269;
  int v270;
  char *v271;
  int v272;
  int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  int v333;
  int v334;
  unsigned int v335;
  int v336;
  int v337;
  unsigned int v338;
  int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  int v354;
  unsigned int v355;
  int v356;
  int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  unsigned int v385;
  int v386;
  int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  int v397;
  int v398;
  unsigned int v399;
  int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  unsigned int v409;
  int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  int v414;
  char *v415;
  char *v416;
  int v417;
  char *v418;
  int v419;
  int v420;
  int v421;
  int v422;
  char *v423;
  int v424;
  uint64_t v425;
  uint64_t v426;
  int v427;
  char *v428;
  char *v429;
  char *v430;
  int v431;
  int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  char *v436;
  int v437;
  unsigned int v438;
  unsigned int v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  int v447;
  uint64_t v448;
  unsigned int v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unsigned int v453;
  unsigned int v454;
  uint64_t v455;
  unsigned int v456;
  uint64_t v457;
  unsigned __int8 v458;
  int v459;
  unsigned int v460;
  uint64_t v461;
  int v462;
  __int16 v463;
  uint64_t v464;
  int v465;
  unsigned int v466;
  uint64_t v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  uint64_t v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  uint64_t v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  uint64_t v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  uint64_t v486;
  int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  uint64_t v493;
  unsigned int v494;
  unsigned int v495;
  __int16 v496;
  unsigned int v497;
  int v498;
  uint64_t v499;
  unsigned int v500;
  int v501;
  unsigned __int8 v502;
  unsigned int v503;
  uint64_t v504;
  int v505;
  int v506;
  unsigned int v507;
  unsigned int v508;
  uint64_t v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  uint64_t v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  uint64_t v518;
  unsigned int v519;
  int v520;
  int v521;
  int v522;
  uint64_t v523;
  int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  uint64_t v529;
  int v530;
  int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  uint64_t v535;
  int v536;
  int v537;
  unsigned int v538;
  int v539;
  int v540;
  uint64_t v541;
  int v542;
  unsigned int v543;
  int v544;
  uint64_t v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  int v549;
  int v550;
  uint64_t v551;
  int v552;
  unsigned int v553;
  int v554;
  unsigned int v555;
  uint64_t v556;
  int v557;
  unsigned int v558;
  int v559;
  unsigned int v560;
  int v561;
  uint64_t v562;
  int v563;
  int v564;
  int v565;
  uint64_t v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  uint64_t v571;
  __int16 v572;
  int v573;
  uint64_t v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  uint64_t v578;
  int v579;
  uint64_t v580;
  int v581;
  uint64_t v582;
  unsigned int v583;
  char *v584;
  uint64_t v585;
  uint64_t v586;
  unint64_t v587;
  unsigned int v588;
  int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  int v595;
  int v596;
  unsigned int v597;
  int v598;
  unsigned int v599;
  int v600;
  int v601;
  unsigned int v602;
  int v603;

  v62 = v59 - 326;
  v63 = (2 * (v59 - 326)) ^ 0x256;
  *(_DWORD *)(v61 - 124) = v63;
  v64 = *(_QWORD *)(v60 + 8 * (v59 - 479)) - 4;
  v65 = *(_QWORD *)(v60 + 8 * ((v59 - 326) ^ 0xA7));
  v66 = (*(unsigned __int8 *)(v65 + (*v57 ^ 0xB1)) ^ 0xA7) << (v63 - 86);
  v67 = *(_QWORD *)(v60 + 8 * ((v59 - 326) ^ 0x24));
  v68 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEBLL) ^ 0x49));
  v69 = v66 | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF6) ^ 0xD7)) ^ 0x96) << 8);
  HIDWORD(v71) = v68 ^ 2;
  LODWORD(v71) = (v68 ^ 0xFFFFFF9F) << 24;
  v70 = v71 >> 26;
  v72 = *(_QWORD *)(v60 + 8 * (v62 - 127));
  v73 = *(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBECLL) ^ 0xB8));
  v74 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEFLL) ^ 0x6BLL));
  HIDWORD(v71) = v74 ^ 2;
  LODWORD(v71) = (v74 ^ 0xFFFFFF9F) << 24;
  v75 = ((v71 >> 26) ^ 0x53) << 16;
  LOBYTE(v68) = *(_BYTE *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEALL) ^ 0x2ELL));
  v76 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF7) ^ 0x47));
  HIDWORD(v71) = v76 ^ 2;
  LODWORD(v71) = (v76 ^ 0xFFFFFF9F) << 24;
  v77 = v69 | (*(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF5) ^ 0xECLL)) + 119) ^ 9 | (((v71 >> 26) ^ 0x1E) << 16);
  v78 = v75 | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEELL) ^ 0x77)) ^ 0x59) << 8);
  v79 = (*(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF1) ^ 0xA9)) + 119) | ((*(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF2) ^ 0x30)) ^ 0xA3) << 8);
  v80 = *(unsigned __int8 *)(v67 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF3) ^ 0xCBLL));
  LOBYTE(v67) = *(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBE9) ^ 0x36)) + 119;
  HIDWORD(v71) = v80 ^ 2;
  LODWORD(v71) = (v80 ^ 0xFFFFFF9F) << 24;
  v81 = ((v70 ^ 0xFB) << 16) | ((v73 ^ 0x1F) << 24) | ((v68 ^ 0x53) << 8);
  LOBYTE(v64) = *(_BYTE *)(v72 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBEDLL) ^ 0xB5));
  v82 = v79 & 0xFF00FFFF | (((v71 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v65
                                                                                                + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF4) ^ 0x35)) ^ 0x68) << 24);
  v83 = *(_QWORD *)(v60 + 8 * (v62 ^ 0xCD)) - 8;
  v84 = v78 | ((*(unsigned __int8 *)(v65 + (*(unsigned __int8 *)(v58 - 0x39E8CCF6252BBBF0) ^ 0xBFLL)) ^ 0x71) << 24);
  v85 = v70 ^ 0x61u;
  v86 = *(_QWORD *)(v60 + 8 * (v62 ^ 0x40)) - 8;
  LODWORD(v65) = *(_DWORD *)(v83 + 4 * (v67 ^ 0xFDu)) ^ 0x5859772F ^ *(_DWORD *)(v86 + 4 * v85);
  v87 = v73 ^ 0x8Au;
  v88 = *(_QWORD *)(v60 + 8 * (v62 ^ 3)) - 12;
  LODWORD(v65) = (v65 - 1142355399 + (~(2 * v65) | 0x882DEB8D) + 1) ^ *(_DWORD *)(v88 + 4 * v87);
  LODWORD(v85) = v65 - ((2 * v65) & 0xFEC65660);
  v89 = *(_QWORD *)(v60 + 8 * (int)(v62 & 0x8524C8B7)) - 4;
  LOBYTE(v67) = v67 ^ 0x2A;
  v588 = v81 & 0xFFFFFF00 | v67;
  LOBYTE(v64) = (v64 + 119) ^ 0xA8;
  v90 = v84 & 0xFFFFFF00 | v64;
  v587 = __PAIR64__(v77, v82);
  v473 = *(_DWORD *)(v89 + 4 * (v68 ^ 0x6Bu)) ^ v77 ^ (v85 - 10278096);
  *(_DWORD *)(v61 - 176) = v473 ^ v82;
  v91 = v473 ^ v82 ^ 0x4D;
  v502 = v473 ^ v82 ^ 0x4D;
  *(_DWORD *)(v61 - 168) = v91 ^ v90;
  v92 = v91 ^ v90 ^ (v588 - 2 * ((v81 & 0x4D356500 | v67 & 0xD7) ^ v67 & 0x10) - 852138553);
  v516 = ((unsigned __int16)(v91 ^ v90 ^ ((v81 & 0xFF00 | v67)
                                                         - 2 * ((v81 & 0x6500 | v67 & 0xD7) ^ v67 & 0x10)
                                                         + 26055)) >> 8);
  v505 = BYTE2(v92);
  LODWORD(v87) = *(_DWORD *)(v89 + 4 * (v516 ^ 0x9Fu)) ^ *(_DWORD *)(v86 + 4 * (BYTE2(v92) ^ 0x8Bu));
  v93 = v92 ^ 0x77C2486E;
  v514 = v92;
  v94 = ((v87 ^ 0xF8092AD9) - ((2 * (v87 ^ 0xF8092AD9)) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83
                                                                                                + 4
                                                                                                * (v92 ^ 0xEEu));
  v510 = HIBYTE(v93);
  v95 = v473 ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v93) ^ 0x65)) ^ (v94 - ((2 * v94) & 0x77D21472) - 1142355399);
  HIDWORD(v586) = v90;
  v96 = v90 - 2 * (v90 & 0x33FC9F2E ^ v64 & 4) - 1275289814;
  LODWORD(v64) = v95 ^ 0xB3FC9F2A;
  v97 = v95;
  *(_DWORD *)(v61 - 160) = v95;
  v98 = v95 ^ 0xB3FC9F2A ^ v96;
  v99 = v98 ^ v93;
  LODWORD(v87) = v98;
  *(_DWORD *)(v61 - 128) = v98;
  v530 = BYTE2(v99);
  v533 = BYTE1(v99);
  v100 = *(_DWORD *)(v86 + 4 * (BYTE2(v99) ^ 0x2Eu)) ^ *(_DWORD *)(v89 + 4 * (BYTE1(v99) ^ 0x9Bu)) ^ 0xF8092AD9;
  v601 = v99;
  v101 = (v100 - ((2 * v100) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v99 ^ 0xD2u));
  v102 = v99 ^ 0xB978221C;
  *(_DWORD *)(v61 - 192) = HIBYTE(v99);
  v103 = (v101 - ((2 * v101) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v99) ^ 0x69));
  v104 = v103 ^ v91 ^ 0xD520653E;
  v557 = v103 ^ v91;
  *(_DWORD *)(v61 - 152) = v104 ^ v98;
  v105 = ((v104 ^ v87 ^ 0x4FA668D4) - ((2 * (v104 ^ v87 ^ 0x4FA668D4)) & 0x9BBF06AA) - 840989867) ^ v102;
  v106 = v105 ^ 0x9547167F;
  v567 = ((v105 ^ 0x9547167F) >> 16);
  v589 = ((unsigned __int16)(v105 ^ 0x167F) >> 8);
  v107 = *(_DWORD *)(v86 + 4 * (v567 ^ 0x89u)) ^ *(_DWORD *)(v89 + 4 * (v589 ^ 0x3Au)) ^ 0xF8092AD9;
  v575 = (((v104 ^ v87 ^ 0xD4) - ((2 * (v104 ^ v87 ^ 0xD4)) & 0xAA) + 85) ^ v102);
  v108 = (v107 - ((2 * v107) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v575 ^ 0xE4u));
  v592 = HIBYTE(v106);
  v109 = (v108 - ((2 * v108) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v106) ^ 0x1D));
  v538 = v103 ^ v97;
  v599 = (v109 - ((2 * v109) & 0xA38B4F64) - 775575630) ^ v103 ^ v97;
  v110 = v599 ^ 0xD1C5A7B2 ^ v103 ^ v91;
  *(_DWORD *)(v61 - 224) = v599 ^ 0xD1C5A7B2;
  *(_DWORD *)(v61 - 256) = v110;
  v111 = ((v110 ^ 0xFE25CD6D) - ((2 * (v110 ^ 0xFE25CD6D)) & 0x9BBF06AA) - 840989867) ^ v102;
  *(_DWORD *)(v61 - 200) = BYTE1(v111);
  v112 = *(_DWORD *)(v89 + 4 * (BYTE1(v111) ^ 0x6Fu));
  *(_DWORD *)(v61 - 208) = BYTE2(v111);
  v113 = *(_DWORD *)(v86 + 4 * (BYTE2(v111) ^ 0xA8u));
  v524 = v64 ^ ((v473 ^ v82 ^ 0xBAF72DE4) - ((2 * (v473 ^ v82 ^ 0xBAF72DE4)) & 0x67F93E54) - 1275289814);
  *(_DWORD *)(v61 - 232) = HIBYTE(v111);
  LODWORD(v67) = ((v112 ^ v113 ^ 0xF8092AD9) - ((2 * (v112 ^ v113 ^ 0xF8092AD9)) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v111) ^ 0x85));
  *(_DWORD *)(v61 - 248) = v111;
  LODWORD(v67) = (v67 - ((2 * v67) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v111 ^ 0x25u));
  v602 = v110 ^ v104 ^ v98;
  v114 = (v67 - ((2 * v67) & 0xDFAE912E) + 1876379799) ^ v104 ^ v602;
  v115 = (v67 - ((2 * v67) & 0xDFAE912E) + 1876379799) ^ v104;
  *(_DWORD *)(v61 - 132) = v114;
  LODWORD(v64) = v111 ^ v114 ^ 0x355EFF67;
  v116 = v114 ^ 0x355EFF67;
  v463 = v114 ^ 0xFF67;
  *(_DWORD *)(v61 - 240) = v111;
  v500 = (v64 ^ 0x6D8C20B0) >> 24;
  v490 = ((v64 ^ 0x6D8C20B0) >> 16);
  v117 = *(_DWORD *)(v86 + 4 * (v490 ^ 0x89u)) ^ *(_DWORD *)(v88 + 4 * (v500 ^ 0x1D));
  v487 = ((unsigned __int16)(v64 ^ 0x20B0) >> 8);
  v118 = ((v117 ^ 0xBC830BD0) - 2 * ((v117 ^ 0xBC830BD0) & 0x7F632B32 ^ v117 & 2) - 10278096) ^ *(_DWORD *)(v89 + 4 * (v487 ^ 0x3Au));
  *(_DWORD *)(v61 - 184) = v599 ^ 0xD1C5A7B2 ^ v67;
  v481 = v64;
  LODWORD(v64) = v599 ^ 0xD1C5A7B2 ^ v67 ^ *(_DWORD *)(v83 + 4 * (v64 ^ 0x2Bu)) ^ (v118 - ((2 * v118) & 0xBE66ED8C) + 1597208262);
  v119 = v64 ^ v115 ^ 0x7C166C11;
  v120 = v64;
  v579 = v64;
  LODWORD(v67) = (v119 ^ v111) >> 24;
  *(_DWORD *)(v61 - 216) = v67;
  v569 = (v119 ^ v111);
  LODWORD(v67) = *(_DWORD *)(v88 + 4 * (v67 ^ 0x9B)) ^ *(_DWORD *)(v83 + 4 * (v569 ^ 0x31u)) ^ 0xE4DA7CFF;
  v546 = ((v119 ^ v111) >> 8) ^ 0x86839A;
  v554 = ((unsigned __int16)(v119 ^ v111) >> 8) ^ 0x9A;
  v121 = (v67 - ((2 * v67) & 0xFEC65660) - 10278096) ^ *(_DWORD *)(v89
                                                                 + 4
                                                                 * (((unsigned __int16)(v119 ^ v111) >> 8) ^ 0xA0u));
  LODWORD(v67) = v119 ^ v111 ^ 0xE42FE6B3;
  v552 = ((v119 ^ v111) >> 16);
  LODWORD(v64) = (v121 - ((2 * v121) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (v552 ^ 0xAu));
  v122 = (v64 - ((2 * v64) & 0xD4DD4916) - 361847669) ^ v120;
  *(_DWORD *)(v61 - 136) = v122;
  v123 = v122 ^ 0x17ED3E21;
  v124 = v122 ^ 0x17ED3E21 ^ v119;
  v496 = v122 ^ 0x3E21;
  v560 = v119 ^ v116;
  LODWORD(v85) = v119;
  v536 = v119;
  v125 = v119 ^ v116 ^ 0x4158620E;
  *(_DWORD *)(v61 - 140) = v125;
  v126 = ((v124 ^ 0x5A137D54) - ((2 * (v124 ^ 0x5A137D54)) & 0xACCAC996) - 697998133) ^ v125;
  v127 = ((v126 ^ 0xB97FFD6F) - 2 * ((v126 ^ 0x3EE0256F) & 4 ^ (v126 ^ 0xB97FFD6F) & 0x62AC7C1D) + 1655471129) ^ v67 ^ 0x479AB031;
  v581 = (((v126 ^ 0x6F) - 2 * ((v126 ^ 0x6F) & 4 ^ (v126 ^ 0x6F) & 0x1D) + 25) ^ v67);
  v128 = *(_DWORD *)(v89 + 4 * (BYTE1(v127) ^ 0x3Au)) ^ *(_DWORD *)(v83 + 4 * (v581 ^ 0xAAu)) ^ 0xA0505DF6;
  v129 = (v128 - ((2 * v128) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (BYTE2(v127) ^ 0x89u));
  v130 = (v129 - ((2 * v129) & 0x77D21472) - 1142355399) ^ *(_DWORD *)(v88 + 4 * (HIBYTE(v127) ^ 0x1D));
  v131 = v130 ^ v85;
  v132 = ((v130 ^ v85 ^ 0xA6C48CD5) - ((2 * (v130 ^ v85 ^ 0xA6C48CD5)) & 0xC558F832) + 1655471129) ^ v67;
  v133 = *(_DWORD *)(v88 + 4 * (HIBYTE(v132) ^ 5)) ^ *(_DWORD *)(v89 + 4 * (BYTE1(v132) ^ 0x6Fu)) ^ 0x448A2109;
  v565 = (((v130 ^ v85 ^ 0xD5) - ((2 * (v130 ^ v85 ^ 0xD5)) & 0x32) + 25) ^ v67);
  v134 = (v133 - ((2 * v133) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83 + 4 * (v565 ^ 0x25u));
  v135 = v123 ^ v130;
  v136 = v123 ^ v130 ^ *(_DWORD *)(v86 + 4 * (BYTE2(v132) ^ 0xA8u)) ^ (v134 - ((2 * v134) & 0xED403D2) + 124387817);
  v137 = v126 ^ 0x3EE0256F ^ v136;
  v583 = v137;
  v595 = ((unsigned __int16)(v137 ^ v132) >> 8);
  v469 = (v137 ^ v132) >> 24;
  LODWORD(v88) = *(_DWORD *)(v89 + 4 * (v595 ^ 0x44u)) ^ *(_DWORD *)(v88 + 4 * (v469 ^ 0x47));
  v476 = (v137 ^ v132);
  v138 = ((v88 ^ 0x448A2109) - ((2 * (v88 ^ 0x448A2109)) & 0xBE66ED8C) + 1597208262) ^ *(_DWORD *)(v83
                                                                                                 + 4 * (v476 ^ 0xD5u));
  v459 = ((v137 ^ v132) >> 16);
  v139 = (v138 - ((2 * v138) & 0xED403D2) + 124387817) ^ *(_DWORD *)(v86 + 4 * (v459 ^ 0xCBu));
  LODWORD(v586) = v136 ^ 0x29F34BD1 ^ (v139 - ((2 * v139) & 0x5208CCF0) - 1459329416);
  v465 = v136 ^ v131;
  v466 = v136;
  v458 = BYTE2(v137) ^ 0x63;
  HIDWORD(v585) = v136 ^ v131 ^ 0xBC788024 ^ (v586 - ((2 * v586) & 0x31B49E60) - 1730523344);
  LODWORD(v585) = HIDWORD(v585) ^ v137 ^ 0x42632BF0 ^ 0x4662A266;
  HIDWORD(a49) = (v585 - 2 * (v585 & 0x60991DD ^ (HIDWORD(v585) ^ v137 ^ 0x42632BF0) & 9) + 101290452) ^ v137 ^ v132;
  v140 = (char *)*(&off_24E772B10 + (v62 ^ 0x39)) - 12;
  LODWORD(v86) = (((v135 ^ 0x1B9155BDu) >> 16)
                + 441139960
                + ((2 * ((v135 ^ 0x1B9155BDu) >> 16) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v135 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v88) = ((BYTE2(v132) ^ 0x89) + 441139959 - ((2 * (BYTE2(v132) ^ 0x89) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v132) ^ 0xA4)];
  v141 = (char *)*(&off_24E772B10 + v62 + 40) - 4;
  v142 = (v86 - ((2 * v86) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v135) ^ 0x47)];
  LODWORD(v89) = v88 - ((2 * v88) & 0xB6BB4012);
  v594 = v62;
  v143 = (char *)*(&off_24E772B10 + v62 + 14) - 4;
  v144 = (v89 - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v132) ^ 0xCC)];
  v572 = v126 ^ 0x256F ^ v131;
  v145 = (char *)*(&off_24E772B10 + v62 + 55) - 12;
  LODWORD(v67) = *(_DWORD *)&v145[4 * (v126 ^ 0x6F ^ v131 ^ 0x53)];
  v146 = ((v126 ^ 0x3EE0256F ^ v131) >> 16);
  LODWORD(v67) = *(_DWORD *)&v140[4 * (v146 ^ 0xAA)] ^ *(_DWORD *)&v143[4 * (((v126 ^ 0x3EE0256F ^ v131) >> 24) ^ 0x3E)] ^ ((v146 ^ 0x87) + 441139960 + ((2 * (v146 ^ 0x87) + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * v67 - ((362609534 * v67 - 27765796) & 0xB6BB4012) + 1518979575);
  v147 = *(_DWORD *)&v145[4 * (v131 ^ 0x74)];
  v148 = (181304767 * v147 - ((362609534 * v147 + 2119717852) & 0x5C4753DE) + 760206301) ^ *(_DWORD *)&v141[4 * (BYTE1(v131) ^ 0x5A)];
  v577 = v148 - ((2 * v148) & 0xB6BB4012);
  v543 = BYTE1(v132) ^ 0xB0;
  v563 = v144 - ((2 * v144) & 0x5C4753DE);
  v549 = v67 - ((2 * v67) & 0x5C4753DE);
  v591 = (v142 - ((2 * v142) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * ((v135 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)&v145[4 * (v135 ^ 0x7D)] + 2133600750);
  v149 = *(_DWORD *)&v140[4 * (((v524 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v524 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                      + 441139959
                                                                                      - ((2
                                                                                        * (((v524 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                        + 160207960) & 0x9089196));
  v150 = *(_DWORD *)(v61 - 128) ^ 0x31676F78;
  v151 = *(_DWORD *)&v140[4 * (BYTE2(v150) ^ 0x7B)] ^ ((BYTE2(v150) ^ 0x56)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v150) ^ 0x56) + 88) & 0x196 ^ 0xF6F76FFF));
  v152 = (v151 - 614621175 + (~(2 * v151) | 0x4944BFED) + 1) ^ *(_DWORD *)&v143[4 * HIBYTE(v150)];
  v153 = *(_DWORD *)&v140[4 * (v530 ^ 0x34)] ^ ((v530 ^ 0x19)
                                              + 441139960
                                              + ((2 * (v530 ^ 0x19) + 88) & 0x196 ^ 0xF6F76FFF));
  v154 = (v153 - ((2 * v153) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v533 ^ 5)];
  v531 = v152 - ((2 * v152) & 0x5C4753DE);
  v534 = v154 - ((2 * v154) & 0xB6BB4012);
  v155 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 160) ^ 0xDF)];
  v156 = *(_DWORD *)(v61 - 160) ^ 0x5A18571F;
  v157 = *(_DWORD *)&v143[4 * HIBYTE(v156)] ^ ((BYTE2(v156) ^ 0xC1)
                                             + 441139960
                                             + ((2 * (BYTE2(v156) ^ 0xC1) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (BYTE2(v156) ^ 0xEC)] ^ ((~(362609534 * v155 - 27765796) | 0x4944BFED) + 181304767 * v155 + 1518979576);
  v527 = v157 - ((2 * v157) & 0x5C4753DE);
  LODWORD(v67) = *(_DWORD *)&v143[4 * ((v524 ^ 0xE9B45E6C) >> 24)] ^ (v149 - ((2 * v149) & 0xB6BB4012) - 614621175);
  v468 = v524 ^ 0xAC;
  v519 = BYTE1(v524) ^ 0xB4;
  v521 = v67 - ((2 * v67) & 0x5C4753DE);
  LOWORD(v89) = v124 ^ 0x8EA4;
  v158 = v124 ^ 0x35C48CD5;
  v159 = v126 ^ 0x5C7FFD6F;
  v525 = HIBYTE(v126) ^ 0x2B;
  v160 = *(_DWORD *)&v140[4 * (BYTE2(v127) ^ 0xDE)] ^ ((BYTE2(v127) ^ 0xF3)
                                                     + 441139959
                                                     - ((2 * (BYTE2(v127) ^ 0xF3) + 160207960) & 0x9089196));
  v161 = *(_DWORD *)&v140[4 * (BYTE2(v158) ^ 0xFE)] ^ ((BYTE2(v158) ^ 0xD3)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v158) ^ 0xD3) + 88) & 0x196 ^ 0xF6F76FFF));
  v162 = *(_DWORD *)&v145[4 * (v126 ^ 0xAA)];
  v163 = (v160 - ((2 * v160) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v127) ^ 0x36)];
  v164 = BYTE2(*(_DWORD *)(v61 - 136));
  v165 = *(_DWORD *)&v140[4 * (v164 ^ 0xC1)] ^ ((v164 ^ 0xEC)
                                              + 441139960
                                              + ((2 * (v164 ^ 0xEC) + 88) & 0x196 ^ 0xF6F76FFF));
  v166 = (v165 - ((2 * v165) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (HIBYTE(v496) ^ 0x8B)];
  v507 = v163 - ((2 * v163) & 0x5C4753DE);
  v512 = v166 - ((2 * v166) & 0xB6BB4012);
  v167 = *(_DWORD *)&v141[4 * (BYTE1(v159) ^ 0x20)] ^ ((BYTE2(v159) ^ 0xD7)
                                                     + 441139959
                                                     - ((2 * (BYTE2(v159) ^ 0xD7) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v159) ^ 0xFA)] ^ (181304767 * v162 - ((362609534 * v162 + 2119717852) & 0x5C4753DE) + 760206301);
  v168 = (v161 - ((2 * v161) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * HIBYTE(v158)] ^ (181304767
                                                                                              * *(_DWORD *)&v145[4 * (v89 ^ 0x99)]
                                                                                              + 2133600750);
  v477 = BYTE1(v89) ^ 0x14;
  v456 = v496 ^ 0xA3;
  v484 = v168 - ((2 * v168) & 0x5C4753DE);
  v497 = v167 - ((2 * v167) & 0xB6BB4012);
  v478 = v473 ^ 0x2BEAE26B;
  LODWORD(v67) = *(_DWORD *)&v140[4 * (((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               + 441139960
                                                                                               + ((2
                                                                                                 * (((v473 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * *(_DWORD *)&v145[4 * (v473 ^ 0x1E)] + 2133600750);
  LODWORD(v67) = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v473) ^ 8)];
  v169 = *(_DWORD *)&v140[4 * (v505 ^ 0x15)] ^ ((v505 ^ 0x38)
                                              + 441139960
                                              + ((2 * (v505 ^ 0x38) + 88) & 0x196 ^ 0xF6F76FFF));
  v170 = *(_DWORD *)&v145[4 * (v502 ^ 0x55)];
  v506 = v67 - ((2 * v67) & 0xB6BB4012);
  v462 = BYTE2(*(_DWORD *)(v61 - 168));
  v503 = (v462 ^ 0xA7) + 441139960 + ((2 * (v462 ^ 0xA7) + 88) & 0x196 ^ 0xF6F76FFF);
  LODWORD(v67) = (v169 - ((2 * v169) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v516 ^ 0xF5)] ^ (181304767 * *(_DWORD *)&v145[4 * (v514 ^ 0x9D)] + 2133600750);
  v517 = v67 - ((2 * v67) & 0xB6BB4012);
  v171 = *(_DWORD *)(v61 - 176);
  v172 = (181304767 * v170 - ((362609534 * v170 - 27765796) & 0xB6BB4012) + 1518979575) ^ ((BYTE2(v171) ^ 0xBA)
                                                                                         + 441139960
                                                                                         + ((2 * (BYTE2(v171) ^ 0xBA)
                                                                                           + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v143[4 * (HIBYTE(v171) ^ 0x2F)] ^ *(_DWORD *)&v140[4 * (BYTE2(v171) ^ 0x97)];
  v474 = v172 - ((2 * v172) & 0x5C4753DE);
  v173 = BYTE2(*(_DWORD *)(v61 - 132));
  v174 = *(_DWORD *)&v140[4 * (v173 ^ 0x25)] ^ ((v173 ^ 8) + 441139960 + ((2 * (v173 ^ 8) + 88) & 0x196 ^ 0xF6F76FFF));
  LODWORD(v89) = *(_DWORD *)(v61 - 184);
  v175 = *(_DWORD *)&v140[4 * (BYTE2(v89) ^ 0x56)] ^ ((BYTE2(v89) ^ 0x7B)
                                                    + 441139960
                                                    + ((2 * (BYTE2(v89) ^ 0x7B) + 88) & 0x196 ^ 0xF6F76FFF));
  v176 = *(_DWORD *)&v145[4 * (v115 ^ 0xFB)];
  v177 = (v174 - ((2 * v174) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (HIBYTE(v463) ^ 0x60)] ^ (181304767 * *(_DWORD *)&v145[4 * (v463 ^ 0xC3)] + 2133600750);
  v178 = (181304767 * v176 - ((362609534 * v176 + 2119717852) & 0x5C4753DE) + 760206301) ^ *(_DWORD *)&v141[4 * (BYTE1(v115) ^ 0xEF)];
  LODWORD(v464) = v177 - ((2 * v177) & 0xB6BB4012);
  LODWORD(v457) = v178 - ((2 * v178) & 0xB6BB4012);
  v179 = (v175 - ((2 * v175) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (BYTE3(v89) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v145[4 * (v89 ^ 0x79)] + 2133600750);
  v180 = *(_DWORD *)&v140[4 * (v490 ^ 0x86)] ^ ((v490 ^ 0xAB)
                                              + 441139960
                                              + ((2 * (v490 ^ 0xAB) + 88) & 0x196 ^ 0xF6F76FFF));
  v181 = (v180 - ((2 * v180) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * v500];
  v454 = v487 ^ 0xEE;
  v453 = v481 ^ 0x8D;
  v491 = v181 - ((2 * v181) & 0x5C4753DE);
  v488 = v179 - ((2 * v179) & 0x5C4753DE);
  v482 = BYTE2(v115) ^ 0x16;
  v515 = (BYTE2(v115) ^ 0x73) + 441139960 + ((2 * (BYTE2(v115) ^ 0x73) + 88) & 0x196 ^ 0xF6F76FFF);
  v182 = *(_DWORD *)&v140[4 * (v459 ^ 0x8B)] ^ ((v459 ^ 0xA6)
                                              + 441139960
                                              + ((2 * (v459 ^ 0xA6) + 88) & 0x196 ^ 0xF6F76FFF));
  v501 = (v458 ^ 0xEC) + 441139959 - ((2 * (v458 ^ 0xEC) + 160207960) & 0x9089196);
  v183 = v469 ^ 0x22;
  v494 = HIBYTE(v115) ^ 0xE8;
  v184 = *(_DWORD *)&v140[4 * (BYTE2(v466) ^ 0xE8)] ^ ((BYTE2(v466) ^ 0xC5)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v466) ^ 0xC5) + 88) & 0x196 ^ 0xF6F76FFF));
  v185 = (181304767 * *(_DWORD *)&v145[4 * (v466 ^ 0xCA)] + 2133600750) ^ *(_DWORD *)&v143[4 * (HIBYTE(v466) ^ 0x8E)] ^ (v184 - ((2 * v184) & 0xB6BB4012) - 614621175);
  v472 = v465 ^ 0x44039AAA;
  v186 = (181304767 * *(_DWORD *)&v145[4 * (v465 ^ 0xDB)] + 2133600750) ^ (((v465 ^ 0x44039AAAu) >> 16)
                                                                                          + 441139960
                                                                                          + ((2
                                                                                            * ((v465 ^ 0x44039AAAu) >> 16)
                                                                                            + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v465 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  v470 = v185 - ((2 * v185) & 0x5C4753DE);
  v187 = (v186 - ((2 * v186) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v465) ^ 0xC0)];
  v188 = *(_DWORD *)&v143[4 * v183] ^ (181304767 * *(_DWORD *)&v145[4 * (v476 ^ 0xFE)] + 2133600750) ^ (v182 - ((2 * v182) & 0xB6BB4012) - 614621175);
  HIDWORD(v475) = v187 - ((2 * v187) & 0xB6BB4012);
  HIDWORD(v464) = v188 - ((2 * v188) & 0x5C4753DE);
  v189 = *(_DWORD *)&v145[4 * ((v103 ^ v97) ^ 0xEC)];
  v190 = *(_DWORD *)&v140[4 * (v567 ^ 0x32)] ^ ((v567 ^ 0x1F)
                                              + 441139960
                                              + ((2 * (v567 ^ 0x1F) + 88) & 0x196 ^ 0xF6F76FFF));
  v191 = *(_DWORD *)&v145[4 * (v557 ^ 0xE6)];
  LODWORD(v67) = *(_DWORD *)&v143[4 * (HIBYTE(v538) ^ 0xCA)] ^ ((BYTE2(v538) ^ 0x2F)
                                                              + 441139960
                                                              + ((2 * (BYTE2(v538) ^ 0x2F) + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (BYTE2(v538) ^ 2)] ^ (181304767 * v189 - ((362609534 * v189 - 27765796) & 0xB6BB4012) + 1518979575);
  v192 = (v190 - ((2 * v190) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (v589 ^ 0x8C)] ^ (181304767
                                                                                                * *(_DWORD *)&v145[4 * (v575 ^ 0xD9)]
                                                                                                + 2133600750);
  v193 = *(_DWORD *)&v143[4 * ((v557 ^ 0x49A657C7u) >> 24)] ^ ((((v557 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             + 441139960
                                                             + ((2
                                                               * (((v557 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                               + 88) & 0x196 ^ 0xF6F76FFF)) ^ *(_DWORD *)&v140[4 * (((v557 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v191 - ((362609534 * v191 - 27765796) & 0xB6BB4012) + 1518979575);
  v194 = *(_DWORD *)&v140[4 * (((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) ^ 0x2D)] ^ (((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) + 441139960 + ((2 * ((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 16) + 88) & 0x196 ^ 0xF6F76FFF));
  v576 = v592 ^ 0xAA;
  v590 = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4
                                                                        * (((unsigned __int16)(v103 ^ v97) >> 8) ^ 0x2E)];
  v568 = v192 - ((2 * v192) & 0xB6BB4012);
  v460 = BYTE1(v557) ^ 0xB9;
  LODWORD(v67) = (v194 - ((2 * v194) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4
                                                                                 * ((*(_DWORD *)(v61 - 152) ^ 0x715B7EABu) >> 24)] ^ (181304767 * *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 152) ^ 0x3B)] + 2133600750);
  v558 = v193 - ((2 * v193) & 0x5C4753DE);
  v539 = v67 - ((2 * v67) & 0x5C4753DE);
  v195 = *(_DWORD *)&v140[4 * (v552 ^ 0xC1)] ^ ((v552 ^ 0xEC)
                                              + 441139960
                                              + ((2 * (v552 ^ 0xEC) + 88) & 0x196 ^ 0xF6F76FFF));
  LODWORD(v67) = (v195 - ((2 * v195) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4
                                                                                  * ((v554 - ((2 * v546) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v145[4 * (v569 ^ 0xE2)] + 2133600750);
  v196 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 140) ^ 0xF0)];
  v197 = (181304767 * v196 - ((362609534 * v196 - 27765796) & 0xB6BB4012) + 1518979575) ^ *(_DWORD *)&v143[4 * (HIBYTE(v560) ^ 0x3E)];
  v570 = v67 - ((2 * v67) & 0xB6BB4012);
  v547 = v197 - ((2 * v197) & 0x5C4753DE);
  v555 = v536 ^ 0xEEA2BFA8;
  v198 = *(_DWORD *)&v140[4 * (((v536 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v536 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                      + 441139959
                                                                                      - ((2
                                                                                        * (((v536 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                        + 160207960) & 0x9089196));
  LODWORD(v67) = (181304767 * *(_DWORD *)&v145[4 * (v536 ^ 0x68)] + 2133600750) ^ *(_DWORD *)&v141[4 * (BYTE1(v536) ^ 0x55)] ^ (v198 - ((2 * v198) & 0x5C4753DE) - 1373394449);
  v449 = v458 ^ 0xC1;
  v199 = ((v579 ^ 0x231B9DB5u) >> 16);
  v593 = (v199 ^ 0xC1) + 441139960 + ((2 * (v199 ^ 0xC1) + 88) & 0x196 ^ 0xF6F76FFF);
  LODWORD(v452) = v67 - ((2 * v67) & 0xB6BB4012);
  v447 = BYTE2(v560);
  v553 = (BYTE2(v560) ^ 0xC8) + 441139960 + ((2 * (BYTE2(v560) ^ 0xC8) + 88) & 0x196 ^ 0xF6F76FFF);
  v200 = v599 ^ 0x406768A6;
  v201 = *(_DWORD *)&v145[4 * (v565 ^ 0x60)];
  v202 = *(_DWORD *)&v145[4 * (v601 ^ 0xFB)];
  v203 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 128) ^ 0xB8)];
  v204 = *(_DWORD *)&v145[4 * v468];
  v205 = *(_DWORD *)&v145[4 * v456];
  v206 = *(_DWORD *)&v145[4 * (v581 ^ 0xF0)];
  LODWORD(v85) = *(_DWORD *)(v61 - 168);
  v207 = *(_DWORD *)&v145[4 * (v85 ^ 0x57)];
  v208 = *(_DWORD *)&v145[4 * v453];
  v209 = *(_DWORD *)&v145[4 * (v583 ^ 0x78)];
  LODWORD(v67) = *(_DWORD *)&v145[4 * (v579 ^ 0x75)];
  v210 = *(_DWORD *)&v145[4 * (*(_DWORD *)(v61 - 248) ^ 0x74)];
  v211 = *(_DWORD *)&v145[4 * (v602 ^ 0x96)];
  v212 = *(_DWORD *)(v61 - 256);
  v213 = *(_DWORD *)&v145[4 * (v212 ^ 0x2A)];
  LODWORD(v145) = *(_DWORD *)&v145[4 * (v599 ^ 0x9F)];
  *(_DWORD *)(v61 - 248) = 181304767 * v201 + 2133600750;
  v600 = 181304767 * v202 + 2133600750;
  HIDWORD(v457) = 181304767 * v203 + 2133600750;
  HIDWORD(v467) = 181304767 * v204 + 2133600750;
  v561 = 181304767 * v205 + 2133600750;
  HIDWORD(v455) = 181304767 * v208 + 2133600750;
  LODWORD(v451) = 181304767 * v206 + 2133600750;
  HIDWORD(v451) = 181304767 * v67 + 2133600750;
  HIDWORD(v452) = 181304767 * (_DWORD)v145 + 2133600750;
  LODWORD(v145) = (181304767 * v210 - ((362609534 * v210 - 27765796) & 0xB6BB4012) + 1518979575) ^ *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 232) ^ 0x7B)];
  LODWORD(v67) = *(_DWORD *)&v140[4 * (BYTE2(v602) ^ 0x7B)] ^ ((BYTE2(v602) ^ 0x56)
                                                             + 441139960
                                                             + ((2 * (BYTE2(v602) ^ 0x56) + 88) & 0x196 ^ 0xF6F76FFF)) ^ (181304767 * v211 + 2133600750);
  LODWORD(v89) = (v67 - ((2 * v67) & 0x5C4753DE) - 1373394449) ^ *(_DWORD *)&v141[4 * (BYTE1(v602) ^ 0xCC)];
  v214 = *(_DWORD *)&v140[4 * (BYTE2(v200) ^ 0x3C)] ^ ((BYTE2(v200) ^ 0x11)
                                                     + 441139960
                                                     + ((2 * (BYTE2(v200) ^ 0x11) + 88) & 0x196 ^ 0xF6F76FFF));
  v215 = (181304767 * v213 + 2133600750) ^ ((BYTE2(v212) ^ 0x37)
                                          + 441139959
                                          - ((2 * (BYTE2(v212) ^ 0x37) + 160207960) & 0x9089196)) ^ *(_DWORD *)&v140[4 * (BYTE2(v212) ^ 0x1A)];
  v216 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0x5C4753DE);
  LODWORD(v145) = (v215 - ((2 * v215) & 0xB6BB4012) - 614621175) ^ *(_DWORD *)&v143[4 * (HIBYTE(v212) ^ 0xF9)];
  LODWORD(v67) = *(_DWORD *)(v61 - 208);
  HIDWORD(v448) = *(_DWORD *)&v140[4 * (BYTE2(v131) ^ 0x61)];
  *(_DWORD *)(v61 - 232) = *(_DWORD *)&v140[4 * (v462 ^ 0x8A)];
  v542 = *(_DWORD *)&v140[4 * (v482 ^ 0x48)];
  LODWORD(v450) = *(_DWORD *)&v140[4 * v449];
  v483 = *(_DWORD *)&v140[4 * (v199 ^ 0xEC)];
  HIDWORD(v461) = *(_DWORD *)&v140[4 * (v447 ^ 0xE5)];
  v598 = *(_DWORD *)&v140[4 * (v67 ^ 0x1A)];
  LODWORD(v140) = ((*(_DWORD *)(v61 - 240) >> 15) & 0x58 ^ 0x48) + (v67 ^ 0x4C64A1B);
  *(_DWORD *)(v61 - 240) = (_DWORD)v140 + 361035980 + ((2 * (_DWORD)v140) & 0x196 ^ 0xF6F76FFF);
  v217 = HIBYTE(v602) ^ 0xE5;
  *(_DWORD *)(v61 - 208) = *(_DWORD *)&v141[4 * v543];
  v544 = *(_DWORD *)&v141[4 * (HIBYTE(v572) ^ 0x8E)];
  v603 = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 128)) ^ 0x85)];
  HIDWORD(v450) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 160)) ^ 0xBD)];
  *(_DWORD *)(v61 - 160) = *(_DWORD *)&v141[4 * v519];
  HIDWORD(v446) = *(_DWORD *)&v141[4 * v477];
  LODWORD(v448) = *(_DWORD *)&v141[4 * (BYTE1(v127) ^ 0x1A)];
  *(_DWORD *)(v61 - 256) = *(_DWORD *)&v141[4 * (BYTE1(v85) ^ 0xF5)];
  *(_DWORD *)(v61 - 176) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 176)) ^ 0xD6)];
  v520 = *(_DWORD *)&v141[4 * v454];
  HIDWORD(a25) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 184)) ^ 0xD7)];
  v573 = *(_DWORD *)&v141[4 * (BYTE1(v583) ^ 0x76)];
  v218 = *(_DWORD *)&v141[4 * (BYTE1(v466) ^ 0x16)];
  LODWORD(v445) = *(_DWORD *)&v141[4 * (v595 ^ 0xBE)];
  *(_DWORD *)(v61 - 184) = *(_DWORD *)&v141[4 * v460];
  v596 = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 152)) ^ 0xFE)];
  LODWORD(v446) = *(_DWORD *)&v141[4 * (BYTE1(v579) ^ 0x77)];
  HIDWORD(v445) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 140)) ^ 0x95)];
  *(_DWORD *)(v61 - 200) = *(_DWORD *)&v141[4 * (*(_DWORD *)(v61 - 200) ^ 0x84)];
  LODWORD(v467) = *(_DWORD *)&v141[4 * (BYTE1(v212) ^ 0x2E)];
  v219 = v89 - ((2 * v89) & 0xB6BB4012);
  LODWORD(v89) = *(_DWORD *)&v141[4 * (BYTE1(*(_DWORD *)(v61 - 224)) ^ 0xC8)];
  LODWORD(v444) = *(_DWORD *)&v143[4 * (HIBYTE(v131) ^ 0xB2)];
  *(_DWORD *)(v61 - 152) = v563 - 1373394449;
  v564 = v549 - 1373394449;
  *(_DWORD *)(v61 - 192) = *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 192) ^ 7)];
  *(_DWORD *)(v61 - 224) = v531 - 1373394449;
  LODWORD(v455) = v527 - 1373394449;
  LODWORD(v461) = v521 - 1373394449;
  v550 = *(_DWORD *)&v143[4 * (HIBYTE(*(_DWORD *)(v61 - 136)) ^ 0xFB)];
  HIDWORD(v443) = v507 - 1373394449;
  LODWORD(v443) = v484 - 1373394449;
  v485 = v474 - 1373394449;
  v532 = v491 - 1373394449;
  HIDWORD(v444) = v488 - 1373394449;
  LODWORD(v67) = v470 - 1373394449;
  v508 = v558 - 1373394449;
  LODWORD(v475) = v539 - 1373394449;
  v548 = v547 - 1373394449;
  v522 = v216 - 1373394449;
  v528 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0x5C4753DE) - 1373394449;
  v559 = *(_DWORD *)&v143[4 * v525];
  v489 = *(_DWORD *)&v143[4 * (BYTE3(v85) ^ 0xB8)];
  v492 = *(_DWORD *)&v143[4 * HIBYTE(v478)];
  v479 = *(_DWORD *)&v143[4 * (v510 ^ 0x4B)];
  v540 = *(_DWORD *)&v143[4 * (HIBYTE(*(_DWORD *)(v61 - 132)) ^ 0x17)];
  v526 = *(_DWORD *)&v143[4 * v494];
  v220 = *(_DWORD *)&v143[4 * (HIBYTE(v583) ^ 0xA6)];
  v221 = *(_DWORD *)&v143[4 * HIBYTE(v472)];
  v511 = *(_DWORD *)&v143[4 * v576];
  LODWORD(v145) = v89 ^ (v214 - ((2 * v214) & 0x5C4753DE) - 1373394449);
  v222 = *(_DWORD *)&v143[4 * ((v579 ^ 0x231B9DB5u) >> 24)];
  v537 = *(_DWORD *)&v143[4 * (*(_DWORD *)(v61 - 216) ^ 0x38)];
  v223 = *(_DWORD *)&v143[4 * HIBYTE(v555)];
  HIDWORD(v471) = *(_DWORD *)&v143[4 * v217];
  LODWORD(v471) = *(_DWORD *)&v143[4 * HIBYTE(v200)];
  v224 = v577 - 614621175;
  v495 = v534 - 614621175;
  v225 = v497 - 614621175;
  *(_DWORD *)(v61 - 216) = v506 - 614621175;
  v498 = v517 - 614621175;
  *(_DWORD *)(v61 - 168) = v568 - 614621175;
  v226 = v570 - 614621175;
  v227 = v452 - 614621175;
  v228 = v219 - 614621175;
  v229 = (_DWORD)v145 - ((2 * (_DWORD)v145) & 0xB6BB4012) - 614621175;
  v230 = v591 ^ v590 ^ 0x6285F181;
  v231 = v67 ^ v218 ^ v230;
  v232 = (char *)*(&off_24E772B10 + v594 + 23) - 4;
  v233 = (uint64_t)*(&off_24E772B10 + (v594 ^ 0xA5));
  v234 = (uint64_t)*(&off_24E772B10 + v594 + 21);
  v235 = (uint64_t)*(&off_24E772B10 + v594 - 141);
  v236 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 109) ^ 0x41)) ^ 5) & 0xFF00FFFF | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 111) ^ 0x40)) - 106) ^ 0x5A) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 110) ^ 0xBBLL)) ^ 0xD0) << 8) | ((v232[*(unsigned __int8 *)(v61 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v61 - 112) - ((2 * *(unsigned __int8 *)(v61 - 112)) & 0xCA) - 27) ^ 0x84) << 24);
  v584 = v232;
  v237 = *(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 97) ^ 0x74)) ^ 0xA2 | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 99) ^ 0xF3)) - 106) ^ 2) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 98) ^ 0x20)) ^ 0x3A) << 8) | ((v232[*(unsigned __int8 *)(v61 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v61 - 100) - ((2 * *(unsigned __int8 *)(v61 - 100)) & 0xCA) - 27) ^ 0x85) << 24);
  v578 = v235;
  v580 = v234;
  v238 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 105) ^ 0xE4)) ^ 0x33) & 0xFF00FFFF | ((v232[*(unsigned __int8 *)(v61 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v61 - 108) - ((2 * *(unsigned __int8 *)(v61 - 108)) & 0xCA) - 27) ^ 0xFFFFFFE1) << 24) | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 107) ^ 0x27)) - 106) ^ 0x96) << 16) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 106) ^ 9)) ^ 0xD5) << 8);
  v239 = *(unsigned __int8 **)(v61 - 120);
  v582 = v233;
  v240 = (*(unsigned __int8 *)(v235 + (*(unsigned __int8 *)(v61 - 101) ^ 0xF2)) ^ 0x8A) & 0xFF00FFFF | ((v232[*(unsigned __int8 *)(v61 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v61 - 104) - ((2 * *(unsigned __int8 *)(v61 - 104)) & 0xCA) - 27) ^ 0xE0) << 24) | ((*(unsigned __int8 *)(v234 + (*(unsigned __int8 *)(v61 - 102) ^ 0xBELL)) ^ 0x72) << 8) & 0xFF00FFFF | (((*(_BYTE *)(v233 + (*(unsigned __int8 *)(v61 - 103) ^ 0xE9)) - 106) ^ 0x8A) << 16);
  if ((v231 & 0x80) != 0)
    v241 = -128;
  else
    v241 = 128;
  *(_DWORD *)(v61 - 128) = v237 ^ 0xC71C9E0F;
  *(_DWORD *)(v61 - 132) = v236 ^ 0x653F3C3B;
  *(_DWORD *)(v61 - 136) = v238 ^ 0xEFEB9384;
  *(_DWORD *)(v61 - 140) = v240 ^ 0x14CE96FF;
  HIDWORD(v574) = (HIDWORD(v464) - 1373394449) ^ v445;
  LODWORD(v574) = v220 ^ v501 ^ v573 ^ v450 ^ (181304767 * v209 + 2133600750);
  HIDWORD(v571) = (HIDWORD(v475) - 614621175) ^ v221;
  LODWORD(v571) = v564 ^ v544;
  HIDWORD(v566) = v444 ^ ((BYTE2(v131) ^ 0x4C) + 441139959 - ((2 * (BYTE2(v131) ^ 0x4C) + 160207960) & 0x9089196)) ^ HIDWORD(v448) ^ v224;
  LODWORD(v566) = v443 ^ HIDWORD(v446);
  HIDWORD(v562) = HIDWORD(v443) ^ v448 ^ v451;
  LODWORD(v562) = (v512 - 614621175) ^ v550 ^ v561;
  HIDWORD(v556) = v225 ^ v559;
  LODWORD(v556) = v446 ^ v222 ^ v593 ^ v483 ^ HIDWORD(v451);
  HIDWORD(v551) = HIDWORD(v445) ^ v553 ^ HIDWORD(v461) ^ v548;
  LODWORD(v551) = v227 ^ v223;
  HIDWORD(v545) = v226 ^ v537;
  LODWORD(v545) = HIDWORD(v444) ^ HIDWORD(a25);
  HIDWORD(v541) = v526 ^ v515 ^ v542 ^ (v457 - 614621175);
  LODWORD(v541) = (v464 - 614621175) ^ v540;
  HIDWORD(v535) = HIDWORD(v455) ^ v520 ^ v532;
  LODWORD(v535) = HIDWORD(v452) ^ v471 ^ v229;
  HIDWORD(v529) = v528 ^ v467;
  LODWORD(v529) = v228 ^ HIDWORD(v471);
  HIDWORD(v523) = *(_DWORD *)(v61 - 200) ^ *(_DWORD *)(v61 - 240) ^ v598 ^ v522;
  LODWORD(v523) = *(_DWORD *)(v61 - 168) ^ v511;
  HIDWORD(v518) = *(_DWORD *)(v61 - 184) ^ v508;
  LODWORD(v518) = v475 ^ v596;
  HIDWORD(v513) = v455 ^ HIDWORD(v450);
  LODWORD(v513) = *(_DWORD *)(v61 - 224) ^ v603 ^ HIDWORD(v457);
  HIDWORD(v509) = HIDWORD(v467) ^ *(_DWORD *)(v61 - 160) ^ v461;
  LODWORD(v509) = v600 ^ *(_DWORD *)(v61 - 192) ^ v495;
  HIDWORD(v504) = v485 ^ *(_DWORD *)(v61 - 176);
  LODWORD(v504) = *(_DWORD *)(v61 - 256) ^ v503 ^ v489 ^ *(_DWORD *)(v61 - 232) ^ (181304767 * v207 + 2133600750);
  HIDWORD(v499) = v498 ^ v479;
  LODWORD(v499) = *(_DWORD *)(v61 - 216) ^ v492;
  HIDWORD(v493) = (v241 + (v231 ^ 0x2497E332)) ^ v230;
  LODWORD(v493) = *(_DWORD *)(v61 - 152) ^ *(_DWORD *)(v61 - 208) ^ *(_DWORD *)(v61 - 248);
  v242 = *(_DWORD *)(v61 - 124);
  HIDWORD(v486) = v242 & 0x39CF440F;
  LODWORD(v486) = v242 ^ 0x3A0;
  HIDWORD(v480) = v242 ^ 0x3BC;
  LODWORD(v480) = v242 ^ 0x333;
  HIDWORD(a25) = v242 ^ 0x379;
  *(_QWORD *)(v61 - 176) = 13;
  v243 = *(_BYTE *)(v233 + (v239[13] ^ (((v242 - 100) | 0x11) - 40))) - 106;
  *(_QWORD *)(v61 - 152) = 1;
  v244 = v239[1] ^ 0x57;
  *(_QWORD *)(v61 - 160) = 10;
  v245 = v239[10] ^ 0xB6;
  LODWORD(v244) = ((*(_BYTE *)(v233 + v244) - 106) ^ 0xF6) << 16;
  *(_QWORD *)(v61 - 192) = 4;
  v246 = (*(unsigned __int8 *)(v234 + v245) ^ 0x5F) << 8;
  v247 = v239[4];
  v248 = v584[v247 ^ 0x9A];
  *(_QWORD *)(v61 - 224) = 7;
  LODWORD(v247) = v248 ^ (v247 - ((2 * v247) & 0xCA) - 27) ^ 0xFFFFFFCF;
  v249 = *(unsigned __int8 *)(v578 + (v239[7] ^ 0xD6));
  *(_QWORD *)(v61 - 216) = 2;
  LODWORD(v247) = v249 ^ 0x60 | ((_DWORD)v247 << 24);
  v250 = *(unsigned __int8 *)(v234 + v239[2]) ^ 0x4D;
  *(_QWORD *)(v61 - 184) = 3;
  LODWORD(v244) = v244 | (v250 << 8);
  v251 = *(unsigned __int8 *)(v578 + (v239[3] ^ 0x74));
  *(_QWORD *)(v61 - 168) = 12;
  LODWORD(v244) = v244 | v251 ^ 0xA2;
  v252 = v584[v239[12] ^ 0x6ELL] ^ (v239[12] + (~(2 * v239[12]) | 0x35) - 26) ^ 0x51;
  *(_QWORD *)(v61 - 208) = 0;
  v253 = ((v243 ^ 2) << 16) | (v252 << 24);
  v254 = v244 | ((v584[*v239 ^ 0x15] ^ (*v239 - ((2 * *v239) & 0xCA) - 27) ^ 0xAE) << 24);
  LODWORD(v244) = v246 | ((v584[v239[8] ^ 0x46] ^ (v239[8] - ((2 * v239[8]) & 0xCA) - 27) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v61 - 200) = 14;
  v255 = *(unsigned __int8 *)(v234 + (v239[14] ^ 0xD5)) ^ 0xC5;
  *(_QWORD *)(v61 - 232) = 5;
  LODWORD(v247) = v247 & 0xFF00FFFF | (((*(_BYTE *)(v582 + (v239[5] ^ 0x9DLL)) - 106) ^ 0xF7) << 16);
  LODWORD(v244) = *(unsigned __int8 *)(v578 + (v239[11] ^ 0xC2)) ^ 0x87 | v244;
  *(_QWORD *)(v61 - 256) = 9;
  *(_QWORD *)(v61 - 248) = 11;
  LODWORD(v244) = v244 & 0xFF00FFFF | (((*(_BYTE *)(v582 + (v239[9] ^ 0x3ELL)) - 106) ^ 0xDF) << 16);
  v256 = *(unsigned __int8 *)(v234 + (v239[6] ^ 0xA4));
  *(_QWORD *)(v61 - 240) = 15;
  v257 = *(unsigned __int8 *)(v578 + (v239[15] ^ 0x47)) ^ 0xA2 | v253 | (v255 << 8);
  v597 = v247 | ((v256 ^ 0x95) << 8);
  v258 = (uint64_t)*(&off_24E772B10 + (v242 ^ 0x3A0));
  v259 = ((((unsigned __int16)(v597 ^ WORD2(v585)) >> 8) ^ 0x4C)
        - 1101829684
        - 2 * ((((v597 ^ HIDWORD(v585)) >> 8) ^ 0xB71C4C) & 0xDC ^ ((v597 ^ HIDWORD(v585)) >> 8) & 0x10)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v597 ^ WORD2(v585)) >> 8) ^ 0x21u));
  v260 = v254 ^ v586;
  v261 = v254 ^ v586 ^ 0x730032AA;
  v262 = (uint64_t)*(&off_24E772B10 + (v242 & 0x39CF440F));
  v263 = (v259 - 747033579 - ((2 * v259) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                    + 4 * ((v254 ^ v586) ^ 0xAAu));
  v264 = ((((unsigned __int16)(WORD2(a49) ^ v257) >> 8) ^ 0xF0)
        - 1101829684
        - 2
        * ((((HIDWORD(a49) ^ v257) >> 8) ^ 0x50F9F0) & 0xCF ^ ((HIDWORD(a49) ^ v257) >> 8) & 3)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(WORD2(a49) ^ v257) >> 8) ^ 0x9Du));
  v265 = v264 - 367616239 - ((2 * v264) & 0xD42D3E22);
  v266 = (uint64_t)*(&off_24E772B10 + v242 - 859);
  v267 = *(_DWORD *)(v266 + 4 * (((v244 ^ v585) >> 16) ^ 0x68u));
  HIDWORD(v269) = v267 ^ 0xEA2;
  LODWORD(v269) = v267 ^ 0xBEBBE000;
  v268 = v269 >> 12;
  v270 = *(_DWORD *)(v266 + 4 * BYTE2(v260));
  HIDWORD(v269) = v270 ^ 0xEA2;
  LODWORD(v269) = v270 ^ 0xBEBBE000;
  v271 = (char *)*(&off_24E772B10 + (v242 ^ 0x3BC)) - 12;
  v272 = v265 ^ *(_DWORD *)&v271[4 * (((v597 ^ HIDWORD(v585)) >> 24) ^ 0xB7)] ^ (v269 >> 12);
  v273 = *(_DWORD *)(v266 + 4 * (((HIDWORD(a49) ^ v257) >> 16) ^ 0xF9u));
  HIDWORD(v269) = v273 ^ 0xEA2;
  LODWORD(v269) = v273 ^ 0xBEBBE000;
  v274 = *(_DWORD *)(v262 + 4 * ((v247 ^ BYTE4(v585)) ^ 0xFBu)) ^ ((unsigned __int16)(v244 ^ v585) >> 8) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v244 ^ v585) >> 8) ^ 0x23u)) ^ 0x6D2A4597 ^ (v269 >> 12);
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * (((v597 ^ HIDWORD(v585)) >> 16) ^ 0x1Cu));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  LODWORD(v247) = *(_DWORD *)&v271[4 * (((v244 ^ v585) >> 24) ^ 0xF6)] ^ (BYTE1(v261) - 1101829684 - ((v260 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v261) ^ 0x6Du)) ^ ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22));
  v275 = HIDWORD(v574) ^ v268 ^ *(_DWORD *)&v271[4 * (((HIDWORD(a49) ^ v257) >> 24) ^ 0x50)] ^ (v263 - 367616239 - ((2 * v263) & 0xD42D3E22));
  v276 = v574 ^ *(_DWORD *)(v262 + 4 * ((BYTE4(a49) ^ v257) ^ 0x9Bu)) ^ (v247
                                                                                          - 747033579
                                                                                          - ((2 * v247) & 0xA6F2582A));
  LODWORD(v247) = HIDWORD(v571) ^ *(_DWORD *)(v262 + 4 * ((v244 ^ v585) ^ 0x5Fu)) ^ (v272 - 747033579 - ((2 * v272) & 0xA6F2582A));
  v277 = HIDWORD(v493) ^ *(_DWORD *)&v271[4 * HIBYTE(v261)] ^ (v274 - 367616239 - ((2 * v274) & 0xD42D3E22));
  v278 = v275 ^ 0xF9388C2F;
  v279 = *(_DWORD *)(v266 + 4 * ((v275 ^ 0xF9388C2F) >> 16));
  HIDWORD(v269) = v279 ^ 0xEA2;
  LODWORD(v269) = v279 ^ 0xBEBBE000;
  v280 = v269 >> 12;
  v281 = *(_DWORD *)(v266 + 4 * (BYTE2(v276) ^ 6u));
  HIDWORD(v269) = v281 ^ 0xEA2;
  LODWORD(v269) = v281 ^ 0xBEBBE000;
  v282 = v269 >> 12;
  v283 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x66u));
  HIDWORD(v269) = v283 ^ 0xEA2;
  LODWORD(v269) = v283 ^ 0xBEBBE000;
  v284 = (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v277) ^ 5u)) ^ ((BYTE1(v277) ^ 0x68)
                                                                      - 1101829684
                                                                      - 2
                                                                      * (((v277 >> 8) ^ 0x42BD68) & 0xDD ^ (v277 >> 8) & 0x11));
  v285 = (v280 - 747033579 - ((2 * v280) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0xB6u));
  v286 = (v284 - 747033579 - ((2 * v284) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v275 ^ 0x61u));
  v287 = (BYTE1(v278) - 1101829684 - ((v278 >> 7) & 0x198)) ^ 0xD678EAEF ^ *(_DWORD *)(v258 + 4
                                                                                            * (BYTE1(v278) ^ 0x6Du));
  v288 = *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x43)] ^ 0x480CC4AF;
  v289 = v287 + v288 - 2 * (v287 & v288);
  v290 = *(_DWORD *)(v266 + 4 * (BYTE2(v277) ^ 0xBDu));
  HIDWORD(v269) = v290 ^ 0xEA2;
  LODWORD(v269) = v290 ^ 0xBEBBE000;
  v291 = *(_DWORD *)&v271[4 * HIBYTE(v278)] ^ (v282 - 367616239 - ((2 * v282) & 0xD42D3E22));
  v292 = (v291 - 747033579 - ((2 * v291) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v277 ^ 0xABu));
  v293 = *(_DWORD *)&v271[4 * (HIBYTE(v277) ^ 0x42)] ^ v591 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v276) ^ 0xFFu)) ^ ((BYTE1(v276) ^ 0x92) - 1101829684 - ((2 * ((v276 >> 8) ^ 0xA00692)) & 0x198)) ^ (v285 - 367616239 - ((2 * v285) & 0xD42D3E22));
  LOBYTE(v277) = BYTE1(v247) ^ 0x54;
  LODWORD(v247) = v493 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0x39u)) ^ (v292 - 1101829684 - ((2 * v292) & 0x7CA6D398));
  v294 = v571 ^ *(_DWORD *)&v271[4 * (HIBYTE(v276) ^ 0xA0)] ^ (v286 - 367616239 - ((2 * v286) & 0xD42D3E22));
  v295 = HIDWORD(v566) ^ *(_DWORD *)(v262 + 4 * (v276 ^ 0x8Eu)) ^ ((v289 ^ (v269 >> 12))
                                                                                    - 747033579
                                                                                    - ((2 * (v289 ^ (v269 >> 12))) & 0xA6F2582A));
  v296 = *(_DWORD *)(v266 + 4 * (BYTE2(v295) ^ 0x79u));
  HIDWORD(v269) = v296 ^ 0xEA2;
  LODWORD(v269) = v296 ^ 0xBEBBE000;
  BYTE1(v276) = BYTE1(v294) ^ 0x68;
  v297 = ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4
                                                                                         * ((v294 ^ 0x2261685Eu) >> 24)];
  v298 = ((BYTE1(v295) ^ 0xD0) - 1101829684 - 2 * (((v295 >> 8) ^ 0x679D0) & 0xCD ^ (v295 >> 8) & 1)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v295) ^ 0xBDu));
  v299 = (v298 - 747033579 - ((2 * v298) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v293 ^ 0x76u));
  v300 = ((BYTE1(v247) ^ 0xEC)
        - 1101829684
        - 2 * (((v247 >> 8) ^ 0xE5FEC) & 0xCD ^ (v247 >> 8) & 1)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0x81u));
  v301 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x5Fu));
  HIDWORD(v269) = v301 ^ 0xEA2;
  LODWORD(v269) = v301 ^ 0xBEBBE000;
  v302 = v269 >> 12;
  HIDWORD(v269) = *(_DWORD *)(v262 + 4 * (v294 ^ 0x5Eu)) ^ 0x3A6E0B9D;
  LODWORD(v269) = HIDWORD(v269);
  v303 = (v269 >> 28) ^ __ROR4__(*(_DWORD *)&v271[4 * (HIBYTE(v295) ^ 6)] ^ 0x7462B151 ^ (v300- 367616239- ((2 * v300) & 0xD42D3E22)), 28);
  v304 = (v302 - 367616239 - ((2 * v302) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v293) ^ 0xD2)];
  v305 = (v304 - 747033579 - ((2 * v304) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v295 ^ 0x4Cu));
  v306 = *(_DWORD *)(v266 + 4 * (BYTE2(v294) ^ 0x1Bu));
  HIDWORD(v269) = v306 ^ 0xEA2;
  LODWORD(v269) = v306 ^ 0xBEBBE000;
  v307 = v269 >> 12;
  v308 = ((v293 >> 8) ^ 0xD2CCC0) & 0xCE ^ (v293 >> 8) & 2;
  v309 = BYTE1(v293) ^ 0xC0;
  v310 = *(_DWORD *)(v266 + 4 * (BYTE2(v293) ^ 0xCCu));
  HIDWORD(v269) = v310 ^ 0xEA2;
  LODWORD(v269) = v310 ^ 0xBEBBE000;
  v311 = v443 ^ HIDWORD(v446) ^ (v269 >> 12) ^ __ROR4__(v303 ^ 0x78071371, 4);
  LOBYTE(v310) = v247 ^ v277;
  v312 = HIDWORD(v562) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0xE)] ^ v307 ^ (v299 - 367616239 - ((2 * v299) & 0xD42D3E22));
  v313 = v562 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v276) ^ 0x6Du)) ^ (v305 - 1101829684 - ((2 * v305) & 0x7CA6D398));
  v314 = HIDWORD(v556) ^ (v309 - 1101829684 - 2 * v308) ^ *(_DWORD *)(v262 + 4 * (v310 ^ 0xCAu)) ^ *(_DWORD *)(v258 + 4 * (v309 ^ 0x6Du)) ^ (v297 - 747033579 - ((2 * v297) & 0xA6F2582A));
  v315 = BYTE1(v276) ^ 0x4552953C ^ v313;
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * BYTE2(v315));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  v316 = v269 >> 12;
  BYTE1(v247) = BYTE1(v311) ^ 0xE7;
  v317 = *(_DWORD *)(v266 + 4 * ((v311 ^ 0x99FEE750) >> 16));
  HIDWORD(v269) = v317 ^ 0xEA2;
  LODWORD(v269) = v317 ^ 0xBEBBE000;
  v318 = (v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A);
  v319 = BYTE1(v312) ^ 0x29;
  v320 = v319 - 1101829684 - 2 * (((v312 >> 8) ^ 0xA73B29) & 0xCE ^ (v312 >> 8) & 2);
  v321 = *(_DWORD *)(v266 + 4 * (BYTE2(v314) ^ 2u));
  HIDWORD(v269) = v321 ^ 0xEA2;
  LODWORD(v269) = v321 ^ 0xBEBBE000;
  v322 = (BYTE1(v315) - 1101829684 - ((v315 >> 7) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v312 ^ 0x72u)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v315) ^ 0x6Du)) ^ v318;
  v323 = *(_DWORD *)&v271[4 * (HIBYTE(v312) ^ 0xA7)] ^ (v269 >> 12);
  v324 = *(_DWORD *)(v266 + 4 * (BYTE2(v312) ^ 0x3Bu));
  v325 = v323 ^ *(_DWORD *)(v262 + 4 * v315);
  HIDWORD(v269) = v324 ^ 0xEA2;
  LODWORD(v269) = v324 ^ 0xBEBBE000;
  v326 = v556 ^ ((BYTE1(v314) ^ 0xD9) - 1101829684 - ((2 * ((v314 >> 8) ^ 0x9802D9)) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v311 ^ 0x1Eu)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v314) ^ 0xB4u)) ^ (v269 >> 12) ^ *(_DWORD *)&v271[4 * (HIBYTE(v313) ^ 0x61)];
  v327 = HIDWORD(v551) ^ *(_DWORD *)&v271[4 * (HIBYTE(v314) ^ 0x98)] ^ (v322 - 367616239 - ((2 * v322) & 0xD42D3E22));
  v328 = v227 ^ v223 ^ *(_DWORD *)(v262 + 4 * (v314 ^ 0x3Du)) ^ v320 ^ *(_DWORD *)&v271[4 * ((v311 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v258 + 4 * (v319 ^ 0x6Du));
  v329 = *(_DWORD *)(v266 + 4 * (BYTE2(v326) ^ 0xF7u));
  HIDWORD(v269) = v329 ^ 0xEA2;
  LODWORD(v269) = v329 ^ 0xBEBBE000;
  v330 = v269 >> 12;
  v331 = *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v311 ^ 0xE750) >> 8) ^ 0x6Du));
  v332 = v328 ^ v316;
  v333 = HIDWORD(v545) ^ v331;
  v334 = *(_DWORD *)(v266 + 4 * (BYTE2(v332) ^ 0x87u));
  v335 = v333 ^ ((v325 ^ 0x396FB304) - 1101829684 - 2 * ((v325 ^ 0x396FB304) & 0x3E5369CE ^ v325 & 2));
  HIDWORD(v269) = v334 ^ 0xEA2;
  LODWORD(v269) = v334 ^ 0xBEBBE000;
  v336 = BYTE1(v332) ^ 0x4C;
  v337 = v336 - 1101829684 - 2 * (((v332 >> 8) ^ 0xEC874C) & 0xDE ^ (v332 >> 8) & 0x12);
  v338 = v326 ^ 0xDA8D2242;
  v339 = *(_DWORD *)(v262 + 4 * ((v335 ^ BYTE1(v247)) ^ 0x41u)) ^ (((unsigned __int16)(v326 ^ 0x2242) >> 8)
                                                                                    - 1101829684
                                                                                    - ((v326 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v326 ^ 0x2242) >> 8) ^ 0x6Du)) ^ ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A));
  v340 = *(_DWORD *)(v266 + 4 * (BYTE2(v335) ^ 0x81u));
  HIDWORD(v269) = v340 ^ 0xEA2;
  LODWORD(v269) = v340 ^ 0xBEBBE000;
  v341 = ((v269 >> 12) - 367616239 - ((2 * (v269 >> 12)) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * HIBYTE(v338)];
  v342 = (v341 - 747033579 - ((2 * v341) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v332 ^ 1u));
  LODWORD(v247) = *(_DWORD *)(v262 + 4 * (v327 ^ 0xFCu)) ^ (v330
                                                                             - 747033579
                                                                             - ((2 * v330) & 0xA6F2582A)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v335) ^ 0xCDu)) ^ ((BYTE1(v335) ^ 0xA0) - 1101829684 - 2 * (((v335 >> 8) ^ 0x6881A0) & 0xDE ^ (v335 >> 8) & 0x12));
  v343 = *(_DWORD *)(v266 + 4 * (BYTE2(v327) ^ 0xC6u));
  LODWORD(v269) = __ROR4__((v343 >> 12) ^ 0x266369C, 17) ^ 0xEE910136;
  HIDWORD(v269) = v269;
  v344 = v545 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v327) ^ 0x75u)) ^ (v342 - 1101829684 - ((2 * v342) & 0x7CA6D398));
  LODWORD(v247) = HIDWORD(v541) ^ *(_DWORD *)&v271[4 * (HIBYTE(v332) ^ 0xEC)] ^ (v247
                                                                               - 367616239
                                                                               - ((2 * v247) & 0xD42D3E22));
  v345 = v541 ^ *(_DWORD *)&v271[4 * (HIBYTE(v327) ^ 0x5A)] ^ (v339 - 367616239 - ((2 * v339) & 0xD42D3E22));
  v346 = HIDWORD(v535) ^ v337 ^ *(_DWORD *)(v262 + 4 * v338) ^ *(_DWORD *)(v258 + 4 * (v336 ^ 0x6Du)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v335) ^ 0x68)] ^ ((v269 >> 15) + (v343 << 20));
  v347 = ((BYTE1(v344) ^ 0x9D) - 1101829684 - 2 * (((v344 >> 8) ^ 0xC2489D) & 0xCE ^ (v344 >> 8) & 2)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v344) ^ 0xF0u));
  v348 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x8Fu));
  v349 = *(_DWORD *)(v262 + 4 * (v346 ^ 0x8Eu)) ^ (v348 << 20) ^ (v348 >> 12) ^ 0xEA2BEBBE ^ (v347 - 747033579 - ((2 * v347) & 0xA6F2582A));
  v350 = *(_DWORD *)(v266 + 4 * ((v345 ^ 0xCFB8D782) >> 16));
  HIDWORD(v269) = v350 ^ 0xEA2;
  LODWORD(v269) = v350 ^ 0xBEBBE000;
  v351 = ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                                    + 4
                                                                                    * ((v344 ^ BYTE1(v327)) ^ 0x3Fu));
  v352 = v349 - 367616239 - ((2 * v349) & 0xD42D3E22);
  v353 = v351 - 367616239 - ((2 * v351) & 0xD42D3E22);
  v354 = BYTE1(v247) ^ 0xD9;
  v355 = v354 - 1101829684 - 2 * (((v247 >> 8) ^ 0xC78FD9) & 0xCE ^ (v247 >> 8) & 2);
  v356 = *(_DWORD *)(v266 + 4 * (BYTE2(v344) ^ 0x48u));
  HIDWORD(v269) = v356 ^ 0xEA2;
  LODWORD(v269) = v356 ^ 0xBEBBE000;
  v357 = ((BYTE1(v346) ^ 0xD3) - 1101829684 - ((2 * ((v346 >> 8) ^ 0xF5C4D3)) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v345 ^ 0xCCu)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v346) ^ 0xBEu)) ^ ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A));
  v358 = *(_DWORD *)(v266 + 4 * (BYTE2(v346) ^ 0xC4u));
  HIDWORD(v269) = v358 ^ 0xEA2;
  LODWORD(v269) = v358 ^ 0xBEBBE000;
  v359 = v535 ^ (((unsigned __int16)(v345 ^ 0xD782) >> 8)
               - 1101829684
               - (((v345 ^ 0xCFB8D782) >> 7) & 0x198)) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0x50u)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v345 ^ 0xD782) >> 8) ^ 0x6Du)) ^ (v269 >> 12) ^ *(_DWORD *)&v271[4 * (HIBYTE(v344) ^ 0xC2)];
  LODWORD(v247) = HIDWORD(v529) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0xC7)] ^ (v357
                                                                              - 367616239
                                                                              - ((2 * v357) & 0xD42D3E22));
  v360 = v529 ^ *(_DWORD *)&v271[4 * ((v345 ^ 0xCFB8D782) >> 24)] ^ v352;
  v361 = HIDWORD(v523) ^ v355 ^ *(_DWORD *)&v271[4 * (HIBYTE(v346) ^ 0xF5)] ^ *(_DWORD *)(v258 + 4 * (v354 ^ 0x6Du)) ^ v353;
  v362 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0xE6u));
  HIDWORD(v269) = v362 ^ 0xEA2;
  LODWORD(v269) = v362 ^ 0xBEBBE000;
  v363 = v269 >> 12;
  v364 = *(_DWORD *)(v266 + 4 * (BYTE2(v360) ^ 0x1Cu));
  v365 = (((unsigned __int16)(v361 ^ 0xCCA2) >> 8) - 1101829684 - (((v361 ^ 0x33C8CCA2) >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v361 ^ 0xCCA2) >> 8) ^ 0x6Du));
  HIDWORD(v269) = v364 ^ 0xEA2;
  LODWORD(v269) = v364 ^ 0xBEBBE000;
  v366 = (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0xD9u)) ^ ((BYTE1(v247) ^ 0xB4)
                                                                         - 1101829684
                                                                         - 2
                                                                         * (((v247 >> 8) ^ 0x4FE6B4) & 0xCD ^ (v247 >> 8) & 1));
  v367 = (v366 - 747033579 - ((2 * v366) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v359 ^ 0xEEu));
  v368 = (v365 - 747033579 - ((2 * v365) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                    + 4
                                                                    * ((v529 ^ v271[4 * ((v345 ^ 0xCFB8D782) >> 24)] ^ v352) ^ 0x3Au));
  v369 = *(_DWORD *)(v262 + 4 * (v361 ^ 0xA2u)) ^ (((unsigned __int16)(v359 ^ 0xA7EE) >> 8)
                                                                    - 1101829684
                                                                    - (((v359 ^ 0x205CA7EE) >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v359 ^ 0xA7EE) >> 8) ^ 0x6Du)) ^ (v363 - 747033579 - ((2 * v363) & 0xA6F2582A));
  v370 = *(_DWORD *)(v262 + 4 * (v247 ^ 0x96u));
  HIDWORD(v269) = v370 ^ 0x13792C15;
  LODWORD(v269) = v370 ^ 0xC0000000;
  HIDWORD(v269) = (v269 >> 29) ^ 0x6615DA09;
  LODWORD(v269) = HIDWORD(v269);
  v371 = (v269 >> 3) - 1101829684 - ((2 * (v269 >> 3)) & 0x7CA6D398);
  v372 = *(_DWORD *)(v266 + 4 * ((v359 ^ 0x205CA7EE) >> 16));
  HIDWORD(v269) = v372 ^ 0xEA2;
  LODWORD(v269) = v372 ^ 0xBEBBE000;
  v373 = v269 >> 12;
  v374 = *(_DWORD *)(v266 + 4 * ((v361 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v269) = v374 ^ 0xEA2;
  LODWORD(v269) = v374 ^ 0xBEBBE000;
  v375 = v523 ^ *(_DWORD *)&v271[4 * (HIBYTE(v361) ^ 0x17)] ^ (v367 - 367616239 - ((2 * v367) & 0xD42D3E22));
  v376 = BYTE1(v360);
  v377 = v371 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v360) ^ 0xD1u)) ^ (v269 >> 12);
  v378 = *(_DWORD *)&v271[4 * (HIBYTE(v359) ^ 4)] ^ v590 ^ (v377 - 367616239 - ((2 * v377) & 0xD42D3E22));
  v379 = HIDWORD(v518) ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x4F)] ^ v373 ^ (v368
                                                                            - 367616239
                                                                            - ((2 * v368) & 0xD42D3E22));
  LODWORD(v247) = v518 ^ *(_DWORD *)&v271[4 * (HIBYTE(v360) ^ 0x1B)] ^ (v369 - 367616239 - ((2 * v369) & 0xD42D3E22));
  v380 = *(_DWORD *)(v266 + 4 * (BYTE2(v247) ^ 0x7Eu));
  HIDWORD(v269) = v380 ^ 0xEA2;
  LODWORD(v269) = v380 ^ 0xBEBBE000;
  v381 = v269 >> 12;
  v382 = *(_DWORD *)(v266 + 4 * (BYTE2(v379) ^ 1u));
  HIDWORD(v269) = v382 ^ 0xEA2;
  LODWORD(v269) = v382 ^ 0xBEBBE000;
  v383 = ((v269 >> 12) - 747033579 - ((2 * (v269 >> 12)) & 0xA6F2582A)) ^ *(_DWORD *)(v262
                                                                                    + 4
                                                                                    * (v375 ^ 0xC6u));
  v384 = ((BYTE1(v375) ^ 0x71) - 1101829684 - ((2 * ((v375 >> 8) ^ 0xF25B71)) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v375) ^ 0x1Cu));
  v385 = (v384 - 367616239 - ((2 * v384) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v379) ^ 0x1F)];
  v386 = *(_DWORD *)(v266 + 4 * (BYTE2(v375) ^ 0x5Bu));
  HIDWORD(v269) = v386 ^ 0xEA2;
  LODWORD(v269) = v386 ^ 0xBEBBE000;
  v387 = v269 >> 12;
  v388 = v385 - 747033579 - ((2 * v385) & 0xA6F2582A);
  v389 = v376 ^ 0x73F4E0AF ^ v378;
  v390 = *(_DWORD *)(v266 + 4 * BYTE2(v389));
  HIDWORD(v269) = v390 ^ 0xEA2;
  LODWORD(v269) = v390 ^ 0xBEBBE000;
  v391 = v269 >> 12;
  HIDWORD(v269) = v381 ^ ((BYTE1(v379) ^ 0x81) - 1101829684 - ((2 * ((v379 >> 8) ^ 0x1F0181)) & 0x198)) ^ 0xD678EAEF ^ *(_DWORD *)(v258 + 4 * (BYTE1(v379) ^ 0xECu));
  LODWORD(v269) = HIDWORD(v269);
  LODWORD(v269) = (v269 >> 11) ^ __ROR4__(*(_DWORD *)&v271[4 * (HIBYTE(v375) ^ 0xF2)] ^ 0x480CC4AF, 11) ^ 0xD490839A;
  HIDWORD(v269) = v269;
  v392 = v455 ^ HIDWORD(v450) ^ *(_DWORD *)(v262 + 4 * (v379 ^ 0xB8u)) ^ ((BYTE1(v247) ^ 0xAA)
                                                                                           - 1101829684
                                                                                           - 2
                                                                                           * (((v247 >> 8) ^ 0x967EAA) & 0xCD ^ (v247 >> 8) & 1)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v378) ^ 0x57)] ^ v387 ^ *(_DWORD *)(v258 + 4 * (BYTE1(v247) ^ 0xC7u));
  v393 = v513 ^ *(_DWORD *)&v271[4 * (BYTE3(v247) ^ 0x96)] ^ (BYTE1(v389) - 1101829684 - ((v389 >> 7) & 0x198)) ^ *(_DWORD *)(v258 + 4 * (BYTE1(v389) ^ 0x6Du)) ^ (v383 - 367616239 - ((2 * v383) & 0xD42D3E22));
  v394 = HIDWORD(v509) ^ *(_DWORD *)(v262 + 4 * (v247 ^ 0x88u)) ^ v391 ^ v388;
  v395 = v509 ^ *(_DWORD *)(v262 + 4 * v389) ^ ((v269 >> 21)
                                                                 - 747033579
                                                                 - ((2 * (v269 >> 21)) & 0xA6F2582A));
  v396 = *(_DWORD *)(v266 + 4 * (BYTE2(v392) ^ 0x84u));
  HIDWORD(v269) = v396 ^ 0xEA2;
  LODWORD(v269) = v396 ^ 0xBEBBE000;
  v397 = v269 >> 12;
  v398 = *(_DWORD *)(v258 + 4 * (BYTE1(v393) ^ 0x96u)) ^ ((BYTE1(v393) ^ 0xFB)
                                                          - 1101829684
                                                          - ((2 * ((v393 >> 8) ^ 0x3EA2FB)) & 0x198));
  v399 = (v398 - 747033579 - ((2 * v398) & 0xA6F2582A)) ^ *(_DWORD *)(v262 + 4 * (v394 ^ 0x75u));
  v400 = *(_DWORD *)(v266 + 4 * (BYTE2(v393) ^ 0xA2u));
  HIDWORD(v269) = v400 ^ 0xEA2;
  LODWORD(v269) = v400 ^ 0xBEBBE000;
  v401 = (((unsigned __int16)(v394 ^ 0xF075) >> 8) - 1101829684 - (((v394 ^ 0xB54AF075) >> 7) & 0x198)) ^ (v269 >> 12) ^ *(_DWORD *)(v258 + 4 * (((unsigned __int16)(v394 ^ 0xF075) >> 8) ^ 0x6Du));
  v402 = *(_DWORD *)&v271[4 * (HIBYTE(v392) ^ 0xFE)];
  v403 = (v401 - 367616239 - ((2 * v401) & 0xD42D3E22)) ^ *(_DWORD *)&v271[4 * (HIBYTE(v395) ^ 0xED)];
  v404 = v399 - 367616239 - ((2 * v399) & 0xD42D3E22);
  v395 ^= 0xC9AF1D8F;
  v405 = BYTE1(v395);
  v406 = BYTE1(v395) - 1101829684 - ((v395 >> 7) & 0x198);
  v407 = *(_DWORD *)(v262 + 4 * v395);
  v408 = *(_DWORD *)(v262 + 4 * (v392 ^ 0x6Bu));
  v409 = *(_DWORD *)(v266 + 4 * BYTE2(v395));
  LODWORD(v247) = *(_DWORD *)(v266 + 4 * (BYTE2(v394) ^ 0x4Au));
  HIDWORD(v269) = v247 ^ 0xEA2;
  LODWORD(v269) = v247 ^ 0xBEBBE000;
  LODWORD(v266) = *(_DWORD *)(v258 + 4 * (v405 ^ 0x6Du));
  v410 = (v392 >> 8) ^ 0xFE8473;
  LODWORD(v258) = *(_DWORD *)(v258 + 4 * (v410 ^ 0x6Du));
  v411 = v410 - 1101829684 - ((2 * v410) & 0x198);
  v412 = HIDWORD(v504) ^ *(_DWORD *)(v262 + 4 * (v393 ^ 0x9Au)) ^ v397 ^ *(_DWORD *)&v271[4 * (HIBYTE(v394) ^ 0x91)] ^ v406 ^ v266;
  LODWORD(v266) = v504 ^ v411 ^ *(_DWORD *)&v271[4 * (HIBYTE(v393) ^ 0x3E)] ^ v258 ^ v407 ^ (v269 >> 12);
  v413 = HIDWORD(v499) ^ v408 ^ (v403 - 747033579 - ((2 * v403) & 0xA6F2582A));
  LODWORD(v258) = v499 ^ v402 ^ (v409 >> 12) ^ (v409 << 20) ^ v404;
  v414 = *(_DWORD *)(v61 - 124);
  v415 = (char *)*(&off_24E772B10 + v414 - 809) - 4;
  v416 = (char *)*(&off_24E772B10 + v414 - 792) - 4;
  LODWORD(v247) = *(_DWORD *)&v416[4
                                 * (((unsigned __int16)(v499 ^ v402 ^ (v409 >> 12) ^ v404) >> 8) ^ 0xC8)] ^ *(_DWORD *)&v415[4 * (v413 ^ 7)];
  v417 = (v247 ^ 0x2636AA21) - 1507977308 - 2 * ((v247 ^ 0x2636AA21) & 0x261E17B4 ^ v247 & 0x10);
  LODWORD(v247) = *(_DWORD *)&v416[4 * (BYTE1(v412) ^ 0xC2)];
  v418 = (char *)*(&off_24E772B10 + (int)v480) - 4;
  v419 = *(_DWORD *)&v416[4 * ((unsigned __int16)(v413 ^ 0x6F07) >> 8)];
  v420 = v417 ^ *(_DWORD *)&v418[4 * (BYTE3(v266) ^ 0xB2)];
  LODWORD(v271) = *(_DWORD *)&v416[4 * ~(v266 >> 8)];
  v421 = *(_DWORD *)&v418[4 * (HIBYTE(v413) ^ 0xEF)];
  LODWORD(v262) = *(_DWORD *)&v418[4 * (BYTE3(v258) ^ 0x77)];
  v422 = *(_DWORD *)&v418[4 * (HIBYTE(v412) ^ 8)];
  v423 = (char *)*(&off_24E772B10 + v414 - 759) - 12;
  v424 = *(_DWORD *)&v423[4 * (BYTE2(v258) ^ 0x97)];
  v425 = *(unsigned int *)&v423[4 * (BYTE2(v413) ^ 0x2A)];
  v426 = *(unsigned int *)&v423[4 * (BYTE2(v266) ^ 0x9B)];
  LODWORD(v423) = *(_DWORD *)&v423[4 * (BYTE2(v412) ^ 0xE4)] ^ (v420 + 1430988054 - ((2 * v420) & 0xAA964A2C));
  v427 = *(_DWORD *)&v415[4 * (v412 ^ 0xD8)];
  LODWORD(v418) = *(_DWORD *)&v415[4 * (v266 ^ 0xC5)];
  LODWORD(v415) = *(_DWORD *)&v415[4 * (v258 ^ 0x65)];
  LODWORD(v258) = *(_DWORD *)(v61 - 140) ^ HIDWORD(v586) ^ ((_DWORD)v423 - ((2 * (_DWORD)v423) & 0x2C9828FA) - 1773398915);
  v428 = (char *)*(&off_24E772B10 + v414 - 651) - 8;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + 8) = v428[BYTE3(v258) ^ 0xD7] ^ 0xC2;
  LODWORD(v423) = ((v424 ^ 0x5C323448 ^ v419) - 1507977308 - ((2 * (v424 ^ 0x5C323448 ^ v419)) & 0x4C3C2F48)) ^ v422;
  LODWORD(v423) = ((_DWORD)v423 + 793754495 - ((2 * (_DWORD)v423) & 0x5E9F76FE)) ^ v418;
  LODWORD(v423) = *(_DWORD *)(v61 - 136) ^ v587 ^ ((_DWORD)v423 - ((2 * (_DWORD)v423) & 0xDAD2220C) + 1835602182);
  v429 = (char *)*(&off_24E772B10 + v414 - 760) - 12;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 224)) = (v429[v423 ^ 0xC7] - 63) ^ 0x5F;
  v430 = (char *)*(&off_24E772B10 + SHIDWORD(a25)) - 12;
  v431 = v430[BYTE1(v423) ^ 0x13];
  HIDWORD(v269) = v431 ^ 0x2A;
  LODWORD(v269) = (v431 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + 6) = (v269 >> 30) ^ 0x40;
  v432 = ((v427 ^ 0x7A049E69 ^ v425) - 1507977308 - ((2 * (v427 ^ 0x7A049E69 ^ v425)) & 0x4C3C2F48)) ^ v262;
  v433 = (v432 - ((2 * v432) & 0x12F222BC) + 158929246) ^ v271;
  v434 = *(_DWORD *)(v61 - 132) ^ HIDWORD(v587) ^ (v433 - ((2 * v433) & 0xCF7B7D72) - 406995271);
  v435 = v430[BYTE1(v434)];
  HIDWORD(v269) = v435 ^ 0x2A;
  LODWORD(v269) = (v435 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 216)) = (v269 >> 30) ^ 0x7E;
  v436 = (char *)*(&off_24E772B10 + v414 - 650) - 8;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 256)) = v436[BYTE2(v258) ^ 0xFBLL] ^ 0xDD;
  v437 = ((v247 ^ 0xAF6706FA ^ v421) + 1430988054 - ((2 * (v247 ^ 0xAF6706FA ^ v421)) & 0xAA964A2C)) ^ v426;
  v438 = v415 ^ (v437 + 793754495 - ((2 * v437) & 0x5E9F76FE));
  v439 = *(_DWORD *)(v61 - 128) ^ v588 ^ (v438 - ((2 * v438) & 0x8B3C385C) + 1167989806);
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 176)) = v436[BYTE2(v439) ^ 0xB8] ^ 0xE;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 248)) = (v429[v258 ^ 0x1BLL] - 63) ^ 0x7D;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 232)) = v436[BYTE2(v423) ^ 3] ^ 0x70;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 192)) = v428[(v423 >> 24) ^ 0x6DLL] ^ 0x3A;
  LODWORD(v423) = v430[BYTE1(v258) ^ 0x92];
  HIDWORD(v269) = v423 ^ 0x2A;
  LODWORD(v269) = (v423 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 160)) = (v269 >> 30) ^ 0xD2;
  v440 = *(_QWORD *)(v61 - 208);
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + v440) = v428[HIBYTE(v434) ^ 0x53] ^ 0xD6;
  *(_BYTE *)(*(_QWORD *)(v61 - 120) + *(_QWORD *)(v61 - 184)) = (v429[v434 ^ 0x95] - 63) ^ 0xAF;
  LOBYTE(v423) = v429[v439 ^ 0x64];
  v441 = *(_QWORD *)(v61 - 120);
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 240)) = ((_BYTE)v423 - 63) ^ 0x27;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 168)) = v428[HIBYTE(v439) ^ 0x6ELL] ^ 0x40;
  LODWORD(v423) = v430[BYTE1(v439) ^ 0x1FLL];
  HIDWORD(v269) = v423 ^ 0x2A;
  LODWORD(v269) = (v423 ^ 0x40) << 24;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 200)) = (v269 >> 30) ^ 0x58;
  *(_BYTE *)(v441 + *(_QWORD *)(v61 - 152)) = v436[BYTE2(v434) ^ 0xC8] ^ 0x5F;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, unint64_t))(a57 + 8 * ((1692 * ((((_DWORD)v440 - 1210073429 - 2 * (((_DWORD)v440 + 16) & 0x37DFBE9F)) ^ 0xB7DFBE9B) < a55)) ^ (v414 - 380))))(v430, 793754495, 42, 2861976108, v426, 1430988054, 1587508990, v425, v443, v444, v445, v446, v448, v450, v451, v452, v455, v457, v461,
           v464,
           v467,
           v471,
           v475,
           a24,
           a25,
           v480,
           v486,
           v493,
           v499,
           v504,
           v509,
           v513,
           v518,
           v523,
           v529,
           v535,
           v541,
           v545,
           v551,
           v556,
           v562,
           v566,
           v571,
           v574,
           v578,
           v580,
           v582,
           v584,
           a49,
           v585,
           v586,
           v587);
}

