void sub_221A38454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60)
{
  uint64_t v60;

  *(_DWORD *)(v60 - 128) = a57 ^ 0x9EAC4702;
  *(_DWORD *)(v60 - 140) = a59 ^ 0x2D1575D2;
  *(_DWORD *)(v60 - 132) = a60 ^ 0x93AB7741;
  *(_DWORD *)(v60 - 136) = a58 ^ 0x94358E1A;
  JUMPOUT(0x221A3673CLL);
}

uint64_t sub_221A384A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (1816 * (v7 != a3))))
                            - ((a7 + 1721561428) & 0x99630FFE)
                            + 866))();
}

uint64_t sub_221A384E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * (int)((((((a7 + 1714580835) ^ 0x66326F76) & v7) != 0)
                                                                             * ((a7 + 1714580835) & 0x99CD93EF ^ 0x362)) | (a7 + 389))))(a1, a2, a3, (v8 - a3));
}

uint64_t sub_221A38534(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  char v69;
  uint64_t v70;
  int8x16x4_t v72;

  *(_DWORD *)(v65 - 128) = v56;
  *(_DWORD *)(v65 - 124) = v63;
  v66 = (a7 - 193) | 0x50;
  v67 = (v66 ^ 0xFFFFFE2D) & v56;
  v68 = -a3;
  *(_DWORD *)(v65 - 132) = v67;
  v69 = v61 + a2 + a1;
  v70 = (v68 + a2 + a1 + v62);
  v72.val[0].i64[0] = ((_BYTE)v68 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)v62) & 0xF;
  v72.val[0].i64[1] = ((_BYTE)v68 + v69 + 10) & 0xF;
  v72.val[1].i64[0] = ((_BYTE)v68 + v69 + 9) & 0xF;
  v72.val[1].i64[1] = ((_BYTE)v68 + v60 + ((((a7 + 63) | 0x50) + 70) ^ 3)) & 0xF;
  v72.val[2].i64[0] = ((_BYTE)v68 + v69 + 7) & 0xF;
  v72.val[2].i64[1] = ((_BYTE)v68 + v69 + 6) & 0xF;
  v72.val[3].i64[0] = ((_BYTE)v68 + v69 + 5) & 0xF;
  v72.val[3].i64[1] = ((_BYTE)v68 + v69 + 4) & 0xF;
  *(int8x8_t *)(v64 - 7 + v70) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v64 - 7 + v70), *(int8x8_t *)(v58 + (v70 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v59 + (v70 & 0xF) - 7), *(int8x8_t *)(v57 + (v70 & 0xF) - 7)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v72, (int8x16_t)xmmword_2226906D0), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((915 * (v68 != 8 - v67)) ^ v66)))((__n128)xmmword_2226906D0);
}

void sub_221A38678()
{
  JUMPOUT(0x221A385A0);
}

uint64_t sub_221A386A0()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v0 ^ (63 * (*(_DWORD *)(v1 - 128) != *(_DWORD *)(v1 - 132)))))
                            - (v0 ^ 0x217)))();
}

uint64_t sub_221A386DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 1802685205);
  *(_BYTE *)(v9 + v11) ^= *(_BYTE *)(v7 + (v11 & 0xF)) ^ *(_BYTE *)(v8 + (v11 & 0xF)) ^ *(_BYTE *)(v6 + (v11 & 0xF)) ^ (5 * (v11 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((998 * (a4 - 1 == v5)) ^ (a5 - 369))) - 12))();
}

void sub_221A38744()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 2010122275)
    v1 = 1645153785;
  else
    v1 = -1645193695;
  *(_DWORD *)(v2 + 40) = v1;
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  int v12;

  if (a2)
    v8 = a3 == 0;
  else
    v8 = 1;
  v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BR              X8 }
}

uint64_t sub_221A38844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v27;

  *a6 = 0;
  *a7 = 0;
  a22 = 108757529
      * ((((&a21 | 0xC8548EC6) ^ 0xFFFFFFFE) - (~&a21 | 0x37AB7139)) ^ 0xD7371312)
      + 1695027452;
  v27 = v22;
  v25 = sub_221A43B78(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8 * ((1797 * (a21 == v24)) ^ v23)) - 4))(v25);
}

uint64_t sub_221A388E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = 1759421093 * ((&a21 + 2130158787 - 2 * (&a21 & 0x7EF7A4C3)) ^ 0xCD8A1497);
  a24 = v24 ^ 0x18F94B49;
  HIDWORD(a21) = v24 ^ 0x771B5177;
  a22 = v24 + 1806;
  LODWORD(a21) = v24 ^ 0x7FA6CEE2;
  sub_221A0B4A0((uint64_t)&a21);
  LODWORD(a11) = a23;
  a23 = 1307 - 460628867 * ((((2 * &a21) | 0x5259E7E8) - &a21 + 1456671756) ^ 0xE5BA7189);
  a21 = &STACK[0x4BD26FD1213425D9];
  sub_221A1F8D0((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a14 + 8 * ((27 * (a22 != 1645153785)) ^ 0x16Fu)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_221A38A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25)
{
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;

  v32 = 87 * v25;
  v33 = 1178560073
      * ((-1996209345 - (&a21 | 0x8904433F) + (&a21 | 0x76FBBCC0)) ^ 0xCC6FC4A2);
  a23 = a16;
  a24 = (87 * v25 + 43) ^ v33;
  a22 = (v30 ^ 0xDBFDF3FD) + v33 + 1954504252 + ((((87 * v25 - 937) | 0x160) - 1208228218) & (2 * v30));
  sub_221A2F97C((uint64_t)&a21);
  a24 = 87 * v25
      + 1224239923 * ((&a21 - 1409295590 - 2 * (&a21 & 0xABFFDB1A)) ^ 0x594C26CD)
      + 419;
  a23 = a16;
  a25 = v29;
  ((void (*)(int *))((char *)*(&off_24E772B10 + 87 * v25 - 926) - 12))(&a21);
  v34 = 1178560073 * (&a21 ^ 0xBA947862);
  a23 = a16;
  a24 = (v32 + 43) ^ v34;
  a22 = (v28 ^ 0x7D7D52F9) + v34 - 754974912 + ((v28 << (68 * (v32 ^ 0xB2) + 5)) & 0xFAFAA5F2);
  sub_221A2F97C((uint64_t)&a21);
  a25 = v26;
  a22 = v34 + v32 + 332;
  a24 = v34 ^ ((v27 ^ 0xBFEF9D6F) + 1267826619 + ((2 * v27) & 0x7FDF3ADE));
  a23 = a16;
  v35 = ((uint64_t (*)(int *))((char *)*(&off_24E772B10 + (v32 ^ 0x33Du)) - 8))(&a21);
  return (*(uint64_t (**)(uint64_t))(a14 + 8 * (((a21 != v31) | ((a21 != v31) << 6)) ^ v32)))(v35);
}

uint64_t sub_221A38C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,int a24,unsigned int a25,int a26,int a27)
{
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;

  if (a12 + (v27 ^ 0xBEFFE260) >= 0x1F8FCFD3)
    v29 = 1010542952;
  else
    v29 = 635686783;
  v30 = 460628867 * ((&a22 - 68604818 - 2 * ((unint64_t)&a22 & 0xFBE92C6E)) ^ 0xB77FAE13);
  a26 = v29 - v30;
  a24 = v30 - 982147079;
  a25 = v30 + 2138962340 + a10;
  a22 = &STACK[0x58A7AA086245692E];
  a23 = a17;
  v31 = sub_221A43F44((uint64_t)&a22);
  return (*(uint64_t (**)(uint64_t))(a15
                                            + 8
                                            * ((1183 * (a27 == ((((a10 + 1611586287) & 0xF125FF) - 887) ^ (v28 - 364)))) ^ a10)))(v31);
}

uint64_t sub_221A38D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,unint64_t *a23,unint64_t *a24,unsigned int a25)
{
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  a23 = &STACK[0x72E1645BEBB64067];
  a24 = &STACK[0x1E6EF7153090E02];
  a22 = a18;
  a25 = (v27 - 905) ^ (1225351577
                     * ((((2 * &a21) | 0xE5132B40) - &a21 + 225864288) ^ 0xD1134DB6));
  v29 = v25;
  v30 = ((uint64_t (*)(char *))((char *)*(&off_24E772B10 + (v27 & 0xF9F055)) - 8))(&a21);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * (((((v27 + 37624584) & 0x1C1E0EF) + 490) * (v26 < v28)) ^ v27)))(v30);
}

uint64_t sub_221A38E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _BYTE *a18, uint64_t a19, int a20,char a21,unsigned int a22,char *a23,_BYTE *a24)
{
  char *v24;
  int v25;
  uint64_t v26;
  int v27;
  char *v28;
  void (*v29)(unsigned int *);
  int v30;
  uint64_t v31;
  int v32;

  a22 = (v27 - 914) ^ ((&a22 ^ 0x6DF41809) * v25);
  a23 = &a21 + v26;
  a24 = a18;
  v29(&a22);
  a22 = (v27 - 914) ^ (1374699841 * ((&a22 & 0x80170750 | ~(&a22 | 0x80170750)) ^ 0x121CE0A6));
  a23 = v28;
  a24 = a18;
  v29(&a22);
  a23 = v24;
  a24 = a18;
  a22 = (v27 - 914) ^ (1374699841
                     * ((&a22 - 1703598249 - 2 * (&a22 & 0x9A752757)) ^ 0xF7813F5E));
  v29(&a22);
  a23 = a18;
  a22 = (v27 - 413) ^ (1755732067
                     * ((2 * (&a22 & 0x6B25E860) - &a22 + 349837213) ^ 0xCA1CAA46));
  v31 = sub_221A3FFB0((uint64_t)&a22);
  v32 = (_DWORD)a24 == v30 + ((v27 - 109820142) & 0x68BB7FE) - 1020;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a14 + 8 * (((8 * v32) | (v32 << 9)) ^ (v27 - 1032))) - 8))(v31);
}

uint64_t sub_221A38FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v20;
  int v21;
  int v22;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8 * (int)(((a20 == v22) * (((v21 + 1980706585) & 0x89F0D3FF) + 296)) ^ v21))
                            - ((v21 - 2065801700) & 0x7B21A19F)
                            + 151))();
}

uint64_t sub_221A39020@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  _BYTE *v15;
  int v16;

  *v15 = a9 ^ 0xF9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (int)(((a14 == v16)
                                               * ((((a1 - 92) | 0xA0) ^ 0xFFFFFC63) + ((a1 + 333) | 0x210))) ^ a1))
                            - 8))();
}

uint64_t sub_221A39078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  _BOOL4 v17;

  v17 = ((uint64_t (*)(_QWORD))*(&off_24E772B10 + (v15 ^ 1)))(v14 ^ (v16 - 736) ^ v15 ^ 0x603u) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a14 + 8 * ((v17 * (v15 ^ 0x1E0)) ^ v15)) - 8))();
}

uint64_t sub_221A390D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  uint64_t v21;
  int v22;
  unsigned int v23;

  v23 = (a20 ^ v22) - (((((v20 - 1760) | 0x9A) + 73) ^ 0xEDAA0B17) & (2 * (a20 ^ v22))) + 1993672186;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * ((504
                                          * (((2 * v23) & 0xDFDBFDDA ^ 0xCD8A09D0) + (v23 ^ 0x1938FB17) - 1610946564 != 266921705)) ^ v20))
                            - 12))();
}

uint64_t sub_221A3916C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 + v2 - 1877868269 >= ((33 * (a2 ^ 0x8E)) ^ 0x29Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((2 * v5) | (v5 << 8)) ^ a2))
                            - ((a2 + 715336170) ^ 0x2AA32A80)))();
}

uint64_t sub_221A391E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v5 - a1 >= (unint64_t)(25 * (a5 ^ v6 ^ (v6 + 677))) - 1193;
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * v8) | (32 * v8)) ^ a5)))();
}

uint64_t sub_221A39220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v10
                                                              + 8
                                                              * ((54 * (v9 >= ((v7 + (a7 ^ (v8 + 1597)) + 851) ^ 0x3CDu))) ^ a7))
                                                  - 12))(a1, 0);
}

uint64_t sub_221A3925C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v13 = v11 + v10 + a6;
  v14 = v7 + v13;
  v15 = *(_OWORD *)(v14 - 31);
  v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((v9 & 0xFFFFFFE0) == 32) * ((10 * (a3 ^ (v8 + 645))) ^ 0x4AB)) ^ (v6 + a3 + 481))))();
}

void sub_221A392C0()
{
  JUMPOUT(0x221A39270);
}

uint64_t sub_221A392CC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  void (*v6)(_BYTE *);
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[4];
  unsigned int v12;
  uint64_t v13;

  *v7 = a1;
  *v8 = v2;
  v4 = ((v1 ^ 0x31F) - 325940229) & 0x136D717C;
  v12 = (v1 ^ 0x31F)
      + 535753261 * ((((2 * v11) | 0x432E8A82) - v11 + 1583921855) ^ 0xAB634B6E)
      + 9;
  v13 = v10;
  v6(v11);
  v12 = v4
      + 535753261
      * (((v11 | 0x27EC23AD) - v11 + (v11 & 0xD813DC50)) ^ 0x2D182D82)
      + 657;
  v13 = v9;
  v6(v11);
  return v3 ^ 0x620F0DF9u;
}

void sub_221A39588(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X14 }
}

uint64_t sub_221A396D8(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (v2 ^ (a2 + 215) ^ 0x8B0A4B63) == 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (((2 * v4) | (4 * v4)) ^ a2)))(a1, 827000779);
}

uint64_t sub_221A3972C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;

  *(_BYTE *)(a3 + (a2 - 827000779)) = *(_BYTE *)(v3 + (a2 - 827000779)) ^ *(_BYTE *)(v6 + ((a2 - 827000779) & 0xFLL)) ^ *(_BYTE *)(v5 + ((a2 - 827000779) & 0xFLL)) ^ *(_BYTE *)(v4 + ((a2 - 827000779) & 0xFLL)) ^ (97 * ((a2 + 53) & 0xF)) ^ 0x32;
  v13 = v8 - 267 + a2;
  v14 = a2 + 869111975;
  v15 = (v13 - 1292);
  v16 = (v9 > v11) ^ (v14 < v7);
  v17 = v14 < v10;
  if (v16)
    v17 = v9 > v11;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((83 * v17) ^ v8)) - 8))(a1, v15);
}

uint64_t sub_221A397C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((22
                                          * (((((v0 - 1518) | 0x1C8) - 654498756) ^ v1)
                                           + ((2 * v1) & 0xA7EED6BE ^ 0x60492B6) == 1408723807)) ^ v0))
                            - 8))();
}

uint64_t sub_221A39838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1362
                                          * (((a5 - 71) ^ (v5 + (((a5 - 168) | 0x605) ^ 0xAC0893E4) < 8)) & 1)) ^ a5))
                            - 4))();
}

uint64_t sub_221A39890(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((((a7 - 311191283) & 0x128C66FD) - 159)
                                          * ((a2 + a3) >> 4 != 88045238)) ^ a7))
                            - 12))();
}

uint64_t sub_221A398DC@<X0>(int a1@<W3>, unsigned int a2@<W4>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL4 v20;

  v9 = a3 + a1 + 248 * (((a2 + 920) | 0x301) ^ 0x747);
  v10 = v9 + v4;
  v11 = v9 + a4;
  v12 = v10 - v11;
  v13 = a3 & 0xF;
  v14 = v13 + v7 - v11;
  v15 = (v13 | v6) - v11;
  v16 = (v13 | v5) - v11;
  v20 = v12 > 0xF && v14 > 0xF && v15 > 0xF && v16 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((86 * v20) ^ a2)) - 12))();
}

uint64_t sub_221A39958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                         + 8
                                                                                         * (a7 ^ (1019 * (v7 > 0xF))))
                                                                             - ((52 * (a7 ^ 0x1E1) + 1506241642) & 0xA63893F6)
                                                                             + 978))(a1, a2, a3, a4, 0);
}

uint64_t sub_221A399A8@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  *(_DWORD *)(v9 - 116) = v7 + 2;
  *(_DWORD *)(v9 - 128) = v7 + 9;
  *(_DWORD *)(v9 - 136) = v7 + 8;
  v17.val[1].i64[0] = ((_BYTE)v7 + 1) & 0xF;
  v17.val[1].i64[1] = v7 & 0xF;
  v17.val[2].i64[0] = ((_BYTE)v7 - 1) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)v7 + 14) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)v7 + 13) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)v7 + 12) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)v7 + 11) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v7 + 10) & 0xF;
  v18.val[1].i64[0] = *(_DWORD *)(v9 - 128) & 0xF;
  v18.val[1].i64[1] = *(_DWORD *)(v9 - 136) & 0xF;
  v10 = *(_QWORD *)(v9 - 256);
  v18.val[2].i64[0] = ((_BYTE)v7 + 7) & 0xF;
  v18.val[2].i64[1] = (v7 + 6) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v7 + 5) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v7 + 4) & 0xF;
  v11.i64[0] = 0x6161616161616161;
  v11.i64[1] = 0x6161616161616161;
  v12.i64[0] = 0x3232323232323232;
  v12.i64[1] = 0x3232323232323232;
  v17.val[0].i64[0] = ((_BYTE)v7 + (_BYTE)v6) & 0xF;
  v17.val[0].i64[1] = *(_DWORD *)(v9 - 116) & 0xF;
  v13.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_2226906C0).u64[0];
  v13.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_2226906C0).u64[0];
  v14 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 - 15 + (v7 + v6)), *(int8x16_t *)(v5 + v17.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v4 + v17.val[0].i64[0] - 15), *(int8x16_t *)(v3 + v17.val[0].i64[0] - 15))));
  v15 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v14, v14, 8uLL), v12), vmulq_s8(v13, v11)));
  *(int8x16_t *)(a2 - 15 + (v7 + v6)) = vextq_s8(v15, v15, 8uLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((1049 * ((((a1 - 884) | 0x618) ^ 0x608) == (v8 & 0xFFFFFFF0))) ^ a1))
                                          - 8))(v8);
}

uint64_t sub_221A39B38(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (int)(((((a8 + 1437017927) & 0xAA58D7AD) - 897) * (a1 != a5)) ^ a8))
                                          - 8))(a10);
}

uint64_t sub_221A39B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = ((((a8 - 1072) ^ 0x6AD) - 1853) & v9) != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                                  + 8 * (((8 * v11) | (16 * v11)) ^ (a8 - 1072)))
                                                                                      - 4))(a1, a2, a3, a4, a5, (v8 - a5));
}

uint64_t sub_221A39BB0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  char v13;
  unsigned int v14;
  int v15;
  char v16;
  uint64_t v17;
  int8x16x4_t v19;

  *(_DWORD *)(v12 - 152) = v11;
  v14 = ((a5 - 19) ^ 0xFFFFFC3B) & v11;
  *(_QWORD *)(v12 - 136) = v6 - 7;
  *(_QWORD *)(v12 - 144) = a6 - 7;
  v15 = -a4;
  *(_DWORD *)(v12 - 160) = v14;
  v16 = v13 + a2 + a1;
  *(_DWORD *)(v12 - 128) = a5 - 19;
  *(_DWORD *)(v12 - 116) = (a5 + 1920881190) & 0x8D81ABEB;
  v17 = (v15 + a3 + a2 + a1 + 496);
  v19.val[0].i64[0] = ((_BYTE)v15 + (_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 - 16) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v15 + v16 + 2) & 0xF;
  v19.val[1].i64[0] = ((_BYTE)v15 + v16 + 1) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v15 + v10) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v15 + v16 + 15) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v15 + v16 + 14) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v15 + v16 + 13) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v15 + v10 + *(_DWORD *)(v12 - 116) + 4) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v12 - 144) + v17) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(_QWORD *)(v12 - 136) + v17), *(int8x8_t *)(v9 + (v17 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v8 + (v17 & 0xF) - 7), *(int8x8_t *)(v7 + (v17 & 0xF) - 7)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_2226906D0), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(*(_QWORD *)(v12 - 256)
                                                     + 8 * ((21 * (v15 != 8 - v14)) ^ *(_DWORD *)(v12 - 128)))
                                         - 4))((__n128)xmmword_2226906D0);
}

void sub_221A39D24()
{
  JUMPOUT(0x221A39C3CLL);
}

uint64_t sub_221A39D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (int)((((*(_DWORD *)(v11 - 116) + 1285438991) & 0xB361C74D ^ 0x305)
                                                             * (*(_DWORD *)(v11 - 152) == *(_DWORD *)(v11 - 160))) ^ *(_DWORD *)(v11 - 116)))
                                          - ((*(_DWORD *)(v11 - 116) + 536) | 0x10Du)
                                          + 1289))(a10);
}

uint64_t sub_221A39DA4@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (a1 + v7);
  *(_BYTE *)(a2 + v10) = *(_BYTE *)(v2 + v10) ^ *(_BYTE *)(v5 + (v10 & 0xF)) ^ *(_BYTE *)(v4 + (v10 & 0xF)) ^ *(_BYTE *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1933 * (a1 + 431 * (v8 ^ 0x746) - 1294 == v6)) ^ (v8 - 1596)))
                            - 12))();
}

uint64_t sub_221A39E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;

  v38 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 40) - 0x3EAB24E7EEDAADCALL), (int8x16_t)xmmword_2226906F0);
  if (a9)
    v39 = v38 == 0x39E8CCF6252BBBF8;
  else
    v39 = 1;
  v40 = !v39;
  HIDWORD(a12) = v35 << ((a7 - 14) & 0xDF ^ (a7 - 47));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (int)((158 * v40) ^ a7)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_221A39EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  _BOOL4 v39;

  v37 = (HIDWORD(a11) & 0xFEECEEFE) + (v34 ^ 0xFF76777F);
  v39 = (((_BYTE)v37 + 1) & 0xF) != 0 || v37 == -9013377;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (((((v35 ^ 0xAB) - 410) ^ 0x3E6) * v39) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_221A39F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  uint64_t v45;
  unsigned int v46;

  v46 = a10 - (((a45 + 1991023091) & 0x895367DD ^ 0x97F0829) & a13) + 630243607;
  return ((uint64_t (*)(void))(*(_QWORD *)(v45
                                        + 8
                                        * ((251
                                          * (((2 * v46) & 0xB6FEE7BE ^ 0x7E072C) + (v46 ^ 0x5FC0F469) + 753659424 == 141255167)) ^ a45))
                            - 4))();
}

uint64_t sub_221A39FE4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((104 * (v2 + v1 + 612404257 >= ((v0 + 465) ^ 0x74Du))) ^ (v0 - 966)))
                            - 12))();
}

uint64_t sub_221A3A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                 + 8
                                                                                 * (int)((1278
                                                                                        * ((((a3 ^ 0x6EB)
                                                                                           - 1877) & a6) == -612404256)) ^ a3))
                                                                     - 12))(a1, a2, a3, a2);
}

uint64_t sub_221A3A090@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v20;
  int v23;

  v9 = (v7 + v6 + a1);
  v10 = v9 + a3 + 1;
  v11 = (v7 + v6) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v12;
  v14 = v11 + v4 + 1;
  v15 = v3 + (((a2 ^ 0x28Bu) + 1056) ^ 0x747) + v12;
  v16 = v11 + v3 + 3;
  v17 = v12 + v5 + 4;
  v18 = v11 + v5 + 5;
  v20 = v14 > a3 && v13 < v10;
  if (v16 > a3 && v15 < v10)
    v20 = 1;
  v23 = v18 > a3 && v17 < v10 || v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((2006 * (v23 ^ 1)) ^ a2)) - 12))();
}

uint64_t sub_221A3A12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((252
                                                                         * (((a6 + 82) ^ (v6 < (((a6 - 795) | 0x180) ^ 0x19Au))) & 1)) ^ a6))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_221A3A16C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  *(_DWORD *)(v10 - 116) = a2 + 9;
  v17.val[1].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v11 = *(_QWORD *)(v10 - 256);
  v12 = v9 + v8 + a1;
  v17.val[3].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v17.val[3].i64[1] = *(_DWORD *)(v10 - 116) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v18.val[3].i64[0] = (a2 + 2) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v13.i64[0] = 0x7777777777777777;
  v13.i64[1] = 0x7777777777777777;
  v17.val[0].i64[0] = v12 & 0xF;
  v17.val[0].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_2226906C0).u64[0];
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_2226906C0).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v13));
  *(int8x16_t *)(a4 - 15 + v12) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + v17.val[0].i64[0] - 15), *(int8x16_t *)(a4 - 15 + v12)), *(int8x16_t *)(v17.val[0].i64[0] + v4 - 13)), *(int8x16_t *)(v6 + v17.val[0].i64[0] + ((4 * a3) ^ 0x62CLL) - 15)), vextq_s8(v15, v15, 8uLL));
  return (*(uint64_t (**)(void))(v11 + 8 * ((1988 * ((v7 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_221A3A2D4()
{
  JUMPOUT(0x221A3A25CLL);
}

uint64_t sub_221A3A2E0@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  int v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  int v38;
  char *v39;
  char *v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  char *v188;
  char *v189;
  char *v190;
  int v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  unsigned int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;

  v11 = *(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF7);
  v12 = (v8 + 806) | 0x45;
  *(_DWORD *)(v10 - 116) = v12;
  v13 = (uint64_t)*(&off_24E772B10 + v8 - 862);
  v14 = *(unsigned __int8 *)(v13 + (v11 ^ 0x85));
  HIDWORD(v15) = v14 ^ 0x1A;
  LODWORD(v15) = ((v12 + 59) ^ v14) << 24;
  v16 = (v15 >> 30) ^ 0x9F;
  v17 = (char *)*(&off_24E772B10 + v8 - 980) - 12;
  v18 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEDLL) ^ 0xBFLL];
  HIDWORD(v15) = v18 ^ 0xC;
  LODWORD(v15) = (v18 ^ 0xC0) << 24;
  LOBYTE(v18) = v15 >> 28;
  v19 = v16 << 16;
  v20 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF3) ^ 0x6FLL));
  HIDWORD(v15) = v20 ^ 0x1A;
  LODWORD(v15) = (v20 ^ 0x80) << 24;
  v21 = ((v15 >> 30) ^ 0x68) << 16;
  v22 = (uint64_t)*(&off_24E772B10 + v8 - 773);
  v23 = (char *)*(&off_24E772B10 + v8 - 857) - 4;
  v24 = v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBECLL) ^ 0xD8];
  v25 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBE9) ^ 0xBCLL];
  HIDWORD(v15) = v25 ^ 0xC;
  LODWORD(v15) = (v25 ^ 0xC0) << 24;
  LOBYTE(v25) = v15 >> 28;
  v26 = v21 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF2) ^ 0xDFLL)) ^ 0xC0) << 8) | ((v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF4) ^ 0xAFLL] ^ 0x6D) << 24);
  v27 = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF1) ^ 0x98];
  HIDWORD(v15) = v27 ^ 0xC;
  LODWORD(v15) = (v27 ^ 0xC0) << 24;
  v28 = v26 & 0xFFFFFF00 | (v15 >> 28);
  LODWORD(v17) = v17[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF5) ^ 0xD0];
  HIDWORD(v15) = v17 ^ 0xC;
  LODWORD(v15) = (v17 ^ 0xC0) << 24;
  LOBYTE(v17) = v15 >> 28;
  v29 = v19 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF6) ^ 0x49)) ^ 0x4A) << 8) | ((v23[*v9 ^ 0xFELL] ^ 0xB4) << 24);
  v30 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEBLL) ^ 0xB6));
  HIDWORD(v15) = v30 ^ 0x1A;
  LODWORD(v15) = (v30 ^ 0x80) << 24;
  v31 = (v15 >> 30) ^ 0x21;
  LODWORD(v13) = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEFLL) ^ 0xC8));
  HIDWORD(v15) = v13 ^ 0x1A;
  LODWORD(v15) = (v13 ^ 0x80) << 24;
  v32 = (((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEALL) ^ 0xC7)) ^ 1) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v24 ^ 0xBDu) << 24) | (v31 << 16) | v25 ^ 0x68) ^ 0x75F49EF4;
  v33 = v18 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEELL) ^ 0xB7)) ^ 0xE1) << 8) & 0xFF00FFFF | (((v15 >> 30) ^ 0x37) << 16) | ((v23[*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBF0) ^ 0x18] ^ 0xF2) << 24);
  v34 = ((unsigned __int16)((((*(unsigned __int8 *)(v22
                                                                   + (*(unsigned __int8 *)(v6 - 0x39E8CCF6252BBBEALL) ^ 0xC7)) ^ 1) << 8) | v25 ^ 0x68) ^ 0x9EF4) >> 8);
  v35 = (char *)*(&off_24E772B10 + (v8 ^ 0x384)) - 4;
  LODWORD(v23) = (v34 - ((2 * (v32 >> 8)) & 0x12E) - 630217321) ^ *(_DWORD *)&v35[4 * (v34 ^ 0xF5)];
  v36 = (uint64_t)*(&off_24E772B10 + (v8 ^ 0x34F));
  v37 = *(_DWORD *)(v36 + 4 * (v24 ^ 0xA2u));
  HIDWORD(v15) = ~v37;
  LODWORD(v15) = v37 ^ 0xAF8BCD8;
  v38 = v31 ^ 0xDD;
  v39 = (char *)*(&off_24E772B10 + v8 - 811) - 8;
  LODWORD(v23) = (v15 >> 2) ^ *(_DWORD *)&v39[4 * v38] ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xA555BF4) - 2060800518);
  v40 = (char *)*(&off_24E772B10 + (v8 ^ 0x319)) - 4;
  v237 = v29 & 0xFFFFFF00 | v17 ^ 0x3C;
  v41 = *(_DWORD *)&v40[4 * (v25 ^ 0xD9)] ^ v237 ^ ((_DWORD)v23
                                                                   - ((2 * (_DWORD)v23) & 0xA2BAA0D4)
                                                                   - 782413718);
  v238 = v28;
  v235 = v33;
  v233 = v41 ^ v28 ^ 0x2789BBD4;
  v42 = v33 ^ 0xE6 ^ v233;
  LODWORD(v17) = *(_DWORD *)(v36 + 4 * (((v42 ^ v32) >> 24) ^ 0x21));
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0xAF8BCD8;
  LODWORD(v17) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                                            * ((v42 ^ v32) ^ 0xDE)];
  v231 = v42 ^ v32;
  v234 = v41;
  v230 = *(_DWORD *)&v35[4 * (((unsigned __int16)(v42 ^ v32) >> 8) ^ 0x1E)] ^ *(_DWORD *)&v39[4 * (((v42 ^ v32) >> 16) ^ 0x8F)] ^ v41 ^ ((((unsigned __int16)(v42 ^ v32) >> 8) ^ 0xEB) - 630217321 + (~(2 * (((v42 ^ v32) >> 8) ^ 0x4BA6EB)) | 0xFFFFFED1) + 1) ^ ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xA555BF4) - 2060800518);
  v43 = v230 ^ 0x76E748E2 ^ v41 ^ v28;
  v236 = v32;
  v44 = *(_DWORD *)(v36 + 4 * (((v43 ^ v32) >> 24) ^ 0xA2));
  HIDWORD(v15) = ~v44;
  LODWORD(v15) = v44 ^ 0xAF8BCD8;
  v45 = v43 ^ v32 ^ 0xC84590C6;
  v46 = *(_DWORD *)&v35[4 * (BYTE1(v45) ^ 0xF5)] ^ *(_DWORD *)&v39[4
                                                                 * (((v43 ^ v32) >> 16) ^ 0x6C)] ^ (BYTE1(v45) - ((v45 >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518);
  v228 = v43 ^ v32;
  v229 = v43;
  v227 = v230 ^ 0x76E748E2 ^ *(_DWORD *)&v40[4 * ((v43 ^ v32) ^ 0x83)] ^ (v46
                                                                                         - ((2 * v46) & 0xA2BAA0D4)
                                                                                         - 782413718);
  v226 = v227 ^ 0x2789BBD4 ^ v43;
  v232 = v42;
  HIDWORD(v225) = v43 ^ v42;
  v47 = v226 ^ 0x8EDEEA78 ^ v43 ^ v42;
  v48 = *(_DWORD *)(v36 + 4 * (((v47 ^ v45) >> 24) ^ 0x67));
  HIDWORD(v15) = ~v48;
  LODWORD(v15) = v48 ^ 0xAF8BCD8;
  v49 = (v15 >> 2) ^ *(_DWORD *)&v35[4 * (((unsigned __int16)(v47 ^ v45) >> 8) ^ 0x97)] ^ ((((unsigned __int16)(v47 ^ v45) >> 8) ^ 0x62) - ((2 * (((v47 ^ v45) >> 8) ^ 0xD8B62)) & 0x12E) - 630217321);
  v50 = (v49 - ((2 * v49) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4 * ((v47 ^ v45) ^ 0xE1)];
  v51 = v227 ^ 0x2789BBD4 ^ *(_DWORD *)&v39[4 * (((v47 ^ v45 ^ 0x2142BA5) >> 16) ^ 0xB6)] ^ (v50 - ((2 * v50) & 0xA555BF4) - 2060800518);
  HIDWORD(v224) = v47 ^ v45;
  LODWORD(v225) = v47;
  HIDWORD(v223) = v51 ^ v226 ^ 0x8EDEEA78;
  LODWORD(v223) = HIDWORD(v223) ^ 0x307C325C ^ v47 ^ 0x5EF1BA37;
  LODWORD(v23) = *(_DWORD *)(v36 + 4 * (((v223 ^ v47 ^ v45) >> 24) ^ 0xA4));
  HIDWORD(v15) = ~(_DWORD)v23;
  LODWORD(v15) = v23 ^ 0xAF8BCD8;
  LODWORD(v23) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                                            * ((v223 ^ v47 ^ v45) ^ 0x18)];
  v52 = v223 ^ v47 ^ v45 ^ 0xCEE37B5D;
  HIDWORD(v222) = v223 ^ v47 ^ v45;
  LODWORD(v224) = v51;
  v53 = *(_DWORD *)&v39[4 * (BYTE6(v222) ^ 0xCA)] ^ *(_DWORD *)&v35[4 * (BYTE1(v52) ^ 0xF5)] ^ v51 ^ (BYTE1(v52) - ((v52 >> 7) & 0x12E) - 630217321) ^ 0xD4F2AD1A ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xA555BF4) - 2060800518);
  v54 = v53 ^ ((v47 ^ 0x5EF1BA37) - ((2 * (v47 ^ 0x5EF1BA37)) & 0xA9E55A34) - 722293478);
  LODWORD(v17) = *(_DWORD *)(v36 + 4 * (((v54 ^ v52) >> 24) ^ 0x70));
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0xAF8BCD8;
  LODWORD(v17) = ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518) ^ *(_DWORD *)&v39[4
                                                                                            * (((v54 ^ v52 ^ 0xF3443494) >> 16) ^ 0xE4)];
  LODWORD(v17) = ((_DWORD)v17 - 782413718 + (~(2 * (_DWORD)v17) | 0x5D455F2B) + 1) ^ *(_DWORD *)&v40[4 * ((v53 ^ ((v47 ^ 0x37) - ((2 * (v47 ^ 0x37)) & 0x34) + 26) ^ v52) ^ 0x91)];
  LODWORD(v221) = v54 ^ v52;
  v55 = v54 ^ v52 ^ 0x1A89BBD4;
  LODWORD(v17) = ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xB4DF4B2E) - 630217321) ^ *(_DWORD *)&v35[4 * (BYTE1(v55) ^ 0xF5)];
  v56 = v7;
  v57 = v53 ^ BYTE1(v55) ^ ((_DWORD)v17 - ((2 * (_DWORD)v17) & 0xA9E55A34) - 722293478);
  HIDWORD(v221) = v54;
  LODWORD(v222) = v53;
  LODWORD(v220) = v53 ^ ((HIDWORD(v223) ^ 0x307C325C) - ((2 * (HIDWORD(v223) ^ 0x307C325C)) & 0xA9E55A34) - 722293478);
  HIDWORD(v219) = v57 ^ v220;
  LODWORD(v17) = v57 ^ v220 ^ 0xE6F58988;
  v58 = v17 ^ v54;
  v59 = v17 ^ v54 ^ v55;
  v60 = *(_DWORD *)(v36 + 4 * (HIBYTE(v59) ^ 0x43));
  HIDWORD(v15) = ~v60;
  LODWORD(v15) = v60 ^ 0xAF8BCD8;
  v61 = *(_DWORD *)&v35[4 * (((unsigned __int16)(v59 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)&v39[4 * (((v59 ^ 0x4D501F31) >> 16) ^ 0xE2)] ^ (((unsigned __int16)(v59 ^ 0x7ABE) >> 8) - (((v59 ^ 0x299B7ABE) >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA555BF4) - 2060800518);
  HIDWORD(v220) = v57;
  v62 = v57 ^ *(_DWORD *)&v40[4 * (v59 ^ 0xFB)] ^ (v61 - ((2 * v61) & 0xA2BAA0D4) - 782413718);
  HIDWORD(v217) = v62 ^ v17;
  LODWORD(v17) = v62 ^ v17 ^ 0x5BF36347;
  LODWORD(v219) = v58;
  LODWORD(v217) = v17 ^ v58;
  LODWORD(v23) = v17 ^ v58 ^ 0x2745D0FF;
  v63 = v23 ^ v59 ^ 0x299B7ABE ^ 0x3DCC6B2B;
  v64 = (BYTE1(v63) - ((v63 >> 7) & 0x12E) - 630217321) ^ *(_DWORD *)&v35[4 * (BYTE1(v63) ^ 0xF5)];
  v65 = (v64 - ((2 * v64) & 0xA2BAA0D4) - 782413718) ^ *(_DWORD *)&v40[4
                                                                     * ((~(v17 ^ v58) ^ v59 ^ 0xBE) ^ 0x6E)];
  HIDWORD(v216) = v23 ^ v59 ^ 0x299B7ABE;
  v66 = *(_DWORD *)(v36 + 4 * (HIBYTE(HIDWORD(v216)) ^ 0x57u));
  HIDWORD(v15) = ~v66;
  LODWORD(v15) = v66 ^ 0xAF8BCD8;
  v218 = __PAIR64__(v59, v62);
  LODWORD(v216) = (v15 >> 2) ^ *(_DWORD *)&v39[4 * (((HIDWORD(v216) ^ 0x516EF336u) >> 16) ^ 0x8B)] ^ v62 ^ (v65 - ((2 * v65) & 0xA555BF4) - 2060800518);
  HIDWORD(v215) = v216 ^ 0x930000ED ^ v17;
  LODWORD(v215) = HIDWORD(v215) ^ 0x8D06EA22 ^ v23;
  v67 = *(_DWORD *)(v36 + 4 * (((v215 ^ v63) >> 24) ^ 0x39));
  HIDWORD(v15) = ~v67;
  LODWORD(v15) = v67 ^ 0xAF8BCD8;
  HIDWORD(v214) = v215 ^ v63;
  LODWORD(v32) = v215 ^ v63 ^ 0x53DEAA41;
  v68 = *(_DWORD *)&v40[4 * ((v215 ^ v63) ^ 4)] ^ *(_DWORD *)&v35[4 * (BYTE1(v32) ^ 0xF5)] ^ 0xB32F5FD ^ (v15 >> 2);
  v69 = *(_DWORD *)&v39[4 * (((v215 ^ v63 ^ 0x9289BB39) >> 16) ^ 0x7E)] ^ v216 ^ 0x930000ED ^ BYTE1(v32) ^ 0xE1715EEC ^ (v68 - ((2 * v68) & 0xA555BF4) - 2060800518);
  v70 = (HIDWORD(v215) ^ 0x8D06EA22) - ((2 * (HIDWORD(v215) ^ 0x8D06EA22)) & 0xC2E2BDD8);
  LODWORD(v23) = v69 ^ ((_DWORD)v23 - ((2 * (_DWORD)v23) & 0xC2E2BDD8) - 512663828);
  LODWORD(v36) = *(_DWORD *)(v36 + 4 * (((v23 ^ v32) >> 24) ^ 0x44));
  HIDWORD(v15) = ~(_DWORD)v36;
  LODWORD(v15) = v36 ^ 0xAF8BCD8;
  v71 = *(_DWORD *)&v35[4
                      * (((unsigned __int16)((unsigned __int16)v23 ^ WORD2(v214) ^ 0xAA41) >> 8) ^ 0xFD)] ^ *(_DWORD *)&v40[4 * (v23 ^ BYTE4(v214) ^ 0x41 ^ 0xC4)] ^ ((((unsigned __int16)((unsigned __int16)v23 ^ WORD2(v214) ^ 0xAA41) >> 8) ^ 8) - (((v23 ^ v32) >> 7) & 0x12E) - 630217321) ^ ((v15 >> 2) - ((2 * (v15 >> 2)) & 0xA2BAA0D4) - 782413718);
  HIDWORD(v213) = v23 ^ v32 ^ 0xF2402859;
  LODWORD(v17) = (v71 - ((2 * v71) & 0xA555BF4) - 2060800518) ^ *(_DWORD *)&v39[4
                                                                              * (((v23 ^ v32) >> 16) ^ 0x16)];
  LODWORD(v34) = (_DWORD)v17 - ((2 * (_DWORD)v17) & 0xC2E2BDD8);
  v72 = (uint64_t)*(&off_24E772B10 + (v8 ^ 0x3BC));
  v73 = (char *)*(&off_24E772B10 + v8 - 920) - 4;
  v74 = (uint64_t)*(&off_24E772B10 + v8 - 864);
  v75 = *(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 109) ^ 0xA5));
  HIDWORD(v15) = v75 ^ 7;
  LODWORD(v15) = v75 << 24;
  v76 = (uint64_t)*(&off_24E772B10 + (v8 ^ 0x3BE));
  v210 = v74;
  v212 = v72;
  v77 = (*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 105) ^ 0x28)) ^ 0xD) & 0xFFFF00FF | ((((*(_BYTE *)(v10 - 106) ^ 0xAC) + *(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 106) ^ 0xA3)) + 87) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 108) ^ 0xB2)) ^ 0x2E) << 24);
  v209 = v76;
  LODWORD(v17) = (*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 97) ^ 0x7BLL)) ^ 0x78) & 0xFFFF00FF | ((((*(_BYTE *)(v10 - 98) ^ 0xD0) + *(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 98) ^ 0xDFLL)) + 87) ^ 0xE4) << 8) | ((v73[*(unsigned __int8 *)(v10 - 99) ^ 0xAALL] ^ 0xE2) << 16) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 100) ^ 0x45)) ^ 0x16) << 24);
  v211 = v73;
  v78 = (((((v15 >> 30) ^ 0xDB) >> 2) | (((v15 >> 30) ^ 0xDB) << 6)) | ((v73[*(unsigned __int8 *)(v10 - 111) ^ 0x7ALL] ^ 0x81) << 16) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 112) ^ 0x78)) ^ 0x2C) << 24) | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 110) ^ 0x5DLL)) + (*(_BYTE *)(v10 - 110) ^ 0x52) + 87) ^ 0x5D) << 8)) ^ 0xAE30F304;
  LODWORD(v72) = ((*(unsigned __int8 *)(v74 + (*(unsigned __int8 *)(v10 - 101) ^ 0x60)) ^ 0xCC) & 0xFFFF00FF | ((v73[*(unsigned __int8 *)(v10 - 103) ^ 5] ^ 0xD0) << 16) | (((*(_BYTE *)(v72 + (*(unsigned __int8 *)(v10 - 102) ^ 4)) + (*(_BYTE *)(v10 - 102) ^ 0xB) + 87) ^ 0x33) << 8) | ((*(unsigned __int8 *)(v76 + (*(unsigned __int8 *)(v10 - 104) ^ 0x1CLL)) ^ 0xD9) << 24)) ^ 0xF27FA7C8;
  v79 = (v77 | ((v73[*(unsigned __int8 *)(v10 - 107) ^ 0x27] ^ 0xB4) << 16)) ^ 0xF6784D9;
  LODWORD(v40) = v17 ^ 0x8663AEDE;
  LODWORD(v208) = v56 + 9013377;
  v80 = *(_DWORD *)(v10 - 116);
  HIDWORD(v207) = v80 & 0xBC56885E;
  LODWORD(v207) = v80 ^ 0x754;
  HIDWORD(v206) = v69 ^ (v70 - 512663828);
  LODWORD(v214) = v69;
  LODWORD(v206) = (v34 - 512663828) ^ v69;
  HIDWORD(v205) = v80 ^ 0x711;
  LODWORD(v205) = v80 ^ 0x7F2;
  LODWORD(v213) = v23 ^ 0x626A2240;
  HIDWORD(v208) = (v70 - 512663828) ^ 0x3DC8BA5D ^ (v34 - 512663828);
  HIDWORD(a6) = HIDWORD(v208) ^ v23 ^ 0x626A2240;
  *(_QWORD *)(v10 - 200) = 7;
  v81 = a1[7];
  *(_QWORD *)(v10 - 152) = 12;
  LODWORD(v17) = *(unsigned __int8 *)(v74 + (v81 ^ 0x41));
  v82 = a1[12] ^ 0x60;
  v83 = ((v80 - 1525) | 0x424) ^ 0x57Cu;
  *(_QWORD *)(v10 - 144) = v83;
  *(_QWORD *)(v10 - 128) = 1;
  v84 = *(unsigned __int8 *)(v209 + v82) ^ 0xAD;
  v85 = *(unsigned __int8 *)(v209 + (a1[v83] ^ 0xC1)) ^ 0x19;
  LODWORD(v82) = v73[a1[1] ^ 0x66] ^ 0x6D;
  *(_QWORD *)(v10 - 136) = 15;
  LODWORD(v35) = (_DWORD)v82 << 16;
  v86 = a1[15] ^ 0xE9;
  *(_QWORD *)(v10 - 160) = 11;
  LODWORD(v86) = *(unsigned __int8 *)(v74 + v86) ^ 0xDA;
  LODWORD(v73) = v86 | (v84 << 24);
  v87 = *(unsigned __int8 *)(v74 + (a1[11] ^ 0xC3));
  *(_QWORD *)(v10 - 176) = 0;
  v88 = v35 | ((*(unsigned __int8 *)(v209 + (*a1 ^ 0x30)) ^ 0x9D) << 24);
  LOBYTE(v35) = v87 ^ 0x10;
  *(_QWORD *)(v10 - 168) = 2;
  v89 = v88 & 0xFFFF00FF | (((*(_BYTE *)(v212 + (a1[2] ^ 0xC0)) + (a1[2] ^ 0xCF) + 87) ^ 0xF9) << 8);
  *(_QWORD *)(v10 - 232) = 4;
  *(_QWORD *)(v10 - 216) = 9;
  v90 = v211[a1[9] ^ 0x5DLL] ^ 0xBE;
  *(_QWORD *)(v10 - 192) = 10;
  v91 = (v90 << 16) | (((*(_BYTE *)(v212 + (a1[10] ^ 0xD5)) + (a1[10] ^ 0xDA) + 87) ^ 0xCF) << 8) | v87 ^ 0x10 | (v85 << 24);
  *(_QWORD *)(v10 - 184) = 14;
  v92 = a1[14];
  LOBYTE(v85) = *(_BYTE *)(v212 + (v92 ^ 0xE4));
  *(_QWORD *)(v10 - 224) = 5;
  LODWORD(v74) = (v85 + (v92 ^ 0xEB) - 41);
  *(_QWORD *)(v10 - 208) = 3;
  LODWORD(v92) = *(unsigned __int8 *)(v210 + (a1[3] ^ 0xDCLL)) ^ 0xCE | v89;
  *(_QWORD *)(v10 - 240) = 13;
  LODWORD(v17) = v17 ^ 0xA;
  v93 = v17 | ((*(unsigned __int8 *)(v209 + (a1[4] ^ 0xFCLL)) ^ 0x23) << 24);
  LODWORD(v73) = ((_DWORD)v74 << 8) | ((v211[a1[13] ^ 0x92] ^ 0x83) << 16) | v73;
  LODWORD(v74) = (v211[a1[5] ^ 0xA9] ^ 0x50) << 16;
  *(_QWORD *)(v10 - 248) = 6;
  v94 = v91 + 1271275121 - 2 * (v91 & 0x4BC61E75 ^ v35 & 4);
  LODWORD(v35) = v78 ^ v237 ^ (v92 - ((2 * v92) & 0x2F12947A) + 394873405);
  v95 = v79 ^ v238 ^ ((v74 & 0xFFFF00FF | (((*(_BYTE *)(v212 + (a1[6] ^ 0x4FLL)) + (a1[6] ^ 0x40) + 87) ^ 0xB7) << 8) | v93)
                    - 2
                    * ((v74 & 0x36DE0070 | (((*(_BYTE *)(v212 + (a1[6] ^ 0x4FLL)) + (a1[6] ^ 0x40) + 87) ^ 0xB7) << 8) & 0x3D70 | v93 & 0x36DE3D70) ^ v17 & 0x10)
                    - 1226949280);
  LODWORD(v17) = v40 ^ v236 ^ ((_DWORD)v73 + 1071257447 - 2
                                                                      * (v73 & 0x3FDA1777 ^ v86 & 0x10));
  v96 = v72 ^ v235 ^ v94;
  v97 = (char *)*(&off_24E772B10 + (v80 ^ 0x754)) - 8;
  LODWORD(v72) = *(_DWORD *)&v97[4 * (HIBYTE(v96) ^ 0x3F)];
  HIDWORD(v15) = ~(_DWORD)v72;
  LODWORD(v15) = v72 ^ 0x1DE9534E;
  v98 = (uint64_t)*(&off_24E772B10 + v80 - 1765);
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x34u)) ^ ((BYTE2(v17) ^ 0x68)
                                                                             - 114727250
                                                                             - 2
                                                                             * (((v17 >> 16) ^ 0xB768) & 0xBE ^ (v17 >> 16) & 0x10));
  v99 = (char *)*(&off_24E772B10 + (int)(v80 & 0xBC56885E)) - 4;
  v100 = *(_DWORD *)&v99[4 * (v96 ^ 0xC6)] ^ ((BYTE2(v35) ^ 0xD5)
                                                             - 114727250
                                                             - ((2 * ((v35 >> 16) ^ 0x6CD5)) & 0x15C)) ^ ((v96 ^ 0xAB) + 1069380434 + ((2 * (v96 ^ 0xAB) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0x89u));
  v101 = *(_DWORD *)(v98 + 4 * (BYTE2(v95) ^ 0x8Cu)) ^ *(_DWORD *)&v99[4 * (v17 ^ 0xB6)] ^ ((v17 ^ 0xDB) + 1069380434 + ((2 * (v17 ^ 0xDB) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v95) ^ 0xD0) - 114727250 - ((2 * (HIWORD(v95) ^ 0xC8D0)) & 0x15C));
  v102 = *(_DWORD *)&v97[4 * (HIBYTE(v95) ^ 0xC8)];
  HIDWORD(v15) = ~v102;
  LODWORD(v15) = v102 ^ 0x1DE9534E;
  LODWORD(v92) = v101 + 1312414243 - ((2 * v101) & 0x9C73B446);
  v103 = v100 + 1312414243 - ((2 * v100) & 0x9C73B446);
  LODWORD(v73) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x6C)];
  LODWORD(v86) = ((BYTE2(v96) ^ 0xAD) - 114727250 - ((2 * (HIWORD(v96) ^ 0x3FAD)) & 0x15C)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0x1C)] ^ ((v35 ^ 0x71) + 1069380434 + ((2 * (v35 ^ 0x71) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v96) ^ 0xF1u)) ^ (v15 >> 1);
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  v104 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0xB7)];
  HIDWORD(v15) = ~v104;
  LODWORD(v15) = v104 ^ 0x1DE9534E;
  v105 = (uint64_t)*(&off_24E772B10 + v80 - 1760);
  v106 = (v95 ^ 0x10) + 1069380434 + ((2 * (v95 ^ 0x10) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v74) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0xDEu)) ^ v232 ^ *(_DWORD *)&v99[4
                                                                                       * (v95 ^ 0x7D)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  v107 = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x66u));
  LODWORD(v17) = v103 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v95) ^ 0x2Fu)) ^ (v15 >> 1);
  LODWORD(v35) = (_DWORD)v17 - ((2 * (_DWORD)v17) & 0x3E5B35E);
  v108 = v74 ^ v106;
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v96) ^ 0x29u)) ^ v234 ^ v73 ^ v92;
  LODWORD(v86) = v107 ^ v233 ^ (v86 + 1312414243 - ((2 * v86) & 0x9C73B446));
  LODWORD(v73) = *(_DWORD *)&v97[4 * ((v74 ^ ~v106) >> 24)];
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  LODWORD(v74) = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x91)];
  HIDWORD(v15) = ~(_DWORD)v74;
  LODWORD(v15) = v74 ^ 0x1DE9534E;
  LODWORD(v74) = v15 >> 1;
  v109 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xA3)];
  HIDWORD(v15) = ~v109;
  LODWORD(v15) = v109 ^ 0x1DE9534E;
  v110 = v74 ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0xF0u)) ^ ((BYTE2(v86) ^ 0xAC)
                                                              - 114727250
                                                              - 2 * ((WORD1(v86) ^ 0xA3AC) & 0xBF ^ WORD1(v86) & 0x11));
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x7B)] ^ *(_DWORD *)(v98
                                                                                             + 4
                                                                                             * (BYTE2(v108) ^ 0x15u)) ^ ((BYTE2(v108) ^ 0x49) - 114727250 - ((2 * (HIWORD(v108) ^ 0xFF49)) & 0x15C)) ^ ((v17 ^ 0x16) + 1069380434 + ((2 * (v17 ^ 0x16) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v92) = v74 + 1312414243 - ((2 * v74) & 0x9C73B446);
  LODWORD(v35) = ((_DWORD)v35 + 32692655) ^ v231;
  v111 = (v110 + 1312414243 - ((2 * v110) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v108) ^ 0x2Cu));
  LODWORD(v73) = v73 ^ *(_DWORD *)&v99[4 * (v86 ^ 3)] ^ ((v86 ^ 0x6E)
                                                                                      + 1069380434
                                                                                      + ((2
                                                                                        * (v86 ^ 0x6E)
                                                                                        + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0x97u)) ^ ((BYTE2(v35) ^ 0xCB) - 114727250 - ((2 * ((v35 >> 16) ^ 0x6FCB)) & 0x15C));
  LODWORD(v74) = *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x2Eu)) ^ ((BYTE2(v17) ^ 0x72)
                                                                - 114727250
                                                                - ((2 * ((v17 >> 16) ^ 0x9172)) & 0x15C));
  v112 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x6F)];
  HIDWORD(v15) = ~v112;
  LODWORD(v15) = v112 ^ 0x1DE9534E;
  LODWORD(v86) = ((v108 ^ 0xFC)
                + 1069380434
                + ((2 * (v108 ^ 0xFC) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v105
                                                                                                 + 4
                                                                                                 * (BYTE1(v86) ^ 0xBDu)) ^ *(_DWORD *)&v99[4 * (v108 ^ 0x91)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446)) ^ (v15 >> 1);
  v113 = ((v35 ^ 0xE2) - 1726037377) ^ v230 ^ *(_DWORD *)&v99[4 * (v35 ^ 0x8F)] ^ (v111 - 1499549486 - ((2 * v111) & 0x4D3D61A4));
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x57u)) ^ HIDWORD(v225) ^ ((_DWORD)v73
                                                                                 + 1312414243
                                                                                 - ((2 * (_DWORD)v73) & 0x9C73B446));
  LODWORD(v86) = (v86 - ((2 * v86) & 0x80116EF0) - 1073170568) ^ v228;
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x42u)) ^ v229 ^ v92;
  v114 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x2D)];
  HIDWORD(v15) = ~v114;
  LODWORD(v15) = v114 ^ 0x1DE9534E;
  LODWORD(v74) = ((v35 ^ 0xA1)
                + 1069380434
                + ((2 * (v35 ^ 0xA1) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xCC)];
  v115 = *(_DWORD *)(v98 + 4 * (BYTE2(v113) ^ 0xDBu)) ^ ((BYTE2(v113) ^ 0x87)
                                                         - 114727250
                                                         - 2 * ((HIWORD(v113) ^ 0x3A87) & 0xBE ^ HIWORD(v113) & 0x10)) ^ (v15 >> 1);
  LODWORD(v74) = (v74 + 1312414243 - ((2 * v74) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v113) ^ 0xDEu));
  LODWORD(v73) = ((v113 ^ 0x9E)
                + 1069380434
                + ((2 * (v113 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v113 ^ 0xF3)];
  v116 = (v115 + 1312414243 - ((2 * v115) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x57u));
  v117 = ((v17 ^ 0x740CBC3A) >> 16);
  LODWORD(v92) = v117 - 114727250 - (((v17 ^ 0x740CBC3A) >> 15) & 0x15C);
  v118 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x37)];
  HIDWORD(v15) = ~v118;
  LODWORD(v15) = v118 ^ 0x1DE9534E;
  v119 = v15 >> 1;
  v120 = *(_DWORD *)&v97[4 * (HIBYTE(v113) ^ 0x3A)];
  HIDWORD(v15) = ~v120;
  LODWORD(v15) = v120 ^ 0x1DE9534E;
  v121 = BYTE2(v35) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0xF6u)) ^ *(_DWORD *)(v105
                                                                                + 4
                                                                                * ((unsigned __int16)((unsigned __int16)v17 ^ 0xBC3A) >> 8)) ^ 0xB710BC27 ^ (v15 >> 1);
  v122 = ((v86 ^ 0x68) - 1726037377) ^ v227 ^ *(_DWORD *)&v99[4 * (v86 ^ 5)] ^ (v121 - 1499549486 - ((2 * v121) & 0x4D3D61A4));
  LODWORD(v17) = ((v17 ^ 0x3A) - 1726037377) ^ HIDWORD(v224) ^ *(_DWORD *)&v99[4
                                                                                              * (v17 ^ 0x57)] ^ (v116 - 1499549486 - ((2 * v116) & 0x4D3D61A4));
  LODWORD(v35) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0x7C)];
  HIDWORD(v15) = ~(_DWORD)v35;
  LODWORD(v15) = v35 ^ 0x1DE9534E;
  v123 = *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x8Eu)) ^ v225 ^ BYTE2(v86) ^ v119 ^ (v74
                                                                                   - 114727250
                                                                                   - ((2 * v74) & 0xF252CD5C));
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x57u)) ^ v226 ^ v92 ^ *(_DWORD *)(v98 + 4 * (v117 ^ 0x5Cu)) ^ (v15 >> 1) ^ ((_DWORD)v73 + 1312414243 - ((2 * (_DWORD)v73) & 0x9C73B446));
  LODWORD(v86) = v123 ^ 0xFA64A511;
  LODWORD(v74) = ((v123 ^ 0x11) + 1069380434 + ((2 * (v123 ^ 0xFA64A511) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v123 ^ 0x7C)];
  LODWORD(v73) = *(_DWORD *)&v97[4 * (HIBYTE(v122) ^ 0x5B)];
  v124 = v74 + 1312414243 - ((2 * v74) & 0x9C73B446);
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  v125 = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0x28)];
  LODWORD(v74) = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x1F)];
  HIDWORD(v15) = ~v125;
  LODWORD(v15) = v125 ^ 0x1DE9534E;
  LODWORD(v73) = v15 >> 1;
  v126 = *(_DWORD *)&v97[4 * (HIBYTE(v123) ^ 0xB9)];
  HIDWORD(v15) = ~v126;
  LODWORD(v15) = v126 ^ 0x1DE9534E;
  v127 = v15 >> 1;
  LODWORD(v74) = v74 ^ ((v17 ^ 0x72)
                      + 1069380434
                      + ((2 * (v17 ^ 0x72) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  v128 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xB4)];
  HIDWORD(v15) = ~v128;
  LODWORD(v15) = v128 ^ 0x1DE9534E;
  v129 = v127 ^ *(_DWORD *)&v99[4 * (v35 ^ 0x8B)] ^ ((v35 ^ 0xE6)
                                                                    + 1069380434
                                                                    + ((2 * (v35 ^ 0xE6) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  v130 = BYTE2(v122) ^ 0x95;
  v131 = v130 - 114727250 - ((2 * (HIWORD(v122) ^ 0x5B95)) & 0x15C);
  LODWORD(v83) = v122;
  v132 = (v122 ^ 0xF4) + 1069380434 + ((2 * (v122 ^ 0xF4) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v133 = ((BYTE2(v17) ^ 0x14)
        - 114727250
        - 2 * (((v17 >> 16) ^ 0x2814) & 0xAF ^ (v17 >> 16) & 1)) ^ v223 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v122) ^ 0x1Fu)) ^ (v129 + 1312414243 - ((2 * v129) & 0x9C73B446)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x48u));
  v134 = *(_DWORD *)(v105 + 4 * BYTE1(v86)) ^ v224 ^ ((BYTE2(v35) ^ 0x59)
                                                      - 114727250
                                                      - ((2 * ((v35 >> 16) ^ 0xB459)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 5u)) ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  LODWORD(v86) = (BYTE2(v86) - 114727250 - ((v86 >> 15) & 0x15C)) ^ HIDWORD(v223) ^ *(_DWORD *)&v99[4 * (v83 ^ 0x99)] ^ v132 ^ ((v15 >> 1) + 1312414243 - ((2 * (v15 >> 1)) & 0x9C73B446)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x5Cu)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x12u));
  LODWORD(v35) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x34u)) ^ HIDWORD(v222) ^ v131 ^ *(_DWORD *)(v98 + 4 * (v130 ^ 0x5Cu)) ^ v124 ^ v73;
  LODWORD(v17) = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xEB)];
  HIDWORD(v15) = ~(_DWORD)v17;
  LODWORD(v15) = v17 ^ 0x1DE9534E;
  LODWORD(v17) = (v15 >> 1) + 1312414243 - ((2 * (v15 >> 1)) & 0x9C73B446);
  v135 = ((BYTE2(v86) ^ 0x81) - 114727250 - ((2 * (WORD1(v86) ^ 0x1481)) & 0x15C)) ^ *(_DWORD *)(v98
                                                                                               + 4
                                                                                               * (BYTE2(v86) ^ 0xDDu));
  v136 = ((v86 ^ 0x51) + 1069380434 + ((2 * (v86 ^ 0x51) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v86 ^ 0x3C)];
  LODWORD(v74) = *(_DWORD *)(v98 + 4 * (BYTE2(v133) ^ 0xDBu)) ^ ((BYTE2(v133) ^ 0x87)
                                                                 - 114727250
                                                                 - ((2 * (HIWORD(v133) ^ 0x7787)) & 0x15C));
  v137 = *(_DWORD *)(v98 + 4 * (((v35 ^ 0xA87CE98B) >> 16) ^ 0x5Cu)) ^ ((v35 ^ 0xA87CE98B) >> 16) ^ (v136 - 114727250 - ((2 * v136) & 0xF252CD5C));
  v138 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x14)];
  HIDWORD(v15) = ~v138;
  LODWORD(v15) = v138 ^ 0x1DE9534E;
  v139 = v15 >> 1;
  v140 = *(_DWORD *)&v97[4 * (HIBYTE(v134) ^ 0x9A)];
  HIDWORD(v15) = ~v140;
  LODWORD(v15) = v140 ^ 0x1DE9534E;
  v141 = ((v35 ^ 0x8B)
        + 1069380434
        + ((2 * (v35 ^ 0xA87CE98B) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)(v105
                                                                                           + 4 * (BYTE1(v133) ^ 0xDEu)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xE6)] ^ (v135 + 1312414243 - ((2 * v135) & 0x9C73B446)) ^ (v15 >> 1);
  v142 = *(_DWORD *)&v97[4 * (HIBYTE(v133) ^ 0x77)];
  HIDWORD(v15) = ~v142;
  LODWORD(v15) = v142 ^ 0x1DE9534E;
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x34u)) ^ v221 ^ ((BYTE2(v134) ^ 0xE9)
                                                                        - 114727250
                                                                        - ((2 * (HIWORD(v134) ^ 0x9AE9)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v134) ^ 0xB5u)) ^ ((v133 ^ 0x9E) + 1069380434 + ((2 * (v133 ^ 0x9E) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ v17 ^ *(_DWORD *)&v99[4 * (v133 ^ 0xF3)];
  LODWORD(v83) = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0xBu)) ^ v220 ^ v139 ^ ((v134 ^ 0xA8)
                                                                              + 1069380434
                                                                              + ((2 * (v134 ^ 0xA8)
                                                                                + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v134 ^ 0xC5)] ^ (v74 + 1312414243 - ((2 * v74) & 0x9C73B446));
  v143 = *(_DWORD *)(v105 + 4 * (BYTE1(v134) ^ 0x2Du)) ^ HIDWORD(v221) ^ (v15 >> 1) ^ (v137
                                                                                       + 1312414243
                                                                                       - ((2 * v137) & 0x9C73B446));
  LODWORD(v86) = (v141 - 722293478 - ((2 * v141) & 0xA9E55A34)) ^ v222;
  v144 = *(_DWORD *)&v97[4 * (BYTE3(v83) ^ 0x6D)];
  HIDWORD(v15) = ~v144;
  LODWORD(v15) = v144 ^ 0x1DE9534E;
  v145 = v15 >> 1;
  v146 = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xFD)];
  v147 = *(_DWORD *)(v98 + 4 * (((v83 ^ 0x2E0E654A) >> 16) ^ 0x5Cu)) ^ (~v146 << 31) ^ (v146 >> 1) ^ (((v83 ^ 0x2E0E654A) >> 16) - 114727250 - (((v83 ^ 0x2E0E654A) >> 15) & 0x15C)) ^ 0xEF4A9A7;
  v148 = ((v83 ^ 0x4A) + 1069380434 + ((2 * (v83 ^ 0x2E0E654A) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v83 ^ 0x27)];
  LODWORD(v73) = v147 + 1312414243 - ((2 * v147) & 0x9C73B446);
  v149 = *(_DWORD *)&v97[4 * (HIBYTE(v143) ^ 0xAE)];
  HIDWORD(v15) = ~v149;
  LODWORD(v15) = v149 ^ 0x1DE9534E;
  v150 = (v15 >> 1) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0xA4u)) ^ (v148 + 1312414243 - ((2 * v148) & 0x9C73B446));
  LODWORD(v92) = v150 - 114727250 - ((2 * v150) & 0xF252CD5C);
  v151 = *(_DWORD *)(v98 + 4 * (BYTE2(v143) ^ 0x3Au)) ^ v145 ^ *(_DWORD *)&v99[4 * (v86 ^ 0x4D)] ^ ((v86 ^ 0x20) + 1069380434 + ((2 * (v86 ^ 0x20) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v143) ^ 0x66) - 114727250 - 2 * ((HIWORD(v143) ^ 0xAE66) & 0xAF ^ HIWORD(v143) & 1));
  LODWORD(v35) = ((v143 ^ 0xB3)
                - 413623133
                + ((2 * (v143 ^ 0xB3) + 126) & 0x46 ^ 0xEFCE7BFF)) ^ *(_DWORD *)(v105
                                                                                                + 4
                                                                                                * (BYTE1(v83) ^ 0x65u));
  LODWORD(v35) = ((_DWORD)v35 - 1499549486 - ((2 * (_DWORD)v35) & 0x4D3D61A4)) ^ *(_DWORD *)&v99[4
                                                                                               * (v143 ^ 0xDE)];
  LODWORD(v86) = *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x40u)) ^ ((BYTE2(v86) ^ 0x1C)
                                                                - 114727250
                                                                - ((2 * (WORD1(v86) ^ 0xFD1C)) & 0x15C));
  LODWORD(v86) = (v86 ^ 0xD9E215AF ^ -(v86 ^ 0xD9E215AF) ^ ((v86 ^ v35 ^ 0x431D28D3)
                                                          + (v35 ^ 0x6500C283)
                                                          + 1))
               + (v35 ^ 0x6500C283);
  LODWORD(v35) = *(_DWORD *)&v97[4 * ((v17 ^ 0x3F162902) >> 24)];
  HIDWORD(v15) = ~(_DWORD)v35;
  LODWORD(v15) = v35 ^ 0x1DE9534E;
  v152 = *(_DWORD *)(v105 + 4 * (BYTE1(v143) ^ 0x7Cu));
  v153 = ((v17 ^ 0x3F162902) >> 16) ^ v219 ^ *(_DWORD *)(v98 + 4 * (((v17 ^ 0x3F162902) >> 16) ^ 0x5Cu)) ^ v92;
  v154 = (v15 >> 1) ^ HIDWORD(v218) ^ v86;
  v155 = *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0xCBu)) ^ HIDWORD(v219) ^ (v151 + 1312414243 - ((2 * v151) & 0x9C73B446));
  LODWORD(v35) = v152 ^ HIDWORD(v220) ^ ((v17 ^ 2)
                                       + 1069380434
                                       + ((2 * (v17 ^ 0x3F162902) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v17 ^ 0x6F)] ^ v73;
  LODWORD(v86) = ((BYTE2(v35) ^ 0xE9) - 114727250 - ((2 * ((v35 >> 16) ^ 0xB8E9)) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v35) ^ 0xB5u));
  v156 = *(_DWORD *)&v97[4 * (HIBYTE(v153) ^ 0x9D)];
  HIDWORD(v15) = ~v156;
  LODWORD(v15) = v156 ^ 0x1DE9534E;
  v157 = v15 >> 1;
  LODWORD(v73) = *(_DWORD *)&v97[4 * (HIBYTE(v155) ^ 0x61)];
  HIDWORD(v15) = ~(_DWORD)v73;
  LODWORD(v15) = v73 ^ 0x1DE9534E;
  LODWORD(v17) = *(_DWORD *)&v99[4 * (v35 ^ 0xC5)] ^ *(_DWORD *)(v98 + 4 * (BYTE2(v153) ^ 0x28u)) ^ ((v35 ^ 0xA8) + 1069380434 + ((2 * (v35 ^ 0xA8) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ ((BYTE2(v153) ^ 0x74) - 114727250 - ((2 * (HIWORD(v153) ^ 0x9D74)) & 0x15C)) ^ (v15 >> 1);
  v158 = v157 ^ ((BYTE2(v154) ^ 0xE6) - 114727250 - 2 * ((HIWORD(v154) ^ 0xB0E6) & 0xAF ^ HIWORD(v154) & 1)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v154) ^ 0xBAu));
  LODWORD(v73) = v153;
  LODWORD(v92) = (v153 ^ 0xD9)
               + 1069380434
               + ((2 * (v153 ^ 0xD9) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v159 = *(_DWORD *)&v97[4 * ((v35 >> 24) ^ 0xB8)];
  HIDWORD(v15) = ~v159;
  LODWORD(v15) = v159 ^ 0x1DE9534E;
  v160 = (v155 ^ 0x85) + 1069380434 + ((2 * (v155 ^ 0x85) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  v161 = ((BYTE2(v155) ^ 8) - 114727250 - ((2 * (HIWORD(v155) ^ 0x6108)) & 0x15C)) ^ *(_DWORD *)(v98
                                                                                               + 4
                                                                                               * (BYTE2(v155) ^ 0x54u)) ^ *(_DWORD *)&v99[4 * (v154 ^ 0x29)] ^ ((v154 ^ 0x44) + 1069380434 + ((2 * (v154 ^ 0x44) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v15 >> 1);
  LODWORD(v17) = *(_DWORD *)(v105 + 4 * (BYTE1(v154) ^ 0xDDu)) ^ HIDWORD(v217) ^ ((_DWORD)v17
                                                                                  + 1312414243
                                                                                  - ((2 * (_DWORD)v17) & 0x9C73B446));
  LODWORD(v83) = *(_DWORD *)&v97[4 * (HIBYTE(v154) ^ 0xB0)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v162 = *(_DWORD *)(v105 + 4 * (BYTE1(v153) ^ 0xBDu)) ^ v218 ^ (v161 + 1312414243 - ((2 * v161) & 0x9C73B446));
  v163 = *(_DWORD *)&v99[4 * (v155 ^ 0xE8)];
  v164 = *(_DWORD *)(v105 + 4 * (BYTE1(v155) ^ 0x8Fu)) ^ HIDWORD(v216) ^ *(_DWORD *)&v99[4
                                                                                         * (v73 ^ 0xB4)] ^ v92 ^ (v15 >> 1) ^ (v86 + 1312414243 - ((2 * v86) & 0x9C73B446));
  LODWORD(v86) = v160 ^ v217 ^ v163 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x2Du)) ^ (v158
                                                                                      + 1312414243
                                                                                      - ((2 * v158) & 0x9C73B446));
  v165 = BYTE2(v162);
  v166 = *(_DWORD *)&v97[4 * (HIBYTE(v164) ^ 0x18)];
  v167 = ((BYTE2(v86) ^ 0x66) - 114727250 - 2 * ((WORD1(v86) ^ 0xAE66) & 0xAF ^ WORD1(v86) & 1)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0x3Au));
  HIDWORD(v15) = ~v166;
  LODWORD(v15) = v166 ^ 0x1DE9534E;
  LODWORD(v35) = ((v15 >> 1) - 114727250 - ((2 * (v15 >> 1)) & 0xF252CD5C)) ^ *(_DWORD *)(v98
                                                                                        + 4 * (BYTE2(v162) ^ 0x40u));
  v168 = *(_DWORD *)&v97[4 * (HIBYTE(v162) ^ 0xEF)];
  HIDWORD(v15) = ~v168;
  LODWORD(v15) = v168 ^ 0x1DE9534E;
  v169 = (v15 >> 1) ^ *(_DWORD *)&v99[4 * (v164 ^ 0x90)] ^ ((v164 ^ 0xFD)
                                                                           + 1069380434
                                                                           + ((2 * (v164 ^ 0xFD) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v73) = v167 + 1312414243 - ((2 * v167) & 0x9C73B446);
  v170 = *(_DWORD *)&v99[4 * (v17 ^ 0x27)] ^ ((v17 ^ 0x4A)
                                                             + 1069380434
                                                             + ((2 * (v17 ^ 0x4A) + 254) & 0x1A4 ^ 0xFFC2FFFF));
  LODWORD(v83) = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0xAE)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v171 = (v15 >> 1) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v164) ^ 0xFu)) ^ (v170 - 114727250 - ((2 * v170) & 0xF252CD5C));
  LODWORD(v74) = *(_DWORD *)&v97[4 * ((v17 >> 24) ^ 0xDC)];
  HIDWORD(v15) = ~(_DWORD)v74;
  LODWORD(v15) = v74 ^ 0x1DE9534E;
  v172 = (_DWORD)v35 + 1312414243 - ((2 * (_DWORD)v35) & 0x9C73B446);
  LODWORD(v35) = ((BYTE2(v17) ^ 0xE)
                - 114727250
                - 2 * (((v17 >> 16) ^ 0xDC0E) & 0xBF ^ (v17 >> 16) & 0x11)) ^ v216 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0x7Cu)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v17) ^ 0x52u)) ^ (v169 + 1312414243 - ((2 * v169) & 0x9C73B446));
  LODWORD(v83) = v86;
  v173 = (v86 ^ 0xB3) + 1069380434 + ((2 * (v86 ^ 0xB3) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v86) = *(_DWORD *)(v105 + 4 * (BYTE1(v164) ^ 0x1Bu)) ^ HIDWORD(v215) ^ *(_DWORD *)&v99[4
                                                                                                 * (v162 ^ 0x4D)] ^ ((v162 ^ 0x20) + 1069380434 + ((2 * (v162 ^ 0x20) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v15 >> 1) ^ v73;
  LODWORD(v17) = v172 ^ HIDWORD(v214) ^ v173 ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0x65u)) ^ *(_DWORD *)&v99[4 * (v83 ^ 0xDE)];
  LOBYTE(v73) = v17 ^ BYTE2(v162);
  v174 = *(_DWORD *)(v105 + 4 * (BYTE1(v162) ^ 0xA4u)) ^ v215 ^ (v171 + 1312414243 - ((2 * v171) & 0x9C73B446));
  LODWORD(v92) = v17 ^ v165 ^ 0x7641388B;
  v175 = (v174 ^ BYTE2(v164));
  LODWORD(v83) = *(_DWORD *)&v97[4 * BYTE3(v92)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  LODWORD(v83) = v15 >> 1;
  v176 = *(_DWORD *)&v97[4 * ((v35 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v15) = ~v176;
  LODWORD(v15) = v176 ^ 0x1DE9534E;
  v177 = v15 >> 1;
  v178 = (BYTE2(v92) - 114727250 - ((v17 >> 15) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (BYTE2(v92) ^ 0x5Cu));
  v179 = *(_DWORD *)&v97[4 * (HIBYTE(v174) ^ 0xE7)];
  HIDWORD(v15) = ~v179;
  LODWORD(v15) = v179 ^ 0x1DE9534E;
  v180 = v15 >> 1;
  v181 = v83 ^ *(_DWORD *)&v99[4 * (v175 ^ 0x18)] ^ (((v35 ^ 0xF7E9CFA8) >> 16)
                                                   - 114727250
                                                   - (((v35 ^ 0xF7E9CFA8) >> 15) & 0x15C)) ^ *(_DWORD *)(v98 + 4 * (((v35 ^ 0xF7E9CFA8) >> 16) ^ 0x5Cu)) ^ ((~(2 * (v175 ^ 0x75) + 4031742) | 0xFFC2FE5B) + (v175 ^ 0x75) + 1069380434);
  v182 = (v181 + 1312414243 - ((2 * v181) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v86) ^ 0xECu));
  v183 = v177 ^ *(_DWORD *)(v98 + 4 * (BYTE2(v86) ^ 0xA7u)) ^ ((BYTE2(v86) ^ 0xFB)
                                                               - 114727250
                                                               - ((2 * (WORD1(v86) ^ 0x57FB)) & 0x15C)) ^ (v92 + 1069380434 + ((2 * v92 + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ *(_DWORD *)&v99[4 * (v73 ^ 0xE6)];
  LODWORD(v83) = *(_DWORD *)&v97[4 * (BYTE3(v86) ^ 0x57)];
  HIDWORD(v15) = ~(_DWORD)v83;
  LODWORD(v15) = v83 ^ 0x1DE9534E;
  v184 = (v183 + 1312414243 - ((2 * v183) & 0x9C73B446)) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v174) ^ 0x6Du));
  v185 = HIWORD(v174) ^ 0xE731;
  LODWORD(v98) = *(_DWORD *)(v98 + 4 * (v185 ^ 0x5Cu));
  v186 = *(_DWORD *)(v105 + 4 * (BYTE1(v35) ^ 0x2Du));
  LODWORD(v86) = v86;
  v187 = ((v35 ^ 0xA8)
        + 1069380434
        + ((2 * (v35 ^ 0xF7E9CFA8) + 254) & 0x1A4 ^ 0xFFC2FFFF)) ^ (v185
                                                                                - 114727250
                                                                                - ((2 * v185) & 0x15C)) ^ *(_DWORD *)&v99[4 * (v35 ^ 0xC5)];
  LODWORD(v83) = *(_DWORD *)&v99[4 * (v86 ^ 0x42)];
  LODWORD(v35) = (v86 ^ 0x2F) + 1069380434 + ((2 * (v86 ^ 0x2F) + 254) & 0x1A4 ^ 0xFFC2FFFF);
  LODWORD(v86) = HIDWORD(v206) ^ *(_DWORD *)(v105 + 4 * (BYTE1(v17) ^ 0xDAu)) ^ ((v187 ^ (v15 >> 1) ^ v98)
                                                                                 + 1312414243
                                                                                 - ((2 * (v187 ^ (v15 >> 1) ^ v98)) & 0x9C73B446));
  LODWORD(v17) = (v184 - 512663828 - ((2 * v184) & 0xC2E2BDD8)) ^ v214;
  LODWORD(v105) = (v182 - 595648296 - ((2 * v182) & 0xB8FE41B0)) ^ HIDWORD(v213);
  LODWORD(v99) = v186 ^ v213 ^ v35 ^ v180 ^ v83 ^ (v178 + 1312414243 - ((2 * v178) & 0x9C73B446));
  BYTE2(v187) = BYTE2(v86) ^ 0x8C;
  LODWORD(v35) = v105 ^ 0x351D74B9;
  LODWORD(v34) = *(_DWORD *)(v10 - 116);
  v188 = (char *)*(&off_24E772B10 + (int)v34 - 1801) - 4;
  v189 = (char *)*(&off_24E772B10 + (int)v34 - 1668) - 8;
  v190 = (char *)*(&off_24E772B10 + (int)v34 - 1699) - 8;
  v191 = (*(_DWORD *)&v190[4 * (BYTE2(v17) ^ 0x9E)] - 1066110617) ^ (*(_DWORD *)&v188[4 * (v99 ^ 0xC9)]
                                                                   + 1161575469);
  v192 = *(unsigned int *)&v188[4 * (v86 ^ 0xC8)];
  v193 = (*(_DWORD *)&v190[4 * (BYTE2(v99) ^ 0x38)] - 1066110617) ^ (*(_DWORD *)&v189[4
                                                                                    * ((v86 ^ 0x898C5DC8) >> 24)]
                                                                   + 74050895) ^ (*(_DWORD *)&v188[4
                                                                                                 * (v17 ^ 0xA2)]
                                                                                + 1161575469);
  LODWORD(v98) = *(_DWORD *)&v188[4 * (v105 ^ 0xB9)];
  v194 = *(unsigned int *)&v189[4 * ((v17 >> 24) ^ 0xE7)];
  LODWORD(v188) = *(_DWORD *)&v189[4 * ((v99 >> 24) ^ 0xB8)];
  v195 = (uint64_t)*(&off_24E772B10 + (int)v34 - 1817);
  LODWORD(v86) = *(_DWORD *)(v195 + 4 * (BYTE1(v86) ^ 0x61u)) ^ (*(_DWORD *)&v189[4 * (BYTE3(v105) ^ 0x65)] + 74050895);
  LODWORD(v105) = *(_DWORD *)(v195 + 4 * (BYTE1(v17) ^ 0xA0u));
  LODWORD(v99) = *(_DWORD *)(v195 + 4 * (BYTE1(v99) ^ 0xE9u));
  LODWORD(v86) = (v191 - 839040011 - ((2 * v191) & 0x9BFA87EA)) ^ v86;
  LODWORD(v92) = *(_DWORD *)&v190[4 * BYTE2(v187)];
  LODWORD(v189) = *(_DWORD *)&v190[4 * BYTE2(v35)];
  LODWORD(v97) = *(_DWORD *)(v195 + 4 * BYTE1(v35)) ^ HIDWORD(v208) ^ (v193 - 839040011 - ((2 * v193) & 0x9BFA87EA));
  LODWORD(v17) = HIDWORD(a6) ^ HIDWORD(v213) ^ (v86 - 595648296 - ((2 * v86) & 0xB8FE41B0));
  v196 = ((unsigned __int16)(*(_WORD *)(v195 + 4 * BYTE1(v35)) ^ WORD2(v208) ^ (v193
                                                                                                 + 17397
                                                                                                 - ((2 * v193) & 0x87EA))) >> 8) ^ 0x99;
  v197 = (char *)*(&off_24E772B10 + (int)v34 - 1741) - 12;
  a1[*(_QWORD *)(v10 - 248)] = v197[v196] ^ 0x5D;
  v198 = (char *)*(&off_24E772B10 + (int)v34 - 1818) - 4;
  a1[*(_QWORD *)(v10 - 240)] = (v198[BYTE2(v17) ^ 0xADLL] - 42) ^ 0xC5;
  LODWORD(v196) = v105 ^ HIDWORD(a6) ^ (v192 - ((2 * v192 - 1971816358) & 0x9BFA87EA) + 322535458) ^ ((_DWORD)v188 + 74050895) ^ ((_DWORD)v189 - 1066110617);
  v199 = (char *)*(&off_24E772B10 + SHIDWORD(v205)) - 8;
  a1[*(_QWORD *)(v10 - 200)] = v199[v97 ^ 0xFCLL] ^ 0x42;
  a1[*(_QWORD *)(v10 - 216)] = (v198[BYTE2(v196) ^ 0x8CLL] - 42) ^ 0x47;
  v200 = (char *)*(&off_24E772B10 + (int)v205) - 12;
  a1[*(_QWORD *)(v10 - 232)] = (v200[(v97 >> 24) ^ 0xDELL] + 24) ^ 0x1B;
  a1[*(_QWORD *)(v10 - 224)] = ((v198[BYTE2(v97) ^ 0x15] + ((v198[BYTE2(v97) ^ 0x15] - 42) ^ 0xDA) - 41) ^ 0xFE)
                             + v198[BYTE2(v97) ^ 0x15]
                             - 42;
  v201 = (v98 + 1161575469);
  v202 = v206 ^ v99 ^ ((_DWORD)v92 - 1066110617) ^ v201 ^ ((_DWORD)v194 - ((2 * (_DWORD)v194 + 148101790) & 0x9BFA87EA) - 764989116);
  a1[*(_QWORD *)(v10 - 208)] = v199[(v206 ^ v99 ^ (v92 + 103) ^ v201 ^ (v194 - ((2 * v194 - 98) & 0xEA) + 68)) ^ 5] ^ 0xB0;
  a1[*(_QWORD *)(v10 - 152)] = (v200[(v17 >> 24) ^ 0x4ELL] + 24) ^ 0xE6;
  a1[*(_QWORD *)(v10 - 144)] = (v200[BYTE3(v196) ^ 0x9CLL] + 24) ^ 0xB8;
  v203 = *(_QWORD *)(v10 - 176);
  a1[v203] = (v200[BYTE3(v202) ^ 0x67] + 24) ^ 0x91;
  a1[*(_QWORD *)(v10 - 160)] = v199[v196 ^ 0xF2] ^ 0xBA;
  a1[*(_QWORD *)(v10 - 192)] = v197[BYTE1(v196) ^ 0x1ELL] ^ 0xFE;
  a1[*(_QWORD *)(v10 - 168)] = v197[((unsigned __int16)(v206 ^ (unsigned __int16)v99 ^ (v92 + 29031) ^ v201 ^ (v194 - ((2 * v194 - 9570) & 0x87EA) + 12612)) >> 8) ^ 0x33] ^ 0xE7;
  a1[*(_QWORD *)(v10 - 184)] = v197[BYTE1(v17) ^ 0xBCLL] ^ 0x29;
  a1[*(_QWORD *)(v10 - 136)] = v199[v17 ^ 0x9FLL] ^ 0x42;
  a1[*(_QWORD *)(v10 - 128)] = (v198[BYTE2(v202) ^ 0xDLL] - 42) ^ 0x8E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 - 256) + 8 * (int)((v34 - 568) | (2 * ((((_DWORD)v203 - 1332899240 - ((2 * (_DWORD)v203 + 32) & 0x611B24B0) + 16) ^ 0xB08D9258) < v56 + 9013377)))) - 8))(v201, v202, v194, &off_24E772B10, 66, v192, v195, v199, a2, a3, a4, a1, a6, v205, v206, v207, v208, v209, v210,
           v211,
           v212,
           v213,
           v214,
           v215,
           v216,
           v217,
           v218,
           v219,
           v220,
           v221,
           v222,
           v223,
           v224,
           v225);
}

void sub_221A3D244()
{
  JUMPOUT(0x221A3B0F4);
}

uint64_t sub_221A3D278(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((253 * (v4 ^ 0x6E) - 204) * (v3 != a3)) ^ v4))
                            - (v4 + 1753)
                            + 1853))();
}

uint64_t sub_221A3D2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                                        + 8
                                                                                        * ((1004
                                                                                          * ((((v6 & 8) == 0) ^ (a6 + 75)) & 1)) ^ a6))
                                                                            - 8))(a1, a2, a3, (a2 - a3), (a6 + 331) | 0x400u);
}

uint64_t sub_221A3D2EC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  char v15;
  uint64_t v16;
  int8x16x4_t v18;

  *(_DWORD *)(v12 - 128) = v11;
  *(_DWORD *)(v12 - 136) = v7;
  v13 = (a3 ^ 0xFFFFF88F) & v7;
  v14 = -a2;
  *(_DWORD *)(v12 - 144) = v13;
  v15 = v10 + v9 + v8;
  *(_DWORD *)(v12 - 116) = a3 ^ 0x721;
  v16 = (v14 + v10 + v9 + a1);
  v18.val[0].i64[0] = ((_BYTE)v14 + (_BYTE)v10 + (_BYTE)v9 + (_BYTE)a1) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v14 + v15 - 81) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)v14 + v15 + 5 * *(_BYTE *)(v12 - 116)) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)v14 + v15 - 83) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)v14 + v15 - 84) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v14 + v15 - 85) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v14 + v15 - 86) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v14 + v15 - 87) & 0xF;
  *(int8x8_t *)(a4 - 7 + v16) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v5 + (v16 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v16)), veor_s8(*(int8x8_t *)((v16 & 0xF) + v4 - 5), *(int8x8_t *)((v16 & 0xF) + v6 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v18, (int8x16_t)xmmword_2226906D0), (int8x8_t)0x7777777777777777)));
  return (*(uint64_t (**)(__n128))(*(_QWORD *)(v12 - 256) + 8 * (a3 ^ 2 | (2 * (v14 != 8 - v13)))))((__n128)xmmword_2226906D0);
}

void sub_221A3D428()
{
  JUMPOUT(0x221A3D35CLL);
}

uint64_t sub_221A3D450()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (973 * (*(_DWORD *)(v2 - 136) == *(_DWORD *)(v2 - 144)))))
                            - ((((v0 - 429) | 0x744u) + 4) ^ (v0 + 1431))))();
}

uint64_t sub_221A3D494@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 141255584);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v5 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v4 + 2) ^ *(_BYTE *)((v8 & 0xF) + v6 + 4) ^ (119 * (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((19 * (a1 - 1 != v3)) ^ (a2 - 1753))) - 8))();
}

void sub_221A3D500()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1807390555)
    v1 = 1645153785;
  else
    v1 = -1645193695;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_221A3D564(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  v3 = *(unint64_t **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unint64_t **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v2 - 0x7542B2AE577378FLL);
  v11 = v1 + 1224239923 * ((&v7 & 0x62925DD | ~(&v7 | 0x62925DD)) ^ 0xB6527F5) + 865;
  v12 = v6;
  v9 = &STACK[0xC7F991DE6408E4D];
  v10 = v5;
  v7 = v2;
  v8 = v4;
  ((void (*)(uint64_t *))*(&off_24E772B10 + v1 - 893))(&v7);
  v7 = *(_QWORD *)(v2 - 0x7542B2AE5773797);
  v8 = &STACK[0xC7F991DE6408E5D];
  LODWORD(v9) = v1
              + 1374699841
              * (((&v7 | 0x7984BEEA) - &v7 + (&v7 & 0x867B4110)) ^ 0x1470A6E3)
              + 406;
  sub_221A00590((uint64_t)&v7);
  LODWORD(v7) = v1 + 235795823 * (&v7 ^ 0x94AD4959) - 662;
  v8 = v3;
  sub_221A0D838((uint64_t)&v7);
  __asm { BR              X8 }
}

uint64_t sub_221A3D768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *(_DWORD *)(v19 - 112) = v13 + 1224239923 * ((v19 + 1260386870 - 2 * ((v19 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711) + 1606;
  *(_QWORD *)(v19 - 144) = v14;
  *(_QWORD *)(v19 - 136) = a12;
  *(_QWORD *)(v19 - 104) = v17;
  *(_QWORD *)(v19 - 128) = v17;
  *(_QWORD *)(v19 - 120) = v15;
  v20 = a11(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((111
                                                        * ((((v16 + v18 - 1) < 0x7FFFFFFF) ^ (((v13 + 53) & 0xAF ^ 0x17) + 1)) & 1)) ^ (v13 - 2068888523) & 0x7B50BEAF))
                                          - 12))(v20);
}

uint64_t sub_221A3D820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_QWORD *)(v19 - 136) = v15;
  *(_QWORD *)(v19 - 128) = v16;
  *(_DWORD *)(v19 - 144) = (v17 + 791) ^ (1225351577
                                        * ((((2 * ((v19 - 144) ^ 0x34E6FF81)) | 0xB1E44DAA)
                                          - ((v19 - 144) ^ 0x34E6FF81)
                                          + 655218987) ^ 0xCF8E0142));
  *(_QWORD *)(v19 - 120) = v16;
  *(_QWORD *)(v19 - 112) = v14;
  ((void (*)(uint64_t))((char *)*(&off_24E772B10 + v17 - 260) - 4))(v19 - 144);
  v20 = 1374699841
      * ((~((v19 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v19 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v19 - 144) = (v17 + 1030) ^ v20;
  *(_DWORD *)(v19 - 128) = -313388985 - v20 + v18;
  *(_QWORD *)(v19 - 136) = a13;
  v21 = sub_221A30A3C(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((114 * (*(_DWORD *)(v19 - 140) == 538735252)) ^ v17)))(v21);
}

uint64_t sub_221A3D944()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((111
                                          * ((((v1 + v3 - 1) < 0x7FFFFFFF) ^ ((v2 ^ 0x17) + 1)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_221A3D988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 24);
  v6 = 1224239923 * ((((v4 - 144) | 0x5ECCF06D) + (~(v4 - 144) | 0xA1330F92)) ^ 0xAC7F0DBB);
  *(_DWORD *)(v4 - 144) = v6 ^ 0x3EAF37E3;
  *(_QWORD *)(v4 - 136) = v10;
  *(_DWORD *)(v4 - 128) = v6 + v3 - 849;
  sub_221A02520((_DWORD *)(v4 - 144));
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v10;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v1;
  *(_DWORD *)(v4 - 112) = v3
                        + 1224239923 * ((2 * ((v4 - 144) & 0x10151408) - (v4 - 144) - 269816843) ^ 0x1D591622)
                        + 865;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = v3 + 1374699841 * ((v4 - 144) ^ 0x6DF41809) + 406;
  *(_QWORD *)(v4 - 144) = v2;
  *(_QWORD *)(v4 - 136) = v5;
  return sub_221A00590(v4 - 144);
}

void sub_221A3DAAC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }
}

uint64_t sub_221A3DB7C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((2 * (&a4 & 0x17931B20) - &a4 + 1751966942) ^ 0xB6AA5905);
  a8 = v12 ^ 0x6228DDF;
  a7 = &STACK[0x37021DA481391552];
  a4 = &STACK[0x42E48BBDD224DE45];
  a5 = v11;
  a6 = (v10 - 136) ^ v12;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 ^ 0x14F)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v11 - 0x27681A84B35EB0EDLL) == v8) * ((v10 + 48) ^ 0x53C)) ^ v10)))(v13);
}

uint64_t sub_221A3DC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((((a10 == v10) ^ (v12 + 1)) & 1 | (8
                                                                                             * (((a10 == v10) ^ (v12 + 1)) & 1))) ^ v12))
                            - 4))();
}

uint64_t sub_221A3DCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;

  *(_BYTE *)(v11 + (v13 + v12)) = *(_BYTE *)(a11 + (v13 + v12)) ^ 0x32;
  v17 = ((v16 - 1825813931) & 0x6CD3B57A ^ (v12 + 351)) + v13 < (a10 ^ v14);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((v17 | (8 * v17)) ^ v16)) - 4))();
}

void sub_221A3DD0C(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(*(_QWORD *)(v3 + 24) - 0x1E6EF7153090DC2) = v1;
  *(_DWORD *)(v4 - 0x72E1645BEBB64013) = v2;
  *(_DWORD *)v3 = *a1;
}

void sub_221A3DD74(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - (_DWORD)a1 - 1588304853) ^ 0x41C80600);
  __asm { BR              X14 }
}

uint64_t sub_221A3DE34(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) != v3)
                                               * (((v1 + 1019832448) & 0xC336977F) + 614)) ^ (v1 + 1138)))
                            - ((v1 + 670) | 0x304u)
                            + 1800))();
}

uint64_t sub_221A3DE8C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((((((10 * (v2 ^ 0x731)) ^ 0xF68072D2) + v3) * (v0 - 159353952)) >> 31)
                                               * ((v2 - 1130536225) & 0x4362977E ^ 0x130)) | v2))
                            - 8))();
}

uint64_t sub_221A3DEF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2;
  v6 = v3 - 535753261 * ((&v5 & 0xF4826C3B | ~(&v5 | 0xF4826C3B)) ^ 0x1899DEB) - 229;
  v7 = a1;
  v8 = v2;
  return ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v1 + 8 * (v3 - 231)) - 4))(&v5);
}

void sub_221A3E038(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_221A3E158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unsigned __int8 *v9;
  _BOOL4 v11;

  v9 = *(unsigned __int8 **)(a4 + 8 * (a5 ^ (a5 - 19)));
  v11 = ((**(unsigned __int8 **)(a7 + 80) - (*v9 ^ 0x32)) ^ 0x76DF27E7)
      + ((2 * (**(unsigned __int8 **)(a7 + 80) - (*v9 ^ 0x32))) & 0xEDBE4FCE)
      - 1183589858 == 1608824740 - v7
     && a6 != 2441235919;
  __asm { BR              X15 }
}

uint64_t sub_221A3F244@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v2 + (v4 - 266921706)) = *(_BYTE *)(a2 + (v4 - 266921706));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((117 * (((a1 + 94) ^ 0xFFFFFC70) + v4 == v3)) ^ a1)) - 12))();
}

void sub_221A3F28C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 603303756;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_221A3F338()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0x302)))(32) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 * ((v2 + 35) ^ 0x3E0)) ^ v2))
                            - ((v2 + 1328486859) & 0xB0D0E3DC ^ 0x18CLL)))();
}

uint64_t sub_221A3F3A4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = v1 != v0 + ((v3 - 1653570193) & 0x628F7D0B) - 1027;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v3)) - 8))();
}

uint64_t sub_221A3F3FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 603303757;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 50)
    __asm { BR              X11 }
  if (v13 == 178)
  {
    v14 = 1645153785;
    v15 = *(_QWORD *)(v4 + 8);
    v16 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 24)
      v17 = -1454758981;
    else
      v17 = -1454758982;
    *(_DWORD *)(result + 16) = 310716794;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 1645153785;
    *(_QWORD *)(v15 - 0x17594DE9181849F3) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v8 + 8 * (v9 ^ 0x419)))();
    v14 = -1645193696;
  }
  *(_DWORD *)v4 = v14;
  return result;
}

void sub_221A3F4E0(uint64_t a1)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v2 = 1755732067 * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  v3 = *(_DWORD *)(a1 + 32) - v2;
  v4 = v3
     + 628203409 * (((&v4 | 0x3341E245) + (~&v4 | 0xCCBE1DBA)) ^ 0xB1C9EE77)
     - 231789431;
  nullsub_1(&v4);
  __asm { BR              X17 }
}

uint64_t sub_221A3F678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v3 | (8 * (((v0 + 1) & 0x7FFFFFFC) != v1)))) - 4))();
}

void sub_221A3F69C()
{
  JUMPOUT(0x221A3F634);
}

uint64_t sub_221A3F6A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD))(a1 + 8 * (int)(v4 - 423)))((*(_DWORD *)(v3 + 24 * v2 + 16)
                                                                                     - 1206753083)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1176 * v5) ^ v4)) - 4))();
}

uint64_t sub_221A3F6F4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;

  v3 = 13 * (v2 ^ 0x29F);
  v4 = v0 - ((2 * v0 + 1881461130) & 0x918F5A50) + ((v3 + 1325647569) & 0xB0FC3DDF) - 2133192674;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((1636
                                          * (((2 * v4) & 0xFFFEFB66 ^ 0x918E5A40) + (v4 ^ 0xB738D09B) - 1394876467 != 752573824)) ^ v3))
                            - 8))();
}

uint64_t sub_221A3F7AC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((158 * (v2 ^ 0x7BB)) ^ 0x14B) * ((v1 + v0 - 2147450291) > 7)) ^ v2))
                            - (((v2 ^ 0x7BBu) + 1878) ^ 0x750)))();
}

uint64_t sub_221A3F810(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (((unint64_t)(v1 - a1) > 0x1F) | (2 * ((unint64_t)(v1 - a1) > 0x1F))))))();
}

uint64_t sub_221A3F834()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((v0 < 0x20) ^ (((v1 + 42) | 0x11) + 112)) & 1)
                                          * (((((v1 - 1238) | 0x11) - 840300522) & 0x3215F7D7) - 580)) ^ ((v1 - 1238) | 0x11)))
                            - 4))();
}

uint64_t sub_221A3F888(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v8 = v4 + v3 + v5;
  v9 = v1 + v8;
  v10 = *(_OWORD *)(v9 - 31);
  v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * ((v6 - 446) ^ 0x7B)) ^ (v6 + 981)))
                            - 4))();
}

void sub_221A3F8E0()
{
  JUMPOUT(0x221A3F8A4);
}

uint64_t sub_221A3F8EC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (477 * (v2 == v3))))
                            - ((a2 - 772328148) & 0x2E08CFDF ^ 0x5C7)))();
}

uint64_t sub_221A3F92C(uint64_t a1, int a2)
{
  char v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((a2 + 464) ^ (1777 * ((v2 & 0x18) == 0))))
                            - (a2 + 576)
                            - (a2 + 121)
                            + 1083))();
}

uint64_t sub_221A3F964(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  *(_QWORD *)(a1 - 7 + (v4 + v3 + v5 - v6)) = *(_QWORD *)(v1 - 7 + (v4 + v3 + v5 - v6));
  v9 = v7 - (v2 & 0xFFFFFFF8) - 763 == -v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((8 * v9) | (16 * v9) | v7)) - 12))();
}

uint64_t sub_221A3F9C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)(a3 + (v4 + a4)) = *(_QWORD *)(v5 + (v4 + a4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((8 * (v6 == a4)) | (16 * (v6 == a4)) | v7)) - 12))();
}

uint64_t sub_221A3F9F4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v3 + 102) | 0x107) ^ 0x5C8) * (v2 == a2)) ^ v3))
                            - (v3 ^ 0x55Eu)
                            + 312))();
}

uint64_t sub_221A3FA30@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;

  v6 = (a2 - 296) | 0x10A;
  *(_BYTE *)(a1 + (v4 - 752573825)) = *(_BYTE *)(v3 + (v4 - 752573825));
  v7 = v4 - 1 != (v6 ^ 0x4D1 ^ a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((2 * v7) | (32 * v7)) ^ v6)) - 8))();
}

uint64_t sub_221A3FA80@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((2 * (v5 - 1 != a2)) | (32 * (v5 - 1 != a2))) ^ v3)) - 8))();
}

uint64_t sub_221A3FAB0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v1 + 24) != 0x4B30070DAA05F9DDLL) * ((v0 - 838) ^ 0x165)) ^ v0))
                            - 4))();
}

uint64_t sub_221A3FAEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a2 - 0x4B30070DAA05F9DDLL) = 1;
  v4 = *v2;
  *(_QWORD *)(v2[5] - 0xF250A47131524EDLL) = result;
  *(_DWORD *)(v4 - 0x330904BA72E93EC0) = v3;
  *((_DWORD *)v2 + 13) = 1645153785;
  return result;
}

void sub_221A3FB80(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_221A3FBE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v4;
  v5 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 1881461130) & 0xEDAA0BF4) + 786919103;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * ((83
                                                       * (((2 * v5) & 0xDFDBFDDA ^ 0xCD8A09D0)
                                                        + (v5 ^ 0x1938FB17)
                                                        - 1610946564 != 266921705)) ^ v3))
                                         - 8))(0);
}

uint64_t sub_221A3FC78()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1098 * ((((v2 + v1 - 1877868269) < 8) ^ 0x21) & 1)) ^ 0x179u))
                            - 8))();
}

uint64_t sub_221A3FCE8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((84 * (v4 - a1 - (unint64_t)(a3 + 12) + 385 < 0x20)) | (a3 + 1191))))();
}

uint64_t sub_221A3FD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((((a6 - 252) | 0x460) ^ 0x4E1) * (v8 < 0x20)) ^ a6))
                            - ((a6 - 805399230) & 0xB67BFFFD ^ v7)))();
}

uint64_t sub_221A3FD78@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = v7 + v6 + v8;
  v10 = v4 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v5 & 0xFFFFFFE0) == 32) * (((a2 + 1016589078) & 0x3CED7F3C) + 357)) ^ (a1 + a2 + 1066))))();
}

void sub_221A3FDE0()
{
  JUMPOUT(0x221A3FDA0);
}

uint64_t sub_221A3FDEC(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5
                                                     + 8
                                                     * (int)(((((13 * (a5 ^ 0x105)) ^ (a2 + 1842))
                                                             + ((a5 - 1082458691) & 0xC6FF97EF))
                                                            * (v6 != a3)) ^ a5))
                                         - 8))(0);
}

uint64_t sub_221A3FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                               + 8
                                                                               * ((244
                                                                                 * (((a6 + 112) ^ ((((a6 + 935) ^ 0x538) & v7) == 0)) & 1)) ^ a6))
                                                                   - 8))((a6 + 1646419312) & 0x9DDDA5FF, a2, a3, (v8 - a3));
}

uint64_t sub_221A3FE90@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *(_QWORD *)(a3 - 7 + (v7 + v6 + v8 - a2)) = *(_QWORD *)(v4 - 7 + (v7 + v6 + v8 - a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((a2 - (v5 & 0xFFFFFFF8) == -8) * (40 * (a1 ^ 0x4EE) + 209)) ^ a1))
                            - 4))();
}

void sub_221A3FEF0()
{
  JUMPOUT(0x221A3FEBCLL);
}

uint64_t sub_221A3FEFC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unint64_t v7;
  int v8;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (((a3 - 183) * (v8 != a6)) | a3))
                                         - ((a3 - a2) ^ v7)))(0);
}

uint64_t sub_221A3FF2C@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a3 + (a1 - 266921706)) = *(_BYTE *)(v5 + (a1 - 266921706));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v3 + 8
                                                          * ((450 * ((a2 ^ 0x1C2) + a1 - 1251 != v4)) ^ a2 ^ 0x1C2))
                                         - 4))(0);
}

uint64_t sub_221A3FF70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v3)) = *(_BYTE *)(v4 + (v7 + v3));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v6 + v7 - 1251 != v2) * v5) ^ v6)) - 4))(0);
}

uint64_t sub_221A3FFB0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_24E772B10 + v1 - 804)
                              + ((1547 * (*(_QWORD *)(a1 + 8) != 0x27681A84B35EB105)) ^ v1)
                              - 1)
                            - 8))();
}

uint64_t sub_221A40040()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1858
                                          * (*(_DWORD *)(v1 - 0x27681A84B35EB0EDLL) == ((v2 + 1851613323) & 0x91A29F6E ^ 0x620F0EB1))) ^ v2))
                            - 8))();
}

uint64_t sub_221A400A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x27681A84B35EB0F5) + 1273267861;
  v4 = *(_DWORD *)(v1 - 0x27681A84B35EB0F9) + 980680899;
  v5 = v4 < (v2 ^ 6u) + 1583983809;
  v6 = v3 < v4;
  if (v3 < 0x5E69B00F != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((2 * !v6) | (4 * !v6)) ^ v2)) - 8))();
}

uint64_t sub_221A4013C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 16) = -1645193524;
  return result;
}

void sub_221A40150(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BR              X10 }
}

uint64_t sub_221A40298()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 48) - v0 != 870327928 && (*(_QWORD *)(v2 + 32) | *(_QWORD *)(v2 + 56)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((28 * v5) ^ v1))
                            - ((3 * (v1 ^ 0x6E4u)) ^ ((v1 - 974) + 4))))();
}

uint64_t sub_221A402F8()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[5] == 0x164C0FDDF1987668 || (*v1 | v1[3]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((362 * (((v0 - 100) ^ v4) & 1)) ^ v0)) - 8))();
}

uint64_t sub_221A40358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * (int)(v20 & 0x8E18C33F ^ (124 * (v19 != 0)))) - ((502 * (v20 & 0x8E18C33F ^ 0x33F) - 1894953982) & 0x70F2B3FC) + 1000))(a1, &STACK[0xC7F991DE6408EC5], a2, a3, a4, a5, a6, a7, a1, a10, a11, a12, a13, &STACK[0xC7F991DE6408EC5], a15, a8 - 0x3555E11E9398A6A2, a17, a8 - 0x3555E11E9398A7B2, a19);
}

uint64_t sub_221A40498@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  void (*v31)(uint64_t);
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(uint64_t);
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v29 = v22 ^ 0x22F;
  v30 = ((v28 - 1244544018 - 2 * ((v28 - 144) & 0xB5D1C47E)) ^ 0xF45BC1C) * v27;
  *(_QWORD *)(v28 - 128) = v20;
  *(_QWORD *)(v28 - 120) = a20;
  *(_DWORD *)(v28 - 140) = v22 - v30 - 751;
  *(_DWORD *)(v28 - 136) = v23 + v30 + (v22 ^ 0xD21E8525);
  v46 = a1 + v21;
  ((void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v22 - 950)) - 8))(v28 - 144);
  HIDWORD(a10) = 203 * (v29 ^ 0x1C0);
  v47 = v25;
  HIDWORD(v45) = v29 + 1083;
  *(_DWORD *)(v28 - 128) = (v29 + 1083) ^ (628203409
                                         * ((2 * ((v28 - 144) & 0x54E47578) - (v28 - 144) + 723225217) ^ 0xA99386B2));
  *(_QWORD *)(v28 - 144) = a17;
  *(_QWORD *)(v28 - 136) = a18;
  v44 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 ^ 0x147)) - 12);
  v44(v28 - 144);
  LODWORD(v45) = v29 + 1402;
  *(_QWORD *)(v28 - 120) = a17;
  *(_QWORD *)(v28 - 112) = a19;
  *(_DWORD *)(v28 - 128) = (v29 + 1402) ^ (((((v28 - 144) | 0x680F62BB) - ((v28 - 144) & 0x680F62BB)) ^ 0xD29B1AD9) * v27);
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a20;
  v43 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 ^ 0x1C1)) - 4);
  v43(v28 - 144);
  HIDWORD(v42) = v29 + 1485;
  *(_DWORD *)(v28 - 112) = v29
                         + 1485
                         + 1224239923
                         * ((((v28 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v28 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(_QWORD *)(v28 - 104) = v25;
  *(_QWORD *)(v28 - 128) = a19;
  *(_QWORD *)(v28 - 120) = a17;
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a19;
  v31 = *(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0x171));
  v31(v28 - 144);
  LODWORD(v42) = v29 + 469;
  *(_QWORD *)(v28 - 136) = a19;
  *(_QWORD *)(v28 - 128) = a19;
  *(_DWORD *)(v28 - 120) = v29 + 469 + 1225351577 * ((v28 - 144) ^ 0x239AD816);
  *(_QWORD *)(v28 - 112) = a9;
  *(_QWORD *)(v28 - 104) = a17;
  *(_QWORD *)(v28 - 144) = a18;
  v32 = (void (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (v29 - 279)) - 12);
  v32(v28 - 144);
  *(_QWORD *)(v28 - 144) = a13;
  *(_QWORD *)(v28 - 136) = a18;
  *(_DWORD *)(v28 - 128) = (v29 + 1083) ^ (628203409
                                         * ((((v28 - 144) | 0xDED8722D) - ((v28 - 144) & 0xDED8722D)) ^ 0x5C507E1E));
  v44(v28 - 144);
  *(_QWORD *)(v28 - 120) = a13;
  *(_QWORD *)(v28 - 112) = a7;
  *(_DWORD *)(v28 - 128) = (v29 + 1402) ^ (1178560073
                                         * ((989915423 - ((v28 - 144) | 0x3B00E91F) + ((v28 - 144) | 0xC4FF16E0)) ^ 0x7E6B6E82));
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a20;
  v43(v28 - 144);
  *(_DWORD *)(v28 - 112) = v29
                         + 1485
                         + 1224239923 * ((((v28 - 144) | 0x639614A3) + (~(v28 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(_QWORD *)(v28 - 104) = v47;
  *(_QWORD *)(v28 - 144) = a18;
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a7;
  *(_QWORD *)(v28 - 120) = a13;
  v31(v28 - 144);
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a7;
  *(_QWORD *)(v28 - 112) = a11;
  *(_QWORD *)(v28 - 104) = a13;
  *(_DWORD *)(v28 - 120) = v29
                         + 469
                         + 1225351577 * ((((v28 - 144) | 0x59480BB8) - ((v28 - 144) & 0x59480BB8)) ^ 0x7AD2D3AE);
  *(_QWORD *)(v28 - 144) = a18;
  v32(v28 - 144);
  *(_DWORD *)(v28 - 144) = v29
                         - 108757529
                         * (((((v28 - 144) | 0xF475AFFA) ^ 0xFFFFFFFE) - (~(v28 - 144) | 0xB8A5005)) ^ 0xEB16322E)
                         - 81;
  *(_QWORD *)(v28 - 136) = a7;
  *(_QWORD *)(v28 - 128) = a19;
  ((void (*)(uint64_t))((char *)*(&off_24E772B10 + (v29 ^ 0x1AB)) - 12))(v28 - 144);
  *(_DWORD *)(v28 - 140) = (v29 + 383) ^ (460628867 * ((v28 - 144) ^ 0x4C96827D));
  *(_QWORD *)(v28 - 136) = a7;
  sub_221A30320(v28 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), void (*)(uint64_t), uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t)))(*(_QWORD *)(v24 + 8 * (v29 | (32 * (*(_DWORD *)(v28 - 144) < (HIDWORD(a10) + 1901766070))))) - 7 * (v29 ^ 0x194u) + 597))(v33, v34, v35, v36, v37, v38, v39, v40, a2, v42, v43, v44, v45, a7, 7 * (v29 ^ 0x194u), a9, a10, (char *)*(&off_24E772B10 + (v29 ^ 0x15A)) - 8, v46,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           v31);
}

uint64_t sub_221A40998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void (*a27)(uint64_t),uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  void (*v35)(uint64_t);
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_DWORD *)(v40 - 144) = (v37 - 204) ^ (235795823 * ((v40 - 101333398 - 2 * ((v40 - 144) & 0xF9F5C6FA)) ^ 0x6D588FA3));
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = v36;
  v35(v40 - 144);
  *(_QWORD *)(v40 - 144) = a25;
  *(_QWORD *)(v40 - 136) = v39;
  *(_DWORD *)(v40 - 112) = v37
                         + 1327
                         + 1224239923
                         * ((2 * (((v40 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v40 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  *(_QWORD *)(v40 - 128) = v39;
  *(_QWORD *)(v40 - 120) = v36;
  *(_QWORD *)(v40 - 104) = a35;
  a27(v40 - 144);
  *(_DWORD *)(v40 - 112) = v37
                         + 1327
                         + 1224239923
                         * ((((v40 - 144) | 0x595B079F) - (v40 - 144) + ((v40 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(_QWORD *)(v40 - 144) = a25;
  *(_QWORD *)(v40 - 136) = a19;
  *(_QWORD *)(v40 - 128) = v39;
  *(_QWORD *)(v40 - 120) = v36;
  *(_QWORD *)(v40 - 104) = v39;
  a27(v40 - 144);
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = a24;
  *(_DWORD *)(v40 - 144) = (v37 - 1882358073) ^ (235795823
                                               * ((((v40 - 144) | 0xEC38560C) - ((v40 - 144) & 0xEC38560C)) ^ 0x78951F55));
  sub_221A442A4(v40 - 144);
  *(_DWORD *)(v40 - 144) = (v37 - 204) ^ (235795823
                                        * ((-2026376004 - ((v40 - 144) | 0x8737F4BC) + ((v40 - 144) | 0x78C80B43)) ^ 0xEC65421A));
  *(_QWORD *)(v40 - 136) = v39;
  *(_QWORD *)(v40 - 128) = a26;
  a18(v40 - 144);
  *(_QWORD *)(v40 - 144) = v39;
  *(_QWORD *)(v40 - 136) = a26;
  *(_DWORD *)(v40 - 128) = v37 + 1374699841 * ((v40 - 144) ^ 0x6DF41809) + 868;
  v41 = sub_221A00590(v40 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((((((v37 - 577) ^ (a23 == 0)) & 1) == 0) * (v37 - 556)) ^ (v37 + 381)))
                                          - 12))(v41);
}

uint64_t sub_221A40BD8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = 535753261 * ((((v3 - 144) ^ 0x80BC1318 | 0x67434C63) + ((v3 - 144) ^ 0x26000443 | 0x98BCB39C)) ^ 0xAC481975);
  *(_DWORD *)(v3 - 136) = ((v0 | 0x648) - 403) ^ v4;
  *(_DWORD *)(v3 - 120) = v4 + v7 + 1259132612 + (((v0 | 0x648) - 953243641) & 0x38D157BF);
  *(_QWORD *)(v3 - 144) = v8;
  *(_QWORD *)(v3 - 128) = v2;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_24E772B10 + ((v0 | 0x648) ^ 0x6B6)) - 8))(v3 - 144);
  *(_DWORD *)(v6 - 0x164C0FDDF1987668) = v7;
  *(_DWORD *)(v1 + 64) = 1645153785;
  return result;
}

void sub_221A40D84(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BR              X9 }
}

uint64_t sub_221A40E34()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 - 613)))(200) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1636 * ((v3 ^ v1) & 1)) ^ v1)) - 8))();
}

uint64_t sub_221A40E74(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t result;
  int v10;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v5 + 8 * ((v7 ^ 0x4D8) - 1826)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    v3 -= 7;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 & 0x75DAF05A)))(a1);
    v10 = v3;
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 -= 6;
    goto LABEL_7;
  }
  *v6 = a1;
  v10 = 2107069443;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v10 ^ v2;
  return result;
}

void sub_221A40F00(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_221A40FCC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((&a4 & 0xC1A12D46 | ~(&a4 | 0xC1A12D46)) ^ 0xE0986F62);
  a7 = &STACK[0x37021DA48139155A];
  a6 = (v10 - 127) ^ v12;
  a4 = &STACK[0x42E48BBDD224DE3D];
  a5 = v11;
  a8 = v12 ^ 0x6BDE6AF;
  v13 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v10 - 300)) - 8))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((866
                                              * (*(_DWORD *)(v11 - 0x27681A84B35EB0EDLL) == v8
                                                                                          + ((v10 + 682) | 0x24)
                                                                                          - 1063)) ^ v10)))(v13);
}

uint64_t sub_221A410B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((111 * (a11 != v11 + 4)) ^ v13))
                            - ((v13 - 509929160) & 0x1E64E3F9)
                            + 337))();
}

void sub_221A410F8(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -1645193524;
}

void sub_221A411B0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  v2 = *(_QWORD *)a1;
  ((void (*)(char *, void (*)()))*(&off_24E772B10 + (v1 ^ 0x345)))((char *)*(&off_24E772B10 + v1 - 872) - 4, sub_221A440DC);
  __asm { BR              X11 }
}

uint64_t sub_221A41280@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = **(_QWORD **)(v2 + 8 * (a1 - 698)) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v3 | (32 * v3)) ^ a1)) - 4))();
}

uint64_t sub_221A412AC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x309)))(v1);
}

void sub_221A412DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_221A41364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((918 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0x94u)) - 12))();
}

uint64_t sub_221A41390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _BOOL4 v24;

  *(_QWORD *)(*(_QWORD *)(a17 + 96) + 504) = v19 + 1;
  *(_DWORD *)(*(_QWORD *)(a17 + 96) + 496) = a19 - 1;
  v22 = 1178560073 * ((((v21 - 152) | 0xA18E8F2E) - ((v21 - 152) & 0xA18E8F2E)) ^ 0x1B1AF74C);
  *(_QWORD *)(v21 - 144) = v21 + 0x5C6940C6B1BC6F3ELL;
  *(_DWORD *)(v21 - 136) = 1172345435 - v22;
  *(_DWORD *)(v21 - 152) = 1076023948 - v22;
  v23 = sub_221A0D674(v21 - 152);
  v24 = a19 - 1071279739 + ((2 * (*(_DWORD *)(v21 - 184) & 0x3F)) ^ 0x28) + (*(_DWORD *)(v21 - 184) & 0x3F ^ 0xF7ECD6EB) > 0xFFFFFFBF;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((4 * v24) | (8 * v24)) ^ 0x283u)) - 12))(v23);
}

uint64_t sub_221A41584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  int v20;
  uint64_t v21;
  _BOOL4 v22;

  v22 = v19 + 1552915351 < (a19 + 2020647308);
  if ((a19 + 2020647308) < 0xC05E38C8 != (v19 + 1552915351) < 0xC05E38C8)
    v22 = (a19 + 2020647308) < 0xC05E38C8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((v22 * (((v20 - 189) | 0x14) + 430)) ^ v20)) - 4))();
}

uint64_t sub_221A415F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v21 = (a1 + 7106602) | 0xC1808080;
  v22 = 628203409 * ((((v20 - 152) | 0xE8E27941) - (v20 - 152) + ((v20 - 152) & 0x171D86B8)) ^ 0x6A6A7572);
  *(_QWORD *)(v20 - 152) = a16;
  *(_DWORD *)(v20 - 144) = v22 + a1 + 992;
  *(_DWORD *)(v20 - 140) = a19 - v22 - 699382058;
  v23 = sub_221A21EB0(v20 - 152);
  v24 = *(_DWORD *)(v20 - 184) & 0x3F;
  *(_BYTE *)(v20 - 252 + (v24 ^ 0x14)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (int)((((v24 ^ 0x14) > 0x37) * (v21 ^ 0xC1ECF534)) ^ a1))
                                          - 12))(v23);
}

uint64_t sub_221A41710(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * (((v4 == a4 + ((v5 - 202575953) & 0xCDFFFFF7) + 63)
                                              * (((v5 + 225) | 0x400) - 1545)) | v5)))(-1615192458);
}

uint64_t sub_221A4175C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((103 * ((v3 ^ 0x2Bu) >= ((a3 + (v4 ^ 0x78) - 1625) ^ (a3 + 8)))) ^ v4))
                            - 4))();
}

uint64_t sub_221A41798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 252 + a2 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((51 * (((v3 + 704899974) & 0xD5FC0F78) - 336 == (v2 & 0x38))) ^ v3))
                            - 8))();
}

uint64_t sub_221A417FC@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = v3 < v4;
  *(_BYTE *)(v9 - 252 + (a2 - 1737234171)) = *(_BYTE *)(v6 + (v2 + a1))
                                                         + (~(*(unsigned __int8 *)(v6
                                                                                                  + (v2 + a1)) << (v7 + 27)) | 0x9B)
                                                         + 51;
  v11 = v2 + 1 + v5;
  v12 = v10 ^ (v11 < v4);
  v13 = v11 < v3;
  if (!v12)
    v10 = v13;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v8 + 8 * ((491 * v10) ^ v7)) - 4))((v7 - 169));
}

uint64_t sub_221A4187C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((622 * (((v4 == v3) ^ (a3 + v5 - 92)) & 1)) ^ v5)))();
}

uint64_t sub_221A418CC(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(_QWORD, __n128, __n128, __n128, __n128, __n128),int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD, __n128, __n128, __n128, __n128, __n128);
  __n128 v45;
  const char *v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint8x16_t v57;
  uint16x8_t v58;
  int8x16_t v59;
  uint16x8_t v60;
  int8x16_t v61;
  uint8x16_t v62;
  uint16x8_t v63;
  uint16x8_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  uint8x16_t v69;
  int8x16_t v72;
  int8x16_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int v82;
  uint8x16_t v83;
  uint16x8_t v84;
  uint16x8_t v85;
  uint8x16_t v86;
  uint8x16_t v91;
  uint16x8_t v92;
  uint16x8_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  int32x4_t v97;
  _DWORD *v98;
  int v99;
  unsigned int v100;
  unint64_t v101;
  int8x16x4_t v102;
  int8x16x4_t v103;

  v44 = (uint64_t (*)(_QWORD, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v40 + 8 * (a4 + v36 + 61))
                                                                               - 12);
  v45 = (__n128)vdupq_n_s32(0x620F0DFFu);
  v46 = (const char *)(v43 - 252);
  v47 = (__n128)vdupq_n_s32(0x620F0DF9u);
  v48.n128_u64[0] = 0x3232323232323232;
  v48.n128_u64[1] = 0x3232323232323232;
  a27 = v41 - 16;
  v49 = (v42 - 1);
  v50.n128_u64[0] = 0x6464646464646464;
  v50.n128_u64[1] = 0x6464646464646464;
  v51 = (__n128)vdupq_n_s32(0xC41E1BF2);
  v53 = *(_DWORD *)(v43 - 180);
  v52 = *(_DWORD *)(v43 - 176);
  a26 = v53;
  v54 = *(_DWORD *)(v43 - 172);
  v55 = *(_DWORD *)(v43 - 168);
  v56 = *(_BYTE *)(v43 - 156) ^ 0x5F;
  if (v56 == 2)
  {
    a25 = v44;
    v103 = vld4q_s8(v46);
    v82 = a3 + a4 + 361;
    v83 = (uint8x16_t)veorq_s8(v103.val[0], (int8x16_t)v48);
    v84 = vmovl_u8(*(uint8x8_t *)v83.i8);
    v85 = vmovl_high_u8(v83);
    v86 = (uint8x16_t)veorq_s8(v103.val[1], (int8x16_t)v48);
    _Q22 = vmovl_u8(*(uint8x8_t *)v86.i8);
    _Q21 = vmovl_high_u8(v86);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v91 = (uint8x16_t)veorq_s8(v103.val[2], (int8x16_t)v48);
    v92 = vmovl_high_u8(v91);
    v93 = vmovl_u8(*(uint8x8_t *)v91.i8);
    v103.val[0] = veorq_s8(v103.val[3], (int8x16_t)v48);
    v103.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v103.val[0]);
    v103.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[1]);
    v103.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v103.val[1].i8);
    v103.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v103.val[0].i8);
    v103.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v103.val[0]);
    v103.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v103.val[0].i8);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), v103.val[0]);
    v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), v103.val[3]);
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), v103.val[1]);
    v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), v103.val[2]);
    v103.val[0] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)v103.val & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[3] = veorq_s8(vandq_s8((int8x16_t)v95, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[3] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[1] = veorq_s8(vandq_s8((int8x16_t)v96, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[1] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    v103.val[2] = veorq_s8(vandq_s8((int8x16_t)v97, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v103.val[2] & __PAIR128__(0xFFFFFF06FFFFFF06, 0xFFFFFF06FFFFFF06)));
    a35 = vaddq_s32(vsubq_s32(v96, vaddq_s32((int32x4_t)v103.val[1], (int32x4_t)v103.val[1])), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v103.val[2], (int32x4_t)v103.val[2])), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v103.val[0], (int32x4_t)v103.val[0])), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v103.val[3], (int32x4_t)v103.val[3])), (int32x4_t)v47);
    v98 = (_DWORD *)&a33 + v39 + 1438604517;
    v99 = *((_DWORD *)&a33 + (v82 ^ 0x475u ^ (unint64_t)(v39 + 788)) + 1438604517) ^ *(v98 - 3);
    v100 = *(v98 - 16) ^ *(v98 - 14) ^ (v99 + v37 - ((2 * v99) & 0xC41E1BF2));
    HIDWORD(v101) = v100 ^ v37;
    LODWORD(v101) = v100;
    *v98 = (v101 >> 31) + v37 - ((2 * (v101 >> 31)) & 0xC41E1BF2);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * ((1178 * (v41 == 1438604454)) ^ v82)) - 12))(v49);
  }
  else if (v56 == 1)
  {
    a25 = v44;
    v102 = vld4q_s8(v46);
    v57 = (uint8x16_t)veorq_s8(v102.val[0], (int8x16_t)v48);
    v58 = vmovl_high_u8(v57);
    v59 = (int8x16_t)vmovl_high_u16(v58);
    v60 = vmovl_u8(*(uint8x8_t *)v57.i8);
    v61 = (int8x16_t)vmovl_high_u16(v60);
    v62 = (uint8x16_t)veorq_s8(v102.val[1], (int8x16_t)v48);
    v63 = vmovl_u8(*(uint8x8_t *)v62.i8);
    v64 = vmovl_high_u8(v62);
    v65 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8));
    v66 = vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v61);
    v67 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v58.i8));
    v68 = vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v59);
    v69 = (uint8x16_t)veorq_s8(v102.val[2], (int8x16_t)v48);
    _Q22 = (int8x16_t)vmovl_high_u8(v69);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v69.i8);
    v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v102.val[0] = veorq_s8(v102.val[3], (int8x16_t)v48);
    v102.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v102.val[0].i8);
    v102.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v102.val[0]);
    v78 = (int32x4_t)vorrq_s8(vorrq_s8(v65, v72), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v102.val[1].i8), 0x18uLL));
    v102.val[1] = vorrq_s8(vorrq_s8(v66, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v102.val[1]), 0x18uLL));
    v79 = (int32x4_t)vorrq_s8(vorrq_s8(v67, v77), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v102.val[0].i8), 0x18uLL));
    v80 = (int32x4_t)vorrq_s8(vorrq_s8(v68, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v102.val[0]), 0x18uLL));
    a35 = vaddq_s32(vsubq_s32(v79, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v79, v79), (int8x16_t)v51)), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v80, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v80, v80), (int8x16_t)v51)), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v78, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v78, v78), (int8x16_t)v51)), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v102.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v102.val[1], (int32x4_t)v102.val[1]), (int8x16_t)v51)), (int32x4_t)v47);
    return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(v40 + 8
                                                                      * ((62 * (a27 + 1 != v41)) | (a3 + a4 + 129)))
                                                    - 12))(v49, v45);
  }
  else
  {
    *(_DWORD *)(v43 - 180) = (v53 ^ v42) + (a26 ^ v42) + v42 - (v38 & (2 * ((v53 ^ v42) + (a26 ^ v42))));
    *(_DWORD *)(v43 - 176) = 2 * (v52 ^ v42) + v42 - (v38 & (4 * (v52 ^ v42)));
    *(_DWORD *)(v43 - 172) = 2 * (v54 ^ v42) + v42 - (v38 & (4 * (v54 ^ v42)));
    *(_DWORD *)(v43 - 168) = 2 * (v55 ^ v42) + v42 - (v38 & (4 * (v55 ^ v42)));
    a31 = 0;
    return v44(v49, v45, v47, v48, v50, v51);
  }
}

uint64_t sub_221A4272C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,unsigned int a24)
{
  uint64_t v24;
  _BOOL4 v25;

  if (a24 < 0xBF7B13B9 != (a21 + 1538029256) < 0xBF7B13B9)
    v25 = (a21 + 1538029256) < 0xBF7B13B9;
  else
    v25 = a21 + 1538029256 > a24;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((!v25 * (((a3 ^ (a3 + 160)) - 122) ^ 0x458)) ^ (a4 + a3 + 655)))
                            - 12))();
}

uint64_t sub_221A427BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v7
                                                               + 8
                                                               * ((1709
                                                                 * (((v6 + 1) ^ (a5 + v5 + 63 < (v5 - 633048600 + a3 + v6 - 352))) & 1)) ^ v6))
                                                   - 12))(a1, 1456643678);
}

uint64_t sub_221A42820(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * (((~a19
                                           + v19
                                           - (unint64_t)(v21 + (v20 ^ 0x3A ^ (a3 + 214))) < 0x10)
                                          * ((v20 ^ 0x3A) - 288)) ^ v20 ^ 0x3A))
                            - 12))();
}

uint64_t sub_221A42868@<X0>(char a1@<W1>, int a2@<W3>, int a3@<W4>, char a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v7 + a5) = *(_BYTE *)(v10 + (v5 + a3))
                      - ((*(_BYTE *)(v10 + (v5 + a3)) << (((v6 + v8) & a1) - 87)) & a4)
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a5 == 63) * v9) | (a2 + v6 + 276))) - 8))();
}

uint64_t sub_221A428C0(double a1, double a2, int8x16_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  int v9;
  int8x16_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *v10 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v12 + (v9 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v12 + (v9 + a9)), *(int8x16_t *)(v12 + (v9 + a9))), a4)), a3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (v11 + 25)) - 8))();
}

uint64_t sub_221A42928@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((1030 * ((v3 - a1 + 443 + a3 - 1615192901) < 0x38)) ^ (a2 + v3 + 455))))(-1615192458);
}

uint64_t sub_221A4296C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2;
  v5 = a1 + a2;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1858
                                * (((v2 + 44) ^ (v6 - v4 + 1615192458 < (((v2 + 99) | 0x61u) ^ 0x277uLL))) & 1)) ^ v2)))();
}

uint64_t sub_221A429E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 252 + v3 + a1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((58 * (((7 * (v2 ^ 0x22Cu) - 589) & a2) != 8)) ^ (7 * (v2 ^ 0x22C))))
                            - ((7 * (v2 ^ 0x22C) - 147) | 9u)
                            + 439))();
}

uint64_t sub_221A42A54(double a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v3 + v6) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v4 != v6) * v5) ^ v1)) - v2 + 439))();
}

uint64_t sub_221A42A7C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v3 - 805309644) & 0xF1ECFBF7 ^ 0xFFFFFF72) + (v3 ^ (a1 + 117))) * (a2 == v2)) ^ v3)))();
}

void sub_221A42AC8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;

  v5 = *(unsigned __int8 *)(v4 - 156) ^ 0x5F;
  if (v5 == 1)
  {
    v10 = *(_DWORD *)(v4 - 188);
    v9 = *(_DWORD *)(v4 - 184);
    *(_BYTE *)(v4 - 196) = ((8 * v9) ^ 0xA0) + ((a3 + 22) & 0xB7 ^ 0x87) - ((2 * ((8 * v9) ^ 0xA0)) & 0x60);
    *(_BYTE *)(v4 - 195) = ((v9 >> 5) ^ 0xF2) - 2 * (((v9 >> 5) ^ 0xF2) & 0x36 ^ (v9 >> 5) & 4) + 50;
    *(_BYTE *)(v4 - 194) = ((v9 >> 13) ^ 0x8F) - ((2 * ((v9 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v4 - 193) = ((v9 >> 21) ^ 0x39) - ((2 * ((v9 >> 21) ^ 0x39)) & 0x64) + 50;
    HIDWORD(v11) = v10 ^ 0xA;
    LODWORD(v11) = v9 ^ 0x60000000;
    *(_BYTE *)(v4 - 192) = (v11 >> 29) - ((2 * (v11 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v4 - 191) = ((v10 >> 5) ^ 0xA) - 2 * (((v10 >> 5) ^ 0xA) & 0x37 ^ (v10 >> 5) & 5) + 50;
    *(_BYTE *)(v4 - 190) = ((v10 >> 13) ^ 0xA4) - ((2 * ((v10 >> 13) ^ 0xA4)) & 0x64) + 50;
    v8 = ((v10 >> 21) ^ 0xFFFFFFBE) - ((2 * ((v10 >> 21) ^ 0xFFFFFFBE)) & 0x64) + 50;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_6;
    v8 = *(_DWORD *)(v4 - 188);
    v6 = *(_DWORD *)(v4 - 184);
    *(_BYTE *)(v4 - 196) = ((v8 >> 21) ^ 0xBE)
                         + ~(2 * (((v8 >> 21) ^ 0xBE) & (a4 + a3 + 51) ^ ((v8 & 0x200000) != 0)))
                         + 51;
    *(_BYTE *)(v4 - 195) = ((v8 >> 13) ^ 0xA4) + (~(2 * ((v8 >> 13) ^ 0xA4)) | 0x9B) + 51;
    HIDWORD(v7) = v8 ^ 0xA;
    LODWORD(v7) = v6 ^ 0x60000000;
    *(_BYTE *)(v4 - 194) = ((v8 >> 5) ^ 0xA) - 2 * (((v8 >> 5) ^ 0xA) & 0x36 ^ (v8 >> 5) & 4) + 50;
    *(_BYTE *)(v4 - 193) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0x64) + 50;
    *(_BYTE *)(v4 - 192) = ((v6 >> 21) ^ 0x39) - ((2 * ((v6 >> 21) ^ 0x39)) & 0x64) + 50;
    *(_BYTE *)(v4 - 191) = ((v6 >> 13) ^ 0x8F) - ((2 * ((v6 >> 13) ^ 0x8F)) & 0x64) + 50;
    *(_BYTE *)(v4 - 190) = ((v6 >> 5) ^ 0xF2) - ((2 * ((v6 >> 5) ^ 0xF2)) & 0x64) + 50;
    LOBYTE(v8) = ((8 * v6) ^ 0xA0) + (~(2 * ((8 * v6) ^ 0xA0)) | 0x9F) + 51;
  }
  *(_BYTE *)(v4 - 189) = v8;
LABEL_6:
  JUMPOUT(0x221A41B94);
}

uint64_t sub_221A42F34@<X0>(char a1@<W3>, uint64_t a2@<X5>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;

  v8 = v5 + a3;
  v9 = *(_DWORD *)(v7 - 252 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a2 + v8 + 1) = (BYTE2(v9) ^ 0x3B) - ((2 * (BYTE2(v9) ^ 0x3B)) & 0x64) + 50;
  *(_BYTE *)(a2 + v8) = (HIBYTE(v9) ^ 0x51) - (((HIBYTE(v9) ^ 0x51) << ((v4 - a1 + 1) ^ 0xE6)) & 0x64) + 50;
  *(_BYTE *)(a2 + v8 + 3) = v9 ^ 0x47;
  *(_BYTE *)(a2 + v8 + 2) = (BYTE1(v9) ^ 0xA7) - ((2 * (BYTE1(v9) ^ 0xA7)) & 0x64) + 50;
  v10 = *(_DWORD *)(v7 - 160) - 2026446123;
  if (v5 - 1725448501 < v3 != v10 < v3)
    v11 = v10 < v3;
  else
    v11 = v5 - 1725448501 < v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((510 * !v11) ^ v4)) - 12))();
}

void sub_221A430CC()
{
  JUMPOUT(0x221A4309CLL);
}

uint64_t sub_221A430D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v33;
  uint64_t v34;

  *(_DWORD *)(&a33 + a31) = 1037212390;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v34 + 8 * ((22 * (v33 ^ 0x350)) ^ 0x6BD)) - 8))(1398064151, 1037212390, a3, a4, a5, &a33 + a31, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           &a33 + a31 + 392);
}

uint64_t sub_221A43188(int a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((51 * (((v3 == a1) ^ (v1 + 33)) & 1)) ^ v1)) - 4))();
}

uint64_t sub_221A431D0(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  int v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unsigned __int8 v34;
  int v35;
  int v36;
  BOOL v37;

  v33 = v30 & 0xDDFDFEFF;
  v34 = v33 + 12;
  v35 = v33 - a3 + 242;
  v36 = a4 + v33 + 67;
  v37 = a30 - 176914108 < (v32 - 1020078970);
  if ((a30 - 176914108) < 0xB206BC1 != (v32 - 1020078970) < 0xB206BC1)
    v37 = (v32 - 1020078970) < 0xB206BC1;
  return (*(uint64_t (**)(void))(v31 + 8 * ((((v34 ^ v37) & 1) * (v35 ^ 0x29)) ^ v36)))();
}

uint64_t sub_221A43430()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((*(_DWORD *)(v1 + 48 * (v4 + v2) + 36) == v4) ^ ((v0 & 0xBF) - 30)) & 1)
                                          * (((v0 & 0x6937FBBF) + 63) ^ 0x80)) ^ v0 & 0x6937FBBF))
                            - 12))();
}

uint64_t sub_221A43488(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v34;

  v31 = v27 - a4 - 242;
  v32 = 628203409 * ((((v30 - 152) | 0x36F0807) - ((v30 - 152) & 0x36F0807)) ^ 0x81E70434);
  *(_DWORD *)(v30 - 136) = v27 - v32 + 1552;
  *(_DWORD *)(v30 - 132) = v29 - v32 + 77623025;
  *(_QWORD *)(v30 - 128) = a14;
  *(_QWORD *)(v30 - 112) = v26;
  *(_QWORD *)(v30 - 104) = a12;
  *(_QWORD *)(v30 - 152) = a13;
  *(_QWORD *)(v30 - 144) = a11;
  v34 = v25;
  ((void (*)(uint64_t))*(&off_24E772B10 + v27 - 85))(v30 - 152);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((356 * (*(_DWORD *)(v30 - 120) == (v31 ^ 0xA3E3FA51) + (v27 ^ 0x3B1))) ^ v27))
                                                                                       - 8))(1398064151, 1037212390, 3253530855, 1041436441, v34, a25);
}

uint64_t sub_221A43584(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(a5 + 48 * (v8 + v5)) != 617625952)
                                * (((a3 + v6 - 835) ^ (a3 - 51)) - 51)) | v6)))();
}

uint64_t sub_221A435D0@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((199
                                          * (((((v2 - 1058217968) | 0x1001084) - 2098010104) ^ a2) != v3 - 634403168)) ^ v2))
                            + 3253530843
                            - (v2 - a1 - 83)))();
}

void sub_221A43640(uint64_t a1, uint64_t a2, int a3, int a4)
{
  __asm { BR              X10 }
}

uint64_t sub_221A436C8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27,int a28)
{
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;

  *(_DWORD *)(a2 + 392) = a3;
  *(_DWORD *)(a2 + 396) = a28;
  *(_QWORD *)(a2 + 400) = a23;
  *(_DWORD *)(a2 + 408) = a25 - v32 + 1642836220;
  *(_QWORD *)(a2 + 416) = v29 + (v32 - 363588221);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v28 + 8))(a12, a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                       + 8
                                                                       * ((270
                                                                         * (v35
                                                                          + v30
                                                                          - (((v31 + 510469503) & 0xE192D4B6 ^ (v34 - 140)) & (2 * v35)) == v30)) ^ v31)))(1398064151, 1037212390, 3253530855, 1041436441);
}

uint64_t sub_221A43794()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((39
                                          * ((*(_DWORD *)(v1 + 48 * v0 + 36) + 749419496) < 0x80000003)) ^ v2))
                            - (((v2 - 2124111890) | 0x40885065u) ^ 0xC1ECF0EBLL)))();
}

uint64_t sub_221A43808(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, _DWORD *a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((598 * (*a6 - 1037212390 < a4 + ((v6 + 30) ^ (a3 - 146)) + 16)) ^ v6))
                            - (((v6 + 30) | 0x40u) ^ 0xFELL)))();
}

uint64_t sub_221A43860@<X0>(int a1@<W2>, uint64_t a2@<X4>, _DWORD *a3@<X5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _DWORD *v33;

  v33 = &a3[6 * v27];
  v33[2] = v32;
  v33[3] = v28;
  *((_QWORD *)v33 + 2) = v30;
  v33[6] = a26;
  *a3 = v26 + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v31
                                        + 8
                                        * (((*(_DWORD *)(a2 + 48 * v29 + 32) + 749419496 < ((a4 + 1033) ^ 0x800004F8))
                                          * ((a1 + a4 - 242) ^ (a1 + 719))) ^ a4))
                            - 8))();
}

uint64_t sub_221A438DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (((v22 + 74 * (v21 ^ 0x4F9) == 1645153933) * (((74 * (v21 ^ 0x4F9)) ^ 0x66) + 1545)) ^ (74 * (v21 ^ 0x4F9)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_221A4393C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  int v27;
  uint64_t v28;
  int v29;
  _BOOL4 v31;

  v31 = v29 != a1 || *a6 != a2 + (v27 ^ a27) - a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((1725 * v31) ^ v27)) - 8))();
}

void sub_221A43984()
{
  JUMPOUT(0x221A439BCLL);
}

uint64_t sub_221A43A08(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 47;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_221A43A28(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  BOOL v7;
  uint64_t v8;

  v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = v2 >= v3;
  v5 = (uint64_t)v2 < (uint64_t)v3;
  v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * (((_DWORD)result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0)
    v5 = v6;
  v7 = !v5;
  v8 = 32;
  if (!v7)
    v8 = 28;
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

uint64_t sub_221A43AB8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

uint64_t sub_221A43AD0(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  BOOL v8;
  uint64_t v9;

  v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  v2 = *(_QWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 40) + v1;
  v4 = v3 >= v2;
  v5 = v3 != v2;
  v6 = v4;
  if (((*(_DWORD *)(result + 28) ^ (1178560073 * ((2 * (result & 0x40A5398A) - (_DWORD)result - 1084569995) ^ 0x5CEBE17))) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  v8 = v7 == 0;
  v9 = 4;
  if (!v8)
    v9 = 24;
  *(_DWORD *)result = (*(_DWORD *)(result + v9)
                     - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17)) ^ (*(_DWORD *)(result + 8) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

uint64_t sub_221A43B78(int *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  result = ((uint64_t (*)(char *, _QWORD))*(&off_24E772B10 + (int)(v2 - 1695027228)))((char *)*(&off_24E772B10 + (int)(v2 - 1695027372)) - 12, *(&off_24E772B10 + (int)(v2 ^ 0x6508107F)));
  v4 = *(_DWORD *)*(&off_24E772B10 + (int)(v2 ^ 0x650810DA));
  if ((_DWORD)result)
    v4 = -1645193401;
  *a1 = v4;
  return result;
}

uint64_t sub_221A43C14(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;
  _BOOL4 v6;
  BOOL v7;
  uint64_t v8;

  v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  v2 = *(_QWORD *)(result + 16);
  v3 = v2 ^ v1;
  v4 = *(_QWORD *)result == v2;
  v5 = (*(_QWORD *)result ^ v1) > v3;
  if (((*(_DWORD *)(result + 8) + (_DWORD)v1) & 1) != 0)
    v6 = v5;
  else
    v6 = v4;
  v7 = !v6;
  v8 = 28;
  if (!v7)
    v8 = 32;
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 12) ^ v1 ^ (*(_DWORD *)(result + v8) - v1);
  return result;
}

_BYTE *sub_221A43CAC(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_221A43D3C + 4 * byte_2226938C7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_221A43DA0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_DWORD *)(a1 + 20) + v2;
  v7 = *(_DWORD *)a1 + 2024873124 + v2;
  v8 = 235795823
     * (((&v10 | 0xDE5284D5) - &v10 + (&v10 & 0x21AD7B28)) ^ 0x4AFFCD8C);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = v4;
  v16 = v3;
  v11 = v8 + (v6 ^ 0x1C576372) + 2142240416 + ((2 * v6) & 0xBEFD8FFE ^ 0x8651091A);
  v10 = v5;
  v15 = v8 ^ (v7 + 1820);
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_24E772B10 + v7) - 4))(&v10);
  *(_DWORD *)(a1 + 40) = v14;
  return result;
}

uint64_t sub_221A43EFC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_221A43F14(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_221A43F2C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_221A43F44(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  unsigned int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  v3 = *(_DWORD *)(a1 + 20) - v2;
  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16) - v2 - ((2 * (*(_DWORD *)(a1 + 16) - v2) + 50606586) & 0x52C224C2) - 1427952802;
  v7 = -400126375 * (*(_DWORD *)(a1 + 24) + v2) - 1847956774;
  v8 = 1755732067
     * (((&v10 | 0x8E52AAAD) - &v10 + (&v10 & 0x71AD5550)) ^ 0x50941776);
  v10 = (v7 ^ 0xFFDDE664) + v8 + ((2 * v7) & 0xFFBBCCC8) + 1370734048;
  v12 = v8 ^ (v3 - 2138962107);
  v13 = v4;
  v14 = v6 ^ v8;
  v11 = v5;
  result = ((uint64_t (*)(unsigned int *))((char *)*(&off_24E772B10 + (v3 ^ 0x7F7DFD65)) - 8))(&v10);
  *(_DWORD *)(a1 + 28) = v15;
  return result;
}

void sub_221A440DC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v0 = qword_255742BF0 ^ (unint64_t)&v1 ^ qword_255742BE0;
  qword_255742BF0 = 536075833 * v0 + 0x3076D37E12EEFF1CLL;
  qword_255742BE0 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  v3 = 1951 - 1759421093 * ((2 * (&v2 & 0x1AB9A500) - &v2 + 1699109631) ^ 0xD63BEAAB);
  v2 = (uint64_t)*(&off_24E772B10
                + ((57 * (qword_255742BF0 ^ 0xFC ^ qword_255742BE0)) ^ byte_22269AF70[byte_222696F20[(57 * (qword_255742BF0 ^ 0xFC ^ qword_255742BE0))] ^ 0xF9])
                - 15);
  sub_221A40D84((uint64_t)&v2);
}

uint64_t sub_221A44204(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  int v8;

  v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 8) - v1;
  v4 = v3 > v2;
  v5 = v3 == v2;
  v6 = v4;
  if (((*(_DWORD *)(result + 32) - 1755732067 * ((2 * (result & 0x18C8728C) - (_DWORD)result - 415789709) ^ 0x39F130A8)) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  if (v7)
    v8 = *(_DWORD *)(result + 24) + 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  else
    v8 = *(_DWORD *)(result + 28) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  *(_DWORD *)result = *(_DWORD *)(result + 4) ^ (1755732067
                                               * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)) ^ v8;
  return result;
}

uint64_t sub_221A442A4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E));
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v5 = v1
     + 1225351577
     * ((2 * ((&v5 ^ 0x618AC2C7) & 0x400DFC4D) - (&v5 ^ 0x618AC2C7) - 1074658382) ^ 0xFDE21963)
     + 1882357917;
  v6 = v2;
  v7 = v3;
  return ((uint64_t (*)(unsigned int *))*(&off_24E772B10 + (int)(v1 ^ 0x8FCD81B4)))(&v5);
}

uint64_t sub_221A443A8(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = 1374699841 * (a1 ^ 0x6DF41809);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)a1;
  v7 = 1224239923 * ((((2 * &v10) | 0x912C61DA) - &v10 + 929681171) ^ 0x3A25CD3A);
  v8 = (*(_DWORD *)(a1 + 8) ^ v2) - 368400168;
  v11 = v2 + *(_DWORD *)(a1 + 56) - v7 - 707766453;
  v16 = v8 + v7 + 869;
  v13 = v3;
  v14 = v5;
  v10 = v6;
  v12 = v4;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_24E772B10 + v8) - 4))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

void sub_221A444C0()
{
  unint64_t v0;
  unsigned int v1;
  _BYTE v2[8];
  char *v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v0 = (unint64_t)&v2[qword_255742BE0 ^ qword_255742018];
  qword_255742018 = 536075833 * v0 - 0x793AB71194CDC804;
  qword_255742BE0 = 536075833 * (v0 ^ 0x86C548EE6B3237FCLL);
  v3 = (char *)*(&off_24E772B10
               + ((57 * ((qword_255742BE0 - qword_255742018) ^ 0xFC)) ^ byte_222697020[byte_2226937C0[(57 * ((qword_255742BE0 - qword_255742018) ^ 0xFC))] ^ 0xCD])
               - 59);
  v4 = 1951 - 1759421093 * (((&v3 | 0x62E542B1) - (&v3 & 0x62E542B1)) ^ 0xD198F2E5);
  sub_221A40D84((uint64_t)&v3);
  v4 = 1951 - 1759421093 * ((((2 * &v3) | 0xD19EEED6) - &v3 - 1758426987) ^ 0xDBB2C73F);
  v3 = (char *)*(&off_24E772B10
               + ((57 * (qword_255742018 ^ 0xFC ^ qword_255742BE0)) ^ byte_22269FB60[byte_22269AE70[(57 * (qword_255742018 ^ 0xFC ^ qword_255742BE0))] ^ 0x15])
               + 80)
     - 4;
  sub_221A40D84((uint64_t)&v3);
  v1 = 1225351577
     * (((&v3 ^ 0x9D172845 | 0xE551A89D)
       - (&v3 ^ 0x9D172845)
       + ((&v3 ^ 0x9D172845) & 0x1AAE5760)) ^ 0x5BDC58CE);
  LODWORD(v3) = v1 + 336;
  BYTE4(v3) = v1 ^ 0x7D;
  sub_221A0CF3C((uint64_t)&v3);
}

void sub_221A446E8(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)*(&off_24E772B10
                  + (int)((*a1 ^ (535753261
                                * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                        - 426523007));
  v3 = (3804331 * (&v2 ^ 0x7ED525F6)) ^ ((*a1 ^ (535753261
                                                             * ((1711628207
                                                               - (a1 | 0x66055FAF)
                                                               + (a1 | 0x99FAA050)) ^ 0x930EAE7F)))
                                                     - 426522727);
  v2 = v1;
  sub_221A20214((uint64_t)&v2);
}

void sub_221A44D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221A454B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_221A473DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A4757C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A4A4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraUserSettingsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isOwner;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 12) |= 4u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            v20 = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isSharingFaceClassificationsEnabled;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 12) |= 1u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        v20 = 0;
        v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDHomeKitCameraUserSettings__isImportingFromPhotoLibraryEnabled;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      v20 = 0;
LABEL_50:
    *(_BYTE *)(a1 + *v25) = v20 != 0;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221A4D748(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A4D7B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A4D820(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A4FB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitMultiUserSettingsValueByKeyPathReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void *v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 36) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_41:
          *(_DWORD *)(a1 + 32) = v19;
          continue;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 24;
          goto LABEL_37;
        case 3u:
          v26 = 0;
          v27 = 0;
          v28 = 0;
          *(_BYTE *)(a1 + 36) |= 1u;
          break;
        case 4u:
          PBReaderReadData();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
LABEL_37:
          v32 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
          break;
        v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
        *(_QWORD *)(a2 + v29) = v30 + 1;
        v28 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0)
          goto LABEL_43;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          v28 = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        v28 = 0;
LABEL_45:
      *(_QWORD *)(a1 + 8) = v28;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221A55F20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A55FF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A560A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A56138(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A561BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A56220(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A5629C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A56318(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A5A37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221A5BDAC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1277(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1278(uint64_t a1)
{

}

void ____shouldFilterHandle_block_invoke()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x24BDAC8D0];
  v0 = (void *)MEMORY[0x24BDBCF20];
  v1 = objc_alloc(MEMORY[0x24BE4FCE0]);
  v2 = (void *)objc_msgSend(v1, "initWithUnprefixedURI:", *MEMORY[0x24BE4FD30]);
  v8[0] = v2;
  v3 = objc_alloc(MEMORY[0x24BE4FCE0]);
  v4 = (void *)objc_msgSend(v3, "initWithUnprefixedURI:", *MEMORY[0x24BE4FD38]);
  v8[1] = v4;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v8, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)__shouldFilterHandle_blacklistedURIs;
  __shouldFilterHandle_blacklistedURIs = v6;

}

void sub_221A69A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221A69B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221A69BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221A6B4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDShortcutActionInitializeWithSerializedShortcut(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v4)
  {
    objc_storeStrong(v3 + 3, a2);
    if (!WorkflowKitLibraryCore_frameworkLibrary)
    {
      v19 = xmmword_24E773B18;
      v20 = 0;
      WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
    }
    if (WorkflowKitLibraryCore_frameworkLibrary)
    {
      v15 = 0;
      v16 = &v15;
      v17 = 0x2050000000;
      v5 = (void *)getWFHomeWorkflowClass_softClass;
      v18 = getWFHomeWorkflowClass_softClass;
      if (!getWFHomeWorkflowClass_softClass)
      {
        *(_QWORD *)&v19 = MEMORY[0x24BDAC760];
        *((_QWORD *)&v19 + 1) = 3221225472;
        v20 = __getWFHomeWorkflowClass_block_invoke;
        v21 = &unk_24E797578;
        v22 = &v15;
        __getWFHomeWorkflowClass_block_invoke((uint64_t)&v19);
        v5 = (void *)v16[3];
      }
      v6 = objc_retainAutorelease(v5);
      _Block_object_dispose(&v15, 8);
      v7 = [v6 alloc];
      v8 = objc_msgSend(v7, "initWithData:", v4, v15);
      v9 = v3[4];
      v3[4] = (id)v8;

      v15 = 0;
      v16 = &v15;
      v17 = 0x2050000000;
      v10 = (void *)getWFHomeWorkflowControllerClass_softClass;
      v18 = getWFHomeWorkflowControllerClass_softClass;
      if (!getWFHomeWorkflowControllerClass_softClass)
      {
        *(_QWORD *)&v19 = MEMORY[0x24BDAC760];
        *((_QWORD *)&v19 + 1) = 3221225472;
        v20 = __getWFHomeWorkflowControllerClass_block_invoke;
        v21 = &unk_24E797578;
        v22 = &v15;
        __getWFHomeWorkflowControllerClass_block_invoke((uint64_t)&v19);
        v10 = (void *)v16[3];
      }
      v11 = objc_retainAutorelease(v10);
      _Block_object_dispose(&v15, 8);
      v12 = [v11 alloc];
      v13 = objc_msgSend(v12, "initWithWorkflow:", v3[4], v15);
      v14 = v3[5];
      v3[5] = (id)v13;

    }
  }

}

void sub_221A6BF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getWFHomeWorkflowClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  WorkflowKitLibrary();
  result = objc_getClass("WFHomeWorkflow");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getWFHomeWorkflowControllerClass_block_invoke(v3);
  }
  return result;
}

void __getWFHomeWorkflowControllerClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFHomeWorkflowController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    WorkflowKitLibrary();
  }
}

void WorkflowKitLibrary()
{
  void *v0;

  if (!WorkflowKitLibraryCore_frameworkLibrary)
  {
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!WorkflowKitLibraryCore_frameworkLibrary)
    {
      v0 = (void *)abort_report_np();
      free(v0);
    }
  }
}

void sub_221A79730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A79908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A79AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A7A430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A7A7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A7AE10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A7AFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221A82ED8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221A84B14(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A84EE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_221A85BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221A86388(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A869C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A97150(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A971C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A97238(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A972B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A9731C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221A9B428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6152(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6153(uint64_t a1)
{

}

id arrayToString(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x24BDD16A8], "string");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("\n %@ ["), v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appendString:", v6);

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v19;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v19 != v10)
          objc_enumerationMutation(v7);
        v12 = (void *)MEMORY[0x24BDD17C8];
        objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v11), "descriptionWithIndent:", v4);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "stringWithFormat:", CFSTR(" %@"), v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "appendString:", v14);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v9);
  }

  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("\n %@ ]"), v4);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appendString:", v15);

  v16 = (void *)objc_msgSend(v5, "copy");
  return v16;
}

BOOL checkForParseResult(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t *v11;
  uint64_t *v13;

  v13 = &a10;
  if (!a9)
    return 0;
  v10 = 0;
  while (a1 - 1 != v10)
  {
    v11 = v13++;
    ++v10;
    if (!*v11)
      return v10 >= a1;
  }
  return 1;
}

void sub_221AB2C28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AB2E60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AB2F44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AB34CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AB3A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitMessageLocationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = 0;
          v19 = 0;
          v20 = 0;
          *(_BYTE *)(a1 + 48) |= 8u;
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_52;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_54;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_54:
          *(_QWORD *)(a1 + 32) = v20;
          continue;
        case 2u:
          *(_BYTE *)(a1 + 48) |= 4u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 24;
          goto LABEL_70;
        case 3u:
          *(_BYTE *)(a1 + 48) |= 2u;
          v29 = *v3;
          v30 = *(_QWORD *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 16;
          goto LABEL_70;
        case 4u:
          *(_BYTE *)(a1 + 48) |= 1u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v47 = 8;
LABEL_70:
          *(_QWORD *)(a1 + v47) = v28;
          continue;
        case 5u:
          v33 = 0;
          v34 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 48) |= 0x20u;
          while (2)
          {
            v36 = *v3;
            v37 = *(_QWORD *)(a2 + v36);
            v38 = v37 + 1;
            if (v37 == -1 || v38 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
              *(_QWORD *)(a2 + v36) = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                v15 = v34++ >= 9;
                if (v15)
                {
                  LODWORD(v35) = 0;
                  goto LABEL_58;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v35) = 0;
LABEL_58:
          v46 = 44;
          goto LABEL_63;
        case 6u:
          v40 = 0;
          v41 = 0;
          v35 = 0;
          *(_BYTE *)(a1 + 48) |= 0x10u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        v44 = v43 + 1;
        if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
          break;
        v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v44;
        v35 |= (unint64_t)(v45 & 0x7F) << v40;
        if ((v45 & 0x80) == 0)
          goto LABEL_60;
        v40 += 7;
        v15 = v41++ >= 9;
        if (v15)
        {
          LODWORD(v35) = 0;
          goto LABEL_62;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_60:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v35) = 0;
LABEL_62:
      v46 = 40;
LABEL_63:
      *(_DWORD *)(a1 + v46) = v35;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221ABA09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void __languageChanged()
{
  id v0;

  +[HMDMainDriver driver](HMDMainDriver, "driver");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "localeChanged");

}

void sub_221ABEE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AC0D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9130(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9131(uint64_t a1)
{

}

void sub_221AC84AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AC88E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AC8A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AC8E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221AC902C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221AC920C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221ACA1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_221ACA2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221ACA59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_221ACA6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221ACA9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(&a26);
  _Unwind_Resume(a1);
}

void sub_221ACAB10(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10204(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10205(uint64_t a1)
{

}

void sub_221AD6094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AD63D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AD7630(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDRemoteLoginAccountTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDRemoteLoginAccountTypeITunes");
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDRemoteLoginAccountType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221ADA6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12675(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12676(uint64_t a1)
{

}

void sub_221ADE448(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221ADE510(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE0000(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE0334(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE04C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void addLogEventsToResponse(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "objectForKeyedSubscript:", v8);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v7, v8);
  }
  objc_msgSend(v7, "addObjectsFromArray:", v5);

}

uint64_t HMDRemoteEventRouterProtoConnectResponseReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  id v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(MEMORY[0x24BE4EDC0]);
        objc_msgSend(a1, "addCachedEvents:", v17);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221AE2AB0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE2B84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE2D50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE2DBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221AE84DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id *location,id *a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;

  if (!a47)
    objc_destroyWeak(location);
  objc_destroyWeak(a45);
  objc_destroyWeak((id *)(v47 - 168));
  _Unwind_Resume(a1);
}

void sub_221AE9A00(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9BFC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221AE9CEC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9D54(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9DE4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9E74(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9EDC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9F44(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AE9FAC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AEA070(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AEB29C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AEB6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_221AF0448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id *location,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a52);
  _Unwind_Resume(a1);
}

void sub_221AF81C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221AFA3C0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AFA494(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AFA50C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221AFA94C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_221AFB38C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221AFD194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B0296C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B05F90(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B06228(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B07B9C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B080C4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B08668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B09F34(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B0AE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B0B208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B0B3CC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B0BBC0(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B0C1A4(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221B10AEC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B117B0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B11A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B13854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B1516C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B17DB8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221B18074(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B186D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B18D48(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B191D0(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221B1A474(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B1DA54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  uint64_t v11;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 152));
  _Unwind_Resume(a1);
}

void sub_221B1E6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B20924(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B209B0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B20DE0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B20E84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B23C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_221B24124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,id location)
{
  _HMFThreadLocalAsyncContextPop();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B245E8(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221B24DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id a49)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(&a49);
  _Unwind_Resume(a1);
}

void sub_221B27718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_221B28304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B29524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B2A640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id a58)
{
  id *v58;

  objc_destroyWeak(v58);
  objc_destroyWeak(location);
  objc_destroyWeak(&a58);
  objc_destroyWeak(a21);
  objc_destroyWeak(&a43);
  _Unwind_Resume(a1);
}

void sub_221B2BD14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,id location,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  id *v57;

  objc_destroyWeak(v57);
  _HMFThreadLocalAsyncContextPop();
  objc_destroyWeak(&location);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_221B2E468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B32DDC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x330]);
  _Unwind_Resume(a1);
}

void sub_221B347E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_221B35324(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_221B3573C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B35A18(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B36220(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_221B3648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B36F48(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_221B3785C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B37B34(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B39C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_221B3ADFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B3B054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B3C134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B3C5E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_221B3C970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B3D3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B4004C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B44210(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B51704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_221B554D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

void sub_221B56174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B565B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_221B5783C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B58504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B5E918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B5E9D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5EB1C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5EBAC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5EC14(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5EDB8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5EE48(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B5F0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B5FCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id location;

  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B5FF44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B60208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B60724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B60874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B61190(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B613CC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B61448(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B61500(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B619F8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B61F84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B62D38(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62DA0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62E3C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62EBC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62F24(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B62F9C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B63014(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B630A0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B6659C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B67A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B6C044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14094(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14095(uint64_t a1)
{

}

id reportContextFromMessage(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  void *v9;
  float v10;
  void *v11;

  v1 = a1;
  objc_msgSend(v1, "messagePayload");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "hmf_stringForKey:", *MEMORY[0x24BDD6258]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "messagePayload");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hmf_dataForKey:", *MEMORY[0x24BDD6268]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v6 = v5 == 0;
  else
    v6 = 1;
  if (v6)
  {
    v11 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD7860], "reportContextWithDomain:requestInfo:", v3, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "messagePayload");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "hmf_numberForKey:", *MEMORY[0x24BDD6260]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "floatValue");
    objc_msgSend(v7, "setReportTimeout:", v10);

    v11 = (void *)objc_msgSend(v7, "copy");
  }

  return v11;
}

void __transactionHomeSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  int v16;
  void *v17;
  id v18;

  v18 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setProperties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "containsObject:", CFSTR("automaticSoftwareUpdateEnabled")) & 1) != 0)
  {
    v9 = objc_msgSend(v18, "isAutomaticSoftwareUpdateEnabled");
    objc_msgSend(v5, "automaticSoftwareUpdateEnabled");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "BOOLValue");

    if (v9 != v11)
    {
      objc_msgSend(v5, "automaticSoftwareUpdateEnabled");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setAutomaticSoftwareUpdateEnabled:", objc_msgSend(v12, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  else
  {

  }
  objc_msgSend(v5, "setProperties");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v13, "containsObject:", CFSTR("automaticThirdPartyAccessorySoftwareUpdateEnabled")) & 1) != 0)
  {
    v14 = objc_msgSend(v18, "isAutomaticThirdPartyAccessorySoftwareUpdateEnabled");
    objc_msgSend(v5, "automaticThirdPartyAccessorySoftwareUpdateEnabled");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "BOOLValue");

    if (v14 != v16)
    {
      objc_msgSend(v5, "automaticThirdPartyAccessorySoftwareUpdateEnabled");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setAutomaticThirdPartyAccessorySoftwareUpdateEnabled:", objc_msgSend(v17, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  else
  {

  }
  objc_msgSend(v6, "respondWithPayload:", 0);

}

void __transactionHomeMediaSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;

  v29 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v6, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setProperties");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "containsObject:", CFSTR("minimumMediaUserPrivilege")) & 1) != 0)
  {
    v9 = objc_msgSend(v29, "minimumMediaUserPrivilege");
    objc_msgSend(v5, "minimumMediaUserPrivilege");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "unsignedIntegerValue");

    if (v9 != v11)
    {
      objc_msgSend(v5, "minimumMediaUserPrivilege");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "setMinimumMediaUserPrivilege:", objc_msgSend(v12, "unsignedIntegerValue"));

      objc_msgSend(v7, "markChanged");
      v13 = 1;
      goto LABEL_6;
    }
  }
  else
  {

  }
  v13 = 0;
LABEL_6:
  objc_msgSend(v5, "setProperties");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v14, "containsObject:", CFSTR("mediaPeerToPeerEnabled")) & 1) != 0)
  {
    v15 = objc_msgSend(v29, "isMediaPeerToPeerEnabled");
    objc_msgSend(v5, "mediaPeerToPeerEnabled");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "BOOLValue");

    if (v15 != v17)
    {
      objc_msgSend(v5, "mediaPeerToPeerEnabled");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "setMediaPeerToPeerEnabled:", objc_msgSend(v18, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
      v13 = 1;
    }
  }
  else
  {

  }
  objc_msgSend(v5, "setProperties");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v19, "containsObject:", CFSTR("mediaPassword")))
  {

LABEL_14:
    if (!v13)
      goto LABEL_17;
    goto LABEL_15;
  }
  objc_msgSend(v29, "mediaPassword");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "mediaPassword");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = HMFEqualObjects();

  if ((v22 & 1) != 0)
    goto LABEL_14;
  objc_msgSend(v5, "mediaPassword");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setMediaPassword:", v23);

  objc_msgSend(v7, "markChanged");
LABEL_15:
  if (objc_msgSend(v7, "source") == 1)
  {
    v24 = objc_msgSend(v29, "isMediaPeerToPeerEnabled");
    v25 = objc_msgSend(v29, "minimumMediaUserPrivilege");
    objc_msgSend(v29, "mediaPassword");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDWHAAccessControlEvent eventWithP2PEnabled:privilegeLevel:passwordSet:](HMDWHAAccessControlEvent, "eventWithP2PEnabled:privilegeLevel:passwordSet:", v24, v25, v26 != 0);
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v29, "logEventSubmitter");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "submitLogEvent:", v27);

  }
LABEL_17:
  objc_msgSend(v6, "respondWithPayload:", 0);

}

void __updateAccountHandleForCurrentUser(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "primaryHandle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v3, "currentUser");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "accountHandle");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      if ((HMFEqualObjects() & 1) == 0)
      {
        v8 = (void *)objc_msgSend(v6, "newModelWithChangeType:", 2);
        objc_msgSend(v8, "setAccountHandle:", v5);
        +[HMDAccountHandleFormatter defaultFormatter](HMDAccountHandleFormatter, "defaultFormatter");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "stringForObjectValue:", v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v8, "setUserID:", v10);
        objc_msgSend(v3, "backingStore");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "transaction:options:", CFSTR("HMDAppleAccountManagerAccountUpdatedNotification"), v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v13, "add:withMessage:", v8, 0);
        v22[0] = MEMORY[0x24BDAC760];
        v22[1] = 3221225472;
        v22[2] = ____updateAccountHandleForCurrentUser_block_invoke;
        v22[3] = &unk_24E79BD80;
        v23 = v3;
        objc_msgSend(v13, "run:", v22);

      }
    }
    else
    {
      v18 = (void *)MEMORY[0x227676638]();
      v19 = v3;
      HMFGetOSLogHandle();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v25 = v21;
        _os_log_impl(&dword_2218F0000, v20, OS_LOG_TYPE_ERROR, "%{public}@Home does not currently have a user account. Not attempting to update handle.", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v18);
    }

  }
  else
  {
    v14 = (void *)MEMORY[0x227676638]();
    v15 = v3;
    HMFGetOSLogHandle();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v25 = v17;
      _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_INFO, "%{public}@Cannot update home current user account handle because primary handle cannot be determined", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v14);
  }

}

void ____updateAccountHandleForCurrentUser_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x227676638]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543362;
      v11 = v7;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to change account handle for current user", (uint8_t *)&v10, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
  }
  else if (objc_msgSend(*(id *)(a1 + 32), "isOwnerUser")
         && objc_msgSend(*(id *)(a1 + 32), "isCurrentDevicePrimaryResident"))
  {
    objc_msgSend(*(id *)(a1 + 32), "homeManager");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "homeOwnerCloudShareManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "updateSharedOwnerAccountHandleForHome:", *(_QWORD *)(a1 + 32));

  }
}

void sub_221B70B50(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

id __decodeAndVerifyCurrentUser(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  int v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "uuidForKey:", CFSTR("kUserUUIDKey"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v3, "currentUser");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "uuid");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "hmf_isEqualToUUID:", v5);

    if ((v8 & 1) != 0)
    {
      v9 = v6;
    }
    else
    {
      v11 = (void *)MEMORY[0x227676638]();
      v12 = v3;
      HMFGetOSLogHandle();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 138543618;
        v18 = v14;
        v19 = 2112;
        v20 = v5;
        _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_ERROR, "%{public}@Specified user identifier does not match current user: %@", (uint8_t *)&v17, 0x16u);

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 48);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "respondWithError:", v15);

      v9 = 0;
    }

  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 27);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "respondWithError:", v10);

    v9 = 0;
  }

  return v9;
}

id HMDSecureAccessErrorCodeForMessage(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  int v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = a1;
  if ((objc_msgSend(v3, "isEntitledForSPIAccess") & 1) != 0)
  {
    v4 = 2003;
  }
  else
  {
    v5 = objc_msgSend(v3, "isInternal");
    if (a2 == 1)
      v6 = 1;
    else
      v6 = v5;
    if (v6)
      v4 = 2003;
    else
      v4 = 10;
  }
  v7 = (void *)MEMORY[0x24BDD1540];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
    v8 = 82;
  else
    v8 = v4;
  objc_msgSend(v7, "hmErrorWithCode:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

void sub_221B76C6C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_221B7787C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  id *v33;

  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B78964(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221B78EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;

  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __authenticateAcceptedOutgoingInvitation(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  void *v31;
  id v32;
  NSObject *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  void (**v39)(id, _QWORD);
  id obj;
  void *v41;
  void *v42;
  id val;
  _QWORD block[4];
  id v45;
  void (**v46)(id, _QWORD);
  _BYTE *v47;
  _QWORD v48[4];
  NSObject *v49;
  uint64_t v50;
  id v51;
  _BYTE *v52;
  id v53;
  id location;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint8_t v59[128];
  _BYTE buf[24];
  uint64_t (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t);
  id v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  val = a1;
  v9 = a2;
  v37 = a3;
  v36 = a4;
  v39 = a5;
  objc_msgSend(v9, "user");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "accountHandle");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (v38)
  {
    +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "accountForHandle:", v37);
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", 2);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v36 || (objc_msgSend(v37, "isEqual:", v36) & 1) != 0 || (objc_msgSend(v38, "isEqual:", v36) & 1) != 0)
    {
      v12 = (void *)MEMORY[0x227676638]();
      v13 = val;
      HMFGetOSLogHandle();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v15;
        _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_INFO, "%{public}@Preferred handle by the shared user is the same as the handle the invitation was sent to or the response was received from", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v12);
    }
    else
    {
      v31 = (void *)MEMORY[0x227676638]();
      v32 = val;
      HMFGetOSLogHandle();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        *(_QWORD *)&buf[4] = v34;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v36;
        _os_log_impl(&dword_2218F0000, v33, OS_LOG_TYPE_INFO, "%{public}@Authenticating the preferred handle: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v31);
      objc_msgSend(v35, "addObject:", v36);
    }
    if (objc_msgSend(v35, "hmf_isEmpty"))
    {
      v16 = (void *)MEMORY[0x227676638]();
      v17 = val;
      HMFGetOSLogHandle();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v19;
        _os_log_impl(&dword_2218F0000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@Authenticated invitation without resolving", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v16);
      if (v39)
        v39[2](v39, 0);
    }
    else
    {
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v61 = __Block_byref_object_copy__14094;
      v62 = __Block_byref_object_dispose__14095;
      v63 = 0;
      v24 = dispatch_group_create();
      v55 = 0u;
      v56 = 0u;
      v57 = 0u;
      v58 = 0u;
      obj = v35;
      v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v59, 16);
      if (v25)
      {
        v26 = *(_QWORD *)v56;
        do
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v56 != v26)
              objc_enumerationMutation(obj);
            v28 = *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * i);
            dispatch_group_enter(v24);
            objc_initWeak(&location, val);
            +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v48[0] = MEMORY[0x24BDAC760];
            v48[1] = 3221225472;
            v48[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke;
            v48[3] = &unk_24E777228;
            objc_copyWeak(&v53, &location);
            v49 = v24;
            v50 = v28;
            v52 = buf;
            v51 = v41;
            objc_msgSend(v29, "_resolveAccountForHandle:completionHandler:", v28, v48);

            objc_destroyWeak(&v53);
            objc_destroyWeak(&location);
          }
          v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v59, 16);
        }
        while (v25);
      }

      objc_msgSend(val, "workQueue");
      v30 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_4446;
      block[3] = &unk_24E792600;
      v47 = buf;
      v45 = val;
      v46 = v39;
      dispatch_group_notify(v24, v30, block);

      _Block_object_dispose(buf, 8);
    }

  }
  else
  {
    v20 = (void *)MEMORY[0x227676638]();
    v21 = val;
    HMFGetOSLogHandle();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v23;
      _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_ERROR, "%{public}@Invalid invitee destination", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v20);
    if (v39)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 3);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(id, void *))v39)[2](v39, v42);

    }
  }

}

void sub_221B7BD0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  uint64_t v34;

  _Block_object_dispose((const void *)(v34 - 176), 8);
  _Unwind_Resume(a1);
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  _QWORD block[4];
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "workQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_2;
    block[3] = &unk_24E794C60;
    v13 = v6;
    v10 = v8;
    v11 = *(_QWORD *)(a1 + 40);
    v14 = v10;
    v15 = v11;
    v19 = *(_QWORD *)(a1 + 56);
    v16 = v5;
    v17 = *(id *)(a1 + 48);
    v18 = *(id *)(a1 + 32);
    dispatch_async(v9, block);

  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }

}

uint64_t ____authenticateAcceptedOutgoingInvitation_block_invoke_4446(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  const char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t result;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v3 = (void *)MEMORY[0x227676638]();
  v4 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v2)
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      goto LABEL_7;
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543362;
    v13 = v7;
    v8 = "%{public}@Failed to authenticate invitation";
    v9 = v6;
    v10 = OS_LOG_TYPE_ERROR;
  }
  else
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      goto LABEL_7;
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543362;
    v13 = v7;
    v8 = "%{public}@Authenticated invitation after resolving";
    v9 = v6;
    v10 = OS_LOG_TYPE_DEFAULT;
  }
  _os_log_impl(&dword_2218F0000, v9, v10, v8, (uint8_t *)&v12, 0xCu);

LABEL_7:
  objc_autoreleasePoolPop(v3);
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  return result;
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke_2(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  char v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  __int16 v28;
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 32))
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = *(id *)(a1 + 40);
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 48), "shortDescription");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
      v24 = 138543874;
      v25 = v5;
      v26 = 2112;
      v27 = v6;
      v28 = 2112;
      v29 = v7;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to resolve handle, %@, with error: %@", (uint8_t *)&v24, 0x20u);

    }
    objc_autoreleasePoolPop(v2);
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v10 = *(_QWORD *)(v8 + 40);
    v9 = (id *)(v8 + 40);
    if (!v10)
      objc_storeStrong(v9, *(id *)(a1 + 32));
  }
  else
  {
    v11 = objc_msgSend(*(id *)(a1 + 56), "isEqual:", *(_QWORD *)(a1 + 64));
    v12 = (void *)MEMORY[0x227676638]();
    v13 = *(id *)(a1 + 40);
    HMFGetOSLogHandle();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if ((v11 & 1) != 0)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 48), "shortDescription");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 138543618;
        v25 = v16;
        v26 = 2112;
        v27 = v17;
        _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_INFO, "%{public}@Authenticated handle: %@", (uint8_t *)&v24, 0x16u);

      }
      objc_autoreleasePoolPop(v12);
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 64), "shortDescription");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 56), "shortDescription");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = 138543874;
        v25 = v18;
        v26 = 2112;
        v27 = v19;
        v28 = 2112;
        v29 = v20;
        _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_ERROR, "%{public}@Invitation response received from account, %@, expected: %@", (uint8_t *)&v24, 0x20u);

      }
      objc_autoreleasePoolPop(v12);
      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40))
      {
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 55);
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
        v23 = *(void **)(v22 + 40);
        *(_QWORD *)(v22 + 40) = v21;

      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
}

void sub_221B7CDC4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221B7E880(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221B818B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_221B8377C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B853C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  _Block_object_dispose(&a42, 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B856E4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B8954C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B89834(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __handleAccessoryReachabilityRegistration(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void (**v19)(_QWORD, _QWORD, _QWORD);
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  NSObject *v42;
  void *v43;
  uint64_t j;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t k;
  void *v52;
  void *v53;
  int v54;
  uint64_t v55;
  void *v56;
  id v57;
  NSObject *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  NSObject *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void (**v79)(_QWORD, _QWORD, _QWORD);
  void *v80;
  id v81;
  NSObject *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  void *v88;
  void *v89;
  void *v90;
  void (**v91)(_QWORD, _QWORD, _QWORD);
  void *v92;
  id v93;
  void *v94;
  void *v95;
  id obj;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _QWORD v111[2];
  _QWORD v112[2];
  void *v113;
  void *v114;
  _BYTE v115[128];
  _BYTE v116[128];
  uint8_t v117[128];
  uint8_t buf[4];
  void *v119;
  __int16 v120;
  id v121;
  __int16 v122;
  void *v123;
  uint64_t v124;

  v124 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  if (!objc_msgSend(v6, "isRemote") || (objc_msgSend(v6, "isSecureRemote") & 1) != 0)
  {
    objc_msgSend(v6, "stringForKey:", CFSTR("kHomeUUID"));
    v7 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "UUIDString");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v91 = (void (**)(_QWORD, _QWORD, _QWORD))v7;
    LOBYTE(v7) = objc_msgSend((id)v7, "isEqualToString:", v9);

    if ((v7 & 1) != 0)
    {
      v92 = 0;
    }
    else
    {
      v10 = (void *)MEMORY[0x227676638]();
      v11 = v5;
      HMFGetOSLogHandle();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v13 = v5;
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "uuid");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "UUIDString");
        v16 = v6;
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v119 = v14;
        v120 = 2112;
        v121 = v91;
        v122 = 2112;
        v123 = v17;
        _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_INFO, "%{public}@Home does not match, received: %@, current: %@", buf, 0x20u);

        v6 = v16;
        v5 = v13;
      }

      objc_autoreleasePoolPop(v10);
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", *MEMORY[0x24BDD5BD8], 2, 0);
      v92 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v6, "responseHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (v18)
    {
      objc_msgSend(v6, "responseHandler");
      v19 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, void *, _QWORD))v19)[2](v19, v92, 0);

    }
    v20 = (void *)MEMORY[0x227676638]();
    v21 = v5;
    HMFGetOSLogHandle();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v119 = v23;
      v120 = 2112;
      v121 = v21;
      _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_INFO, "%{public}@Registering for remote reachability for home: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v20);
    objc_msgSend(v6, "remoteSourceID");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDDevice deviceWithDestination:](HMDDevice, "deviceWithDestination:", v24);
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = (void *)v25;
    if (a3)
    {
      v89 = v24;
      v90 = (void *)v25;
      v86 = v6;
      v87 = v5;
      objc_msgSend(v6, "messagePayload");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v27, "hmf_arrayForKey:", CFSTR("kAccessoriesListKey"));
      v28 = (id)objc_claimAutoreleasedReturnValue();

      if (!v28)
      {
        v29 = (void *)MEMORY[0x24BDBCEB8];
        objc_msgSend(v21, "accessories");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "arrayWithCapacity:", objc_msgSend(v30, "count"));
        v31 = (void *)objc_claimAutoreleasedReturnValue();

        v109 = 0u;
        v110 = 0u;
        v107 = 0u;
        v108 = 0u;
        objc_msgSend(v21, "accessories");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = (void *)objc_msgSend(v32, "copy");

        v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v107, v117, 16);
        if (v34)
        {
          v35 = v34;
          v36 = *(_QWORD *)v108;
          do
          {
            for (i = 0; i != v35; ++i)
            {
              if (*(_QWORD *)v108 != v36)
                objc_enumerationMutation(v33);
              objc_msgSend(*(id *)(*((_QWORD *)&v107 + 1) + 8 * i), "uuid");
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "UUIDString");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "addObject:", v39);

            }
            v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v107, v117, 16);
          }
          while (v35);
        }

        v28 = v31;
        v40 = (void *)MEMORY[0x227676638]();
        v41 = v21;
        HMFGetOSLogHandle();
        v42 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v119 = v43;
          v120 = 2112;
          v121 = v28;
          _os_log_impl(&dword_2218F0000, v42, OS_LOG_TYPE_INFO, "%{public}@Registering for reachability notification for all accessories: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v40);

      }
      objc_msgSend(v21, "homeManager");
      v88 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v28, "count"));
      v95 = (void *)objc_claimAutoreleasedReturnValue();
      v103 = 0u;
      v104 = 0u;
      v105 = 0u;
      v106 = 0u;
      obj = v28;
      v98 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v103, v116, 16);
      if (v98)
      {
        v97 = *(_QWORD *)v104;
        v93 = v21;
        do
        {
          for (j = 0; j != v98; ++j)
          {
            if (*(_QWORD *)v104 != v97)
              objc_enumerationMutation(obj);
            v45 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", *(_QWORD *)(*((_QWORD *)&v103 + 1) + 8 * j));
            if (v45)
            {
              v101 = 0u;
              v102 = 0u;
              v99 = 0u;
              v100 = 0u;
              objc_msgSend(v21, "accessories");
              v46 = (void *)objc_claimAutoreleasedReturnValue();
              v47 = (void *)objc_msgSend(v46, "copy");

              v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v99, v115, 16);
              if (v48)
              {
                v49 = v48;
                v50 = *(_QWORD *)v100;
                while (2)
                {
                  for (k = 0; k != v49; ++k)
                  {
                    if (*(_QWORD *)v100 != v50)
                      objc_enumerationMutation(v47);
                    v52 = *(void **)(*((_QWORD *)&v99 + 1) + 8 * k);
                    objc_msgSend(v52, "uuid");
                    v53 = (void *)objc_claimAutoreleasedReturnValue();
                    v54 = objc_msgSend(v53, "isEqual:", v45);

                    if (v54)
                    {
                      v55 = objc_msgSend(v52, "isReachable");
                      v56 = (void *)MEMORY[0x227676638]();
                      v57 = v21;
                      HMFGetOSLogHandle();
                      v58 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
                      {
                        HMFGetLogIdentifier();
                        v94 = v56;
                        v59 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v52, "uuid");
                        v60 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v60, "UUIDString");
                        v61 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138543874;
                        v119 = v59;
                        v120 = 2112;
                        v121 = v61;
                        v122 = 1024;
                        LODWORD(v123) = v55;
                        _os_log_impl(&dword_2218F0000, v58, OS_LOG_TYPE_INFO, "%{public}@Updating reachability for accessory: %@ to: %d", buf, 0x1Cu);

                        v21 = v93;
                        v56 = v94;
                      }

                      objc_autoreleasePoolPop(v56);
                      objc_msgSend(v52, "uuid");
                      v62 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v62, "UUIDString");
                      v63 = (void *)objc_claimAutoreleasedReturnValue();
                      v113 = v63;
                      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", v55);
                      v64 = (void *)objc_claimAutoreleasedReturnValue();
                      v114 = v64;
                      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v114, &v113, 1);
                      v65 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v95, "addObject:", v65);

                      goto LABEL_42;
                    }
                  }
                  v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v99, v115, 16);
                  if (v49)
                    continue;
                  break;
                }
              }
LABEL_42:

            }
          }
          v98 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v103, v116, 16);
        }
        while (v98);
      }

      v6 = v86;
      v24 = v89;
      if (v89 && v90)
      {
        v66 = (void *)MEMORY[0x227676638](objc_msgSend(v21, "_registerDeviceForReachabilityNotification:accessoryList:", v90, obj));
        v67 = v21;
        HMFGetOSLogHandle();
        v68 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v119 = v69;
          v120 = 2112;
          v121 = v89;
          _os_log_impl(&dword_2218F0000, v68, OS_LOG_TYPE_INFO, "%{public}@Sending current reachability to destination:%@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v66);
        v111[0] = CFSTR("kAccessoriesListKey");
        v70 = (void *)objc_msgSend(v95, "copy");
        v111[1] = CFSTR("kHomeUUID");
        v112[0] = v70;
        objc_msgSend(v67, "uuid");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v71, "UUIDString");
        v72 = (void *)objc_claimAutoreleasedReturnValue();
        v112[1] = v72;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v112, v111, 2);
        v73 = (void *)objc_claimAutoreleasedReturnValue();

        +[HMDRemoteMessage messageWithName:identifier:messagePayload:](HMDRemoteMessage, "messageWithName:identifier:messagePayload:", CFSTR("kRemoteReachabilityChangedNotificationKey"), 0, v73);
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v88, "messageDispatcher");
        v75 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v67, "uuid");
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v90, "remoteDestinationString");
        v77 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v67, "workQueue");
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v75, "sendSecureMessage:target:userID:destination:responseQueue:responseHandler:", v74, v76, 0, v77, v78, 0);

        v24 = v89;
      }

      v5 = v87;
      v26 = v90;
    }
    else
    {
      objc_msgSend(v21, "_deregisterDeviceForReachabilityNotification:", v25);
    }

    v79 = v91;
    goto LABEL_53;
  }
  v80 = (void *)MEMORY[0x227676638]();
  v81 = v5;
  HMFGetOSLogHandle();
  v82 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v119 = v83;
    v120 = 2112;
    v121 = v6;
    _os_log_impl(&dword_2218F0000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Message not supported: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v80);
  objc_msgSend(v6, "responseHandler");
  v84 = (void *)objc_claimAutoreleasedReturnValue();

  if (v84)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 17);
    v85 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "responseHandler");
    v79 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    v92 = (void *)v85;
    v79[2](v79, v85, 0);
LABEL_53:

  }
}

void sub_221B8A69C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t ____disassociateAccessoryIfSupported_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id __createAccessoryBrowserAddAccessoryCompletionHandler(id val, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id location;

  objc_initWeak(&location, val);
  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke;
  v19[3] = &unk_24E777200;
  v20 = v9;
  v21 = v11;
  v22 = v12;
  v13 = v12;
  v14 = v11;
  v15 = v9;
  objc_copyWeak(&v24, &location);
  v23 = v10;
  v16 = v10;
  v17 = _Block_copy(v19);

  objc_destroyWeak(&v24);
  objc_destroyWeak(&location);
  return v17;
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke(id *a1, void *a2, void *a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7, void *a8)
{
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id WeakRetained;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  id v32;
  NSObject *v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  NSObject *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  void (**v56)(_QWORD, _QWORD, _QWORD);
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  void *context;
  void *contexta;
  void *contextb;
  id v68;
  id v70;
  _QWORD block[4];
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  uint8_t buf[4];
  void *v82;
  __int16 v83;
  id v84;
  __int16 v85;
  void *v86;
  __int16 v87;
  void *v88;
  __int16 v89;
  id v90;
  uint64_t v91;

  v91 = *MEMORY[0x24BDAC8D0];
  v12 = a2;
  v70 = a3;
  v13 = a7;
  v68 = a8;
  objc_msgSend(a1[4], "accessoryUUID");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v70 && !v14)
    objc_msgSend(a1[4], "setAccessoryUUID:", v70);
  objc_msgSend(a1[5], "pairedToServer:certificationStatus:addedViaWAC:legacyWAC:", v12, a4, a5, a6);
  objc_msgSend(a1[5], "setAuthenticationMethod:", objc_msgSend(v12, "authMethod"));
  v15 = objc_alloc(MEMORY[0x24BE3F138]);
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%s(), %s:%ld"), "HMDAccessoryBrowserAddAccessoryCompletionHandler __createAccessoryBrowserAddAccessoryCompletionHandler(HMDHome *__weak, HMSetupAccessoryDescription *__strong, HMDUnpairedHAPAccessoryConfiguration *__strong, HMDAccessoryPairingEvent *__strong, HMFMessage *__strong)_block_invoke", "/Library/Caches/com.apple.xbs/Sources/HomeKit_executables/Sources/homed/Home/HMDHome.m", 11201);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1[6], "activity");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = (id)objc_msgSend(v15, "initWithName:parent:", v16, v17);

  WeakRetained = objc_loadWeakRetained(a1 + 8);
  v19 = WeakRetained;
  if (!v13 && WeakRetained)
  {
    objc_msgSend(WeakRetained, "workQueue");
    v20 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4429;
    block[3] = &unk_24E7771D8;
    v72 = v80;
    v73 = v19;
    v74 = a1[4];
    v75 = a1[7];
    v76 = a1[5];
    v77 = v12;
    v79 = a4;
    v78 = a1[6];
    dispatch_async(v20, block);

    v21 = 0;
    v22 = v72;
    goto LABEL_37;
  }
  if (!WeakRetained)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 2);
    v23 = objc_claimAutoreleasedReturnValue();

    v13 = (id)v23;
  }
  objc_msgSend(a1[5], "vendorDetailsForReporting");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v13;
  v21 = v24;
  v25 = v24;
  if (v19)
  {
    v25 = v24;
    if (objc_msgSend(v24, "code") == 2010)
    {
      objc_msgSend(v19, "threadNetworkID");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      if (v26)
        v27 = 2009;
      else
        v27 = 2010;
      objc_msgSend(MEMORY[0x24BDD1540], "hmPrivateErrorWithCode:", v27);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  v28 = (void *)MEMORY[0x227676638]();
  v29 = v19;
  HMFGetOSLogHandle();
  v30 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544386;
    v82 = v31;
    v83 = 2112;
    v84 = v70;
    v85 = 2112;
    v86 = v21;
    v87 = 2112;
    v88 = v25;
    v89 = 2112;
    v90 = v68;
    _os_log_impl(&dword_2218F0000, v30, OS_LOG_TYPE_INFO, "%{public}@Add accessory completion handler for accessory uuid %@ error %@ mapped error %@ context %@", buf, 0x34u);

  }
  objc_autoreleasePoolPop(v28);
  if (objc_msgSend(a1[5], "isMatterAccessory") && objc_msgSend(a1[5], "isAddOperation"))
  {
    if (!v68)
    {
      context = (void *)MEMORY[0x227676638]();
      v32 = v29;
      HMFGetOSLogHandle();
      v33 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v82 = v34;
        _os_log_impl(&dword_2218F0000, v33, OS_LOG_TYPE_ERROR, "%{public}@Matter pairing end context is nil", buf, 0xCu);

      }
      objc_autoreleasePoolPop(context);
    }
    if (!objc_msgSend(v68, "isCancelled"))
    {
      notifyMatterMetricPairingEnded(v29, v68);
      goto LABEL_29;
    }
    v35 = v29;
    v62 = v68;
    contexta = (void *)MEMORY[0x227676638]();
    v36 = v35;
    HMFGetOSLogHandle();
    v37 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v82 = v38;
      v83 = 2112;
      v84 = v62;
      _os_log_impl(&dword_2218F0000, v37, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing cancelled %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(contexta);
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    contextb = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", MEMORY[0x24BDBD1C8], CFSTR("HMDMatterAccessoryPairingSubmitKey"));
    objc_msgSend(v62, "error");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", v39, CFSTR("HMDMatterAccessoryPairingFailureErrorKey"));

    objc_msgSend(v62, "sourceErrorDomain");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(contextb, "setObject:forKeyedSubscript:", v40, CFSTR("HMDMatterAccessoryPairingSourceErrorDomain"));

    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = (void *)objc_msgSend(contextb, "copy");
    objc_msgSend(v41, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v42);

  }
  else
  {
    objc_msgSend(v29, "logEventSubmitter");
    v36 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "submitLogEvent:error:", a1[5], v25);
  }

LABEL_29:
  v43 = (void *)MEMORY[0x227676638]();
  v44 = v29;
  HMFGetOSLogHandle();
  v45 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = a1[4];
    *(_DWORD *)buf = 138543874;
    v82 = v46;
    v83 = 2112;
    v84 = v47;
    v85 = 2112;
    v86 = v25;
    _os_log_impl(&dword_2218F0000, v45, OS_LOG_TYPE_DEBUG, "%{public}@Failed to add accessory %@ with error: %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v43);
  v48 = v80;
  objc_msgSend(v12, "category");

  objc_msgSend(v22, "model");
  objc_msgSend(v22, "manufacturer");

  objc_msgSend(v22, "firmwareVersion");
  objc_msgSend(a1[5], "linkType");
  v49 = (id)HAPLinkTypeDescription();
  v50 = (id)HMFBooleanToString();
  v51 = (id)HMFBooleanToString();
  v52 = (id)objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a4);
  objc_msgSend(v25, "domain");

  objc_msgSend(v25, "code");
  objc_msgSend(a1[5], "isThreadAccessory");
  v53 = (id)HMFBooleanToString();
  objc_msgSend(a1[5], "accessorySupportsWoL");
  v54 = (id)HMFBooleanToString();

  objc_msgSend(a1[6], "responseHandler");
  v55 = (void *)objc_claimAutoreleasedReturnValue();

  if (v55)
  {
    objc_msgSend(a1[6], "responseHandler");
    v56 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, void *, _QWORD))v56)[2](v56, v25, 0);

  }
  if (v19)
  {
    objc_msgSend(v44, "_removePendingAccessoryAdd:", a1[4]);
    objc_msgSend(v44, "accessoryBrowser");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v57, "removePairingInformationForAccessoryServer:", v12);

    objc_msgSend(a1[7], "networkCredential");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v58, "clientIdentifier");
    v59 = (void *)objc_claimAutoreleasedReturnValue();

    if (v59)
    {
      objc_msgSend(a1[7], "networkCredential");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v60, "clientIdentifier");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "_removeClientConfigurationWithIdentifier:", v61);

    }
  }

LABEL_37:
  __HMFActivityScopeLeave();

}

void sub_221B8E150(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4429(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "begin");
  v2 = *(id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "_accessoryPairingDidComplete:configuration:pairingEvent:accessoryServer:certificationStatus:requestMessage:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
  __HMFActivityScopeLeave();

}

void sub_221B8E1F4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

id HMDHomeCreateAddAccessoryProgressHandler(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD aBlock[4];
  id v14;
  id v15;
  id v16;
  id v17;
  id location;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_initWeak(&location, v5);
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 3221225472;
  aBlock[2] = __HMDHomeCreateAddAccessoryProgressHandler_block_invoke;
  aBlock[3] = &unk_24E7761A8;
  v14 = v5;
  v8 = v5;
  objc_copyWeak(&v17, &location);
  v15 = v6;
  v16 = v7;
  v9 = v7;
  v10 = v6;
  v11 = _Block_copy(aBlock);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
  return v11;
}

void sub_221B8E690(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221B8F678(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221B8FA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_221B906A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B928B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B92E8C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

uint64_t _mediaSystemsContainsAccessory(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = ___mediaSystemsContainsAccessory_block_invoke;
  v7[3] = &unk_24E77E3B8;
  v8 = v3;
  v4 = v3;
  v5 = objc_msgSend(a1, "na_any:", v7);

  return v5;
}

uint64_t ___mediaSystemsContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  return _mediaSystemContainsAccessory(a2, *(void **)(a1 + 32));
}

uint64_t _mediaSystemContainsAccessory(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD v8[4];
  id v9;

  v3 = a2;
  objc_msgSend(a1, "components");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = ___mediaSystemContainsAccessory_block_invoke;
  v8[3] = &unk_24E7771B0;
  v9 = v3;
  v5 = v3;
  v6 = objc_msgSend(v4, "na_any:", v8);

  return v6;
}

uint64_t ___mediaSystemContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  objc_msgSend(a2, "accessory");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "uuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "uuid");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "hmf_isEqualToUUID:", v5);

  return v6;
}

void sub_221B95F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221B9F778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B9F888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B9FBAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B9FCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B9FDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221B9FEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __notifyRegisteredIdentityRemoved(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  char isKindOfClass;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 138543618;
      v25 = v9;
      v26 = 2112;
      v27 = v5;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of removed identity: %@", (uint8_t *)&v24, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionaryWithCapacity:", 3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identity");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("HMDIdentityNotificationKey"));

    v12 = v5;
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v14 = v12;
    else
      v14 = 0;
    v15 = v14;

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(v12, "device");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, CFSTR("HMDDeviceNotificationKey"));

    }
    v17 = v12;
    objc_opt_class();
    v18 = objc_opt_isKindOfClass();
    if ((v18 & 1) != 0)
      v19 = v17;
    else
      v19 = 0;
    v20 = v19;

    if ((v18 & 1) != 0)
    {
      objc_msgSend(v17, "account");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, CFSTR("HMDAccountNotificationKey"));

    }
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v22, "postNotificationName:object:userInfo:", CFSTR("HMDIdentityRegistryRemovedIdentity"), v7, v23);

  }
}

void __removeRegisteredObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  if (v8 && v5 && v6)
  {
    objc_msgSend(v8, "lock");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = ____removeRegisteredObjectForRegisteredIdentity_block_invoke;
    v9[3] = &unk_24E79BBD0;
    v10 = v5;
    v11 = v6;
    v12 = v8;
    objc_msgSend(v7, "performBlock:", v9);

  }
}

void ____removeRegisteredObjectForRegisteredIdentity_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  int v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "registeredObjects");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "registeredObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hmf_isEmpty");

  if (v4)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = *(id *)(a1 + 48);
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = *(_QWORD *)(a1 + 32);
      v10 = 138543618;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing registered identity, %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 8), "removeObject:", *(_QWORD *)(a1 + 32));
    __notifyRegisteredIdentityRemoved(*(void **)(a1 + 48), *(void **)(a1 + 32));
  }
}

id __registeredIdentitiesForIdentity(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v8 = v3[1];
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v18;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v18 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * i);
          objc_msgSend(v13, "identity", (_QWORD)v17);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v14, "isEqual:", v5);

          if (v15)
            objc_msgSend(v7, "addObject:", v13);
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v10);
    }

    v6 = (void *)objc_msgSend(v7, "copy");
  }

  return v6;
}

void __notifyRegisteredIdentityAdded(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  char isKindOfClass;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 138543618;
      v25 = v9;
      v26 = 2112;
      v27 = v5;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of added identity: %@", (uint8_t *)&v24, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionaryWithCapacity:", 3);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identity");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setObject:forKeyedSubscript:", v11, CFSTR("HMDIdentityNotificationKey"));

    v12 = v5;
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v14 = v12;
    else
      v14 = 0;
    v15 = v14;

    if ((isKindOfClass & 1) != 0)
    {
      objc_msgSend(v12, "device");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v16, CFSTR("HMDDeviceNotificationKey"));

    }
    v17 = v12;
    objc_opt_class();
    v18 = objc_opt_isKindOfClass();
    if ((v18 & 1) != 0)
      v19 = v17;
    else
      v19 = 0;
    v20 = v19;

    if ((v18 & 1) != 0)
    {
      objc_msgSend(v17, "account");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "setObject:forKeyedSubscript:", v21, CFSTR("HMDAccountNotificationKey"));

    }
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (void *)objc_msgSend(v10, "copy");
    objc_msgSend(v22, "postNotificationName:object:userInfo:", CFSTR("HMDIdentityRegistryAddedIdentity"), v7, v23);

  }
}

void __registerObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(id *);
  void *v17;
  id v18;
  id v19;
  id v20;
  id from;
  id v22;
  id location;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = v7;
  if (v5 && v6 && v7)
  {
    v9 = (void *)MEMORY[0x227676638]();
    objc_msgSend(v6, "registeredObjects");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "containsObject:", v8);

    if ((v11 & 1) == 0)
    {
      objc_initWeak(&location, v5);
      objc_initWeak(&v22, v8);
      objc_initWeak(&from, v6);
      v14 = MEMORY[0x24BDAC760];
      v15 = 3221225472;
      v16 = ____registerObjectForRegisteredIdentity_block_invoke;
      v17 = &unk_24E78D6B8;
      objc_copyWeak(&v18, &location);
      objc_copyWeak(&v19, &from);
      objc_copyWeak(&v20, &v22);
      objc_msgSend(v8, "setDeallocationBlock:", &v14);
      objc_msgSend(v8, "observedObject", v14, v15, v16, v17);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12)
      {
        objc_msgSend(v6, "registeredObjects");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addObject:", v8);

      }
      else
      {
        __removeRegisteredObjectForRegisteredIdentity(v5, v6, v8);
      }
      objc_destroyWeak(&v20);
      objc_destroyWeak(&v19);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&from);
      objc_destroyWeak(&v22);
      objc_destroyWeak(&location);
    }
    objc_autoreleasePoolPop(v9);
  }

}

void sub_221BA1F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17, id a18)
{
  id *v18;
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void ____registerObjectForRegisteredIdentity_block_invoke(id *a1)
{
  id WeakRetained;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained(a1 + 4);
  v3 = objc_loadWeakRetained(a1 + 5);
  v4 = objc_loadWeakRetained(a1 + 6);
  v5 = v4;
  if (WeakRetained && v3 && v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = WeakRetained;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543618;
      v11 = v9;
      v12 = 2112;
      v13 = v3;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registered object deallocated, removing object from identity: %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    __removeRegisteredObjectForRegisteredIdentity(v7, v3, v5);
  }

}

uint64_t __Block_byref_object_copy__14933(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14934(uint64_t a1)
{

}

void sub_221BA4584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id toManyRelationship(void *a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  objectValue(a1, 2, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    v4 = v2;

  return v3;
}

id objectValue(void *a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;

  v5 = a3;
  objc_msgSend(a1, "objectAtIndexedSubscript:", a2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

void pruneArrayOfRefs(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  char v9;
  id v10;

  v10 = a1;
  v3 = a2;
  v4 = objc_msgSend(v10, "count");
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    do
    {
      objc_msgSend(v10, "objectAtIndexedSubscript:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("modelID"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v3, "containsObject:", v8);

      if ((v9 & 1) != 0)
      {
        objc_msgSend(v10, "removeObjectAtIndex:", v6);
        --v5;
      }
      else
      {
        ++v6;
      }

    }
    while (v6 < v5);
  }

}

void sub_221BAAB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BAAC04(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BAAC7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BAB5B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BAB634(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BAB6AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16490(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16491(uint64_t a1)
{

}

void sub_221BAC15C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  _Unwind_Resume(a1);
}

void sub_221BAC7DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  _Unwind_Resume(a1);
}

void sub_221BAC898(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  _Unwind_Resume(a1);
}

void sub_221BB6454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BB7B4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BB8B90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BB8DC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BB9160(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BB9CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BBB704(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBB960(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBB9F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBBA9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBBB48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBC7A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBD380(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBD65C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BBDC70(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BC1048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BC216C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18253(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18254(uint64_t a1)
{

}

void sub_221BCB6B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BCCA58(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x200], 8);
  _Unwind_Resume(a1);
}

void sub_221BCD488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&STACK[0x230], 8);
  _Unwind_Resume(a1);
}

void sub_221BCE444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id location)
{
  id *v49;

  objc_destroyWeak(v49);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BCEBB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BCFC44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221BD12A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id *location)
{
  uint64_t v27;

  objc_destroyWeak((id *)(v27 - 208));
  _Block_object_dispose((const void *)(v27 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221BD5FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id location)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&STACK[0x250], 8);
  _Unwind_Resume(a1);
}

void sub_221BD699C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x390], 8);
  _Unwind_Resume(a1);
}

void sub_221BD6FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18838(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18839(uint64_t a1)
{

}

id actionResultForAction(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;

  v1 = (objc_class *)MEMORY[0x24BE812A0];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v2, "aceId");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "setRequestActionId:", v4);
  return v3;
}

uint64_t isActivationCharacteristicType(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqual:", *MEMORY[0x24BDD5970]) & 1) != 0)
    v2 = 1;
  else
    v2 = objc_msgSend(v1, "isEqual:", *MEMORY[0x24BDD5770]);

  return v2;
}

uint64_t isOutcomeSuccess(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81C30]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81B90]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81B98]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81C20]) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81C18]);
  }

  return v2;
}

id getActivationCharacteristicFromServiceIfAny(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *i;
  void *v5;
  void *v6;
  int v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  objc_msgSend(a1, "characteristics", 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v3)
          objc_enumerationMutation(v1);
        v5 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v5, "type");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = isActivationCharacteristicType(v6);

        if (v7)
        {
          v2 = v5;
          goto LABEL_11;
        }
      }
      v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

void sub_221BD8968(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t isTemperatureAttribute(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81E90]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81D40]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81D88]) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81D48]) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE81D98]);
  }

  return v2;
}

uint64_t temperatureConversionIsNeeded(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (!v1)
  {
    if (isMetricLocale_onceToken != -1)
      dispatch_once(&isMetricLocale_onceToken, &__block_literal_global_177454);
    if (!isMetricLocale_isMetricLocale)
      goto LABEL_3;
LABEL_7:
    v3 = 0;
    goto LABEL_8;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BE82170]) & 1) == 0)
    goto LABEL_7;
LABEL_3:
  v3 = 1;
LABEL_8:

  return v3;
}

void sub_221BDB4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BDC628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19280(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19281(uint64_t a1)
{

}

void sub_221BDD0B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221BDD264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221BDD350(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BDD3C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BDD438(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BDD4D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BE0E14(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221BE1044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BE15A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_221BE168C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_221BE1768(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

__CFString *HMDUserSettingsBackingStoreControllerRunStateAsString(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 3)
  {
    v2 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown state %@"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_24E778178[a1];
  }
  return v1;
}

void sub_221BEB550(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_221BEB604(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_221BEBC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BEC424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BEC63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BECBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BECDF4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Block_object_dispose((const void *)(v3 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20751(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20752(uint64_t a1)
{

}

void sub_221BF72F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BF78C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BF79C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221BF7C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BF8510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221BF9AF4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221C00ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__22662(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__22663(uint64_t a1)
{

}

void sub_221C04CD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_221C050DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_221C06068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C07E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23012(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23013(uint64_t a1)
{

}

void sub_221C09720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23149(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23150(uint64_t a1)
{

}

void sub_221C0B3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_221C0BABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_221C0C7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C0D0D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_221C0D7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  uint64_t v29;

  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitPresenceEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventType;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitPresenceEvent__presenceEventGranularity;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221C10984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__24212(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24213(uint64_t a1)
{

}

void sub_221C154B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C1B86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C1BD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C1DA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C1DDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C1E6D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25553(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25554(uint64_t a1)
{

}

void sub_221C236A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25855(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25856(uint64_t a1)
{

}

void sub_221C27D34(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_221C27F5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_221C28000(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_lock);
  _Unwind_Resume(a1);
}

void sub_221C2C124(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C360(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C458(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C4E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C660(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C6F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2C824(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2CA24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2CB80(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2CCC8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221C2CE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  os_unfair_lock_s *v19;

  os_unfair_lock_unlock(v19);
  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_221C2D280(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__26480(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26481(uint64_t a1)
{

}

BOOL AWDHomeKitCameraSnapshotMessagingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  int *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v26 = 0;
        v27 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 4u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v20 |= (unint64_t)(v30 & 0x7F) << v26;
          if ((v30 & 0x80) == 0)
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
            goto LABEL_48;
          }
          v26 += 7;
          v24 = v27++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotResponse;
LABEL_47:
        *(_BYTE *)(a2 + *v5) = 1;
        goto LABEL_48;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
            goto LABEL_47;
          }
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            break;
          v18 += 7;
          v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
            goto LABEL_50;
          }
        }
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__receivedSnapshotRequest;
        goto LABEL_48;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_51:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v31 = 0;
    v32 = 0;
    v20 = 0;
    *(_BYTE *)(a1 + 20) |= 2u;
    while (1)
    {
      v33 = *v3;
      v34 = *(_QWORD *)(a2 + v33);
      if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
      {
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
        goto LABEL_47;
      }
      v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
      *(_QWORD *)(a2 + v33) = v34 + 1;
      v20 |= (unint64_t)(v35 & 0x7F) << v31;
      if ((v35 & 0x80) == 0)
        break;
      v31 += 7;
      v24 = v32++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
        goto LABEL_50;
      }
    }
    v25 = &OBJC_IVAR___AWDHomeKitCameraSnapshotMessaging__sentSnapshotRequest;
LABEL_48:
    if (*(_BYTE *)(a2 + *v5))
      LODWORD(v20) = 0;
LABEL_50:
    *(_DWORD *)(a1 + *v25) = v20;
    goto LABEL_51;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221C2E310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C2E7CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2E970(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2ECD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2F62C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C2FE8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C30840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDExtendedTypeDateFormatter()
{
  if (HMDExtendedTypeDateFormatter_once != -1)
    dispatch_once(&HMDExtendedTypeDateFormatter_once, &__block_literal_global_26928);
  return (id)HMDExtendedTypeDateFormatter_formatter;
}

void sub_221C32658(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraSnapshotIDSTransferReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__sentImage;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCameraSnapshotIDSTransfer__receivedImage;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221C34BB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_221C36C7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C37048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_221C37200(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C37294(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C373F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C375AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C37750(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C3795C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C37B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C37C2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C37CCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C37EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C38168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C38348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C38548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C388E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C3A1CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C3A318(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C3B214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_221C3BCB4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C3BF14(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221C3BF84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C3C9A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__27653(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__27654(uint64_t a1)
{

}

void sub_221C3FB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C410C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C41B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C459DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id HMDLocalizedStringForKey(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  v2 = (void *)MEMORY[0x227676638]();
  objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (isAppleTV())
  {
    objc_msgSend(v1, "stringByAppendingString:", CFSTR("_APPLETV"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "localizedStringForKey:value:table:", v4, CFSTR("HMDDefaultLocalizedStringValue"), CFSTR("HomeKitDaemon"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v5, "isEqualToString:", CFSTR("HMDDefaultLocalizedStringValue")) & 1) == 0)
    {

      goto LABEL_6;
    }

  }
  objc_msgSend(v3, "localizedStringForKey:value:table:", v1, &stru_24E79DB48, CFSTR("HomeKitDaemon"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_6:

  objc_autoreleasePoolPop(v2);
  return v5;
}

id HMDLocalizedStringForKeyWithCount(void *a1, uint64_t a2)
{
  const __CFString *v2;
  void *v3;
  void *v4;

  if (a2 == 1)
    v2 = CFSTR("_SINGULAR");
  else
    v2 = CFSTR("_PLURAL");
  objc_msgSend(a1, "stringByAppendingString:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  HMDLocalizedStringForKey(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_221C467E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C46D58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C46DC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C483B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_221C49FBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__28842(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28843(uint64_t a1)
{

}

void sub_221C4C3B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4C420(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4C4F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4C9C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4CC7C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221C4D26C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4DC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C4E064(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4EC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C4F0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C4F3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C4F8E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C4F9A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C50D50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C512B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C51420(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C51588(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_221C51E48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C521DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C52264(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C522E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C52348(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C523B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C5B780(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C5DFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  _Block_object_dispose(&a50, 8);
  _Unwind_Resume(a1);
}

void sub_221C5EBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  id *v43;

  objc_destroyWeak(v43);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C5EFB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose(&a50, 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C5F38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  _Block_object_dispose(&a42, 8);
  _Block_object_dispose(&a48, 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C5F6F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

uint64_t __HMDActionSetAddActionWithModel(void *a1, void *a2, void *a3, _QWORD *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  char isKindOfClass;
  void *v12;
  id v13;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  if (v7)
  {
    objc_msgSend(v8, "backedObjectWithParent:error:", v7, a4);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v12 = v10;
      else
        v12 = 0;
      v13 = v12;
      if ((isKindOfClass & 1) != 0)
      {
        objc_msgSend(v7, "_handleAddNewAction:message:", v10, v9);
      }
      else if (a4)
      {
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 22);
        *a4 = (id)objc_claimAutoreleasedReturnValue();
      }

    }
    else
    {
      isKindOfClass = 0;
    }

  }
  else if (a4)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 20);
    isKindOfClass = 0;
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

uint64_t __Block_byref_object_copy__29713(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29714(uint64_t a1)
{

}

void sub_221C625F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C65608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__30476(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__30477(uint64_t a1)
{

}

void sub_221C6771C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C6B80C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__31351(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__31352(uint64_t a1)
{

}

void sub_221C6F33C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_221C70034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C70278(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_221C704BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C707C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C71314(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221C71980(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221C71F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_221C725A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32264(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32265(uint64_t a1)
{

}

void sub_221C74578(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __parseGlobalDestination(void *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const __CFString *v24;
  uint64_t v25;

  v9 = a1;
  v10 = v9;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v11, "rangeOfString:", CFSTR("/"));
    v13 = v11;
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v11, "substringToIndex:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    if (objc_msgSend(v13, "containsString:", CFSTR("self-token:")))
    {
      v14 = (void *)objc_msgSend(v13, "mutableCopy");
      objc_msgSend(v14, "replaceOccurrencesOfString:withString:options:range:", CFSTR("self-token:"), CFSTR("token:"), 1, 0, objc_msgSend(v14, "length"));
      v15 = objc_msgSend(v14, "copy");

      v13 = (void *)v15;
    }
    if ((objc_msgSend(v13, "hasPrefix:", CFSTR("token:")) & 1) == 0)
    {
      if (a5)
      {
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing token prefix."), 0);
        v22 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
LABEL_28:

        goto LABEL_29;
      }
LABEL_27:
      v22 = 0;
      goto LABEL_28;
    }
    if (a2)
    {
      v16 = objc_alloc(MEMORY[0x24BDD1880]);
      +[_HMDDeviceHandle identifierNamespace](_HMDDeviceHandle, "identifierNamespace");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "dataUsingEncoding:", 4);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *a2 = (id)objc_msgSend(v16, "initWithNamespace:data:", v17, v18);

    }
    objc_msgSend(v13, "substringFromIndex:", objc_msgSend(CFSTR("token:"), "length"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v19, "length"))
    {
      v20 = objc_alloc(MEMORY[0x24BDBCE50]);
      objc_msgSend(v20, "hmf_initWithHexadecimalString:options:", v19, 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      if (v21)
      {
        if (a3)
          *a3 = objc_retainAutorelease(v21);

        if (a4)
        {
          +[HMDAccountHandle accountHandleForDestination:](HMDAccountHandle, "accountHandleForDestination:", v11);
          *a4 = (id)objc_claimAutoreleasedReturnValue();
        }
        v22 = 1;
        goto LABEL_28;
      }
      if (!a5)
        goto LABEL_26;
      v23 = (void *)MEMORY[0x24BDD1540];
      v24 = CFSTR("Invalid token string.");
      v25 = 3;
    }
    else
    {
      if (!a5)
      {
LABEL_26:

        goto LABEL_27;
      }
      v23 = (void *)MEMORY[0x24BDD1540];
      v24 = CFSTR("Missing token string.");
      v25 = 19;
    }
    objc_msgSend(v23, "hmErrorWithCode:description:reason:suggestion:", v25, CFSTR("Invalid destination."), v24, 0);
    *a5 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_26;
  }
  if (a5)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 20);
    v22 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v22 = 0;
  }
LABEL_29:

  return v22;
}

id __parseLocalDestination(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v3 = a1;
  v4 = v3;
  if (!v3)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 20);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_10:
      v7 = 0;
      *a2 = v9;
      goto LABEL_18;
    }
LABEL_11:
    v7 = 0;
    goto LABEL_18;
  }
  if ((objc_msgSend(v3, "hasPrefix:", CFSTR("device:")) & 1) == 0)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing local device prefix."), 0);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  objc_msgSend(v4, "substringFromIndex:", objc_msgSend(CFSTR("device:"), "length"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "length"))
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", v5);
    v7 = v6;
    if (v6)
    {
      v8 = v6;
    }
    else if (a2)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Invalid device identifier"), 0);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
    }

  }
  else if (a2)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:description:reason:suggestion:", 19, CFSTR("Invalid destination."), CFSTR("Missing device identifier."), 0);
    v7 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

LABEL_18:
  return v7;
}

__CFString *HMDCloudShareTrustManagerConfigureStateAsString(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 4)
  {
    v2 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown state %@"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_24E77A188[a1];
  }
  return v1;
}

void sub_221C846B0(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221C84B44(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221C84BD0(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

id __findModelObjectOfType(void *a1, void *a2, void *a3, void *a4, uint64_t *a5)
{
  Protocol *v9;
  id v10;
  id v11;
  id v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  Class v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  void *v32;
  void *v33;
  id v34;
  Protocol *proto;
  uint64_t v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;
  __int16 v41;
  void *v42;
  __int16 v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v36 = 0;
  if (a5)
    v13 = a5;
  else
    v13 = &v36;
  +[HMCContext currentContext](HMCContext, "currentContext");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v10)
  {
    objc_msgSend(v14, "managedObjectContext");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "existingObjectWithID:error:", v10, v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v17)
    {
      v25 = 0;
      goto LABEL_19;
    }
    v18 = (void *)objc_msgSend(v12, "mutableCopy");
    objc_msgSend(v18, "setValue:forKey:", v17, CFSTR("PARENT"));
    v19 = objc_msgSend(v18, "copy");

    v12 = (id)v19;
  }
  else
  {
    v17 = 0;
  }
  proto = v9;
  v20 = __managedObjectClassFromProtocol(v9);
  v34 = v11;
  objc_msgSend(v11, "predicateWithSubstitutionVariables:", v12);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[objc_class fetchRequest](v20, "fetchRequest");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "setPredicate:", v21);
  objc_msgSend(v15, "managedObjectContext");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "executeFetchRequest:error:", v22, v13);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v24)
  {
    v27 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromProtocol(proto);
      v33 = v27;
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v30 = *v13;
      *(_DWORD *)buf = 138544130;
      v38 = v32;
      v39 = 2112;
      v40 = v29;
      v41 = 2112;
      v42 = v21;
      v43 = 2112;
      v44 = v30;
      _os_log_impl(&dword_2218F0000, v28, OS_LOG_TYPE_ERROR, "%{public}@Fetch of models of %@.%@ failed: %@", buf, 0x2Au);

      v27 = v33;
    }

    objc_autoreleasePoolPop(v27);
    v25 = 0;
    goto LABEL_17;
  }
  if ((unint64_t)objc_msgSend(v24, "count") >= 2)
  {
    _HMFPreconditionFailure();
    goto LABEL_21;
  }
  objc_msgSend(v24, "firstObject");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  if (v25)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v26 = v25;
      goto LABEL_13;
    }
LABEL_21:
    _HMFPreconditionFailure();
  }
LABEL_13:

LABEL_17:
  v11 = v34;
  v9 = proto;
LABEL_19:

  return v25;
}

Class __managedObjectClassFromProtocol(void *a1)
{
  id v1;
  id v2;
  void *v3;
  Class v4;
  void *v5;
  NSString *v6;
  Class v7;
  Class v8;
  Class result;

  v1 = a1;
  if (__managedObjectClassFromProtocol__hmf_once_t7 != -1)
    dispatch_once(&__managedObjectClassFromProtocol__hmf_once_t7, &__block_literal_global_350);
  v2 = (id)__managedObjectClassFromProtocol__hmf_once_v8;
  os_unfair_lock_lock_with_options();
  v3 = (void *)objc_msgSend(v2, "objectForKey:", v1);
  if (v3)
  {
    v4 = v3;
LABEL_9:
    os_unfair_lock_unlock((os_unfair_lock_t)&__managedObjectClassFromProtocol_cacheLock);

    return v4;
  }
  NSStringFromProtocol((Protocol *)v1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(CFSTR("_"), "stringByAppendingString:", v5);
  v6 = (NSString *)objc_claimAutoreleasedReturnValue();

  v7 = NSClassFromString(v6);
  v8 = v7;
  if (v7
    && -[objc_class conformsToProtocol:](v7, "conformsToProtocol:", v1)
    && (-[objc_class isSubclassOfClass:](v8, "isSubclassOfClass:", objc_opt_class()) & 1) != 0)
  {
    objc_msgSend(v2, "setObject:forKey:", v8, v1);
    v4 = v8;

    goto LABEL_9;
  }
  result = (Class)_HMFPreconditionFailure();
  __break(1u);
  return result;
}

void sub_221C85438(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&__managedObjectClassFromProtocol_cacheLock);
  _Unwind_Resume(a1);
}

void ____managedObjectClassFromProtocol_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1650], "strongToStrongObjectsMapTable");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)__managedObjectClassFromProtocol__hmf_once_v8;
  __managedObjectClassFromProtocol__hmf_once_v8 = v0;

}

uint64_t AWDHomeKitHAPServiceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221C8917C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C89630(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C89CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C8A488(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221C8ABA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C8AEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__35382(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__35383(uint64_t a1)
{

}

void sub_221C8E8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C8FFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C936C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__36935(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__36936(uint64_t a1)
{

}

void __sendChangeNotifications(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t v14;

  v5 = a1;
  v6 = a2;
  +[HMDAppleAccountManager sharedManager](HMDAppleAccountManager, "sharedManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "account");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = ____sendChangeNotifications_block_invoke;
  v11[3] = &unk_24E77A5C0;
  v13 = v8;
  v14 = a3;
  v12 = v5;
  v9 = v8;
  v10 = v5;
  objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);

}

void ____sendChangeNotifications_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[4];
  id v19;
  _QWORD v20[4];
  id v21;
  const __CFString *v22;
  void *v23;
  const __CFString *v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (objc_msgSend(v3, "isObjectType:", &unk_2557E8318) && *(_QWORD *)(a1 + 48) != 2)
  {
    v4 = *(void **)(a1 + 32);
    objc_msgSend(v3, "modelID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "deviceForIdentifier:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
      logAndPostNotification(CFSTR("HMDDeviceUpdatedNotification"), v6, 0);

  }
  if (objc_msgSend(v3, "isObjectType:", &unk_25585F460))
  {
    objc_msgSend(*(id *)(a1 + 32), "accounts");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v20[0] = MEMORY[0x24BDAC760];
    v20[1] = 3221225472;
    v20[2] = ____sendChangeNotifications_block_invoke_2;
    v20[3] = &unk_24E77A570;
    v21 = v3;
    objc_msgSend(v7, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v20);

  }
  if (objc_msgSend(v3, "isObjectType:", &unk_255778C70))
  {
    objc_msgSend(v3, "modelID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "modelIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v8, "isEqual:", v9);

    if ((v10 & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 32), "accounts");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = ____sendChangeNotifications_block_invoke_4;
      v18[3] = &unk_24E77A598;
      v19 = v3;
      objc_msgSend(v11, "na_firstObjectPassingTest:", v18);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v12)
      {
LABEL_17:

        goto LABEL_18;
      }
      v13 = *(_QWORD *)(a1 + 48);
      if (v13 == 2)
      {
        objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = *(_QWORD *)(a1 + 32);
        v22 = CFSTR("HMDAccountNotificationKey");
        v23 = v12;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v23, &v22, 1);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRegistryRemovedAccountNotification"), v16, v17);

      }
      else
      {
        if (v13 != 1)
        {
LABEL_16:

          goto LABEL_17;
        }
        v14 = *(void **)(a1 + 32);
        v24 = CFSTR("HMDAccountNotificationKey");
        v25[0] = v12;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        logAndPostNotification(CFSTR("HMDAccountRegistryAddedAccountNotification"), v14, v15);
      }

      goto LABEL_16;
    }
  }
LABEL_18:

}

void ____sendChangeNotifications_block_invoke_2(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t v12;

  v6 = a2;
  objc_msgSend(v6, "handles");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = ____sendChangeNotifications_block_invoke_3;
  v9[3] = &unk_24E77A548;
  v10 = *(id *)(a1 + 32);
  v11 = v6;
  v12 = a4;
  v8 = v6;
  objc_msgSend(v7, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v9);

}

uint64_t ____sendChangeNotifications_block_invoke_4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(a2, "modelIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "modelID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "isEqual:", v4);

  return v5;
}

void ____sendChangeNotifications_block_invoke_3(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  int v8;

  objc_msgSend(a2, "modelIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "modelID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "isEqual:", v7);

  if (v8)
  {
    logAndPostNotification(CFSTR("HMDAccountHandlesUpdatedNotification"), *(void **)(a1 + 40), 0);
    **(_BYTE **)(a1 + 48) = 1;
    *a4 = 1;
  }
}

void sub_221C9685C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C97790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221C97E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDAppleAccountSettingsPostUpdatedNotification(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Notifying of updated Apple account settings", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "postNotificationName:object:", CFSTR("HMDAppleAccountSettingsUpdatedNotification"), v3);

  }
}

void sub_221C98774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221C9958C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C996AC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C99754(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221C9AE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C9B3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C9CDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221C9D00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __legacyWatchOSCategoryMap_block_invoke()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    v18 = xmmword_24E77ABD0;
    v19 = 0;
    BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    v19 = 0x2020000000;
    v0 = (id *)getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    v20 = getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    if (!getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr)
    {
      v1 = (void *)BulletinDistributorCompanionLibrary();
      v0 = (id *)dlsym(v1, "BLTBulletinContextKeyWatchLegacyMapKey");
      *(_QWORD *)(*((_QWORD *)&v18 + 1) + 24) = v0;
      getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = (uint64_t)v0;
    }
    _Block_object_dispose(&v18, 8);
    if (!v0)
      goto LABEL_13;
    v2 = *v0;
    v16 = v2;
    objc_msgSend(&unk_24E96AA78, "stringValue");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v3;
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    v19 = 0x2020000000;
    v4 = (id *)getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    v20 = getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    if (!getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr)
    {
      v5 = (void *)BulletinDistributorCompanionLibrary();
      v4 = (id *)dlsym(v5, "BLTWatchLegacyMapCategoryIDKey");
      *(_QWORD *)(*((_QWORD *)&v18 + 1) + 24) = v4;
      getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = (uint64_t)v4;
    }
    _Block_object_dispose(&v18, 8);
    if (!v4)
    {
LABEL_13:
      dlerror();
      abort_report_np();
      __break(1u);
    }
    v12 = *v4;
    v13 = MEMORY[0x24BDBD1A8];
    v6 = (void *)MEMORY[0x24BDBCE70];
    v7 = v12;
    objc_msgSend(v6, "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v8;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v9;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = v10;

  }
  else
  {
    v2 = (id)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = MEMORY[0x24BDBD1B8];
  }

}

void sub_221CA684C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t BulletinDistributorCompanionLibrary()
{
  uint64_t v0;
  void *v2;

  if (BulletinDistributorCompanionLibraryCore_frameworkLibrary)
    return BulletinDistributorCompanionLibraryCore_frameworkLibrary;
  BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = BulletinDistributorCompanionLibraryCore_frameworkLibrary;
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_221CB40D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CB57D4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221CB5F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _NCSchedulerDateWithMultiple(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v7 = a3;
  v8 = (objc_class *)MEMORY[0x24BDBCE68];
  v9 = a2;
  v10 = a1;
  v11 = objc_alloc_init(v8);
  if (v11)
  {
    v12 = objc_msgSend(v7, "era");
    if (v12 == 0x7FFFFFFFFFFFFFFFLL)
      v13 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v13 = v12 * a4;
    objc_msgSend(v11, "setEra:", v13);
    v14 = objc_msgSend(v7, "year");
    if (v14 == 0x7FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v14 * a4;
    objc_msgSend(v11, "setYear:", v15);
    v16 = objc_msgSend(v7, "month");
    if (v16 == 0x7FFFFFFFFFFFFFFFLL)
      v17 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v17 = v16 * a4;
    objc_msgSend(v11, "setMonth:", v17);
    v18 = objc_msgSend(v7, "day");
    if (v18 == 0x7FFFFFFFFFFFFFFFLL)
      v19 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v19 = v18 * a4;
    objc_msgSend(v11, "setDay:", v19);
    v20 = objc_msgSend(v7, "hour");
    if (v20 == 0x7FFFFFFFFFFFFFFFLL)
      v21 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v21 = v20 * a4;
    objc_msgSend(v11, "setHour:", v21);
    v22 = objc_msgSend(v7, "minute");
    if (v22 == 0x7FFFFFFFFFFFFFFFLL)
      v23 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v23 = v22 * a4;
    objc_msgSend(v11, "setMinute:", v23);
    v24 = objc_msgSend(v7, "second");
    if (v24 == 0x7FFFFFFFFFFFFFFFLL)
      v25 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v25 = v24 * a4;
    objc_msgSend(v11, "setSecond:", v25);
    v26 = objc_msgSend(v7, "weekday");
    if (v26 == 0x7FFFFFFFFFFFFFFFLL)
      v27 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v27 = v26 * a4;
    objc_msgSend(v11, "setWeekday:", v27);
    v28 = objc_msgSend(v7, "weekdayOrdinal");
    if (v28 == 0x7FFFFFFFFFFFFFFFLL)
      v29 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v29 = v28 * a4;
    objc_msgSend(v11, "setWeekdayOrdinal:", v29);
    v30 = objc_msgSend(v7, "quarter");
    if (v30 == 0x7FFFFFFFFFFFFFFFLL)
      v31 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v31 = v30 * a4;
    objc_msgSend(v11, "setQuarter:", v31);
    v32 = objc_msgSend(v7, "weekOfMonth");
    if (v32 == 0x7FFFFFFFFFFFFFFFLL)
      v33 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v33 = v32 * a4;
    objc_msgSend(v11, "setWeekOfMonth:", v33);
    v34 = objc_msgSend(v7, "weekOfYear");
    if (v34 == 0x7FFFFFFFFFFFFFFFLL)
      v35 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v35 = v34 * a4;
    objc_msgSend(v11, "setWeekOfYear:", v35);
    v36 = objc_msgSend(v7, "yearForWeekOfYear");
    if (v36 == 0x7FFFFFFFFFFFFFFFLL)
      v37 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v37 = v36 * a4;
    objc_msgSend(v11, "setYearForWeekOfYear:", v37);
  }
  objc_msgSend(v9, "dateByAddingComponents:toDate:options:", v11, v10, 0);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  return v38;
}

void sub_221CBD84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoChangeRegistrationsMessageReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  HMDRemoteEventRouterProtoTopic *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 3u:
        PBReaderReadString();
        v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addTopicFilterAdditions:", v17);
        goto LABEL_30;
      case 4u:
        PBReaderReadString();
        v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17)
          objc_msgSend(a1, "addTopicFilterRemovals:", v17);
        goto LABEL_30;
      case 5u:
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend(a1, "addTopicAdditions:", v17);
        goto LABEL_27;
      case 6u:
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend(a1, "addTopicRemovals:", v17);
LABEL_27:
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_31;
    }
  }
}

void sub_221CC065C(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221CC06B8(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_221CC0AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CC1938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitCharacteristicEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_29;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_31;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_29:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_31:
        *(_BYTE *)(a1 + 8) = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221CC472C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221CC48A0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221CC6044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__40597(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__40598(uint64_t a1)
{

}

__CFString *HMDAccessorySettingsAuditReasonAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 8)
    return off_24E77AFD8[a1 - 1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDMediaSystemSettingsAuditReason %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221CC9728(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CC999C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDAccessoryAllowedHostsPreviewHelperForHome);
  _Unwind_Resume(a1);
}

void sub_221CC9D54(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDAccessoryAllowedHostsPreviewHelperForHome);
  _Unwind_Resume(a1);
}

__CFString *HMDEventTriggerActivationTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E77B038[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDEventTriggerActivationType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221CCB9D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCBC2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCBD44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCBE94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCBFC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCD148(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCD868(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCDB4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCE83C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221CCEB00(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CCEF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221CCFEA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD0198(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD06E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD0B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221CD1480(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD28EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD2A40(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD3218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD3318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD3718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD39A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221CD4664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  os_unfair_lock_s *v10;

  os_unfair_lock_unlock(v10);
  _Unwind_Resume(a1);
}

void sub_221CD48D0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221CD4D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD569C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD5DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD5E60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD6324(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD6620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD6BA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD709C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD7550(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CD87D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;
  id *v11;

  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CD9128(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221CDA18C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_221CDBE54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CDBEE4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CDBF5C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CDCD90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221CDE12C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_221CE0070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CE3578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  id *v30;

  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CE3DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 168));
  _Unwind_Resume(a1);
}

void sub_221CEB7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CEC2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitSignificantTimeEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            v21 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_33:
        *(_BYTE *)(a1 + 16) = v21 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221CEEFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CEF110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221CEFC90(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221CF07B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__44358(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__44359(uint64_t a1)
{

}

void sub_221CF1298(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221CF15C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id getIDSSessionOptionsAllowedClasses()
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v4[9];

  v4[8] = *MEMORY[0x24BDAC8D0];
  v0 = (void *)MEMORY[0x24BDBCF20];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v4, 8);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_221CF67F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CF7C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CF93CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221CFB8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateRegistration(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a3;
  +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "transaction:options:", CFSTR("RegistrationModification"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v9 = v6;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v16;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v16 != v12)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v13), "modelObjectWithChangeType:version:", a2, 4, (_QWORD)v15);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "setObjectChangeType:", a2);
        objc_msgSend(v8, "add:", v14);

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v11);
  }

  objc_msgSend(v8, "run");
}

void sub_221CFD3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 208), 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__46076(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46077(uint64_t a1)
{

}

void removeDictionaryEntry(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;

  v8 = a1;
  v5 = a2;
  v6 = a3;
  objc_msgSend(v8, "objectForKeyedSubscript:", v5);
  v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7 == v6)
    objc_msgSend(v8, "removeObjectForKey:", v5);

}

id __dependencySort(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "count") > 1)
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = MEMORY[0x24BDAC760];
    while (1)
    {
      v15[0] = v5;
      v15[1] = 3221225472;
      v15[2] = ____dependencySort_block_invoke;
      v15[3] = &unk_24E77B998;
      v6 = v1;
      v16 = v6;
      v7 = v4;
      v17 = v7;
      v8 = v3;
      v18 = v8;
      objc_msgSend(v6, "enumerateKeysAndObjectsUsingBlock:", v15);
      v9 = objc_msgSend(v7, "count");
      if (v9 == objc_msgSend(v6, "count"))
        break;
      if (!objc_msgSend(v7, "count"))
      {
        v10 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v20 = v12;
          _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_ERROR, "%{public}@LOOP IN OBJECT REFERENCES", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v10);
        objc_msgSend(v6, "allValues");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObjectsFromArray:", v13);

        break;
      }
      objc_msgSend(v6, "removeObjectsForKeys:", v7);
      objc_msgSend(v7, "removeAllObjects");

    }
    v2 = (void *)objc_msgSend(v8, "copy");

  }
  else
  {
    objc_msgSend(v1, "allValues");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v2;
}

void __lookup(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  HMDBackingStoreTransactionActions *v9;
  HMDBackingStoreTransactionActions *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  _QWORD v18[4];
  id v19;
  HMDBackingStoreTransactionActions *v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v6, "count"))
  {
    objc_msgSend(v5, "lookup");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      if (!v7)
      {
        +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
        v7 = (id)objc_claimAutoreleasedReturnValue();
      }
      v9 = -[HMDBackingStoreTransactionActions initWithBackingStore:options:]([HMDBackingStoreTransactionActions alloc], "initWithBackingStore:options:", v5, v7);
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = ____lookup_block_invoke;
      v18[3] = &unk_24E77BAA8;
      v19 = v8;
      v10 = v9;
      v20 = v10;
      v11 = v5;
      v21 = v11;
      objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v18);
      -[HMDBackingStoreTransactionActions invokePostApplyActions](v10, "invokePostApplyActions");
      if (-[HMDBackingStoreTransactionActions saveToAssistant](v10, "saveToAssistant"))
      {
        objc_msgSend(v11, "homeManager");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "label");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "assistantSyncDataChanged:", v13);

      }
    }
    else
    {
      v14 = (void *)MEMORY[0x227676638]();
      v15 = v5;
      HMFGetOSLogHandle();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v23 = v17;
        _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_ERROR, "%{public}@HMDOBJECTLOOKUP IS NIL.", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v14);
    }

  }
}

void ____lookup_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = ____lookup_block_invoke_2;
  v7[3] = &unk_24E79BCC8;
  v8 = *(id *)(a1 + 48);
  v9 = v3;
  v6 = v3;
  objc_msgSend(v4, "lookUpAndApplyObjectChange:previous:result:completionHandler:", v6, 0, v5, v7);

}

void ____lookup_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  __CFString *v10;
  __CFString *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  __CFString *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x227676638]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "change");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "objectChangeType");
      if ((unint64_t)(v9 - 1) > 2)
        v10 = CFSTR("unknown");
      else
        v10 = off_24E78EE30[v9 - 1];
      v11 = v10;
      objc_msgSend(*(id *)(a1 + 40), "change");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138544130;
      v14 = v7;
      v15 = 2112;
      v16 = v11;
      v17 = 2112;
      v18 = objc_opt_class();
      v19 = 2112;
      v20 = v3;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_ERROR, "%{public}@LOOKUP FAILED: %@ %@: %@", (uint8_t *)&v13, 0x2Au);

    }
    objc_autoreleasePoolPop(v4);
  }

}

void ____dependencySort_block_invoke(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v5 = a2;
  v6 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 1;
  objc_msgSend(v6, "change");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "dependentUUIDs");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = ____dependencySort_block_invoke_2;
  v9[3] = &unk_24E77B970;
  v10 = a1[4];
  v11 = a1[5];
  v12 = &v13;
  objc_msgSend(v8, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v9);

  if (*((_BYTE *)v14 + 24))
  {
    objc_msgSend(a1[6], "addObject:", v6);
    objc_msgSend(a1[5], "addObject:", v5);
  }

  _Block_object_dispose(&v13, 8);
}

void sub_221CFE76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____dependencySort_block_invoke_2(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  void *v6;
  char v7;
  id v8;

  v8 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
  v5 = objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = objc_msgSend(*(id *)(a1 + 40), "containsObject:", v8);

    if ((v7 & 1) == 0)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      *a3 = 1;
    }
  }

}

void sub_221CFEA58(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void __broadcastChanges(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  int v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  NSObject *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _QWORD v49[4];
  id v50;
  _QWORD v51[4];
  id v52;
  id v53;
  _QWORD v54[4];
  id v55;
  id v56;
  uint8_t buf[4];
  void *v58;
  __int16 v59;
  id v60;
  __int16 v61;
  id v62;
  __int16 v63;
  id v64;
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a6;
  if (objc_msgSend(v15, "count")
    || (__objectsAreRelevantForBroadcast(v12) & 1) != 0
    || (__objectsAreRelevantForBroadcast(v13) & 1) != 0
    || (__objectsAreRelevantForBroadcast(v14) & 1) != 0)
  {
    v17 = (void *)objc_msgSend(v12, "mutableCopy");
    v18 = v17;
    if (v17)
    {
      v19 = v17;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDBCEF0], "set");
      v19 = (id)objc_claimAutoreleasedReturnValue();
    }
    v20 = v19;

    v21 = (void *)objc_msgSend(v13, "mutableCopy");
    v22 = v21;
    if (v21)
    {
      v23 = v21;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDBCEF0], "set");
      v23 = (id)objc_claimAutoreleasedReturnValue();
    }
    v24 = v23;

    v25 = (void *)objc_msgSend(v14, "mutableCopy");
    v26 = v25;
    v47 = v13;
    v48 = v12;
    v46 = v14;
    v44 = v16;
    if (v25)
    {
      v27 = v25;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDBCEF0], "set");
      v27 = (id)objc_claimAutoreleasedReturnValue();
    }
    v28 = v27;

    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "minusSet:", v24);
    v54[0] = MEMORY[0x24BDAC760];
    v54[1] = 3221225472;
    v54[2] = ____broadcastChanges_block_invoke;
    v54[3] = &unk_24E77B9C0;
    v31 = v30;
    v55 = v31;
    v32 = v29;
    v56 = v32;
    v45 = v15;
    objc_msgSend(v15, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v54);
    objc_msgSend(v11, "context");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "partition");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "redirections");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(v35, "processInserts:updates:deletes:", v24, v20, v28);

    if (v36)
    {
      v37 = MEMORY[0x24BDAC760];
      v51[0] = MEMORY[0x24BDAC760];
      v51[1] = 3221225472;
      v51[2] = ____broadcastChanges_block_invoke_2;
      v51[3] = &unk_24E77B9E8;
      v52 = v24;
      v53 = v20;
      __removeItemsWithManagedObjectsPassingTest(v32, v51);
      v49[0] = v37;
      v49[1] = 3221225472;
      v49[2] = ____broadcastChanges_block_invoke_3;
      v49[3] = &unk_24E77BA10;
      v50 = v28;
      __removeItemsWithManagedObjectsPassingTest(v31, v49);

    }
    __dependencySort(v31);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    __lookup(v11, v38, v44);
    __updateLegacy(v11, v20, v32, 2);
    __updateLegacy(v11, v24, v32, 1);
    __dependencySort(v32);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    __lookup(v11, v39, v44);
    objc_msgSend(v11, "dmKickClients");

    v16 = v44;
    v13 = v47;
    v12 = v48;
    v15 = v45;
    v14 = v46;
  }
  else
  {
    v40 = (void *)MEMORY[0x227676638]();
    v41 = v11;
    HMFGetOSLogHandle();
    v42 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v58 = v43;
      v59 = 2112;
      v60 = v12;
      v61 = 2112;
      v62 = v13;
      v63 = 2112;
      v64 = v14;
      _os_log_impl(&dword_2218F0000, v42, OS_LOG_TYPE_DEBUG, "%{public}@Skipping broadcast: updates = %@, inserts = %@, deletes = %@", buf, 0x2Au);

    }
    objc_autoreleasePoolPop(v40);
  }

}

id __mirrorForeignObjects(void *a1, void *a2)
{
  id v3;
  objc_class *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  id v15;
  id v16;

  v3 = a1;
  v4 = (objc_class *)MEMORY[0x24BDBCEF0];
  v5 = a2;
  v6 = (void *)objc_msgSend([v4 alloc], "initWithCapacity:", objc_msgSend(v5, "count"));
  v11 = MEMORY[0x24BDAC760];
  v12 = 3221225472;
  v13 = ____mirrorForeignObjects_block_invoke;
  v14 = &unk_24E784340;
  v15 = v6;
  v16 = v3;
  v7 = v3;
  v8 = v6;
  objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

  v9 = (void *)objc_msgSend(v8, "copy", v11, v12, v13, v14);
  return v9;
}

void ____mirrorForeignObjects_block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  objc_msgSend(a2, "objectID");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectWithID:", v5);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "addObject:", v4);

}

uint64_t __objectsAreRelevantForBroadcast(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  void *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (__objectsAreRelevantForBroadcast_once != -1)
    dispatch_once(&__objectsAreRelevantForBroadcast_once, &__block_literal_global_85_46117);
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = v1;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v11 != v4)
          objc_enumerationMutation(v2);
        v6 = (void *)__objectsAreRelevantForBroadcast_ignoredEntityNames;
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * i), "objectID", (_QWORD)v10);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "entityName");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(v6) = objc_msgSend(v6, "containsObject:", v8);

        if (!(_DWORD)v6)
        {
          v3 = 1;
          goto LABEL_13;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_13:

  return v3;
}

void ____broadcastChanges_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v3 = a2;
  objc_msgSend(v3, "change");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v8, "objectChangeType");
  v5 = 40;
  if (v4 == 3)
    v5 = 32;
  v6 = *(id *)(a1 + v5);
  objc_msgSend(v8, "uuid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKeyedSubscript:", v3, v7);

}

uint64_t ____broadcastChanges_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3) & 1) != 0)
    v4 = 0;
  else
    v4 = objc_msgSend(*(id *)(a1 + 40), "containsObject:", v3) ^ 1;

  return v4;
}

void __removeItemsWithManagedObjectsPassingTest(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v3 = a2;
  v4 = (void *)MEMORY[0x24BDBCEB8];
  v5 = a1;
  objc_msgSend(v4, "array");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = ____removeItemsWithManagedObjectsPassingTest_block_invoke;
  v9[3] = &unk_24E77BA58;
  v10 = v6;
  v11 = v3;
  v7 = v6;
  v8 = v3;
  objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v9);
  objc_msgSend(v5, "removeObjectsForKeys:", v7);

}

uint64_t ____broadcastChanges_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

void __updateLegacy(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  uint64_t v14;

  v7 = a1;
  v8 = a3;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = ____updateLegacy_block_invoke;
  v11[3] = &unk_24E77BA80;
  v13 = v8;
  v14 = a4;
  v12 = v7;
  v9 = v8;
  v10 = v7;
  objc_msgSend(a2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);

}

void ____updateLegacy_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  __CFString *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  unint64_t v16;
  __CFString *v17;
  __CFString *v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  id v25;
  uint8_t buf[4];
  void *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  __CFString *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  HMDCastIfManagedObjectBSORepresentable(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = *(void **)(a1 + 40);
    objc_msgSend(v4, "hmd_modelID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKey:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
      v9 = *(_QWORD *)(a1 + 48);
      v25 = 0;
      objc_msgSend(v5, "hmd_modelsWithChangeType:detached:error:", v9, 0, &v25);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = (__CFString *)v25;
      if (v10)
      {
        v23[0] = MEMORY[0x24BDAC760];
        v23[1] = 3221225472;
        v23[2] = ____updateLegacy_block_invoke_87;
        v23[3] = &unk_24E77CAC0;
        v24 = *(id *)(a1 + 40);
        objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v23);

      }
      else
      {
        v19 = (void *)MEMORY[0x227676638]();
        v20 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v27 = v22;
          v28 = 2112;
          v29 = v5;
          v30 = 2112;
          v31 = v11;
          _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_ERROR, "%{public}@Unable to turn managed object %@ into models: %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v19);
      }

    }
  }
  else
  {
    v12 = (void *)MEMORY[0x227676638]();
    v13 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = *(_QWORD *)(a1 + 48) - 1;
      if (v16 > 2)
        v17 = CFSTR("unknown");
      else
        v17 = off_24E78EE30[v16];
      v18 = v17;
      *(_DWORD *)buf = 138543874;
      v27 = v15;
      v28 = 2112;
      v29 = v3;
      v30 = 2112;
      v31 = v18;
      _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Managed object %@ is not BSO-representable, ignoring it for %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v12);
  }

}

void ____updateLegacy_block_invoke_87(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  HMDBackingStoreTransactionItem *v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "uuid");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    v5 = -[HMDBackingStoreTransactionItem initWithChange:message:]([HMDBackingStoreTransactionItem alloc], "initWithChange:message:", v6, 0);
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v5, v3);

  }
}

void ____removeItemsWithManagedObjectsPassingTest_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  objc_msgSend(a3, "change");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  HMDCastIfModelCDRepresentable(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "managedObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7 && (*(unsigned int (**)(void))(*(_QWORD *)(a1 + 40) + 16))())
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v8);

}

void ____objectsAreRelevantForBroadcast_block_invoke()
{
  uint64_t v0;
  void *v1;

  +[HMDCoreData entitiesExcludedFromWorkingStoreHistory](HMDCoreData, "entitiesExcludedFromWorkingStoreHistory");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)__objectsAreRelevantForBroadcast_ignoredEntityNames;
  __objectsAreRelevantForBroadcast_ignoredEntityNames = v0;

}

void ____createLegacyDeletes_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  HMDCastIfManagedObjectBSORepresentable(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v18 = 0;
    objc_msgSend(v4, "hmd_modelsWithChangeType:detached:error:", 3, 0, &v18);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v18;
    if (v6)
    {
      v16[0] = MEMORY[0x24BDAC760];
      v16[1] = 3221225472;
      v16[2] = ____createLegacyDeletes_block_invoke_82;
      v16[3] = &unk_24E77CAC0;
      v17 = *(id *)(a1 + 40);
      objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v16);

    }
    else
    {
      v12 = (void *)MEMORY[0x227676638]();
      v13 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v20 = v15;
        v21 = 2112;
        v22 = v5;
        v23 = 2112;
        v24 = v7;
        _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_ERROR, "%{public}@Unable to turn managed object %@ into models: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v12);
    }

  }
  else
  {
    v8 = (void *)MEMORY[0x227676638]();
    v9 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v20 = v11;
      v21 = 2112;
      v22 = v3;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_DEBUG, "%{public}@Managed object %@ is not BSO-representable, ignoring it for delete", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
  }

}

void ____createLegacyDeletes_block_invoke_82(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  HMDBackingStoreTransactionItem *v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = -[HMDBackingStoreTransactionItem initWithChange:message:]([HMDBackingStoreTransactionItem alloc], "initWithChange:message:", v3, 0);

  objc_msgSend(v2, "addObject:", v4);
}

HMDBackingStore *__backingStoreWithUUID(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  HMDBackingStore *v7;
  HMDBackingStore *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v3 = a1;
  v4 = a2;
  os_unfair_lock_lock_with_options();
  +[HMDBackingStore cdlsActiveBackingStores](HMDBackingStore, "cdlsActiveBackingStores");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    v7 = v6;
  }
  else
  {
    v8 = -[HMDBackingStore initWithUUID:]([HMDBackingStore alloc], "initWithUUID:", v3);
    +[HMDBackingStore cdlsActiveBackingStores](HMDBackingStore, "cdlsActiveBackingStores");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setObject:forKey:", v8, v3);

    -[HMDBackingStore coreData](v8, "coreData");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
      objc_msgSend(v10, "contextWithHomeUUID:", v4);
    else
      objc_msgSend(v10, "contextWithRootPartition");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    -[HMDBackingStore setContext:](v8, "setContext:", v11);
    objc_msgSend(v11, "setBackingStore:", v8);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "addObserver:selector:name:object:", v8, sel_handleCoreDataWillSaveNotification_, *MEMORY[0x24BDBB470], 0);

    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "addObserver:selector:name:object:", v8, sel_handleCoreDataDidSaveNotification_, *MEMORY[0x24BDBB458], 0);

    v7 = v8;
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&__backingStoreWithUUID_cdlsActiveBackingStoresLock);
  return v7;
}

void sub_221D00940(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&__backingStoreWithUUID_cdlsActiveBackingStoresLock);
  _Unwind_Resume(a1);
}

void sub_221D01BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D02F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D05004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D067D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a44, 8);
  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void sub_221D07CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 184));
  _Unwind_Resume(a1);
}

void sub_221D0A8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D0B868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_221D104A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D15498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D16DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D1761C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__46802(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46803(uint64_t a1)
{

}

void sub_221D19594(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D1BDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D1F218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D21484(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

id sha256(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  unsigned __int8 *v13;
  CC_LONG v14;
  id v15;
  CC_LONG v16;
  id *v17;
  id v18;
  void *v19;
  id *v21;
  CC_SHA256_CTX c;
  unsigned __int8 md[8];
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v9 = a1;
  memset(&c, 0, sizeof(c));
  CC_SHA256_Init(&c);
  v21 = (id *)&a9;
  v10 = v9;
  v11 = v10;
  if (v10)
  {
    v12 = v10;
    do
    {
      *(_QWORD *)md = 0;
      v24 = 0;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v13 = (unsigned __int8 *)objc_msgSend(objc_retainAutorelease(v12), "UTF8String");
        v14 = strlen((const char *)v13);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_opt_class();
            _HMFPreconditionFailureWithFormat();
          }
          v13 = md;
          objc_msgSend(v12, "getUUIDBytes:", md);
          v16 = 16;
          goto LABEL_10;
        }
        v15 = objc_retainAutorelease(v12);
        v13 = (unsigned __int8 *)objc_msgSend(v15, "bytes");
        v14 = objc_msgSend(v15, "length");
      }
      v16 = v14;
LABEL_10:
      CC_SHA256_Update(&c, v13, v16);
      v17 = v21++;
      v18 = *v17;

      v12 = v18;
    }
    while (v18);
  }
  CC_SHA256_Final(md, &c);
  objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", md, 32);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  return v19;
}

void sub_221D23E4C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221D23F3C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221D2402C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221D26D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *__keyNameForEntity(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  __CFString *v4;
  __CFString *v5;
  int v6;
  __CFString *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = a1;
  __collectUserInfoKeyForEntity(v1);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)v2;
  v4 = CFSTR("modelID");
  if (v2)
    v4 = (__CFString *)v2;
  v5 = v4;

  objc_opt_class();
  v6 = objc_opt_isKindOfClass() & 1;
  if (v6)
    v7 = v5;
  else
    v7 = 0;
  v8 = v7;

  if (v6)
  {
    objc_msgSend(v1, "attributesByName");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKey:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {

      return v5;
    }
  }
  else
  {
    _HMFPreconditionFailure();
  }
  v12 = _HMFPreconditionFailure();
  return (__CFString *)__findObjectInSet(v12);
}

id __findObjectInSet(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  id v15;
  uint64_t v16;

  v7 = a2;
  v8 = a3;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 3221225472;
  v13[2] = ____findObjectInSet_block_invoke;
  v13[3] = &unk_24E77C6B0;
  v15 = v7;
  v16 = a4;
  v14 = v8;
  v9 = v7;
  v10 = v8;
  objc_msgSend(a1, "na_firstObjectPassingTest:", v13);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id ____findObjectInSet_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  char isKindOfClass;
  void *v9;

  v3 = a2;
  v4 = v3;
  if (!*(_QWORD *)(a1 + 32))
  {
    isKindOfClass = objc_opt_isKindOfClass();
    goto LABEL_7;
  }
  objc_msgSend(v3, "valueForKey:", *(_QWORD *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqual:", *(_QWORD *)(a1 + 32));

  if (!v6)
  {
    isKindOfClass = 0;
    goto LABEL_7;
  }
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    isKindOfClass = 1;
LABEL_7:

    return (id)(isKindOfClass & 1);
  }
  v9 = (void *)_HMFPreconditionFailure();
  return __collectUserInfoKeyForEntity(v9);
}

id __collectUserInfoKeyForEntity(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v8;

  v1 = a1;
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "userInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKey:", CFSTR("keyAttribute"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4)
    {
      v5 = v4;
    }
    else
    {
      objc_msgSend(v2, "superentity");
      v5 = (id)objc_claimAutoreleasedReturnValue();

      if (v5)
      {
        objc_msgSend(v2, "superentity");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        __collectUserInfoKeyForEntity();
        v5 = (id)objc_claimAutoreleasedReturnValue();

      }
    }

    return v5;
  }
  else
  {
    v8 = _HMFPreconditionFailure();
    return (id)__78__NSManagedObject_HomeKitDaemon__mkf_synchronizeRelation_items_allowCreation___block_invoke(v8);
  }
}

id __createNewObject(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  NSString *v19;
  char isKindOfClass;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v32;

  v7 = a1;
  v8 = a3;
  v9 = a4;
  objc_msgSend(a2, "entity");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "entity");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "inverseRelationship");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "destinationEntity");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v11, "isKindOfEntity:", v13);

  if ((v14 & 1) == 0)
  {
    _HMFPreconditionFailure();
    goto LABEL_18;
  }
  v15 = objc_alloc(MEMORY[0x24BDBB698]);
  objc_msgSend(v7, "managedObjectContext");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = (void *)objc_msgSend(v15, "initWithEntity:insertIntoManagedObjectContext:", v10, v16);

  objc_msgSend(v8, "destinationEntity");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "managedObjectClassName");
  v19 = (NSString *)objc_claimAutoreleasedReturnValue();
  NSClassFromString(v19);
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
LABEL_18:
    _HMFPreconditionFailure();
    goto LABEL_19;
  }
  __keyNameForEntity(v10);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v21, "isEqual:", CFSTR("modelID")))
  {
    if (v9)
    {
      objc_msgSend(v17, "setValue:forKey:", v9, v21);
      objc_msgSend(v10, "attributesByName");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "objectForKey:", CFSTR("modelID"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v23)
        goto LABEL_14;
      if ((objc_opt_respondsToSelector() & 1) != 0)
      {
        objc_msgSend(a2, "modelIDForKeyAttribute:parent:", v9, v7);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          objc_msgSend(v17, "setValue:forKey:", v24, CFSTR("modelID"));

          goto LABEL_14;
        }
LABEL_22:
        v32 = _HMFPreconditionFailure();
        return (id)+[NSManagedObject(HomeKitDaemon) hmd_errorForInvalidValue:key:](v32);
      }
LABEL_21:
      _HMFPreconditionFailure();
      goto LABEL_22;
    }
LABEL_20:
    _HMFPreconditionFailure();
    goto LABEL_21;
  }
  if (!v9)
  {
    if ((objc_opt_respondsToSelector() & 1) == 0)
      goto LABEL_20;
    objc_msgSend(a2, "modelIDForParentRelationshipTo:", v7);
    v9 = (id)objc_claimAutoreleasedReturnValue();
    if (!v9)
      goto LABEL_20;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_19:
    _HMFPreconditionFailure();
    goto LABEL_20;
  }
  objc_msgSend(v17, "setValue:forKey:", v9, v21);
LABEL_14:
  objc_msgSend(v10, "relationshipsByName");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "inverseRelationship");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "name");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "objectForKey:", v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();

  if (v28)
  {
    objc_msgSend(v8, "inverseRelationship");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "name");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setValue:forKey:", v7, v30);

  }
  return v17;
}

void sub_221D2D1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__49709(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__49710(uint64_t a1)
{

}

void sub_221D2F390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D36C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D36E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__50612(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__50613(uint64_t a1)
{

}

void sub_221D393A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id location)
{
  uint64_t v38;

  _Block_object_dispose((const void *)(v38 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D39710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D39A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D39E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D3B418(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D3B66C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D3BA48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id hds_log()
{
  if (hds_log__hmf_once_t0 != -1)
    dispatch_once(&hds_log__hmf_once_t0, &__block_literal_global_51822);
  return (id)hds_log__hmf_once_v1;
}

void __hds_log_block_invoke()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(CFSTR("hds"), "stringByReplacingOccurrencesOfString:withString:", CFSTR("_"), CFSTR("."));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  HMFCreateOSLogHandle();
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)hds_log__hmf_once_v1;
  hds_log__hmf_once_v1 = v0;

}

void sub_221D42CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__51944(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51945(uint64_t a1)
{

}

void ____homeWithHomeManager_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  const __CFString *v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  void *v36;
  double v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  double v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  double v55;
  double v56;
  void *v57;
  id v58;
  NSObject *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  NSObject *v75;
  void *v76;
  __CFString *v77;
  __CFString *v78;
  void *v79;
  void *v80;
  id v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  id v90;
  void *v91;
  id v92;
  NSObject *v93;
  void *v94;
  void *v95;
  double v96;
  void *v97;
  void *v98;
  void *v99;
  id v100;
  void *v101;
  double v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  double v110;
  double v111;
  void *v112;
  id v113;
  NSObject *v114;
  void *v115;
  void *v116;
  void *v117;
  id v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  id v124;
  NSObject *v125;
  void *v126;
  void *v127;
  double v128;
  void *v129;
  void *v130;
  void *v131;
  id v132;
  void *v133;
  double v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  id v142;
  NSObject *v143;
  void *v144;
  void *v145;
  double v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  id v151;
  void *v152;
  double v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  uint8_t buf[4];
  void *v169;
  __int16 v170;
  const __CFString *v171;
  __int16 v172;
  const __CFString *v173;
  __int16 v174;
  const __CFString *v175;
  __int16 v176;
  const __CFString *v177;
  __int16 v178;
  const __CFString *v179;
  __int16 v180;
  void *v181;
  __int16 v182;
  const __CFString *v183;
  __int16 v184;
  void *v185;
  __int16 v186;
  const __CFString *v187;
  __int16 v188;
  void *v189;
  __int16 v190;
  const __CFString *v191;
  __int16 v192;
  void *v193;
  __int16 v194;
  const __CFString *v195;
  __int16 v196;
  uint64_t v197;
  uint64_t v198;

  v198 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "_homeWithUUID:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = (void *)MEMORY[0x227676638]();
    v4 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = *(const __CFString **)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v169 = v6;
      v170 = 2112;
      v171 = v7;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_ERROR, "%{public}@Not re-adding a home that already exists (%@)", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
  }
  else
  {
    v8 = HMFUptime();
    v10 = v9;
    v11 = (void *)MEMORY[0x227676638](v8);
    v12 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138544898;
      v169 = v14;
      v170 = 2114;
      v171 = CFSTR("homeManagerInitStart");
      v172 = 2112;
      v173 = CFSTR("Fetching and creating home");
      v174 = 2114;
      v175 = CFSTR("state");
      v176 = 2112;
      v177 = CFSTR("homeManagerCreatingHome");
      v178 = 2114;
      v179 = CFSTR("homeUUID");
      v180 = 2112;
      v181 = v15;
      _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_DEBUG, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x48u);

    }
    objc_autoreleasePoolPop(v11);
    objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_alloc(MEMORY[0x24BE4F1D0]);
    v160 = *(_QWORD *)(a1 + 40);
    HMDTaggedLoggingCreateDictionary();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (void *)objc_msgSend(v17, "initWithTag:data:", CFSTR("homeManagerInitStart"), v18, CFSTR("state"), CFSTR("homeManagerCreatingHome"), CFSTR("homeUUID"), v160);
    objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "submitTaggedEvent:processorList:", v19, v20);

    v22 = *(_QWORD *)(a1 + 40);
    v21 = *(void **)(a1 + 48);
    v167 = 0;
    objc_msgSend(v21, "cdlsFetchObjectWithUUID:ofModelType:error:", v22, objc_opt_class(), &v167);
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = v167;
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v26 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v23;

    v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    if (v27)
    {
      v28 = *(_QWORD *)(a1 + 32);
      v29 = *(_QWORD *)(a1 + 48);
      v166 = v24;
      +[HMDHome homeWithHomeManager:backingStore:model:error:](HMDHome, "homeWithHomeManager:backingStore:model:error:", v28, v29, v27, &v166);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = v166;

      v32 = (void *)MEMORY[0x227676638]();
      v33 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v163 = v32;
        v36 = (void *)MEMORY[0x24BDD17C8];
        HMFUptime();
        objc_msgSend(v36, "stringWithFormat:", CFSTR("%.3f"), v37 - v10);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", v30 != 0);
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "domain");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v31, "code"));
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        v42 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138546946;
        v169 = v35;
        v170 = 2114;
        v171 = CFSTR("homeManagerInitStart");
        v172 = 2112;
        v173 = CFSTR("Created home from home model");
        v174 = 2114;
        v175 = CFSTR("state");
        v176 = 2112;
        v177 = CFSTR("homeManagerCreatedHome");
        v178 = 2114;
        v179 = CFSTR("duration");
        v180 = 2112;
        v181 = v38;
        v182 = 2114;
        v183 = CFSTR("success");
        v184 = 2112;
        v185 = v39;
        v186 = 2114;
        v187 = CFSTR("errorDomain");
        v188 = 2112;
        v189 = v40;
        v190 = 2114;
        v191 = CFSTR("errorCode");
        v192 = 2112;
        v193 = v41;
        v194 = 2114;
        v195 = CFSTR("homeUUID");
        v196 = 2112;
        v197 = v42;
        _os_log_impl(&dword_2218F0000, v34, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x98u);

        v32 = v163;
      }
      v165 = v31;

      objc_autoreleasePoolPop(v32);
      objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      v44 = objc_alloc(MEMORY[0x24BE4F1D0]);
      v45 = (void *)MEMORY[0x24BDD17C8];
      HMFUptime();
      objc_msgSend(v45, "stringWithFormat:", CFSTR("%.3f"), v46 - v10);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInt:", v30 != 0);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "domain");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v31, "code"));
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      v162 = *(_QWORD *)(a1 + 40);
      HMDTaggedLoggingCreateDictionary();
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      v52 = (void *)objc_msgSend(v44, "initWithTag:data:", CFSTR("homeManagerInitStart"), v51, CFSTR("state"), CFSTR("homeManagerCreatedHome"), CFSTR("duration"), v47, CFSTR("success"), v48, CFSTR("errorDomain"), v49, CFSTR("errorCode"), v50, CFSTR("homeUUID"), v162);
      objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v43, "submitTaggedEvent:processorList:", v52, v53);

      if (v30)
      {
        v54 = HMFUptime();
        v56 = v55;
        v57 = (void *)MEMORY[0x227676638](v54);
        v58 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v59 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "uuid");
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "name");
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138545410;
          v169 = v60;
          v170 = 2114;
          v171 = CFSTR("homeManagerInitStart");
          v172 = 2112;
          v173 = CFSTR("Adding home");
          v174 = 2114;
          v175 = CFSTR("state");
          v176 = 2112;
          v177 = CFSTR("homeManagerAddingHome");
          v178 = 2114;
          v179 = CFSTR("homeUUID");
          v180 = 2112;
          v181 = v61;
          v182 = 2114;
          v183 = CFSTR("homeName");
          v184 = 2112;
          v185 = v62;
          _os_log_impl(&dword_2218F0000, v59, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);

        }
        objc_autoreleasePoolPop(v57);
        objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        v64 = objc_alloc(MEMORY[0x24BE4F1D0]);
        objc_msgSend(v30, "uuid");
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "name");
        v66 = (void *)objc_claimAutoreleasedReturnValue();
        HMDTaggedLoggingCreateDictionary();
        v67 = (void *)objc_claimAutoreleasedReturnValue();
        v68 = (void *)objc_msgSend(v64, "initWithTag:data:", CFSTR("homeManagerInitStart"), v67, CFSTR("state"), CFSTR("homeManagerAddingHome"), CFSTR("homeUUID"), v65, CFSTR("homeName"), v66);
        objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v63, "submitTaggedEvent:processorList:", v68, v69);

        objc_msgSend(*(id *)(a1 + 32), "incomingInvitations");
        v70 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "uuid");
        v71 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v70, "hmf_firstObjectWithValue:forKeyPath:", v71, CFSTR("homeUUID"));
        v72 = (void *)objc_claimAutoreleasedReturnValue();

        v164 = v72;
        if (v72)
        {
          v73 = (void *)MEMORY[0x227676638]();
          v74 = *(id *)(a1 + 32);
          HMFGetOSLogHandle();
          v75 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v76 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v30, "uuid");
            v77 = (__CFString *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v72, "describeWithFormat");
            v78 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543874;
            v169 = v76;
            v170 = 2112;
            v171 = v77;
            v172 = 2112;
            v173 = v78;
            _os_log_impl(&dword_2218F0000, v75, OS_LOG_TYPE_INFO, "%{public}@Removing existing invitation for home with UUID: %@ in invite %@", buf, 0x20u);

          }
          objc_autoreleasePoolPop(v73);
          objc_msgSend(*(id *)(a1 + 32), "_postIncomingInvitationStateChangedNotification:newInvitationState:", v72, 3);
          objc_msgSend(*(id *)(a1 + 32), "_removeIncomingInvitation:", v72);
        }
        objc_msgSend(*(id *)(a1 + 32), "nameValidator");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "uuid");
        v80 = (void *)objc_claimAutoreleasedReturnValue();
        v81 = (id)objc_msgSend(v79, "addNamespace:", v80);

        v82 = *(void **)(a1 + 32);
        objc_msgSend(v30, "name");
        v83 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "uuid");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        v85 = (id)objc_msgSend(v82, "addName:namespace:", v83, v84);

        v86 = *(void **)(a1 + 32);
        objc_msgSend(v30, "roomForEntireHome");
        v87 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v87, "name");
        v88 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "uuid");
        v89 = (void *)objc_claimAutoreleasedReturnValue();
        v90 = (id)objc_msgSend(v86, "addName:namespace:", v88, v89);

        v91 = (void *)MEMORY[0x227676638](objc_msgSend(*(id *)(a1 + 32), "addHome:", v30));
        v92 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v93 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v93, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v94 = (void *)objc_claimAutoreleasedReturnValue();
          v95 = (void *)MEMORY[0x24BDD17C8];
          HMFUptime();
          objc_msgSend(v95, "stringWithFormat:", CFSTR("%.3f"), v96 - v56);
          v97 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "uuid");
          v98 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138545410;
          v169 = v94;
          v170 = 2114;
          v171 = CFSTR("homeManagerInitStart");
          v172 = 2112;
          v173 = CFSTR("Added home");
          v174 = 2114;
          v175 = CFSTR("state");
          v176 = 2112;
          v177 = CFSTR("homeManagerAddedHome");
          v178 = 2114;
          v179 = CFSTR("duration");
          v180 = 2112;
          v181 = v97;
          v182 = 2114;
          v183 = CFSTR("homeUUID");
          v184 = 2112;
          v185 = v98;
          _os_log_impl(&dword_2218F0000, v93, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);

        }
        objc_autoreleasePoolPop(v91);
        objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
        v99 = (void *)objc_claimAutoreleasedReturnValue();
        v100 = objc_alloc(MEMORY[0x24BE4F1D0]);
        v101 = (void *)MEMORY[0x24BDD17C8];
        HMFUptime();
        objc_msgSend(v101, "stringWithFormat:", CFSTR("%.3f"), v102 - v56);
        v103 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "uuid");
        v104 = (void *)objc_claimAutoreleasedReturnValue();
        HMDTaggedLoggingCreateDictionary();
        v105 = (void *)objc_claimAutoreleasedReturnValue();
        v106 = (void *)objc_msgSend(v100, "initWithTag:data:", CFSTR("homeManagerInitStart"), v105, CFSTR("state"), CFSTR("homeManagerAddedHome"), CFSTR("duration"), v103, CFSTR("homeUUID"), v104);
        objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
        v107 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v99, "submitTaggedEvent:processorList:", v106, v107);

        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "owned");
        v108 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "setOwnerUser:", objc_msgSend(v108, "BOOLValue"));

        v109 = HMFUptime();
        v111 = v110;
        v112 = (void *)MEMORY[0x227676638](v109);
        v113 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v114 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v114, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v115 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "uuid");
          v116 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544898;
          v169 = v115;
          v170 = 2114;
          v171 = CFSTR("homeManagerInitStart");
          v172 = 2112;
          v173 = CFSTR("Configuring home");
          v174 = 2114;
          v175 = CFSTR("state");
          v176 = 2112;
          v177 = CFSTR("homeManagerConfiguringHome");
          v178 = 2114;
          v179 = CFSTR("homeUUID");
          v180 = 2112;
          v181 = v116;
          _os_log_impl(&dword_2218F0000, v114, OS_LOG_TYPE_DEBUG, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x48u);

        }
        objc_autoreleasePoolPop(v112);
        objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
        v117 = (void *)objc_claimAutoreleasedReturnValue();
        v118 = objc_alloc(MEMORY[0x24BE4F1D0]);
        objc_msgSend(v30, "uuid");
        v119 = (void *)objc_claimAutoreleasedReturnValue();
        HMDTaggedLoggingCreateDictionary();
        v120 = (void *)objc_claimAutoreleasedReturnValue();
        v121 = (void *)objc_msgSend(v118, "initWithTag:data:", CFSTR("homeManagerInitStart"), v120, CFSTR("state"), CFSTR("homeManagerConfiguringHome"), CFSTR("homeUUID"), v119);
        objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
        v122 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v117, "submitTaggedEvent:processorList:", v121, v122);

        v123 = (void *)MEMORY[0x227676638](objc_msgSend(v30, "configureWithHomeManager:accessoriesPresent:uncommittedTransactions:source:", *(_QWORD *)(a1 + 32), 0, MEMORY[0x24BDBD1A8], 1));
        v124 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v125 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v126 = (void *)objc_claimAutoreleasedReturnValue();
          v127 = (void *)MEMORY[0x24BDD17C8];
          HMFUptime();
          objc_msgSend(v127, "stringWithFormat:", CFSTR("%.3f"), v128 - v111);
          v129 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "uuid");
          v130 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138545410;
          v169 = v126;
          v170 = 2114;
          v171 = CFSTR("homeManagerInitStart");
          v172 = 2112;
          v173 = CFSTR("Configured home");
          v174 = 2114;
          v175 = CFSTR("state");
          v176 = 2112;
          v177 = CFSTR("homeManagerConfiguredHome");
          v178 = 2114;
          v179 = CFSTR("duration");
          v180 = 2112;
          v181 = v129;
          v182 = 2114;
          v183 = CFSTR("homeUUID");
          v184 = 2112;
          v185 = v130;
          _os_log_impl(&dword_2218F0000, v125, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);

        }
        objc_autoreleasePoolPop(v123);
        objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
        v131 = (void *)objc_claimAutoreleasedReturnValue();
        v132 = objc_alloc(MEMORY[0x24BE4F1D0]);
        v133 = (void *)MEMORY[0x24BDD17C8];
        HMFUptime();
        objc_msgSend(v133, "stringWithFormat:", CFSTR("%.3f"), v134 - v111);
        v135 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "uuid");
        v136 = (void *)objc_claimAutoreleasedReturnValue();
        HMDTaggedLoggingCreateDictionary();
        v137 = (void *)objc_claimAutoreleasedReturnValue();
        v138 = (void *)objc_msgSend(v132, "initWithTag:data:", CFSTR("homeManagerInitStart"), v137, CFSTR("state"), CFSTR("homeManagerConfiguredHome"), CFSTR("duration"), v135, CFSTR("homeUUID"), v136);
        objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
        v139 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v131, "submitTaggedEvent:processorList:", v138, v139);

        v140 = v164;
        v24 = v165;
      }
      else
      {
        v159 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v140 = *(void **)(v159 + 40);
        *(_QWORD *)(v159 + 40) = 0;
        v24 = v165;
      }
    }
    else
    {
      v141 = (void *)MEMORY[0x227676638]();
      v142 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v143 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v143, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v144 = (void *)objc_claimAutoreleasedReturnValue();
        v145 = (void *)MEMORY[0x24BDD17C8];
        HMFUptime();
        objc_msgSend(v145, "stringWithFormat:", CFSTR("%.3f"), v146 - v10);
        v147 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "domain");
        v148 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v24, "code"));
        v149 = (void *)objc_claimAutoreleasedReturnValue();
        v150 = *(void **)(a1 + 40);
        *(_DWORD *)buf = 138546434;
        v169 = v144;
        v170 = 2114;
        v171 = CFSTR("homeManagerInitStart");
        v172 = 2112;
        v173 = CFSTR("Unable to find home");
        v174 = 2114;
        v175 = CFSTR("state");
        v176 = 2112;
        v177 = CFSTR("homeManagerCreatedHome");
        v178 = 2114;
        v179 = CFSTR("duration");
        v180 = 2112;
        v181 = v147;
        v182 = 2114;
        v183 = CFSTR("errorDomain");
        v184 = 2112;
        v185 = v148;
        v186 = 2114;
        v187 = CFSTR("errorCode");
        v188 = 2112;
        v189 = v149;
        v190 = 2114;
        v191 = CFSTR("homeUUID");
        v192 = 2112;
        v193 = v150;
        _os_log_impl(&dword_2218F0000, v143, OS_LOG_TYPE_ERROR, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x84u);

      }
      objc_autoreleasePoolPop(v141);
      objc_msgSend(MEMORY[0x24BE4F1C0], "sharedInstance");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v151 = objc_alloc(MEMORY[0x24BE4F1D0]);
      v152 = (void *)MEMORY[0x24BDD17C8];
      HMFUptime();
      objc_msgSend(v152, "stringWithFormat:", CFSTR("%.3f"), v153 - v10);
      v140 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "domain");
      v154 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v24, "code"));
      v155 = (void *)objc_claimAutoreleasedReturnValue();
      v161 = *(_QWORD *)(a1 + 40);
      HMDTaggedLoggingCreateDictionary();
      v156 = (void *)objc_claimAutoreleasedReturnValue();
      v157 = (void *)objc_msgSend(v151, "initWithTag:data:", CFSTR("homeManagerInitStart"), v156, CFSTR("state"), CFSTR("homeManagerCreatedHome"), CFSTR("duration"), v140, CFSTR("errorDomain"), v154, CFSTR("errorCode"), v155, CFSTR("homeUUID"), v161);
      objc_msgSend(MEMORY[0x24BE3F138], "currentTagProcessorList");
      v158 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "submitTaggedEvent:processorList:", v157, v158);

    }
  }
}

void sub_221D47818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v26 - 152));
  objc_destroyWeak((id *)(v26 - 144));
  _Unwind_Resume(a1);
}

void sub_221D48AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D492A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D493C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D496C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D497D8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

BOOL AWDHomeKitCharacteristicThresholdEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__minPresent;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_BYTE *)(a1 + *v24) = v19 != 0;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 12) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCharacteristicThresholdEvent__maxPresent;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221D4D6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__52966(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__52967(uint64_t a1)
{

}

void sub_221D4E30C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D4E538(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D4E8B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D4FAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __getDenylistKeys_block_invoke()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (isInternalBuild())
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithObjects:", CFSTR("kAuthorizationDataKey"), 0, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  else
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithObjects:", CFSTR("kAuthorizationDataKey"), CFSTR("kAccessoryPairingPasswordKey"), CFSTR("kAccessoryName"), CFSTR("kServiceName"), CFSTR("kActionSetName"), CFSTR("kTriggerName"), CFSTR("kZoneName"), CFSTR("kHomeName"), CFSTR("kRoomName"), CFSTR("kAccessoryInfoSerialNumberKey"), CFSTR("kUserIDKey"), CFSTR("kUserIDsKey"), CFSTR("kUserDisplayNameKey"), CFSTR("kUserNamesKey"), 0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)getDenylistKeys_denylistKeys;
  getDenylistKeys_denylistKeys = v0;

}

uint64_t validateEntitlementForConnection(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4
    && ((objc_msgSend(v4, "valueForEntitlement:", v3),
         v6 = (void *)objc_claimAutoreleasedReturnValue(),
         objc_opt_class(),
         (objc_opt_isKindOfClass() & 1) == 0)
      ? (v7 = 0)
      : (v7 = v6),
        v8 = v7,
        v6,
        v8))
  {
    v9 = objc_msgSend(v8, "BOOLValue");

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

id HMXPCClientEntitlementsToComponents(unint64_t a1)
{
  void *v2;
  uint64_t i;
  const __CFString *v4;
  void *v5;

  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", 64);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (a1)
  {
    for (i = 1; i - 1 < a1; i *= 2)
    {
      if ((i & a1) != 0)
      {
        if (i > 4095)
        {
          if (i < 0x20000)
          {
            if (i < 0x4000)
            {
              if (i == 4096)
              {
                v4 = CFSTR("com.apple.private.homekit.messaging");
                goto LABEL_52;
              }
              if (i == 0x2000)
              {
                v4 = CFSTR("com.apple.private.homekit.person-manager");
                goto LABEL_52;
              }
            }
            else
            {
              switch(i)
              {
                case 0x4000:
                  v4 = CFSTR("com.apple.private.homekit.allow-secure-access");
                  goto LABEL_52;
                case 0x8000:
                  v4 = CFSTR("com.apple.private.homekit.diagnostics");
                  goto LABEL_52;
                case 0x10000:
                  v4 = CFSTR("com.apple.private.homekit.state-dump");
                  goto LABEL_52;
              }
            }
          }
          else if (i >= 0x100000)
          {
            switch(i)
            {
              case 0x100000:
                v4 = CFSTR("com.apple.private.homekit.location-feedback-debug");
                goto LABEL_52;
              case 0x200000:
                v4 = CFSTR("com.apple.developer.matter.allow-setup-payload");
                goto LABEL_52;
              case 0x400000:
                v4 = CFSTR("com.apple.private.homekit.modern-messaging");
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 0x20000:
                v4 = CFSTR("com.apple.private.homekit.wallet-key");
                goto LABEL_52;
              case 0x40000:
                v4 = CFSTR("com.apple.private.homekit.assistant-identifiers");
                goto LABEL_52;
              case 0x80000:
                v4 = CFSTR("com.apple.private.homekit.home-location");
LABEL_52:
                objc_msgSend(v2, "addObject:", v4);
                break;
            }
          }
        }
        else
        {
          if (i <= 63)
          {
            v4 = CFSTR("com.apple.developer.homekit");
            switch(i)
            {
              case 1:
                goto LABEL_52;
              case 2:
                v4 = CFSTR("com.apple.developer.homekit.background-mode");
                goto LABEL_52;
              case 3:
              case 5:
              case 6:
              case 7:
                continue;
              case 4:
                v4 = CFSTR("com.apple.private.homekit");
                goto LABEL_52;
              case 8:
                v4 = CFSTR("com.apple.private.homekit.pairing-identity");
                goto LABEL_52;
              default:
                if (i == 16)
                {
                  v4 = CFSTR("com.apple.private.homekit.pairing-identity.private");
                }
                else
                {
                  if (i != 32)
                    continue;
                  v4 = CFSTR("com.apple.private.homekit.remote-login.private");
                }
                break;
            }
            goto LABEL_52;
          }
          if (i > 511)
          {
            switch(i)
            {
              case 512:
                v4 = CFSTR("com.apple.private.homekit.multi-user.setup");
                goto LABEL_52;
              case 1024:
                v4 = CFSTR("com.apple.private.homekit.location");
                goto LABEL_52;
              case 2048:
                v4 = CFSTR("com.apple.private.homekit.shortcuts-automation-access");
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 64:
                v4 = CFSTR("com.apple.developer.homekit.allow-setup-payload");
                goto LABEL_52;
              case 128:
                v4 = CFSTR("com.apple.private.homekit.cameraclips");
                goto LABEL_52;
              case 256:
                v4 = CFSTR("com.apple.private.homekit.connectivity-info");
                goto LABEL_52;
            }
          }
        }
      }
    }
  }
  v5 = (void *)objc_msgSend(v2, "copy");

  return v5;
}

BOOL AWDHomeKitCameraIDSSessionSetupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
              goto LABEL_53;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
              goto LABEL_56;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationSent;
          goto LABEL_54;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
              goto LABEL_53;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionInvitationReceived;
          goto LABEL_54;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 8u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
              goto LABEL_53;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnResident;
          goto LABEL_54;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 4u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
          goto LABEL_54;
        }
        v35 += 7;
        v23 = v36++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
          goto LABEL_56;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraIDSSessionSetup__idsSessionStartedOnReceiver;
LABEL_53:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221D51A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D51B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D51C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D51DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D51EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D51FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D53900(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D53A80(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D53D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D53E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D53FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D56294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;
  uint64_t v65;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a65, 8);
  _Block_object_dispose((const void *)(v65 - 256), 8);
  _Block_object_dispose((const void *)(v65 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_221D57460(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__53677(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__53678(uint64_t a1)
{

}

void sub_221D5B7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a24, 8);
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_221D5CB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitLocationEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 12) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnEntry;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_BYTE *)(a1 + *v24) = v19 != 0;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 12) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitLocationEvent__notifyOnExit;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221D5F3A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D5F9FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D5FA68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D5FAE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D61A78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D61EBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D6263C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D6447C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__54880(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__54881(uint64_t a1)
{

}

void sub_221D64968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D65398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D6D94C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_221D6DDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221D72868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a56, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__56158(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__56159(uint64_t a1)
{

}

BOOL AWDHomeKitCharacteristicReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t appendToMutableData(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_msgSend(a4, "appendBytes:length:", a1, a2);
  return 0;
}

void sub_221D90108(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&defaultManager_defaultManagerLock);
  _Unwind_Resume(a1);
}

void __notifyDelegateAccountRemoved(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "clientQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountRemoved_block_invoke;
    v6[3] = &unk_24E79C268;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____notifyDelegateAccountRemoved_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "shortDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v14 = v5;
    v15 = 2112;
    v16 = v6;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = CFSTR("HMDAccountNotificationKey");
  v12 = v8;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRegistryRemovedAccountNotification"), v9, v10);

}

void __notifyDelegateAccountAdded(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "clientQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountAdded_block_invoke;
    v6[3] = &unk_24E79C268;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____notifyDelegateAccountAdded_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "shortDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v14 = v5;
    v15 = 2112;
    v16 = v6;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Account added: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = CFSTR("HMDAccountNotificationKey");
  v12 = v8;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRegistryAddedAccountNotification"), v9, v10);

}

void __cleanupRemoteDevicesWithHandles(void *a1, void *a2)
{
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *context;
  void *v28;
  id obj;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  void *v48;
  __int16 v49;
  void *v50;
  _BYTE v51[128];
  _BYTE v52[128];
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  context = (void *)MEMORY[0x227676638]();
  v35 = v3;
  objc_msgSend(v3, "remoteAccountManager");
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "accounts");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
  if (v31)
  {
    v30 = *(_QWORD *)v42;
    v5 = 0x24BDBC000uLL;
    v33 = v4;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v42 != v30)
          objc_enumerationMutation(obj);
        v32 = v6;
        v7 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v6);
        v37 = 0u;
        v38 = 0u;
        v39 = 0u;
        v40 = 0u;
        v36 = v7;
        objc_msgSend(v7, "devices");
        v34 = (id)objc_claimAutoreleasedReturnValue();
        v8 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v37, v51, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v38;
          do
          {
            for (i = 0; i != v9; ++i)
            {
              if (*(_QWORD *)v38 != v10)
                objc_enumerationMutation(v34);
              v12 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
              v13 = *(void **)(v5 + 3824);
              objc_msgSend(v12, "handles");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v13, "setWithArray:", v14);
              v15 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v15, "intersectSet:", v4);
              if (objc_msgSend(v15, "count"))
              {
                v16 = (void *)MEMORY[0x227676638]();
                v17 = v35;
                HMFGetOSLogHandle();
                v18 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
                {
                  HMFGetLogIdentifier();
                  v19 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v12, "shortDescription");
                  v20 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138543874;
                  v46 = v19;
                  v47 = 2112;
                  v48 = v20;
                  v49 = 2112;
                  v50 = v36;
                  _os_log_impl(&dword_2218F0000, v18, OS_LOG_TYPE_INFO, "%{public}@Removing duplicate device, %@, from account: %@", buf, 0x20u);

                  v4 = v33;
                  v5 = 0x24BDBC000;
                }

                objc_autoreleasePoolPop(v16);
                objc_msgSend(v36, "removeDevice:", v12);
              }

            }
            v9 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v37, v51, 16);
          }
          while (v9);
        }

        objc_msgSend(v36, "devices");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v21, "hmf_isEmpty");

        v5 = 0x24BDBC000;
        if (v22)
        {
          v23 = (void *)MEMORY[0x227676638]();
          v24 = v35;
          HMFGetOSLogHandle();
          v25 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v46 = v26;
            v47 = 2112;
            v48 = v36;
            _os_log_impl(&dword_2218F0000, v25, OS_LOG_TYPE_DEFAULT, "%{public}@Removing duplicate empty account: %@", buf, 0x16u);

            v5 = 0x24BDBC000;
          }

          objc_autoreleasePoolPop(v23);
          objc_msgSend(v28, "removeAccount:", v36);
        }
        v6 = v32 + 1;
        v4 = v33;
      }
      while (v32 + 1 != v31);
      v31 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
    }
    while (v31);
  }

  objc_autoreleasePoolPop(context);
}

void __cleanupRemoteAccountsRelatedToAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *context;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  void *v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v17 = (void *)MEMORY[0x227676638]();
  objc_msgSend(v3, "remoteAccountManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v5, "accounts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v22;
    v18 = v6;
    v19 = v5;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v22 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        if ((objc_msgSend(v4, "isEqual:", v11) & 1) == 0 && objc_msgSend(v4, "isRelatedToAccount:", v11))
        {
          context = (void *)MEMORY[0x227676638]();
          v12 = v3;
          HMFGetOSLogHandle();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "shortDescription");
            v15 = v3;
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v26 = v14;
            v27 = 2112;
            v28 = v16;
            _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_DEFAULT, "%{public}@Detected stale account, %@, removing", buf, 0x16u);

            v3 = v15;
            v6 = v18;

            v5 = v19;
          }

          objc_autoreleasePoolPop(context);
          objc_msgSend(v5, "removeAccount:", v11);
        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    }
    while (v8);
  }

  objc_autoreleasePoolPop(v17);
}

void __registerForAccountUpdates(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x227676638]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543618;
    v14 = v8;
    v15 = 2112;
    v16 = v4;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account updates: %@", (uint8_t *)&v13, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "removeObserver:name:object:", v6, CFSTR("HMDAccountHandlesUpdatedNotification"), 0);

  objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "removeObserver:name:object:", v6, CFSTR("HMDAccountAddedDeviceNotification"), 0);

  if (v4)
  {
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObserver:selector:name:object:", v6, sel___handleAppleAccountHandlesUpdated_, CFSTR("HMDAccountHandlesUpdatedNotification"), v4);

    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "addObserver:selector:name:object:", v6, sel___handleAppleAccountDeviceAdded_, CFSTR("HMDAccountAddedDeviceNotification"), v4);

  }
}

id __deviceForDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  void *v16;
  id v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v25;
      v19 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
          v20 = 0u;
          v21 = 0u;
          v22 = 0u;
          v23 = 0u;
          v11 = v10;
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v21;
            while (2)
            {
              for (j = 0; j != v13; ++j)
              {
                if (*(_QWORD *)v21 != v14)
                  objc_enumerationMutation(v11);
                v16 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * j);
                if ((objc_msgSend(v4, "isRelatedToDevice:", v16) & 1) != 0)
                {
                  v17 = v16;

                  goto LABEL_21;
                }
              }
              v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
              if (v13)
                continue;
              break;
            }
          }

          v8 = v19;
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
        v17 = 0;
      }
      while (v7);
    }
    else
    {
      v17 = 0;
    }
LABEL_21:

  }
  else
  {
    v17 = 0;
  }

  return v17;
}

id __deviceForHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v7 = v3;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v15;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v15 != v10)
            objc_enumerationMutation(v7);
          objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v11), "deviceForHandle:", v5, (_QWORD)v14);
          v12 = objc_claimAutoreleasedReturnValue();
          if (v12)
          {
            v6 = (void *)v12;
            goto LABEL_13;
          }
          ++v11;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v9)
          continue;
        break;
      }
    }
    v6 = 0;
LABEL_13:

  }
  return v6;
}

id __accountForHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v5 = v3;
    v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v14;
      while (2)
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v14 != v7)
            objc_enumerationMutation(v5);
          v9 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
          objc_msgSend(v9, "handles", (_QWORD)v13);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v10, "containsObject:", v4);

          if ((v11 & 1) != 0)
          {
            v6 = v9;
            goto LABEL_12;
          }
        }
        v6 = (id)objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
        if (v6)
          continue;
        break;
      }
    }
LABEL_12:

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_221D9548C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D95590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221D95650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__59054(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__59055(uint64_t a1)
{

}

id HMDBulletinBundleIdentifier()
{
  return (id)*MEMORY[0x24BDD5C70];
}

void sub_221D96F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

void sub_221D97F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__59431(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__59432(uint64_t a1)
{

}

void sub_221D9A0C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221D9DF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__60371(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__60372(uint64_t a1)
{

}

void __createBackboardWatcher(void *a1)
{
  id v1;
  uint64_t ServerPort;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id location[4];

  location[3] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (!+[HMDDeviceCapabilities supportsBackboard](HMDDeviceCapabilities, "supportsBackboard"))
  {
    v7 = (void *)MEMORY[0x227676638]();
    v8 = v1;
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v10;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_INFO, "%{public}@No backboardd support for device, skipping watcher", (uint8_t *)location, 0xCu);

    }
    goto LABEL_9;
  }
  ServerPort = CARenderServerGetServerPort();
  if ((ServerPort - 1) >= 0xFFFFFFFE)
  {
    v7 = (void *)MEMORY[0x227676638]();
    v8 = v1;
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v11;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_ERROR, "%{public}@Unable to find port for default render server", (uint8_t *)location, 0xCu);

    }
LABEL_9:

    objc_autoreleasePoolPop(v7);
    goto LABEL_10;
  }
  v3 = ServerPort;
  objc_initWeak(location, v1);
  v4 = objc_alloc(MEMORY[0x24BE0BE70]);
  objc_msgSend(v1, "clientQueue");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = ____createBackboardWatcher_block_invoke;
  v12[3] = &unk_24E797318;
  objc_copyWeak(&v13, location);
  v6 = (void *)objc_msgSend(v4, "initWithPort:queue:deathHandler:", v3, v5, v12);
  objc_msgSend(v1, "setBackboardServicesWatcher:", v6);

  objc_destroyWeak(&v13);
  objc_destroyWeak(location);
LABEL_10:

}

void sub_221D9EB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____createBackboardWatcher_block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_backboardServicesRelaunched");

}

void sub_221DA3EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  id location;
  id *v65;
  uint64_t v66;

  objc_destroyWeak(v65);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v66 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DA4870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DA57F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DA58B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DA5A10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DA5BBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DA7A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__61896(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__61897(uint64_t a1)
{

}

void sub_221DAA9C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DAAA34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoTopicReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 3)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 8;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id _findConstraintForType(void *a1, uint64_t a2)
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x24BDAC760];
  v3[1] = 3221225472;
  v3[2] = ___findConstraintForType_block_invoke;
  v3[3] = &__block_descriptor_40_e38_B16__0__HMAccessorySettingConstraint_8l;
  v3[4] = a2;
  objc_msgSend(a1, "na_firstObjectPassingTest:", v3);
  return (id)objc_claimAutoreleasedReturnValue();
}

BOOL ___findConstraintForType_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "type") == *(_QWORD *)(a1 + 32);
}

void sub_221DB01D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DB05C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_221DB3B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DB61A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DB92D0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBA8A8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBA980(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBAE70(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBAF44(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBB018(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBB0EC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBB508(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBB5DC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBD9E4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBDAA8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBDDF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBDE94(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBEA84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DBEC08(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DC2EC0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __transactionAccessoryUpdated(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  NSObject *v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  char v27;
  void *v28;
  int v29;
  char v30;
  void *v31;
  void *v32;
  char v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  char v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  char v45;
  id v46;
  void *v47;
  id v48;
  HMDAccessoryVersion *v49;
  void *v50;
  uint64_t v51;
  HMDAccessoryVersion *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  char v59;
  void *v60;
  void *v61;
  void *v62;
  char v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  char v68;
  void *v69;
  uint64_t v70;
  void *v71;
  void *v72;
  char v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  NSObject *v82;
  id v83;
  id v84;
  void *v85;
  void *v86;
  uint64_t v87;
  void *v88;
  id v89;
  NSObject *v90;
  id v91;
  id v92;
  void *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  char v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  char v105;
  void *v106;
  uint64_t v107;
  void *v108;
  void *v109;
  void *v110;
  char v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  char v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  char v123;
  id v124;
  void *v125;
  void *v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  NSObject *v139;
  id v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  void *v144;
  void *v145;
  uint64_t v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  uint64_t v151;
  void *v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  char v160;
  id v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  char v167;
  void *v168;
  uint64_t v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  char v176;
  void *v177;
  void *v178;
  void *v179;
  char v180;
  void *v181;
  void *v182;
  HMDAccessoryNetworkAccessViolation *v183;
  void *v184;
  void *v185;
  HMDAccessoryNetworkAccessViolation *v186;
  _BOOL4 v187;
  int v188;
  void *v189;
  void *v190;
  void *v191;
  _BOOL4 v192;
  double v193;
  void *v194;
  void *v195;
  void *v196;
  uint64_t v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  char v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  uint64_t v208;
  void *v209;
  int v210;
  void *v211;
  int v212;
  void *v213;
  uint64_t v214;
  void *v215;
  void *v216;
  void *v217;
  char v218;
  void *v219;
  uint64_t v220;
  void *v221;
  int v222;
  void *v223;
  int v224;
  void *v225;
  NSObject *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t i;
  void *v231;
  void *v232;
  id v233;
  void *v234;
  void *v235;
  void *v236;
  void (**v237)(_QWORD, _QWORD, _QWORD);
  uint64_t v238;
  void *v239;
  void *v240;
  void *v241;
  id v242;
  NSObject *group;
  void *v244;
  void *v245;
  void *v246;
  void *v247;
  id v248;
  void *v249;
  id obj;
  id obja;
  void *v252;
  void *v253;
  _QWORD v254[4];
  NSObject *v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  _QWORD v260[4];
  id v261;
  id v262;
  _QWORD block[4];
  id v264;
  id v265;
  _BYTE v266[128];
  const __CFString *v267;
  void *v268;
  uint64_t v269;
  void *v270;
  uint64_t v271;
  void *v272;
  _QWORD v273[2];
  _QWORD v274[2];
  void *v275;
  uint8_t buf[4];
  id v277;
  __int16 v278;
  uint64_t v279;
  __int16 v280;
  uint64_t v281;
  __int16 v282;
  id v283;
  const __CFString *v284;
  void *v285;
  const __CFString *v286;
  _QWORD v287[4];

  v287[1] = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v242 = a3;
  objc_msgSend(v242, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "source");
  v8 = (void *)MEMORY[0x24BDBCEB8];
  +[HMDAccessoryTransaction properties](HMDAccessoryTransaction, "properties");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "arrayWithCapacity:", objc_msgSend(v9, "count"));
  obj = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(0, "configurationTracker");
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10)
    dispatch_group_enter(v10);
  if ((objc_msgSend(v6, "propertyWasSet:", CFSTR("name")) & 1) != 0
    || objc_msgSend(v6, "propertyWasSet:", CFSTR("configuredName")))
  {
    objc_msgSend(v6, "configuredName");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "configuredName");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "name");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if ((HMFEqualObjects() & 1) == 0)
    {
      objc_msgSend(v5, "setConfiguredName:", v12);
      objc_msgSend(v7, "markChanged");
    }
    objc_msgSend(v5, "name");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = HMFEqualObjects();
    if (v15 && (v16 & 1) == 0)
    {
      objc_msgSend(v7, "markSaveToAssistant");
      objc_msgSend(v5, "workQueue");
      v17 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____transactionAccessoryUpdated_block_invoke;
      block[3] = &unk_24E79C268;
      v264 = v5;
      v265 = v15;
      dispatch_async(v17, block);

    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("providedName")))
  {
    objc_msgSend(v5, "providedName");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "providedName");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = HMFEqualObjects();

    if ((v20 & 1) == 0)
    {
      objc_msgSend(v5, "name");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "providedName");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "providedName");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setProvidedName:", v23);

      objc_msgSend(v5, "name");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      if (v24 && (HMFEqualObjects() & 1) == 0)
      {
        objc_msgSend(v7, "markSaveToAssistant");
        objc_msgSend(v5, "workQueue");
        v25 = objc_claimAutoreleasedReturnValue();
        v260[0] = MEMORY[0x24BDAC760];
        v260[1] = 3221225472;
        v260[2] = ____transactionAccessoryUpdated_block_invoke_2;
        v260[3] = &unk_24E79C268;
        v261 = v5;
        v262 = v24;
        dispatch_async(v25, v260);

      }
      objc_msgSend(v5, "providedName");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = HMFEqualObjects();

      if ((v27 & 1) == 0)
        objc_msgSend(v7, "markChanged");

    }
  }
  objc_msgSend(v6, "setProperties");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = objc_msgSend(v28, "containsObject:", CFSTR("model"));
  v30 = v29;
  if (!v29)
    goto LABEL_23;
  objc_msgSend(v6, "model");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "model");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = HMFEqualObjects();

  if ((v33 & 1) == 0)
  {
    objc_msgSend(v6, "model");
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    if (v34)
    {
      objc_msgSend(v6, "model");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setModel:", v28);
LABEL_23:

      goto LABEL_25;
    }
  }
  v30 = 0;
LABEL_25:
  objc_msgSend(v6, "setProperties");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v35, "containsObject:", CFSTR("manufacturer")))
  {
LABEL_29:

    goto LABEL_30;
  }
  objc_msgSend(v6, "manufacturer");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "manufacturer");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = HMFEqualObjects();

  if ((v38 & 1) == 0)
  {
    objc_msgSend(v6, "manufacturer");
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    if (v39)
    {
      objc_msgSend(v6, "manufacturer");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setManufacturer:", v35);
      v30 = 1;
      goto LABEL_29;
    }
  }
LABEL_30:
  group = v11;
  objc_msgSend(v6, "firmwareVersion");
  v40 = objc_claimAutoreleasedReturnValue();
  v247 = v6;
  if (v40)
  {
    v41 = (void *)v40;
    objc_msgSend(v6, "firmwareVersion");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "firmwareVersion");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "rawVersionString");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = HMFEqualObjects();

    if ((v45 & 1) == 0)
    {
      v46 = v5;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v47 = v46;
      else
        v47 = 0;
      v48 = v47;

      if (v48 && objc_msgSend(v48, "supportsCHIP"))
      {
        v49 = [HMDAccessoryVersion alloc];
        objc_msgSend(v6, "firmwareVersion");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = -[HMDAccessoryVersion initWithMatterVersionString:](v49, "initWithMatterVersionString:", v50);
      }
      else
      {
        v52 = [HMDAccessoryVersion alloc];
        objc_msgSend(v6, "firmwareVersion");
        v50 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = -[HMDAccessoryVersion initWithVersionString:](v52, "initWithVersionString:", v50);
      }
      v53 = (void *)v51;

      if (v53)
      {
        objc_msgSend(v46, "firmwareVersion");
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v46, "setFirmwareVersion:", v53);
        if ((objc_msgSend(v53, "isEqualToVersion:", v54) & 1) == 0)
        {
          if (v54)
          {
            v286 = CFSTR("HMDAccessoryPreviousFirmwareVersionKey");
            v287[0] = v54;
            objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v287, &v286, 1);
            v55 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            v55 = 0;
          }
          logAndPostNotification(CFSTR("HMDAccessoryFirmwareVersionUpdatedNotification"), v46, v55);

        }
        v30 = 1;
      }

    }
  }
  objc_msgSend(v6, "setProperties");
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v56, "containsObject:", CFSTR("displayableFirmwareVersion")))
    goto LABEL_56;
  objc_msgSend(v6, "displayableFirmwareVersion");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "displayableFirmwareVersion");
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v59 = HMFEqualObjects();

  if ((v59 & 1) == 0)
  {
    objc_msgSend(v6, "displayableFirmwareVersion");
    v60 = (void *)objc_claimAutoreleasedReturnValue();

    if (v60)
    {
      objc_msgSend(v5, "displayableFirmwareVersion");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "displayableFirmwareVersion");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setDisplayableFirmwareVersion:", v61);

      objc_msgSend(v6, "displayableFirmwareVersion");
      v62 = (void *)objc_claimAutoreleasedReturnValue();
      v63 = objc_msgSend(v62, "isEqualToString:", v56);

      if ((v63 & 1) == 0)
      {
        if (v56)
        {
          v284 = CFSTR("HMDAccessoryPreviousDisplayableFirmwareVersionKey");
          v285 = v56;
          objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v285, &v284, 1);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v64 = 0;
        }
        logAndPostNotification(CFSTR("HMDAccessoryFirmwareDisplayableVersionUpdatedNotification"), v5, v64);

      }
      v30 = 1;
LABEL_56:

    }
  }
  objc_msgSend(v6, "setProperties");
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v65, "containsObject:", CFSTR("serialNumber")))
  {
    objc_msgSend(v6, "serialNumber");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "serialNumber");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = HMFEqualObjects();

    if ((v68 & 1) != 0)
      goto LABEL_62;
    objc_msgSend(v6, "serialNumber");
    v69 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v69)
      goto LABEL_62;
    objc_msgSend(v6, "serialNumber");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setSerialNumber:", v65);
    v30 = 1;
  }

LABEL_62:
  objc_msgSend(v6, "hostAccessoryUUID");
  v70 = objc_claimAutoreleasedReturnValue();
  v241 = (void *)v70;
  if (v70)
    v246 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", v70);
  else
    v246 = 0;
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("hostAccessoryUUID")))
  {
    objc_msgSend(v5, "hostAccessory");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v71, "uuid");
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    v73 = objc_msgSend(v72, "hmf_isEqualToUUID:", v246);

    if ((v73 & 1) == 0)
    {
      objc_msgSend(v5, "_updateHost:", v246);
      objc_msgSend(v7, "markChanged");
      objc_msgSend(v7, "markSaveToAssistant");
    }
  }
  objc_msgSend(v5, "home");
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v74, "homeManager");
  v245 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "productData");
  v75 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "productDataV2");
  v76 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "productData");
  v249 = (void *)objc_claimAutoreleasedReturnValue();
  v77 = v5;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v78 = v77;
  else
    v78 = 0;
  v248 = v78;
  v253 = v77;

  v244 = (void *)v75;
  v238 = v76;
  if (v76)
  {
    v79 = HMFEqualObjects();
    if ((v79 & 1) == 0)
    {
      v85 = v77;
      v86 = (void *)v76;
LABEL_86:
      objc_msgSend(v85, "setProductData:", v86, v238);
      if (v248)
      {
        objc_msgSend(v245, "accessoryFirmwareUpdateManager");
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v93, "registerAccessory:", v248);

      }
LABEL_88:
      v275 = v253;
      objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v275, 1, v238);
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v74, "notifyClientsOfAccessoryInfoUpdatedForAccessories:", v94);

      objc_msgSend(v7, "markChanged");
      goto LABEL_89;
    }
  }
  if (v249 && !v75)
  {
    v80 = (void *)MEMORY[0x227676638](v79);
    v81 = v253;
    HMFGetOSLogHandle();
    v82 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v82, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v83 = (id)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v238));
      v84 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v277 = v83;
      v278 = 2112;
      v279 = (uint64_t)v249;
      v280 = 2112;
      v281 = (uint64_t)v84;
      _os_log_impl(&dword_2218F0000, v82, OS_LOG_TYPE_INFO, "%{public}@Applying initial legacy productData %@ (source: %@)", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v80);
    v85 = v81;
    v86 = v249;
    goto LABEL_86;
  }
  if (v249)
  {
    v87 = HMFEqualObjects();
    if ((v87 & 1) == 0)
    {
      v88 = (void *)MEMORY[0x227676638](v87);
      v89 = v77;
      HMFGetOSLogHandle();
      v90 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v91 = (id)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v238));
        v92 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v277 = v91;
        v278 = 2112;
        v279 = (uint64_t)v244;
        v280 = 2112;
        v281 = (uint64_t)v249;
        v282 = 2112;
        v283 = v92;
        _os_log_impl(&dword_2218F0000, v90, OS_LOG_TYPE_INFO, "%{public}@Ignoring legacy productData change %@ -> %@ (source: %@)", buf, 0x2Au);

      }
      objc_autoreleasePoolPop(v88);
    }
  }
  if ((v30 & 1) != 0)
    goto LABEL_88;
LABEL_89:
  objc_msgSend(v6, "initialManufacturer", v238);
  v95 = objc_claimAutoreleasedReturnValue();
  if (v95)
  {
    v96 = (void *)v95;
    objc_msgSend(v6, "initialManufacturer");
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "initialManufacturer");
    v98 = (void *)objc_claimAutoreleasedReturnValue();
    v99 = HMFEqualObjects();

    if ((v99 & 1) == 0)
    {
      objc_msgSend(v6, "initialManufacturer");
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setInitialManufacturer:", v100);

      logAndPostNotification(CFSTR("HMDAccessoryManufacturerUpdatedNotification"), v253, 0);
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "initialModel");
  v101 = objc_claimAutoreleasedReturnValue();
  if (v101)
  {
    v102 = (void *)v101;
    objc_msgSend(v6, "initialModel");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "initialModel");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    v105 = HMFEqualObjects();

    if ((v105 & 1) == 0)
    {
      objc_msgSend(v6, "initialModel");
      v106 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setInitialModel:", v106);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "initialCategoryIdentifier");
  v107 = objc_claimAutoreleasedReturnValue();
  if (v107)
  {
    v108 = (void *)v107;
    objc_msgSend(v6, "initialCategoryIdentifier");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "initialCategoryIdentifier");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    v111 = HMFEqualObjects();

    if ((v111 & 1) == 0)
    {
      objc_msgSend(v6, "initialCategoryIdentifier");
      v112 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setInitialCategoryIdentifier:", v112);

      logAndPostNotification(CFSTR("HMDAccessoryCategoryUpdatedNotification"), v253, 0);
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "accessoryCategory");
  v113 = (void *)objc_claimAutoreleasedReturnValue();

  if (v113)
  {
    objc_msgSend(v6, "accessoryCategory");
    v114 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "_updateCategory:notifyClients:", v114, 1);
    v115 = (void *)objc_claimAutoreleasedReturnValue();

    if (v115)
    {
      objc_msgSend(obj, "addObject:", v115);
      objc_msgSend(v7, "markChanged");
      if (v248)
        objc_msgSend(v248, "updatePrimaryServiceIfNeeded");
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkClientIdentifier")))
  {
    objc_msgSend(v6, "networkClientIdentifier");
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "networkClientIdentifier");
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    v118 = HMFEqualObjects();

    if ((v118 & 1) == 0)
    {
      objc_msgSend(v6, "networkClientIdentifier");
      v119 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setNetworkClientIdentifier:", v119);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkRouterUUID")))
  {
    objc_msgSend(v6, "networkRouterUUID");
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "networkRouterUUID");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v121, "UUIDString");
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    v123 = HMFEqualObjects();

    if ((v123 & 1) == 0)
    {
      v124 = objc_alloc(MEMORY[0x24BDD1880]);
      objc_msgSend(v6, "networkRouterUUID");
      v125 = (void *)objc_claimAutoreleasedReturnValue();
      v126 = (void *)objc_msgSend(v124, "initWithUUIDString:", v125);
      objc_msgSend(v253, "setNetworkRouterUUID:", v126);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "currentNetworkProtectionMode");
  v127 = objc_claimAutoreleasedReturnValue();
  if (v127)
  {
    v128 = (void *)v127;
    objc_msgSend(v6, "currentNetworkProtectionMode");
    v129 = (void *)objc_claimAutoreleasedReturnValue();
    v130 = objc_msgSend(v129, "integerValue");
    v131 = objc_msgSend(v253, "currentNetworkProtectionMode");

    if (v130 != v131)
    {
      objc_msgSend(v6, "currentNetworkProtectionMode");
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setCurrentNetworkProtectionMode:", objc_msgSend(v132, "integerValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "wiFiCredentialType");
  v133 = objc_claimAutoreleasedReturnValue();
  if (v133)
  {
    v134 = (void *)v133;
    objc_msgSend(v6, "wiFiCredentialType");
    v135 = (void *)objc_claimAutoreleasedReturnValue();
    v136 = objc_msgSend(v135, "integerValue");
    v137 = objc_msgSend(v253, "wiFiCredentialType");

    if (v136 != v137)
    {
      v138 = (void *)MEMORY[0x227676638]();
      HMFGetOSLogHandle();
      v139 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v139, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v140 = (id)objc_claimAutoreleasedReturnValue();
        v141 = objc_msgSend(v253, "wiFiCredentialType");
        objc_msgSend(v6, "wiFiCredentialType");
        v142 = (void *)objc_claimAutoreleasedReturnValue();
        v143 = objc_msgSend(v142, "integerValue");
        *(_DWORD *)buf = 138544130;
        v277 = v140;
        v278 = 2048;
        v279 = v141;
        v280 = 2048;
        v281 = v143;
        v282 = 2112;
        v283 = v253;
        _os_log_impl(&dword_2218F0000, v139, OS_LOG_TYPE_INFO, "%{public}@Updating wiFiCredentialType from [%lu] to [%lu] for accessory: %@", buf, 0x2Au);

      }
      objc_autoreleasePoolPop(v138);
      objc_msgSend(v6, "wiFiCredentialType");
      v144 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setWiFiCredentialType:", objc_msgSend(v144, "integerValue"));

      objc_msgSend(v7, "markChanged");
      v145 = (void *)MEMORY[0x24BE3F1B0];
      v146 = *MEMORY[0x24BDD67C0];
      v273[0] = *MEMORY[0x24BDD67B8];
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", objc_msgSend(v253, "supportsWiFiReconfiguration"));
      v147 = (void *)objc_claimAutoreleasedReturnValue();
      v274[0] = v147;
      v273[1] = *MEMORY[0x24BDD67A8];
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v253, "wiFiCredentialType"));
      v148 = (void *)objc_claimAutoreleasedReturnValue();
      v274[1] = v148;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v274, v273, 2);
      v149 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v145, "entitledMessageWithName:messagePayload:", v146, v149);
      v150 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(obj, "addObject:", v150);

    }
  }
  objc_msgSend(v6, "networkClientLAN");
  v151 = objc_claimAutoreleasedReturnValue();
  if (v151)
  {
    v152 = (void *)v151;
    objc_msgSend(v6, "networkClientLAN");
    v153 = (void *)objc_claimAutoreleasedReturnValue();
    v154 = objc_msgSend(v153, "integerValue");
    v155 = objc_msgSend(v253, "networkClientLAN");

    if (v154 != v155)
    {
      objc_msgSend(v6, "networkClientLAN");
      v156 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setNetworkClientLAN:", objc_msgSend(v156, "integerValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("networkClientProfileFingerprint")))
  {
    objc_msgSend(v6, "networkClientProfileFingerprint");
    v157 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "networkClientProfileFingerprint");
    v158 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v158, "UUIDString");
    v159 = (void *)objc_claimAutoreleasedReturnValue();
    v160 = HMFEqualObjects();

    if ((v160 & 1) == 0)
    {
      v161 = objc_alloc(MEMORY[0x24BDD1880]);
      objc_msgSend(v6, "networkClientProfileFingerprint");
      v162 = (void *)objc_claimAutoreleasedReturnValue();
      v163 = (void *)objc_msgSend(v161, "initWithUUIDString:", v162);
      objc_msgSend(v253, "setNetworkClientProfileFingerprint:", v163);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("appliedFirewallWANRules")))
  {
    objc_msgSend(v6, "appliedFirewallWANRules");
    v164 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDAccessoryAllowedHost allowedHostsFromJSONFirewallWANRules:](HMDAccessoryAllowedHost, "allowedHostsFromJSONFirewallWANRules:", v164);
    v165 = (void *)objc_claimAutoreleasedReturnValue();

    if (v165)
    {
      objc_msgSend(v253, "allowedHosts");
      v166 = (void *)objc_claimAutoreleasedReturnValue();
      v167 = HMFEqualObjects();

      if ((v167 & 1) == 0)
      {
        objc_msgSend(v253, "setAllowedHosts:", v165);
        objc_msgSend(v7, "markChanged");
        v168 = (void *)MEMORY[0x24BE3F1B0];
        v169 = *MEMORY[0x24BDD6798];
        v271 = *MEMORY[0x24BDD6790];
        objc_msgSend(v253, "allowedHosts");
        v170 = (void *)objc_claimAutoreleasedReturnValue();
        encodeRootObjectForSPIClients(v170);
        v171 = (void *)objc_claimAutoreleasedReturnValue();
        v272 = v171;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v272, &v271, 1);
        v172 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v168, "entitledMessageWithName:messagePayload:", v169, v172);
        v173 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(obj, "addObject:", v173);
      }
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("wiFiUniquePreSharedKey")))
  {
    objc_msgSend(v6, "wiFiUniquePreSharedKey");
    v174 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "wiFiUniquePreSharedKey");
    v175 = (void *)objc_claimAutoreleasedReturnValue();
    v176 = HMFEqualObjects();

    if ((v176 & 1) == 0)
    {
      objc_msgSend(v6, "wiFiUniquePreSharedKey");
      v177 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setWiFiUniquePreSharedKey:", v177);

      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("pendingConfigurationIdentifier")))
  {
    objc_msgSend(v6, "pendingConfigurationIdentifier");
    v178 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "pendingConfigurationIdentifier");
    v179 = (void *)objc_claimAutoreleasedReturnValue();
    v180 = HMFEqualObjects();

    if ((v180 & 1) == 0)
    {
      objc_msgSend(v6, "pendingConfigurationIdentifier");
      v181 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setPendingConfigurationIdentifier:", v181);

      objc_msgSend(v7, "markChanged");
    }
  }
  v240 = v74;
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("lastNetworkAccessViolationOccurrenceSince1970"))
    && objc_msgSend(v6, "propertyWasSet:", CFSTR("lastNetworkAccessViolationResetSince1970")))
  {
    objc_msgSend(v253, "networkAccessViolation");
    v182 = (void *)objc_claimAutoreleasedReturnValue();
    v183 = [HMDAccessoryNetworkAccessViolation alloc];
    objc_msgSend(v6, "lastNetworkAccessViolationOccurrenceSince1970");
    v184 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "lastNetworkAccessViolationResetSince1970");
    v185 = (void *)objc_claimAutoreleasedReturnValue();
    v186 = -[HMDAccessoryNetworkAccessViolation initWithLastViolationTimeInterval:lastViolationResetTimeInterval:](v183, "initWithLastViolationTimeInterval:lastViolationResetTimeInterval:", v184, v185);

    if ((HMFEqualObjects() & 1) == 0)
    {
      objc_msgSend(v253, "setNetworkAccessViolation:", v186);
      v187 = -[HMDAccessoryNetworkAccessViolation hasCurrentViolation](v186, "hasCurrentViolation");
      v188 = v187 ^ objc_msgSend(v182, "hasCurrentViolation");
      objc_msgSend(v182, "lastViolationDate");
      v189 = (void *)objc_claimAutoreleasedReturnValue();
      -[HMDAccessoryNetworkAccessViolation lastViolationDate](v186, "lastViolationDate");
      v190 = (void *)objc_claimAutoreleasedReturnValue();
      v191 = v190;
      v192 = 0;
      if (v189 && v186)
      {
        objc_msgSend(v190, "timeIntervalSinceDate:", v189);
        v192 = v193 >= 86400.0;
      }
      v194 = v191;
      if ((v188 | v192) == 1)
        objc_msgSend(v7, "markChanged");
      else
        objc_msgSend(v7, "markLocalChanged");
      v6 = v247;
      encodeRootObjectForSPIClients(v186);
      v195 = (void *)objc_claimAutoreleasedReturnValue();
      v196 = (void *)MEMORY[0x24BE3F1B0];
      v197 = *MEMORY[0x24BDD6788];
      v269 = *MEMORY[0x24BDD6780];
      v270 = v195;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v270, &v269, 1);
      v198 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v196, "entitledMessageWithName:messagePayload:", v197, v198);
      v199 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(obj, "addObject:", v199);
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("configuredNetworkProtectionGroupUUIDString")))
  {
    objc_msgSend(v6, "configuredNetworkProtectionGroupUUIDString");
    v200 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "configuredNetworkProtectionGroupUUID");
    v201 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v201, "UUIDString");
    v202 = (void *)objc_claimAutoreleasedReturnValue();
    v203 = HMFEqualObjects();

    if ((v203 & 1) == 0)
    {
      objc_msgSend(v6, "configuredNetworkProtectionGroupUUIDString");
      v204 = (void *)objc_claimAutoreleasedReturnValue();
      if (v204)
        v205 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", v204);
      else
        v205 = 0;
      objc_msgSend(v253, "configuredNetworkProtectionGroupUUID");
      v206 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setConfiguredNetworkProtectionGroupUUID:", v205);
      if (v206)
      {
        v267 = CFSTR("HMDAccessoryPreviousConfiguredNetworkProtectionGroupUUIDKey");
        v268 = v206;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v268, &v267, 1);
        v207 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v207 = 0;
      }
      logAndPostNotification(CFSTR("HMDAccessoryConfiguredNetworkProtectionGroupUpdatedNotification"), v253, v207);
      objc_msgSend(v7, "markChanged");

    }
  }
  objc_msgSend(v6, "suspendCapable");
  v208 = objc_claimAutoreleasedReturnValue();
  if (v208)
  {
    v209 = (void *)v208;
    v210 = objc_msgSend(v253, "isSuspendCapable");
    objc_msgSend(v6, "suspendCapable");
    v211 = (void *)objc_claimAutoreleasedReturnValue();
    v212 = objc_msgSend(v211, "BOOLValue");

    if (v210 != v212)
    {
      objc_msgSend(v6, "suspendCapable");
      v213 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setSuspendCapable:", objc_msgSend(v213, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "lastSeenDate");
  v214 = objc_claimAutoreleasedReturnValue();
  if (v214)
  {
    v215 = (void *)v214;
    objc_msgSend(v6, "lastSeenDate");
    v216 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v253, "lastSeenDate");
    v217 = (void *)objc_claimAutoreleasedReturnValue();
    v218 = objc_msgSend(v216, "isEqualToDate:", v217);

    if ((v218 & 1) == 0)
    {
      objc_msgSend(v6, "lastSeenDate");
      v219 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setLastSeenDate:", v219);

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "lowBattery");
  v220 = objc_claimAutoreleasedReturnValue();
  if (v220)
  {
    v221 = (void *)v220;
    v222 = objc_msgSend(v253, "isLowBattery");
    objc_msgSend(v6, "lowBattery");
    v223 = (void *)objc_claimAutoreleasedReturnValue();
    v224 = objc_msgSend(v223, "BOOLValue");

    if (v222 != v224)
    {
      objc_msgSend(v6, "lowBattery");
      v225 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setLowBattery:", objc_msgSend(v225, "BOOLValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v242, "transport");
  v252 = (void *)objc_claimAutoreleasedReturnValue();
  v226 = dispatch_group_create();
  v256 = 0u;
  v257 = 0u;
  v258 = 0u;
  v259 = 0u;
  obja = obj;
  v227 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v256, v266, 16);
  if (v227)
  {
    v228 = v227;
    v229 = *(_QWORD *)v257;
    do
    {
      for (i = 0; i != v228; ++i)
      {
        if (*(_QWORD *)v257 != v229)
          objc_enumerationMutation(obja);
        v231 = *(void **)(*((_QWORD *)&v256 + 1) + 8 * i);
        dispatch_group_enter(v226);
        if (v242)
        {
          v232 = (void *)objc_msgSend(v231, "mutableCopy");
          objc_msgSend(v232, "setTransport:", v252);
          v233 = (id)objc_msgSend(v232, "copy");

        }
        else
        {
          v233 = v231;
        }
        objc_msgSend(v253, "msgDispatcher");
        v234 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v253, "uuid");
        v235 = (void *)objc_claimAutoreleasedReturnValue();
        v254[0] = MEMORY[0x24BDAC760];
        v254[1] = 3221225472;
        v254[2] = ____transactionAccessoryUpdated_block_invoke_992;
        v254[3] = &unk_24E79C240;
        v255 = v226;
        objc_msgSend(v234, "sendMessage:target:andInvokeCompletionHandler:", v233, v235, v254);

      }
      v228 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v256, v266, 16);
    }
    while (v228);
  }

  dispatch_group_wait(v226, 0);
  objc_msgSend(v242, "responseHandler");
  v236 = (void *)objc_claimAutoreleasedReturnValue();

  if (v236)
  {
    objc_msgSend(v242, "responseHandler");
    v237 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    v237[2](v237, 0, 0);

  }
  if (group)
    dispatch_group_leave(group);

}

uint64_t ____transactionAccessoryUpdated_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleUpdatedName:", *(_QWORD *)(a1 + 40));
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleUpdatedName:", *(_QWORD *)(a1 + 40));
}

void ____transactionAccessoryUpdated_block_invoke_992(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id EpochIntervalFromDate(void *a1)
{
  void *v1;

  if (a1)
  {
    v1 = (void *)MEMORY[0x24BDD16E0];
    objc_msgSend(a1, "timeIntervalSince1970");
    objc_msgSend(v1, "numberWithDouble:");
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_221DC8260(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&localDeviceIDSIdentifier_lock);
  _Unwind_Resume(a1);
}

void sub_221DCAA3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_221DCD89C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DCDB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DCEDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13)
{
  id *v13;
  id *v14;
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v13);
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak((id *)(v17 - 112));
  _Unwind_Resume(a1);
}

void sub_221DCF23C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_221DCF3AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_221DCF51C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_221DCFB74(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DCFE58(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_221DD0054(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DD5044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_221DDA9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DDD210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DE37BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE3824(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE388C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE3E48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE4304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221DE44B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE484C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221DE56F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_221DE5AA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE5CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_221DE60F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE691C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE72BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE7860(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221DE794C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraStreamMessagingReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
              goto LABEL_85;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
              goto LABEL_88;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedNegotiationRequest;
          goto LABEL_86;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x10u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
              goto LABEL_85;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationRequest;
          goto LABEL_86;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x20u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
              goto LABEL_85;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentNegotiationResponse;
          goto LABEL_86;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 4u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
              goto LABEL_85;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedStartRequest;
          goto LABEL_86;
        case 5u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x40u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
              goto LABEL_85;
            }
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v19 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              v23 = v41++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartRequest;
          goto LABEL_86;
        case 6u:
          v45 = 0;
          v46 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 0x80u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
              goto LABEL_85;
            }
            v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
            *(_QWORD *)(a2 + v47) = v48 + 1;
            v19 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              v23 = v46++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentStartResponse;
          goto LABEL_86;
        case 7u:
          v50 = 0;
          v51 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 8u;
          while (2)
          {
            v52 = *v3;
            v53 = *(_QWORD *)(a2 + v52);
            if (v53 == -1 || v53 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
              goto LABEL_85;
            }
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v53);
            *(_QWORD *)(a2 + v52) = v53 + 1;
            v19 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              v23 = v51++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
                goto LABEL_88;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__sentConnSetup;
          goto LABEL_86;
        case 8u:
          v55 = 0;
          v56 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v19 |= (unint64_t)(v59 & 0x7F) << v55;
        if ((v59 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
          goto LABEL_86;
        }
        v55 += 7;
        v23 = v56++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
          goto LABEL_88;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraStreamMessaging__receivedConnSetup;
LABEL_85:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_86:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_88:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221DEA540(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221DEE150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_221DEE550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__71129(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__71130(uint64_t a1)
{

}

void sub_221DF2534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__71801(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__71802(uint64_t a1)
{

}

void sub_221DF5480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221DF5CC0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF5FE8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF6488(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF6678(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF6764(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF68BC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF71D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF73B8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DF7754(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFD3E4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFD564(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFD64C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFDC60(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFDEBC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFDF38(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221DFFD00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221E00220(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E003CC(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221E00580(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221E00644(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E0079C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E00904(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E00AD0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E03094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E03190(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_221E043D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E04548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E049F4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E04EAC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E0524C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E05C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E06240(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E08A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E0915C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E099C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a29);
  _Unwind_Resume(a1);
}

void sub_221E0B124(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E0C174(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_221E0C8F4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_221E0CB88(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_221E0F598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  uint64_t v14;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x260]);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose((const void *)(v14 - 192), 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E1072C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Block_object_dispose(&STACK[0x2D8], 8);
  _Block_object_dispose(&STACK[0x308], 8);
  _Block_object_dispose(&STACK[0x338], 8);
  _Block_object_dispose(&STACK[0x358], 8);
  objc_destroyWeak((id *)&STACK[0x378]);
  _Unwind_Resume(a1);
}

void sub_221E11154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E1208C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E137B8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E13E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221E14950(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_221E16EEC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_221E17D28(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1B554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E1B984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221E1CA44(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1CF14(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1DEF8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1E1A8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1E4E4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1E6E8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221E1E90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__72483(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__72484(uint64_t a1)
{

}

void __transactionAccessoryUpdated_72485(void *a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  char v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  char v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  BOOL v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  char v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  char v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  NSObject *v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  int v72;
  void *v73;
  void *v74;
  uint64_t v75;
  BOOL v76;
  void *v77;
  _QWORD *v78;
  NSObject *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  char v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  char v93;
  void *v94;
  void *v95;
  int v96;
  void *v97;
  int v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  char v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  char v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  char v118;
  void *v119;
  uint64_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  void *v124;
  void *v125;
  id v126;
  void *v127;
  void *v128;
  void *v129;
  char v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  char v135;
  void *v136;
  _QWORD *v137;
  NSObject *v138;
  id v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  char v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  char v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  int v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  char v160;
  void *v161;
  void *v162;
  NSObject *v163;
  id v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  char v172;
  void *v173;
  void *v174;
  NSObject *v175;
  id v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  char v184;
  void *v185;
  _QWORD *v186;
  NSObject *v187;
  id v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  char v195;
  void *v196;
  _QWORD *v197;
  NSObject *v198;
  id v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  BOOL v205;
  void *v206;
  void *v207;
  void *v208;
  int v209;
  int v210;
  void *v211;
  _QWORD *v212;
  NSObject *v213;
  id v214;
  id v215;
  void *v216;
  id v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  char v222;
  void *v223;
  _QWORD *v224;
  NSObject *v225;
  id v226;
  void *v227;
  void *v228;
  void *v229;
  void *v230;
  int v231;
  void *v232;
  void *v233;
  BOOL v234;
  void *v235;
  void *v236;
  void *v237;
  int v238;
  int v239;
  void *v240;
  _QWORD *v241;
  NSObject *v242;
  id v243;
  id v244;
  void *v245;
  id v246;
  void *v247;
  void *v248;
  void *v249;
  void *v250;
  char v251;
  void *v252;
  _QWORD *v253;
  NSObject *v254;
  id v255;
  void *v256;
  void *v257;
  void *v258;
  void *v259;
  int v260;
  void *v261;
  void *v262;
  int v263;
  int v264;
  void *v265;
  _QWORD *v266;
  NSObject *v267;
  id v268;
  id v269;
  void *v270;
  id v271;
  void *v272;
  void *v273;
  void *v274;
  int v275;
  int v276;
  void *v277;
  _QWORD *v278;
  NSObject *v279;
  id v280;
  id v281;
  void *v282;
  id v283;
  void *v284;
  void *v285;
  void *v286;
  void *v287;
  char v288;
  void *v289;
  _QWORD *v290;
  NSObject *v291;
  id v292;
  void *v293;
  void *v294;
  void *v295;
  void *v296;
  void *v297;
  void *v298;
  char v299;
  void *v300;
  _QWORD *v301;
  NSObject *v302;
  id v303;
  void *v304;
  void *v305;
  void *v306;
  void *v307;
  void *v308;
  int v309;
  int v310;
  void *v311;
  _QWORD *v312;
  NSObject *v313;
  id v314;
  id v315;
  void *v316;
  id v317;
  void *v318;
  NSObject *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t i;
  void *v323;
  void *v324;
  void *v325;
  id v326;
  void *v327;
  void *v328;
  id v329;
  void *v330;
  void *v331;
  void *v332;
  void *v333;
  id v334;
  id objb;
  int obj;
  id obja;
  id v338;
  _QWORD *v339;
  _QWORD v340[4];
  id v341;
  _QWORD v342[4];
  NSObject *v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  uint8_t v348[128];
  uint8_t buf[4];
  id v350;
  __int16 v351;
  id v352;
  __int16 v353;
  id v354;
  __int16 v355;
  id v356;
  uint64_t v357;

  v357 = *MEMORY[0x24BDAC8D0];
  v339 = a1;
  v334 = a2;
  v338 = a3;
  objc_msgSend(v338, "transactionResult");
  v333 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x24BDBCEB8];
  +[HMDHAPAccessoryTransaction properties](HMDHAPAccessoryTransaction, "properties");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "arrayWithCapacity:", objc_msgSend(v6, "count"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v339, "home");
  v332 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v334, "uniqueIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    objc_msgSend(v339, "uniqueIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "uniqueIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v9, "isEqual:", v10);

    if ((v11 & 1) == 0)
    {
      objc_msgSend(v334, "uniqueIdentifier");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setUniqueIdentifier:", v12);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "bridgeUUID");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    objc_msgSend(v339, "bridge");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "uuid");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "UUIDString");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "bridgeUUID");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v16, "isEqual:", v17);

    if ((v18 & 1) == 0)
    {
      v19 = objc_alloc(MEMORY[0x24BDD1880]);
      objc_msgSend(v334, "bridgeUUID");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = (void *)objc_msgSend(v19, "initWithUUIDString:", v20);
      objc_msgSend(v339, "_updateHost:", v21);

      objc_msgSend(v333, "markChanged");
      objc_msgSend(v333, "markSaveToAssistant");
    }
  }
  objc_msgSend(v334, "roomUUID");
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (v22)
  {
    objc_msgSend(v339, "room");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "name");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    v25 = objc_alloc(MEMORY[0x24BDD1880]);
    objc_msgSend(v334, "roomUUID");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = (void *)objc_msgSend(v25, "initWithUUIDString:", v26);

    v28 = (void *)MEMORY[0x227676638]();
    v29 = v339;
    HMFGetOSLogHandle();
    v30 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      objb = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "home");
      v331 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v331, "roomWithUUID:", v27);
      v330 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v330, "name");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "room");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v32, "uuid");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      HMFEqualObjects();

      HMFBooleanToString();
      v34 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v350 = objb;
      v351 = 2112;
      v352 = v24;
      v353 = 2112;
      v354 = v31;
      v355 = 2112;
      v356 = v34;
      _os_log_impl(&dword_2218F0000, v30, OS_LOG_TYPE_INFO, "%{public}@transactionObjectUpdated: old: %@, new:%@, same Room: %@", buf, 0x2Au);

    }
    objc_autoreleasePoolPop(v28);
    if (v27 && objc_msgSend(v29, "_updateRoom:source:", v27, objc_msgSend(v333, "source")))
    {
      objc_msgSend(v333, "markChanged");
      objc_msgSend(v333, "markSaveToAssistant");
    }
    objc_msgSend(v29, "_handleRoomChangedFromOldRoomName:", v24);

  }
  objc_msgSend(v334, "accessoryFlags");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  if (v35)
  {
    objc_msgSend(v339, "accessoryFlags");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "accessoryFlags");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend(v36, "isEqual:", v37);

    if ((v38 & 1) == 0)
    {
      objc_msgSend(v334, "accessoryFlags");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "updateAccessoryFlagsAndNotifyClients:", v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      if (v40)
      {
        objc_msgSend(v7, "addObject:", v40);
        objc_msgSend(v333, "markChanged");
      }

    }
  }
  objc_msgSend(v334, "certificationStatus");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  if (v41)
  {
    objc_msgSend(v334, "certificationStatus");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v42, "unsignedIntegerValue"))
    {
      v43 = objc_msgSend(v339, "certificationStatus");
      objc_msgSend(v334, "certificationStatus");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      v45 = v43 == objc_msgSend(v44, "unsignedIntegerValue");

      if (!v45)
      {
        objc_msgSend(v334, "certificationStatus");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v339, "setCertificationStatus:", objc_msgSend(v46, "unsignedIntegerValue"));

        objc_msgSend(v333, "markChanged");
      }
    }
    else
    {

    }
  }
  objc_msgSend(v334, "broadcastKey");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  if (v47)
  {
    objc_msgSend(v339, "broadcastKey");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "broadcastKey");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = objc_msgSend(v48, "isEqualToData:", v49);

    if ((v50 & 1) == 0)
    {
      objc_msgSend(v334, "broadcastKey");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setBroadcastKey:", v51);

      objc_msgSend(v334, "broadcastKey");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "keyUpdatedStateNumber");
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "keyUpdatedTime");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setBroadcastKey:keyUpdatedStateNumber:keyUpdatedTime:", v52, v53, v54);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "pairingUsername");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  if (v55)
  {
    objc_msgSend(v334, "publicKey");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v56)
    {

      goto LABEL_35;
    }
    objc_msgSend(v339, "pairingUsername");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "pairingUsername");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v57, "isEqual:", v58))
    {
      objc_msgSend(v339, "publicKey");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "publicKey");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      v61 = objc_msgSend(v59, "isEqual:", v60);

      if ((v61 & 1) != 0)
        goto LABEL_35;
    }
    else
    {

    }
    objc_msgSend(v334, "pairingUsername");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "publicKey");
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "setPairingUsername:publicKey:", v62, v63);

    objc_msgSend(v333, "markChanged");
  }
LABEL_35:
  objc_msgSend(v334, "transportInformation");
  v64 = (void *)objc_claimAutoreleasedReturnValue();

  if (v64)
  {
    v65 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v67 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v68 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v333, "source");
      HMFBooleanToString();
      v69 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "transportInformation");
      v70 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v350 = v68;
      v351 = 2112;
      v352 = v69;
      v353 = 2112;
      v354 = v70;
      _os_log_impl(&dword_2218F0000, v67, OS_LOG_TYPE_INFO, "%{public}@Received updated transportInformation from localSource: %@, transportInformation: %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v65);
    objc_msgSend(v334, "transportInformation");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    v72 = objc_msgSend(v339, "updateTransportInformation:localSource:", v71, (unint64_t)objc_msgSend(v333, "source") < 2);

    if (v72)
      objc_msgSend(v333, "markChanged");
  }
  objc_msgSend(v334, "communicationProtocol");
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  if (v73)
  {
    objc_msgSend(v334, "communicationProtocol");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v75 = objc_msgSend(v74, "integerValue");
    v76 = v75 == objc_msgSend(v339, "communicationProtocol");

    if (!v76)
    {
      v77 = (void *)MEMORY[0x227676638]();
      v78 = v339;
      HMFGetOSLogHandle();
      v79 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v80 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v78, "communicationProtocol");
        HAPCommunicationProtocolDescription();
        v81 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "communicationProtocol");
        v82 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v82, "integerValue");
        HAPCommunicationProtocolDescription();
        v83 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v80;
        v351 = 2112;
        v352 = v81;
        v353 = 2112;
        v354 = v83;
        _os_log_impl(&dword_2218F0000, v79, OS_LOG_TYPE_INFO, "%{public}@Updating communication protocol from %@ to %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v77);
      objc_msgSend(v334, "communicationProtocol");
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v78, "setCommunicationProtocol:", objc_msgSend(v84, "integerValue"));

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "accessorySetupHash");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  if (v85)
  {
    objc_msgSend(v339, "setupHash");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "accessorySetupHash");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    v88 = objc_msgSend(v86, "isEqual:", v87);

    if ((v88 & 1) == 0)
    {
      objc_msgSend(v334, "accessorySetupHash");
      v89 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setSetupHash:", v89);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "targetUUIDs");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  if (v90)
  {
    objc_msgSend(v339, "targetUUIDs");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "targetUUIDs");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    v93 = objc_msgSend(v91, "isEqual:", v92);

    if ((v93 & 1) == 0)
    {
      objc_msgSend(v334, "targetUUIDs");
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "updateTargetUUIDs:", v94);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "hardwareSupport");
  v95 = (void *)objc_claimAutoreleasedReturnValue();
  if (v95)
  {
    v96 = objc_msgSend(v339, "hardwareSupport");
    objc_msgSend(v334, "hardwareSupport");
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    v98 = objc_msgSend(v97, "BOOLValue");

    if (v96 != v98)
    {
      objc_msgSend(v334, "hardwareSupport");
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setHardwareSupport:", objc_msgSend(v99, "BOOLValue"));

      objc_msgSend(v339, "notifyClientsOfTargetControlSupportUpdate");
      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "connectivityInfo");
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  if (v100)
  {
    objc_msgSend(v339, "connectivityInfo");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "connectivityInfo");
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    v103 = HMFEqualObjects();

    if ((v103 & 1) == 0)
    {
      objc_msgSend(v334, "connectivityInfo");
      v104 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setConnectivityInfo:", v104);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "wiFiTransportCapabilities");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  if (v105)
  {
    objc_msgSend(v339, "wiFiTransportCapabilities");
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "wiFiTransportCapabilities");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    v108 = objc_msgSend(v106, "isEqualToNumber:", v107);

    if ((v108 & 1) == 0)
    {
      objc_msgSend(v334, "wiFiTransportCapabilities");
      v109 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setWiFiTransportCapabilities:", v109);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "sleepInterval");
  v110 = (void *)objc_claimAutoreleasedReturnValue();
  if (v110)
  {
    objc_msgSend(v339, "sleepInterval");
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "sleepInterval");
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    v113 = objc_msgSend(v111, "isEqualToNumber:", v112);

    if ((v113 & 1) == 0)
    {
      objc_msgSend(v334, "sleepInterval");
      v114 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setSleepInterval:", v114);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "enhancedAuthMethod");
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  if (v115)
  {
    objc_msgSend(v339, "internalEnhancedAuthMethod");
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "enhancedAuthMethod");
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    v118 = HMFEqualObjects();

    if ((v118 & 1) == 0)
    {
      os_unfair_recursive_lock_lock_with_options();
      objc_msgSend(v334, "enhancedAuthMethod");
      v119 = (void *)objc_claimAutoreleasedReturnValue();
      v120 = objc_msgSend(v119, "copy");
      v121 = (void *)v339[62];
      v339[62] = v120;

      objc_msgSend(v334, "enhancedAuthConfigNumber");
      v122 = (void *)objc_claimAutoreleasedReturnValue();
      v123 = objc_msgSend(v122, "copy");
      v124 = (void *)v339[61];
      v339[61] = v123;

      os_unfair_recursive_lock_unlock();
      objc_msgSend(v339, "handleUpdatedAuthMethod");
      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "primaryProfileVersion");
  v125 = (void *)objc_claimAutoreleasedReturnValue();

  if (v125)
  {
    v126 = objc_alloc(MEMORY[0x24BE3F2A8]);
    objc_msgSend(v334, "primaryProfileVersion");
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    v128 = (void *)objc_msgSend(v126, "initWithVersionString:", v127);

    if (v128)
    {
      objc_msgSend(v339, "primaryProfileVersion");
      v129 = (void *)objc_claimAutoreleasedReturnValue();
      v130 = objc_msgSend(v128, "isEqualToVersion:", v129);

      if ((v130 & 1) == 0)
      {
        objc_msgSend(v339, "setPrimaryProfileVersion:", v128);
        objc_msgSend(v339, "networkRouterController");
        v131 = (void *)objc_claimAutoreleasedReturnValue();

        if (v131)
          objc_msgSend(v332, "_evaluateNetworkRouterManagementForTransaction:", v333);
        objc_msgSend(v333, "markChanged");
      }
    }

  }
  objc_msgSend(v334, "hasOnboardedForNaturalLighting");
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  if (v132)
  {
    objc_msgSend(v339, "hasOnboardedForNaturalLighting");
    v133 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v334, "hasOnboardedForNaturalLighting");
    v134 = (void *)objc_claimAutoreleasedReturnValue();
    v135 = objc_msgSend(v133, "isEqualToNumber:", v134);

    if ((v135 & 1) == 0)
    {
      v136 = (void *)MEMORY[0x227676638]();
      v137 = v339;
      HMFGetOSLogHandle();
      v138 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v138, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v139 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "hasOnboardedForNaturalLighting");
        v140 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v350 = v139;
        v351 = 2112;
        v352 = v140;
        _os_log_impl(&dword_2218F0000, v138, OS_LOG_TYPE_INFO, "%{public}@Updating has onboarded accessory for natural lighting: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v136);
      objc_msgSend(v334, "hasOnboardedForNaturalLighting");
      v141 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v137, "setHasOnboardedForNaturalLighting:", v141);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "initialServiceTypeUUIDs");
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  if (v142)
  {
    objc_msgSend(v334, "initialServiceTypeUUIDs");
    v143 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "initialServiceTypeUUIDs");
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    v145 = HMFEqualObjects();

    if ((v145 & 1) == 0)
    {
      objc_msgSend(v334, "initialServiceTypeUUIDs");
      v146 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setInitialServiceTypeUUIDs:", v146);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "needsOnboarding");
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  if (v147)
  {
    objc_msgSend(v334, "needsOnboarding");
    v148 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "needsOnboarding");
    v149 = (void *)objc_claimAutoreleasedReturnValue();
    v150 = HMFEqualObjects();

    if ((v150 & 1) == 0)
    {
      objc_msgSend(v334, "needsOnboarding");
      v151 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setNeedsOnboarding:", v151);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "suspendedState");
  v152 = (void *)objc_claimAutoreleasedReturnValue();
  if (v152)
  {
    objc_msgSend(v334, "suspendedState");
    v153 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", objc_msgSend(v339, "suspendedState"));
    v154 = (void *)objc_claimAutoreleasedReturnValue();
    v155 = objc_msgSend(v153, "isEqualToNumber:", v154);

    if (v155)
    {
      objc_msgSend(v334, "suspendedState");
      v156 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setSuspendedState:", objc_msgSend(v156, "unsignedIntegerValue"));

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v339, "handleUpdatedCHIPPropertiesOnAccessoryModel:actions:", v334, v333);
  objc_msgSend(v334, "supportsMatterAccessCode");
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  if (v157)
  {
    objc_msgSend(v334, "supportsMatterAccessCode");
    v158 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "supportsMatterAccessCode");
    v159 = (void *)objc_claimAutoreleasedReturnValue();
    v160 = HMFEqualObjects();

    if ((v160 & 1) == 0)
    {
      v161 = (void *)MEMORY[0x227676638]();
      objc_msgSend(v332, "accessCodeManager");
      v162 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v163 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v163, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v164 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v339, "supportsMatterAccessCode");
        v165 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsMatterAccessCode");
        v166 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v339, "uuid");
        v167 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v350 = v164;
        v351 = 2112;
        v352 = v165;
        v353 = 2112;
        v354 = v166;
        v355 = 2112;
        v356 = v167;
        _os_log_impl(&dword_2218F0000, v163, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterAccessCode from: %@ to: %@ on accessory: %@", buf, 0x2Au);

      }
      objc_autoreleasePoolPop(v161);
      objc_msgSend(v334, "supportsMatterAccessCode");
      v168 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "setSupportsMatterAccessCode:", v168);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "supportsMatterWalletKey");
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v169)
    goto LABEL_94;
  objc_msgSend(v334, "supportsMatterWalletKey");
  v170 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v339, "supportsMatterWalletKey");
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  v172 = HMFEqualObjects();

  if ((v172 & 1) == 0)
  {
    v173 = (void *)MEMORY[0x227676638]();
    objc_msgSend(v332, "nfcReaderKeyManager");
    v174 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v175 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v175, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v176 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "supportsMatterWalletKey");
      v177 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "supportsMatterWalletKey");
      v178 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v339, "uuid");
      v179 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v350 = v176;
      v351 = 2112;
      v352 = v177;
      v353 = 2112;
      v354 = v178;
      v355 = 2112;
      v356 = v179;
      _os_log_impl(&dword_2218F0000, v175, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterWalletKey from: %@ to: %@ on accessory: %@", buf, 0x2Au);

    }
    objc_autoreleasePoolPop(v173);
    objc_msgSend(v334, "supportsMatterWalletKey");
    v180 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "setSupportsMatterWalletKey:", v180);

    objc_msgSend(v333, "markChanged");
    obj = 1;
  }
  else
  {
LABEL_94:
    obj = 0;
  }
  objc_msgSend(v334, "supportsNaturalLighting");
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  if (v181)
  {
    objc_msgSend(v334, "supportsNaturalLighting");
    v182 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "supportsNaturalLighting");
    v183 = (void *)objc_claimAutoreleasedReturnValue();
    v184 = HMFEqualObjects();

    if ((v184 & 1) == 0)
    {
      v185 = (void *)MEMORY[0x227676638]();
      v186 = v339;
      HMFGetOSLogHandle();
      v187 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v187, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v188 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v186, "supportsNaturalLighting");
        v189 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsNaturalLighting");
        v190 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v188;
        v351 = 2112;
        v352 = v189;
        v353 = 2112;
        v354 = v190;
        _os_log_impl(&dword_2218F0000, v187, OS_LOG_TYPE_INFO, "%{public}@Updating supportsNaturalLighting from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v185);
      objc_msgSend(v334, "supportsNaturalLighting");
      v191 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v186, "setSupportsNaturalLighting:", v191);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "naturalLightingEnabled");
  v192 = (void *)objc_claimAutoreleasedReturnValue();
  if (v192)
  {
    objc_msgSend(v334, "naturalLightingEnabled");
    v193 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "naturalLightingEnabled");
    v194 = (void *)objc_claimAutoreleasedReturnValue();
    v195 = HMFEqualObjects();

    if ((v195 & 1) == 0)
    {
      v196 = (void *)MEMORY[0x227676638]();
      v197 = v339;
      HMFGetOSLogHandle();
      v198 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v198, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v199 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v197, "naturalLightingEnabled");
        v200 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "naturalLightingEnabled");
        v201 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v199;
        v351 = 2112;
        v352 = v200;
        v353 = 2112;
        v354 = v201;
        _os_log_impl(&dword_2218F0000, v198, OS_LOG_TYPE_INFO, "%{public}@Updating naturalLightingEnabled from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v196);
      objc_msgSend(v334, "naturalLightingEnabled");
      v202 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v197, "setNaturalLightingEnabled:", v202);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "supportsMatterWeekDaySchedule");
  v203 = (void *)objc_claimAutoreleasedReturnValue();
  if (v203)
  {

  }
  else
  {
    objc_msgSend(v334, "matterWeekDayScheduleCapacity");
    v204 = (void *)objc_claimAutoreleasedReturnValue();
    v205 = v204 == 0;

    if (v205)
      goto LABEL_122;
  }
  objc_msgSend(v339, "weekDayScheduleCapacity");
  v206 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v334, "supportsMatterWeekDaySchedule");
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  if (v207)
  {
    objc_msgSend(v334, "supportsMatterWeekDaySchedule");
    v208 = (void *)objc_claimAutoreleasedReturnValue();
    v209 = objc_msgSend(v208, "BOOLValue");
    v210 = objc_msgSend(v339, "supportsMatterWeekDaySchedule");

    if (v209 != v210)
    {
      v211 = (void *)MEMORY[0x227676638]();
      v212 = v339;
      HMFGetOSLogHandle();
      v213 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v213, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v214 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v212, "supportsMatterWeekDaySchedule");
        HMFBooleanToString();
        v215 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsMatterWeekDaySchedule");
        v216 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v216, "BOOLValue");
        HMFBooleanToString();
        v217 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v214;
        v351 = 2112;
        v352 = v215;
        v353 = 2112;
        v354 = v217;
        _os_log_impl(&dword_2218F0000, v213, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterWeekDaySchedule from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v211);
      objc_msgSend(v334, "supportsMatterWeekDaySchedule");
      v218 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v212, "setSupportsMatterWeekDaySchedule:", objc_msgSend(v218, "BOOLValue"));

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "matterWeekDayScheduleCapacity");
  v219 = (void *)objc_claimAutoreleasedReturnValue();
  if (v219)
  {
    objc_msgSend(v334, "matterWeekDayScheduleCapacity");
    v220 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "matterWeekDayScheduleCapacity");
    v221 = (void *)objc_claimAutoreleasedReturnValue();
    v222 = HMFEqualObjects();

    if ((v222 & 1) == 0)
    {
      v223 = (void *)MEMORY[0x227676638]();
      v224 = v339;
      HMFGetOSLogHandle();
      v225 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v225, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v226 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v224, "matterWeekDayScheduleCapacity");
        v227 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "matterWeekDayScheduleCapacity");
        v228 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v226;
        v351 = 2112;
        v352 = v227;
        v353 = 2112;
        v354 = v228;
        _os_log_impl(&dword_2218F0000, v225, OS_LOG_TYPE_INFO, "%{public}@Updating matterWeekDayScheduleCapacity from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v223);
      objc_msgSend(v334, "matterWeekDayScheduleCapacity");
      v229 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v224, "setMatterWeekDayScheduleCapacity:", v229);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v339, "weekDayScheduleCapacity");
  v230 = (void *)objc_claimAutoreleasedReturnValue();
  v231 = HMFEqualObjects();

  obj |= v231 ^ 1;
LABEL_122:
  objc_msgSend(v334, "supportsMatterYearDaySchedule");
  v232 = (void *)objc_claimAutoreleasedReturnValue();
  if (v232)
  {

  }
  else
  {
    objc_msgSend(v334, "matterYearDayScheduleCapacity");
    v233 = (void *)objc_claimAutoreleasedReturnValue();
    v234 = v233 == 0;

    if (v234)
      goto LABEL_136;
  }
  objc_msgSend(v339, "yearDayScheduleCapacity");
  v235 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v334, "supportsMatterYearDaySchedule");
  v236 = (void *)objc_claimAutoreleasedReturnValue();
  if (v236)
  {
    objc_msgSend(v334, "supportsMatterYearDaySchedule");
    v237 = (void *)objc_claimAutoreleasedReturnValue();
    v238 = objc_msgSend(v237, "BOOLValue");
    v239 = objc_msgSend(v339, "supportsMatterYearDaySchedule");

    if (v238 != v239)
    {
      v240 = (void *)MEMORY[0x227676638]();
      v241 = v339;
      HMFGetOSLogHandle();
      v242 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v242, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v243 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v241, "supportsMatterYearDaySchedule");
        HMFBooleanToString();
        v244 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsMatterYearDaySchedule");
        v245 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v245, "BOOLValue");
        HMFBooleanToString();
        v246 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v243;
        v351 = 2112;
        v352 = v244;
        v353 = 2112;
        v354 = v246;
        _os_log_impl(&dword_2218F0000, v242, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterYearDaySchedule from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v240);
      objc_msgSend(v334, "supportsMatterYearDaySchedule");
      v247 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v241, "setSupportsMatterYearDaySchedule:", objc_msgSend(v247, "BOOLValue"));

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "matterYearDayScheduleCapacity");
  v248 = (void *)objc_claimAutoreleasedReturnValue();
  if (v248)
  {
    objc_msgSend(v334, "matterYearDayScheduleCapacity");
    v249 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "matterYearDayScheduleCapacity");
    v250 = (void *)objc_claimAutoreleasedReturnValue();
    v251 = HMFEqualObjects();

    if ((v251 & 1) == 0)
    {
      v252 = (void *)MEMORY[0x227676638]();
      v253 = v339;
      HMFGetOSLogHandle();
      v254 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v254, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v255 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v253, "matterYearDayScheduleCapacity");
        v256 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "matterYearDayScheduleCapacity");
        v257 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v255;
        v351 = 2112;
        v352 = v256;
        v353 = 2112;
        v354 = v257;
        _os_log_impl(&dword_2218F0000, v254, OS_LOG_TYPE_INFO, "%{public}@Updating matterYearDayScheduleCapacity from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v252);
      objc_msgSend(v334, "matterYearDayScheduleCapacity");
      v258 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v253, "setMatterYearDayScheduleCapacity:", v258);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v339, "yearDayScheduleCapacity");
  v259 = (void *)objc_claimAutoreleasedReturnValue();
  v260 = HMFEqualObjects();

  obj |= v260 ^ 1;
LABEL_136:
  objc_msgSend(v334, "supportsMatCredACP");
  v261 = (void *)objc_claimAutoreleasedReturnValue();
  if (v261)
  {
    objc_msgSend(v334, "supportsMatCredACP");
    v262 = (void *)objc_claimAutoreleasedReturnValue();
    v263 = objc_msgSend(v262, "BOOLValue");
    v264 = objc_msgSend(v339, "supportsACWGProvisioning");

    if (v263 != v264)
    {
      v265 = (void *)MEMORY[0x227676638]();
      v266 = v339;
      HMFGetOSLogHandle();
      v267 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v267, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v268 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v266, "supportsACWGProvisioning");
        HMFBooleanToString();
        v269 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsMatCredACP");
        v270 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v270, "BOOLValue");
        HMFBooleanToString();
        v271 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v268;
        v351 = 2112;
        v352 = v269;
        v353 = 2112;
        v354 = v271;
        _os_log_impl(&dword_2218F0000, v267, OS_LOG_TYPE_INFO, "%{public}@Updating supportsACWGProvisioning from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v265);
      objc_msgSend(v334, "supportsMatCredACP");
      v272 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v266, "setSupportsACWGProvisioning:", objc_msgSend(v272, "BOOLValue"));

      objc_msgSend(v333, "markChanged");
      obj = 1;
    }
  }
  objc_msgSend(v334, "supportsMatCredACB");
  v273 = (void *)objc_claimAutoreleasedReturnValue();
  if (v273)
  {
    objc_msgSend(v334, "supportsMatCredACB");
    v274 = (void *)objc_claimAutoreleasedReturnValue();
    v275 = objc_msgSend(v274, "BOOLValue");
    v276 = objc_msgSend(v339, "supportsACWGUWB");

    if (v275 != v276)
    {
      v277 = (void *)MEMORY[0x227676638]();
      v278 = v339;
      HMFGetOSLogHandle();
      v279 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v279, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v280 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v278, "supportsACWGUWB");
        HMFBooleanToString();
        v281 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "supportsMatCredACB");
        v282 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v282, "BOOLValue");
        HMFBooleanToString();
        v283 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v280;
        v351 = 2112;
        v352 = v281;
        v353 = 2112;
        v354 = v283;
        _os_log_impl(&dword_2218F0000, v279, OS_LOG_TYPE_INFO, "%{public}@Updating supportsACWGUWB from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v277);
      objc_msgSend(v334, "supportsMatCredACB");
      v284 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v278, "setSupportsACWGUWB:", objc_msgSend(v284, "BOOLValue"));

      objc_msgSend(v333, "markChanged");
      obj = 1;
    }
  }
  objc_msgSend(v334, "matCredRGSI");
  v285 = (void *)objc_claimAutoreleasedReturnValue();
  if (v285)
  {
    objc_msgSend(v334, "matCredRGSI");
    v286 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "readerGroupSubIdentifierACWG");
    v287 = (void *)objc_claimAutoreleasedReturnValue();
    v288 = HMFEqualObjects();

    if ((v288 & 1) == 0)
    {
      v289 = (void *)MEMORY[0x227676638]();
      v290 = v339;
      HMFGetOSLogHandle();
      v291 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v291, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v292 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v290, "readerGroupSubIdentifierACWG");
        v293 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "matCredRGSI");
        v294 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v292;
        v351 = 2112;
        v352 = v293;
        v353 = 2112;
        v354 = v294;
        _os_log_impl(&dword_2218F0000, v291, OS_LOG_TYPE_INFO, "%{public}@Updating readerGroupSubIdentifierACWG from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v289);
      objc_msgSend(v334, "matCredRGSI");
      v295 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v290, "setReaderGroupSubIdentifierACWG:", v295);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "preexistingMatCredRGI");
  v296 = (void *)objc_claimAutoreleasedReturnValue();
  if (v296)
  {
    objc_msgSend(v334, "preexistingMatCredRGI");
    v297 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v339, "preexistingReaderGroupIdentifierACWG");
    v298 = (void *)objc_claimAutoreleasedReturnValue();
    v299 = HMFEqualObjects();

    if ((v299 & 1) == 0)
    {
      v300 = (void *)MEMORY[0x227676638]();
      v301 = v339;
      HMFGetOSLogHandle();
      v302 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v302, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v303 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v301, "preexistingReaderGroupIdentifierACWG");
        v304 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "preexistingMatCredRGI");
        v305 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v303;
        v351 = 2112;
        v352 = v304;
        v353 = 2112;
        v354 = v305;
        _os_log_impl(&dword_2218F0000, v302, OS_LOG_TYPE_INFO, "%{public}@Updating preexistingReaderGroupIdentifierACWG from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v300);
      objc_msgSend(v334, "preexistingMatCredRGI");
      v306 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v301, "setPreexistingReaderGroupIdentifierACWG:", v306);

      objc_msgSend(v333, "markChanged");
    }
  }
  objc_msgSend(v334, "mfiCertifiedACWG");
  v307 = (void *)objc_claimAutoreleasedReturnValue();
  if (v307)
  {
    objc_msgSend(v334, "mfiCertifiedACWG");
    v308 = (void *)objc_claimAutoreleasedReturnValue();
    v309 = objc_msgSend(v308, "BOOLValue");
    v310 = objc_msgSend(v339, "mfiCertifiedACWG");

    if (v309 != v310)
    {
      v311 = (void *)MEMORY[0x227676638]();
      v312 = v339;
      HMFGetOSLogHandle();
      v313 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v313, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v314 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v312, "mfiCertifiedACWG");
        HMFBooleanToString();
        v315 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v334, "mfiCertifiedACWG");
        v316 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v316, "BOOLValue");
        HMFBooleanToString();
        v317 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v350 = v314;
        v351 = 2112;
        v352 = v315;
        v353 = 2112;
        v354 = v317;
        _os_log_impl(&dword_2218F0000, v313, OS_LOG_TYPE_INFO, "%{public}@Updating mfiCertifiedACWG from: %@ to: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v311);
      objc_msgSend(v334, "mfiCertifiedACWG");
      v318 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v312, "setMfiCertifiedACWG:", objc_msgSend(v318, "BOOLValue"));

      objc_msgSend(v333, "markChanged");
    }
  }
  if (obj)
    logAndPostNotification(CFSTR("HMDAccessorySupportsWalletKeyDidChangeNotification"), v339, 0);
  v319 = dispatch_group_create();
  v344 = 0u;
  v345 = 0u;
  v346 = 0u;
  v347 = 0u;
  obja = v7;
  v320 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v344, v348, 16);
  if (v320)
  {
    v321 = *(_QWORD *)v345;
    do
    {
      for (i = 0; i != v320; ++i)
      {
        if (*(_QWORD *)v345 != v321)
          objc_enumerationMutation(obja);
        v323 = *(void **)(*((_QWORD *)&v344 + 1) + 8 * i);
        dispatch_group_enter(v319);
        if (v338)
        {
          v324 = (void *)objc_msgSend(v323, "mutableCopy");
          objc_msgSend(v338, "transport");
          v325 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v324, "setTransport:", v325);
          v326 = (id)objc_msgSend(v324, "copy");

        }
        else
        {
          v326 = v323;
        }
        objc_msgSend(v339, "msgDispatcher");
        v327 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v339, "uuid");
        v328 = (void *)objc_claimAutoreleasedReturnValue();
        v342[0] = MEMORY[0x24BDAC760];
        v342[1] = 3221225472;
        v342[2] = ____transactionAccessoryUpdated_block_invoke_72499;
        v342[3] = &unk_24E79C240;
        v343 = v319;
        objc_msgSend(v327, "sendMessage:target:andInvokeCompletionHandler:", v326, v328, v342);

      }
      v320 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v344, v348, 16);
    }
    while (v320);
  }

  dispatch_group_wait(v319, 0);
  v340[0] = MEMORY[0x24BDAC760];
  v340[1] = 3221225472;
  v340[2] = ____transactionAccessoryUpdated_block_invoke_2_72500;
  v340[3] = &unk_24E791780;
  v329 = v333;
  v341 = v329;
  objc_msgSend(v339, "transactionAccessoryUpdatedForPreferredMediaUser:completionHandler:", v334, v340);
  objc_msgSend(v338, "respondWithSuccess");

}

void sub_221E2400C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void ____transactionAccessoryUpdated_block_invoke_72499(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2_72500(uint64_t result, int a2)
{
  if (a2)
    return objc_msgSend(*(id *)(result + 32), "markChanged");
  return result;
}

void sub_221E26F8C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E28F58(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E2BEA0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 224));
  _Unwind_Resume(a1);
}

void sub_221E2C144(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E2C244(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E2C6C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E2CC80(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E2CD80(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221E2D244(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221E2D41C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __handleUpdatedPassword(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  _BOOL4 v21;
  unsigned int v22;
  int v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id obj;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  _QWORD v44[4];
  id v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[5];
  _BYTE v57[128];
  __int128 buf;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v42 = a2;
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v40 = v3;
  objc_msgSend(v3, "services");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "copy");

  obj = v5;
  v38 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v50, v57, 16);
  if (v38)
  {
    v37 = *(_QWORD *)v51;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v51 != v37)
        {
          v7 = v6;
          objc_enumerationMutation(obj);
          v6 = v7;
        }
        v39 = v6;
        v8 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * v6);
        objc_msgSend(v8, "type");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("000000DA-0000-1000-8000-0026BB765291"));

        if (v10)
        {
          v48 = 0u;
          v49 = 0u;
          v46 = 0u;
          v47 = 0u;
          objc_msgSend(v8, "characteristics");
          v41 = (id)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
          if (!v11)
            goto LABEL_46;
          v43 = *(_QWORD *)v47;
          while (1)
          {
            v12 = 0;
            do
            {
              if (*(_QWORD *)v47 != v43)
                objc_enumerationMutation(v41);
              v13 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * v12);
              objc_msgSend(v13, "type");
              v14 = (void *)objc_claimAutoreleasedReturnValue();
              v15 = objc_msgSend(v14, "isEqualToString:", CFSTR("000000E4-0000-1000-8000-0026BB765291"));

              if (v15)
              {
                objc_msgSend(v13, "value");
                v16 = (void *)objc_claimAutoreleasedReturnValue();

                if (v16)
                {
                  objc_msgSend(v13, "value");
                  v17 = (void *)objc_claimAutoreleasedReturnValue();
                  v18 = v17;
                  if (v17)
                  {
                    v19 = objc_retainAutorelease(v17);
                    objc_msgSend(v19, "bytes");
                    objc_msgSend(v19, "length");

                    *(_QWORD *)&buf = 0;
                    v54 = 0;
                    v55 = 0;
                    v20 = 0;
                    v21 = 0;
                    if (!TLV8Get() && v54 == 1)
                    {
                      v22 = *(unsigned __int8 *)buf;
                      if (v22 > 1)
                        goto LABEL_21;
                      v23 = TLV8GetOrCopyCoalesced();
                      if (v23 == -6727 || !v54)
                      {
                        v20 = 0;
                        if (!v22)
                          goto LABEL_29;
                      }
                      else
                      {
                        if (v23)
                        {
LABEL_21:
                          v21 = 0;
                          v20 = 0;
                          goto LABEL_30;
                        }
                        v25 = objc_alloc(MEMORY[0x24BDD17C8]);
                        v20 = (id)objc_msgSend(v25, "initWithBytes:length:encoding:", (_QWORD)buf, v54, 4);
                        if (v55)
                        {
                          free(v55);
                          v55 = 0;
                        }
                        if (v20)
                        {
LABEL_29:
                          v21 = v22 != 0;
                          v20 = objc_retainAutorelease(v20);
                          goto LABEL_30;
                        }
                      }
                      v21 = 0;
                    }
LABEL_30:

                  }
                  else
                  {
                    v21 = 0;
                    v20 = 0;
                  }
                  v24 = v20;

                }
                else
                {
                  v21 = 0;
                  v24 = 0;
                }
                v77 = 0u;
                v78 = 0u;
                v75 = 0u;
                v76 = 0u;
                v73 = 0u;
                v74 = 0u;
                v71 = 0u;
                v72 = 0u;
                v69 = 0u;
                v70 = 0u;
                v67 = 0u;
                v68 = 0u;
                v65 = 0u;
                v66 = 0u;
                v63 = 0u;
                v64 = 0u;
                v61 = 0u;
                v62 = 0u;
                v59 = 0u;
                v60 = 0u;
                buf = 0u;
                v26 = v42;
                TLV8BufferInit();
                v27 = objc_retainAutorelease(v26);
                objc_msgSend(v27, "UTF8String");
                objc_msgSend(v27, "length");

                if (TLV8BufferAppend() || (LOBYTE(v55) = v42 != 0, TLV8BufferAppend()))
                {
                  v28 = 0;
                }
                else
                {
                  objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", buf);
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                }
                TLV8BufferFree();
                if (v21 != (v42 != 0) || v42 && (objc_msgSend(v24, "isEqualToString:", v27) & 1) == 0)
                {
                  v29 = (void *)MEMORY[0x227676638]();
                  v30 = v40;
                  HMFGetOSLogHandle();
                  v31 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
                  {
                    HMFGetLogIdentifier();
                    v32 = (void *)objc_claimAutoreleasedReturnValue();
                    LODWORD(buf) = 138543362;
                    *(_QWORD *)((char *)&buf + 4) = v32;
                    _os_log_impl(&dword_2218F0000, v31, OS_LOG_TYPE_INFO, "%{public}@password does not match send update", (uint8_t *)&buf, 0xCu);

                  }
                  objc_autoreleasePoolPop(v29);
                  v33 = v28;
                  objc_initWeak((id *)&buf, v30);
                  objc_msgSend(v30, "workQueue");
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  v44[0] = MEMORY[0x24BDAC760];
                  v44[1] = 3221225472;
                  v44[2] = ____handleUpdatedPassword_block_invoke;
                  v44[3] = &unk_24E799B48;
                  objc_copyWeak(&v45, (id *)&buf);
                  objc_msgSend(v30, "writeValue:toCharacteristic:queue:completion:", v33, v13, v34, v44);

                  objc_destroyWeak(&v45);
                  objc_destroyWeak((id *)&buf);

                }
              }
              ++v12;
            }
            while (v11 != v12);
            v35 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v46, v56, 16);
            v11 = v35;
            if (!v35)
            {
LABEL_46:

              break;
            }
          }
        }
        v6 = v39 + 1;
      }
      while (v39 + 1 != v38);
      v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v57, 16);
    }
    while (v38);
  }

}

void sub_221E31104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x220]);
  _Unwind_Resume(a1);
}

void ____handleUpdatedPassword_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x227676638]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543618;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update password setting value with error: %@", (uint8_t *)&v9, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

}

void __handleUpdatedMinimumUserPrivilege(void *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  BOOL v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  void *v30;
  id obj;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint8_t buf[4];
  void *v49;
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v44 = 0u;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v35 = a1;
  objc_msgSend(v35, "services");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "copy");

  obj = v4;
  v33 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v44, v51, 16);
  if (v33)
  {
    v32 = *(_QWORD *)v45;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v45 != v32)
        {
          v6 = v5;
          objc_enumerationMutation(obj);
          v5 = v6;
        }
        v34 = v5;
        v7 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * v5);
        objc_msgSend(v7, "type");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "isEqualToString:", CFSTR("000000DA-0000-1000-8000-0026BB765291"));

        if (v9)
        {
          v42 = 0u;
          v43 = 0u;
          v40 = 0u;
          v41 = 0u;
          objc_msgSend(v7, "characteristics");
          v36 = (id)objc_claimAutoreleasedReturnValue();
          v10 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
          if (v10)
          {
            v11 = *(_QWORD *)v41;
            do
            {
              for (i = 0; i != v10; ++i)
              {
                if (*(_QWORD *)v41 != v11)
                  objc_enumerationMutation(v36);
                v13 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * i);
                objc_msgSend(v13, "type");
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                v15 = objc_msgSend(v14, "isEqualToString:", CFSTR("000000E5-0000-1000-8000-0026BB765291"));

                if (v15)
                {
                  objc_msgSend(v13, "value");
                  v16 = (void *)objc_claimAutoreleasedReturnValue();
                  v17 = objc_msgSend(v16, "integerValue") == a2;

                  if (!v17)
                  {
                    v18 = (void *)MEMORY[0x227676638]();
                    v19 = v35;
                    HMFGetOSLogHandle();
                    v20 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                    {
                      HMFGetLogIdentifier();
                      v21 = (void *)objc_claimAutoreleasedReturnValue();
                      *(_DWORD *)buf = 138543362;
                      v49 = v21;
                      _os_log_impl(&dword_2218F0000, v20, OS_LOG_TYPE_INFO, "%{public}@privilege does not match send update", buf, 0xCu);

                    }
                    objc_autoreleasePoolPop(v18);
                    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a2);
                    v22 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a2);
                    v23 = (void *)objc_claimAutoreleasedReturnValue();
                    v39 = v22;
                    objc_msgSend(v13, "validateValueForWrite:outValue:", v23, &v39);
                    v24 = (void *)objc_claimAutoreleasedReturnValue();
                    v25 = v39;

                    if (v24)
                    {
                      v26 = (void *)MEMORY[0x227676638]();
                      v27 = v19;
                      HMFGetOSLogHandle();
                      v28 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                      {
                        HMFGetLogIdentifier();
                        v29 = (void *)objc_claimAutoreleasedReturnValue();
                        *(_DWORD *)buf = 138543362;
                        v49 = v29;
                        _os_log_impl(&dword_2218F0000, v28, OS_LOG_TYPE_ERROR, "%{public}@invalid minimum user privilege value", buf, 0xCu);

                      }
                      objc_autoreleasePoolPop(v26);
                    }
                    else
                    {
                      objc_initWeak((id *)buf, v19);
                      objc_msgSend(v19, "workQueue");
                      v30 = (void *)objc_claimAutoreleasedReturnValue();
                      v37[0] = MEMORY[0x24BDAC760];
                      v37[1] = 3221225472;
                      v37[2] = ____handleUpdatedMinimumUserPrivilege_block_invoke;
                      v37[3] = &unk_24E799B48;
                      objc_copyWeak(&v38, (id *)buf);
                      objc_msgSend(v19, "writeValue:toCharacteristic:queue:completion:", v25, v13, v30, v37);

                      objc_destroyWeak(&v38);
                      objc_destroyWeak((id *)buf);
                    }

                  }
                }
              }
              v10 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v40, v50, 16);
            }
            while (v10);
          }

        }
        v5 = v34 + 1;
      }
      while (v34 + 1 != v33);
      v33 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v51, 16);
    }
    while (v33);
  }

}

void sub_221E316A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a41);
  _Unwind_Resume(a1);
}

void ____handleUpdatedMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x227676638]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543618;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update privilege privilege value with error: %@", (uint8_t *)&v9, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

}

void sub_221E35ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_221E366A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E36A0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__73365(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__73366(uint64_t a1)
{

}

void sub_221E37824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,id a22)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void completeWithError(void *a1, void *a2)
{
  id v3;
  void *v4;
  void (**v5)(id, id);

  v5 = a1;
  v3 = a2;
  if (v5)
  {
    if (v3)
    {
      v5[2](v5, v3);
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 52);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5[2](v5, v4);

    }
  }

}

id makeConfigurationControl(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init(MEMORY[0x24BE1BC40]);
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE1BC48]), "initWithValue:", a1);
  objc_msgSend(v2, "setOperationType:", v3);

  return v2;
}

id makeStationConfiguration(void *a1, void *a2)
{
  id v3;
  objc_class *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v3 = a2;
  v4 = (objc_class *)MEMORY[0x24BE1BC58];
  v5 = a1;
  v6 = objc_alloc_init(v4);
  objc_msgSend(v6, "setSSID:", v5);

  v7 = objc_alloc(MEMORY[0x24BE1BC50]);
  if (v3)
  {
    v8 = (void *)objc_msgSend(v7, "initWithValue:", 1);
    objc_msgSend(v6, "setSecurityMode:", v8);

    objc_msgSend(v6, "setPSK:", v3);
  }
  else
  {
    v9 = (void *)objc_msgSend(v7, "initWithValue:", 0);
    objc_msgSend(v6, "setSecurityMode:", v9);

  }
  return v6;
}

id encodeRootObjectForRemote(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x227676638]();
  v9 = -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:supportedFeatures:]([HMDRemoteKeyedArchiver alloc], "initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:supportedFeatures:", 0, 0, 0, v6, v7);
  objc_msgSend(v9, "encodeObject:forKey:", v5, *MEMORY[0x24BDD0E88]);
  objc_msgSend(v9, "finishEncoding");
  objc_msgSend(v9, "encodedData");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v8);
  return v10;
}

id encodeRootObjectForRemoteDeviceOnSameAccountMigrateToHH2(void *a1, int a2, int a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;

  v5 = a1;
  v6 = (void *)MEMORY[0x227676638]();
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE3F200]), "initWithName:", CFSTR("com.apple.homed.hmdutil.encode-remote-same."));
  if (a2)
  {
    v8 = (id)homedSupportedFeatures;
    if (a3)
    {
      objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithArray:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addObject:", &unk_24E96AF28);
      v10 = objc_msgSend(v9, "copy");

      v11 = 4;
      v8 = (id)v10;
    }
    else
    {
      v11 = 4;
    }
  }
  else
  {
    v8 = &unk_24E970D60;
    v11 = 3;
  }
  v12 = -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:dataVersion:supportedFeatures:]([HMDRemoteKeyedArchiver alloc], "initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:dataVersion:supportedFeatures:", 1, 0, 1, 0, v11, v8);
  objc_msgSend(v12, "encodeObject:forKey:", v5, *MEMORY[0x24BDD0E88]);
  objc_msgSend(v12, "finishEncoding");
  objc_msgSend(v12, "encodedData");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v6);
  return v13;
}

id encodeRootObjectForIncomingXPCMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x227676638]();
  v6 = -[HMDXPCKeyedArchiver initForWritingWithMessage:]([HMDXPCKeyedArchiver alloc], "initForWritingWithMessage:", v4);
  objc_msgSend(v6, "encodeObject:forKey:", v3, *MEMORY[0x24BDD0E88]);
  objc_msgSend(v6, "finishEncoding");
  objc_msgSend(v6, "encodedData");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_autoreleasePoolPop(v5);
  v8 = (void *)objc_msgSend(v7, "copy");

  return v8;
}

id encodeRootObjectForSPIClients(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;

  v1 = (void *)MEMORY[0x24BE3F1B0];
  v2 = a1;
  objc_msgSend(v1, "internalMessageWithName:messagePayload:", CFSTR("kDummyMessageForEntitledXPC"), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  encodeRootObjectForIncomingXPCMessage(v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void launchURL(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x24BDBCF48], "URLWithString:", a1);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDC1548], "defaultWorkspace");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openSensitiveURL:withOptions:", v2, 0);

}

__CFString *locationAsString(void *a1)
{
  id v1;
  __CFString *v2;

  v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "description");
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = CFSTR("[]");
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

__CFString *regionAsString(void *a1)
{
  id v1;
  __CFString *v2;

  v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "hm_description");
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = CFSTR("[]");
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void createDirectory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  int v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  __int16 v17;
  id v18;
  uint64_t v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v19 = *MEMORY[0x24BDD0CC8];
  v20[0] = &unk_24E96AFE8;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v20, &v19, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD1580], "defaultManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  if ((objc_msgSend(v3, "fileExistsAtPath:isDirectory:", v1, &v12) & 1) != 0)
  {
    v4 = 0;
    if (v12)
    {
LABEL_3:
      v10 = v4;
      objc_msgSend(v3, "setAttributes:ofItemAtPath:error:", v2, v1, &v10);
      v5 = v10;

      v4 = v5;
      goto LABEL_8;
    }
  }
  else
  {
    v11 = 0;
    v6 = objc_msgSend(v3, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v1, 1, v2, &v11);
    v4 = v11;
    v12 = v6;
    if (v6)
      goto LABEL_3;
  }
  v7 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543874;
    v14 = v9;
    v15 = 2112;
    v16 = v1;
    v17 = 2112;
    v18 = v4;
    _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_ERROR, "%{public}@Could not create directory path %@ - error %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v7);
LABEL_8:

}

id mapHAPPairingErrorToHMError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  const __CFString *v5;
  uint64_t v6;
  const __CFString *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  uint64_t v14;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)*MEMORY[0x24BE1B690];

  if (v2 == v3)
  {
    v11 = objc_msgSend(v1, "code");
    switch(v11)
    {
      case 18:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Accessory is already paired");
        v6 = 13;
        goto LABEL_3;
      case 19:
      case 22:
      case 24:
      case 27:
      case 28:
      case 29:
      case 31:
      case 32:
      case 33:
        break;
      case 20:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Currently associated WiFi network is not compatible with the accessory");
        v7 = CFSTR("Associate with a 2.4 GHz WiFi network and try again");
        v6 = 90;
        goto LABEL_4;
      case 21:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("This device is not currently associated to a Home WiFi network");
        v7 = CFSTR("Associate to a WiFi network (from Settings -> WiFi) and try again");
        v6 = 78;
        goto LABEL_4;
      case 23:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Accessories cannot be added to enterprise network");
        v6 = 99;
        goto LABEL_3;
      case 25:
        v12 = (void *)MEMORY[0x24BDD1540];
        v13 = CFSTR("Accessory did not join the configured network");
        v14 = 2016;
        goto LABEL_17;
      case 26:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Failed to join WiFi network");
        v7 = CFSTR("Ensure there is good WiFi signal and try again");
        v6 = 102;
        goto LABEL_4;
      case 30:
        v12 = (void *)MEMORY[0x24BDD1540];
        v13 = CFSTR("No supported Thread router or Thread credentials not found");
        v14 = 2010;
        goto LABEL_17;
      case 34:
        v12 = (void *)MEMORY[0x24BDD1540];
        v13 = CFSTR("Failed to connect");
        v14 = 2015;
LABEL_17:
        objc_msgSend(v12, "hmPrivateErrorWithCode:description:underlyingError:", v14, v13, v1);
        v8 = objc_claimAutoreleasedReturnValue();
        goto LABEL_5;
      case 35:
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Home hub required");
        v7 = CFSTR("Add a Home hub to Apple Home and try again");
        v6 = 91;
        goto LABEL_4;
      case 36:
        v4 = (void *)MEMORY[0x24BDD1540];
        v6 = 79;
        v5 = 0;
        goto LABEL_3;
      default:
        if (v11 != 8)
          break;
        v4 = (void *)MEMORY[0x24BDD1540];
        v5 = CFSTR("Connection was lost with the accessory");
        v7 = CFSTR("Ensure there is good WiFi signal, reset the accessory and try again");
        v6 = 54;
        goto LABEL_4;
    }
  }
  v4 = (void *)MEMORY[0x24BDD1540];
  v5 = CFSTR("Pairing Failed");
  v6 = 18;
LABEL_3:
  v7 = 0;
LABEL_4:
  objc_msgSend(v4, "hmErrorWithCode:description:reason:suggestion:underlyingError:", v6, v5, 0, v7, v1);
  v8 = objc_claimAutoreleasedReturnValue();
LABEL_5:
  v9 = (void *)v8;

  return v9;
}

id determineHomeKitDaemonRootStorePath()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  const __CFString *v5;
  void *v6;

  NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "firstObject");
  v1 = objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    v2 = (void *)v1;
    objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "productPlatform");

    if (v4 == 1)
      v5 = CFSTR("HomeKit");
    else
      v5 = CFSTR("homed");
    objc_msgSend(v2, "stringByAppendingPathComponent:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void __initializePaths_block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  _QWORD v62[4];
  id v63;
  _QWORD v64[3];
  uint64_t v65;
  _QWORD v66[2];

  v66[1] = *MEMORY[0x24BDAC8D0];
  v0 = (void *)MEMORY[0x227676638]();
  determineHomeKitDaemonRootStorePath();
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)storeDirectoryPath;
  storeDirectoryPath = v1;

  if (storeDirectoryPath)
  {
    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("protected-home.config"));
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = (void *)configProtectedDataStorePath;
    configProtectedDataStorePath = v3;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("vendor-id-store"));
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = (void *)configVendorIDStorePath;
    configVendorIDStorePath = v5;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("protected-metadata.config"));
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = (void *)configProtectedMetadataPath;
    configProtectedMetadataPath = v7;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("plain-metadata.config"));
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)configPlainMetadataPath;
    configPlainMetadataPath = v9;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("server-token"));
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)serverTokenDataStorePath;
    serverTokenDataStorePath = v11;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("transaction-journal"));
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)transactionJournalDataStorePath;
    transactionJournalDataStorePath = v13;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("datasync-journal"));
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)idsDataSyncJournalDataStorePath;
    idsDataSyncJournalDataStorePath = v15;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("blacklisted-bundles"));
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = (void *)blacklistedBundlesStorePath;
    blacklistedBundlesStorePath = v17;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("registered-applications"));
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = (void *)registeredApplicationsDataStorePath;
    registeredApplicationsDataStorePath = v19;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("bulletin-board"));
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = (void *)bulletinBoardDataStorePath;
    bulletinBoardDataStorePath = v21;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("cloud-cache"));
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = (void *)cloudCachePath;
    cloudCachePath = v23;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("datastore.sqlite"));
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = (void *)sqlitePath;
    sqlitePath = v25;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventstore-beta.sqlite"));
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = (void *)eventStorePath;
    eventStorePath = v27;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingString:", CFSTR("/BLECache"));
    v29 = objc_claimAutoreleasedReturnValue();
    v30 = (void *)bleAccessoryCachePath;
    bleAccessoryCachePath = v29;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("com.apple.relaunch.assertion.plist"));
    v31 = objc_claimAutoreleasedReturnValue();
    v32 = (void *)launchdAssertionPlistPath;
    launchdAssertionPlistPath = v31;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("metricsCounters"));
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = (void *)metricsCountersPersistentStorePath;
    metricsCountersPersistentStorePath = v33;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventcounters-groupstore"));
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = (void *)eventCountersDataStorePath;
    eventCountersDataStorePath = v35;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventcounters-datastore"));
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = (void *)eventCountersDataStoreLegacyPath;
    eventCountersDataStoreLegacyPath = v37;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("eventflags-datastore"));
    v39 = objc_claimAutoreleasedReturnValue();
    v40 = (void *)eventFlagsDataStorePath;
    eventFlagsDataStorePath = v39;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("core.sql"));
    v41 = objc_claimAutoreleasedReturnValue();
    v42 = (void *)coreDataDataStorePath;
    coreDataDataStorePath = v41;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("/HH1ToHH2PerDeviceMigration"));
    v43 = objc_claimAutoreleasedReturnValue();
    v44 = (void *)hh1ToHH2PerDeviceMigrationDirectoryPath;
    hh1ToHH2PerDeviceMigrationDirectoryPath = v43;

    objc_msgSend((id)storeDirectoryPath, "stringByAppendingPathComponent:", CFSTR("/hh1TestArchives"));
    v45 = objc_claimAutoreleasedReturnValue();
    v46 = (void *)hh1TestArchivesDirectoryPath;
    hh1TestArchivesDirectoryPath = v45;

    HMDCreateHomeKitDaemonCacheDirectory();
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigratorRecordStore.plist"));
    v48 = objc_claimAutoreleasedReturnValue();
    v49 = (void *)hh2MigratorRecordStorePath;
    hh2MigratorRecordStorePath = v48;

    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigrationFailureRecordStore.plist"));
    v50 = objc_claimAutoreleasedReturnValue();
    v51 = (void *)hh2MigrationFailureRecordStorePath;
    hh2MigrationFailureRecordStorePath = v50;

    objc_msgSend(v47, "stringByAppendingPathComponent:", CFSTR("hh2MigrationLogEventStore.plist"));
    v52 = objc_claimAutoreleasedReturnValue();
    v53 = (void *)hh2MigrationLogEventPath;
    hh2MigrationLogEventPath = v52;

    v65 = *MEMORY[0x24BDD0CC8];
    v66[0] = &unk_24E96AFE8;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v66, &v65, 1);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    v64[0] = storeDirectoryPath;
    v64[1] = bleAccessoryCachePath;
    v64[2] = hh1ToHH2PerDeviceMigrationDirectoryPath;
    objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v64, 3);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v62[0] = MEMORY[0x24BDAC760];
    v62[1] = 3221225472;
    v62[2] = ___initializeProtectedStorePaths_block_invoke;
    v62[3] = &unk_24E781948;
    v63 = v54;
    v56 = v54;
    objc_msgSend(v55, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v62);

  }
  objc_msgSend(MEMORY[0x24BDD1488], "bundleWithIdentifier:", CFSTR("com.apple.HomeKitDaemon"));
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "pathForResource:ofType:", CFSTR("plain-metadata-full.config"), 0);
  v58 = objc_claimAutoreleasedReturnValue();
  v59 = (void *)builtinConfigMetadataDictionaryPath;
  builtinConfigMetadataDictionaryPath = v58;

  if (!builtinConfigMetadataDictionaryPath)
  {
    objc_msgSend(v57, "pathForResource:ofType:", CFSTR("plain-metadata.config"), 0);
    v60 = objc_claimAutoreleasedReturnValue();
    v61 = (void *)builtinConfigMetadataDictionaryPath;
    builtinConfigMetadataDictionaryPath = v60;

  }
  objc_autoreleasePoolPop(v0);
}

id HMDCreateHomeKitDaemonCacheDirectory()
{
  void *v0;
  unint64_t v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uid_t v9;
  uint64_t v10;
  __CFString *v11;
  uint64_t v12;
  __CFString *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  unint64_t v22;
  void *v23;
  int v24;
  void *v25;
  NSObject *v26;
  void *v27;
  id v29;
  void *v30;
  uint64_t v31;
  id obj;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  id v43;
  uint8_t buf[4];
  void *v45;
  __int16 v46;
  _BYTE v47[24];
  __int16 v48;
  void *v49;
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  HMCacheSubdirectoryWithRelativePath();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = 0x24BDD1000uLL;
  objc_msgSend(MEMORY[0x24BDD1580], "defaultManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = 0;
  v3 = objc_msgSend(v2, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v0, 1, 0, &v43);
  v4 = v43;

  if ((v3 & 1) != 0)
  {
    v5 = v0;
  }
  else
  {
    v6 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = getuid();
      *(_DWORD *)buf = 138544130;
      v45 = v8;
      v46 = 1024;
      *(_DWORD *)v47 = v9;
      *(_WORD *)&v47[4] = 2114;
      *(_QWORD *)&v47[6] = v0;
      *(_WORD *)&v47[14] = 2114;
      *(_QWORD *)&v47[16] = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_ERROR, "%{public}@Failed to create HomeKit daemon cache directory for user %d at %{public}@: %{public}@", buf, 0x26u);

    }
    v29 = v4;

    objc_autoreleasePoolPop(v6);
    v41 = 0u;
    v42 = 0u;
    v39 = 0u;
    v40 = 0u;
    v30 = v0;
    objc_msgSend(v0, "pathComponents");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
    if (v36)
    {
      v10 = *(_QWORD *)v40;
      v35 = *MEMORY[0x24BDD0CC8];
      v34 = *MEMORY[0x24BDD0CA0];
      v33 = *MEMORY[0x24BDD0C68];
      v11 = &stru_24E79DB48;
      v31 = *(_QWORD *)v40;
      do
      {
        v12 = 0;
        v13 = v11;
        do
        {
          if (*(_QWORD *)v40 != v10)
            objc_enumerationMutation(obj);
          -[__CFString stringByAppendingPathComponent:](v13, "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v39 + 1) + 8 * v12), v29);
          v11 = (__CFString *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(*(id *)(v1 + 1408), "defaultManager");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v38 = 0;
          objc_msgSend(v14, "attributesOfItemAtPath:error:", v11, &v38);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = v38;

          if (v15)
          {
            v37 = v16;
            objc_msgSend(v15, "objectForKeyedSubscript:", v35);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "objectForKeyedSubscript:", v34);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "objectForKeyedSubscript:", v33);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = (void *)MEMORY[0x227676638]();
            HMFGetOSLogHandle();
            v21 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v22 = v1;
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              v24 = objc_msgSend(v17, "shortValue");
              *(_DWORD *)buf = 138544386;
              v45 = v23;
              v46 = 2112;
              *(_QWORD *)v47 = v11;
              *(_WORD *)&v47[8] = 1024;
              *(_DWORD *)&v47[10] = v24;
              *(_WORD *)&v47[14] = 2112;
              *(_QWORD *)&v47[16] = v18;
              v48 = 2112;
              v49 = v19;
              _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_ERROR, "%{public}@Path: %@, permissions: %o, owner uid: %@, owner gid: %@", buf, 0x30u);

              v1 = v22;
              v10 = v31;
            }

            objc_autoreleasePoolPop(v20);
            v16 = v37;
          }
          else
          {
            v25 = (void *)MEMORY[0x227676638]();
            HMFGetOSLogHandle();
            v26 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543874;
              v45 = v27;
              v46 = 2112;
              *(_QWORD *)v47 = v11;
              *(_WORD *)&v47[8] = 2112;
              *(_QWORD *)&v47[10] = v16;
              _os_log_impl(&dword_2218F0000, v26, OS_LOG_TYPE_ERROR, "%{public}@Failed to get attributes for path %@: %@", buf, 0x20u);

            }
            objc_autoreleasePoolPop(v25);
          }

          ++v12;
          v13 = v11;
        }
        while (v36 != v12);
        v36 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v50, 16);
      }
      while (v36);
    }
    else
    {
      v11 = &stru_24E79DB48;
    }

    v5 = 0;
    v4 = v29;
    v0 = v30;
  }

  return v5;
}

void ___initializeProtectedStorePaths_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  const char *v12;
  id v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  id v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = v3;
  v6 = v4;
  objc_msgSend(MEMORY[0x24BDD1580], "defaultManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "fileExistsAtPath:isDirectory:", v5, 0) & 1) != 0)
  {
    v13 = 0;
    objc_msgSend(v7, "setAttributes:ofItemAtPath:error:", v6, v5, &v13);
    v8 = v13;
    v9 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v15 = v11;
      v16 = 2112;
      v17 = v5;
      v18 = 2112;
      v19 = v8;
      v12 = "%{public}@Setting attributes to directory path %@ resulted into error : %@";
LABEL_6:
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, v12, buf, 0x20u);

    }
  }
  else
  {
    v13 = 0;
    objc_msgSend(v7, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v5, 1, v6, &v13);
    v8 = v13;
    v9 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v15 = v11;
      v16 = 2112;
      v17 = v5;
      v18 = 2112;
      v19 = v8;
      v12 = "%{public}@Create store directory path %@ finished with error %@";
      goto LABEL_6;
    }
  }

  objc_autoreleasePoolPop(v9);
}

void __initializeCapabilitiesAndTimeouts_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  __CFString *v13;
  __CFString *v14;
  const __CFString *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  HMDHomeKitVersion *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  int v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t Int64;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t i;
  uint64_t v70;
  void *v71;
  id v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  const void *v78;
  uint64_t v79;
  void *v80;
  NSObject *v81;
  NSObject *v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  void *v172;
  void *v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  int v178;
  _BYTE buf[24];
  __CFString *v180;
  uint64_t v181;

  v181 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    *(_QWORD *)&buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v4;
    _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Initializing with product info: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v5);

  v8 = MGCopyAnswer();
  if (v8)
  {
    v9 = (const void *)v8;
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithString:", v8);
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = (void *)uniqueDeviceId;
    uniqueDeviceId = v10;

    CFRelease(v9);
  }
  v12 = +[HMDDeviceCapabilities isAppleMediaAccessory](HMDDeviceCapabilities, "isAppleMediaAccessory");
  v13 = CFSTR("00000000-0000-0000-0000-C2EE6102B308");
  if (!v12)
    v13 = CFSTR("20BC605A-C33B-4D36-B885-C2EE6102B308");
  v14 = v13;
  if ((-[__CFString isEqualToString:](v14, "isEqualToString:", CFSTR("20BC605A-C33B-4D36-B885-C2EE6102B308")) & 1) != 0)
  {
    v15 = CFSTR("NonMediaDevice/");
  }
  else if (-[__CFString isEqualToString:](v14, "isEqualToString:", CFSTR("00000000-0000-0000-0000-C2EE6102B308")))
  {
    v15 = CFSTR("UnknownMediaDevice/");
  }
  else
  {
    v15 = &stru_24E79DB48;
  }
  v16 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543874;
    *(_QWORD *)&buf[4] = v18;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2112;
    v180 = v14;
    _os_log_impl(&dword_2218F0000, v17, OS_LOG_TYPE_DEFAULT, "%{public}@Setting media remote ID: %@%@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(v16);
  v19 = (void *)_mediaRouteIdentifier;
  _mediaRouteIdentifier = (uint64_t)v14;

  +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%tu.%tu"), objc_msgSend(v20, "majorVersion"), objc_msgSend(v20, "minorVersion"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (void *)MEMORY[0x24BDD16E0];
  objc_msgSend(v21, "doubleValue");
  objc_msgSend(v22, "numberWithDouble:");
  v23 = objc_claimAutoreleasedReturnValue();
  v24 = (void *)homedVersion;
  homedVersion = v23;

  v25 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("3.0"));
  v26 = (void *)minimumSupportedResidentHomeKitVersion;
  minimumSupportedResidentHomeKitVersion = (uint64_t)v25;

  v27 = (void *)homedSupportedFeatures;
  homedSupportedFeatures = (uint64_t)&unk_24E970D78;

  if (isiOSDevice() || isTVOSDevice())
  {
    objc_msgSend((id)homedSupportedFeatures, "arrayByAddingObjectsFromArray:", &unk_24E970D90);
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v28;

  }
  +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(v30, "supportsFaceClassification");

  if (v31)
  {
    objc_msgSend((id)homedSupportedFeatures, "arrayByAddingObject:", &unk_24E96B078);
    v32 = objc_claimAutoreleasedReturnValue();
    v33 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v32;

  }
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:", CFSTR("NSDebugDescription"), CFSTR("NSLocalizedDescription"), CFSTR("RequestUUID"), CFSTR("ServerErrorDescription"), CFSTR("CKErrorDescription"), 0);
  v34 = objc_claimAutoreleasedReturnValue();
  v35 = (void *)ckErrorUserInfoKeys;
  ckErrorUserInfoKeys = v34;

  LODWORD(v174) = 0;
  CFDictionaryGetTypeID();
  v36 = (void *)CFPrefs_CopyTypedValue();
  if (v36)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v36, "objectForKey:", CFSTR("kHomesDataBlobKey"));
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "objectForKey:", CFSTR("kDataSignatureKey"));
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (v37)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          if (v38)
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              v173 = v2;
              v39 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCE50]), "initWithBase64EncodedString:options:", CFSTR("KQveymsUTHc1aqyc73tl3VuYb4Ls0j1+RnvdDxNymjU="), 0);
              v171 = objc_retainAutorelease(v37);
              objc_msgSend(v171, "bytes");
              objc_msgSend(v171, "length");
              objc_msgSend(objc_retainAutorelease(v38), "bytes");
              v40 = objc_retainAutorelease(v39);
              objc_msgSend(v40, "bytes");
              if (!cced25519_verify_compat())
              {
                v172 = (void *)MEMORY[0x24BDD1620];
                v41 = (void *)MEMORY[0x24BDBCF20];
                *(_QWORD *)buf = objc_opt_class();
                *(_QWORD *)&buf[8] = objc_opt_class();
                *(_QWORD *)&buf[16] = objc_opt_class();
                objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", buf, 3);
                v42 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v41, "setWithArray:", v42);
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v172, "deserializeObjectWithData:allowedClasses:", v171, v43);
                v44 = (void *)objc_claimAutoreleasedReturnValue();

                if (v44)
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) != 0)
                  {
                    objc_msgSend(v44, "objectForKey:", CFSTR("kHomeDataBlobKey"));
                    v45 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v44, "objectForKey:", CFSTR("kControllerKeyPairKey"));
                    v46 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v44, "objectForKey:", CFSTR("kControllerPairingNameKey"));
                    v47 = objc_claimAutoreleasedReturnValue();
                    v48 = (void *)v47;
                    if (v45 && v46 && v47)
                    {
                      objc_msgSend(MEMORY[0x24BE1BC08], "systemStore");
                      v49 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v49, "removeControllerKeyPairWithError:", 0);
                      if (objc_msgSend(v49, "saveKeyPair:username:syncable:error:", v46, v48, 0, 0))
                      {
                        v50 = (id)configProtectedDataStorePath;
                        v51 = +[HMDPersistentStore writeData:toStorePath:dataLabel:](HMDPersistentStore, "writeData:toStorePath:dataLabel:", v45, v50, CFSTR("home data"));

                        retailDemoDataEncoded = 1;
                      }

                    }
                  }
                }

              }
              v2 = v173;
            }
          }
        }
      }

    }
  }

  if ((isInternalBuild() & 1) != 0
    || (objc_msgSend(MEMORY[0x24BE3F260], "productInfo"),
        v52 = (void *)objc_claimAutoreleasedReturnValue(),
        v53 = objc_msgSend(v52, "productVariant"),
        v52,
        v53 == 2))
  {
    *(_DWORD *)buf = 0;
    Int64 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      skipAuthPromptDialog = Int64 != 0;
    *(_DWORD *)buf = 0;
    v55 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      showAuthDialog = v55 != 0;
    *(_DWORD *)buf = 0;
    v56 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableCloudDataSync = v56 != 0;
    *(_DWORD *)buf = 0;
    v57 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableLegacyCloudDataSync = v57 != 0;
    *(_DWORD *)buf = 0;
    v58 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableWakeNotifications = v58 != 0;
    *(_DWORD *)buf = 0;
    v59 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      disableWACBrowser = v59 != 0;
    *(_DWORD *)buf = 0;
    v60 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      delayBatchedReadWrite = v60 != 0;
    *(_DWORD *)buf = 0;
    v61 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableNetworkLogging = v61 != 0;
    *(_DWORD *)buf = 0;
    v62 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      enableRetailDemoSetup = v62 != 0;
    v178 = 0;
    CFDictionaryGetTypeID();
    v63 = (void *)CFPrefs_CopyTypedValue();
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    v174 = 0u;
    v175 = 0u;
    v176 = 0u;
    v177 = 0u;
    v65 = v63;
    v66 = objc_msgSend(v65, "countByEnumeratingWithState:objects:count:", &v174, buf, 16);
    if (v66)
    {
      v67 = v66;
      v68 = *(_QWORD *)v175;
      do
      {
        for (i = 0; i != v67; ++i)
        {
          if (*(_QWORD *)v175 != v68)
            objc_enumerationMutation(v65);
          v70 = *(_QWORD *)(*((_QWORD *)&v174 + 1) + 8 * i);
          v71 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", v70);
          v72 = objc_alloc(MEMORY[0x24BDD1880]);
          objc_msgSend(v65, "objectForKey:", v70);
          v73 = (void *)objc_claimAutoreleasedReturnValue();
          v74 = (void *)objc_msgSend(v72, "initWithUUIDString:", v73);

          objc_msgSend(v64, "setObject:forKey:", v74, v71);
        }
        v67 = objc_msgSend(v65, "countByEnumeratingWithState:objects:count:", &v174, buf, 16);
      }
      while (v67);
    }

    v75 = (void *)preferredPrimaryForHome;
    preferredPrimaryForHome = (uint64_t)v64;
    v76 = v64;

    CFStringGetTypeID();
    v77 = CFPrefs_CopyTypedValue();
    if (v77)
    {
      v78 = (const void *)v77;
      v79 = CKContainerEnvironmentFromString();
      v80 = (void *)MEMORY[0x227676638]();
      HMFGetOSLogHandle();
      v81 = (id)objc_claimAutoreleasedReturnValue();
      v82 = v81;
      if (v79)
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v83 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v83;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v78;
          _os_log_impl(&dword_2218F0000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Overriding CloudKit container environment to %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v80);
        cloudKitContainerEnvironment = v79;
      }
      else
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v84 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v84;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v78;
          _os_log_impl(&dword_2218F0000, v82, OS_LOG_TYPE_ERROR, "%{public}@Invalid CloudKit environment %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v80);
      }
      CFRelease(v78);
    }
    *(_DWORD *)buf = 0;
    v85 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudPushBatchLimit = v85;
    *(_DWORD *)buf = 0;
    v86 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maxCloudOperationRetries = v86;
    CFPrefs_GetDouble();
    minimumTimerRecurrence = v87;
    *(_DWORD *)buf = 0;
    v88 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadTimerInterval = v88;
    *(_DWORD *)buf = 0;
    v89 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadMaximumTimerInterval = v89;
    *(_DWORD *)buf = 0;
    v90 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudUploadTimerIntervalExponentialFactor = v90;
    *(_DWORD *)buf = 0;
    v91 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudZoneUploadTimerInitialInterval = v91;
    *(_DWORD *)buf = 0;
    v92 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudZoneUploadTimerInterval = v92;
    *(_DWORD *)buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)buf = 0;
    v93 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      userPushCacheTimeInterval = v93;
    *(_DWORD *)buf = 0;
    v94 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      aggressiveControllerKeyPollInterval = v94;
    *(_DWORD *)buf = 0;
    v95 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      watchdogControllerKeyPollTimeout = v95;
    *(_DWORD *)buf = 0;
    v96 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyPollInterval = v96;
    *(_DWORD *)buf = 0;
    v97 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      keychainPopupTimerInterval = v97;
    *(_DWORD *)buf = 0;
    v98 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      checkRemoteAccessTimeout = v98;
    *(_DWORD *)buf = 0;
    v99 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsCommitTimeoutNanoseconds = 1000000000 * v99;
    *(_DWORD *)buf = 0;
    v100 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsIdleClientTimeoutNanoseconds = 1000000000 * v100;
    *(_DWORD *)buf = 0;
    v101 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsIdleServertTimeoutNanoseconds = 1000000000 * v101;
    *(_DWORD *)buf = 0;
    v102 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendInternalRequestTimeoutNanoseconds = 1000000000 * v102;
    *(_DWORD *)buf = 0;
    v103 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendInternalRequestToWatchTimeoutNanoseconds = 1000000000 * v103;
    *(_DWORD *)buf = 0;
    v104 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      hrsSendUserRequestTimeoutNanoseconds = 1000000000 * v104;
    *(_DWORD *)buf = 0;
    v105 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityTimerNanoseconds = 1000000000 * v105;
    *(_DWORD *)buf = 0;
    v106 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityLeewayNanoseconds = 1000000000 * v106;
    *(_DWORD *)buf = 0;
    v107 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      btleReachabilityProbeReduceFactor = v107;
    *(_DWORD *)buf = 0;
    v108 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseTimerNanoseconds = 1000000000 * v108;
    *(_DWORD *)buf = 0;
    v109 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseLeewayNanoseconds = 1000000000 * v109;
    *(_DWORD *)buf = 0;
    v110 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remotePendingResponseDecayScale = v110;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      accessoryConnectivityWaitPeriod = v111;
    *(_DWORD *)buf = 0;
    v112 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cloudDataSyncInProgressWaitPeriod = v112;
    *(_DWORD *)buf = 0;
    v113 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyNotLandingWaitPeriod = v113;
    *(_DWORD *)buf = 0;
    v114 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      controllerKeyNotLandingShortCircuitWaitPeriod = v114;
    if (isHomePod())
      assistantClientReadWriteTimeoutSeconds = 0x4022000000000000;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      assistantClientReadWriteTimeoutSeconds = v115;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      assistantClientActionSetTimeoutSeconds = v116;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      disableNotificationsDeferPeriod = v117;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      coalesceNotificationsPeriod = v118;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pendingResponseTickPeriod = v119;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pendingResponseMaxPeriod = v120;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      delayNotificationsPeriod = v121;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteReachabilityNotificationsDeferPeriod = v122;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteReachabilityDeregistrationDeferPeriod = v123;
    *(_DWORD *)buf = 0;
    v124 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      deviceConnectionKeepAliveTimerPeriod = v124;
    *(_DWORD *)buf = 0;
    v125 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      deviceConnectionKeepAliveResponseTimeoutPeriod = v125;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pairingInterruptionGracePeriod = v126;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      pairingReconfirmWaitPeriod = v127;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      vendorInfoFetchPeriod = v128;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      attestationInfoFetchPeriod = v129;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      keyTransferBroadcastMaximumDelay = v130;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      mediaBrowserProcessingInterval = v131;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      disableReprivsionBrowsingPeriodInMinutes = v132;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      authServerRetryTimeIntervalInSeconds = v133;
    *(_DWORD *)buf = 0;
    v134 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      authServerRetryCount = v134;
    _overrideNumberArray((void **)&supportedResolutions);
    _overrideNumberArray((void **)&supportedVideoCodecs);
    _overrideNumberArray((void **)&supportedAudioCodecs);
    _overrideNumberArray((void **)&supportedSRTPAuths);
    *(_DWORD *)buf = 0;
    v135 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      videoAttributesUpgradeDebouceTimer = v135;
    *(_DWORD *)buf = 0;
    v136 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      videoAttributesDowngradeDebouceTimer = v136;
    *(_DWORD *)buf = 0;
    v137 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      cameraStreamNetworkAdaptation = v137 != 0;
    _overrideNumber((id *)&rtpPtime);
    _overrideNumber((id *)&snapshotResolution);
    *(_DWORD *)buf = 0;
    v138 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumSimultaneousRemoteStreams = v138;
    *(_DWORD *)buf = 0;
    v139 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumSecureRemoteStreams = v139;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      secureSessionMessageTimeout = v140;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      snapshotCacheValidPeriod = v141;
    *(_DWORD *)buf = 0;
    v142 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumHomes = v142;
    *(_DWORD *)buf = 0;
    v143 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumAccessoriesPerHome = v143;
    *(_DWORD *)buf = 0;
    v144 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumRoomsPerHome = v144;
    *(_DWORD *)buf = 0;
    v145 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumZonesPerHome = v145;
    *(_DWORD *)buf = 0;
    v146 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumTriggersPerHome = v146;
    *(_DWORD *)buf = 0;
    v147 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumActionSetsPerHome = v147;
    *(_DWORD *)buf = 0;
    v148 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServiceGroupsPerHome = v148;
    *(_DWORD *)buf = 0;
    v149 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumUsersPerHome = v149;
    *(_DWORD *)buf = 0;
    v150 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumRoomsPerZone = v150;
    *(_DWORD *)buf = 0;
    v151 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumActionsPerActionSet = v151;
    *(_DWORD *)buf = 0;
    v152 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServicesPerServiceGroup = v152;
    *(_DWORD *)buf = 0;
    v153 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumAccessoriesPerBridge = v153;
    *(_DWORD *)buf = 0;
    v154 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumServicesPerAccessory = v154;
    *(_DWORD *)buf = 0;
    v155 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumCharacteristicsPerService = v155;
    *(_DWORD *)buf = 0;
    v156 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      maximumDataSyncFragmentSize = v156;
    *(_DWORD *)buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)buf = 0;
    v157 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      bulletinSecureTriggerTimeoutInSeconds = v157;
    *(_DWORD *)buf = 0;
    v158 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      secureTriggerUserResponseTimeoutInSeconds = v158;
    *(_DWORD *)buf = 0;
    v159 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      broadcastKeyRefreshTimeInSeconds = v159;
    *(_DWORD *)buf = 0;
    v160 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      bluetoothGSNMaxValue = v160;
    objc_msgSend(MEMORY[0x24BDBCF50], "standardUserDefaults");
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    allowAnonymousServerConnections = objc_msgSend(v161, "BOOLForKey:", CFSTR("allowAnonymousServerConnections"));

    _overrideNSString((id *)&vendorInfoDatabaseServerURLOverride);
    _overrideNSString((id *)&appleConfigurationServer);
    _overrideNSString((id *)&homeKitConfigurationPath);
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorHealthTimerTimeInterval = v162;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerMinimumTimeInterval = v163;
    *(_DWORD *)buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerMaximumTimeInterval = v164;
    *(_DWORD *)buf = 0;
    v165 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      remoteDeviceMonitorRetryTimerFactor = v165;
    *(_DWORD *)buf = 0;
    v166 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceFeedRefreshInMinutes = v166;
    *(_DWORD *)buf = 0;
    v167 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceMonitorAuditInMinutes = v167;
    *(_DWORD *)buf = 0;
    v168 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      presenceMonitorRefreshGracePeriodInMinutes = v168;
    *(_DWORD *)buf = 0;
    v169 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      startCharacteristicsMonitorWaitPeriod = v169;
    *(_DWORD *)buf = 0;
    v170 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf)
      requestHomeDataSyncRetryPeriodInMinutes = v170;
  }
  objc_autoreleasePoolPop(v2);
}

BOOL isiOSDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 2;

  return v1;
}

BOOL isTVOSDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 4;

  return v1;
}

BOOL isHomePod()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 6;

  return v1;
}

void _overrideNumberArray(void **a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v13 = 0;
  CFArrayGetTypeID();
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = (id)CFPrefs_CopyTypedValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v10;
    while (2)
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v2);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          v8 = v2;
          goto LABEL_11;
        }
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v14, 16);
      if (v4)
        continue;
      break;
    }
  }

  v7 = v2;
  v8 = *a1;
  *a1 = v7;
LABEL_11:

}

void _overrideNumber(id *a1)
{
  void *v2;

  CFNumberGetTypeID();
  v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);

}

void _overrideNSString(id *a1)
{
  void *v2;

  CFStringGetTypeID();
  v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);

}

BOOL isMac()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productPlatform") == 1;

  return v1;
}

uint64_t isCharacteristicHeartBeat(void *a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if (objc_msgSend(a1, "isEqualToString:", CFSTR("00000239-0000-1000-8000-0026BB765291")))
    v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("0000024A-0000-1000-8000-0026BB765291"));
  else
    v4 = 0;

  return v4;
}

uint64_t isBTLECapableDevice()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x24BE3F288], "systemInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "supportsBLE");

  return v1;
}

BOOL isiPadDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 3;

  return v1;
}

BOOL isiPhoneDevice()
{
  void *v0;
  _BOOL8 v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass") == 1;

  return v1;
}

uint64_t productClass()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "productClass");

  return v1;
}

uint64_t systemInfo()
{
  return objc_msgSend(MEMORY[0x24BE3F288], "systemInfo");
}

__CFString *getDeviceClass()
{
  if (isAppleTV())
    return CFSTR("kDeviceClassTypeResident");
  else
    return CFSTR("kDeviceClassTypeTransient");
}

BOOL isDeviceLocked()
{
  int v0;
  void *v1;
  NSObject *v2;
  void *v3;
  void *v6;
  NSObject *v7;
  void *v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
  {
    v0 = MKBGetDeviceLockState();
    v1 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543618;
      v10 = v3;
      v11 = 2048;
      v12 = v0;
      _os_log_impl(&dword_2218F0000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (locked): %ld", (uint8_t *)&v9, 0x16u);

    }
    objc_autoreleasePoolPop(v1);
    return v0 != 3 && v0 != 0;
  }
  else
  {
    v6 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = 138543362;
      v10 = v8;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (locked).", (uint8_t *)&v9, 0xCu);

    }
    objc_autoreleasePoolPop(v6);
    return 1;
  }
}

BOOL isPasscodeEnabledOnThisDevice()
{
  int v0;
  void *v1;
  NSObject *v2;
  void *v3;
  void *v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  if (+[HMDDeviceCapabilities supportsDeviceLock](HMDDeviceCapabilities, "supportsDeviceLock"))
  {
    v0 = MKBGetDeviceLockState();
    v1 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543618;
      v9 = v3;
      v10 = 2048;
      v11 = v0;
      _os_log_impl(&dword_2218F0000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (passcode): %ld", (uint8_t *)&v8, 0x16u);

    }
    objc_autoreleasePoolPop(v1);
    return v0 != 3;
  }
  else
  {
    v5 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v7;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (passcode).", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    return 0;
  }
}

uint64_t getHMMaximumUsersPerHome()
{
  return maximumUsersPerHome;
}

uint64_t getPresenceFeedRefreshInMinutes()
{
  return presenceFeedRefreshInMinutes;
}

double getDiscoveryBackoffPeriod()
{
  void *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("DiscoveryBackoffInSeconds"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "doubleValue");
  v4 = v3;

  return v4;
}

id getBLEAccessoryCachePath()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  int v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  id v16;
  id v18;
  id v19;
  char v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(MEMORY[0x24BDD1580], "defaultManager");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  v20 = 0;
  if (storeDirectoryPath)
  {
    if (!bleAccessoryCachePath
      || (objc_msgSend(v0, "fileExistsAtPath:isDirectory:", bleAccessoryCachePath, &v20) & 1) == 0)
    {
      v27 = *MEMORY[0x24BDD0CC8];
      v28[0] = &unk_24E96AFE8;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend((id)storeDirectoryPath, "stringByAppendingString:", CFSTR("/BLECache"));
      v3 = objc_claimAutoreleasedReturnValue();
      v4 = (void *)bleAccessoryCachePath;
      bleAccessoryCachePath = v3;

      v19 = 0;
      v5 = objc_msgSend(v1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", bleAccessoryCachePath, 1, v2, &v19);
      v6 = v19;
      v7 = v6;
      v20 = v5;
      if (v5)
      {
        v18 = v6;
        objc_msgSend(v1, "setAttributes:ofItemAtPath:error:", v2, bleAccessoryCachePath, &v18);
        v8 = v18;

        v7 = v8;
      }
      else
      {
        v13 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v22 = v15;
          v23 = 2112;
          v24 = bleAccessoryCachePath;
          v25 = 2112;
          v26 = v7;
          _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_ERROR, "%{public}@Could not create BLE Cache directory path %@ - error %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v13);
      }

    }
  }
  else
  {
    v9 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v22 = v11;
      v23 = 2112;
      v24 = storeDirectoryPath;
      v12 = (id)storeDirectoryPath;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_ERROR, "%{public}@Store Directory not initialized: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
  }
  v16 = (id)bleAccessoryCachePath;

  return v16;
}

id getImagesPath()
{
  void *v0;
  void *v1;

  HMDCreateHomeKitDaemonCacheDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingString:", CFSTR("/Snapshots"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id getBulletinImagesPath()
{
  void *v0;
  void *v1;

  HMDCreateHomeKitDaemonCacheDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingString:", CFSTR("/BulletinSnapshots"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

id HMDHomeKitDaemonDemoModePersistencePath()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x24BDBCF48];
  HMDCreateHomeKitDaemonCacheDirectory();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "fileURLWithPath:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "URLByAppendingPathComponent:", CFSTR("DemoMode.data"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

BOOL compareCharacteristicValue(void *a1, void *a2, void *a3, void *a4)
{
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _BOOL4 v13;
  _BOOL8 v14;
  id v15;
  id v16;
  int v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  BOOL v31;
  void *v32;
  NSObject *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  BOOL v38;
  void *v39;
  NSObject *v40;
  void *v41;
  void *v42;
  void *context;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  double v48;
  __int16 v49;
  id v50;
  __int16 v51;
  double v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  double v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v9 = a4;
  if (!v7 || !v8)
  {
    v14 = (v7 | v8) == 0;
    goto LABEL_49;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v10 = (id)v8;
      v11 = (id)v7;
      v12 = objc_retainAutorelease(v10);
      v13 = *(_BYTE *)objc_msgSend(v12, "objCType") == 102
         || *(unsigned __int8 *)objc_msgSend(objc_retainAutorelease(v12), "objCType") == 100;
      v15 = objc_retainAutorelease(v11);
      if (*(_BYTE *)objc_msgSend(v15, "objCType") == 102
        || ((v16 = objc_retainAutorelease(v15), *(_BYTE *)objc_msgSend(v16, "objCType") == 100)
          ? (v17 = 1)
          : (v17 = v13),
            v17 == 1))
      {
        objc_msgSend(v12, "doubleValue");
        v19 = v18;
        v20 = objc_msgSend(v15, "doubleValue");
        v22 = v21;
        v23 = 0.00999999978;
        if (v9)
        {
          v20 = objc_msgSend(v9, "doubleValue");
          if (fabs(v24) >= 2.22044605e-16)
          {
            v20 = objc_msgSend(v9, "doubleValue");
            v23 = v25;
          }
        }
        context = (void *)MEMORY[0x227676638](v20);
        HMFGetOSLogHandle();
        v26 = objc_claimAutoreleasedReturnValue();
        v27 = (uint64_t)(v19 * (1.0 / v23));
        v28 = (uint64_t)(v22 * (1.0 / v23));
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544642;
          v46 = v29;
          v47 = 2048;
          v48 = v19;
          v49 = 2048;
          v50 = (id)(uint64_t)(v19 * (1.0 / v23));
          v51 = 2048;
          v52 = v22;
          v53 = 2048;
          v54 = (uint64_t)(v22 * (1.0 / v23));
          v55 = 2048;
          v56 = v23;
          _os_log_impl(&dword_2218F0000, v26, OS_LOG_TYPE_INFO, "%{public}@Saved double value: %lf (%ld), current double value: %lf (%ld), step value: %lf", buf, 0x3Eu);

        }
        objc_autoreleasePoolPop(context);
        switch((unint64_t)a3)
        {
          case 0uLL:
            v14 = v28 < v27;
            break;
          case 1uLL:
            v14 = v28 <= v27;
            break;
          case 2uLL:
            v14 = v28 > v27;
            break;
          case 3uLL:
            v14 = v28 >= v27;
            break;
          case 5uLL:
            v14 = v28 != v27;
            break;
          default:
            v14 = v28 == v27;
            break;
        }

        goto LABEL_49;
      }

    }
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    v30 = objc_msgSend((id)v7, "compare:", v8);
    switch((unint64_t)a3)
    {
      case 0uLL:
        v31 = v30 == -1;
        goto LABEL_37;
      case 1uLL:
        v38 = v30 + 1 >= 2;
        goto LABEL_33;
      case 2uLL:
        v31 = v30 == 1;
        goto LABEL_37;
      case 3uLL:
        v38 = v30 >= 2;
LABEL_33:
        v14 = !v38;
        break;
      case 5uLL:
        v14 = v30 != 0;
        break;
      default:
        v31 = v30 == 0;
LABEL_37:
        v14 = v31;
        break;
    }
    v39 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v40 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      HMFBooleanToString();
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544386;
      v46 = v41;
      v47 = 2112;
      v48 = *(double *)&v7;
      v49 = 2048;
      v50 = a3;
      v51 = 2112;
      v52 = *(double *)&v8;
      v53 = 2112;
      v54 = (uint64_t)v42;
      _os_log_impl(&dword_2218F0000, v40, OS_LOG_TYPE_INFO, "%{public}@Comparing characteristic value %@ (op:%tu) %@, result: %@", buf, 0x34u);

    }
    objc_autoreleasePoolPop(v39);
  }
  else
  {
    v32 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = (void *)objc_opt_class();
      v36 = v35;
      *(_DWORD *)buf = 138543874;
      v46 = v34;
      v47 = 2112;
      v48 = *(double *)&v35;
      v49 = 2112;
      v50 = (id)objc_opt_class();
      v37 = v50;

    }
    objc_autoreleasePoolPop(v32);
    v14 = 0;
  }
LABEL_49:

  return v14;
}

uint64_t parseMessageSource(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;
  v4 = v3;
  if (!v3 || objc_msgSend(v3, "type"))
  {
    objc_msgSend(v1, "numberForKey:", CFSTR("sourceType"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      v7 = (int)objc_msgSend(v5, "intValue");
    }
    else
    {
      objc_msgSend(v1, "applicationBundleIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v8, "isEqualToString:", CFSTR("com.apple.Siri")))
      {

      }
      else
      {
        objc_msgSend(v1, "applicationBundleIdentifier");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isEqualToString:", CFSTR("assistant_service"));

        if ((v10 & 1) == 0)
        {
          if (objc_msgSend(v1, "isEntitledForSPIAccess"))
            v7 = 5;
          else
            v7 = 6;
          goto LABEL_16;
        }
      }
      v7 = 1;
    }
LABEL_16:

    goto LABEL_17;
  }
  v7 = 8;
LABEL_17:

  return v7;
}

uint64_t HMDShouldRedactBundleIdForBuildType(void *a1, char a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  if (HMDShouldRedactBundleIdForBuildType_onceToken != -1)
    dispatch_once(&HMDShouldRedactBundleIdForBuildType_onceToken, &__block_literal_global_511);
  v4 = 0;
  if (v3 && (a2 & 1) == 0)
  {
    if ((objc_msgSend(v3, "hasPrefix:", CFSTR("com.apple.")) & 1) != 0
      || (objc_msgSend(v3, "hasPrefix:", CFSTR("apple.")) & 1) != 0)
    {
      v4 = 0;
    }
    else
    {
      v4 = objc_msgSend((id)HMDShouldRedactBundleIdForBuildType_knownBundleIdentifiers, "containsObject:", v3) ^ 1;
    }
  }

  return v4;
}

uint64_t HMDShouldRedactBundleId(void *a1)
{
  id v1;
  char v2;
  uint64_t v3;

  v1 = a1;
  v2 = isInternalBuild();
  v3 = HMDShouldRedactBundleIdForBuildType(v1, v2);

  return v3;
}

id spiClientIdentifierForUUID(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  +[HMDProcessInfo privateClientIdentifierSalt](HMDProcessInfo, "privateClientIdentifierSalt");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD1880], "hm_deriveUUIDFromBaseUUID:identifierSalt:", v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id spiClientIdentifierForUUIDAndSalts(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  +[HMDProcessInfo privateClientIdentifierSalt](HMDProcessInfo, "privateClientIdentifierSalt");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD1880], "hm_deriveUUIDFromBaseUUID:identifierSalt:withSalts:", v4, v5, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t shouldLogPrivateInformation()
{
  void *v0;
  void *v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("shouldLogPrivateInformation"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "BOOLValue");

  return v2;
}

uint64_t isEqualDeepCompare(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v5 = objc_msgSend(v3, "count");
      if (v5 == objc_msgSend(v4, "count"))
      {
        v31 = 0u;
        v32 = 0u;
        v29 = 0u;
        v30 = 0u;
        v6 = v3;
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v34, 16);
        if (v7)
        {
          v8 = v7;
          v9 = *(_QWORD *)v30;
          while (2)
          {
            for (i = 0; i != v8; ++i)
            {
              if (*(_QWORD *)v30 != v9)
                objc_enumerationMutation(v6);
              v11 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * i);
              objc_msgSend(v6, "objectForKey:", v11);
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v4, "objectForKey:", v11);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v13 || !isEqualDeepCompare(v12, v13))
              {

                v14 = 0;
                goto LABEL_34;
              }

            }
            v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v29, v34, 16);
            v14 = 1;
            if (v8)
              continue;
            goto LABEL_34;
          }
        }
LABEL_25:
        v14 = 1;
LABEL_34:

        goto LABEL_35;
      }
LABEL_31:
      v14 = 0;
      goto LABEL_35;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v15 = objc_msgSend(v3, "count");
      if (v15 == objc_msgSend(v4, "count"))
      {
        v27 = 0u;
        v28 = 0u;
        v25 = 0u;
        v26 = 0u;
        v6 = v3;
        v16 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
        if (v16)
        {
          v17 = v16;
          v18 = 0;
          v19 = *(_QWORD *)v26;
LABEL_19:
          v20 = 0;
          while (1)
          {
            if (*(_QWORD *)v26 != v19)
              objc_enumerationMutation(v6);
            v21 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v20);
            objc_msgSend(v4, "objectAtIndex:", v18 + v20, (_QWORD)v25);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = isEqualDeepCompare(v21, v22);

            if (!(_DWORD)v14)
              goto LABEL_34;
            if (v17 == ++v20)
            {
              v18 += v20;
              v17 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v25, v33, 16);
              if (v17)
                goto LABEL_19;
              goto LABEL_25;
            }
          }
        }
        goto LABEL_25;
      }
      goto LABEL_31;
    }
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    if (v3 == v4)
    {
      v14 = 1;
      goto LABEL_35;
    }
    v23 = objc_msgSend(v3, "isBackingStorageEqual:", v4);
  }
  else
  {
    v23 = HMFEqualObjects();
  }
  v14 = v23;
LABEL_35:

  return v14;
}

HMDHomeKitVersion *fixHomeKitVersion(void *a1)
{
  id v1;
  HMDHomeKitVersion *v2;
  HMDHomeKitVersion *v3;
  HMDHomeKitVersion *v4;
  double v5;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "minorVersion") >= 0xA && objc_msgSend(v1, "minorVersion"))
  {
    v2 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("10.0"));
    if (objc_msgSend(v1, "isAtLeastVersion:", v2))
    {
      v3 = (HMDHomeKitVersion *)v1;
    }
    else
    {
      v5 = round(log10((double)(unint64_t)objc_msgSend(v1, "minorVersion")));
      v3 = -[HMDHomeKitVersion initWithMajorVersion:minorVersion:updateVersion:]([HMDHomeKitVersion alloc], "initWithMajorVersion:minorVersion:updateVersion:", objc_msgSend(v1, "majorVersion"), llround((double)(unint64_t)objc_msgSend(v1, "minorVersion") / __exp10((double)(uint64_t)v5)), objc_msgSend(v1, "updateVersion"));
    }
    v4 = v3;

  }
  else
  {
    v4 = (HMDHomeKitVersion *)v1;
  }

  return v4;
}

_DWORD *createStateData(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  size_t v6;
  _DWORD *v7;

  v3 = a1;
  objc_msgSend(MEMORY[0x24BDD1770], "dataWithPropertyList:format:options:error:", a2, 200, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = objc_msgSend(v4, "length");
    v7 = malloc_type_calloc(1uLL, v6 + 200, 0x84EEA7FFuLL);
    *v7 = 1;
    v7[1] = v6;
    objc_msgSend(objc_retainAutorelease(v3), "UTF8String");
    __strlcpy_chk();
    memcpy(v7 + 50, (const void *)objc_msgSend(objc_retainAutorelease(v5), "bytes"), v6);
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id generateWiFiUniquePreSharedKey()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint8_t buf[4];
  void *v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = (void *)SecPasswordGenerate();
  v1 = v0;
  if (v0)
  {
    v2 = v0;
  }
  else
  {
    v3 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v8 = v5;
      v9 = 2112;
      v10 = 0;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to generate WiFi Pre-Shared Key with error: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);

  }
  return v1;
}

id accessoryToEncodeForXPCTransportForAccessory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = a1;
  objc_msgSend(v1, "hostAccessory");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  if (v4)
    v5 = v4;
  else
    v5 = v1;
  v6 = v5;

  return v6;
}

BOOL shouldSkipRemoteAccessoryNotificationRegistration(void *a1, void *a2)
{
  id v3;
  id v4;
  _BOOL8 v5;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "isCurrentDeviceAvailableResident")
    && objc_msgSend(v4, "hasIPLink")
    && (objc_msgSend(v4, "hasBTLELink") & 1) == 0
    && !isiPadDevice()
    && (!isAppleTV() || objc_msgSend(v3, "isCurrentDeviceConfirmedPrimaryResident"));

  return v5;
}

uint64_t shouldSkipLocalAccessoryNotificationRegistration(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v12;
  void *v13;
  uint64_t v14;

  v7 = a1;
  v8 = a2;
  v9 = a4;
  if ((objc_msgSend(a3, "hmf_isEmpty") & 1) != 0)
    goto LABEL_2;
  +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "isResidentCapable");

  if ((v12 & 1) != 0
    || (objc_msgSend(v7, "enabledResidents"),
        v13 = (void *)objc_claimAutoreleasedReturnValue(),
        v14 = objc_msgSend(v13, "count"),
        v13,
        !v14))
  {
LABEL_10:
    v10 = 0;
    goto LABEL_11;
  }
  if ((objc_msgSend(v9, "isEqual:", CFSTR("com.apple.HomeKitDaemon.bulletinNotificationManager")) & 1) == 0
    && (objc_msgSend(v9, "isEqual:", CFSTR("com.apple.HomeKitDaemon.bulletinBoard")) & 1) == 0)
  {
    if (!objc_msgSend(v8, "hasBTLELink") || (objc_msgSend(v8, "reachableTransports") & 2) == 0)
    {
      v10 = objc_msgSend(v8, "isSecureSessionEstablished") ^ 1;
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_2:
  v10 = 1;
LABEL_11:

  return v10;
}

uint64_t shouldDisconnectOnIdleForAccessory(void *a1)
{
  id v1;
  void *v2;
  char v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "home");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = isPersistedConnectionRequiredForAccessory(v1);

  if ((v3 & 1) != 0)
    v4 = 0;
  else
    v4 = objc_msgSend(v2, "isCurrentDevicePrimaryResident") ^ 1;

  return v4;
}

uint64_t isPersistedConnectionRequiredForAccessory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void (**v9)(_QWORD);
  void *v10;
  void *v11;
  NSObject *v12;
  id v13;
  void *v14;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  _QWORD aBlock[4];
  id v22;
  __int128 *p_buf;
  uint8_t v24[4];
  id v25;
  __int16 v26;
  void *v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(v1, "home");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v2, "isCurrentDevicePrimaryResident"))
  {
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v29 = 0x3032000000;
    v30 = __Block_byref_object_copy__74753;
    v31 = __Block_byref_object_dispose__74754;
    v7 = MEMORY[0x24BDAC760];
    v32 = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 3221225472;
    aBlock[2] = __isPersistedConnectionRequiredForAccessory_block_invoke;
    aBlock[3] = &unk_24E77FFC8;
    p_buf = &buf;
    v8 = v1;
    v22 = v8;
    v9 = (void (**)(_QWORD))_Block_copy(aBlock);
    if (objc_msgSend(v2, "isCurrentDeviceAvailableResident"))
    {
      v17 = 0;
      v18 = &v17;
      v19 = 0x2020000000;
      v20 = 0;
      v9[2](v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = v7;
      v16[1] = 3221225472;
      v16[2] = __isPersistedConnectionRequiredForAccessory_block_invoke_3;
      v16[3] = &unk_24E77FFF0;
      v16[4] = &v17;
      objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v16);

      if (*((_BYTE *)v18 + 24))
      {
        v11 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v12 = (id)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v13 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "shortDescription");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v24 = 138543618;
          v25 = v13;
          v26 = 2112;
          v27 = v14;
          _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for Siri Remote accessory %@ for all residents", v24, 0x16u);

        }
        objc_autoreleasePoolPop(v11);
        _Block_object_dispose(&v17, 8);
        v6 = 1;
        goto LABEL_12;
      }
      _Block_object_dispose(&v17, 8);
    }
    v6 = 0;
LABEL_12:

    _Block_object_dispose(&buf, 8);
    goto LABEL_13;
  }
  v3 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(buf) = 138543362;
    *(_QWORD *)((char *)&buf + 4) = v5;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Current device is primary resident, always require persisted connection with accessories", (uint8_t *)&buf, 0xCu);

  }
  objc_autoreleasePoolPop(v3);
  v6 = 1;
LABEL_13:

  return v6;
}

void sub_221E42BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__74753(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__74754(uint64_t a1)
{

}

id __isPersistedConnectionRequiredForAccessory_block_invoke(uint64_t a1)
{
  void *v1;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  id v15;
  id v16;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v1)
    return v1;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithObject:", *(_QWORD *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "identifiersForBridgedAccessories");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = MEMORY[0x24BDAC760];
  v12 = 3221225472;
  v13 = __isPersistedConnectionRequiredForAccessory_block_invoke_2;
  v14 = &unk_24E77FFA0;
  v15 = *(id *)(a1 + 32);
  v16 = v4;
  v6 = v4;
  objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

  v7 = objc_msgSend(v6, "copy", v11, v12, v13, v14);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

  v10 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  return v10;
}

uint64_t __isPersistedConnectionRequiredForAccessory_block_invoke_3(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t result;

  result = objc_msgSend(a2, "supportsTargetController");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  *a3 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __isPersistedConnectionRequiredForAccessory_block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "home");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "accessoryWithUUID:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v6;
  else
    v7 = 0;
  v9 = v7;

  v8 = v9;
  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v9);
    v8 = v9;
  }

}

void __shouldEnableInternalDebugInterfaces_block_invoke()
{
  void *v0;
  id v1;

  if ((isInternalBuild() & 1) != 0)
  {
    objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
    v1 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "preferenceForKey:", CFSTR("shouldEnableInternalDebugInterfaces"));
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    shouldEnableInternalDebugInterfaces__hmf_once_v33 = objc_msgSend(v0, "BOOLValue");

  }
  else
  {
    shouldEnableInternalDebugInterfaces__hmf_once_v33 = 0;
  }
}

id getCKContainer()
{
  __CFString *v0;
  __CFString *v1;
  id v2;
  _QWORD block[4];
  const __CFString *v5;

  v0 = CFSTR("com.apple.homekit.config");
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __getCKContainer_block_invoke;
  block[3] = &unk_24E79C240;
  v5 = CFSTR("com.apple.homekit.config");
  if (getCKContainer_onceToken == -1)
  {
    v1 = CFSTR("com.apple.homekit.config");
  }
  else
  {
    dispatch_once(&getCKContainer_onceToken, block);
    v1 = (__CFString *)v5;
  }
  v2 = (id)getCKContainer_container;

  return v2;
}

void __getCKContainer_block_invoke(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_msgSend(objc_alloc(MEMORY[0x24BDB9038]), "initWithContainerIdentifier:environment:", *(_QWORD *)(a1 + 32), cloudKitContainerEnvironment);
  v1 = objc_msgSend(objc_alloc(MEMORY[0x24BDB9030]), "initWithContainerID:", v3);
  v2 = (void *)getCKContainer_container;
  getCKContainer_container = v1;

}

id shortHAPTypeDescription(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = (void *)*MEMORY[0x24BE1B908];
  if (objc_msgSend(v1, "hasSuffix:", *MEMORY[0x24BE1B908]))
  {
    objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "length") - objc_msgSend(v2, "length"));
    v3 = objc_claimAutoreleasedReturnValue();

    v1 = (id)v3;
  }
  return v1;
}

id listOfUUIDsFromManagedObjectSet(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "allObjects");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "na_map:", &__block_literal_global_749);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

uint64_t __listOfUUIDsFromManagedObjectSet_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "modelID");
}

uint64_t isThisDeviceDesignatedFMFDevice()
{
  void *v0;
  uint64_t v1;

  +[HMDFMFHandler sharedHandler](HMDFMFHandler, "sharedHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isThisDesignatedFMFDevice");

  return v1;
}

void setPrimaryPreference(void *a1, int a2)
{
  id v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  const void *v8;
  int v9;
  void *v10;
  __int16 v11;
  id v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  const __CFString *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = (void *)MEMORY[0x227676638](CFSTR("hmd.preferred.primary.homeutil"));
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138544130;
    v10 = v6;
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v7;
    v15 = 2112;
    v16 = CFSTR("hmd.preferred.primary.homeutil");
    _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Setting preferred primary: %@, isOneTime: %@, applicationKey: %@", (uint8_t *)&v9, 0x2Au);

  }
  objc_autoreleasePoolPop(v4);
  CFPreferencesSetAppValue(CFSTR("hmd.preferred.primary"), v3, CFSTR("hmd.preferred.primary.homeutil"));
  if (a2)
    v8 = (const void *)MEMORY[0x24BDBD1C8];
  else
    v8 = (const void *)MEMORY[0x24BDBD1C0];
  CFPreferencesSetAppValue(CFSTR("hmd.preferred.primary.one.time"), v8, CFSTR("hmd.preferred.primary.homeutil"));

}

void clearPrimaryPreference(int a1)
{
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  int v9;
  void *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  const __CFString *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638](CFSTR("hmd.preferred.primary.homeutil"));
  HMFGetOSLogHandle();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 138543874;
    v10 = v4;
    v11 = 2112;
    v12 = v5;
    v13 = 2112;
    v14 = CFSTR("hmd.preferred.primary.homeutil");
    _os_log_impl(&dword_2218F0000, v3, OS_LOG_TYPE_DEFAULT, "%{public}@Clearing preferred primary with requireOneTime: %@ ...withApplication: %@", (uint8_t *)&v9, 0x20u);

  }
  objc_autoreleasePoolPop(v2);
  v6 = (void *)CFPreferencesCopyAppValue(CFSTR("hmd.preferred.primary.one.time"), CFSTR("hmd.preferred.primary.homeutil"));
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, "BOOLValue");
    if (!a1 || v8)
      CFPreferencesSetAppValue(CFSTR("hmd.preferred.primary"), 0, CFSTR("hmd.preferred.primary.homeutil"));
  }

}

uint64_t HMDCurrentQOSWithFloor()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(MEMORY[0x24BDD17F0], "currentThread");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "qualityOfService");

  if (v1 <= 17)
    v2 = 17;
  else
    v2 = v1;
  if (v2 == 21)
    return 17;
  else
    return v2;
}

uint64_t isTransientCloudKitError(void *a1)
{
  id v1;
  void *v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "domain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", *MEMORY[0x24BDB8EA8]);

  if (v3)
  {
    v4 = objc_msgSend(v1, "code");
    if (v4 <= 0x17)
      v5 = (0x8000D8u >> v4) & 1;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __isFirstLaunchAfterBoot_block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  char v15;
  size_t v16;
  uint8_t buf[4];
  void *v18;
  uint8_t v19[16];
  _BYTE v20[21];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  determineHomeKitDaemonRootStorePath();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (v0)
  {
    objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("lastBootUuid"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    *(_OWORD *)v19 = 0u;
    memset(v20, 0, sizeof(v20));
    v16 = 37;
    v3 = sysctlbyname("kern.bootsessionuuid", v19, &v16, 0, 0);
    if (v3)
    {
      if (v3 == -1)
      {
        __error();
        _os_assumes_log();
      }
      v4 = (void *)MEMORY[0x227676638]();
      HMFGetOSLogHandle();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v18 = v6;
        _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_ERROR, "%{public}@Failed to get kern.bootsessionuuid", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v4);
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithContentsOfFile:encoding:error:", v2, 4, 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v10)
      {
        v11 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v18 = v13;
          _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_DEBUG, "%{public}@Failed to load existing boot uuid", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v11);
      }
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD17C8]), "initWithUTF8String:", v19);
      v15 = 1;
      objc_msgSend(v14, "writeToFile:atomically:encoding:error:", v2, 1, 4, 0);
      if (v10)
        v15 = objc_msgSend(v14, "isEqualToString:", v10) ^ 1;
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = v15;

    }
  }
  else
  {
    v7 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v19 = 138543362;
      *(_QWORD *)&v19[4] = v9;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_ERROR, "%{public}@Failed to get HomeKit daemon root store path!", v19, 0xCu);

    }
    objc_autoreleasePoolPop(v7);
    isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
  }

}

uint64_t HMDTruncatedHash(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = 0;
  objc_msgSend(a1, "hm_generateSHA256");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "getBytes:length:", &v4, 8);
  v2 = v4;

  return v2;
}

void sub_221E43A08(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221E440D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E44194(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E443EC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_221E456F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E457CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDMatterAccessoryPairingStepAsString(unint64_t a1)
{
  if (a1 < 0x1A)
    return off_24E780240[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Undefined HMDMatterAccessoryPairingStep %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221E482D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void __callResolveBlocks(void *a1, void *a2, void *a3)
{
  id v5;
  unint64_t v6;
  unint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "underlyingQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v8);

  if (v5 && v6 | v7)
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(v5, "resolveBlocks", 0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v16;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v16 != v12)
            objc_enumerationMutation(v9);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v13++) + 16))();
        }
        while (v11 != v13);
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v11);
    }

    objc_msgSend(v5, "resolveBlocks");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "removeAllObjects");

  }
}

void sub_221E4ADFC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void _handleNetworkInterfaceChanged(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v3;
  const char *v4;
  _BYTE *v5;

  v5 = a3;
  v5[16] = _isNetworkIntefaceActive();
  if (gLogCategory_HMDPowerManager <= 30
    && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
  {
    if (v5[16])
      v3 = "yes";
    else
      v3 = "no";
    v4 = v3;
    LogPrintF();
  }
  objc_msgSend(v5, "_update", v4);

}

uint64_t _isNetworkIntefaceActive()
{
  int v0;
  char *ifa_name;
  uint64_t v2;
  ifaddrs *v3;
  ifaddrs *v5;

  v0 = socket(2, 2, 0);
  if (v0 < 0 && (!*__error() || *__error()))
    return 0;
  v5 = 0;
  getifaddrs(&v5);
  v3 = v5;
  if (!v5)
  {
    if (v0 < 0)
      return 0;
    goto LABEL_19;
  }
  do
  {
    if ((v3->ifa_flags & 8) == 0)
    {
      ifa_name = v3->ifa_name;
      if (ifa_name)
      {
        if (!SocketGetInterfaceInfo()
          && gLogCategory_HMDPowerManager <= 20
          && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    v3 = v3->ifa_next;
  }
  while (v3);
  if (v5)
    MEMORY[0x227676224](v5, ifa_name, v2);
  if ((v0 & 0x80000000) == 0)
  {
LABEL_19:
    if (close(v0) && *__error())
      __error();
  }
  return 0;
}

BOOL AWDHomeKitCameraStreamIDSConnSetupParametersReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionRequested;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCameraStreamIDSConnSetupParameters__connectionComplete;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221E52D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E534BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;

  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E5370C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E53B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__76974(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__76975(uint64_t a1)
{

}

void sub_221E554E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E55560(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E555D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E55634(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E563EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E566EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_221E56BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E5A070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E5B558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _parseTargetList(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = objc_retainAutorelease(v1);
    objc_msgSend(v2, "bytes");
    objc_msgSend(v2, "length");
    while (!TLV8GetNext())
      ;
  }

  return 0;
}

id _parseTargetButtonConfiguration(void *a1, uint64_t a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;

  v2 = a1;
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_retainAutorelease(v2);
  objc_msgSend(v4, "bytes");
  objc_msgSend(v4, "length");
  while (!TLV8GetNext())
    ;
  v5 = (void *)objc_msgSend(v3, "copy", a2);

  return v5;
}

unint64_t targetConfigurationTLVSize(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t i;
  void *v10;
  unint64_t v11;
  id v12;
  const char *v13;
  size_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v21;
    v8 = 32;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v3);
        v10 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
        v11 = v8 + 12;
        objc_msgSend(v10, "name");
        v12 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v13 = (const char *)objc_msgSend(v12, "UTF8String");

        if (v13)
        {
          v14 = strlen(v13);
          if (v14 >= 0x80)
            v15 = 128;
          else
            v15 = v14;
          v11 += v15;
        }
        objc_msgSend(v10, "buttonConfiguration");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v16, "count"))
        {
          objc_msgSend(v10, "buttonConfiguration");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = buttonConfigurationTLVSize(v17);

        }
        else
        {
          v18 = buttonConfigurationTLVSize(v4);
        }
        v8 = v18 + v11;

      }
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v6);
  }
  else
  {
    v8 = 32;
  }

  return v8 + 2 * (v8 / 0xFF);
}

uint64_t __addButtonConfigurationTLV(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  const char *v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  if (objc_msgSend(v2, "count"))
  {
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v19 = 0u;
    buttonConfigurationTLVSize(v2);
    TLV8BufferInit();
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v3 = v2;
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v15;
LABEL_4:
      v7 = 0;
      while (1)
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v7);
        objc_msgSend(v8, "identifier");
        v9 = TLV8BufferAppend();
        if ((_DWORD)v9)
          break;
        objc_msgSend(v8, "type");
        v9 = TLV8BufferAppend();
        if ((_DWORD)v9)
          break;
        objc_msgSend(v8, "name");
        v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v11 = (const char *)objc_msgSend(v10, "UTF8String");

        if (v11)
        {
          strlen(v11);
          v9 = TLV8BufferAppend();
          if ((_DWORD)v9)
            break;
        }
        if (v5 == ++v7)
        {
          v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
          if (v5)
            goto LABEL_4;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", v19);
      v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      objc_msgSend(v3, "bytes");
      objc_msgSend(v3, "length");
      v9 = TLV8BufferAppend();
    }
    v12 = v9;

    TLV8BufferFree();
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

unint64_t buttonConfigurationTLVSize(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  id v7;
  const char *v8;
  size_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v13;
    v5 = 32;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v13 != v4)
          objc_enumerationMutation(v1);
        v5 += 9;
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * i), "name");
        v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v8 = (const char *)objc_msgSend(v7, "UTF8String");

        if (v8)
        {
          v9 = strlen(v8);
          if (v9 >= 0x80)
            v10 = 128;
          else
            v10 = v9;
          v5 += v10;
        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v3);
  }
  else
  {
    v5 = 32;
  }

  return v5 + 2 * (v5 / 0xFF);
}

uint64_t __Block_byref_object_copy__77281(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__77282(uint64_t a1)
{

}

void sub_221E5FC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id readDataFromCKRecordOptionalAssetField(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  unint64_t v36;
  _BYTE v37[4096];
  uint64_t v38;

  v1 = (void *)MEMORY[0x24BDAC7A8](a1);
  v3 = v2;
  v5 = v4;
  v38 = *MEMORY[0x24BDAC8D0];
  v6 = v1;
  v7 = v5;
  filePathFromCKRecordOptionalAssetField(v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    createInputStreamWithFilePath(v8, 0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (!v10)
    {
      v19 = 0;
LABEL_24:

      goto LABEL_25;
    }
    v12 = v10;
    objc_msgSend(MEMORY[0x24BDBCEC8], "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "open");
    v14 = objc_msgSend(v12, "read:maxLength:", v37, 4096);
    if (v14 < 1)
    {
LABEL_12:
      v18 = objc_msgSend(v12, "close");
      if ((v14 & 0x8000000000000000) == 0)
      {
        v19 = (void *)objc_msgSend(v13, "copy");
LABEL_23:

        goto LABEL_24;
      }
      v20 = MEMORY[0x227676638](v18);
      objc_opt_class();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "streamError");
        v31 = v20;
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v34 = v23;
        v35 = 2112;
        v36 = (unint64_t)v24;
        _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_ERROR, "%{public}@Error reading data from input stream: %@", buf, 0x16u);

        v20 = v31;
      }

      v25 = (void *)v20;
    }
    else
    {
      while (1)
      {
        if (v3)
        {
          v15 = objc_msgSend(v13, "length");
          v16 = __CFADD__(v14, v15);
          v17 = v16 << 63 >> 63;
          if (v17 != v16 || v17 < 0 || v14 + v15 > v3)
            break;
        }
        objc_msgSend(v13, "appendBytes:length:", v37, v14);
        v14 = objc_msgSend(v12, "read:maxLength:", v37, 4096);
        if (v14 <= 0)
          goto LABEL_12;
      }
      v26 = MEMORY[0x227676638](objc_msgSend(v12, "close"));
      objc_opt_class();
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v28 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v32 = v26;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v34 = v29;
        v35 = 2048;
        v36 = v3;
        _os_log_impl(&dword_2218F0000, v28, OS_LOG_TYPE_ERROR, "%{public}@Data from input stream has exceeded the maximum %lu bytes allowed", buf, 0x16u);

        v26 = v32;
      }

      v25 = (void *)v26;
    }
    objc_autoreleasePoolPop(v25);
    v19 = 0;
    goto LABEL_23;
  }
  v19 = 0;
LABEL_25:

  return v19;
}

id dataFromCKRecordRequiredField(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  int v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v31;
  id v32;
  id v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  id v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  id v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "objectForKeyedSubscript:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    objc_opt_class();
    v10 = objc_opt_isKindOfClass() & 1;
    if (v10)
      v11 = v9;
    else
      v11 = 0;
    v12 = v11;

    v13 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v10)
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "recordID");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "hmbDescription");
        v32 = v12;
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v35 = v17;
        v36 = 2112;
        v37 = v6;
        v38 = 2112;
        v39 = v19;
        _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSData for record %@", buf, 0x20u);

        v12 = v32;
      }

      objc_autoreleasePoolPop(v13);
      v20 = v9;
    }
    else
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v31 = v13;
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "recordID");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "hmbDescription");
        v33 = v12;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v35 = v27;
        v36 = 2112;
        v37 = v6;
        v38 = 2112;
        v39 = v29;
        v40 = 2112;
        v41 = v9;
        _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

        v12 = v33;
        v13 = v31;
      }

      objc_autoreleasePoolPop(v13);
      if (a3)
      {
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 43);
        v20 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v20 = 0;
      }
    }

  }
  else
  {
    v21 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "recordID");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "hmbDescription");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v35 = v24;
      v36 = 2112;
      v37 = v6;
      v38 = 2112;
      v39 = v26;
      _os_log_impl(&dword_2218F0000, v23, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v21);
    if (a3)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 43);
      v20 = 0;
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
  }

  return v20;
}

id filePathFromCKRecordOptionalAssetField(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  int v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  id v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
    objc_opt_class();
    v8 = objc_opt_isKindOfClass() & 1;
    if (v8)
      v9 = v7;
    else
      v9 = 0;
    v10 = v9;

    v11 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (v8)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        HMFGetLogIdentifier();
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "recordID");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "hmbDescription");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "fileURL");
        v27 = v10;
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "path");
        v28 = v11;
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v31 = v15;
        v32 = 2112;
        v33 = v4;
        v34 = 2112;
        v35 = v16;
        v36 = 2112;
        v37 = v18;
        _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' CKAsset for record %@ from %@", buf, 0x2Au);

        v11 = v28;
        v10 = v27;

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(v7, "fileURL");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "path");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v29 = v11;
        v21 = v10;
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "recordID");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "hmbDescription");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        v31 = v22;
        v32 = 2112;
        v33 = v4;
        v34 = 2112;
        v35 = v24;
        v36 = 2112;
        v37 = v7;
        _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a CKAsset on record %@: %@", buf, 0x2Au);

        v10 = v21;
        v11 = v29;
      }

      objc_autoreleasePoolPop(v11);
      v20 = 0;
    }

  }
  else
  {
    v20 = 0;
  }

  return v20;
}

id createInputStreamWithFilePath(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  objc_msgSend(MEMORY[0x24BDBCE90], "inputStreamWithFileAtPath:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    v7 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v10;
      v14 = 2112;
      v15 = v3;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_ERROR, "%{public}@Failed to create input stream for file at path: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
    if (a2)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 52);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
    }
  }

  return v5;
}

id stringFromCKRecord(void *a1, void *a2, void *a3, uint64_t a4, _QWORD *a5)
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  int v19;
  id v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v37;
  void *v38;
  void *context;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  _QWORD *v45;
  _QWORD *v46;
  uint8_t buf[4];
  void *v48;
  __int16 v49;
  id v50;
  __int16 v51;
  void *v52;
  __int16 v53;
  id v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = a3;
  if (!v10
    || (readDataFromCKRecordOptionalAssetField((uint64_t)v8), (v11 = objc_claimAutoreleasedReturnValue()) == 0)
    || (v12 = (void *)v11,
        v13 = (id)objc_msgSend(objc_alloc(MEMORY[0x24BDD17C8]), "initWithData:encoding:", v11, 4),
        v12,
        !v13))
  {
    v14 = v8;
    v15 = v9;
    objc_msgSend(v14, "objectForKeyedSubscript:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = v16;
    if (v16)
    {
      v45 = a5;
      v18 = v16;
      objc_opt_class();
      v19 = objc_opt_isKindOfClass() & 1;
      v20 = v19 ? v18 : 0;
      v40 = v20;

      context = (void *)MEMORY[0x227676638]();
      objc_opt_class();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = v22;
      if (v19)
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v37 = v8;
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "recordID");
          v42 = v9;
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v25, "hmbDescription");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v48 = v24;
          v49 = 2112;
          v50 = v15;
          v51 = 2112;
          v52 = v26;
          _os_log_impl(&dword_2218F0000, v23, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSString for record %@", buf, 0x20u);

          v9 = v42;
          v8 = v37;
        }

        objc_autoreleasePoolPop(context);
        v13 = v18;
        a5 = v45;
      }
      else
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "recordID");
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "hmbDescription");
          v44 = v9;
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v48 = v33;
          v49 = 2112;
          v50 = v15;
          v51 = 2112;
          v52 = v34;
          v53 = 2112;
          v54 = v18;
          _os_log_impl(&dword_2218F0000, v23, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

          v9 = v44;
        }

        objc_autoreleasePoolPop(context);
        a5 = v45;
        if (v45)
        {
          objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 43);
          v13 = 0;
          *v45 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v13 = 0;
        }
      }

    }
    else
    {
      v43 = v9;
      v27 = (void *)MEMORY[0x227676638]();
      objc_opt_class();
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      HMFGetOSLogHandle();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v46 = a5;
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "recordID");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "hmbDescription");
        v41 = v27;
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v48 = v30;
        v49 = 2112;
        v50 = v15;
        v51 = 2112;
        v52 = v32;
        _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

        v27 = v41;
        a5 = v46;
      }

      objc_autoreleasePoolPop(v27);
      if (a5)
      {
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 43);
        v13 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v13 = 0;
      }
      v9 = v43;
    }

    if (!v13)
      goto LABEL_29;
  }
  if (!objc_msgSend(v13, "length"))
  {
    if (a5)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 51);
      v35 = 0;
      *a5 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_30;
    }
LABEL_29:
    v35 = 0;
    goto LABEL_30;
  }
  v13 = v13;
  v35 = v13;
LABEL_30:

  return v35;
}

uint64_t significantEventReasonFromVideoAnalyzerEventClass(void *a1)
{
  void *v3;
  NSObject *v4;
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0
    || (objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
  {
    return 2;
  }
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 3;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 4;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) != 0)
    return 5;
  if ((objc_msgSend(a1, "isEqual:", objc_opt_class()) & 1) == 0)
  {
    v3 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 138543618;
      v7 = v5;
      v8 = 2112;
      v9 = a1;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_ERROR, "%{public}@Unknown video analyzer event class: %@", (uint8_t *)&v6, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
  }
  return 1;
}

void sub_221E64620(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E64DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__77765(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__77766(uint64_t a1)
{

}

void sub_221E6A0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__78372(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__78373(uint64_t a1)
{

}

HMDNetworkRouterLANIdentifierList *createIdentifierListFromLANRule(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  HMDNetworkRouterLANIdentifierList *v7;

  v1 = (objc_class *)MEMORY[0x24BE1BC28];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithValue:", &unk_24E96B0A8);
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithObject:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v2, "areConnectionsWithOtherAccessoriesAllowed");

  if (v5)
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE1BC28]), "initWithValue:", &unk_24E96B0F0);
    objc_msgSend(v4, "addObject:", v6);

  }
  v7 = -[HMDNetworkRouterLANIdentifierList initWithIdentifiers:]([HMDNetworkRouterLANIdentifierList alloc], "initWithIdentifiers:", v4);

  return v7;
}

void sub_221E6EC04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E70CB0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221E70F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E7132C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E718AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E73590(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E75174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t arraysEqualIgnoringOrder(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "count");
  if (v5 == objc_msgSend(v4, "count"))
  {
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithArray:", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithArray:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v6, "isEqualToSet:", v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

__CFString *HMDSleepConfigurationOperationStatusAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E780BD8[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDSleepConfigurationOperationStatus %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDSleepConfigurationOperationTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 4)
    return off_24E780BF8[a1 - 1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDSleepConfigurationOperationType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221E7B88C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E7BA34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E7BCD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E7BD44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E7DE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__82665(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__82666(uint64_t a1)
{

}

void sub_221E85068(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E855BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E85C68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E85CD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E88A18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E88BA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E88C28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E88E64(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E88FD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E89188(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8B388(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t isAccessoryInDefaultGroup(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "defaultNetworkProtectionGroupUUID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(v1, "networkProtectionGroupUUID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v2, "isEqual:", v3);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_221E8E574(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_221E8E5E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8E6BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8E894(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8E938(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8EA18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8EEF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8F06C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8F1F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8F438(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E8F51C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E908D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E90D20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDAccountAddHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v15;
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3
    && (os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4),
        (objc_msgSend(*((id *)v3 + 3), "containsObject:", v4) & 1) == 0))
  {
    v6 = (void *)objc_msgSend(*((id *)v3 + 3), "mutableCopy");
    objc_msgSend(v6, "addObject:", v4);
    v7 = objc_msgSend(v6, "copy");
    v8 = (void *)*((_QWORD *)v3 + 3);
    *((_QWORD *)v3 + 3) = v7;

    v9 = (void *)MEMORY[0x227676638]();
    v10 = v3;
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138543618;
      v16 = v12;
      v17 = 2112;
      v18 = v4;
      _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_INFO, "%{public}@Registering account handle: %@", (uint8_t *)&v15, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
    +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "addHandle:toAccount:", v4, v10);

    v5 = 1;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __HMDAccountDidUpdateHandles(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Handles updated", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "postNotificationName:object:", CFSTR("HMDAccountHandlesUpdatedNotification"), v3);

  }
}

uint64_t __HMDAccountAddDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = 0;
  if (v3 && v4)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    if ((objc_msgSend(*((id *)v3 + 4), "containsObject:", v5) & 1) != 0)
    {
      v6 = 0;
    }
    else
    {
      objc_msgSend(*((id *)v3 + 4), "addObject:", v5);
      v6 = 1;
    }
  }

  return v6;
}

void __HMDAccountDidAddDevice(void *a1, void *a2)
{
  os_unfair_lock *v3;
  id v4;
  void *v5;
  void *v6;
  os_unfair_lock *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Device added: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = CFSTR("HMDDeviceNotificationKey");
    v13 = v5;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "postNotificationName:object:userInfo:", CFSTR("HMDAccountAddedDeviceNotification"), v7, v11);

  }
}

id __HMDAccountRemoveHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = a1;
  if (v3)
  {
    v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    objc_msgSend(*((id *)v3 + 3), "member:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      v6 = (void *)objc_msgSend(*((id *)v3 + 3), "mutableCopy");
      objc_msgSend(v6, "removeObject:", v5);
      v7 = objc_msgSend(v6, "copy");
      v8 = (void *)*((_QWORD *)v3 + 3);
      *((_QWORD *)v3 + 3) = v7;

    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id __HMDAccountRemoveDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  if (v3)
  {
    v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    objc_msgSend(*((id *)v3 + 4), "member:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
      objc_msgSend(*((id *)v3 + 4), "removeObject:", v5);
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void __HMDAccountDidRemoveDevice(void *a1, void *a2)
{
  os_unfair_lock *v3;
  id v4;
  void *v5;
  os_unfair_lock *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v14 = v8;
      v15 = 2112;
      v16 = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Device removed: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = CFSTR("HMDDeviceNotificationKey");
    v12 = v4;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("HMDAccountRemovedDeviceNotification"), v6, v10);

  }
}

void sub_221E92C18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221E92EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221E93204(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

BOOL __lookupDeviceForRemoteCommands(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  _BOOL8 v12;
  id v13;
  NSObject *v14;
  void *v16;
  void *context;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = v3;
  if (a2)
  {
    objc_msgSend(v3, "accessory");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "home");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      v7 = v4;
      objc_msgSend(v7, "accessory");
      v8 = (id)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v9 = v8;
      else
        v9 = 0;
      v10 = v9;

      objc_msgSend(v10, "device");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11 != 0;
      if (v11)
      {
        context = (void *)MEMORY[0x227676638]();
        v18 = v7;
        v13 = v7;
        HMFGetOSLogHandle();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v20 = v16;
          v21 = 2112;
          v22 = v11;
          _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_INFO, "%{public}@Routing the command to the device backing the media accessory %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(context);
        *a2 = objc_retainAutorelease(v11);
        v7 = v18;
      }

    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void sub_221E95CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__84425(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__84426(uint64_t a1)
{

}

void sub_221E9A75C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_221E9B000(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221E9B0BC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221E9B178(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_221E9B264(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221E9B364(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

__CFString *HMDLowPowerModeStateMachineDescription(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 5)
  {
    v2 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown (%@)"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_24E7817B8[a1];
  }
  return v1;
}

id findMatchingCharacteristic(void *a1, void *a2)
{
  id v3;
  __CFString *v4;
  __CFString *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;
  __CFString *v11;

  v3 = a1;
  v4 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = __findMatchingCharacteristic_block_invoke;
  v9[3] = &unk_24E781778;
  v10 = v3;
  v11 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v5 = CFSTR("00000221-0000-1000-8000-0026BB765291");
  v6 = v3;
  objc_msgSend(a2, "hmf_objectPassingTest:", v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t __findMatchingCharacteristic_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "type");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32)))
    {
      objc_msgSend(v6, "service");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "serviceType");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "isEqualToString:", *(_QWORD *)(a1 + 40));

    }
    else
    {
      v10 = 0;
    }

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

id deserializeObject(objc_class *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  int v7;
  id v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  id v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5 && -[objc_class conformsToProtocol:](a1, "conformsToProtocol:", &unk_2557A2E18))
  {
    v6 = objc_alloc_init(a1);
    v15 = 0;
    v7 = objc_msgSend(v6, "parseFromData:error:", v5, &v15);
    v8 = v15;
    if (v8 || !v6 || !v7)
    {
      v9 = (void *)MEMORY[0x227676638]();
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        NSStringFromClass(a1);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        v17 = v11;
        v18 = 2112;
        v19 = v12;
        v20 = 2112;
        v21 = v8;
        _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_ERROR, "%{public}@Failed to create an object of class: %@ with error: %@", buf, 0x20u);

      }
      objc_autoreleasePoolPop(v9);

      goto LABEL_15;
    }
  }
  else
  {
    v6 = 0;
  }
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_15:
    v13 = 0;
    goto LABEL_16;
  }
  v6 = v6;
  v13 = v6;
LABEL_16:

  return v13;
}

id HMDLowPowerModeOperationStatusDescription(unint64_t a1)
{
  void *v1;
  void *v2;

  HMDSleepConfigurationOperationStatusAsString(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("HMDSleepConfigurationOperationStatus"), &stru_24E79DB48);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id HMDLowPowerModeOperationTypeDescription(uint64_t a1)
{
  void *v1;
  void *v2;

  HMDSleepConfigurationOperationTypeAsString(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:", CFSTR("HMDSleepConfigurationOperationType"), &stru_24E79DB48);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_221E9E2B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HMDLowPowerModeWoWLANInfoForSupportedSleepConfiguration(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  HMFWoWLANInfo *v19;
  HMFWoWLANInfo *v20;
  HMFWoWLANInfo *v21;
  id v23;
  id v24;
  id obj;
  HMFWoWLANInfo *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v24 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "version");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "value");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "unsignedCharValue");

  objc_msgSend(v1, "supportedWoLPacketConfigurations");
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v5)
  {
    v6 = v5;
    v23 = v1;
    v26 = 0;
    v7 = *(_QWORD *)v28;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v28 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        objc_msgSend(v9, "wakePacketType", v23);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "value");

        objc_msgSend(v9, "wakeDestinationPort");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "value");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "unsignedShortValue");

        objc_msgSend(v9, "wakeDestinationAddress");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "wakeType");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "value");

        objc_msgSend(v9, "wakePattern");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = -[HMFWoWLANInfo initWithWakeVersion:wakePort:wakeAddress:wakeType:wakePacketType:wakePattern:]([HMFWoWLANInfo alloc], "initWithWakeVersion:wakePort:wakeAddress:wakeType:wakePacketType:wakePattern:", v4, v14, v15, v17, v11, v18);
        v20 = v19;
        if (v19)
        {
          if (v26 || -[HMFWoWLANInfo wakeType](v19, "wakeType") != 2)
            objc_msgSend(v24, "addObject:", v20);
          else
            v26 = v20;
        }

      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v6);
    v21 = v26;
    if (v26)
      objc_msgSend(v24, "insertObject:atIndex:", v26, 0);
    v1 = v23;
  }
  else
  {
    v21 = 0;
  }

  return v24;
}

void sub_221E9FBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221EA01FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v15 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va2, 8);
  _Unwind_Resume(a1);
}

void sub_221EA1440(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221EA1558(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221EA16B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221EA1728(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221EA17A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221EA19E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__85130(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__85131(uint64_t a1)
{

}

void sub_221EA2AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

HMCContext *__contextWithContextName(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  HMCContext *v9;
  HMCPartition *v10;
  HMCContext *v11;

  v3 = a2;
  v4 = a1;
  v5 = (void *)objc_msgSend(v4, "newManagedObjectContext");
  objc_msgSend(v4, "coordinator");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "setPersistentStoreCoordinator:", v6);
  objc_msgSend(v5, "setName:", v3);

  +[HMDCoreDataContextTransactionAuthor firstPartyContextAuthor](HMDCoreDataContextTransactionAuthor, "firstPartyContextAuthor");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "string");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setTransactionAuthor:", v8);

  objc_msgSend(v5, "setMergePolicy:", *MEMORY[0x24BDBB478]);
  v9 = [HMCContext alloc];
  v10 = objc_alloc_init(HMCPartition);
  v11 = -[HMCContext initWithContext:partition:](v9, "initWithContext:partition:", v5, v10);

  return v11;
}

uint64_t reasonFromResetSyncNotification(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  objc_msgSend(a1, "userInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", *MEMORY[0x24BDBB3E8]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  v5 = objc_msgSend(v4, "unsignedIntegerValue");
  return v5;
}

__CFString *stringFromResetSyncReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 7)
    return off_24E781A28[a1 - 1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown: %lu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221EA2F34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMDCoreDataCloudKitContainerOptions()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_opt_new();
  objc_msgSend(v0, "setUseZoneWidePCS:", 1);
  objc_msgSend(v0, "setApplicationBundleIdentifierOverrideForPushTopicGeneration:", CFSTR("com.apple.willowd.homekit.config"));
  v1 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBB608]), "initWithContainerIdentifier:", CFSTR("com.apple.homekit.config"));
  objc_msgSend(v1, "setUseDeviceToDeviceEncryption:", 1);
  objc_msgSend(v1, "setAutomaticallyScheduleImportAndExportOperations:", 1);
  objc_msgSend(v1, "setContainerOptions:", v0);
  objc_msgSend(v1, "setApsConnectionMachServiceName:", CFSTR("com.apple.aps.homekit"));

  return v1;
}

void sub_221EA8394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221EA8564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221EA8710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221EA88CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221EA8A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id entityFromObject(void *a1, int a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  int v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  int v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t i;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  int v87;
  void *v88;
  void *v89;
  id obj;
  void *v91;
  void *v92;
  _QWORD v93[4];
  id v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[128];
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = objc_alloc_init(MEMORY[0x24BE812C0]);
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectName"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setName:", v5);

  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectType"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setEntityType:", v6);

  v7 = (void *)MEMORY[0x24BDBCF48];
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "URLWithString:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setIdentifier:", v9);

  if (a2)
  {
    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectRelatedIdentifiers"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v10, "count"))
    {
      hmd_urlsFromStrings(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setRelatedEntityIdentifiers:", v11);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHome"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHome"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setHome:", v13);

    if (a2)
    {
      v14 = (void *)MEMORY[0x24BDBCF48];
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHomeIdentifier"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "URLWithString:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setHomeIdentifier:", v16);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoom"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoom"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setRoom:", v18);

    if (!a2)
      goto LABEL_20;
    v19 = (void *)MEMORY[0x24BDBCF48];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectRoomIdentifier"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "URLWithString:", v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setRoomIdentifier:", v21);

  }
  else if (!a2)
  {
    goto LABEL_20;
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectZones"));
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (v22)
  {
    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectZones"));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "firstObject");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setZone:", v24);

    objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectZoneIdentifiers"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v25, "count"))
    {
      hmd_urlsFromStrings(v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setZoneIdentifiers:", v26);

    }
  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryPrimaryServiceIdentifier"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  if (v27)
  {
    v28 = (void *)MEMORY[0x24BDBCF48];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryPrimaryServiceIdentifier"));
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "URLWithString:", v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setPrimaryServiceIdentifier:", v30);

  }
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessory"));
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  if (v31)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessory"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAccessory:", v32);

    v33 = (void *)MEMORY[0x24BDBCF48];
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectAccessoryIdentifier"));
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "URLWithString:", v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAccessoryIdentifier:", v35);

  }
LABEL_20:
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectType"));
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "isEqualToString:", *MEMORY[0x24BE81F48]);

  if (v37)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectSceneType"));
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    mapToSiriSceneType(v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSceneType:", v39);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectStatus"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setStatus:", v40);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectSceneActions"));
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setSceneActions:", v41);

  }
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectServiceType"));
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectServiceSubType"));
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v92 = v42;
  if (!v43)
  {
LABEL_41:
    if (!a2)
      goto LABEL_44;
    goto LABEL_42;
  }
  if ((objc_msgSend(v43, "isEqual:", *MEMORY[0x24BE82130]) & 1) == 0
    && (objc_msgSend(v43, "isEqual:", *MEMORY[0x24BE82050]) & 1) == 0
    && !objc_msgSend(v43, "isEqual:", *MEMORY[0x24BE82038]))
  {
    if (objc_msgSend(v43, "isEqualToString:", *MEMORY[0x24BE820C0]))
    {
      v50 = v4;
      v51 = v43;
    }
    else
    {
      objc_msgSend(v42, "mapToAssistantServiceName:", v43);
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setServiceType:", v52);

      objc_msgSend(v4, "serviceType");
      v53 = (void *)objc_claimAutoreleasedReturnValue();

      if (v53)
        goto LABEL_39;
      v51 = (void *)*MEMORY[0x24BE82078];
      v50 = v4;
    }
    objc_msgSend(v50, "setServiceType:", v51);
LABEL_39:
    if (v44)
      objc_msgSend(v4, "setServiceSubType:", v44);
    goto LABEL_41;
  }
  objc_msgSend(v4, "setServiceType:", v43);
  if (v44)
    objc_msgSend(v4, "setServiceSubType:", v44);
  if (a2)
  {
    getAttributeForMediaProfile(v4);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setAttributes:", v45);

    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectReference"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v47 = v46;
    else
      v47 = 0;
    v48 = v47;

    v49 = objc_msgSend(v48, "isCurrentAccessory");
    v42 = v92;
    if (v49)
      objc_msgSend(v4, "setCurrentDevice:", MEMORY[0x24BDBD1C8]);
LABEL_42:
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHashedRouteUID"));
    v54 = (void *)objc_claimAutoreleasedReturnValue();

    if (v54)
    {
      objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectHashedRouteUID"));
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setHashedRouteUID:", v55);

    }
  }
LABEL_44:
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("objectCharacteristics"));
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = v56;
  if (a2 && v56)
  {
    v85 = v44;
    v86 = v43;
    v87 = a2;
    v88 = v3;
    v89 = v4;
    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v56, "count"));
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = v92;
    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v57, "count"));
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
    v98 = 0u;
    v83 = v57;
    obj = v57;
    v59 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v95, v99, 16);
    if (v59)
    {
      v60 = v59;
      v61 = *(_QWORD *)v96;
      do
      {
        for (i = 0; i != v60; ++i)
        {
          if (*(_QWORD *)v96 != v61)
            objc_enumerationMutation(obj);
          v63 = *(_QWORD *)(*((_QWORD *)&v95 + 1) + 8 * i);
          objc_msgSend(v42, "mapToAssistantCharacteristicName:", v63, v83);
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          if (v64)
          {
            objc_msgSend(v42, "mapReadCharacteristicFromAssistantName:", v64);
            v65 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "getAliasedCharacteristicTypes:", v65);
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_msgSend(v58, "containsObject:", v64) & 1) == 0
              && ((objc_msgSend(v65, "isEqualToString:", v63) & 1) != 0
               || objc_msgSend(v66, "containsObject:", v63)))
            {
              objc_msgSend(v58, "addObject:", v64);
            }
            objc_msgSend(v42, "mapWriteCharacteristicFromAssistantName:", v64);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "getAliasedCharacteristicTypes:", v67);
            v68 = (void *)objc_claimAutoreleasedReturnValue();

            if ((objc_msgSend(v91, "containsObject:", v64) & 1) == 0
              && ((objc_msgSend(v67, "isEqual:", v63) & 1) != 0
               || objc_msgSend(v68, "containsObject:", v63))
              && (HMFEqualObjects() & 1) == 0)
            {
              objc_msgSend(v91, "addObject:", v64);
            }

            v42 = v92;
          }

        }
        v60 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v95, v99, 16);
      }
      while (v60);
    }

    v43 = v86;
    v3 = v88;
    v4 = v89;
    if (objc_msgSend(v86, "isEqualToString:", *MEMORY[0x24BDD6C00]))
    {
      objc_msgSend(v88, "objectForKeyedSubscript:", CFSTR("objectReference"));
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v70 = v69;
      else
        v70 = 0;
      v71 = v70;

      objc_msgSend(v71, "accessory");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v72, "lightProfiles");
      v73 = objc_claimAutoreleasedReturnValue();
      v93[0] = MEMORY[0x24BDAC760];
      v93[1] = 3221225472;
      v93[2] = __entityFromObject_block_invoke;
      v93[3] = &unk_24E782CB8;
      v94 = v71;
      v74 = v71;
      objc_msgSend((id)v73, "na_firstObjectPassingTest:", v93);
      v75 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v75, "settings");
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      LOBYTE(v73) = objc_msgSend(v76, "supportedFeatures");

      if ((v73 & 1) != 0)
        objc_msgSend(v58, "addObject:", *MEMORY[0x24BE81CA8]);

      v42 = v92;
    }
    a2 = v87;
    v44 = v85;
    if (objc_msgSend(v58, "count", v83))
    {
      objc_msgSend(v89, "setAttributes:", v58);
      if (objc_msgSend(v91, "count"))
        objc_msgSend(v89, "setTargetAttributes:", v91);
    }

    v57 = v84;
  }
  if (a2)
  {
    objc_msgSend(v3, "objectForKey:", CFSTR("objectGroups"));
    v77 = (void *)objc_claimAutoreleasedReturnValue();

    if (v77)
    {
      objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectGroups"));
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v78, "firstObject");
      v79 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "setServiceGroup:", v79);

      objc_msgSend(v3, "hmf_arrayForKey:", CFSTR("objectGroupIdentifiers"));
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v80, "count"))
      {
        hmd_urlsFromStrings(v80);
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setServiceGroupIdentifiers:", v81);

      }
      v42 = v92;
    }
  }

  return v4;
}

id hmd_urlsFromStrings(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  uint64_t v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)v24;
    v8 = 0x24BDBC000uLL;
    *(_QWORD *)&v5 = 138543618;
    v21 = v5;
    do
    {
      v9 = 0;
      v22 = v6;
      do
      {
        if (*(_QWORD *)v24 != v7)
          objc_enumerationMutation(v3);
        v10 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v9);
        objc_msgSend(*(id *)(v8 + 3912), "URLWithString:", v10, v21);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          objc_msgSend(v2, "addObject:", v11);
        }
        else
        {
          v12 = (void *)MEMORY[0x227676638]();
          HMFGetOSLogHandle();
          v13 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            HMFGetLogIdentifier();
            v14 = v7;
            v15 = v8;
            v16 = v2;
            v17 = v3;
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = v21;
            v28 = v18;
            v29 = 2112;
            v30 = v10;
            _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_ERROR, "%{public}@Unable to map NSString '%@' to NSURL", buf, 0x16u);

            v3 = v17;
            v2 = v16;
            v8 = v15;
            v7 = v14;
            v6 = v22;
          }

          objc_autoreleasePoolPop(v12);
        }

        ++v9;
      }
      while (v6 != v9);
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
    }
    while (v6);
  }

  v19 = (void *)objc_msgSend(v2, "copy");
  return v19;
}

id mapToSiriSceneType(void *a1)
{
  id v1;
  id v2;
  id *v3;
  id v4;

  v1 = a1;
  v2 = (id)*MEMORY[0x24BE81F98];
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BDD5228]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x24BE81F78];
LABEL_9:
    v4 = *v3;

    v2 = v4;
    goto LABEL_10;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BDD5210]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x24BE81F80];
    goto LABEL_9;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BDD51F8]) & 1) != 0)
  {
    v3 = (id *)MEMORY[0x24BE81F88];
    goto LABEL_9;
  }
  if (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x24BDD5200]))
  {
    v3 = (id *)MEMORY[0x24BE81F90];
    goto LABEL_9;
  }
LABEL_10:

  return v2;
}

id getAttributeForMediaProfile(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;

  v1 = a1;
  if (getAttributeForMediaProfile_onceToken != -1)
    dispatch_once(&getAttributeForMediaProfile_onceToken, &__block_literal_global_87311);
  objc_msgSend(v1, "serviceType");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "serviceSubType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
    goto LABEL_16;
  objc_msgSend(v1, "entityType");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqualToString:", *MEMORY[0x24BE81F50]);

  if (!v5)
    goto LABEL_16;
  if ((objc_msgSend(v2, "isEqualToString:", *MEMORY[0x24BE82050]) & 1) == 0)
  {
    v7 = *MEMORY[0x24BE82130];
    if (objc_msgSend(v2, "isEqualToString:", *MEMORY[0x24BE82130])
      && (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x24BE81FE0]) & 1) != 0)
    {
      v6 = &getAttributeForMediaProfile_homePodAttributes;
      goto LABEL_15;
    }
    if (objc_msgSend(v2, "isEqualToString:", *MEMORY[0x24BE82038])
      && (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x24BE81FA0]) & 1) != 0
      || objc_msgSend(v2, "isEqualToString:", v7)
      && objc_msgSend(v3, "isEqualToString:", *MEMORY[0x24BE81FA0]))
    {
      v6 = &getAttributeForMediaProfile_thirdPartyAttributes;
      goto LABEL_15;
    }
LABEL_16:
    v8 = 0;
    goto LABEL_17;
  }
  v6 = &getAttributeForMediaProfile_atvAttributes;
LABEL_15:
  v8 = (id)*v6;
LABEL_17:

  return v8;
}

uint64_t __entityFromObject_block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqual:", v3);

  return v4;
}

void __getAttributeForMediaProfile_block_invoke()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  v0 = *MEMORY[0x24BE81DE0];
  v9[0] = *MEMORY[0x24BE81E28];
  v9[1] = v0;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v9, 2);
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)getAttributeForMediaProfile_atvAttributes;
  getAttributeForMediaProfile_atvAttributes = v1;

  v8 = v0;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v8, 1);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)getAttributeForMediaProfile_homePodAttributes;
  getAttributeForMediaProfile_homePodAttributes = v3;

  v7 = v0;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v7, 1);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)getAttributeForMediaProfile_thirdPartyAttributes;
  getAttributeForMediaProfile_thirdPartyAttributes = v5;

}

id entityForService(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  int v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v9 = a3;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v10)
  {
    v11 = v10;
    v21 = a4;
    v22 = v8;
    v12 = *(_QWORD *)v24;
    while (2)
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v24 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "urlString");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v16, "isEqual:", v15);

        if (v17)
        {
          entityFromObject(v14, v21);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v18 = v19;
          v8 = v22;
          if (v22)
            objc_msgSend(v19, "setServiceType:", v22);

          goto LABEL_14;
        }

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      if (v11)
        continue;
      break;
    }
    v18 = 0;
    v8 = v22;
  }
  else
  {
    v18 = 0;
  }
LABEL_14:

  return v18;
}

id entityForMediaProfile(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v6 = a2;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v7)
  {
    v8 = v7;
    v17 = a3;
    v9 = *(_QWORD *)v19;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v19 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
        objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("objectIdentifier"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "urlString");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "isEqual:", v12);

        if ((v14 & 1) != 0)
        {
          entityFromObject(v11, v17);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          goto LABEL_11;
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      if (v8)
        continue;
      break;
    }
  }
  v15 = 0;
LABEL_11:

  return v15;
}

void sub_221EB42AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void HMDPthreadHook(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v9;

  +[HMDThreadMonitor sharedInstance](HMDThreadMonitor, "sharedInstance");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "pthreadHookWithEvent:", a1);
  v8 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))objc_msgSend(v9, "previousHook");
  if (v8)
    v8(a1, a2, a3, a4);

}

void __HMDHomeDataCopyProperties(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;

  v5 = a2;
  v54 = a1;
  objc_msgSend(v5, "homes");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "copyWithZone:", a3);
  v8 = (void *)v54[2];
  v54[2] = v7;

  objc_msgSend(v5, "accessories");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "copyWithZone:", a3);
  v11 = (void *)v54[3];
  v54[3] = v10;

  objc_msgSend(v5, "primaryHomeUUID");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "copyWithZone:", a3);
  v14 = (void *)v54[4];
  v54[4] = v13;

  objc_msgSend(v5, "lastCurrentHomeUUID");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "copyWithZone:", a3);
  v17 = (void *)v54[5];
  v54[5] = v16;

  v54[7] = objc_msgSend(v5, "schemaVersion");
  v54[6] = objc_msgSend(v5, "dataVersion");
  v54[8] = objc_msgSend(v5, "recoveryVersion");
  objc_msgSend(v5, "dataTag");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "copyWithZone:", a3);
  v20 = (void *)v54[9];
  v54[9] = v19;

  objc_msgSend(v5, "UUIDsOfRemovedHomes");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v21, "copyWithZone:", a3);
  v23 = (void *)v54[10];
  v54[10] = v22;

  objc_msgSend(v5, "cloudZones");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v24, "copyWithZone:", a3);
  v26 = (void *)v54[11];
  v54[11] = v25;

  objc_msgSend(v5, "incomingInvitations");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = objc_msgSend(v27, "copyWithZone:", a3);
  v29 = (void *)v54[12];
  v54[12] = v28;

  objc_msgSend(v5, "currentDevice");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend(v30, "copyWithZone:", a3);
  v32 = (void *)v54[13];
  v54[13] = v31;

  objc_msgSend(v5, "pendingReasonSaved");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(v33, "copyWithZone:", a3);
  v35 = (void *)v54[14];
  v54[14] = v34;

  objc_msgSend(v5, "pendingUserManagementOperations");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = objc_msgSend(v36, "copyWithZone:", a3);
  v38 = (void *)v54[15];
  v54[15] = v37;

  objc_msgSend(v5, "unprocessedOperationIdentifiers");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = objc_msgSend(v39, "copyWithZone:", a3);
  v41 = (void *)v54[16];
  v54[16] = v40;

  objc_msgSend(v5, "applicationData");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = objc_msgSend(v42, "copyWithZone:", a3);
  v44 = (void *)v54[17];
  v54[17] = v43;

  v54[18] = objc_msgSend(v5, "residentEnabledState");
  objc_msgSend(v5, "account");
  v45 = objc_claimAutoreleasedReturnValue();
  v46 = (void *)v54[19];
  v54[19] = v45;

  objc_msgSend(v5, "remoteAccounts");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = objc_msgSend(v47, "copyWithZone:", a3);
  v49 = (void *)v54[20];
  v54[20] = v48;

  objc_msgSend(v5, "primaryAccountHandle");
  v50 = objc_claimAutoreleasedReturnValue();
  v51 = (void *)v54[21];
  v54[21] = v50;

  *((_BYTE *)v54 + 8) = objc_msgSend(v5, "accessAllowedWhenLocked");
  objc_msgSend(v5, "demoAccessories");
  v52 = objc_claimAutoreleasedReturnValue();
  v53 = (void *)v54[22];
  v54[22] = v52;

  LOBYTE(a3) = objc_msgSend(v5, "demoFinalized");
  *((_BYTE *)v54 + 9) = a3;

}

void sub_221EB5A0C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221EBB8E0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221EBBF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__88194(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__88195(uint64_t a1)
{

}

void sub_221EC2208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221EC25D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221EC2EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__88837(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__88838(uint64_t a1)
{

}

void sub_221EC9610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221EC9B2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221ECA2C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221ECA9F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221ECAB7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221ECBC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221ECBF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_221ECC594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__89918(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__89919(uint64_t a1)
{

}

void sub_221ED07C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__90213(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__90214(uint64_t a1)
{

}

id anonymizeUnknownVendorString(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  if (v1)
  {
    if (anonymizeUnknownVendorString_onceToken != -1)
      dispatch_once(&anonymizeUnknownVendorString_onceToken, &__block_literal_global_91923);
    if ((objc_msgSend((id)anonymizeUnknownVendorString_allowedNames, "containsObject:", v1) & 1) != 0
      || (unint64_t)objc_msgSend(v1, "length") <= 2)
    {
      v3 = v1;
    }
    else
    {
      objc_msgSend(v1, "substringToIndex:", 2);
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(CFSTR("unknown: "), "stringByAppendingString:", v2);
      v3 = (id)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void __anonymizeUnknownVendorString_block_invoke()
{
  void *v0;

  v0 = (void *)anonymizeUnknownVendorString_allowedNames;
  anonymizeUnknownVendorString_allowedNames = (uint64_t)&unk_24E970EB0;

}

BOOL AWDHomeKitCameraStreamIDSConnSetupReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  AWDHomeKitCameraStreamIDSConnSetupParameters *v18;
  uint64_t v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 16;
      }
      else if ((_DWORD)v17 == 2)
      {
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 8;
      }
      else
      {
        if ((_DWORD)v17 != 1)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
          continue;
        }
        v18 = objc_alloc_init(AWDHomeKitCameraStreamIDSConnSetupParameters);
        v19 = 24;
      }
      objc_storeStrong((id *)(a1 + v19), v18);
      if (!PBReaderPlaceMark() || !AWDHomeKitCameraStreamIDSConnSetupParametersReadFrom((uint64_t)v18, a2))
      {

        return 0;
      }
      PBReaderRecallMark();

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t HMDManagedObjectClassIsBSORepresentable(uint64_t a1)
{
  if (HMDManagedObjectClassIsBSORepresentable__hmf_once_t2 != -1)
    dispatch_once(&HMDManagedObjectClassIsBSORepresentable__hmf_once_t2, &__block_literal_global_46_92353);
  return objc_msgSend((id)HMDManagedObjectClassIsBSORepresentable__hmf_once_v3, "classConforms:", a1);
}

void sub_221EEF754(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_221EF0AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t HMDModelClassIsCDRepresentable(uint64_t a1)
{
  if (HMDModelClassIsCDRepresentable__hmf_once_t0 != -1)
    dispatch_once(&HMDModelClassIsCDRepresentable__hmf_once_t0, &__block_literal_global_92361);
  return objc_msgSend((id)HMDModelClassIsCDRepresentable__hmf_once_v1, "classConforms:", a1);
}

uint64_t __Block_byref_object_copy__92358(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__92359(uint64_t a1)
{

}

id HMDCastIfManagedObjectBSORepresentable(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = objc_opt_class();
    if (HMDManagedObjectClassIsBSORepresentable(v3))
      v1 = v2;
    else
      v1 = 0;
  }
  v4 = v1;

  return v4;
}

id HMDCastIfModelCDRepresentable(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = objc_opt_class();
    if (HMDModelClassIsCDRepresentable(v3))
      v1 = v2;
    else
      v1 = 0;
  }
  v4 = v1;

  return v4;
}

void sub_221EF28A0(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x300], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__93237(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__93238(uint64_t a1)
{

}

void ___legacyMultiUserSettings_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  HMDAnalyticsMultiUserSettingsValueByKeyPath *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;

  v13 = a2;
  v5 = a3;
  v6 = objc_alloc_init(HMDAnalyticsMultiUserSettingsValueByKeyPath);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v7 = v13;
    if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedUserSplitMediaAccountWarning")) & 1) != 0)
    {
      v8 = 2;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedIdentifyVoiceOnboarding")) & 1) != 0)
    {
      v8 = 4;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedTVViewingProfileOnboarding")) & 1) != 0)
    {
      v8 = 6;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedTVViewingProfileSetupBanner")) & 1) != 0)
    {
      v8 = 7;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedCameraRecordingOnboarding")) & 1) != 0)
    {
      v8 = 8;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedCameraRecordingSetupBanner")) & 1) != 0)
    {
      v8 = 9;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("shared.root.siri.identifyVoice")) & 1) != 0)
    {
      v8 = 10;
    }
    else if ((objc_msgSend(v7, "isEqualToString:", CFSTR("shared.root.music.playbackInfluencesForYou")) & 1) != 0)
    {
      v8 = 11;
    }
    else
    {
      v8 = objc_msgSend(v7, "isEqualToString:", CFSTR("private.root.home.dismissedIdentifyVoiceSetupBanner"))? 5: 0;
    }

    -[HMDAnalyticsMultiUserSettingsValueByKeyPath setType:](v6, "setType:", v8);
    if (-[HMDAnalyticsMultiUserSettingsValueByKeyPath type](v6, "type"))
    {
      v9 = v5;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v10 = v9;
      else
        v10 = 0;
      v11 = v10;

      v12 = objc_msgSend(v11, "longLongValue");
      -[HMDAnalyticsMultiUserSettingsValueByKeyPath setMultiUserSettingsValueInteger:](v6, "setMultiUserSettingsValueInteger:", v12);
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", v6);
    }
  }

}

void sub_221EFAB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221EFC2EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_221EFD22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_221F000AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F00170(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F001E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F002A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F00440(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F005F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F00664(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F006E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F009D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F00B3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F00C90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F01B58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F02514(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDCompanionManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  void *v3;
  os_unfair_lock_s *v4;
  NSObject *v5;
  void *v6;
  HMDDevice *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  HMDDevice *v12;
  void *v13;
  HMDDevice *v14;
  void *v15;
  os_unfair_lock_s *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  os_unfair_lock_s *v20;
  NSObject *v21;
  void *v22;
  os_unfair_lock_s *v23;
  void *v24;
  id *v25;
  NSObject *v26;
  id v27;
  HMDDevice *v28;
  void *v29;
  id v30;
  HMDDevice *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t v36[128];
  uint8_t buf[4];
  id v38;
  __int16 v39;
  HMDDevice *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v30 = a1;
  v31 = a2;
  if (v30)
  {
    v3 = (void *)MEMORY[0x227676638]();
    v4 = (os_unfair_lock_s *)v30;
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v38 = v6;
      v39 = 2112;
      v40 = v31;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Updating connected devices: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    v7 = v31;
    v8 = -[HMDDevice countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
    if (v8)
    {
      v9 = *(_QWORD *)v33;
      while (2)
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v33 != v9)
            objc_enumerationMutation(v7);
          v11 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * i);
          if (+[HMDCompanionManager isCompatibleCompanionDevice:](HMDCompanionManager, "isCompatibleCompanionDevice:", v11, v30))
          {
            v12 = [HMDDevice alloc];
            -[os_unfair_lock_s service](v4, "service");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            v14 = -[HMDDevice initWithService:device:](v12, "initWithService:device:", v13, v11);

            if (v14)
            {
              v19 = (void *)MEMORY[0x227676638]();
              v20 = v4;
              HMFGetOSLogHandle();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                HMFGetLogIdentifier();
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v38 = v22;
                v39 = 2112;
                v40 = v14;
                _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_INFO, "%{public}@Found connected companion device: %@", buf, 0x16u);

              }
              objc_autoreleasePoolPop(v19);

              goto LABEL_19;
            }
          }
        }
        v8 = -[HMDDevice countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
        if (v8)
          continue;
        break;
      }
    }

    v15 = (void *)MEMORY[0x227676638]();
    v16 = v4;
    HMFGetOSLogHandle();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v38 = v18;
      _os_log_impl(&dword_2218F0000, v17, OS_LOG_TYPE_INFO, "%{public}@No connected companion found", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v15);
    v14 = 0;
LABEL_19:
    v23 = v4 + 2;
    os_unfair_lock_lock_with_options();
    if ((HMFEqualObjects() & 1) != 0)
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      v24 = (void *)MEMORY[0x227676638]();
      v25 = v4;
      HMFGetOSLogHandle();
      v26 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v27 = (id)objc_claimAutoreleasedReturnValue();
        -[HMDDevice shortDescription](v14, "shortDescription");
        v28 = (HMDDevice *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v38 = v27;
        v39 = 2112;
        v40 = v28;
        _os_log_impl(&dword_2218F0000, v26, OS_LOG_TYPE_DEFAULT, "%{public}@Updated companion to: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v24);
      objc_storeStrong(v25 + 3, v14);
      os_unfair_lock_unlock(v23);
      objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "postNotificationName:object:", CFSTR("HMDCompanionManagerUpdatedCompanionNotification"), v25);

    }
  }

}

void sub_221F05004(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F080F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F08160(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F081CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F08DA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F092BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F09BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221F09CD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F09D88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F0A7F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F0A8A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F0B140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F0B5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F0C2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __run(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = a1;
  v2 = v1;
  switch(v1[19])
  {
    case 0:
      v1[19] = 1;
      goto LABEL_3;
    case 1:
LABEL_3:
      objc_msgSend(v1, "_requestUserPermission");
      goto LABEL_7;
    case 3:
      objc_msgSend(v1, "_configureDevice");
      goto LABEL_7;
    case 5:
      objc_msgSend(v1, "_waitForPostWACMatch");
      goto LABEL_7;
    case 6:
      objc_msgSend(v1, "_postWACMatchTimeout");
LABEL_7:
      v1 = v2;
      break;
    default:
      break;
  }

}

void __callCompletion(void *a1, void *a2, void *a3, uint64_t a4)
{
  id *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id *v13;
  NSObject *v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v7[18], "suspend");
  v10 = v7[18];
  v7[18] = 0;

  v11 = v7[20];
  v7[20] = 0;

  if (v7[17])
  {
    v12 = (void *)MEMORY[0x227676638]();
    v13 = v7;
    HMFGetOSLogHandle();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138543618;
      v18 = v15;
      v19 = 2080;
      v20 = a4;
      _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Calling completion from %s", (uint8_t *)&v17, 0x16u);

    }
    objc_autoreleasePoolPop(v12);
    (*((void (**)(void))v13[17] + 2))();
    v16 = v13[17];
    v13[17] = 0;

  }
}

__CFString *StringFromHMDResidentLocation(uint64_t a1)
{
  __CFString *v1;

  switch(a1)
  {
    case 100:
      return CFSTR("Unknown");
    case 200:
      return CFSTR("Away");
    case 300:
      v1 = CFSTR("AtHome");
      break;
    default:
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown type: %lu"), a1);
      v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
  }
  return v1;
}

void sub_221F10488(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F11884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F12184(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F137AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F138C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F16794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F16B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F17430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDSWAuthFeaturesToString(char a1)
{
  __CFString *v2;
  uint64_t v3;
  void *v4;

  if ((a1 & 1) == 0)
  {
    v2 = CFSTR("<");
    if ((a1 & 2) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(CFSTR("<"), "stringByAppendingString:", CFSTR(" HAP"));
  v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if ((a1 & 2) != 0)
  {
LABEL_5:
    -[__CFString stringByAppendingString:](v2, "stringByAppendingString:", CFSTR(" HAPAirPlay2"));
    v3 = objc_claimAutoreleasedReturnValue();

    v2 = (__CFString *)v3;
  }
LABEL_6:
  -[__CFString stringByAppendingString:](v2, "stringByAppendingString:", CFSTR(" >"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_221F17810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id mirrorLegacyZone(void *a1, int a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v11;
  id v12;
  id v13;
  objc_class *v14;
  id v15;
  id v16;
  void *v17;
  HMDLegacyModelContainer *v18;
  void *v19;
  void *v20;
  HMDLegacyModelContainer *v21;
  id v22;
  void *v23;
  void *v24;

  v11 = a1;
  v12 = a4;
  v13 = a5;
  v14 = (objc_class *)MEMORY[0x24BE4ECF0];
  v15 = a3;
  v16 = objc_alloc_init(v14);
  if (a2)
    objc_msgSend(v11, "openOrCreatePrivateZoneWithID:configuration:delegate:error:", v15, v16, 0, a6);
  else
    objc_msgSend(v11, "openExistingPrivateZoneWithID:configuration:delegate:error:", v15, v16, 0, a6);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    v18 = [HMDLegacyModelContainer alloc];
    +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = -[HMDLegacyModelContainer initWithDataVersion:legacyDataVersion:pairingIdentity:](v18, "initWithDataVersion:legacyDataVersion:pairingIdentity:", v19, v20, v12);

    v22 = objc_alloc_init(MEMORY[0x24BE4ED00]);
    objc_msgSend(v22, "setCreateIfNeeded:", 1);
    objc_msgSend(v22, "setDelegate:", v13);
    objc_msgSend(v22, "setModelContainer:", v21);
    objc_msgSend(v11, "localDatabase");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "openZoneWithMirror:configuration:error:", v17, v22, a6);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v24 = 0;
  }

  return v24;
}

id DateFromEpochInterval(void *a1)
{
  void *v1;

  if (a1)
  {
    v1 = (void *)MEMORY[0x24BDBCE60];
    objc_msgSend(a1, "doubleValue");
    objc_msgSend(v1, "dateWithTimeIntervalSince1970:");
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_221F26458(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2BB88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2BE00(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2BE5C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2BFD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C1A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C3B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C5B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C834(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C8E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2C984(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2CB24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2CBDC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F2CCC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void notifyMatterMetricPairingStep(void *a1, unint64_t a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = (void *)MEMORY[0x227676638]();
  v5 = v3;
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    HMDMatterAccessoryPairingStepAsString(a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543618;
    v14 = v7;
    v15 = 2112;
    v16 = v8;
    _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing step %@", (uint8_t *)&v13, 0x16u);

  }
  objc_autoreleasePoolPop(v4);
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setObject:forKeyedSubscript:", v10, CFSTR("HMDMatterAccessoryPairingStepKey"));

  objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v9, "copy");
  objc_msgSend(v11, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v12);

}

void notifyMatterMetricPairingEnded(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  void *v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = (void *)MEMORY[0x24BDD16D0];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "defaultCenter");
  v17 = (id)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  v7 = v4;
  v8 = (void *)MEMORY[0x227676638]();
  v9 = v6;
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v19 = v11;
    v20 = 2112;
    v21 = v7;
    _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing ended %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v8);
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", MEMORY[0x24BDBD1C8], CFSTR("HMDMatterAccessoryPairingSubmitKey"));
  objc_msgSend(v7, "step");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v13, CFSTR("HMDMatterAccessoryPairingStepKey"));

  objc_msgSend(v7, "error");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v14, CFSTR("HMDMatterAccessoryPairingFailureErrorKey"));

  objc_msgSend(v7, "sourceErrorDomain");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v15, CFSTR("HMDMatterAccessoryPairingSourceErrorDomain"));

  v16 = (void *)objc_msgSend(v12, "copy");
  objc_msgSend(v17, "postNotificationName:object:userInfo:", CFSTR("HMDMatterAccessoryUpdatePairingMetricNotification"), 0, v16);

}

void sub_221F2DF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F30A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__101505(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__101506(uint64_t a1)
{

}

void sub_221F316A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221F335EC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221F3389C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F33FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F348EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F35E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__102012(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__102013(uint64_t a1)
{

}

void sub_221F3A994(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3AB64(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3BA30(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3BB08(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3BBE0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3BCB8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221F3DE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_221F40C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F43584(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221F47E98(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F48860(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F48A88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void BFSTraverseGroupWithBlock(void *a1, void *a2)
{
  id v3;
  uint64_t (**v4)(id, void *, void *);
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  void *v20;
  id obj;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = 0x24BDBC000uLL;
  v6 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v20 = v3;
  objc_msgSend(v6, "addObject:", v3);
  for (; objc_msgSend(v6, "count"); v5 = 0x24BDBC000)
  {
    v7 = v6;
    v6 = objc_alloc_init(*(Class *)(v5 + 3768));
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    obj = v7;
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v27;
      while (2)
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v27 != v10)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * v11);
          v22 = 0u;
          v23 = 0u;
          v24 = 0u;
          v25 = 0u;
          objc_msgSend(v12, "groups");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
          if (v14)
          {
            v15 = v14;
            v16 = *(_QWORD *)v23;
            do
            {
              v17 = 0;
              do
              {
                if (*(_QWORD *)v23 != v16)
                  objc_enumerationMutation(v13);
                objc_msgSend(v6, "addObject:", *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v17++));
              }
              while (v15 != v17);
              v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v30, 16);
            }
            while (v15);
          }

          objc_msgSend(v12, "settings");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = v4[2](v4, v12, v18);

          if (!v19)
          {

            goto LABEL_20;
          }
          ++v11;
        }
        while (v11 != v9);
        v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
        if (v9)
          continue;
        break;
      }
    }

  }
LABEL_20:

}

uint64_t isReconfigurationPossible(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "supportsWiFiReconfiguration"))
    v2 = objc_msgSend(v1, "isReachable");
  else
    v2 = 0;

  return v2;
}

void sub_221F4EF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __modelIdentifierForURI(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (__modelIdentifierForURI_onceToken != -1)
    dispatch_once(&__modelIdentifierForURI_onceToken, &__block_literal_global_434);
  v5 = (void *)MEMORY[0x24BDD1880];
  if (v4)
  {
    v6 = __modelIdentifierForURI_namespace;
    objc_msgSend(v4, "UUIDString");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = v7;
    objc_msgSend(v3, "prefixedURI");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v14[1] = v8;
    objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v14, 2);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "hm_deriveUUIDFromBaseUUID:withSalts:", v6, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = objc_alloc(MEMORY[0x24BDD1880]);
    v12 = __modelIdentifierForURI_namespace;
    objc_msgSend(v3, "prefixedURI");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "dataUsingEncoding:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v11, "initWithNamespace:data:", v12, v8);
  }

  return v10;
}

void ____modelIdentifierForURI_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("F48EA8E5-696C-4EA4-B767-16D13368CB16"));
  v1 = (void *)__modelIdentifierForURI_namespace;
  __modelIdentifierForURI_namespace = v0;

}

uint64_t __Block_byref_object_copy__104483(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__104484(uint64_t a1)
{

}

void ____identifierForURI_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("297A1FDB-8A3E-443F-A8A8-1F3360785587"));
  v1 = (void *)__identifierForURI_namespace;
  __identifierForURI_namespace = v0;

}

void sub_221F51AD8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221F5347C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F57B6C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_221F60AE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&cachedInstanceForCharacteristicMetadata__lock);
  _Unwind_Resume(a1);
}

void sub_221F613C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F61D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221F6260C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221F62AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221F62D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_221F63968(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F63F4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id Siri_log()
{
  if (Siri_log__hmf_once_t0 != -1)
    dispatch_once(&Siri_log__hmf_once_t0, &__block_literal_global_106838);
  return (id)Siri_log__hmf_once_v1;
}

void sub_221F70744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__107488(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__107489(uint64_t a1)
{

}

void sub_221F71FE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F720A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F7214C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraStreamConfigureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 2u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
              goto LABEL_61;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
              goto LABEL_64;
            }
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__resolution;
          goto LABEL_62;
        case 3u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
              goto LABEL_61;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__framerate;
          goto LABEL_62;
        case 4u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
              goto LABEL_61;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__audioCodec;
          goto LABEL_62;
        case 5u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          while (2)
          {
            v37 = *v3;
            v38 = *(_QWORD *)(a2 + v37);
            if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
              goto LABEL_61;
            }
            v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v38 + 1;
            v19 |= (unint64_t)(v39 & 0x7F) << v35;
            if (v39 < 0)
            {
              v35 += 7;
              v23 = v36++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
                goto LABEL_64;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__sampleRate;
          goto LABEL_62;
        case 6u:
          v40 = 0;
          v41 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v42 = *v3;
        v43 = *(_QWORD *)(a2 + v42);
        if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          break;
        v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
        *(_QWORD *)(a2 + v42) = v43 + 1;
        v19 |= (unint64_t)(v44 & 0x7F) << v40;
        if ((v44 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
          goto LABEL_62;
        }
        v40 += 7;
        v23 = v41++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
          goto LABEL_64;
        }
      }
      v24 = &OBJC_IVAR___AWDHomeKitCameraStreamConfigure__cryptoSuite;
LABEL_61:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_62:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_64:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void __computeInDegrees(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "keyEnumerator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "nextObject");
  v6 = objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = (void *)v6;
    do
    {
      objc_msgSend(v4, "setObject:forKey:", &unk_24E96B3C0, v7);
      objc_msgSend(v5, "nextObject");
      v8 = objc_claimAutoreleasedReturnValue();

      v7 = (void *)v8;
    }
    while (v8);
  }

  v21 = v3;
  objc_msgSend(v3, "objectEnumerator");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "nextObject");
  v9 = objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v10 = (void *)v9;
    do
    {
      v25 = 0u;
      v26 = 0u;
      v23 = 0u;
      v24 = 0u;
      v11 = v10;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v24;
        do
        {
          v15 = 0;
          do
          {
            if (*(_QWORD *)v24 != v14)
              objc_enumerationMutation(v11);
            v16 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * v15);
            v17 = v4;
            v18 = v16;
            objc_msgSend(v17, "objectForKey:", v18);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", objc_msgSend(v19, "unsignedIntValue") + 1);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "setObject:forKey:", v20, v18);

            ++v15;
          }
          while (v13 != v15);
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
        }
        while (v13);
      }

      objc_msgSend(v22, "nextObject");
      v10 = (void *)objc_claimAutoreleasedReturnValue();

    }
    while (v10);
  }

}

void __decrementInDegree(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  int v6;
  id v7;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "objectForKey:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "unsignedIntValue");

  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", (v6 - 1));
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v7, v3);

}

void sub_221F76004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__108140(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__108141(uint64_t a1)
{

}

void sub_221F7805C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F78DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F7C508(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&sharedCommissioner_lock);
  _Unwind_Resume(a1);
}

id parseMediaSourceDisplayOrder(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  __int128 v6;
  uint64_t Next;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  __int128 v13;
  uint64_t v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;

  if (objc_msgSend(v3, "length"))
  {
    v4 = objc_retainAutorelease(v3);
    objc_msgSend(v4, "bytes");
    objc_msgSend(v4, "length");
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)&v6 = 138543618;
    v13 = v6;
    do
      Next = TLV8GetNext();
    while (!(_DWORD)Next);
    if ((_DWORD)Next != -6727)
    {
      v8 = (void *)MEMORY[0x227676638](Next);
      HMFGetOSLogHandle();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = v13;
        v16 = v10;
        v17 = 2112;
        v18 = v4;
        _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_ERROR, "%{public}@TLV parsing failed - %@ - dropping", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v8);

      v5 = 0;
    }
    v11 = (void *)objc_msgSend(v5, "copy", v13, v14);

  }
  else
  {
    v11 = (void *)MEMORY[0x24BDBD1A8];
  }

  return v11;
}

void sub_221F7CD08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F7D454(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F7D638(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F7DA6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F7E2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  uint64_t v21;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v21 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__109940(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__109941(uint64_t a1)
{

}

void sub_221F7F6F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose(&a46, 8);
  _Unwind_Resume(a1);
}

void sub_221F80E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  _Block_object_dispose((const void *)(v36 - 184), 8);
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

void sub_221F82B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

void sub_221F86760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221F88384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221F89E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F89F48(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_221F8AD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__110407(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__110408(uint64_t a1)
{

}

void sub_221F8DAD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F8EAB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F8EB10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id _statisticsArrayFromDictionary(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = (void *)MEMORY[0x24BDBCEB8];
  v2 = a1;
  objc_msgSend(v1, "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = ___statisticsArrayFromDictionary_block_invoke;
  v7[3] = &unk_24E784A10;
  v8 = v3;
  v4 = v3;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v7);

  v5 = (void *)objc_msgSend(v4, "copy");
  return v5;
}

void ___statisticsArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v15[5];
  _QWORD v16[6];

  v16[5] = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(a1 + 32);
  v16[0] = a2;
  v15[0] = CFSTR("name");
  v15[1] = CFSTR("min");
  v5 = (void *)MEMORY[0x24BDD16E0];
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "numberWithInteger:", objc_msgSend(v6, "minValue"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = v8;
  v15[2] = CFSTR("max");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v6, "maxValue"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v16[2] = v9;
  v15[3] = CFSTR("average");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v6, "averageValue"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v16[3] = v10;
  v15[4] = CFSTR("count");
  v11 = (void *)MEMORY[0x24BDD16E0];
  v12 = objc_msgSend(v6, "valueCount");

  objc_msgSend(v11, "numberWithInteger:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v16[4] = v13;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v16, v15, 5);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v14);

}

id _counterArrayFromDictionary(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = (void *)MEMORY[0x24BDBCEB8];
  v2 = a1;
  objc_msgSend(v1, "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = ___counterArrayFromDictionary_block_invoke;
  v7[3] = &unk_24E794580;
  v8 = v3;
  v4 = v3;
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v7);

  v5 = (void *)objc_msgSend(v4, "copy");
  return v5;
}

void ___counterArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  _QWORD v9[2];
  _QWORD v10[3];

  v10[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(a1 + 32);
  v9[0] = CFSTR("name");
  v9[1] = CFSTR("value");
  v10[0] = a2;
  v10[1] = a3;
  v5 = (void *)MEMORY[0x24BDBCE70];
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "dictionaryWithObjects:forKeys:count:", v10, v9, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "addObject:", v8);

}

void sub_221F9296C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&sharedSubmitterLock);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoDisconnectMessageReadFrom(uint64_t a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v14;

  v2 = (int *)MEMORY[0x24BE7AF60];
  v3 = (int *)MEMORY[0x24BE7AF50];
  v4 = (int *)MEMORY[0x24BE7AF48];
  v5 = (int *)MEMORY[0x24BE7AF30];
  while (1)
  {
    v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(_QWORD *)(a1 + *v2) >= *(_QWORD *)(a1 + *v3))
      return v6 == 0;
    if (*(_BYTE *)(a1 + *v4))
    {
      v6 = 1;
      return v6 == 0;
    }
    v7 = 0;
    v8 = 0;
    v9 = 0;
    while (1)
    {
      v10 = *v2;
      v11 = *(_QWORD *)(a1 + v10);
      if (v11 == -1 || v11 >= *(_QWORD *)(a1 + *v3))
        break;
      v12 = *(_BYTE *)(*(_QWORD *)(a1 + *v5) + v11);
      *(_QWORD *)(a1 + v10) = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0)
        goto LABEL_12;
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        v6 = *(unsigned __int8 *)(a1 + *v4);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a1 + *v4) = 1;
LABEL_12:
    v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(_BYTE *)(a1 + *v4))
      LOBYTE(v9) = 0;
LABEL_14:
    if (v6)
      v14 = 1;
    else
      v14 = (v9 & 7) == 4;
    if (v14)
      return v6 == 0;
    if ((PBReaderSkipValueWithTag() & 1) == 0)
      return 0;
  }
}

void sub_221F99850(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_221F9AF08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221F9E3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221F9EF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  id *v13;

  objc_destroyWeak(v13);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitVendorInformationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_27;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_27;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_27;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_27;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 48;
          goto LABEL_27;
        case 6u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
LABEL_27:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_28;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_28:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221FA33C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FA34A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__113928(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__113929(uint64_t a1)
{

}

void sub_221FA422C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_221FA4618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,char a27)
{
  id *v27;
  id *v28;
  id *v29;
  uint64_t v30;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__114107(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__114108(uint64_t a1)
{

}

uint64_t AWDHomeKitCloudSyncInfoTupleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_221FA67A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FA7080(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FA7248(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FA72CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FA7CCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FA7F94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__114488(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__114489(uint64_t a1)
{

}

void sub_221FA9E98(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FAA068(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FAA11C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FB13A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FB1764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FB24E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FB28FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FB2A78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t getAccessoryFirmwareUpdateActiveTransport(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "isReachable"))
  {
    if ((objc_msgSend(v1, "isThreadTheCurrentlyActiveTransport") & 1) != 0)
    {
      v2 = 4;
    }
    else if ((objc_msgSend(v1, "hasBTLELink") & 1) != 0)
    {
      v2 = 3;
    }
    else if (objc_msgSend(v1, "hasIPLink"))
    {
      v2 = 2;
    }
    else
    {
      v2 = 1;
    }
  }
  else
  {
    v2 = 1;
  }

  return v2;
}

void sub_221FB362C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FB36C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FB4134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FB4680(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221FB47F8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221FB5154(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void __disconnectFromEndpoint(uint64_t a1)
{
  const void *ExternalDevice;
  const void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    ExternalDevice = (const void *)MRAVEndpointGetExternalDevice();
    if (ExternalDevice)
    {
      v3 = ExternalDevice;
      CFRetain(ExternalDevice);
      if (MRExternalDeviceGetConnectionState() == 3)
      {
        CFRelease(v3);
      }
      else
      {
        v4 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v5 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          v8 = 138543618;
          v9 = v6;
          v10 = 2112;
          v11 = a1;
          _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Resetting the connection state callback for endpoint %@", (uint8_t *)&v8, 0x16u);

        }
        objc_autoreleasePoolPop(v4);
        dispatch_get_global_queue(0, 0);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        MRExternalDeviceSetConnectionStateCallback();

        MRExternalDeviceDisconnect();
        CFRelease(v3);
      }
    }
  }
}

void sub_221FB5884(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221FBE340(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FC10E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FC1FF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FC208C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __shouldAcceptMessage(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);
  int v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "accessory");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v5, "isCurrentAccessory") & 1) != 0 || (objc_msgSend(v5, "supportsFirmwareUpdate") & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    v8 = (void *)MEMORY[0x227676638]();
    v9 = v3;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543362;
      v15 = v11;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Cannot update state for other accessory", (uint8_t *)&v14, 0xCu);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v4, "responseHandler");
    v6 = objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 10);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "responseHandler");
      v13 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, void *, _QWORD))v13)[2](v13, v12, 0);

      v6 = 0;
    }
  }

  return v6;
}

void __registerDocumentationMetadata(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "dataSource");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "notificationCenterForSoftwareUpdate:", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "removeObserver:name:object:", v3, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), 0);
    if (v4)
    {
      v8 = (void *)MEMORY[0x227676638](v7);
      v9 = v3;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 138543618;
        v16 = v11;
        v17 = 2112;
        v18 = v4;
        _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Registering documentation metadata: %@", (uint8_t *)&v15, 0x16u);

      }
      objc_autoreleasePoolPop(v8);
      +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "registerDocumentationMetadata:", v4);

      +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "assetForDocumentationMetadata:", v4);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v6, "addObserver:selector:name:object:", v9, sel__handleDocumentationStateNotification_, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), v14);
    }

  }
}

void __unregisterDocumentationMetadata(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    objc_msgSend(v3, "dataSource");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "notificationCenterForSoftwareUpdate:", v3);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (void *)MEMORY[0x227676638](objc_msgSend(v7, "removeObserver:name:object:", v3, CFSTR("HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification"), 0));
    v9 = v3;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v11;
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Unregistering documentation metadata: %@", (uint8_t *)&v13, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    +[HMDSoftwareUpdateDocumentationManager sharedManager](HMDSoftwareUpdateDocumentationManager, "sharedManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "unregisterDocumentationMetadata:", v5);

  }
}

void sub_221FC5C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FC9B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __findAssociatedCharacteristicWithService(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a1, "characteristicsOfType:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_221FCB6A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FCB71C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FCBC10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FCD248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FCFBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FCFD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FCFE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FCFF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__119188(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__119189(uint64_t a1)
{

}

void sub_221FD1BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FD1C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FD1D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FD1E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStringFromDataStreamMessageStatus(unsigned int a1)
{
  if (a1 < 7)
    return off_24E785B90[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("<unknown status: %d>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_221FDB0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDB1EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_221FDBE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDBFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDC7A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FDC81C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FDD05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDD490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;

  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDDDDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 248));
  _Unwind_Resume(a1);
}

void sub_221FDEC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FDFA64(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FDFC68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FE01DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FE0640(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FE06CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FE2E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FE7A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEAEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id failedActionResultFor(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v1 = (objc_class *)MEMORY[0x24BE812A0];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v2, "actions");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "aceId");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setRequestActionId:", v6);

  objc_msgSend(v3, "setOutcome:", *MEMORY[0x24BE81BC0]);
  objc_msgSend(v2, "actions");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "value");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setResultValue:", v9);

  objc_msgSend(v2, "actions");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "firstObject");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "attribute");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setResultAttribute:", v12);

  return v3;
}

void __mapToFailureActionOutcome_block_invoke()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[3];
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  v0 = *MEMORY[0x24BE81BC8];
  v1 = *MEMORY[0x24BE81ED8];
  v5[0] = *MEMORY[0x24BE81EB8];
  v5[1] = v1;
  v2 = *MEMORY[0x24BE81BF8];
  v6[0] = v0;
  v6[1] = v2;
  v5[2] = *MEMORY[0x24BE81F00];
  v6[2] = *MEMORY[0x24BE81C08];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v6, v5, 3);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)mapToFailureActionOutcome_outcomeMap;
  mapToFailureActionOutcome_outcomeMap = v3;

}

void sub_221FEC66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEC8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  id *v12;

  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FECB9C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221FECC70(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_221FED2E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEDA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEDF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEE2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_221FEE72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_221FEEDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateAccessoryInformation(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  char v36;
  int v37;
  void *v38;
  id v39;
  NSObject *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  char v47;
  void *v48;
  id v49;
  NSObject *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  char v57;
  void *v58;
  id v59;
  NSObject *v60;
  void *v61;
  void *v62;
  void *v63;
  HMDAccessoryVersion *v64;
  void *v65;
  HMDAccessoryVersion *v66;
  void *v67;
  char v68;
  void *v69;
  id v70;
  NSObject *v71;
  void *v72;
  void *v73;
  void *v74;
  id v75;
  NSObject *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  int v82;
  void *v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x227676638]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v82 = 138543362;
    v83 = v8;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating accessory information", (uint8_t *)&v82, 0xCu);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(v4, "outputDevice");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "av_OutputDevice");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v6, "transactionWithObjectChangeType:", 2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v12 = v11;
    else
      v12 = 0;
    v13 = v12;

    objc_msgSend(v6, "category");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "categoryType");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = *MEMORY[0x24BDD49F8];
    v17 = objc_msgSend(v15, "isEqual:", *MEMORY[0x24BDD49F8]);

    if (v17)
    {
      objc_msgSend(v4, "category");
      v18 = objc_claimAutoreleasedReturnValue();
      if (v18)
      {
        v19 = (void *)v18;
        objc_msgSend(v4, "category");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "categoryType");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v21, "isEqual:", v16);

        if ((v22 & 1) == 0)
        {
          +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "category");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "categoryType");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "categoryForType:", v25);
          v26 = (void *)objc_claimAutoreleasedReturnValue();

          if (v26)
          {
            v27 = (void *)MEMORY[0x227676638]();
            v28 = v6;
            HMFGetOSLogHandle();
            v29 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
            {
              HMFGetLogIdentifier();
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              v82 = 138543362;
              v83 = v30;
              _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_INFO, "%{public}@Updating category", (uint8_t *)&v82, 0xCu);

            }
            objc_autoreleasePoolPop(v27);
            objc_msgSend(v26, "identifier");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "setAccessoryCategory:", v31);

          }
        }
      }
    }
    objc_msgSend(v10, "modelID");
    v32 = objc_claimAutoreleasedReturnValue();
    if (!v32)
      goto LABEL_17;
    v33 = (void *)v32;
    objc_msgSend(v10, "modelID");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "model");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = HMFEqualObjects();

    if ((v36 & 1) == 0)
    {
      v38 = (void *)MEMORY[0x227676638]();
      v39 = v6;
      HMFGetOSLogHandle();
      v40 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        v82 = 138543362;
        v83 = v41;
        _os_log_impl(&dword_2218F0000, v40, OS_LOG_TYPE_INFO, "%{public}@Updating model", (uint8_t *)&v82, 0xCu);

      }
      objc_autoreleasePoolPop(v38);
      objc_msgSend(v10, "modelID");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "setModel:", v42);

      v37 = 1;
    }
    else
    {
LABEL_17:
      v37 = 0;
    }
    objc_msgSend(v10, "manufacturer");
    v43 = objc_claimAutoreleasedReturnValue();
    if (v43)
    {
      v44 = (void *)v43;
      objc_msgSend(v10, "manufacturer");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "manufacturer");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      v47 = HMFEqualObjects();

      if ((v47 & 1) == 0)
      {
        v48 = (void *)MEMORY[0x227676638]();
        v49 = v6;
        HMFGetOSLogHandle();
        v50 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          v82 = 138543362;
          v83 = v51;
          _os_log_impl(&dword_2218F0000, v50, OS_LOG_TYPE_INFO, "%{public}@Updating manufacturer", (uint8_t *)&v82, 0xCu);

        }
        objc_autoreleasePoolPop(v48);
        objc_msgSend(v10, "manufacturer");
        v52 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setManufacturer:", v52);

        v37 = 1;
      }
    }
    objc_msgSend(v10, "serialNumber");
    v53 = objc_claimAutoreleasedReturnValue();
    if (v53)
    {
      v54 = (void *)v53;
      objc_msgSend(v10, "serialNumber");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "serialNumber");
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      v57 = HMFEqualObjects();

      if ((v57 & 1) == 0)
      {
        v58 = (void *)MEMORY[0x227676638]();
        v59 = v6;
        HMFGetOSLogHandle();
        v60 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          v82 = 138543362;
          v83 = v61;
          _os_log_impl(&dword_2218F0000, v60, OS_LOG_TYPE_INFO, "%{public}@Updating serial number", (uint8_t *)&v82, 0xCu);

        }
        objc_autoreleasePoolPop(v58);
        objc_msgSend(v10, "serialNumber");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setSerialNumber:", v62);

        v37 = 1;
      }
    }
    objc_msgSend(v10, "firmwareVersion");
    v63 = (void *)objc_claimAutoreleasedReturnValue();

    if (v63)
    {
      v64 = [HMDAccessoryVersion alloc];
      objc_msgSend(v10, "firmwareVersion");
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      v66 = -[HMDAccessoryVersion initWithVersionString:](v64, "initWithVersionString:", v65);

      objc_msgSend(v6, "firmwareVersion");
      v67 = (void *)objc_claimAutoreleasedReturnValue();
      v68 = HMFEqualObjects();

      if ((v68 & 1) != 0)
      {

        if ((v37 & 1) == 0)
        {
LABEL_43:

          goto LABEL_44;
        }
      }
      else
      {
        v69 = (void *)MEMORY[0x227676638]();
        v70 = v6;
        HMFGetOSLogHandle();
        v71 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v72 = (void *)objc_claimAutoreleasedReturnValue();
          v82 = 138543362;
          v83 = v72;
          _os_log_impl(&dword_2218F0000, v71, OS_LOG_TYPE_INFO, "%{public}@Updating firmware version", (uint8_t *)&v82, 0xCu);

        }
        objc_autoreleasePoolPop(v69);
        objc_msgSend(v10, "firmwareVersion");
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setFirmwareVersion:", v73);

      }
    }
    else if (!v37)
    {
      goto LABEL_43;
    }
    v74 = (void *)MEMORY[0x227676638]();
    v75 = v6;
    HMFGetOSLogHandle();
    v76 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v77 = (void *)objc_claimAutoreleasedReturnValue();
      v82 = 138543362;
      v83 = v77;
      _os_log_impl(&dword_2218F0000, v76, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory information", (uint8_t *)&v82, 0xCu);

    }
    objc_autoreleasePoolPop(v74);
    objc_msgSend(v75, "home");
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v78, "backingStore");
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v79, "transaction:options:", CFSTR("Update Accessory Information"), v80);
    v81 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v81, "add:withMessage:", v13, 0);
    objc_msgSend(v81, "run");

    goto LABEL_43;
  }
LABEL_44:

}

id __configurationFromAdvertisement(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  char v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  const __CFString *v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionaryWithCapacity:", 3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "name");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "name");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = HMFEqualObjects();

    if ((v8 & 1) == 0)
    {
      v9 = (void *)MEMORY[0x227676638]();
      v10 = v3;
      HMFGetOSLogHandle();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "name");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v35 = v12;
        v36 = 2112;
        v37 = v13;
        _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory name, %@, is out of sync", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v9);
      objc_msgSend(v10, "name");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v14, CFSTR("name"));

    }
    objc_msgSend(v3, "home");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "mediaPassword");
    v16 = (__CFString *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "password");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = HMFEqualObjects();

    if ((v18 & 1) == 0)
    {
      v19 = (void *)MEMORY[0x227676638]();
      v20 = v3;
      HMFGetOSLogHandle();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v35 = v22;
        _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory password is out of sync", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v19);
      if (v16)
        v23 = v16;
      else
        v23 = &stru_24E79DB48;
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v23, CFSTR("password"));
    }
    v24 = objc_msgSend(v15, "minimumMediaUserPrivilege");
    if (objc_msgSend(v3, "minimumUserPriviledge") != v24)
    {
      v25 = (void *)MEMORY[0x227676638]();
      v26 = v3;
      HMFGetOSLogHandle();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "minimumUserPriviledge");
        HMUserPrivilegeToString();
        v33 = v25;
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v35 = v28;
        v36 = 2112;
        v37 = v29;
        _os_log_impl(&dword_2218F0000, v27, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory minimum user privilege, %@, is out of sync", buf, 0x16u);

        v25 = v33;
      }

      objc_autoreleasePoolPop(v25);
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", v24);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setObject:forKeyedSubscript:", v30, CFSTR("privilege"));

    }
    v31 = (void *)objc_msgSend(v5, "copy");

  }
  else
  {
    v31 = 0;
  }

  return v31;
}

void __updateConfiguration(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  void *v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  _QWORD aBlock[4];
  id v37;
  id v38;
  uint8_t buf[4];
  void *v40;
  __int16 v41;
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x227676638]();
  if (v5)
  {
    v9 = v5;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v40 = v11;
      v41 = 2112;
      v42 = v6;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Updating configuration to: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v9, "home");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isOwnerUser");

    if ((v13 & 1) != 0)
    {
      objc_msgSend(v9, "advertisement");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "outputDevice");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "av_OutputDevice");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v17 = MEMORY[0x24BDAC760];
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 3221225472;
        aBlock[2] = ____updateConfiguration_block_invoke;
        aBlock[3] = &unk_24E786308;
        v37 = v6;
        v18 = v9;
        v38 = v18;
        v19 = _Block_copy(aBlock);
        objc_initWeak((id *)buf, v18);
        __outputDeviceConfigurationOptions();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v32[0] = v17;
        v32[1] = 3221225472;
        v32[2] = ____updateConfiguration_block_invoke_210;
        v32[3] = &unk_24E786258;
        v33 = v14;
        objc_copyWeak(&v35, (id *)buf);
        v34 = v7;
        objc_msgSend(v16, "configureUsingBlock:options:completionHandler:", v19, v20, v32);

        objc_destroyWeak(&v35);
        objc_destroyWeak((id *)buf);

        v21 = v37;
      }
      else
      {
        v28 = (void *)MEMORY[0x227676638]();
        v29 = v9;
        HMFGetOSLogHandle();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v40 = v31;
          _os_log_impl(&dword_2218F0000, v30, OS_LOG_TYPE_INFO, "%{public}@Missing output device", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v28);
        __startConfigurationRetryTimer(v29);
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 4);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        (*((void (**)(id, void *))v7 + 2))(v7, v21);
      }

    }
    else
    {
      v24 = (void *)MEMORY[0x227676638]();
      v25 = v9;
      HMFGetOSLogHandle();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v40 = v27;
        _os_log_impl(&dword_2218F0000, v26, OS_LOG_TYPE_INFO, "%{public}@Only owner can update configuration", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v24);
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 17);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v7 + 2))(v7, v14);
    }
  }
  else
  {
    HMFGetOSLogHandle();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v40 = v23;
      _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_ERROR, "%{public}@Missing required paramter", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *))v7 + 2))(v7, v14);
  }

}

void sub_221FEFF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __stopConfigurationRetryTimer(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  id v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "workQueue");
    v3 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____stopConfigurationRetryTimer_block_invoke;
    block[3] = &unk_24E79C240;
    v5 = v2;
    dispatch_async(v3, block);

  }
}

void ____stopConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = (void *)MEMORY[0x227676638]();
    v4 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543362;
      v11 = v6;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Stopping configuration retry timer", (uint8_t *)&v10, 0xCu);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "suspend");

    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 488);
    *(_QWORD *)(v8 + 488) = 0;

  }
}

void __startConfigurationRetryTimer(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  id v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "workQueue");
    v3 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____startConfigurationRetryTimer_block_invoke;
    block[3] = &unk_24E79C240;
    v5 = v2;
    dispatch_async(v3, block);

  }
}

void ____updateConfiguration_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", CFSTR("name"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    objc_msgSend(v3, "setDeviceName:", v4);

  objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", CFSTR("password"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    objc_msgSend(v3, "setDevicePassword:", v5);

  objc_msgSend(*(id *)(a1 + 32), "hmf_numberForKey:", CFSTR("privilege"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
    objc_msgSend(v3, "startAutomaticallyAllowingConnectionsFromPeersInHomeGroupAndRejectOtherConnections:", objc_msgSend(v6, "integerValue") != 0);

  v8 = (void *)MEMORY[0x227676638]();
  v9 = *(id *)(a1 + 40);
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138543618;
    v13 = v11;
    v14 = 2112;
    v15 = v3;
    _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Configuring with configuration: %@", (uint8_t *)&v12, 0x16u);

  }
  objc_autoreleasePoolPop(v8);

}

id __outputDeviceConfigurationOptions()
{
  uint64_t v1;
  _QWORD v2[2];

  v2[1] = *MEMORY[0x24BDAC8D0];
  v1 = *MEMORY[0x24BDB1F30];
  v2[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v2, &v1, 1);
  return (id)objc_claimAutoreleasedReturnValue();
}

void ____updateConfiguration_block_invoke_210(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id WeakRetained;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  id v21;
  id v22;
  void *v23;
  NSObject *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  _BYTE buf[24];
  void *v30;
  id v31;
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v12 = (void *)MEMORY[0x227676638]();
  v13 = WeakRetained;
  HMFGetOSLogHandle();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v8)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v16;
      _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_INFO, "%{public}@Successfully updated configuration", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v12);
    __stopConfigurationRetryTimer(v13);
    v17 = 0;
  }
  else
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      *(_QWORD *)&buf[4] = v18;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v10;
      *(_WORD *)&buf[22] = 2112;
      v30 = v9;
      _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to update configuration with error: %@, cancellationReason: %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v12);
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:description:reason:suggestion:underlyingError:", 54, CFSTR("Communication failure"), CFSTR("Failed to set configuration."), 0, v10);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    __startConfigurationRetryTimer(v13);
  }
  v19 = *(_QWORD *)(a1 + 40);
  if (!v19)
  {
LABEL_11:
    if (v8)
    {
      v21 = v13;
      v22 = v8;
      if (v21)
      {
        v23 = v22;
        objc_msgSend(v21, "workQueue");
        v24 = objc_claimAutoreleasedReturnValue();
        *(_QWORD *)buf = MEMORY[0x24BDAC760];
        *(_QWORD *)&buf[8] = 3221225472;
        *(_QWORD *)&buf[16] = ____updateWithCurrentConfiguration_block_invoke;
        v30 = &unk_24E79C268;
        v31 = v21;
        v32 = v23;
        dispatch_async(v24, buf);

      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    objc_msgSend(v13, "workQueue");
    v20 = objc_claimAutoreleasedReturnValue();
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 3221225472;
    v26[2] = ____updateConfiguration_block_invoke_211;
    v26[3] = &unk_24E79C2B8;
    v28 = *(id *)(a1 + 40);
    v27 = v17;
    dispatch_async(v20, v26);

    goto LABEL_11;
  }
  (*(void (**)(uint64_t, void *))(v19 + 16))(v19, v17);
  if (v8)
  {
    v25 = v8;
LABEL_16:

  }
LABEL_17:

}

uint64_t ____updateConfiguration_block_invoke_211(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void ____updateWithCurrentConfiguration_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  NSObject *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  int v42;
  void *v43;
  __int16 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    v42 = 138543618;
    v43 = v5;
    v44 = 2112;
    v45 = v6;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Updating with configuration: %@", (uint8_t *)&v42, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(*(id *)(a1 + 40), "devicePassword");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v7, "length"))
  {

    v7 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "password");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = HMFEqualObjects();

  if ((v9 & 1) == 0)
  {
    v10 = (void *)MEMORY[0x227676638]();
    v11 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = 138543362;
      v43 = v13;
      _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_INFO, "%{public}@Caching updated password", (uint8_t *)&v42, 0xCu);

    }
    objc_autoreleasePoolPop(v10);
    v14 = *(void **)(a1 + 32);
    if (v14)
    {
      v15 = v14;
      v16 = v7;
      objc_msgSend(v15, "transactionWithObjectChangeType:", 2);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v18 = v17;
      else
        v18 = 0;
      v19 = v18;

      objc_msgSend(v19, "setPassword:", v16);
      objc_msgSend(v15, "home");
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v20, "backingStore");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "transaction:options:", CFSTR("Update Password"), v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v23, "add:withMessage:", v19, 0);
      objc_msgSend(v23, "run");

    }
  }

  v24 = objc_msgSend(*(id *)(a1 + 40), "onlyAllowsConnectionsFromPeersInHomeGroup");
  v25 = objc_msgSend(*(id *)(a1 + 32), "minimumUserPriviledge");
  if (v25 >= 1)
    v26 = 1;
  else
    v26 = v25;
  if (v26 != v24)
  {
    v27 = (void *)MEMORY[0x227676638]();
    v28 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = 138543362;
      v43 = v30;
      _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_INFO, "%{public}@Caching updated user minimum privilege", (uint8_t *)&v42, 0xCu);

    }
    objc_autoreleasePoolPop(v27);
    v31 = *(void **)(a1 + 32);
    if (v31)
    {
      v32 = v24;
      v33 = v31;
      objc_msgSend(v33, "transactionWithObjectChangeType:", 2);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v35 = v34;
      else
        v35 = 0;
      v36 = v35;

      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", v32);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "setMinimumUserPriviledge:", v37);

      objc_msgSend(v33, "home");
      v38 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v38, "backingStore");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "transaction:options:", CFSTR("Update Minimum User Privilege"), v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v41, "add:withMessage:", v36, 0);
      objc_msgSend(v41, "run");

    }
  }
}

void ____startConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  void *v16;
  id obj;
  id obja;

  objc_msgSend(*(id *)(a1 + 32), "configurationRetryTimer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "preferenceForKey:", CFSTR("airPlayConfigurationRetryMinimum"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "preferenceForKey:", CFSTR("airPlayConfigurationRetryMaximum"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "preferenceForKey:", CFSTR("airPlayConfigurationRetryFactor"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = objc_alloc(MEMORY[0x24BE3F170]);
    objc_msgSend(v4, "numberValue");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "doubleValue");
    v12 = v11;
    objc_msgSend(v6, "numberValue");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "doubleValue");
    v15 = v14;
    objc_msgSend(v8, "numberValue");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    obj = (id)objc_msgSend(v9, "initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:", objc_msgSend(v16, "integerValue"), 0, v12, v15);

    objc_msgSend(obj, "setDelegate:", *(_QWORD *)(a1 + 32));
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 488), obj);

    v2 = obj;
  }
  obja = v2;
  objc_msgSend(v2, "resume");

}

uint64_t __Block_byref_object_copy__122990(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__122991(uint64_t a1)
{

}

void sub_221FF1CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updatePassword_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x227676638]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to update password with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_2218F0000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated password";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

void sub_221FF204C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updateMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x227676638]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to minimum user privilege with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_2218F0000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated minimum user privilege";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

void ____updateName_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint32_t v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)MEMORY[0x227676638]();
  v6 = WeakRetained;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v3;
      v10 = "%{public}@Failed to update name with error: %@";
      v11 = v8;
      v12 = OS_LOG_TYPE_DEFAULT;
      v13 = 22;
LABEL_6:
      _os_log_impl(&dword_2218F0000, v11, v12, v10, (uint8_t *)&v14, v13);

    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Successfully updated name";
    v11 = v8;
    v12 = OS_LOG_TYPE_INFO;
    v13 = 12;
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v5);
}

__CFString *HMDCameraRecordingMediaContainerTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDCameraRecordingMediaContainerTypeFragmentedMP4");
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingMediaContainerType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id HMDCameraRecordingEventTriggerOptionsAsString(char a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((a1 & 1) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("HMDCameraRecordingEventTriggerOptionsMotion"));
  if ((a1 & 2) != 0)
    objc_msgSend(v3, "addObject:", CFSTR("HMDCameraRecordingEventTriggerOptionsDoorbell"));
  v4 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("[%@]"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_221FF4F1C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF503C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF5120(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF5188(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF5200(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF5278(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF52E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF5358(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_221FF53D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id mapButtonConfigurationForTVReceiver(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  unint64_t v9;
  THAButton *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
        v9 = objc_msgSend(v8, "type", (_QWORD)v13) - 1;
        if (v9 <= 0xB && ((0xCFFu >> v9) & 1) != 0)
        {
          v10 = -[THAButton initWithType:identifier:]([THAButton alloc], "initWithType:identifier:", qword_2226A0CD8[v9], objc_msgSend(v8, "identifier"));
          objc_msgSend(v2, "addObject:", v10);

        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

void sub_221FFBA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __findUserWithUUID(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = (objc_class *)MEMORY[0x24BDD1880];
  v4 = a2;
  v5 = a1;
  v6 = (void *)objc_msgSend([v3 alloc], "initWithUUIDString:", v5);

  objc_msgSend(v4, "userWithUUID:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id HMDCKRecordIDSafeCharacters()
{
  if (HMDCKRecordIDSafeCharacters__hmf_once_t0 != -1)
    dispatch_once(&HMDCKRecordIDSafeCharacters__hmf_once_t0, &__block_literal_global_21_124014);
  return (id)HMDCKRecordIDSafeCharacters__hmf_once_v1;
}

uint64_t AWDHomeKitHomeConfigurationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  char v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t result;
  char v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  AWDHomeKitEventTrigger *v103;
  char v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  char v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  char v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  unsigned int v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  unsigned int v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  char v129;
  unsigned int v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  char v134;
  unsigned int v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  char v144;
  unsigned int v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  unint64_t v152;
  char v153;
  char v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  char v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  char v170;
  char v171;
  unsigned int v172;
  uint64_t v173;
  unint64_t v174;
  char v175;
  char v176;
  unsigned int v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  char v183;
  unsigned int v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  unsigned int v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  unsigned int v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  unsigned int v199;
  uint64_t v200;
  unint64_t v201;
  char v202;
  char v203;
  unsigned int v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  char v208;
  unsigned int v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  unsigned int v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  char v218;
  unsigned int v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  unsigned int v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  char v228;
  unsigned int v229;
  uint64_t v230;
  unint64_t v231;
  char v232;
  char v233;
  unsigned int v234;
  uint64_t v235;
  unint64_t v236;
  char v237;
  char v238;
  unsigned int v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  char v243;
  unsigned int v244;
  uint64_t v245;
  unint64_t v246;
  char v247;
  char v248;
  unsigned int v249;
  uint64_t v250;
  unint64_t v251;
  char v252;
  char v253;
  unsigned int v254;
  uint64_t v255;
  unint64_t v256;
  char v257;
  char v258;
  unsigned int v259;
  uint64_t v260;
  unint64_t v261;
  char v262;
  char v263;
  unsigned int v264;
  uint64_t v265;
  unint64_t v266;
  char v267;
  char v268;
  unsigned int v269;
  uint64_t v270;
  unint64_t v271;
  char v272;
  char v273;
  unsigned int v274;
  uint64_t v275;
  unint64_t v276;
  char v277;
  char v278;
  unsigned int v279;
  uint64_t v280;
  unint64_t v281;
  char v282;
  char v283;
  unsigned int v284;
  uint64_t v285;
  unint64_t v286;
  char v287;
  char v288;
  unsigned int v289;
  uint64_t v290;
  unint64_t v291;
  char v292;
  char v293;
  unsigned int v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  char v298;
  unsigned int v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  char v303;
  unsigned int v304;
  uint64_t v305;
  unint64_t v306;
  char v307;
  char v308;
  unsigned int v309;
  uint64_t v310;
  unint64_t v311;
  char v312;
  char v313;
  unsigned int v314;
  uint64_t v315;
  unint64_t v316;
  char v317;
  char v318;
  unsigned int v319;
  uint64_t v320;
  unint64_t v321;
  char v322;
  char v323;
  unsigned int v324;
  uint64_t v325;
  unint64_t v326;
  char v327;
  char v328;
  unsigned int v329;
  uint64_t v330;
  unint64_t v331;
  char v332;
  char v333;
  unsigned int v334;
  uint64_t v335;
  unint64_t v336;
  char v337;
  char v338;
  unsigned int v339;
  uint64_t v340;
  unint64_t v341;
  char v342;
  char v343;
  unsigned int v344;
  uint64_t v345;
  unint64_t v346;
  char v347;
  char v348;
  unsigned int v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  char v353;
  char v354;
  unsigned int v355;
  uint64_t v356;
  unint64_t v357;
  char v358;
  char v359;
  unsigned int v360;
  uint64_t v361;
  unint64_t v362;
  char v363;
  char v364;
  unsigned int v365;
  uint64_t v366;
  unint64_t v367;
  char v368;
  char v369;
  unsigned int v370;
  uint64_t v371;
  unint64_t v372;
  char v373;
  char v374;
  unsigned int v375;
  uint64_t v376;
  unint64_t v377;
  char v378;
  char v379;
  unsigned int v380;
  uint64_t v381;
  unint64_t v382;
  char v383;
  char v384;
  unsigned int v385;
  uint64_t v386;
  unint64_t v387;
  char v388;
  char v389;
  unsigned int v390;
  uint64_t v391;
  unint64_t v392;
  char v393;
  char v394;
  unsigned int v395;
  uint64_t v396;
  unint64_t v397;
  char v398;
  char v399;
  unsigned int v400;
  uint64_t v401;
  unint64_t v402;
  char v403;
  char v404;
  unsigned int v405;
  uint64_t v406;
  unint64_t v407;
  char v408;
  char v409;
  unsigned int v410;
  uint64_t v411;
  unint64_t v412;
  char v413;
  char v414;
  unsigned int v415;
  uint64_t v416;
  unint64_t v417;
  char v418;
  char v419;
  unsigned int v420;
  uint64_t v421;
  unint64_t v422;
  char v423;
  char v424;
  unsigned int v425;
  uint64_t v426;
  unint64_t v427;
  char v428;
  char v429;
  unsigned int v430;
  uint64_t v431;
  unint64_t v432;
  char v433;
  char v434;
  unsigned int v435;
  uint64_t v436;
  unint64_t v437;
  char v438;
  char v439;
  unsigned int v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  char v444;
  unsigned int v445;
  uint64_t v446;
  unint64_t v447;
  char v448;
  uint64_t v449;
  BOOL v450;
  uint64_t v451;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40uLL;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_623;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_625;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_623:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_625:
        v449 = 72;
        goto LABEL_959;
      case 2u:
        v23 = 0;
        v24 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x10u;
        while (2)
        {
          v25 = *v3;
          v26 = *(_QWORD *)(a2 + v25);
          if (v26 == -1 || v26 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v26);
            *(_QWORD *)(a2 + v25) = v26 + 1;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              v14 = v24++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_629;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_629:
        v449 = 320;
        goto LABEL_959;
      case 3u:
        v28 = 0;
        v29 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x800u;
        while (2)
        {
          v30 = *v3;
          v31 = *(_QWORD *)(a2 + v30);
          if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v19 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              v14 = v29++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_633;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_633:
        v449 = 348;
        goto LABEL_959;
      case 4u:
        v33 = 0;
        v34 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000uLL;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v19 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              v14 = v34++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_637;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_637:
        v449 = 108;
        goto LABEL_959;
      case 5u:
        v38 = 0;
        v39 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 8u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v41 + 1;
            v19 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              v14 = v39++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_641;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_641:
        v449 = 316;
        goto LABEL_959;
      case 6u:
        v43 = 0;
        v44 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x400u;
        while (2)
        {
          v45 = *v3;
          v46 = *(_QWORD *)(a2 + v45);
          if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
            *(_QWORD *)(a2 + v45) = v46 + 1;
            v19 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              v14 = v44++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_645;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_645:
        v449 = 344;
        goto LABEL_959;
      case 7u:
        v48 = 0;
        v49 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000uLL;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          if (v51 == -1 || v51 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v51 + 1;
            v19 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_649;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_649:
        v449 = 184;
        goto LABEL_959;
      case 8u:
        v53 = 0;
        v54 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x100u;
        while (2)
        {
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 == -1 || v56 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v57 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 1;
            v19 |= (unint64_t)(v57 & 0x7F) << v53;
            if (v57 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_653;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_653:
        v449 = 336;
        goto LABEL_959;
      case 9u:
        v58 = 0;
        v59 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000uLL;
        while (2)
        {
          v60 = *v3;
          v61 = *(_QWORD *)(a2 + v60);
          if (v61 == -1 || v61 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v61);
            *(_QWORD *)(a2 + v60) = v61 + 1;
            v19 |= (unint64_t)(v62 & 0x7F) << v58;
            if (v62 < 0)
            {
              v58 += 7;
              v14 = v59++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_657;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_657:
        v449 = 104;
        goto LABEL_959;
      case 0xAu:
        v63 = 0;
        v64 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 4u;
        while (2)
        {
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 1;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              v14 = v64++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_661;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_661:
        v449 = 312;
        goto LABEL_959;
      case 0xBu:
        v68 = 0;
        v69 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x4000u;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              v14 = v69++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_665;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_665:
        v449 = 360;
        goto LABEL_959;
      case 0xDu:
        v74 = 0;
        v75 = 0;
        v76 = 0;
        v77 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x40000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v77;
        while (2)
        {
          v78 = *v3;
          v79 = *(_QWORD *)(a2 + v78);
          if (v79 == -1 || v79 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v79);
            *(_QWORD *)(a2 + v78) = v79 + 1;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              v14 = v75++ >= 9;
              if (v14)
              {
                v76 = 0;
                goto LABEL_669;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v76 = 0;
LABEL_669:
        v450 = v76 != 0;
        v451 = 387;
        goto LABEL_882;
      case 0xEu:
        v81 = 0;
        v82 = 0;
        v83 = 0;
        v84 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x20000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v84;
        while (2)
        {
          v85 = *v3;
          v86 = *(_QWORD *)(a2 + v85);
          if (v86 == -1 || v86 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v87 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v86);
            *(_QWORD *)(a2 + v85) = v86 + 1;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              v14 = v82++ >= 9;
              if (v14)
              {
                v83 = 0;
                goto LABEL_673;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v83 = 0;
LABEL_673:
        v450 = v83 != 0;
        v451 = 386;
        goto LABEL_882;
      case 0xFu:
        v88 = 0;
        v89 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000uLL;
        while (2)
        {
          v90 = *v3;
          v91 = *(_QWORD *)(a2 + v90);
          if (v91 == -1 || v91 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v92 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v91);
            *(_QWORD *)(a2 + v90) = v91 + 1;
            v19 |= (unint64_t)(v92 & 0x7F) << v88;
            if (v92 < 0)
            {
              v88 += 7;
              v14 = v89++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_677;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_677:
        v449 = 132;
        goto LABEL_959;
      case 0x10u:
        v93 = 0;
        v94 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000000000uLL;
        while (2)
        {
          v95 = *v3;
          v96 = *(_QWORD *)(a2 + v95);
          if (v96 == -1 || v96 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v96);
            *(_QWORD *)(a2 + v95) = v96 + 1;
            v19 |= (unint64_t)(v97 & 0x7F) << v93;
            if (v97 < 0)
            {
              v93 += 7;
              v14 = v94++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_681;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_681:
        v449 = 276;
        goto LABEL_959;
      case 0x11u:
        v98 = 0;
        v99 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000uLL;
        while (2)
        {
          v100 = *v3;
          v101 = *(_QWORD *)(a2 + v100);
          if (v101 == -1 || v101 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v102 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v101);
            *(_QWORD *)(a2 + v100) = v101 + 1;
            v19 |= (unint64_t)(v102 & 0x7F) << v98;
            if (v102 < 0)
            {
              v98 += 7;
              v14 = v99++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_685;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_685:
        v449 = 168;
        goto LABEL_959;
      case 0x12u:
        v103 = objc_alloc_init(AWDHomeKitEventTrigger);
        objc_msgSend((id)a1, "addEventTriggers:", v103);
        if (!PBReaderPlaceMark() || (AWDHomeKitEventTriggerReadFrom((uint64_t)v103, a2) & 1) == 0)
          goto LABEL_962;
        goto LABEL_348;
      case 0x13u:
        v104 = 0;
        v105 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000uLL;
        while (2)
        {
          v106 = *v3;
          v107 = *(_QWORD *)(a2 + v106);
          if (v107 == -1 || v107 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v108 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v107);
            *(_QWORD *)(a2 + v106) = v107 + 1;
            v19 |= (unint64_t)(v108 & 0x7F) << v104;
            if (v108 < 0)
            {
              v104 += 7;
              v14 = v105++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_689;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_689:
        v449 = 188;
        goto LABEL_959;
      case 0x14u:
        v109 = 0;
        v110 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000uLL;
        while (2)
        {
          v111 = *v3;
          v112 = *(_QWORD *)(a2 + v111);
          if (v112 == -1 || v112 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v113 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v112);
            *(_QWORD *)(a2 + v111) = v112 + 1;
            v19 |= (unint64_t)(v113 & 0x7F) << v109;
            if (v113 < 0)
            {
              v109 += 7;
              v14 = v110++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_693;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_693:
        v449 = 116;
        goto LABEL_959;
      case 0x15u:
        v114 = 0;
        v115 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x1000u;
        while (2)
        {
          v116 = *v3;
          v117 = *(_QWORD *)(a2 + v116);
          if (v117 == -1 || v117 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v118 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v117);
            *(_QWORD *)(a2 + v116) = v117 + 1;
            v19 |= (unint64_t)(v118 & 0x7F) << v114;
            if (v118 < 0)
            {
              v114 += 7;
              v14 = v115++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_697;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_697:
        v449 = 352;
        goto LABEL_959;
      case 0x16u:
        v119 = 0;
        v120 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000uLL;
        while (2)
        {
          v121 = *v3;
          v122 = *(_QWORD *)(a2 + v121);
          if (v122 == -1 || v122 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v123 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v122);
            *(_QWORD *)(a2 + v121) = v122 + 1;
            v19 |= (unint64_t)(v123 & 0x7F) << v119;
            if (v123 < 0)
            {
              v119 += 7;
              v14 = v120++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_701;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_701:
        v449 = 112;
        goto LABEL_959;
      case 0x17u:
        v124 = 0;
        v125 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000uLL;
        while (2)
        {
          v126 = *v3;
          v127 = *(_QWORD *)(a2 + v126);
          if (v127 == -1 || v127 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v128 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v127);
            *(_QWORD *)(a2 + v126) = v127 + 1;
            v19 |= (unint64_t)(v128 & 0x7F) << v124;
            if (v128 < 0)
            {
              v124 += 7;
              v14 = v125++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_705;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_705:
        v449 = 124;
        goto LABEL_959;
      case 0x18u:
        v129 = 0;
        v130 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000uLL;
        while (2)
        {
          v131 = *v3;
          v132 = *(_QWORD *)(a2 + v131);
          if (v132 == -1 || v132 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v133 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v132);
            *(_QWORD *)(a2 + v131) = v132 + 1;
            v19 |= (unint64_t)(v133 & 0x7F) << v129;
            if (v133 < 0)
            {
              v129 += 7;
              v14 = v130++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_709;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_709:
        v449 = 140;
        goto LABEL_959;
      case 0x19u:
        v134 = 0;
        v135 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000000uLL;
        while (2)
        {
          v136 = *v3;
          v137 = *(_QWORD *)(a2 + v136);
          if (v137 == -1 || v137 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v138 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v137);
            *(_QWORD *)(a2 + v136) = v137 + 1;
            v19 |= (unint64_t)(v138 & 0x7F) << v134;
            if (v138 < 0)
            {
              v134 += 7;
              v14 = v135++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_713;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_713:
        v449 = 236;
        goto LABEL_959;
      case 0x1Au:
        v139 = 0;
        v140 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x40u;
        while (2)
        {
          v141 = *v3;
          v142 = *(_QWORD *)(a2 + v141);
          if (v142 == -1 || v142 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v143 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v142);
            *(_QWORD *)(a2 + v141) = v142 + 1;
            v19 |= (unint64_t)(v143 & 0x7F) << v139;
            if (v143 < 0)
            {
              v139 += 7;
              v14 = v140++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_717;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_717:
        v449 = 328;
        goto LABEL_959;
      case 0x1Bu:
        v144 = 0;
        v145 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000uLL;
        while (2)
        {
          v146 = *v3;
          v147 = *(_QWORD *)(a2 + v146);
          if (v147 == -1 || v147 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v148 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v147);
            *(_QWORD *)(a2 + v146) = v147 + 1;
            v19 |= (unint64_t)(v148 & 0x7F) << v144;
            if (v148 < 0)
            {
              v144 += 7;
              v14 = v145++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_721;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_721:
        v449 = 176;
        goto LABEL_959;
      case 0x1Cu:
        v149 = 0;
        v150 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000uLL;
        while (2)
        {
          v151 = *v3;
          v152 = *(_QWORD *)(a2 + v151);
          if (v152 == -1 || v152 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v153 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v152);
            *(_QWORD *)(a2 + v151) = v152 + 1;
            v19 |= (unint64_t)(v153 & 0x7F) << v149;
            if (v153 < 0)
            {
              v149 += 7;
              v14 = v150++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_725;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_725:
        v449 = 136;
        goto LABEL_959;
      case 0x1Du:
        v154 = 0;
        v155 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000uLL;
        while (2)
        {
          v156 = *v3;
          v157 = *(_QWORD *)(a2 + v156);
          if (v157 == -1 || v157 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v158 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v157);
            *(_QWORD *)(a2 + v156) = v157 + 1;
            v19 |= (unint64_t)(v158 & 0x7F) << v154;
            if (v158 < 0)
            {
              v154 += 7;
              v14 = v155++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_729;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_729:
        v449 = 172;
        goto LABEL_959;
      case 0x1Eu:
        v159 = 0;
        v160 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000uLL;
        while (2)
        {
          v161 = *v3;
          v162 = *(_QWORD *)(a2 + v161);
          if (v162 == -1 || v162 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v163 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v162);
            *(_QWORD *)(a2 + v161) = v162 + 1;
            v19 |= (unint64_t)(v163 & 0x7F) << v159;
            if (v163 < 0)
            {
              v159 += 7;
              v14 = v160++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_733;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_733:
        v449 = 180;
        goto LABEL_959;
      case 0x1Fu:
        v164 = 0;
        v165 = 0;
        v166 = 0;
        v167 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x10000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v167;
        while (2)
        {
          v168 = *v3;
          v169 = *(_QWORD *)(a2 + v168);
          if (v169 == -1 || v169 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v170 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v169);
            *(_QWORD *)(a2 + v168) = v169 + 1;
            v166 |= (unint64_t)(v170 & 0x7F) << v164;
            if (v170 < 0)
            {
              v164 += 7;
              v14 = v165++ >= 9;
              if (v14)
              {
                v166 = 0;
                goto LABEL_737;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v166 = 0;
LABEL_737:
        v450 = v166 != 0;
        v451 = 385;
        goto LABEL_882;
      case 0x20u:
        v171 = 0;
        v172 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 2u;
        while (2)
        {
          v173 = *v3;
          v174 = *(_QWORD *)(a2 + v173);
          if (v174 == -1 || v174 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v175 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v174);
            *(_QWORD *)(a2 + v173) = v174 + 1;
            v19 |= (unint64_t)(v175 & 0x7F) << v171;
            if (v175 < 0)
            {
              v171 += 7;
              v14 = v172++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_741;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_741:
        v449 = 308;
        goto LABEL_959;
      case 0x21u:
        v176 = 0;
        v177 = 0;
        v178 = 0;
        v179 = ((*(unsigned __int8 *)(a1 + 402) << 16) | 0x80000u) >> 16;
        *(_WORD *)(a1 + 400) = *(_WORD *)(a1 + 400);
        *(_BYTE *)(a1 + 402) = v179;
        while (2)
        {
          v180 = *v3;
          v181 = *(_QWORD *)(a2 + v180);
          if (v181 == -1 || v181 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v182 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v181);
            *(_QWORD *)(a2 + v180) = v181 + 1;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              v14 = v177++ >= 9;
              if (v14)
              {
                v178 = 0;
                goto LABEL_745;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v178 = 0;
LABEL_745:
        v450 = v178 != 0;
        v451 = 388;
        goto LABEL_882;
      case 0x22u:
        v183 = 0;
        v184 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x80u;
        while (2)
        {
          v185 = *v3;
          v186 = *(_QWORD *)(a2 + v185);
          if (v186 == -1 || v186 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v187 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v186);
            *(_QWORD *)(a2 + v185) = v186 + 1;
            v19 |= (unint64_t)(v187 & 0x7F) << v183;
            if (v187 < 0)
            {
              v183 += 7;
              v14 = v184++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_749;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_749:
        v449 = 332;
        goto LABEL_959;
      case 0x23u:
        v188 = 0;
        v189 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20uLL;
        while (2)
        {
          v190 = *v3;
          v191 = *(_QWORD *)(a2 + v190);
          if (v191 == -1 || v191 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v192 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v191);
            *(_QWORD *)(a2 + v190) = v191 + 1;
            v19 |= (unint64_t)(v192 & 0x7F) << v188;
            if (v192 < 0)
            {
              v188 += 7;
              v14 = v189++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_753;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_753:
        v449 = 68;
        goto LABEL_959;
      case 0x24u:
        v193 = 0;
        v194 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000uLL;
        while (2)
        {
          v195 = *v3;
          v196 = *(_QWORD *)(a2 + v195);
          if (v196 == -1 || v196 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v197 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v196);
            *(_QWORD *)(a2 + v195) = v196 + 1;
            v19 |= (unint64_t)(v197 & 0x7F) << v193;
            if (v197 < 0)
            {
              v193 += 7;
              v14 = v194++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_757;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_757:
        v449 = 100;
        goto LABEL_959;
      case 0x25u:
        v198 = 0;
        v199 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80uLL;
        while (2)
        {
          v200 = *v3;
          v201 = *(_QWORD *)(a2 + v200);
          if (v201 == -1 || v201 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v202 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v201);
            *(_QWORD *)(a2 + v200) = v201 + 1;
            v19 |= (unint64_t)(v202 & 0x7F) << v198;
            if (v202 < 0)
            {
              v198 += 7;
              v14 = v199++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_761;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_761:
        v449 = 76;
        goto LABEL_959;
      case 0x26u:
        v203 = 0;
        v204 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200uLL;
        while (2)
        {
          v205 = *v3;
          v206 = *(_QWORD *)(a2 + v205);
          if (v206 == -1 || v206 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v207 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v206);
            *(_QWORD *)(a2 + v205) = v206 + 1;
            v19 |= (unint64_t)(v207 & 0x7F) << v203;
            if (v207 < 0)
            {
              v203 += 7;
              v14 = v204++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_765;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_765:
        v449 = 84;
        goto LABEL_959;
      case 0x27u:
        v208 = 0;
        v209 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100uLL;
        while (2)
        {
          v210 = *v3;
          v211 = *(_QWORD *)(a2 + v210);
          if (v211 == -1 || v211 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v212 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v211);
            *(_QWORD *)(a2 + v210) = v211 + 1;
            v19 |= (unint64_t)(v212 & 0x7F) << v208;
            if (v212 < 0)
            {
              v208 += 7;
              v14 = v209++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_769;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_769:
        v449 = 80;
        goto LABEL_959;
      case 0x28u:
        v213 = 0;
        v214 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400uLL;
        while (2)
        {
          v215 = *v3;
          v216 = *(_QWORD *)(a2 + v215);
          if (v216 == -1 || v216 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v217 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v216);
            *(_QWORD *)(a2 + v215) = v216 + 1;
            v19 |= (unint64_t)(v217 & 0x7F) << v213;
            if (v217 < 0)
            {
              v213 += 7;
              v14 = v214++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_773;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_773:
        v449 = 88;
        goto LABEL_959;
      case 0x29u:
        v218 = 0;
        v219 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800uLL;
        while (2)
        {
          v220 = *v3;
          v221 = *(_QWORD *)(a2 + v220);
          if (v221 == -1 || v221 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v222 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v221);
            *(_QWORD *)(a2 + v220) = v221 + 1;
            v19 |= (unint64_t)(v222 & 0x7F) << v218;
            if (v222 < 0)
            {
              v218 += 7;
              v14 = v219++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_777;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_777:
        v449 = 92;
        goto LABEL_959;
      case 0x2Au:
        v223 = 0;
        v224 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000uLL;
        while (2)
        {
          v225 = *v3;
          v226 = *(_QWORD *)(a2 + v225);
          if (v226 == -1 || v226 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v227 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v226);
            *(_QWORD *)(a2 + v225) = v226 + 1;
            v19 |= (unint64_t)(v227 & 0x7F) << v223;
            if (v227 < 0)
            {
              v223 += 7;
              v14 = v224++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_781;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_781:
        v449 = 96;
        goto LABEL_959;
      case 0x2Bu:
        v228 = 0;
        v229 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x20u;
        while (2)
        {
          v230 = *v3;
          v231 = *(_QWORD *)(a2 + v230);
          if (v231 == -1 || v231 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v232 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v231);
            *(_QWORD *)(a2 + v230) = v231 + 1;
            v19 |= (unint64_t)(v232 & 0x7F) << v228;
            if (v232 < 0)
            {
              v228 += 7;
              v14 = v229++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_785;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_785:
        v449 = 324;
        goto LABEL_959;
      case 0x2Cu:
        v103 = objc_alloc_init(AWDHomeKitMultiUserSettings);
        objc_msgSend((id)a1, "addHomeKitMultiUserSettings:", v103);
        if (!PBReaderPlaceMark() || (AWDHomeKitMultiUserSettingsReadFrom(v103, a2) & 1) == 0)
          goto LABEL_962;
        goto LABEL_348;
      case 0x2Du:
        v233 = 0;
        v234 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000uLL;
        while (2)
        {
          v235 = *v3;
          v236 = *(_QWORD *)(a2 + v235);
          if (v236 == -1 || v236 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v237 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v236);
            *(_QWORD *)(a2 + v235) = v236 + 1;
            v19 |= (unint64_t)(v237 & 0x7F) << v233;
            if (v237 < 0)
            {
              v233 += 7;
              v14 = v234++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_789;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_789:
        v449 = 204;
        goto LABEL_959;
      case 0x2Eu:
        v238 = 0;
        v239 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000uLL;
        while (2)
        {
          v240 = *v3;
          v241 = *(_QWORD *)(a2 + v240);
          if (v241 == -1 || v241 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v242 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v241);
            *(_QWORD *)(a2 + v240) = v241 + 1;
            v19 |= (unint64_t)(v242 & 0x7F) << v238;
            if (v242 < 0)
            {
              v238 += 7;
              v14 = v239++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_793;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_793:
        v449 = 196;
        goto LABEL_959;
      case 0x2Fu:
        v243 = 0;
        v244 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000uLL;
        while (2)
        {
          v245 = *v3;
          v246 = *(_QWORD *)(a2 + v245);
          if (v246 == -1 || v246 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v247 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v246);
            *(_QWORD *)(a2 + v245) = v246 + 1;
            v19 |= (unint64_t)(v247 & 0x7F) << v243;
            if (v247 < 0)
            {
              v243 += 7;
              v14 = v244++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_797;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_797:
        v449 = 200;
        goto LABEL_959;
      case 0x30u:
        v248 = 0;
        v249 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000uLL;
        while (2)
        {
          v250 = *v3;
          v251 = *(_QWORD *)(a2 + v250);
          if (v251 == -1 || v251 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v252 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v251);
            *(_QWORD *)(a2 + v250) = v251 + 1;
            v19 |= (unint64_t)(v252 & 0x7F) << v248;
            if (v252 < 0)
            {
              v248 += 7;
              v14 = v249++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_801;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_801:
        v449 = 160;
        goto LABEL_959;
      case 0x33u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addHapServicesList:", v103);
        goto LABEL_346;
      case 0x34u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addPrimaryHAPServicesList:", v103);
        goto LABEL_346;
      case 0x35u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addHapServicesListCertified:", v103);
        goto LABEL_346;
      case 0x36u:
        v103 = objc_alloc_init(AWDHomeKitHAPService);
        objc_msgSend((id)a1, "addPrimaryHAPServicesListCertified:", v103);
LABEL_346:
        if (PBReaderPlaceMark() && (AWDHomeKitHAPServiceReadFrom((uint64_t)v103, a2) & 1) != 0)
        {
LABEL_348:
          PBReaderRecallMark();

LABEL_960:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_962:

        return 0;
      case 0x37u:
        v253 = 0;
        v254 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000000uLL;
        while (2)
        {
          v255 = *v3;
          v256 = *(_QWORD *)(a2 + v255);
          if (v256 == -1 || v256 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v257 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v256);
            *(_QWORD *)(a2 + v255) = v256 + 1;
            v19 |= (unint64_t)(v257 & 0x7F) << v253;
            if (v257 < 0)
            {
              v253 += 7;
              v14 = v254++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_805;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_805:
        v449 = 216;
        goto LABEL_959;
      case 0x38u:
        v258 = 0;
        v259 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 1u;
        while (2)
        {
          v260 = *v3;
          v261 = *(_QWORD *)(a2 + v260);
          if (v261 == -1 || v261 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v262 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v261);
            *(_QWORD *)(a2 + v260) = v261 + 1;
            v19 |= (unint64_t)(v262 & 0x7F) << v258;
            if (v262 < 0)
            {
              v258 += 7;
              v14 = v259++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_809;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_809:
        v449 = 304;
        goto LABEL_959;
      case 0x39u:
        v263 = 0;
        v264 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x200u;
        while (2)
        {
          v265 = *v3;
          v266 = *(_QWORD *)(a2 + v265);
          if (v266 == -1 || v266 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v267 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v266);
            *(_QWORD *)(a2 + v265) = v266 + 1;
            v19 |= (unint64_t)(v267 & 0x7F) << v263;
            if (v267 < 0)
            {
              v263 += 7;
              v14 = v264++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_813;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_813:
        v449 = 340;
        goto LABEL_959;
      case 0x3Eu:
        v268 = 0;
        v269 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000uLL;
        while (2)
        {
          v270 = *v3;
          v271 = *(_QWORD *)(a2 + v270);
          if (v271 == -1 || v271 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v272 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v271);
            *(_QWORD *)(a2 + v270) = v271 + 1;
            v19 |= (unint64_t)(v272 & 0x7F) << v268;
            if (v272 < 0)
            {
              v268 += 7;
              v14 = v269++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_817;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_817:
        v449 = 152;
        goto LABEL_959;
      case 0x3Fu:
        v273 = 0;
        v274 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000uLL;
        while (2)
        {
          v275 = *v3;
          v276 = *(_QWORD *)(a2 + v275);
          if (v276 == -1 || v276 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v277 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v276);
            *(_QWORD *)(a2 + v275) = v276 + 1;
            v19 |= (unint64_t)(v277 & 0x7F) << v273;
            if (v277 < 0)
            {
              v273 += 7;
              v14 = v274++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_821;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_821:
        v449 = 148;
        goto LABEL_959;
      case 0x40u:
        v278 = 0;
        v279 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000uLL;
        while (2)
        {
          v280 = *v3;
          v281 = *(_QWORD *)(a2 + v280);
          if (v281 == -1 || v281 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v282 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v281);
            *(_QWORD *)(a2 + v280) = v281 + 1;
            v19 |= (unint64_t)(v282 & 0x7F) << v278;
            if (v282 < 0)
            {
              v278 += 7;
              v14 = v279++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_825;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_825:
        v449 = 156;
        goto LABEL_959;
      case 0x41u:
        v283 = 0;
        v284 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000uLL;
        while (2)
        {
          v285 = *v3;
          v286 = *(_QWORD *)(a2 + v285);
          if (v286 == -1 || v286 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v287 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v286);
            *(_QWORD *)(a2 + v285) = v286 + 1;
            v19 |= (unint64_t)(v287 & 0x7F) << v283;
            if (v287 < 0)
            {
              v283 += 7;
              v14 = v284++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_829;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_829:
        v449 = 144;
        goto LABEL_959;
      case 0x42u:
        v288 = 0;
        v289 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000uLL;
        while (2)
        {
          v290 = *v3;
          v291 = *(_QWORD *)(a2 + v290);
          if (v291 == -1 || v291 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v292 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v291);
            *(_QWORD *)(a2 + v290) = v291 + 1;
            v19 |= (unint64_t)(v292 & 0x7F) << v288;
            if (v292 < 0)
            {
              v288 += 7;
              v14 = v289++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_833;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_833:
        v449 = 164;
        goto LABEL_959;
      case 0x43u:
        v293 = 0;
        v294 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 2uLL;
        while (2)
        {
          v295 = *v3;
          v296 = *(_QWORD *)(a2 + v295);
          if (v296 == -1 || v296 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v297 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v296);
            *(_QWORD *)(a2 + v295) = v296 + 1;
            v19 |= (unint64_t)(v297 & 0x7F) << v293;
            if (v297 < 0)
            {
              v293 += 7;
              v14 = v294++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_837;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_837:
        v449 = 12;
        goto LABEL_959;
      case 0x44u:
        v298 = 0;
        v299 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x200000000000uLL;
        while (2)
        {
          v300 = *v3;
          v301 = *(_QWORD *)(a2 + v300);
          if (v301 == -1 || v301 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v302 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v301);
            *(_QWORD *)(a2 + v300) = v301 + 1;
            v19 |= (unint64_t)(v302 & 0x7F) << v298;
            if (v302 < 0)
            {
              v298 += 7;
              v14 = v299++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_841;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_841:
        v449 = 228;
        goto LABEL_959;
      case 0x45u:
        v303 = 0;
        v304 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000000uLL;
        while (2)
        {
          v305 = *v3;
          v306 = *(_QWORD *)(a2 + v305);
          if (v306 == -1 || v306 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v307 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v306);
            *(_QWORD *)(a2 + v305) = v306 + 1;
            v19 |= (unint64_t)(v307 & 0x7F) << v303;
            if (v307 < 0)
            {
              v303 += 7;
              v14 = v304++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_845;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_845:
        v449 = 224;
        goto LABEL_959;
      case 0x46u:
        v308 = 0;
        v309 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000000uLL;
        while (2)
        {
          v310 = *v3;
          v311 = *(_QWORD *)(a2 + v310);
          if (v311 == -1 || v311 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v312 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v311);
            *(_QWORD *)(a2 + v310) = v311 + 1;
            v19 |= (unint64_t)(v312 & 0x7F) << v308;
            if (v312 < 0)
            {
              v308 += 7;
              v14 = v309++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_849;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_849:
        v449 = 232;
        goto LABEL_959;
      case 0x47u:
        v313 = 0;
        v314 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000000000uLL;
        while (2)
        {
          v315 = *v3;
          v316 = *(_QWORD *)(a2 + v315);
          if (v316 == -1 || v316 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v317 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v316);
            *(_QWORD *)(a2 + v315) = v316 + 1;
            v19 |= (unint64_t)(v317 & 0x7F) << v313;
            if (v317 < 0)
            {
              v313 += 7;
              v14 = v314++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_853;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_853:
        v449 = 256;
        goto LABEL_959;
      case 0x48u:
        v318 = 0;
        v319 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000000uLL;
        while (2)
        {
          v320 = *v3;
          v321 = *(_QWORD *)(a2 + v320);
          if (v321 == -1 || v321 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v322 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v321);
            *(_QWORD *)(a2 + v320) = v321 + 1;
            v19 |= (unint64_t)(v322 & 0x7F) << v318;
            if (v322 < 0)
            {
              v318 += 7;
              v14 = v319++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_857;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_857:
        v449 = 248;
        goto LABEL_959;
      case 0x49u:
        v323 = 0;
        v324 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000000000uLL;
        while (2)
        {
          v325 = *v3;
          v326 = *(_QWORD *)(a2 + v325);
          if (v326 == -1 || v326 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v327 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v326);
            *(_QWORD *)(a2 + v325) = v326 + 1;
            v19 |= (unint64_t)(v327 & 0x7F) << v323;
            if (v327 < 0)
            {
              v323 += 7;
              v14 = v324++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_861;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_861:
        v449 = 260;
        goto LABEL_959;
      case 0x4Au:
        v328 = 0;
        v329 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000000000000uLL;
        while (2)
        {
          v330 = *v3;
          v331 = *(_QWORD *)(a2 + v330);
          if (v331 == -1 || v331 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v332 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v331);
            *(_QWORD *)(a2 + v330) = v331 + 1;
            v19 |= (unint64_t)(v332 & 0x7F) << v328;
            if (v332 < 0)
            {
              v328 += 7;
              v14 = v329++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_865;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_865:
        v449 = 272;
        goto LABEL_959;
      case 0x4Bu:
        v333 = 0;
        v334 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000000000000uLL;
        while (2)
        {
          v335 = *v3;
          v336 = *(_QWORD *)(a2 + v335);
          if (v336 == -1 || v336 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v337 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v336);
            *(_QWORD *)(a2 + v335) = v336 + 1;
            v19 |= (unint64_t)(v337 & 0x7F) << v333;
            if (v337 < 0)
            {
              v333 += 7;
              v14 = v334++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_869;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_869:
        v449 = 264;
        goto LABEL_959;
      case 0x4Cu:
        v338 = 0;
        v339 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000000000uLL;
        while (2)
        {
          v340 = *v3;
          v341 = *(_QWORD *)(a2 + v340);
          if (v341 == -1 || v341 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v342 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v341);
            *(_QWORD *)(a2 + v340) = v341 + 1;
            v19 |= (unint64_t)(v342 & 0x7F) << v338;
            if (v342 < 0)
            {
              v338 += 7;
              v14 = v339++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_873;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_873:
        v449 = 268;
        goto LABEL_959;
      case 0x4Du:
        v343 = 0;
        v344 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000000uLL;
        while (2)
        {
          v345 = *v3;
          v346 = *(_QWORD *)(a2 + v345);
          if (v346 == -1 || v346 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v347 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v346);
            *(_QWORD *)(a2 + v345) = v346 + 1;
            v19 |= (unint64_t)(v347 & 0x7F) << v343;
            if (v347 < 0)
            {
              v343 += 7;
              v14 = v344++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_877;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_877:
        v449 = 252;
        goto LABEL_959;
      case 0x4Eu:
        v348 = 0;
        v349 = 0;
        v350 = 0;
        *(_WORD *)(a1 + 400) |= 0x8000u;
        while (2)
        {
          v351 = *v3;
          v352 = *(_QWORD *)(a2 + v351);
          if (v352 == -1 || v352 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v353 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v352);
            *(_QWORD *)(a2 + v351) = v352 + 1;
            v350 |= (unint64_t)(v353 & 0x7F) << v348;
            if (v353 < 0)
            {
              v348 += 7;
              v14 = v349++ >= 9;
              if (v14)
              {
                v350 = 0;
                goto LABEL_881;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v350 = 0;
LABEL_881:
        v450 = v350 != 0;
        v451 = 384;
LABEL_882:
        *(_BYTE *)(a1 + v451) = v450;
        goto LABEL_960;
      case 0x4Fu:
        v354 = 0;
        v355 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000uLL;
        while (2)
        {
          v356 = *v3;
          v357 = *(_QWORD *)(a2 + v356);
          if (v357 == -1 || v357 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v358 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v357);
            *(_QWORD *)(a2 + v356) = v357 + 1;
            v19 |= (unint64_t)(v358 & 0x7F) << v354;
            if (v358 < 0)
            {
              v354 += 7;
              v14 = v355++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_886;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_886:
        v449 = 192;
        goto LABEL_959;
      case 0x50u:
        v359 = 0;
        v360 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10000000000uLL;
        while (2)
        {
          v361 = *v3;
          v362 = *(_QWORD *)(a2 + v361);
          if (v362 == -1 || v362 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v363 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v362);
            *(_QWORD *)(a2 + v361) = v362 + 1;
            v19 |= (unint64_t)(v363 & 0x7F) << v359;
            if (v363 < 0)
            {
              v359 += 7;
              v14 = v360++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_890;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_890:
        v449 = 208;
        goto LABEL_959;
      case 0x51u:
        v364 = 0;
        v365 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x20000000000uLL;
        while (2)
        {
          v366 = *v3;
          v367 = *(_QWORD *)(a2 + v366);
          if (v367 == -1 || v367 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v368 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v367);
            *(_QWORD *)(a2 + v366) = v367 + 1;
            v19 |= (unint64_t)(v368 & 0x7F) << v364;
            if (v368 < 0)
            {
              v364 += 7;
              v14 = v365++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_894;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_894:
        v449 = 212;
        goto LABEL_959;
      case 0x52u:
        v369 = 0;
        v370 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 8uLL;
        while (2)
        {
          v371 = *v3;
          v372 = *(_QWORD *)(a2 + v371);
          if (v372 == -1 || v372 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v373 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v372);
            *(_QWORD *)(a2 + v371) = v372 + 1;
            v19 |= (unint64_t)(v373 & 0x7F) << v369;
            if (v373 < 0)
            {
              v369 += 7;
              v14 = v370++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_898;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_898:
        v449 = 48;
        goto LABEL_959;
      case 0x53u:
        v374 = 0;
        v375 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 4uLL;
        while (2)
        {
          v376 = *v3;
          v377 = *(_QWORD *)(a2 + v376);
          if (v377 == -1 || v377 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v378 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v377);
            *(_QWORD *)(a2 + v376) = v377 + 1;
            v19 |= (unint64_t)(v378 & 0x7F) << v374;
            if (v378 < 0)
            {
              v374 += 7;
              v14 = v375++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_902;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_902:
        v449 = 24;
        goto LABEL_959;
      case 0x54u:
        v379 = 0;
        v380 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 1uLL;
        while (2)
        {
          v381 = *v3;
          v382 = *(_QWORD *)(a2 + v381);
          if (v382 == -1 || v382 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v383 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v382);
            *(_QWORD *)(a2 + v381) = v382 + 1;
            v19 |= (unint64_t)(v383 & 0x7F) << v379;
            if (v383 < 0)
            {
              v379 += 7;
              v14 = v380++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_906;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_906:
        v449 = 8;
        goto LABEL_959;
      case 0x55u:
        v384 = 0;
        v385 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x8000000000000000;
        while (2)
        {
          v386 = *v3;
          v387 = *(_QWORD *)(a2 + v386);
          if (v387 == -1 || v387 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v388 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v387);
            *(_QWORD *)(a2 + v386) = v387 + 1;
            v19 |= (unint64_t)(v388 & 0x7F) << v384;
            if (v388 < 0)
            {
              v384 += 7;
              v14 = v385++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_910;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_910:
        v449 = 300;
        goto LABEL_959;
      case 0x56u:
        v389 = 0;
        v390 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x4000000000000000uLL;
        while (2)
        {
          v391 = *v3;
          v392 = *(_QWORD *)(a2 + v391);
          if (v392 == -1 || v392 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v393 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v392);
            *(_QWORD *)(a2 + v391) = v392 + 1;
            v19 |= (unint64_t)(v393 & 0x7F) << v389;
            if (v393 < 0)
            {
              v389 += 7;
              v14 = v390++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_914;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_914:
        v449 = 296;
        goto LABEL_959;
      case 0x57u:
        v394 = 0;
        v395 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000000uLL;
        while (2)
        {
          v396 = *v3;
          v397 = *(_QWORD *)(a2 + v396);
          if (v397 == -1 || v397 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v398 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v397);
            *(_QWORD *)(a2 + v396) = v397 + 1;
            v19 |= (unint64_t)(v398 & 0x7F) << v394;
            if (v398 < 0)
            {
              v394 += 7;
              v14 = v395++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_918;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_918:
        v449 = 240;
        goto LABEL_959;
      case 0x58u:
        v399 = 0;
        v400 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000000uLL;
        while (2)
        {
          v401 = *v3;
          v402 = *(_QWORD *)(a2 + v401);
          if (v402 == -1 || v402 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v403 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v402);
            *(_QWORD *)(a2 + v401) = v402 + 1;
            v19 |= (unint64_t)(v403 & 0x7F) << v399;
            if (v403 < 0)
            {
              v399 += 7;
              v14 = v400++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_922;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_922:
        v449 = 244;
        goto LABEL_959;
      case 0x59u:
        v404 = 0;
        v405 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x10uLL;
        while (2)
        {
          v406 = *v3;
          v407 = *(_QWORD *)(a2 + v406);
          if (v407 == -1 || v407 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v408 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v407);
            *(_QWORD *)(a2 + v406) = v407 + 1;
            v19 |= (unint64_t)(v408 & 0x7F) << v404;
            if (v408 < 0)
            {
              v404 += 7;
              v14 = v405++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_926;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_926:
        v449 = 64;
        goto LABEL_959;
      case 0x5Au:
        v409 = 0;
        v410 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x80000000000uLL;
        while (2)
        {
          v411 = *v3;
          v412 = *(_QWORD *)(a2 + v411);
          if (v412 == -1 || v412 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v413 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v412);
            *(_QWORD *)(a2 + v411) = v412 + 1;
            v19 |= (unint64_t)(v413 & 0x7F) << v409;
            if (v413 < 0)
            {
              v409 += 7;
              v14 = v410++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_930;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_930:
        v449 = 220;
        goto LABEL_959;
      case 0x5Bu:
        v414 = 0;
        v415 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x100000uLL;
        while (2)
        {
          v416 = *v3;
          v417 = *(_QWORD *)(a2 + v416);
          if (v417 == -1 || v417 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v418 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v417);
            *(_QWORD *)(a2 + v416) = v417 + 1;
            v19 |= (unint64_t)(v418 & 0x7F) << v414;
            if (v418 < 0)
            {
              v414 += 7;
              v14 = v415++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_934;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_934:
        v449 = 128;
        goto LABEL_959;
      case 0x5Cu:
        v419 = 0;
        v420 = 0;
        v19 = 0;
        *(_WORD *)(a1 + 400) |= 0x2000u;
        while (2)
        {
          v421 = *v3;
          v422 = *(_QWORD *)(a2 + v421);
          if (v422 == -1 || v422 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v423 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v422);
            *(_QWORD *)(a2 + v421) = v422 + 1;
            v19 |= (unint64_t)(v423 & 0x7F) << v419;
            if (v423 < 0)
            {
              v419 += 7;
              v14 = v420++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_938;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_938:
        v449 = 356;
        goto LABEL_959;
      case 0x5Du:
        v424 = 0;
        v425 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x800000000000000uLL;
        while (2)
        {
          v426 = *v3;
          v427 = *(_QWORD *)(a2 + v426);
          if (v427 == -1 || v427 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v428 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v427);
            *(_QWORD *)(a2 + v426) = v427 + 1;
            v19 |= (unint64_t)(v428 & 0x7F) << v424;
            if (v428 < 0)
            {
              v424 += 7;
              v14 = v425++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_942;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_942:
        v449 = 284;
        goto LABEL_959;
      case 0x5Eu:
        v429 = 0;
        v430 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x1000000000000000uLL;
        while (2)
        {
          v431 = *v3;
          v432 = *(_QWORD *)(a2 + v431);
          if (v432 == -1 || v432 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v433 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v432);
            *(_QWORD *)(a2 + v431) = v432 + 1;
            v19 |= (unint64_t)(v433 & 0x7F) << v429;
            if (v433 < 0)
            {
              v429 += 7;
              v14 = v430++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_946;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_946:
        v449 = 288;
        goto LABEL_959;
      case 0x5Fu:
        v434 = 0;
        v435 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x2000000000000000uLL;
        while (2)
        {
          v436 = *v3;
          v437 = *(_QWORD *)(a2 + v436);
          if (v437 == -1 || v437 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v438 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v437);
            *(_QWORD *)(a2 + v436) = v437 + 1;
            v19 |= (unint64_t)(v438 & 0x7F) << v434;
            if (v438 < 0)
            {
              v434 += 7;
              v14 = v435++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_950;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_950:
        v449 = 292;
        goto LABEL_959;
      case 0x60u:
        v439 = 0;
        v440 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x400000000000000uLL;
        while (2)
        {
          v441 = *v3;
          v442 = *(_QWORD *)(a2 + v441);
          if (v442 == -1 || v442 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v443 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v442);
            *(_QWORD *)(a2 + v441) = v442 + 1;
            v19 |= (unint64_t)(v443 & 0x7F) << v439;
            if (v443 < 0)
            {
              v439 += 7;
              v14 = v440++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_954;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_954:
        v449 = 280;
        goto LABEL_959;
      case 0x61u:
        v444 = 0;
        v445 = 0;
        v19 = 0;
        *(_QWORD *)(a1 + 392) |= 0x40000uLL;
        while (2)
        {
          v446 = *v3;
          v447 = *(_QWORD *)(a2 + v446);
          if (v447 == -1 || v447 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v448 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v447);
            *(_QWORD *)(a2 + v446) = v447 + 1;
            v19 |= (unint64_t)(v448 & 0x7F) << v444;
            if (v448 < 0)
            {
              v444 += 7;
              v14 = v445++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_958;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_958:
        v449 = 120;
LABEL_959:
        *(_DWORD *)(a1 + v449) = v19;
        goto LABEL_960;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_960;
    }
  }
}

void sub_222010F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222011A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__125865(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__125866(uint64_t a1)
{

}

void sub_222012CDC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222013000(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222013478(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222013810(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222013C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222013D8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222013F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_s *v15;

  os_unfair_lock_unlock(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_222014160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_s *v15;

  os_unfair_lock_unlock(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_2220144A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014610(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014B10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014B6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014BC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014C44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222014D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22201514C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__126039(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__126040(uint64_t a1)
{

}

void sub_222016480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222016FC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201808C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201837C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220188F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222019FA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A0F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A178(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A208(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A424(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A5C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201A810(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL isNameValidWithVoiceShortcut(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  void *v6;
  _BOOL8 v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  dispatch_time_t v11;
  _QWORD v13[4];
  NSObject *v14;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "productClass");

  if (v3 == 6)
  {
    v4 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138543362;
      *(_QWORD *)((char *)&buf + 4) = v6;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@siriactiond does not run on HomePod", (uint8_t *)&buf, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v7 = 1;
  }
  else
  {
    v8 = dispatch_group_create();
    dispatch_group_enter(v8);
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v17 = 0x2020000000;
    v18 = 1;
    objc_msgSend(MEMORY[0x24BEC1318], "standardClient");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __isNameValidWithVoiceShortcut_block_invoke;
    v13[3] = &unk_24E7866D8;
    p_buf = &buf;
    v10 = v8;
    v14 = v10;
    objc_msgSend(v9, "getVoiceShortcutWithPhrase:completion:", v1, v13);

    v11 = dispatch_time(0, 5000000000);
    dispatch_group_wait(v10, v11);
    v7 = *(_BYTE *)(*((_QWORD *)&buf + 1) + 24) != 0;

    _Block_object_dispose(&buf, 8);
  }

  return v7;
}

void sub_22201AAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __isNameValidWithVoiceShortcut_block_invoke(uint64_t a1, uint64_t a2)
{
  if (a2)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

HMDCUWiFiDeviceWrapper *__wrapCUWiFiDevice(void *a1, void *a2)
{
  id v3;
  _QWORD *v4;
  HMDCUWiFiDeviceWrapper *v5;
  uint64_t v6;
  HMDCUWiFiDeviceWrapper *v7;

  v3 = a2;
  v4 = a1;
  v5 = [HMDCUWiFiDeviceWrapper alloc];
  v6 = v4[1];

  v7 = -[HMDCUWiFiDeviceWrapper initWithCUWiFiDevice:dispatchQueue:](v5, "initWithCUWiFiDevice:dispatchQueue:", v3, v6);
  return v7;
}

void sub_22201B62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__126561(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__126562(uint64_t a1)
{

}

void sub_22201C6F0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 152));
  _Unwind_Resume(a1);
}

void ____start_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  id v16;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v22 = v8;
      v23 = 2112;
      v24 = v3;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Found device %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      __wrapCUWiFiDevice(v6, v3);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = (void *)MEMORY[0x227676638]();
      v12 = v6;
      HMFGetOSLogHandle();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v22 = v14;
        v23 = 2112;
        v24 = v10;
        _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_INFO, "%{public}@Device %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v11);
      objc_msgSend(v12, "delegateQueue");
      v15 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_137;
      block[3] = &unk_24E79BBD0;
      v18 = v9;
      v19 = v12;
      v20 = v10;
      v16 = v10;
      dispatch_async(v15, block);

    }
  }

}

void ____start_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  id v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "ssid");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "identifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v20 = v8;
      v21 = 2112;
      v22 = v9;
      v23 = 2112;
      v24 = v10;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Lost device %@: (%@)", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      __wrapCUWiFiDevice(v6, v3);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "delegateQueue");
      v13 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_139;
      block[3] = &unk_24E79BBD0;
      v16 = v11;
      v17 = v6;
      v18 = v12;
      v14 = v12;
      dispatch_async(v13, block);

    }
  }

}

void ____start_block_invoke_2_140(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      __wrapCUWiFiDevice(v5, v3);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "delegateQueue");
      v8 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_3;
      block[3] = &unk_24E79BBD0;
      v11 = v6;
      v12 = v5;
      v13 = v7;
      v9 = v7;
      dispatch_async(v8, block);

    }
  }

}

void ____start_block_invoke_4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  _QWORD block[4];
  id v12;
  id *v13;
  id v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = (id *)WeakRetained;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v16 = v8;
      v17 = 2112;
      v18 = v3;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_ERROR, "%{public}@Error %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "delegate");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_msgSend(v6, "delegateQueue");
      v10 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_142;
      block[3] = &unk_24E79BBD0;
      v12 = v9;
      v13 = v6;
      v14 = v3;
      dispatch_async(v10, block);

    }
    objc_msgSend(v6[2], "invalidate");

  }
}

void ____start_block_invoke_2_144(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  _QWORD *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint8_t buf[4];
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = WeakRetained;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v13 = v5;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@CUWiFiScanner invalidated", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    v6 = (void *)v3[2];
    v3[2] = 0;

  }
  objc_msgSend(WeakRetained, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    objc_msgSend(WeakRetained, "delegateQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = ____start_block_invoke_145;
    v9[3] = &unk_24E79C268;
    v10 = v7;
    v11 = WeakRetained;
    dispatch_async(v8, v9);

  }
}

uint64_t ____start_block_invoke_145(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scannerDidStop:", *(_QWORD *)(a1 + 40));
}

uint64_t ____start_block_invoke_142(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didError:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didUpdateDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_139(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didRemoveDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t ____start_block_invoke_137(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "scanner:didAddDevice:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_22201D5DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201D65C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201D814(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201F17C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201F2AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201F38C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22201F50C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222020E88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDDatabaseSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_22202111C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDDatabaseSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_222021234(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&HMDDatabaseSharedInstanceLock);
  _Unwind_Resume(a1);
}

void sub_222023320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__127271(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__127272(uint64_t a1)
{

}

void sub_2220243EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_222025A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, id a14)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a14);
  _Unwind_Resume(a1);
}

void sub_222026560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_22202CCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __conformanceCheck(void *a1, uint64_t a2, char a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[6];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  v5 = a1;
  os_unfair_lock_lock_with_options();
  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = __Block_byref_object_copy__128815;
  v16 = __Block_byref_object_dispose__128816;
  objc_msgSend(*((id *)v5 + 3), "objectForKey:", a2);
  v17 = (id)objc_claimAutoreleasedReturnValue();
  v6 = (void *)v13[5];
  if (!v6 || (a3 & 1) != 0)
  {
    v8 = (void *)*((_QWORD *)v5 + 2);
    v11[0] = MEMORY[0x24BDAC760];
    v11[1] = 3221225472;
    v11[2] = ____conformanceCheck_block_invoke;
    v11[3] = &unk_24E786B98;
    v11[4] = &v12;
    v11[5] = a2;
    objc_msgSend(v8, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);
    objc_msgSend(*((id *)v5 + 3), "setObject:forKey:", v13[5], a2);
    v7 = objc_msgSend((id)v13[5], "BOOLValue");
  }
  else
  {
    v7 = objc_msgSend(v6, "BOOLValue");
  }
  v9 = v7;
  _Block_object_dispose(&v12, 8);

  os_unfair_lock_unlock((os_unfair_lock_t)v5 + 2);
  return v9;
}

void sub_22202D230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_s *v15;

  os_unfair_lock_unlock(v15);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__128815(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__128816(uint64_t a1)
{

}

void ____conformanceCheck_block_invoke(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = objc_msgSend(*(id *)(a1 + 40), "conformsToProtocol:", a2);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  if ((_DWORD)v5)
    *a3 = 1;
}

void sub_222034A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222036C88(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222037CB8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2220386D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222038A94(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_2220391A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22203A6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22203A908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22203AC00(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22203B1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22203BC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22203F5C0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22203F640(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22203FDF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222040134(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222040AAC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222040BF4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222041A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __bootstrapSupportedStereoPairVersions(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  BOOL v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  uint8_t buf[16];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(v1, "identifier");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (id)_mediaRouteIdentifier;
  if ((objc_msgSend(v2, "isEqual:", v3) & 1) == 0)
  {
    v4 = objc_msgSend(v1, "supportedStereoPairVersions");

    if (v4)
      goto LABEL_5;
    objc_msgSend(v1, "softwareVersion");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      v2 = v5;
    }
    else
    {
      objc_msgSend(v1, "device");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "productInfo");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "softwareVersion");
      v2 = (id)objc_claimAutoreleasedReturnValue();

    }
    if ((objc_msgSend(v1, "isHomePod") & 1) != 0)
    {
      v9 = 0;
      if (!v2)
      {
LABEL_13:
        *(_OWORD *)buf = *MEMORY[0x24BE3EC90];
        v25 = *(_QWORD *)(MEMORY[0x24BE3EC90] + 16);
        v12 = HMFOperatingSystemVersionCompare();
        if (v2)
          objc_msgSend(v2, "operatingSystemVersion");
        *(_OWORD *)buf = *MEMORY[0x24BE3ED88];
        v25 = *(_QWORD *)(MEMORY[0x24BE3ED88] + 16);
        v13 = HMFOperatingSystemVersionCompare();
        v19 = v12 != 1 || v9;
        if ((v19 & 1) == 0 && v13 != 1)
        {
          v20 = (void *)MEMORY[0x227676638](v13, v14, v15, v16, v17, v18);
          v21 = v1;
          HMFGetOSLogHandle();
          v22 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            *(_QWORD *)&buf[4] = v23;
            _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_INFO, "%{public}@Bootstrapping stereo pair version to V1", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v20);
          objc_msgSend(v21, "setSupportedStereoPairVersions:", 1);
        }
        goto LABEL_3;
      }
    }
    else
    {
      objc_msgSend(v1, "device");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "productInfo");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v11, "productClass") != 6;

      if (!v2)
        goto LABEL_13;
    }
    objc_msgSend(v2, "operatingSystemVersion");
    goto LABEL_13;
  }

LABEL_3:
LABEL_5:

}

void __HMDAppleMediaAccessoryHandleUpdatedDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void (**v12)(void);
  void *v13;
  int v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x227676638]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 138543618;
    v18 = v8;
    v19 = 2112;
    v20 = v4;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@Device updated to: %@", (uint8_t *)&v17, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  objc_msgSend(v6, "notificationCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "removeObserver:name:object:", v6, CFSTR("HMDDeviceUpdatedNotification"), 0);

  if (v4)
  {
    objc_msgSend(v6, "startMonitoringReachability");
    objc_msgSend(v6, "symptomsHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleAccessoryDeviceUpdated");

    objc_msgSend(v6, "identifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "deviceMediaRouteIdentifierFactory");
    v12 = (void (**)(void))objc_claimAutoreleasedReturnValue();
    v12[2]();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v11, "isEqual:", v13);

    if (v14)
    {
      objc_msgSend(v6, "notificationCenter");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "addObserver:selector:name:object:", v6, sel_handleCurrentDeviceUpdated_, CFSTR("HMDDeviceUpdatedNotification"), v4);

      if (objc_msgSend(v6, "shouldUpdateWithDevice:initialConfiguration:", v4, 0))
        objc_msgSend(v6, "updateWithDevice:", v4);
    }
    __bootstrapSupportedStereoPairVersions(v6);
    objc_msgSend(v6, "notificationCenter");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "postNotificationName:object:", CFSTR("HMDAppleMediaAccessoryDeviceUpdatedNotification"), v6);

  }
  objc_msgSend(v6, "updateReachabilityOfCurrentDevice");

}

uint64_t __Block_byref_object_copy__129695(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__129696(uint64_t a1)
{

}

void __transactionAccessoryUpdated_129698(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  id v23;
  NSObject *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  BOOL v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t j;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  BOOL v50;
  void *v51;
  void *v52;
  char v53;
  void *v54;
  void *v55;
  void *v56;
  char v57;
  void *v58;
  id v59;
  NSObject *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  char v69;
  void *v70;
  id v71;
  NSObject *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  NSObject *v78;
  NSObject *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  char v84;
  void *v85;
  id v86;
  NSObject *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  char v94;
  void *v95;
  id v96;
  NSObject *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  void *v107;
  void *v108;
  _QWORD *v109;
  NSObject *v110;
  void *v111;
  uint64_t v112;
  NSObject *v113;
  NSObject *v114;
  void *v115;
  id v116;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  _QWORD *v124;
  NSObject *v125;
  void *v126;
  NSObject *v127;
  NSObject *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  int v135;
  void *v136;
  NSObject *v137;
  NSObject *v138;
  void *v139;
  void *v140;
  void *v141;
  char v142;
  void *v143;
  id v144;
  NSObject *v145;
  void *v146;
  void *v147;
  void *v148;
  id v149;
  void *v150;
  void *v151;
  char v152;
  void *v153;
  id v154;
  NSObject *v155;
  void *v156;
  void *v157;
  void *v158;
  id v159;
  _QWORD v160[4];
  id v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  _QWORD v170[2];
  _QWORD v171[2];
  uint8_t buf[4];
  void *v173;
  __int16 v174;
  uint64_t v175;
  __int16 v176;
  void *v177;
  _BYTE v178[128];
  _BYTE v179[128];
  uint64_t v180;

  v180 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v159 = a3;
  objc_msgSend(v159, "transactionResult");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  __HMDAppleMediaAccessoryGetDeviceController(v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "deviceUUID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (objc_msgSend(v5, "isCurrentAccessory"))
    {
      if (!v8)
      {
        v10 = (void *)MEMORY[0x227676638]();
        v11 = v5;
        HMFGetOSLogHandle();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v173 = v13;
          _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_INFO, "%{public}@Setting up device controller for ourselves", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v10);
        objc_msgSend(v11, "dependencyFactory");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "deviceController");
        v8 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v11, "setDeviceController:", v8);
        objc_msgSend(v8, "setDelegate:", v11);
        objc_msgSend(v8, "device");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        __HMDAppleMediaAccessoryHandleUpdatedDevice(v11, v15);

        objc_msgSend(v7, "markChanged");
      }
    }
    else
    {
      v16 = objc_alloc(MEMORY[0x24BDD1880]);
      objc_msgSend(v6, "deviceUUID");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = (void *)objc_msgSend(v16, "initWithUUIDString:", v17);

      objc_msgSend(v8, "identifier");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v18, "hmf_isEqualToUUID:", v19);

      if ((v20 & 1) != 0)
      {
        v21 = v8;
      }
      else
      {
        v22 = (void *)MEMORY[0x227676638]();
        v23 = v5;
        HMFGetOSLogHandle();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "UUIDString");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v173 = v25;
          v174 = 2112;
          v175 = (uint64_t)v26;
          _os_log_impl(&dword_2218F0000, v24, OS_LOG_TYPE_DEFAULT, "%{public}@Updating the underlying device with identifier: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v22);
        objc_msgSend(v23, "dependencyFactory");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "deviceControllerWithDeviceIdentifier:", v18);
        v21 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v23, "setDeviceController:", v21);
        objc_msgSend(v21, "setDelegate:", v23);
        objc_msgSend(v21, "device");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        __HMDAppleMediaAccessoryHandleUpdatedDevice(v23, v28);

        objc_msgSend(v7, "markChanged");
      }

      v8 = v21;
    }
  }
  objc_msgSend(v6, "device");
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  if (v29)
  {
    objc_msgSend(v6, "device");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "device");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = v30 == v31;

    if (!v32)
    {
      objc_msgSend(v5, "device");
      v33 = (void *)objc_claimAutoreleasedReturnValue();

      if (v33)
      {
        v168 = 0u;
        v169 = 0u;
        v166 = 0u;
        v167 = 0u;
        objc_msgSend(v5, "device");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "backingStoreObjectsWithChangeType:version:", 0, 4);
        v35 = (void *)objc_claimAutoreleasedReturnValue();

        v36 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v166, v179, 16);
        if (v36)
        {
          v37 = *(_QWORD *)v167;
          do
          {
            for (i = 0; i != v36; ++i)
            {
              if (*(_QWORD *)v167 != v37)
                objc_enumerationMutation(v35);
              objc_msgSend(*(id *)(*((_QWORD *)&v166 + 1) + 8 * i), "dumpDebug:", CFSTR(" LOCAL: "));
            }
            v36 = objc_msgSend(v35, "countByEnumeratingWithState:objects:count:", &v166, v179, 16);
          }
          while (v36);
        }

      }
      objc_msgSend(v6, "device");
      v39 = (void *)objc_claimAutoreleasedReturnValue();

      if (v39)
      {
        v164 = 0u;
        v165 = 0u;
        v162 = 0u;
        v163 = 0u;
        objc_msgSend(v6, "device");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "backingStoreObjectsWithChangeType:version:", 0, 4);
        v41 = (void *)objc_claimAutoreleasedReturnValue();

        v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v162, v178, 16);
        if (v42)
        {
          v43 = *(_QWORD *)v163;
          do
          {
            for (j = 0; j != v42; ++j)
            {
              if (*(_QWORD *)v163 != v43)
                objc_enumerationMutation(v41);
              objc_msgSend(*(id *)(*((_QWORD *)&v162 + 1) + 8 * j), "dumpDebug:", CFSTR("REMOTE: "));
            }
            v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v162, v178, 16);
          }
          while (v42);
        }

      }
    }
    if (!v8)
    {
      objc_msgSend(v5, "dependencyFactory");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "device");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "deviceControllerWithDevice:", v46);
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v5, "setDeviceController:", v8);
      objc_msgSend(v8, "setDelegate:", v5);
      objc_msgSend(v8, "device");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      __HMDAppleMediaAccessoryHandleUpdatedDevice(v5, v47);

    }
    objc_msgSend(v6, "device");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "device");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = v48 == v49;

    if (v50)
      goto LABEL_38;
    objc_msgSend(v5, "device");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "device");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = objc_msgSend(v51, "isBackingStorageEqual:", v52);

    if ((v53 & 1) == 0)
    {
      objc_msgSend(v6, "device");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "updateWithDevice:completionHandler:", v54, 0);

LABEL_38:
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "deviceAddress");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  if (v55)
  {
    objc_msgSend(v5, "deviceAddress");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    v57 = HMFEqualObjects();

    if ((v57 & 1) == 0)
    {
      v58 = (void *)MEMORY[0x227676638]();
      v59 = v5;
      HMFGetOSLogHandle();
      v60 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v173 = v61;
        v174 = 2112;
        v175 = (uint64_t)v55;
        _os_log_impl(&dword_2218F0000, v60, OS_LOG_TYPE_DEFAULT, "%{public}@Updating deviceAddress %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v58);
      objc_msgSend(v59, "setDeviceAddress:", v55);
      if (!v8)
      {
        objc_msgSend(v59, "dependencyFactory");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v62, "deviceWithAddress:", v55);
        v63 = (void *)objc_claimAutoreleasedReturnValue();

        if (v63)
        {
          objc_msgSend(v59, "dependencyFactory");
          v64 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v64, "deviceControllerWithDevice:", v63);
          v8 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v59, "setDeviceController:", v8);
          objc_msgSend(v8, "setDelegate:", v59);
          objc_msgSend(v8, "device");
          v65 = (void *)objc_claimAutoreleasedReturnValue();
          __HMDAppleMediaAccessoryHandleUpdatedDevice(v59, v65);

        }
        else
        {
          v8 = 0;
        }

      }
      objc_msgSend(v7, "markChanged");
    }
  }
  objc_msgSend(v6, "deviceIRKData");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  if (v66)
  {
    objc_msgSend(v6, "deviceIRKData");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "deviceIRK");
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    v69 = HMFEqualObjects();

    if ((v69 & 1) == 0)
    {
      v70 = (void *)MEMORY[0x227676638]();
      v71 = v5;
      HMFGetOSLogHandle();
      v72 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v73 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "deviceIRKData");
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v173 = v73;
        v174 = 2112;
        v175 = (uint64_t)v74;
        _os_log_impl(&dword_2218F0000, v72, OS_LOG_TYPE_DEFAULT, "%{public}@Updating deviceIRK %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v70);
      objc_msgSend(v6, "deviceIRKData");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v71, "setDeviceIRK:", v75);

      objc_msgSend(v7, "markChanged");
    }
  }

  objc_msgSend(v6, "pairingIdentity");
  v76 = (void *)objc_claimAutoreleasedReturnValue();

  if (v76)
  {
    objc_msgSend(v6, "pairingIdentity");
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleTransactionUpdatedPublicPairingIdentity:result:", v77, v7);

    v78 = *((_QWORD *)v5 + 62);
    if (os_signpost_enabled(v78))
    {
      v79 = v78;
      objc_msgSend(v5, "uuid");
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v173 = v80;
      _os_signpost_emit_with_name_impl(&dword_2218F0000, v79, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatePublicPairingIdentify", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);

    }
  }
  objc_msgSend(v6, "softwareVersion");
  v81 = (void *)objc_claimAutoreleasedReturnValue();

  if (v81)
  {
    objc_msgSend(v6, "softwareVersion");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "softwareVersion");
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    v84 = objc_msgSend(v82, "isEqual:", v83);

    if ((v84 & 1) == 0)
    {
      v85 = (void *)MEMORY[0x227676638]();
      v86 = v5;
      HMFGetOSLogHandle();
      v87 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v88 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "softwareVersion");
        v89 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v173 = v88;
        v174 = 2112;
        v175 = (uint64_t)v89;
        _os_log_impl(&dword_2218F0000, v87, OS_LOG_TYPE_DEFAULT, "%{public}@Updated software version: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v85);
      objc_msgSend(v6, "softwareVersion");
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v86, "setSoftwareVersion:", v90);

      objc_msgSend(v7, "markChanged");
      if (objc_msgSend(v86, "isCurrentAccessory"))
      {
        objc_msgSend(v86, "softwareVersion");
        v91 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
        v92 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v92, "softwareVersion");
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        v94 = HMFEqualObjects();

        if ((v94 & 1) == 0)
        {
          v95 = (void *)MEMORY[0x227676638]();
          v96 = v86;
          HMFGetOSLogHandle();
          v97 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v96, "softwareVersion");
            v99 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v100, "softwareVersion");
            v101 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543874;
            v173 = v98;
            v174 = 2112;
            v175 = (uint64_t)v99;
            v176 = 2112;
            v177 = v101;
            _os_log_impl(&dword_2218F0000, v97, OS_LOG_TYPE_DEFAULT, "%{public}@Stored software version is incorrect (%@), updating to: (%@)", buf, 0x20u);

          }
          objc_autoreleasePoolPop(v95);
          objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
          v102 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v102, "softwareVersion");
          v103 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v96, "_updateSoftwareVersion:", v103);

        }
      }
    }
  }
  objc_msgSend(v6, "variant");
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  if (v104)
  {
    objc_msgSend(v6, "variant");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    v106 = objc_msgSend(v105, "unsignedIntegerValue");
    LOBYTE(v106) = v106 == objc_msgSend(v5, "variant");

    if ((v106 & 1) == 0)
    {
      objc_msgSend(v6, "variant");
      v107 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setVariant:", objc_msgSend(v107, "unsignedIntegerValue"));

      v108 = (void *)MEMORY[0x227676638]();
      v109 = v5;
      HMFGetOSLogHandle();
      v110 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v111 = (void *)objc_claimAutoreleasedReturnValue();
        v112 = objc_msgSend(v109, "variant");
        *(_DWORD *)buf = 138543618;
        v173 = v111;
        v174 = 2048;
        v175 = v112;
        _os_log_impl(&dword_2218F0000, v110, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory variant: 0x%tx", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v108);
      v113 = v109[62];
      if (os_signpost_enabled(v113))
      {
        v114 = v113;
        objc_msgSend(v109, "uuid");
        v115 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v173 = v115;
        _os_signpost_emit_with_name_impl(&dword_2218F0000, v114, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "updatedAccessoryVariant", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);

      }
      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("accessoryCapabilities")))
  {
    v116 = objc_alloc(MEMORY[0x24BDD7330]);
    objc_msgSend(v6, "accessoryCapabilities");
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    v118 = (void *)objc_msgSend(v116, "initWithProtoData:", v117);

    if (v118)
    {
      os_unfair_recursive_lock_lock_with_options();
      v119 = (void *)*((_QWORD *)v5 + 69);
      if (v119 && (objc_msgSend(v119, "isEqual:", v118) & 1) != 0)
      {
        os_unfair_recursive_lock_unlock();
      }
      else
      {
        objc_storeStrong((id *)v5 + 69, v118);
        objc_msgSend(v6, "accessoryCapabilities");
        v120 = objc_claimAutoreleasedReturnValue();
        v121 = (void *)*((_QWORD *)v5 + 70);
        *((_QWORD *)v5 + 70) = v120;

        v122 = os_unfair_recursive_lock_unlock();
        v123 = (void *)MEMORY[0x227676638](v122);
        v124 = v5;
        HMFGetOSLogHandle();
        v125 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v126 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v173 = v126;
          v174 = 2112;
          v175 = (uint64_t)v118;
          _os_log_impl(&dword_2218F0000, v125, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory capabilities %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v123);
        v127 = v124[62];
        if (os_signpost_enabled(v127))
        {
          v128 = v127;
          objc_msgSend(v124, "uuid");
          v129 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v173 = v129;
          _os_signpost_emit_with_name_impl(&dword_2218F0000, v128, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatedAccessoryCapabilities", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);

        }
        objc_msgSend(v7, "markChanged");
        objc_msgSend(v124, "notificationCenter");
        v130 = (void *)objc_claimAutoreleasedReturnValue();
        v170[0] = CFSTR("accessoryUUID");
        objc_msgSend(v124, "uuid");
        v131 = (void *)objc_claimAutoreleasedReturnValue();
        v170[1] = CFSTR("accessoryCapabilities");
        v171[0] = v131;
        v171[1] = v118;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v171, v170, 2);
        v132 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v130, "postNotificationName:object:userInfo:", CFSTR("HMDAppleMediaAccessoryCapabilitiesUpdatedNotification"), v124, v132);

      }
    }

  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("idsIdentifier")))
  {
    objc_msgSend(v5, "idsIdentifier");
    v133 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "idsIdentifier");
    v134 = (void *)objc_claimAutoreleasedReturnValue();
    v135 = objc_msgSend(v133, "hmf_isEqualToUUID:", v134);

    if (v135)
    {
      objc_msgSend(v6, "idsIdentifier");
      v136 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setIdsIdentifier:", v136);

      v137 = *((_QWORD *)v5 + 62);
      if (os_signpost_enabled(v137))
      {
        v138 = v137;
        objc_msgSend(v5, "uuid");
        v139 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v173 = v139;
        _os_signpost_emit_with_name_impl(&dword_2218F0000, v138, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatedAccessoryIDS", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);

      }
      objc_msgSend(v7, "markChanged");
    }
  }
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("supportedStereoPairVersions")))
  {
    objc_msgSend(v6, "supportedStereoPairVersions");
    v140 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", objc_msgSend(v5, "supportedStereoPairVersions"));
    v141 = (void *)objc_claimAutoreleasedReturnValue();
    v142 = objc_msgSend(v140, "isEqual:", v141);

    if ((v142 & 1) == 0)
    {
      v143 = (void *)MEMORY[0x227676638]();
      v144 = v5;
      HMFGetOSLogHandle();
      v145 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v146 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "supportedStereoPairVersions");
        v147 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v173 = v146;
        v174 = 2112;
        v175 = (uint64_t)v147;
        _os_log_impl(&dword_2218F0000, v145, OS_LOG_TYPE_DEFAULT, "%{public}@Updated supported stereo pair versions: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v143);
      objc_msgSend(v6, "supportedStereoPairVersions");
      v148 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v144, "setSupportedStereoPairVersions:", objc_msgSend(v148, "unsignedIntegerValue"));

      objc_msgSend(v7, "markChanged");
    }
  }
  v160[0] = MEMORY[0x24BDAC760];
  v160[1] = 3221225472;
  v160[2] = ____transactionAccessoryUpdated_block_invoke_129718;
  v160[3] = &unk_24E791780;
  v149 = v7;
  v161 = v149;
  objc_msgSend(v5, "transactionAccessoryUpdatedForPreferredMediaUser:completionHandler:", v6, v160);
  if (objc_msgSend(v6, "propertyWasSet:", CFSTR("productColor")))
  {
    objc_msgSend(v6, "productColor");
    v150 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v5, "productColor"));
    v151 = (void *)objc_claimAutoreleasedReturnValue();
    v152 = objc_msgSend(v150, "isEqual:", v151);

    if ((v152 & 1) == 0)
    {
      v153 = (void *)MEMORY[0x227676638]();
      v154 = v5;
      HMFGetOSLogHandle();
      v155 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v155, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v156 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "productColor");
        v157 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v173 = v156;
        v174 = 2112;
        v175 = (uint64_t)v157;
        _os_log_impl(&dword_2218F0000, v155, OS_LOG_TYPE_DEFAULT, "%{public}@Updated product color: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v153);
      objc_msgSend(v6, "productColor");
      v158 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v154, "setProductColor:", objc_msgSend(v158, "unsignedIntegerValue"));

      objc_msgSend(v149, "markChanged");
    }
  }
  objc_msgSend(v159, "respondWithPayload:", 0);

}

void sub_222044974(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

id __HMDAppleMediaAccessoryGetDeviceController(void *a1)
{
  id *v1;
  id v2;

  v1 = a1;
  os_unfair_recursive_lock_lock_with_options();
  v2 = v1[59];
  os_unfair_recursive_lock_unlock();

  return v2;
}

uint64_t ____transactionAccessoryUpdated_block_invoke_129718(uint64_t result, int a2)
{
  if (a2)
    return objc_msgSend(*(id *)(result + 32), "markChanged");
  return result;
}

id getMCProfileConnectionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getMCProfileConnectionClass_softClass;
  v7 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __getMCProfileConnectionClass_block_invoke;
    v3[3] = &unk_24E797578;
    v3[4] = &v4;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_222046B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("MCProfileConnection");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)abort_report_np();
    free(v3);
  }
  getMCProfileConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id addressesFromWANRule(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a1, "subject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "hostnames");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(v1, "hostnames");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v1, "addresses");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4)
    {
      objc_msgSend(v1, "addresses");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "na_map:", &__block_literal_global_65_130251);
      v6 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v1, "addressRange");
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v7)
      {
        v3 = (void *)MEMORY[0x24BDBD1A8];
        goto LABEL_8;
      }
      v8 = (void *)MEMORY[0x24BDD17C8];
      objc_msgSend(v1, "addressRange");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addressStart");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "addressString");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "addressRange");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addressEnd");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "addressString");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "stringWithFormat:", CFSTR("%@ - %@"), v11, v14);
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      v16[0] = v5;
      objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v16, 1);
      v6 = objc_claimAutoreleasedReturnValue();
    }
    v3 = (void *)v6;

  }
LABEL_8:

  return v3;
}

uint64_t __addressesFromWANRule_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "addressString");
}

id wanRuleFromJSONRule(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  const char *v13;
  id v15;
  uint8_t buf[4];
  void *v17;
  __int16 v18;
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v2 = (void *)MEMORY[0x24BDD1608];
  objc_msgSend(v1, "dataUsingEncoding:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  objc_msgSend(v2, "JSONObjectWithData:options:error:", v3, 0, &v15);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v15;

  v6 = v4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v7 = v6;
  else
    v7 = 0;
  v8 = v7;

  if (!v8)
  {
    v10 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v17 = v12;
      v18 = 2112;
      v19 = v1;
      v13 = "%{public}@Failed to convert JSON string %@ to dictionary";
      goto LABEL_10;
    }
LABEL_11:

    objc_autoreleasePoolPop(v10);
    v9 = 0;
    goto LABEL_12;
  }
  +[HMDNetworkRouterFirewallRuleWAN createWithJSONDictionary:error:](HMDNetworkRouterFirewallRuleWAN, "createWithJSONDictionary:error:", v8, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    v10 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v17 = v12;
      v18 = 2112;
      v19 = v8;
      v13 = "%{public}@Failed to convert dictionary %@ to HMDNetworkRouterFirewallRuleWAN";
LABEL_10:
      _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_ERROR, v13, buf, 0x16u);

      goto LABEL_11;
    }
    goto LABEL_11;
  }
LABEL_12:

  return v9;
}

__CFString *HMDCameraRemoteStreamSessionStateAsString(uint64_t a1)
{
  uint64_t v2;
  __CFString *v3;

  v2 = a1 - 1;
  v3 = CFSTR("Unknown");
  switch(v2)
  {
    case 0:
      return v3;
    case 1:
      v3 = CFSTR("START-STREAM-SENT");
      return v3;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_7;
    case 3:
      return CFSTR("STREAM-NEGOTIATED");
    case 7:
      return CFSTR("IDS-SESSION-CREATED");
    default:
      if (a1 == 16)
        return CFSTR("STREAMING-STARTED-ON-DEVICE");
LABEL_7:
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRemoteStreamSessionState %tu"), a1);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v3;
  }
}

uint64_t __Block_byref_object_copy__130524(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130525(uint64_t a1)
{

}

id wrapAppDataDictionary(void *a1)
{
  id v1;
  void *v2;
  const __CFString *v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    v4 = CFSTR("com.apple.homekit-entitledclient.identifer");
    v5[0] = v1;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v5, &v4, 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_22204E040(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22204F230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__130656(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130657(uint64_t a1)
{

}

void sub_22205133C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 184), 8);
  _Unwind_Resume(a1);
}

void addFallbackLANRules(_BYTE *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  if (objc_msgSend(v5, "hasFullAccessToLAN"))
  {
    *a1 = 1;
  }
  else
  {
    objc_msgSend(v5, "lanRules");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "count");

    if (v7)
    {
      objc_msgSend(v5, "lanRules");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "addObjectsFromArray:", v8);

    }
  }

}

void sub_2220524BC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_222052A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_222052D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__130843(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130844(uint64_t a1)
{

}

void sub_2220541C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222054248(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220542C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222054350(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220543B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222058BD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222058CF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222058D78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220590A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222059428(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220598AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22205B84C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22205CBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22205CFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22205D3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22205D79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22205D91C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22205D9A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222061118(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222061180(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220611F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222061270(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220612E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222061360(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206142C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220614B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220626C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222062828(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222062ADC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222062C24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222062CBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222062E6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063450(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206350C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063574(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220635DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063644(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220636AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063724(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220637BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220638EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206399C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063B64(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063C84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063D34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222063F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222063F94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206402C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220640C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222064160(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220641FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222064368(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222064408(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222064508(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222064A1C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206502C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220674D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222067830(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220678A8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222067904(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22206B4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220705E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222070790(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220708FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22207099C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222070BD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDDeviceControllerUpdateDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543618;
      v15 = v8;
      v16 = 2112;
      v17 = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Updating device: %@", (uint8_t *)&v14, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    os_unfair_lock_lock_with_options();
    if (*((id *)v6 + 3) == v4)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
    }
    else
    {
      objc_storeStrong((id *)v6 + 3, a2);
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
      v9 = (void *)MEMORY[0x227676638]();
      v10 = v6;
      HMFGetOSLogHandle();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = 138543618;
        v15 = v12;
        v16 = 2112;
        v17 = v4;
        _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updated device: %@", (uint8_t *)&v14, 0x16u);

      }
      objc_autoreleasePoolPop(v9);
      objc_msgSend(v10, "delegate");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_opt_respondsToSelector() & 1) != 0)
        objc_msgSend(v13, "deviceController:didUpdateDevice:", v10, v4);

    }
  }

}

__CFString *HMDNetworkRouterControlOperationStatusTypeAsString(unint64_t a1)
{
  if (a1 < 0xC)
    return off_24E787A70[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDNetworkRouterControlOperationStatusType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_22207B4AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22207CE3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22207DED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__135192(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__135193(uint64_t a1)
{

}

void sub_222082C20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222082DD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222083000(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222083334(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222083584(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22208459C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222084D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222084F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222088AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222090804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__137148(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__137149(uint64_t a1)
{

}

uint64_t AWDHomeKitValueReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  void *v41;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 40;
          goto LABEL_43;
        case 2u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            v26 = v25 + 1;
            if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if (v27 < 0)
              {
                v21 += 7;
                v15 = v22++ >= 9;
                if (v15)
                {
                  v23 = 0;
                  goto LABEL_47;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v23 = 0;
LABEL_47:
          *(_QWORD *)(a1 + 16) = v23;
          continue;
        case 3u:
          *(_BYTE *)(a1 + 52) |= 4u;
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)(a2 + *v4))
          {
            v30 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 4;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v30 = 0;
          }
          *(_DWORD *)(a1 + 32) = v30;
          continue;
        case 4u:
          *(_BYTE *)(a1 + 52) |= 1u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          *(_QWORD *)(a1 + 8) = v33;
          continue;
        case 5u:
          v34 = 0;
          v35 = 0;
          v36 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          break;
        case 6u:
          PBReaderReadData();
          v18 = objc_claimAutoreleasedReturnValue();
          v19 = 24;
LABEL_43:
          v41 = *(void **)(a1 + v19);
          *(_QWORD *)(a1 + v19) = v18;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        v39 = v38 + 1;
        if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          break;
        v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v39;
        v36 |= (unint64_t)(v40 & 0x7F) << v34;
        if ((v40 & 0x80) == 0)
          goto LABEL_49;
        v34 += 7;
        v15 = v35++ >= 9;
        if (v15)
        {
          v36 = 0;
          goto LABEL_51;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_49:
      if (*(_BYTE *)(a2 + *v5))
        v36 = 0;
LABEL_51:
      *(_BYTE *)(a1 + 48) = v36 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

__CFString *HMDStreamingTierTypeAsString(unint64_t a1)
{
  if (a1 < 5)
    return off_24E787F38[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDStreamingTierType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDVideoCodecTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDVideoCodecTypeH264");
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDVideoCodecType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E787F60[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDH264ProfileType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDH264LevelTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E787F78[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDH264LevelType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDPacketizationModeTypeAsString(uint64_t a1)
{
  if (!a1)
    return CFSTR("HMDPacketizationModeTypeSingleNonInterleaved");
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDPacketizationModeType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDVideoResolutionTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 0x1D)
    return off_24E787F98[a1 - 1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDVideoResolutionType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDAudioCodecGroupTypeAsString(unint64_t a1)
{
  if (a1 < 7)
    return off_24E788080[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDAudioCodecGroupType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDBitRateSettingTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDBitRateSettingTypeVariable");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDBitRateSettingTypeConstant");
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDBitRateSettingType %tu"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDAudioSampleRateTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E7880B8[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDAudioSampleRateType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDSRTPCryptoSuiteTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E7880D0[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDSRTPCryptoSuiteType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDStreamControlPointResponseStatusAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E788110[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDSessionControlCommand %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDStreamingStatusTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E788128[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDStreamingStatusType %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_2220938EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_222094BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2220966DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220973F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222097740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22209957C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22209BBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_22209DE08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDDefaultRoomName()
{
  __CFString *v0;
  __CFString *v1;
  __CFString *v2;

  HMDLocalizedStringForKey(CFSTR("DEFAULT_ROOM"));
  v0 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (!v0)
    v0 = CFSTR("Default Room");
  v2 = v0;

  return v2;
}

void sub_2220A0E94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__140599(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__140600(uint64_t a1)
{

}

void sub_2220A1B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_2220A5914(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A5B04(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A5B78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A5CD4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A5EC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A6014(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A6634(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220A8D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220A9CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220ABBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  __destructor_8_s0_s8_sb16((id *)va);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__141478(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__141479(uint64_t a1)
{

}

void __destructor_8_s0_s8_sb16(id *a1)
{

}

void sub_2220AD948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2220ADA60(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void __destructor_8_s0_s8_s16_s24_s40(id *a1)
{

}

void sub_2220B05EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220B292C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220B2B74(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220B2CC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __handleUpdatedDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x227676638]();
  v6 = v3;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138543618;
    v11 = v8;
    v12 = 2112;
    v13 = v4;
    _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Device updated to: %@", (uint8_t *)&v10, 0x16u);

  }
  objc_autoreleasePoolPop(v5);
  if (v4)
  {
    __registerForDeviceNotifications(v6, v4);
    objc_msgSend(v6, "residentDeviceManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "notifyClientsOfUpdatedResidentDevice:", v6);

  }
  else
  {
    __deregisterForDeviceNotifications(v6);
  }

}

void __registerForDeviceNotifications(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "shortDescription");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v9;
      v14 = 2112;
      v15 = v10;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registering for device notifications for: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    __deregisterForDeviceNotifications(v7);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "addObserver:selector:name:object:", v7, sel___deviceUpdated_, CFSTR("HMDDeviceUpdatedNotification"), v5);

  }
}

void __deregisterForDeviceNotifications(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = v1;
    HMFGetOSLogHandle();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138543362;
      v8 = v5;
      _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Deregistering for device notifications", (uint8_t *)&v7, 0xCu);

    }
    objc_autoreleasePoolPop(v2);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObserver:name:object:", v3, CFSTR("HMDDeviceUpdatedNotification"), 0);

  }
}

uint64_t residentCapabilitiesForDevice(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v1 = a1;
  if (objc_msgSend(v1, "supportsMediaActions"))
    v2 = 575;
  else
    v2 = 31;
  if (objc_msgSend(v1, "supportsShortcutActions"))
    v2 |= 0x100uLL;
  if (objc_msgSend(v1, "supportsCameraRecording"))
    v2 |= 0x40uLL;
  if (objc_msgSend(v1, "supportsRouterManagement"))
    v2 |= 0x80uLL;
  if (objc_msgSend(v1, "supportsFirmwareUpdate"))
    v2 |= 0x800uLL;
  if (objc_msgSend(v1, "supportsResidentFirmwareUpdate"))
    v2 |= 0x800000uLL;
  if (objc_msgSend(v1, "supportsCameraActivityZones"))
    v2 |= 0x1000uLL;
  if (objc_msgSend(v1, "supportsFaceClassification"))
    v2 |= 0x2000uLL;
  if (objc_msgSend(v1, "supportsNaturalLighting"))
    v2 |= 0x4000uLL;
  if (objc_msgSend(v1, "supportsAnnounce"))
    v2 |= 0x8000uLL;
  if (objc_msgSend(v1, "supportsThreadBorderRouter"))
    v2 |= 0x10000uLL;
  if (objc_msgSend(v1, "supportsCameraRecordingReachabilityNotifications"))
    v2 |= 0x20000uLL;
  if (objc_msgSend(v1, "supportsWalletKey"))
    v2 |= 0x40000uLL;
  if (objc_msgSend(v1, "supportsAccessCodes"))
    v2 |= 0x200000uLL;
  if (objc_msgSend(v1, "supportsLockNotificationContext"))
    v2 |= 0x80000uLL;
  if (objc_msgSend(v1, "supportsCameraPackageDetection"))
    v2 |= 0x100000uLL;
  if (objc_msgSend(v1, "supportsCHIP"))
    v2 |= 0x400000uLL;
  if (objc_msgSend(v1, "supportsCustomMediaApplicationDestination"))
    v2 |= 0x1000000uLL;
  if (objc_msgSend(v1, "supportsThreadNetworkCredentialSharing"))
    v2 |= 0x2000000uLL;
  if (objc_msgSend(v1, "supportsMatterSharedAdminPairing"))
    v2 |= 0x4000000uLL;
  if (objc_msgSend(v1, "supportsEventLog"))
    v2 |= 0x8000000uLL;
  if (objc_msgSend(v1, "supportsUWB"))
    v2 |= 0x20000000uLL;
  if (objc_msgSend(v1, "supportsMatterTTU"))
    v2 |= 0x10000000uLL;
  if (objc_msgSend(v1, "supportsRestrictedGuest"))
    v3 = v2 | 0x40000000;
  else
    v3 = v2;
  v4 = objc_msgSend(v1, "supportsMatterOwnerCertFetch");

  if (v4)
    return v3 | 0x80000000;
  else
    return v3;
}

void sub_2220B899C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  __HMFActivityScopeLeave();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220BC1CC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id HMDTimeOffsetToDateComponents(uint64_t a1, _BYTE *a2)
{
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)(a1 + 86399) >= 0x2A2FF)
  {
    v5 = 0;
    if (a2)
      *a2 = 0;
  }
  else if (a1)
  {
    v4 = objc_alloc_init(MEMORY[0x24BDBCE68]);
    v5 = v4;
    if (a1 >= 0)
      v6 = a1;
    else
      v6 = -a1;
    v7 = (a1 >> 63) | 1;
    v8 = v6 % 0x3C;
    if ((_DWORD)v8)
      objc_msgSend(v4, "setSecond:", v7 * v8);
    v9 = (unsigned __int16)(v6 / 0x3C) % 0x3Cu;
    if ((_DWORD)v9)
      objc_msgSend(v5, "setMinute:", v7 * v9);
    if (v6 >= 0xE10)
      objc_msgSend(v5, "setHour:", (int)v7 * (uint64_t)(v6 / 0xE10));
    if (a2)
      *a2 = 1;
  }
  else
  {
    if (a2)
      *a2 = 1;
    v5 = objc_alloc_init(MEMORY[0x24BDBCE68]);
  }
  return v5;
}

uint64_t HMDTimeOffsetFromDateComponents(void *a1, BOOL *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v3 = a1;
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, "hour");
    if (v5 == 0x7FFFFFFFFFFFFFFFLL)
      v6 = 0;
    else
      v6 = 3600 * v5;
    v7 = objc_msgSend(v4, "minute");
    if (v7 == 0x7FFFFFFFFFFFFFFFLL)
      v8 = 0;
    else
      v8 = 60 * v7;
    v9 = objc_msgSend(v4, "second");
    if (v9 == 0x7FFFFFFFFFFFFFFFLL)
      v10 = 0;
    else
      v10 = v9;
    v11 = v8 + v10 + v6;
    if (a2)
    {
      v12 = objc_msgSend(v4, "era") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "year") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "month") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "day") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "weekday") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "weekdayOrdinal") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "quarter") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "weekOfMonth") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "weekOfYear") == 0x7FFFFFFFFFFFFFFFLL
         && objc_msgSend(v4, "yearForWeekOfYear") == 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_25;
    }
  }
  else
  {
    v11 = 0;
    if (a2)
    {
      v12 = 1;
LABEL_25:
      *a2 = v12;
    }
  }

  return v11;
}

void sub_2220C56E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220CAEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__144264(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__144265(uint64_t a1)
{

}

void sub_2220CF14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220CF320(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_2220CF654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220D6B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2220D6C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__145763(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__145764(uint64_t a1)
{

}

void sub_2220D87B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void __registerXPCRelayForMessageClass(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9[2];
  id location;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  objc_initWeak(&location, v3);
  objc_msgSend(v3, "msgDispatcher");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a2, "xpcMessageName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDXPCMessagePolicy policyWithEntitlements:](HMDXPCMessagePolicy, "policyWithEntitlements:", 5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v6;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v11, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = ____registerXPCRelayForMessageClass_block_invoke;
  v8[3] = &unk_24E789188;
  objc_copyWeak(v9, &location);
  v9[1] = a2;
  objc_msgSend(v4, "registerForMessage:receiver:policies:messageHandler:", v5, v3, v7, v8);

  objc_destroyWeak(v9);
  objc_destroyWeak(&location);

}

void sub_2220DBC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____registerXPCRelayForMessageClass_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "remoteMessageSender");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "messageName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "messagePayload");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = ____registerXPCRelayForMessageClass_block_invoke_2;
  v9[3] = &unk_24E79B7E0;
  v10 = v3;
  v8 = v3;
  objc_msgSend(v5, "sendRemoteMessageWithName:payload:responseHandler:", v6, v7, v9);

}

void ____registerXPCRelayForMessageClass_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  id v8;

  v8 = a2;
  v5 = a3;
  objc_msgSend(*(id *)(a1 + 32), "responseHandler");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "responseHandler");
    v7 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, id, id))v7)[2](v7, v8, v5);

  }
}

void sub_2220E0AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220E0BF0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2220E0C6C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2220E0EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2220E0F34(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2220E0FC4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2220E1910(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __updateAccount(void *a1, int a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  int v14;
  void *v15;
  int v16;
  void *v17;
  id v18;
  NSObject *v19;
  _BOOL4 v20;
  void *v21;
  uint64_t updated;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  _BOOL4 v30;
  void *v31;
  const char *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  void *v39;
  void *v40;
  id v41;
  NSObject *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  NSObject *v47;
  void *v48;
  void *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint8_t v54[128];
  uint8_t buf[4];
  void *v56;
  __int16 v57;
  void *v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "accountChangeBackoffTimer");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "suspend");

    v6 = (void *)MEMORY[0x227676638]();
    v7 = v4;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v56 = v9;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Updating account", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(v7, "account");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v10)
    {
      v23 = (void *)MEMORY[0x227676638]();
      v24 = v7;
      HMFGetOSLogHandle();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v56 = v26;
        _os_log_impl(&dword_2218F0000, v25, OS_LOG_TYPE_INFO, "%{public}@Failed to update account, there is no account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v23);
      goto LABEL_39;
    }
    objc_msgSend(MEMORY[0x24BE3F288], "systemInfo");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "isMigrating");

    objc_msgSend(v7, "service");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "hmd_isActive");

    if ((v12 & 1) == 0 && v14)
    {
      __createAccountHandles(v7);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v15, "hmf_isEmpty");
      v17 = (void *)MEMORY[0x227676638]();
      v18 = v7;
      HMFGetOSLogHandle();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_INFO);
      if (v16)
      {
        if (v20)
        {
          HMFGetLogIdentifier();
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v56 = v21;
          _os_log_impl(&dword_2218F0000, v19, OS_LOG_TYPE_INFO, "%{public}@Failed to create handles", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v17);
        updated = __updateCurrentDevice(v18, v10);
      }
      else
      {
        if (v20)
        {
          HMFGetLogIdentifier();
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v56 = v33;
          v57 = 2112;
          v58 = v15;
          _os_log_impl(&dword_2218F0000, v19, OS_LOG_TYPE_INFO, "%{public}@Updating with account handles: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v17);
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v34 = v15;
        v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
        if (v35)
        {
          v36 = v35;
          v37 = *(_QWORD *)v51;
          do
          {
            for (i = 0; i != v36; ++i)
            {
              if (*(_QWORD *)v51 != v37)
                objc_enumerationMutation(v34);
              objc_msgSend(*(id *)(*((_QWORD *)&v50 + 1) + 8 * i), "setLocallyTracked:", 1, (_QWORD)v50);
            }
            v36 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
          }
          while (v36);
        }

        objc_msgSend(v10, "setHandles:", v34);
        objc_msgSend(v18, "accountRegistry");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "updateAccount:", v10);

        updated = __updateCurrentDevice(v18, v10);
        if ((_DWORD)updated)
        {
          v40 = (void *)MEMORY[0x227676638]();
          v41 = v18;
          HMFGetOSLogHandle();
          v42 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v56 = v43;
            _os_log_impl(&dword_2218F0000, v42, OS_LOG_TYPE_DEFAULT, "%{public}@Successfully updated account", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v40);
          objc_msgSend(v41, "accountChangeBackoffTimer");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "reset");

          objc_msgSend(v41, "__updateMergeIDOnAccount");
          goto LABEL_38;
        }
      }
      if (a2)
      {
        v45 = (void *)MEMORY[0x227676638](updated);
        v46 = v18;
        HMFGetOSLogHandle();
        v47 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v56 = v48;
          _os_log_impl(&dword_2218F0000, v47, OS_LOG_TYPE_INFO, "%{public}@Failed to update the account, will try again later", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v45);
        objc_msgSend(v46, "accountChangeBackoffTimer");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v49, "resume");

      }
LABEL_38:

LABEL_39:
      goto LABEL_40;
    }
    v27 = (void *)MEMORY[0x227676638]();
    v28 = v7;
    HMFGetOSLogHandle();
    v29 = objc_claimAutoreleasedReturnValue();
    v30 = os_log_type_enabled(v29, OS_LOG_TYPE_INFO);
    if (v12)
    {
      if (v30)
      {
        HMFGetLogIdentifier();
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v56 = v31;
        v32 = "%{public}@Skipping updating of account during migration, will try again later";
LABEL_19:
        _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_INFO, v32, buf, 0xCu);

      }
    }
    else if (v30)
    {
      HMFGetLogIdentifier();
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v56 = v31;
      v32 = "%{public}@Skipping updating of account while the service is inactive, will try again later";
      goto LABEL_19;
    }

    objc_autoreleasePoolPop(v27);
    objc_msgSend(v28, "accountChangeBackoffTimer");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "resume");
    goto LABEL_38;
  }
LABEL_40:

}

void __updateDevices(void *a1, char a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  _BOOL4 v30;
  void *v31;
  const char *v32;
  void *v33;
  _QWORD v34[4];
  _QWORD *v35;
  char v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "devicesChangeBackoffTimer");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "suspend");

    objc_msgSend(v4, "account");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
    {
      v23 = (void *)MEMORY[0x227676638]();
      v24 = v4;
      HMFGetOSLogHandle();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v38 = v26;
        _os_log_impl(&dword_2218F0000, v25, OS_LOG_TYPE_INFO, "%{public}@Failed to determine devices on our account, there is no account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v23);
      goto LABEL_21;
    }
    objc_msgSend(MEMORY[0x24BE3F288], "systemInfo");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isMigrating");

    objc_msgSend(v4, "service");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "hmd_isActive");

    if ((v8 & 1) == 0 && v10)
    {
      v11 = (void *)MEMORY[0x24BDBCEF0];
      __createDevices(v4);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setWithArray:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      v14 = (void *)MEMORY[0x227676638]();
      v15 = v4;
      HMFGetOSLogHandle();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v38 = v17;
        v39 = 2112;
        v40 = v13;
        _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_INFO, "%{public}@Updating account with peer devices: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v14);
      objc_msgSend(v15, "device");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (v18 || (__createCurrentDevice(v15), (v18 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
      {
        objc_msgSend(v13, "addObject:", v18);

      }
      v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE3F168]), "initWithQueue:", v15[2]);
      objc_msgSend(v15, "accountRegistry");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "updateDevices:onAccount:", v13, v6);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      v34[0] = MEMORY[0x24BDAC760];
      v34[1] = 3221225472;
      v34[2] = ____updateDevices_block_invoke;
      v34[3] = &unk_24E789468;
      v35 = v15;
      v36 = a2;
      v22 = (id)objc_msgSend(v21, "inContext:then:", v19, v34);

      goto LABEL_21;
    }
    v27 = (void *)MEMORY[0x227676638]();
    v28 = v4;
    HMFGetOSLogHandle();
    v29 = objc_claimAutoreleasedReturnValue();
    v30 = os_log_type_enabled(v29, OS_LOG_TYPE_INFO);
    if (v8)
    {
      if (v30)
      {
        HMFGetLogIdentifier();
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v38 = v31;
        v32 = "%{public}@Skipping updating of devices during migration, will try again later";
LABEL_19:
        _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_INFO, v32, buf, 0xCu);

      }
    }
    else if (v30)
    {
      HMFGetLogIdentifier();
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v38 = v31;
      v32 = "%{public}@Skipping updating of devices while the service is inactive, will try again later";
      goto LABEL_19;
    }

    objc_autoreleasePoolPop(v27);
    objc_msgSend(v28, "devicesChangeBackoffTimer");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "resume");

LABEL_21:
  }

}

id __createDevices(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  HMDDevice *v16;
  void *v17;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v2 = (void *)MEMORY[0x24BDBCEF0];
  objc_msgSend(v1, "service");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "devices");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setWithCapacity:", objc_msgSend(v4, "count"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  objc_msgSend(v1, "service");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "devices");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = v6;
  v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v21;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v21 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v11);
        objc_msgSend(v1, "service");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v14 = v13;
        else
          v14 = 0;
        v15 = v14;

        v16 = -[HMDDevice initWithService:device:]([HMDDevice alloc], "initWithService:device:", v15, v12);
        if (v16)
          objc_msgSend(v19, "addObject:", v16);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v9);
  }

  objc_msgSend(v19, "allObjects");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

HMDDevice *__createCurrentDevice(void *a1)
{
  _QWORD *v1;
  void *v2;
  char v3;
  void *v4;
  void *v5;
  _HMDLocalDeviceHandle *v6;
  HMDDeviceHandle *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _HMDGlobalDeviceHandle *v12;
  HMDDeviceHandle *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  NSObject *v17;
  void *v18;
  HMDDevice *v19;
  void *v20;
  void *v21;
  void *v22;
  HMDDevice *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  HMDDevice *v29;
  NSObject *v30;
  HMDDevice *v31;
  HMDDevice *v32;
  void *v33;
  _QWORD *v34;
  NSObject *v35;
  void *v36;
  _QWORD v38[4];
  _QWORD *v39;
  HMDDevice *v40;
  uint8_t buf[4];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(v1, "service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hmd_isActive");

  if ((v3 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", 2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDDeviceAddress localDeviceIDSIdentifier](HMDDeviceAddress, "localDeviceIDSIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      v6 = -[_HMDLocalDeviceHandle initWithDeviceIdentifier:]([_HMDLocalDeviceHandle alloc], "initWithDeviceIdentifier:", v5);
      v7 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v6);
      objc_msgSend(v4, "addObject:", v7);

    }
    objc_msgSend(v1, "pushConnection");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "publicToken");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
    {
      objc_msgSend(v1, "service");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "iCloudAccount");
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v21, "pushToken");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v22;
      if (!v22 || objc_msgSend(v22, "hmf_isZeroed"))
      {

        goto LABEL_16;
      }

    }
    objc_msgSend(v1, "service");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "hmd_preferredHandle");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = -[_HMDGlobalDeviceHandle initWithPushToken:accountHandle:]([_HMDGlobalDeviceHandle alloc], "initWithPushToken:accountHandle:", v9, v11);
    v13 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v12);
    if (v13)
    {
      objc_msgSend(v4, "addObject:", v13);
      -[HMDDeviceHandle identifier](v13, "identifier");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }

    if (v14)
    {
      v23 = [HMDDevice alloc];
      objc_msgSend(MEMORY[0x24BE3F288], "systemInfo");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "name");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BE3F260], "productInfo");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDHomeKitVersion currentVersion](HMDHomeKitVersion, "currentVersion");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDDeviceCapabilities deviceCapabilities](HMDDeviceCapabilities, "deviceCapabilities");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = -[HMDDevice initWithIdentifier:handles:name:productInfo:version:capabilities:](v23, "initWithIdentifier:handles:name:productInfo:version:capabilities:", v14, v4, v25, v26, v27, v28);

      v30 = v1[2];
      v38[0] = MEMORY[0x24BDAC760];
      v38[1] = 3221225472;
      v38[2] = ____createCurrentDevice_block_invoke;
      v38[3] = &unk_24E79C268;
      v39 = v1;
      v31 = v29;
      v40 = v31;
      dispatch_async(v30, v38);
      v32 = v40;
      v19 = v31;

LABEL_19:
      goto LABEL_20;
    }
LABEL_16:
    v33 = (void *)MEMORY[0x227676638]();
    v34 = v1;
    HMFGetOSLogHandle();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v42 = v36;
      _os_log_impl(&dword_2218F0000, v35, OS_LOG_TYPE_ERROR, "%{public}@Failed to create device identifier", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v33);
    v19 = 0;
    goto LABEL_19;
  }
  v15 = (void *)MEMORY[0x227676638]();
  v16 = v1;
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v42 = v18;
    _os_log_impl(&dword_2218F0000, v17, OS_LOG_TYPE_INFO, "%{public}@Cannot create current device; Service is not active",
      buf,
      0xCu);

  }
  objc_autoreleasePoolPop(v15);
  v19 = 0;
LABEL_20:

  return v19;
}

uint64_t ____updateDevices_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  int v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = (void *)MEMORY[0x227676638]();
  v5 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = 138543362;
    v17 = v7;
    _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_INFO, "%{public}@Resolved by updateDevices", (uint8_t *)&v16, 0xCu);

  }
  objc_autoreleasePoolPop(v4);
  if (*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "notificationCenter");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "postNotificationName:object:", CFSTR("HMDAppleAccountManagerResolved"), *(_QWORD *)(a1 + 32));

  }
  objc_msgSend(*(id *)(a1 + 32), "deviceAccountSettledPromise");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "fulfillWithNoValue");

  objc_msgSend(*(id *)(a1 + 32), "idsDevicesUpdatedPromise");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "fulfillWithNoValue");

  v11 = (void *)MEMORY[0x227676638]();
  v12 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = 138543362;
    v17 = v14;
    _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_INFO, "%{public}@Posted HMDAppleAccountManagerResolved and fulfilled futures.", (uint8_t *)&v16, 0xCu);

  }
  objc_autoreleasePoolPop(v11);

  return 1;
}

void ____createCurrentDevice_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    v8 = 138543618;
    v9 = v5;
    v10 = 2112;
    v11 = v6;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Created current device for the account : %@", (uint8_t *)&v8, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  objc_msgSend(*(id *)(a1 + 32), "currentDeviceSettledPromise");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "fulfillWithNoValue");

}

id __createAccountHandles(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "service");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hmd_isActive");

  if (v3)
  {
    objc_msgSend(v1, "service");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "hmd_handles");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = (void *)MEMORY[0x24BDBD1A8];
  }

  return v5;
}

uint64_t __updateCurrentDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t *v28;
  void *v29;
  _QWORD *v30;
  NSObject *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  _QWORD *v36;
  uint64_t *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t i;
  void *v48;
  id v49;
  NSObject *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v56;
  unsigned int v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  void *context;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t v69[128];
  _BYTE buf[24];
  void *v71;
  id v72;
  id v73;
  id v74;
  uint64_t *v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v8;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating device", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    __createCurrentDevice(v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    v11 = v9 != 0;
    if (v9)
    {
      objc_msgSend(v9, "identifier");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "deviceForIdentifier:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      v15 = MEMORY[0x24BDAC760];
      v58 = v3;
      v59 = v10;
      v57 = v11;
      v56 = v13;
      if (v13)
      {
        v68 = MEMORY[0x24BDAC760];
        v16 = &v68;
        v17 = v6;
        v18 = ____updateCurrentDevice_block_invoke;
      }
      else
      {
        v23 = (void *)MEMORY[0x227676638](v14);
        v17 = v6;
        HMFGetOSLogHandle();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v25;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v10;
          _os_log_impl(&dword_2218F0000, v24, OS_LOG_TYPE_DEFAULT, "%{public}@Adding current device: %@", buf, 0x16u);

          v15 = MEMORY[0x24BDAC760];
        }

        objc_autoreleasePoolPop(v23);
        v67 = v15;
        v18 = ____updateCurrentDevice_block_invoke_518;
        v16 = &v67;
        v13 = v4;
      }
      v16[1] = 3221225472;
      v16[2] = (uint64_t)v18;
      v16[3] = (uint64_t)&unk_24E799FD0;
      v16[4] = (uint64_t)v17;
      v16[5] = (uint64_t)v59;
      v16[6] = (uint64_t)v13;
      v26 = v6;
      v27 = v59;
      v28 = v16;
      v29 = (void *)MEMORY[0x227676638]();
      v30 = v26;
      HMFGetOSLogHandle();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v32 = v15;
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v33;
        _os_log_impl(&dword_2218F0000, v31, OS_LOG_TYPE_INFO, "%{public}@Updating device rapport identity on current device", buf, 0xCu);

        v15 = v32;
      }

      objc_autoreleasePoolPop(v29);
      v34 = objc_alloc_init(MEMORY[0x24BE7CBE0]);
      objc_msgSend(v34, "setDispatchQueue:", v30[2]);
      *(_QWORD *)buf = v15;
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = ____HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice_block_invoke;
      v71 = &unk_24E7995C0;
      v72 = v34;
      v73 = v30;
      v74 = v27;
      v75 = v28;
      v35 = v34;
      v36 = v30;
      v37 = v28;
      v38 = v27;
      v39 = v36;
      v40 = v38;
      objc_msgSend(v35, "getIdentitiesWithFlags:completion:", 1, buf);

      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      objc_msgSend(v36, "account");
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v41, "devices");
      v42 = (void *)objc_claimAutoreleasedReturnValue();

      v43 = v42;
      v44 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v63, v69, 16);
      if (v44)
      {
        v45 = v44;
        v46 = *(_QWORD *)v64;
        v60 = v42;
        v61 = v4;
        do
        {
          for (i = 0; i != v45; ++i)
          {
            if (*(_QWORD *)v64 != v46)
              objc_enumerationMutation(v43);
            v48 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * i);
            if ((objc_msgSend(v48, "isEqual:", v40, v56) & 1) == 0
              && objc_msgSend(v48, "isRelatedToDevice:", v40))
            {
              context = (void *)MEMORY[0x227676638]();
              v49 = v39;
              HMFGetOSLogHandle();
              v50 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
              {
                HMFGetLogIdentifier();
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v48, "shortDescription");
                v52 = v40;
                v53 = v39;
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                *(_QWORD *)&buf[4] = v51;
                *(_WORD *)&buf[12] = 2112;
                *(_QWORD *)&buf[14] = v54;
                _os_log_impl(&dword_2218F0000, v50, OS_LOG_TYPE_DEFAULT, "%{public}@Removing stale device: %@", buf, 0x16u);

                v39 = v53;
                v40 = v52;
                v43 = v60;

                v4 = v61;
              }

              objc_autoreleasePoolPop(context);
              objc_msgSend(v4, "removeDevice:", v48);
            }
          }
          v45 = objc_msgSend(v43, "countByEnumeratingWithState:objects:count:", &v63, v69, 16);
        }
        while (v45);
      }

      __handleUpdatedDevice_147283(v39, v40);
      v3 = v58;
      v10 = v59;
      v11 = v57;
    }
    else
    {
      v19 = (void *)MEMORY[0x227676638]();
      v20 = v6;
      HMFGetOSLogHandle();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v22;
        _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_INFO, "%{public}@Failed to create current device", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v19);
    }

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void ____updateCurrentDevice_block_invoke(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x227676638]();
    v5 = a1[4];
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = a1[5];
      v15 = 138543618;
      v16 = v7;
      v17 = 2112;
      v18 = v8;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v15, 0x16u);

    }
    objc_autoreleasePoolPop(v4);
  }
  if ((isEqualDeepCompare(a1[6], a1[5]) & 1) == 0)
  {
    v9 = (void *)MEMORY[0x227676638]();
    v10 = a1[4];
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = a1[5];
      v15 = 138543618;
      v16 = v12;
      v17 = 2112;
      v18 = v13;
      _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updating current device due to detected diff: %@", (uint8_t *)&v15, 0x16u);

    }
    objc_autoreleasePoolPop(v9);
    objc_msgSend(a1[4], "accountRegistry");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "updateDevice:withDevice:", a1[6], a1[5]);

  }
}

void ____updateCurrentDevice_block_invoke_518(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    v4 = (void *)MEMORY[0x227676638]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(_QWORD *)(a1 + 40);
      v10 = 138543618;
      v11 = v7;
      v12 = 2112;
      v13 = v8;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v4);
  }
  objc_msgSend(*(id *)(a1 + 32), "accountRegistry");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addDevice:toAccount:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void __handleUpdatedDevice_147283(void *a1, void *a2)
{
  _QWORD *v3;
  id v4;
  NSObject *v5;
  _QWORD v6[4];
  _QWORD *v7;
  id v8;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = v3[2];
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = ____handleUpdatedDevice_block_invoke;
    v6[3] = &unk_24E79C268;
    v7 = v3;
    v8 = v4;
    dispatch_async(v5, v6);

  }
}

void ____handleUpdatedDevice_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  uint64_t v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v2 = (void *)MEMORY[0x227676638]();
  v3 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    v13 = v5;
    v14 = 2112;
    v15 = v6;
    _os_log_impl(&dword_2218F0000, v4, OS_LOG_TYPE_INFO, "%{public}@Updated device: %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v2);
  v7 = *(_QWORD *)(a1 + 40);
  if (v7)
  {
    v10 = CFSTR("HMDDeviceNotificationKey");
    v11 = v7;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v11, &v10, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(*(id *)(a1 + 32), "notificationCenter");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "postNotificationName:object:userInfo:", CFSTR("HMDAppleAccountManagerDeviceUpdatedNotification"), *(_QWORD *)(a1 + 32), v8);

}

void __setAccount(void *a1, void *a2, int a3)
{
  id *v5;
  id v6;
  id v7;
  id v8;
  id *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id *v15;
  uint64_t v16;
  void *v17;
  id *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _BOOL4 v24;
  void *v25;
  void *v26;
  void *v27;
  int v28;
  int v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  if (v5)
  {
    os_unfair_recursive_lock_lock_with_options();
    if ((HMFEqualObjects() & 1) != 0)
    {
      os_unfair_recursive_lock_unlock();
      v7 = 0;
    }
    else
    {
      v8 = v5[7];
      objc_storeStrong(v5 + 7, a2);
      objc_msgSend(v6, "setManager:", v5);
      v9 = v5;
      v7 = v8;
      v10 = v6;
      if (v7)
      {
        objc_msgSend(v9, "notificationCenter");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "removeObserver:name:object:", v9, CFSTR("HMDAccountAddedDeviceNotification"), v7);

        objc_msgSend(v9, "notificationCenter");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "removeObserver:name:object:", v9, CFSTR("HMDAccountRemovedDeviceNotification"), v7);

      }
      if (v10)
      {
        objc_msgSend(v9, "notificationCenter");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "addObserver:selector:name:object:", v9, sel___deviceAddedToCurrentAccount_, CFSTR("HMDAccountAddedDeviceNotification"), v10);

        objc_msgSend(v9, "notificationCenter");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "addObserver:selector:name:object:", v9, sel___deviceRemovedFromCurrentAccount_, CFSTR("HMDAccountRemovedDeviceNotification"), v10);

      }
      objc_msgSend(v7, "manager");
      v15 = (id *)objc_claimAutoreleasedReturnValue();

      if (v15 == v9)
        objc_msgSend(v7, "setManager:", 0);
      v16 = os_unfair_recursive_lock_unlock();
      v17 = (void *)MEMORY[0x227676638](v16);
      v18 = v9;
      HMFGetOSLogHandle();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "shortDescription");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = 138543618;
        v30 = v20;
        v31 = 2112;
        v32 = v21;
        _os_log_impl(&dword_2218F0000, v19, OS_LOG_TYPE_INFO, "%{public}@Updated account: %@", (uint8_t *)&v29, 0x16u);

      }
      objc_autoreleasePoolPop(v17);
      if (a3)
      {
        objc_msgSend(MEMORY[0x24BDBCED8], "dictionaryWithCapacity:", 2);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = v22;
        if (v10)
          objc_msgSend(v22, "setObject:forKeyedSubscript:", v10, CFSTR("HMDAccountNotificationKey"));
        if (v7)
          objc_msgSend(v23, "setObject:forKeyedSubscript:", v7, CFSTR("HMDPreviousAccountNotificationKey"));
        v24 = v10 == 0;
        objc_msgSend(v18, "notificationCenter");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = (void *)objc_msgSend(v23, "copy");
        objc_msgSend(v25, "postNotificationName:object:userInfo:", CFSTR("HMDAppleAccountManagerAccountUpdatedNotification"), v18, v26);

        objc_msgSend(v18, "device");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        if (v27)
          v28 = 1;
        else
          v28 = v24;
        if (v28 == 1)
          __handleUpdatedDevice_147283(v18, v27);

      }
    }

  }
}

void sub_2220E6D64(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void __removeAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543618;
      v11 = v8;
      v12 = 2112;
      v13 = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing account: %@", (uint8_t *)&v10, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v6, "accountRegistry");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "removeAccount:", v4);

    __setAccount(v6, 0, 1);
  }

}

void __updateAccountContext(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[4];
  id v5;

  v1 = a1;
  if (v1)
  {
    v2 = (void *)MEMORY[0x227676638]();
    v3 = (void *)MEMORY[0x24BE3F138];
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 3221225472;
    v4[2] = ____updateAccountContext_block_invoke;
    v4[3] = &unk_24E79C240;
    v5 = v1;
    objc_msgSend(v3, "activityWithName:parent:options:block:", CFSTR("Accounts.Context"), 0, 1, v4);

    objc_autoreleasePoolPop(v2);
  }

}

HMDAccount *__createAccount(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  HMDAccount *v12;
  void *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  void *v33;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t v40[128];
  uint8_t buf[4];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "accountContext");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      +[HMDAccountIdentifier accountIdentifierForAppleAccountContext:](HMDAccountIdentifier, "accountIdentifierForAppleAccountContext:", v3);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "service");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = objc_msgSend(v5, "hmd_isActive");

      if (v6)
      {
        __createAccountHandles(v2);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v7, "hmf_isEmpty"))
        {
          v8 = (void *)MEMORY[0x227676638]();
          v9 = v2;
          HMFGetOSLogHandle();
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v11;
            _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create handles", buf, 0xCu);

          }
          objc_autoreleasePoolPop(v8);
        }
        else
        {
          v38 = 0u;
          v39 = 0u;
          v36 = 0u;
          v37 = 0u;
          v18 = v7;
          v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
          if (v19)
          {
            v20 = v19;
            v21 = *(_QWORD *)v37;
            do
            {
              for (i = 0; i != v20; ++i)
              {
                if (*(_QWORD *)v37 != v21)
                  objc_enumerationMutation(v18);
                objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * i), "setLocallyTracked:", 1);
              }
              v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
            }
            while (v20);
          }

        }
        objc_msgSend(v2, "service");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "iCloudAccount");
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        v25 = (void *)MEMORY[0x24BDBCEF0];
        objc_msgSend(v24, "devices");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "setWithCapacity:", objc_msgSend(v26, "count") + 1);
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        __createCurrentDevice(v2);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        if (v28)
        {
          objc_msgSend(v27, "addObject:", v28);
        }
        else
        {
          v29 = (void *)MEMORY[0x227676638]();
          v30 = v2;
          HMFGetOSLogHandle();
          v31 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v35 = v29;
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v42 = v32;
            _os_log_impl(&dword_2218F0000, v31, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create current device", buf, 0xCu);

            v29 = v35;
          }

          objc_autoreleasePoolPop(v29);
        }
        __createDevices(v2);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "addObjectsFromArray:", v33);

        objc_msgSend(v27, "allObjects");
        v17 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v17 = (void *)MEMORY[0x24BDBD1A8];
        v7 = (void *)MEMORY[0x24BDBD1A8];
      }
      v12 = -[HMDAccount initWithIdentifier:handles:devices:]([HMDAccount alloc], "initWithIdentifier:handles:devices:", v4, v7, v17);

    }
    else
    {
      v13 = (void *)MEMORY[0x227676638]();
      v14 = v2;
      HMFGetOSLogHandle();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v42 = v16;
        _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_ERROR, "%{public}@Context is required to create account", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v13);
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void __addAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _QWORD *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  _QWORD block[4];
  _QWORD *v18;
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v20 = v8;
      v21 = 2112;
      v22 = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Adding account: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(v4, "handles");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "count");

    if (v10)
    {
      objc_msgSend(v6, "accountRegistry");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "addAccount:isLocal:", v4, 1);

    }
    else
    {
      v12 = (void *)MEMORY[0x227676638]();
      v13 = v6;
      HMFGetOSLogHandle();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v20 = v15;
        v21 = 2112;
        v22 = v4;
        _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_ERROR, "%{public}@No handles on account: %@ (NOT SAVING).", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v12);
    }
    __setAccount(v6, v4, 1);
    v16 = v6[2];
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____addAccount_block_invoke;
    block[3] = &unk_24E79C240;
    v18 = v6;
    dispatch_async(v16, block);

  }
}

void ____addAccount_block_invoke(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "devicesChangeBackoffTimer");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "resume");

}

void ____updateAccountContext_block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  NSObject *v8;
  HMDAppleAccountContext *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  HMDAppleAccountContext *v19;
  int v20;
  void *v21;
  __int16 v22;
  HMDAppleAccountContext *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  os_unfair_recursive_lock_lock_with_options();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "aa_primaryAppleAccount");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    *(_BYTE *)(v3 + 48) = 1;
    v4 = (void *)MEMORY[0x227676638]();
    v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138543362;
      v21 = v7;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Primary apple account is logged in", (uint8_t *)&v20, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 40);
    if (os_signpost_enabled(v8))
    {
      LOWORD(v20) = 0;
      _os_signpost_emit_with_name_impl(&dword_2218F0000, v8, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "PrimaryAppleAccountLoggedIn", "", (uint8_t *)&v20, 2u);
    }
    v9 = -[HMDAppleAccountContext initWithAccount:]([HMDAppleAccountContext alloc], "initWithAccount:", v2);
    if ((HMFEqualObjects() & 1) == 0)
    {
      v10 = (void *)MEMORY[0x227676638]();
      v11 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v12 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = 138543618;
        v21 = v13;
        v22 = 2112;
        v23 = v9;
        _os_log_impl(&dword_2218F0000, v12, OS_LOG_TYPE_INFO, "%{public}@Updated account context: %@", (uint8_t *)&v20, 0x16u);

      }
      objc_autoreleasePoolPop(v10);
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 64), v9);
    }

  }
  else
  {
    *(_BYTE *)(v3 + 48) = 0;
  }

  v14 = os_unfair_recursive_lock_unlock();
  v15 = (void *)MEMORY[0x227676638](v14);
  v16 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v17 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v19 = (HMDAppleAccountContext *)objc_claimAutoreleasedReturnValue();
    v20 = 138543618;
    v21 = v18;
    v22 = 2112;
    v23 = v19;
    _os_log_impl(&dword_2218F0000, v17, OS_LOG_TYPE_INFO, "%{public}@Primary iCloud (Apple) account login status: Logged In : %@", (uint8_t *)&v20, 0x16u);

  }
  objc_autoreleasePoolPop(v15);
}

void sub_2220E81C0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__147387(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__147388(uint64_t a1)
{

}

void sub_2220E98F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__147550(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__147551(uint64_t a1)
{

}

void sub_2220F4898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220F56E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220F5950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220F77D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2220FB2E0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 128));
  _Unwind_Resume(a1);
}

void sub_2220FC39C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_2220FD87C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FE070(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FE4DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FE908(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FECB0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FF048(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2220FF3E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222103288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__150169(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__150170(uint64_t a1)
{

}

void sub_2221039BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222103DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222103FB4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222104280(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222105CCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222105D58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222105E98(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221060B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222107598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222107854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __removeAllAccessories(void *a1)
{
  id *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  objc_msgSend(v1[3], "allKeys", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        __removeUnassociatedAccessory(v1, *(void **)(*((_QWORD *)&v7 + 1) + 8 * v6++));
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

  objc_msgSend(v1[3], "removeAllObjects");
}

void __removeUnassociatedAccessory(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  id *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3[3], "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v16 = v9;
      v17 = 2112;
      v18 = v4;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Removing unassociated accessory %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(v3[3], "removeObjectForKey:", v4);
    objc_msgSend(v7, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      objc_msgSend(v7, "delegateQueue");
      v11 = objc_claimAutoreleasedReturnValue();
      v12[0] = MEMORY[0x24BDAC760];
      v12[1] = 3221225472;
      v12[2] = ____removeUnassociatedAccessory_block_invoke;
      v12[3] = &unk_24E79C268;
      v13 = v10;
      v14 = v5;
      dispatch_async(v11, v12);

    }
  }

}

uint64_t ____removeUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

uint64_t ____updateDevice_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

void __addDevice(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  HMDUnassociatedWACAccessory *v12;
  void *v13;
  void *v14;
  void *v15;
  HMDUnassociatedWACAccessory *v16;
  void *v17;
  id *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id *v22;
  HMDUnassociatedWACAccessory *v23;
  void *v24;
  NSObject *v25;
  _BYTE v26[24];
  HMDUnassociatedWACAccessory *v27;
  id v28;
  HMDUnassociatedWACAccessory *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v4, "isConfigured"))
  {
    objc_msgSend(v4, "identifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    __removeUnassociatedAccessory(v3, v5);
LABEL_3:

    goto LABEL_11;
  }
  v6 = v3[3];
  objc_msgSend(v4, "identifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8 && objc_msgSend(v4, "supportsAirPlay2"))
  {
    v9 = (void *)MEMORY[0x24BDD7338];
    v10 = objc_alloc(MEMORY[0x24BDD1880]);
    v11 = (void *)objc_msgSend(v10, "initWithUUIDString:", *MEMORY[0x24BDD4A30]);
    objc_msgSend(v9, "categoryWithIdentifier:", v11);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = [HMDUnassociatedWACAccessory alloc];
    objc_msgSend(v4, "identifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "UUIDString");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "name");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = -[HMDUnassociatedWACAccessory initWithIdentifier:name:category:messageDispatcher:wacDevice:](v12, "initWithIdentifier:name:category:messageDispatcher:wacDevice:", v14, v15, v5, v3[4], v4);

    v17 = (void *)MEMORY[0x227676638]();
    v18 = v3;
    HMFGetOSLogHandle();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v26 = 138543874;
      *(_QWORD *)&v26[4] = v20;
      *(_WORD *)&v26[12] = 2048;
      *(_QWORD *)&v26[14] = v16;
      *(_WORD *)&v26[22] = 2112;
      v27 = v16;
      _os_log_impl(&dword_2218F0000, v19, OS_LOG_TYPE_INFO, "%{public}@New WAC Accessory discovered: %p %@", v26, 0x20u);

    }
    objc_autoreleasePoolPop(v17);
    objc_msgSend(v4, "identifier");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = v18;
    v23 = v16;
    objc_msgSend(v3[3], "setObject:forKey:", v23, v21);
    objc_msgSend(v22, "delegate");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    if (v24)
    {
      objc_msgSend(v22, "delegateQueue");
      v25 = objc_claimAutoreleasedReturnValue();
      *(_QWORD *)v26 = MEMORY[0x24BDAC760];
      *(_QWORD *)&v26[8] = 3221225472;
      *(_QWORD *)&v26[16] = ____addUnassociatedAccessory_block_invoke;
      v27 = (HMDUnassociatedWACAccessory *)&unk_24E79C268;
      v28 = v24;
      v29 = v23;
      dispatch_async(v25, v26);

    }
    goto LABEL_3;
  }
LABEL_11:

}

uint64_t ____addUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addUnassociatedWACAccessory:", *(_QWORD *)(a1 + 40));
}

void sub_22210F654(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_22210FA90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_22211000C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_22211035C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_222110704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_222110A94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_222110DE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222111158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2221114AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_22211172C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_222111A00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222111DB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_22211201C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222112140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2221122B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2221123C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2221124A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_22211285C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_222112A3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222112BBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222112D3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222112EBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222113068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222113578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_222113B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222113F08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222114074(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_222114198(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_222114AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  void *v28;
  void *v29;
  void *v30;
  void *v31;

  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  size_t v16;
  std::locale::__imp *p_b;
  uint64_t v18;
  uint64_t v19;
  std::locale *v20;
  uint64_t v21;
  _BYTE v23[16];
  std::locale __b;
  size_t v25;
  int64_t v26;

  MEMORY[0x227675CA8](v23, a1);
  if (v23[0])
  {
    v6 = (char *)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *((_QWORD *)v6 + 5);
    v8 = *((_DWORD *)v6 + 2);
    v9 = *((_DWORD *)v6 + 36);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&__b, MEMORY[0x24BEDB350]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&__b);
      *((_DWORD *)v6 + 36) = v9;
    }
    v11 = a2 + a3;
    if ((v8 & 0xB0) == 0x20)
      v12 = a2 + a3;
    else
      v12 = a2;
    if (!v7)
      goto LABEL_29;
    v13 = *((_QWORD *)v6 + 3);
    v14 = v13 <= a3;
    v15 = v13 - a3;
    v16 = v14 ? 0 : v15;
    if (v12 - a2 >= 1
      && (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 96))(v7, a2, v12 - a2) != v12 - a2)
    {
      goto LABEL_29;
    }
    if ((uint64_t)v16 >= 1)
    {
      if (v16 >= 0x7FFFFFFFFFFFFFF8)
        std::string::__throw_length_error[abi:ne180100]();
      if (v16 >= 0x17)
      {
        v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17)
          v18 = v16 | 7;
        v19 = v18 + 1;
        p_b = (std::locale::__imp *)operator new(v18 + 1);
        v25 = v16;
        v26 = v19 | 0x8000000000000000;
        __b.__locale_ = p_b;
      }
      else
      {
        HIBYTE(v26) = v16;
        p_b = (std::locale::__imp *)&__b;
      }
      memset(p_b, v9, v16);
      *((_BYTE *)p_b + v16) = 0;
      v20 = v26 >= 0 ? &__b : (std::locale *)__b.__locale_;
      v21 = (*(uint64_t (**)(uint64_t, std::locale *, size_t))(*(_QWORD *)v7 + 96))(v7, v20, v16);
      if (SHIBYTE(v26) < 0)
        operator delete(__b.__locale_);
      if (v21 != v16)
        goto LABEL_29;
    }
    if (v11 - v12 < 1
      || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 96))(v7, v12, v11 - v12) == v11 - v12)
    {
      *((_QWORD *)v6 + 3) = 0;
    }
    else
    {
LABEL_29:
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x227675CB4](v23);
  return a1;
}

void sub_222114E20(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _QWORD *v17;

  if (a17 < 0)
    operator delete(__p);
  MEMORY[0x227675CB4](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v17 + *(_QWORD *)(*v17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x222114DF4);
}

void sub_222114E80(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BEDB800];
  v3 = *MEMORY[0x24BEDB800];
  *(_QWORD *)a1 = *MEMORY[0x24BEDB800];
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEDB848] + 16;
  if (*(char *)(a1 + 95) < 0)
    operator delete(*(void **)(a1 + 72));
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x227675D20](a1 + 112);
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]();
}

void std::__throw_length_error[abi:ne180100]()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception);
  __cxa_throw(exception, (struct type_info *)off_24E763E30, MEMORY[0x24BEDAAF0]);
}

void sub_222114F58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, "basic_string");
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_2221150AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222115164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2221153E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;

  _Unwind_Resume(a1);
}

void sub_2221154B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_22211555C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_222115778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_2221159A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_222115C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_222115E70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_2221160AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_2221162E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  void *v16;
  void *v17;

  if (a15 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t std::shared_ptr<CtrXPC::Event>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void sub_22211640C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222116588(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222116770(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2221167FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222116898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2221169C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222116A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222116B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_222116C84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_222116D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222116DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_222116EE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222116F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222117018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_222117148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2221171CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2221173E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222117550(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2221175D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222117768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_222117970(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_222117A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222117A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

__CFString *HMDUserPresenceRegionStatusAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E789CF0[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDUserPresenceRegionStatus %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_22211A1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_22211A404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__152589(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__152590(uint64_t a1)
{

}

void sub_22211A950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_22211B640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id findResidentDevice(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v3 = a2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = __findResidentDevice_block_invoke;
  v7[3] = &unk_24E7953A8;
  v8 = v3;
  v4 = v3;
  objc_msgSend(a1, "na_firstObjectPassingTest:", v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t __findResidentDevice_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hmf_isEqualToUUID:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_22211E19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221247B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  id *v9;
  id *v10;
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 136));
  _Unwind_Resume(a1);
}

void sub_222124F7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222125054(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222125148(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222125370(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDApplicationInfo *__HMDApplicationRegistryApplicationInfoForApplicationProxy(void *a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  HMDApplicationInfo *v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "bundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v4, "bundleURL");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      __HMDApplicationRegistryApplicationForBundleURL(v3, v6);
    else
      __HMDApplicationRegistryApplicationWithBundleIdentifier(v3, v5);
    v7 = (HMDApplicationInfo *)objc_claimAutoreleasedReturnValue();
    if (!v7)
      v7 = -[HMDApplicationInfo initWithBundleIdentifier:bundleURL:]([HMDApplicationInfo alloc], "initWithBundleIdentifier:bundleURL:", v5, v6);

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id *__HMDApplicationRegistryApplicationWithBundleIdentifier(id *a1, void *a2)
{
  id v3;
  void *v4;
  _QWORD v6[4];
  id v7;

  v3 = a2;
  if (a1)
  {
    objc_msgSend(a1[2], "allObjects");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationWithBundleIdentifier_block_invoke;
    v6[3] = &unk_24E78A298;
    v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();

  }
  return a1;
}

void __HMDApplicationRegistryHandleAddedApplicationInfo(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  if (a1 && v3)
  {
    v8 = v3;
    v4 = objc_msgSend(v3, "isEntitledForSPIAccess");
    objc_msgSend(v8, "vendorIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      +[HMDApplicationVendorIDStore sharedStore](HMDApplicationVendorIDStore, "sharedStore");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "bundleIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addVendorID:applicationBundleId:spiClient:", v5, v7, v4);

    }
    v3 = v8;
  }

}

void sub_222127ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, void *a20)
{

  _Unwind_Resume(a1);
}

void sub_222127C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{

  _Unwind_Resume(a1);
}

void sub_222127DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Block_object_dispose((const void *)(v27 - 96), 8);
  _Unwind_Resume(a1);
}

id HMDShortDescriptionForToken(void *a1)
{
  void *v1;
  id v2;

  objc_msgSend(a1, "description");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v1, "hasPrefix:", CFSTR("<NSPersistentHistoryToken - {\n    "))
    || !objc_msgSend(v1, "hasSuffix:", CFSTR(";\n}>")))
  {
    goto LABEL_5;
  }
  objc_msgSend(v1, "substringWithRange:", objc_msgSend(CFSTR("<NSPersistentHistoryToken - {\n    "), "length"), objc_msgSend(v1, "length")
  - (objc_msgSend(CFSTR("<NSPersistentHistoryToken - {\n    "), "length")
   + objc_msgSend(CFSTR(";\n}>"), "length")));
  v2 = (id)objc_claimAutoreleasedReturnValue();
  if ((unint64_t)objc_msgSend(v2, "length") >= 0x47)
  {

LABEL_5:
    v2 = v1;
  }

  return v2;
}

double HMDHomeDataChangedMessageTimeout()
{
  void *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("HMDHomeDataChangedMessageTimeout"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "doubleValue");
  v4 = v3;

  return v4;
}

uint64_t __Block_byref_object_copy__156018(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__156019(uint64_t a1)
{

}

void sub_22212B724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18)
{

  _Unwind_Resume(a1);
}

id __copy_helper_block_e8_48n15_8_8_s0_t8w8_s16(_QWORD *a1, uint64_t a2)
{
  id result;

  a1[6] = *(id *)(a2 + 48);
  a1[7] = *(_QWORD *)(a2 + 56);
  result = *(id *)(a2 + 64);
  a1[8] = result;
  return result;
}

void __destroy_helper_block_e8_48n8_8_s0_s16(uint64_t a1)
{

}

id __copy_helper_block_e8_56n15_8_8_s0_t8w8_s16(_QWORD *a1, uint64_t a2)
{
  id result;

  a1[7] = *(id *)(a2 + 56);
  a1[8] = *(_QWORD *)(a2 + 64);
  result = *(id *)(a2 + 72);
  a1[9] = result;
  return result;
}

void __destroy_helper_block_e8_56n8_8_s0_s16(uint64_t a1)
{

}

void sub_22213781C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_222138B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222139204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22213EB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22213F67C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222141DA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214227C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222142490(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222142668(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221429DC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222142AB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222142B8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222142F48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDDeviceMarkDirty(void *a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;

  v3 = a1;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = ____HMDDeviceMarkDirty_block_invoke;
  v5[3] = &unk_24E79BD80;
  v6 = v3;
  v4 = v3;
  objc_msgSend(a2, "submitBlock:", v5);

}

void __deregisterForAccountHandleUpdates(void *a1)
{
  void *v1;
  id v2;
  id v3;

  if (a1)
  {
    v1 = (void *)MEMORY[0x24BDD16D0];
    v2 = a1;
    objc_msgSend(v1, "defaultCenter");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removeObserver:name:object:", v2, CFSTR("HMDAccountHandlesUpdatedNotification"), 0);

  }
}

id __deviceHandlesForAccount(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  _HMDGlobalDeviceHandle *v19;
  void *v20;
  _HMDGlobalDeviceHandle *v21;
  HMDDeviceHandle *v22;
  id v24;
  id v25;
  id obj;
  id v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[4];
  id v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v27 = a3;
  v7 = 0;
  if (v5 && v6)
  {
    v8 = objc_msgSend(v6, "hmf_isEmpty");
    if (!v27 || v8)
    {
      v7 = v5;
    }
    else
    {
      v32[0] = MEMORY[0x24BDAC760];
      v32[1] = 3221225472;
      v32[2] = ____deviceHandlesForAccount_block_invoke;
      v32[3] = &unk_24E78A6C8;
      v33 = v6;
      objc_msgSend(v5, "hmf_objectsPassingTest:", v32);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v9, "hmf_isEmpty"))
      {
        v7 = v5;
      }
      else
      {
        v24 = v6;
        v25 = v5;
        v10 = (void *)objc_msgSend(v5, "mutableCopy");
        v28 = 0u;
        v29 = 0u;
        v30 = 0u;
        v31 = 0u;
        obj = v9;
        v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
        if (v11)
        {
          v12 = v11;
          v13 = *(_QWORD *)v29;
          do
          {
            for (i = 0; i != v12; ++i)
            {
              if (*(_QWORD *)v29 != v13)
                objc_enumerationMutation(obj);
              v15 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
              objc_msgSend(v15, "internal");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
                v17 = v16;
              else
                v17 = 0;
              v18 = v17;

              if (v18)
              {
                v19 = [_HMDGlobalDeviceHandle alloc];
                objc_msgSend(v18, "pushToken");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                v21 = -[_HMDGlobalDeviceHandle initWithPushToken:accountHandle:](v19, "initWithPushToken:accountHandle:", v20, v27);

                v22 = -[HMDDeviceHandle initWithInternal:]([HMDDeviceHandle alloc], "initWithInternal:", v21);
                if (v22)
                {
                  objc_msgSend(v10, "removeObject:", v15);
                  objc_msgSend(v10, "addObject:", v22);
                }

              }
            }
            v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v34, 16);
          }
          while (v12);
        }

        v7 = (id)objc_msgSend(v10, "copy");
        v6 = v24;
        v5 = v25;
      }

    }
  }

  return v7;
}

uint64_t ____deviceHandlesForAccount_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a2;
  if (objc_msgSend(v3, "isGlobal"))
  {
    objc_msgSend(v3, "accountHandle");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
      v5 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v4) ^ 1;
    else
      v5 = 1;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_222146B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222147264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__158391(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__158392(uint64_t a1)
{

}

void sub_222149B28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214ABC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214AC34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214AE58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214B3D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214B504(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214BD28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22214F160(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222154170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_222155488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void bindStringSQLite3(sqlite3_stmt *a1, int a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  int v9;
  id v10;
  id v11;

  v7 = a3;
  v8 = v7;
  if (!*a4)
  {
    v11 = v7;
    if (v7)
      v9 = sqlite3_bind_text(a1, a2, (const char *)objc_msgSend(objc_retainAutorelease(v7), "UTF8String"), -1, 0);
    else
      v9 = sqlite3_bind_null(a1, a2);
    v8 = v11;
    if (v9)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
      v10 = (id)objc_claimAutoreleasedReturnValue();
      v8 = v11;
      *a4 = v10;
    }
  }

}

id execSQLite3(sqlite3_stmt *a1)
{
  void *v2;

  if (sqlite3_step(a1) == 101)
  {
    v2 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  if (sqlite3_reset(a1) && !v2)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

void bindDataSQLite3(sqlite3_stmt *a1, int a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  id v9;
  int v10;
  id v11;
  id v12;

  v7 = a3;
  v8 = v7;
  if (!*a4)
  {
    v12 = v7;
    if (v7)
    {
      if (objc_msgSend(v7, "length"))
      {
        v9 = objc_retainAutorelease(v12);
        v10 = sqlite3_bind_blob64(a1, a2, (const void *)objc_msgSend(v9, "bytes"), objc_msgSend(v9, "length"), 0);
      }
      else
      {
        v10 = sqlite3_bind_zeroblob(a1, a2, 0);
      }
    }
    else
    {
      v10 = sqlite3_bind_null(a1, a2);
    }
    v8 = v12;
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
      v11 = (id)objc_claimAutoreleasedReturnValue();
      v8 = v12;
      *a4 = v11;
    }
  }

}

sqlite3_int64 steplastrowresetSQLite3(sqlite3_stmt *a1, _QWORD *a2)
{
  sqlite3 *v4;
  sqlite3_int64 insert_rowid;
  void *v6;

  if (sqlite3_step(a1) != 101)
  {
    if (a2)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      if (sqlite3_reset(a1))
      {
        v6 = (void *)MEMORY[0x24BDD1540];
        goto LABEL_8;
      }
    }
    else
    {
      sqlite3_reset(a1);
    }
    return 0;
  }
  v4 = sqlite3_db_handle(a1);
  insert_rowid = sqlite3_last_insert_rowid(v4);
  if (sqlite3_reset(a1))
  {
    if (a2)
    {
      v6 = (void *)MEMORY[0x24BDD1540];
LABEL_8:
      objc_msgSend(v6, "errorWithSQLite3Statement:", a1);
      insert_rowid = 0;
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      return insert_rowid;
    }
    return 0;
  }
  return insert_rowid;
}

sqlite3_stmt *bindIntSQLite3(sqlite3_stmt *result, int a2, sqlite3_int64 a3, _QWORD *a4)
{
  sqlite3_stmt *v5;

  if (!*a4)
  {
    v5 = result;
    result = (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
    if ((_DWORD)result)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", v5);
      result = (sqlite3_stmt *)(id)objc_claimAutoreleasedReturnValue();
      *a4 = result;
    }
  }
  return result;
}

id _handleFetchWithRawCallback(sqlite3_stmt *a1, void *a2)
{
  uint64_t (**v3)(id, void *, sqlite3_int64, void *, void *, _QWORD);
  int v4;
  void *v5;
  sqlite3_int64 v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  sqlite3_reset(a1);
  while (1)
  {
    v4 = sqlite3_step(a1);
    if (v4 != 100)
      break;
    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithSQLite3Column:column:", a1, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = sqlite3_column_int64(a1, 2);
    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithSQLite3Column:column:", a1, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithSQLite3Column:column:", a1, 3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v6) = v3[2](v3, v5, v6, v7, v8, 0);

    if ((v6 & 1) == 0)
      goto LABEL_6;
  }
  if (v4 == 101)
  {
LABEL_6:
    v9 = 0;
    goto LABEL_8;
  }
  objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", a1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  ((uint64_t (**)(id, void *, sqlite3_int64, void *, void *, void *))v3)[2](v3, 0, 0, 0, 0, v9);
LABEL_8:
  sqlite3_reset(a1);

  return v9;
}

id selectSQLite3(sqlite3 *a1, const char *a2, void *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  const char *v16;
  void *v17;
  void *v18;
  id v19;
  char isKindOfClass;
  void *v21;
  id v22;
  id v23;
  char v24;
  void *v25;
  id v26;
  char v27;
  void *v28;
  id v29;
  void *v30;
  objc_class *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  const char *v55;
  const char *v56;
  id v57;
  sqlite3_stmt *ppStmt;
  _QWORD v59[3];
  _QWORD v60[3];
  _QWORD v61[3];
  _QWORD v62[3];
  _QWORD v63[3];
  _QWORD v64[5];

  v64[3] = *MEMORY[0x24BDAC8D0];
  v7 = a3;
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 0;
  v10 = 0;
  ppStmt = 0;
  if (!*a4)
  {
    if (sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0))
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Context:statement:", a1, a2);
      v9 = 0;
      v10 = 0;
      *a4 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_48;
    }
    v11 = sqlite3_bind_parameter_count(ppStmt);
    if (v11 >= 2)
    {
      v12 = v11;
      v13 = 1;
      v14 = 0x24BDD1000uLL;
      v54 = *MEMORY[0x24BE3EBB0];
      v55 = a2;
      while (1)
      {
        if (*a4)
          goto LABEL_46;
        v15 = sqlite3_bind_parameter_name(ppStmt, v13);
        if (!v15)
        {
          v42 = (void *)MEMORY[0x24BDD1540];
          v64[0] = &unk_24E96BEE8;
          v63[0] = CFSTR("extcode");
          v63[1] = CFSTR("text");
          objc_msgSend(*(id *)(v14 + 1992), "stringWithFormat:", CFSTR("statement cannot contain nameless parameters (%d is nameless)"), v13);
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v64[1] = v43;
          v63[2] = CFSTR("statement");
          objc_msgSend(*(id *)(v14 + 1992), "stringWithUTF8String:", a2);
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v64[2] = v44;
          objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v64, v63, 3);
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v42, "errorWithDomain:code:userInfo:", v54, 3, v45);
          *a4 = (id)objc_claimAutoreleasedReturnValue();

          goto LABEL_46;
        }
        v16 = v15;
        objc_msgSend(*(id *)(v14 + 1992), "stringWithUTF8String:", v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        if (v18)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
            break;
        }
        sqlite3_bind_null(ppStmt, v13);
LABEL_29:

        v13 = (v13 + 1);
        if (v12 == (_DWORD)v13)
          goto LABEL_32;
      }
      v19 = v18;
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v21 = v19;
      else
        v21 = 0;
      v57 = v21;

      if ((isKindOfClass & 1) != 0)
      {
        bindDataSQLite3(ppStmt, v13, v19, a4);
LABEL_16:
        v22 = 0;
        v23 = 0;
LABEL_28:

        v14 = 0x24BDD1000;
        goto LABEL_29;
      }
      v22 = v19;
      objc_opt_class();
      v24 = objc_opt_isKindOfClass();
      if ((v24 & 1) != 0)
        v25 = v22;
      else
        v25 = 0;
      v26 = v25;

      if ((v24 & 1) != 0)
      {
        bindStringSQLite3(ppStmt, v13, v22, a4);
        v23 = 0;
      }
      else
      {
        v23 = v22;
        objc_opt_class();
        v27 = objc_opt_isKindOfClass();
        if ((v27 & 1) != 0)
          v28 = v23;
        else
          v28 = 0;
        v29 = v28;

        if ((v27 & 1) == 0)
        {
          v52 = (void *)MEMORY[0x24BDD1540];
          v62[0] = &unk_24E96BEE8;
          v61[0] = CFSTR("extcode");
          v61[1] = CFSTR("text");
          v30 = (void *)MEMORY[0x24BDD17C8];
          v31 = (objc_class *)objc_opt_class();
          NSStringFromClass(v31);
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "stringWithFormat:", CFSTR("bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)"), v16, v53);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v62[1] = v32;
          v61[2] = CFSTR("statement");
          objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v55);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v62[2] = v33;
          objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v62, v61, 3);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v52, "errorWithDomain:code:userInfo:", v54, 3, v34);
          *a4 = (id)objc_claimAutoreleasedReturnValue();

          a2 = v55;
          goto LABEL_16;
        }
        bindIntSQLite3(ppStmt, v13, objc_msgSend(v23, "longLongValue"), a4);
        v22 = 0;
      }
      a2 = v55;
      goto LABEL_28;
    }
LABEL_32:
    if (*a4)
    {
LABEL_46:
      v9 = 0;
LABEL_47:
      v10 = 0;
    }
    else
    {
      v56 = a2;
      v35 = 0;
      v36 = sqlite3_column_count(ppStmt);
      while (1)
      {
        v37 = sqlite3_step(ppStmt);
        if (v37 != 100)
          break;
        objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", v36);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        if ((int)v36 >= 1)
        {
          v38 = 0;
          do
          {
            v39 = sqlite3_column_type(ppStmt, v38);
            switch((int)v39)
            {
              case 1:
                objc_msgSend(MEMORY[0x24BDD16E0], "numberWithLongLong:", sqlite3_column_int64(ppStmt, v38));
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 2:
                objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", sqlite3_column_double(ppStmt, v38));
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 3:
                objc_msgSend(MEMORY[0x24BDD17C8], "stringWithSQLite3Column:column:", ppStmt, v38);
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 4:
                objc_msgSend(MEMORY[0x24BDBCE50], "dataWithSQLite3Column:column:", ppStmt, v38);
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              case 5:
                objc_msgSend(MEMORY[0x24BDBCEF8], "null");
                v40 = objc_claimAutoreleasedReturnValue();
                break;
              default:
                v47 = (void *)MEMORY[0x24BDD1540];
                v48 = *MEMORY[0x24BE3EBB0];
                v60[0] = &unk_24E96BEE8;
                v59[0] = CFSTR("extcode");
                v59[1] = CFSTR("text");
                objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("column %d is of SQLite3 type %d (not recognized)"), v38, v39);
                v49 = (void *)objc_claimAutoreleasedReturnValue();
                v60[1] = v49;
                v59[2] = CFSTR("statement");
                objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v56);
                v50 = (void *)objc_claimAutoreleasedReturnValue();
                v60[2] = v50;
                objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v60, v59, 3);
                v51 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v47, "errorWithDomain:code:userInfo:", v48, 3, v51);
                *a4 = (id)objc_claimAutoreleasedReturnValue();

                goto LABEL_47;
            }
            v41 = (void *)v40;
            objc_msgSend(v9, "addObject:", v40);

            v38 = (v38 + 1);
          }
          while ((_DWORD)v36 != (_DWORD)v38);
        }
        objc_msgSend(v8, "addObject:", v9);
        v35 = v9;
      }
      if (v37 != 101)
      {
        objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Statement:", ppStmt);
        *a4 = (id)objc_claimAutoreleasedReturnValue();
      }
      sqlite3_finalize(ppStmt);
      if (*a4)
        v10 = 0;
      else
        v10 = v8;
      v9 = v35;
    }
  }
LABEL_48:

  return v10;
}

id runSQLite3(sqlite3 *a1, const char *a2)
{
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  const char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if (sqlite3_exec(a1, a2, 0, 0, 0))
  {
    v4 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Context:", a1);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138543874;
      v11 = v6;
      v12 = 2112;
      v13 = v7;
      v14 = 2080;
      v15 = a2;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_ERROR, "%{public}@Got Error %@ on %s", (uint8_t *)&v10, 0x20u);

    }
    objc_autoreleasePoolPop(v4);
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Context:statement:", a1, a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

sqlite3_stmt *prepareSQLite3(sqlite3 *a1, const char *a2, _QWORD *a3)
{
  id v6;
  sqlite3_stmt *result;
  sqlite3_stmt *ppStmt;

  ppStmt = 0;
  if (!sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0))
    return ppStmt;
  if (!a3)
    return 0;
  objc_msgSend(MEMORY[0x24BDD1540], "errorWithSQLite3Context:statement:", a1, a2);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  result = 0;
  *a3 = v6;
  return result;
}

uint64_t __Block_byref_object_copy__160205(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__160206(uint64_t a1)
{

}

void sub_22215DAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MKFCKModelCurrentWriterVersionString()
{
  if (MKFCKModelCurrentWriterVersionString__hmf_once_t2 != -1)
    dispatch_once(&MKFCKModelCurrentWriterVersionString__hmf_once_t2, &__block_literal_global_160439);
  return (id)MKFCKModelCurrentWriterVersionString__hmf_once_v3;
}

id _generateFlags(int a1)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  v5 = 0;
  MEMORY[0x227677148](&v4);
  if (a1)
    v2 = 8;
  else
    v2 = 0;
  BYTE5(v5) = BYTE5(v5) & 0xF7 | v2;
  return (id)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDBytes:", &v4);
}

void sub_22215FF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__160483(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__160484(uint64_t a1)
{

}

id MKFPropertyNamesFromDescriptions(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v1 = (objc_class *)MEMORY[0x24BDBCEB8];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithCapacity:", objc_msgSend(v2, "count"));
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __MKFPropertyNamesFromDescriptions_block_invoke;
  v8[3] = &unk_24E78A8E8;
  v9 = v3;
  v4 = v3;
  objc_msgSend(v2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v8);

  objc_msgSend(v4, "sortedArrayUsingSelector:", sel_compare_);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "componentsJoinedByString:", CFSTR(", "));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t AWDHomeKitHomeCameraConfigurationsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  AWDHomeKitCameraUserSettings *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  uint64_t v38;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(AWDHomeKitCameraUserSettings);
        objc_msgSend((id)a1, "addHomeKitCameraUserSettings:", v17);
        if (PBReaderPlaceMark() && AWDHomeKitCameraUserSettingsReadFrom((uint64_t)v17, a2))
          goto LABEL_26;
        goto LABEL_63;
      case 2u:
        v17 = objc_alloc_init(AWDHomeKitCameraSettings);
        objc_msgSend((id)a1, "addHomeKitCameraSettings:", v17);
        if (PBReaderPlaceMark() && (AWDHomeKitCameraSettingsReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
LABEL_26:
          PBReaderRecallMark();

LABEL_61:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_63:

        return 0;
      case 3u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_51:
        *(_DWORD *)(a1 + 8) = v21;
        goto LABEL_61;
      case 4u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 36) |= 2u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v27 = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
LABEL_55:
        v37 = v27 != 0;
        v38 = 32;
        goto LABEL_60;
      case 5u:
        v31 = 0;
        v32 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 36) |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                v33 = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v33 = 0;
LABEL_59:
        v37 = v33 != 0;
        v38 = 33;
LABEL_60:
        *(_BYTE *)(a1 + v38) = v37;
        goto LABEL_61;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_61;
    }
  }
}

void sub_222164404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id HMDSanitizeCoreDataError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1)
  {
    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "userInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v3, "count"))
    {
      v18 = v1;
      v21 = 0u;
      v22 = 0u;
      v19 = 0u;
      v20 = 0u;
      v4 = *MEMORY[0x24BDD0FD8];
      v23[0] = *MEMORY[0x24BDD0FC8];
      v23[1] = v4;
      v23[2] = *MEMORY[0x24BDD0FF0];
      v23[3] = CFSTR("reason");
      objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v23, 4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v20;
        do
        {
          for (i = 0; i != v7; ++i)
          {
            if (*(_QWORD *)v20 != v8)
              objc_enumerationMutation(v5);
            v10 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 8 * i);
            objc_msgSend(v3, "objectForKeyedSubscript:", v10);
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v12 = v11;
            else
              v12 = 0;
            v13 = v12;

            if (v13)
              objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, v10);

          }
          v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
        }
        while (v7);
      }

      v1 = v18;
    }
    v14 = (void *)MEMORY[0x24BDD1540];
    objc_msgSend(v1, "domain");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "errorWithDomain:code:userInfo:", v15, objc_msgSend(v1, "code"), v2);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v16 = 0;
  }

  return v16;
}

id HMDHomeUUIDFromWorkingContextName(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  if (objc_msgSend(v1, "hasPrefix:", CFSTR("H:")))
  {
    objc_msgSend(v1, "substringFromIndex:", objc_msgSend(CFSTR("H:"), "length"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", v2);

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

HMDMediaGroupsParticipantData *HMDWorkingContextNameForHomeUUID(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  HMDMediaGroupsParticipantData *v7;
  SEL v8;
  id v9;
  id v10;
  id v11;

  v1 = a1;
  if (v1)
  {
    v2 = v1;
    v3 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(v1, "UUIDString");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "stringWithFormat:", CFSTR("H:%@"), v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    return (HMDMediaGroupsParticipantData *)v5;
  }
  else
  {
    v7 = (HMDMediaGroupsParticipantData *)_HMFPreconditionFailure();
    return -[HMDMediaGroupsParticipantData initWithDestination:destinationControllerData:backedUpGroups:](v7, v8, v9, v10, v11);
  }
}

void sub_222166F68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222167B5C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222167D48(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222167FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22216A0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_22216D75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_22216E0A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22216E544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__162288(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__162289(uint64_t a1)
{

}

void sub_222174728(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222174920(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222174A68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221761C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleFinishedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSObject *v21;
  NSObject *v22;
  void *v23;
  void *v24;
  BOOL v25;
  void *v26;
  id v27;
  NSObject *v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  NSObject *v49;
  NSObject *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  NSObject *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  uint8_t buf[4];
  void *v66;
  __int16 v67;
  id v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend(*(id *)(a1 + 32), "state");
  v3 = (void *)MEMORY[0x227676638]();
  v4 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v2 == 3)
  {
    if (v6)
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v66 = v7;
      v67 = 2112;
      v68 = v8;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Finished unarchive with error: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    v9 = *(void **)(a1 + 32);
    if (*(_QWORD *)(a1 + 40))
    {
      objc_msgSend(v9, "setState:", 2);
LABEL_40:
      objc_msgSend(*(id *)(a1 + 32), "setExtractor:", 0);
      return;
    }
    v11 = v9;
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE3F200]), "initWithName:", CFSTR("HMDSoftwareUpdateDocumentationAsset.validation"));
    v13 = (void *)MEMORY[0x227676638]();
    v14 = (void *)MEMORY[0x24BDD1488];
    objc_msgSend(v11, "bundleURL");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "bundleWithURL:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      v63 = v13;
      v64 = v12;
      objc_msgSend(MEMORY[0x24BDD79F0], "localizationsForBundle:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_msgSend(v17, "count");
      v19 = (void *)MEMORY[0x227676638]();
      v20 = v11;
      HMFGetOSLogHandle();
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = v21;
      if (v18)
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v23;
          v67 = 2112;
          v68 = v17;
          _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_INFO, "%{public}@Available localizations: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v19);
        v24 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD79F0]), "initWithBundle:", v16);
        v25 = v24 != 0;
        v26 = (void *)MEMORY[0x227676638]();
        v27 = v20;
        HMFGetOSLogHandle();
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = v28;
        if (v24)
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            HMFGetLogIdentifier();
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v66 = v30;
            v67 = 2112;
            v68 = v24;
            _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v26);
          v31 = 0;
        }
        else
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v66 = v40;
            v67 = 2112;
            v68 = v16;
            _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation for asset bundle: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v26);
          objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 2);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
        }

      }
      else
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v39;
          v67 = 2112;
          v68 = v16;
          _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_DEFAULT, "%{public}@No available localization for asset bundle: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v19);
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 2);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = 0;
      }
      v13 = v63;
      v12 = v64;

    }
    else
    {
      v32 = (void *)MEMORY[0x227676638]();
      v33 = v11;
      HMFGetOSLogHandle();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v35 = v12;
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v33, "bundleURL");
        v37 = v13;
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v66 = v36;
        v67 = 2112;
        v68 = v38;
        _os_log_impl(&dword_2218F0000, v34, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to create bundle from: %@", buf, 0x16u);

        v13 = v37;
        v12 = v35;
      }

      objc_autoreleasePoolPop(v32);
      objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 52);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = 0;
    }

    objc_autoreleasePoolPop(v13);
    v41 = objc_retainAutorelease(v31);

    v42 = v41;
    v43 = v42;
    if (v25)
    {
      v44 = v42;
    }
    else
    {
      v45 = *(id *)(a1 + 32);
      v46 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD79F0]), "initWithAsset:", v45);
      v47 = (void *)MEMORY[0x227676638]();
      v48 = v45;
      HMFGetOSLogHandle();
      v49 = objc_claimAutoreleasedReturnValue();
      v50 = v49;
      if (v46)
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v51;
          v67 = 2112;
          v68 = v46;
          _os_log_impl(&dword_2218F0000, v50, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v47);
        v52 = v43;
      }
      else
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v48, "URL");
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v53;
          v67 = 2112;
          v68 = v54;
          _os_log_impl(&dword_2218F0000, v50, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation from asset url: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v47);
        objc_msgSend(MEMORY[0x24BDD1540], "hmfErrorWithCode:", 2);
        v52 = (id)objc_claimAutoreleasedReturnValue();
      }

      v44 = v52;
      if (!v46)
      {
        v57 = (void *)MEMORY[0x227676638]();
        v58 = *(id *)(a1 + 32);
        HMFGetOSLogHandle();
        v59 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          v60 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v66 = v60;
          v67 = 2112;
          v68 = v44;
          _os_log_impl(&dword_2218F0000, v59, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to validate asset with error: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v57);
        objc_msgSend(*(id *)(a1 + 32), "setState:", 0);
        objc_msgSend(*(id *)(a1 + 32), "increaseDownloadRetryCount");
        objc_msgSend(*(id *)(a1 + 32), "fileManager");
        v61 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "bundleURL");
        v62 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v61, "removeItemAtURL:error:", v62, 0);

        goto LABEL_39;
      }
    }
    objc_msgSend(*(id *)(a1 + 32), "setState:", 4);
    objc_msgSend(*(id *)(a1 + 32), "resetDownloadRetryCount");
LABEL_39:
    objc_msgSend(*(id *)(a1 + 32), "fileManager");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "archiveURL");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "removeItemAtURL:error:", v56, 0);

    goto LABEL_40;
  }
  if (v6)
  {
    HMFGetLogIdentifier();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v66 = v10;
    _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to finish unarchive, not currently unarchiving", buf, 0xCu);

  }
  objc_autoreleasePoolPop(v3);
}

void sub_2221771F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleStartedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 32);
  v3 = (void *)MEMORY[0x227676638]();
  v4 = *(id *)(a1 + 40);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(_QWORD *)(a1 + 32);
      v12 = 138543618;
      v13 = v7;
      v14 = 2112;
      v15 = v8;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to start unarchive with error: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 40), "cancelUnarchive");
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v9;
      _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Started unarchive", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(*(id *)(a1 + 40), "extractor");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setExtractorDelegate:", *(_QWORD *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 40), "archivedFileStream");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "open");

    __processNextArchivedData(*(void **)(a1 + 40));
  }
}

void __processNextArchivedData(void *a1)
{
  _QWORD *v1;
  void *v2;
  NSObject *v3;
  _QWORD block[4];
  _QWORD *v5;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = v1[2];
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ____processNextArchivedData_block_invoke;
    block[3] = &unk_24E79C240;
    v5 = v1;
    dispatch_async(v3, block);

  }
}

void ____processNextArchivedData_block_invoke(uint64_t a1)
{
  id *v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  id *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (id *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 32), "archivedFileStream");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "hasBytesAvailable");

  v5 = (void *)MEMORY[0x227676638]();
  v6 = *v2;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v21 = v9;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Reading next chunk from the archive", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    v11 = *(void **)(a1 + 32);
    v10 = (id *)(a1 + 32);
    objc_msgSend(v11, "archivedFileStream");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "read:maxLength:", buf, 4096);

    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", buf, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, *v10);
    objc_msgSend(*v10, "extractor");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v17[0] = MEMORY[0x24BDAC760];
    v17[1] = 3221225472;
    v17[2] = ____processNextArchivedData_block_invoke_367;
    v17[3] = &unk_24E78B030;
    objc_copyWeak(&v18, &location);
    objc_msgSend(v15, "supplyBytes:withCompletionBlock:", v14, v17);

    objc_destroyWeak(&v18);
    objc_destroyWeak(&location);

  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v21 = v16;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Reached end of input stream", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(*(id *)(a1 + 32), "finishUnarchive");
  }
}

void sub_222177754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____processNextArchivedData_block_invoke_367(uint64_t a1, void *a2, int a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  int v12;
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (v5)
  {
    v8 = (void *)MEMORY[0x227676638]();
    v9 = v7;
    HMFGetOSLogHandle();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543618;
      v13 = v11;
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Failed to append data with error: %@", (uint8_t *)&v12, 0x16u);

    }
    objc_autoreleasePoolPop(v8);
    objc_msgSend(v9, "cancelUnarchive");
  }
  else if (a3)
  {
    objc_msgSend(WeakRetained, "finishUnarchive");
  }
  else
  {
    __processNextArchivedData();
  }

}

id __resourceBundleForBundle(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(v1, "URLForResource:withExtension:", CFSTR("AssetData"), 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(MEMORY[0x24BDD1488], "bundleWithURL:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138543362;
      v9 = v6;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to find resource bundle", (uint8_t *)&v8, 0xCu);

    }
    objc_autoreleasePoolPop(v4);
    v3 = 0;
  }

  return v3;
}

id __htmlDocumentForResource(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  id v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v24;
    while (2)
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(v5, "URLForResource:withExtension:subdirectory:localization:", v7, CFSTR("html"), 0, *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * v12));
        v13 = objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          v15 = (void *)v13;
          v22 = 0;
          v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD76A8]), "initWithURL:error:", v13, &v22);
          v16 = v22;
          if (!v14)
          {
            v17 = (void *)MEMORY[0x227676638]();
            HMFGetOSLogHandle();
            v18 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
            {
              HMFGetLogIdentifier();
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "path");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = 138543874;
              v28 = v19;
              v29 = 2112;
              v30 = v20;
              v31 = 2112;
              v32 = v16;
              _os_log_impl(&dword_2218F0000, v18, OS_LOG_TYPE_INFO, "%{public}@Unable to load document, %@, with error: %@", buf, 0x20u);

            }
            objc_autoreleasePoolPop(v17);
          }

          goto LABEL_15;
        }
        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
      if (v10)
        continue;
      break;
    }
  }
  v14 = 0;
LABEL_15:

  return v14;
}

void sub_22217C628(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

id deriveCLLocationFromHMDRTLocation(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  double v4;
  CLLocationDegrees v5;
  CLLocationDegrees v6;
  CLLocationCoordinate2D v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;

  if (a1)
  {
    v1 = (objc_class *)MEMORY[0x24BDBFA80];
    v2 = a1;
    v3 = [v1 alloc];
    objc_msgSend(v2, "latitude");
    v5 = v4;
    objc_msgSend(v2, "longitude");
    v7 = CLLocationCoordinate2DMake(v5, v6);
    objc_msgSend(v2, "altitude");
    v9 = v8;
    objc_msgSend(v2, "horizontalUncertainty");
    v11 = v10;
    objc_msgSend(v2, "verticalUncertainty");
    v13 = v12;
    objc_msgSend(v2, "date");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = (void *)objc_msgSend(v3, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v14, v7.latitude, v7.longitude, v9, v11, v13);
  }
  else
  {
    v15 = 0;
  }
  return v15;
}

void sub_2221842CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  os_unfair_lock_s *v18;

  os_unfair_lock_unlock(v18);
  _Unwind_Resume(a1);
}

void sub_2221846AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222184788(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221848F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22218496C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222184C68(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222184DCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222185B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22218918C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__164507(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__164508(uint64_t a1)
{

}

void sub_22218A18C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218A580(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218B094(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218B2A4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218B560(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218B8B8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22218C99C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222191330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__165644(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__165645(uint64_t a1)
{

}

void sub_222193358(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__166022(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__166023(uint64_t a1)
{

}

void sub_22219524C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location,id a31)
{
  id *v31;
  id *v32;
  id *v33;
  uint64_t v34;

  objc_destroyWeak(v33);
  objc_destroyWeak(v31);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a31);
  objc_destroyWeak((id *)(v34 - 160));
  _Unwind_Resume(a1);
}

void sub_222196320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221968C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222196E14(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t hasAssistantHashingKeyChanged()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v0 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE3F290]), "initWithKey:options:domain:defaultValue:", CFSTR("HMDAssistantLastHashingKey"), 0, CFSTR("com.apple.homed"), 0);

  objc_msgSend(v0, "stringValue");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDHelper sharedHelper](HMDHelper, "sharedHelper");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "hashedRouteIDForIdentifier:", CFSTR("A77C551E-C3FA-414E-ACD8-A7DF3D64E9D6"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = HMFEqualObjects() ^ 1;
  return v4;
}

void sub_222196FB0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222198144(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222198830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void __HMDLostModeManagerLostModeChangeNotification(uint64_t a1, void *a2)
{
  void *v3;
  os_unfair_lock_s *v4;
  void *v5;
  int v6;
  void *v7;
  os_unfair_lock_s *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = (void *)MEMORY[0x227676638]();
  v4 = a2;
  if (v4)
  {
    os_unfair_lock_lock_with_options();
    objc_msgSend(MEMORY[0x24BE31CC0], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "lostModeIsActive");

    if (LOBYTE(v4[3]._os_unfair_lock_opaque) == v6)
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      LOBYTE(v4[3]._os_unfair_lock_opaque) = v6;
      os_unfair_lock_unlock(v4 + 2);
      v7 = (void *)MEMORY[0x227676638]();
      v8 = v4;
      HMFGetOSLogHandle();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        HMFBooleanToString();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = 138543618;
        v14 = v10;
        v15 = 2112;
        v16 = v11;
        _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Received notification lost mode is active: %@", (uint8_t *)&v13, 0x16u);

      }
      objc_autoreleasePoolPop(v7);
      objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "postNotificationName:object:", CFSTR("HMDLostModeManagerUpdatedNotification"), v8);

    }
  }

  objc_autoreleasePoolPop(v3);
}

void sub_2221993D0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDLostModeManagerExitLostModeWithAuthCompleteNotification(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  int v4;
  void *v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  objc_msgSend(MEMORY[0x24BE31CC0], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "needsLostModeExitAuth");

  v5 = (void *)MEMORY[0x227676638]();
  v6 = v2;
  HMFGetOSLogHandle();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v9;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Received lost mode exit auth notification, but findmy indicates device hasn't exited lost mode with auth", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138543362;
      v13 = v10;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEFAULT, "%{public}@Sending lost mode exit with auth complete notification", (uint8_t *)&v12, 0xCu);

    }
    objc_autoreleasePoolPop(v5);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "postNotificationName:object:", CFSTR("HMDLostModeManagerDidExitLostModeWithAuthCompleteNotification"), v6);

  }
}

void sub_22219DACC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219DC58(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219DDCC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219DF50(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219E0D4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219E2FC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219E48C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219EA84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219EB98(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22219F4D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v22 - 128));
  _Unwind_Resume(a1);
}

void __deleteAccountModel(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  objc_msgSend(a1, "accountRegistry");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removeAccount:", v3);

}

void __notifyDelegateAccountRemoved_167002(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  uint8_t buf[4];
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v3;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v15 = v9;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v6);
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = CFSTR("HMDAccountNotificationKey");
    v13 = v5;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v13, &v12, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "postNotificationName:object:userInfo:", CFSTR("HMDRemoteAccountManagerRemovedAccountNotification"), v7, v11);

  }
}

void sub_2221A13B8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2221A1B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  id *v12;

  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleUnregisteredDestination_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  const char *v14;
  void *v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  int v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v6)
    {
      v8 = (void *)MEMORY[0x227676638]();
      v9 = WeakRetained;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 40), "shortDescription");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "shortDescription");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543874;
        v22 = v11;
        v23 = 2112;
        v24 = v12;
        v25 = 2112;
        v26 = v13;
        v14 = "%{public}@Account handle, %@, failed to resolve, removing from account: %@";
LABEL_12:
        _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v21, 0x20u);

        goto LABEL_13;
      }
      goto LABEL_13;
    }
    if ((objc_msgSend(*(id *)(a1 + 32), "isEqual:", v5) & 1) == 0)
    {
      v8 = (void *)MEMORY[0x227676638]();
      v20 = WeakRetained;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 40), "shortDescription");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "shortDescription");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = 138543874;
        v22 = v11;
        v23 = 2112;
        v24 = v12;
        v25 = 2112;
        v26 = v13;
        v14 = "%{public}@Account handle, %@, now registered to account: %@";
        goto LABEL_12;
      }
LABEL_13:

      objc_autoreleasePoolPop(v8);
      objc_msgSend(*(id *)(a1 + 32), "removeHandle:", *(_QWORD *)(a1 + 40));
      goto LABEL_14;
    }
    if (*(_QWORD *)(a1 + 48))
    {
      v15 = (void *)MEMORY[0x227676638]();
      v16 = WeakRetained;
      HMFGetOSLogHandle();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 48);
        v21 = 138543618;
        v22 = v18;
        v23 = 2112;
        v24 = v19;
        _os_log_impl(&dword_2218F0000, v17, OS_LOG_TYPE_INFO, "%{public}@Removing unregistered device: %@", (uint8_t *)&v21, 0x16u);

      }
      objc_autoreleasePoolPop(v15);
      objc_msgSend(*(id *)(a1 + 32), "removeDevice:", *(_QWORD *)(a1 + 48));
    }
  }
LABEL_14:

}

void sub_2221A2F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221A35BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221A3F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221A40C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221A4714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  id *v19;
  id *v20;
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak((id *)(v22 - 72));
  _Unwind_Resume(a1);
}

void sub_2221A4C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__167320(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__167321(uint64_t a1)
{

}

void sub_2221A596C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2221A684C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,id a61)
{
  id *v61;

  objc_destroyWeak(v61);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_2221AC0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221AC19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221AC404(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221ADAB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2221ADB6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2221ADC48(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221ADD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221AE2D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2221AE4C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_2221AFB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221B0594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221B0798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221B0F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __documentationMaxSize_block_invoke()
{
  void *v0;
  id v1;

  v0 = (void *)MEMORY[0x24BE3F248];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", 0x200000);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setDefaultValue:forPreferenceKey:", v1, CFSTR("firmwareUpdateDocumentationMaxSize"));

}

uint64_t minimumApplyDurationAllowance()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("firmwareUpdateMinimumApplyDurationAllowance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntValue");

  return v3;
}

void sub_2221B6764(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void __maxSocketIdleDuration_block_invoke()
{
  void *v0;
  id v1;

  v0 = (void *)MEMORY[0x24BE3F248];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", 60);
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setDefaultValue:forPreferenceKey:", v1, CFSTR("firmwareUpdateMaxSocketIdleDuration"));

}

void sub_2221B72D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitEventTriggerEventReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  AWDHomeKitCharacteristicEvent *v24;
  uint64_t v25;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 76) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_54;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_56;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_56:
        *(_BYTE *)(a1 + 72) = v19 != 0;
        goto LABEL_51;
      case 2u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicEvent);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (AWDHomeKitCharacteristicEventReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_58;
        goto LABEL_50;
      case 3u:
        v24 = objc_alloc_init(AWDHomeKitLocationEvent);
        objc_storeStrong((id *)(a1 + 40), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitLocationEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 4u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicThresholdEvent);
        v25 = 24;
        goto LABEL_42;
      case 5u:
        v24 = objc_alloc_init(AWDHomeKitCalendarEvent);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || !HMDRemoteEventRouterProtoDisconnectMessageReadFrom(a2))
          goto LABEL_58;
        goto LABEL_50;
      case 6u:
        v24 = objc_alloc_init(AWDHomeKitSignificantTimeEvent);
        objc_storeStrong((id *)(a1 + 56), v24);
        if (!PBReaderPlaceMark() || (AWDHomeKitSignificantTimeEventReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_58;
        goto LABEL_50;
      case 7u:
        v24 = objc_alloc_init(AWDHomeKitCharacteristicThresholdEvent);
        v25 = 64;
LABEL_42:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitCharacteristicThresholdEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 8u:
        v24 = objc_alloc_init(AWDHomeKitPresenceEvent);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || !AWDHomeKitPresenceEventReadFrom((uint64_t)v24, a2))
          goto LABEL_58;
        goto LABEL_50;
      case 9u:
        v24 = objc_alloc_init(AWDHomeKitDurationEvent);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoDisconnectMessageReadFrom(a2))
        {
LABEL_50:
          PBReaderRecallMark();

LABEL_51:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_58:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_51;
    }
  }
}

void sub_2221BD640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221BD9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_2221BF94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221BFB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221C3538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221C3B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221C4838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221C5408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_2221C5A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__169631(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__169632(uint64_t a1)
{

}

void sub_2221C7A08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221C7BE4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221C8030(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_2221C83DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  os_unfair_lock_s *v26;
  uint64_t v27;

  os_unfair_lock_unlock(v26);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v27 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_2221C92F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2221C98F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  os_unfair_lock_s *v29;

  _Block_object_dispose(&a29, 8);
  os_unfair_lock_unlock(v29);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__169921(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__169922(uint64_t a1)
{

}

void sub_2221CA79C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_2221CC48C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221CCD88(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221CF620(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221CFF38(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221CFFE4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221D0398(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221D0444(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221D0D54(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221D23F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221D4DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221D6C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__170942(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__170943(uint64_t a1)
{

}

void sub_2221D8CC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2221D8EB8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2221D9D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2221DD7C8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_2221DDA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2221DDF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDNetworkRouterSupportAsString(unint64_t a1)
{
  void *v2;
  void *v3;
  unint64_t v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;

  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  v4 = a1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("Home Protection Mode Update"));
    v4 = a1 & 0xFFFFFFFFFFFFFFFELL;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v3, "addObject:", CFSTR("Accessory Protection Mode Update"));
  v4 &= ~2uLL;
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  objc_msgSend(v3, "addObject:", CFSTR("Add Network Router"));
  v4 &= ~4uLL;
  if ((a1 & 8) != 0)
  {
LABEL_5:
    objc_msgSend(v3, "addObject:", CFSTR("WiFi Unique PreShared Key"));
    v4 &= ~8uLL;
  }
LABEL_6:
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(","));
    v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = CFSTR("Unknown");
    if (!v4)
      v6 = CFSTR("Disabled");
    v5 = v6;
  }
  v7 = v5;

  return v7;
}

void sub_2221E3E20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221E3E98(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2221E3F10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDNetworkRouterAccessViolationControl *accessViolationControlWithType(uint64_t a1)
{
  HMDNetworkRouterAccessViolationControlOperation *v1;
  HMDNetworkRouterAccessViolationControl *v2;

  v1 = -[HMDNetworkRouterAccessViolationControlOperation initWithOperation:]([HMDNetworkRouterAccessViolationControlOperation alloc], "initWithOperation:", a1);
  v2 = -[HMDNetworkRouterAccessViolationControl initWithOperation:clientIdentifierList:]([HMDNetworkRouterAccessViolationControl alloc], "initWithOperation:clientIdentifierList:", v1, 0);

  return v2;
}

HMDNetworkRouterClientControl *clientControlWithOperationType(uint64_t a1)
{
  HMDNetworkRouterControlOperation *v1;
  HMDNetworkRouterClientConfiguration *v2;
  HMDNetworkRouterClientControlOperation *v3;
  void *v4;
  HMDNetworkRouterClientControl *v5;

  v1 = -[HMDNetworkRouterControlOperation initWithOperation:]([HMDNetworkRouterControlOperation alloc], "initWithOperation:", a1);
  v2 = objc_alloc_init(HMDNetworkRouterClientConfiguration);
  v3 = -[HMDNetworkRouterClientControlOperation initWithOperation:configuration:]([HMDNetworkRouterClientControlOperation alloc], "initWithOperation:configuration:", v1, v2);

  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithObject:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = -[HMDNetworkRouterClientControl initWithOperations:]([HMDNetworkRouterClientControl alloc], "initWithOperations:", v4);

  return v5;
}

void sub_2221F75C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__173794(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__173795(uint64_t a1)
{

}

void sub_222200B14(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_222200EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__174281(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__174282(uint64_t a1)
{

}

void sub_22220448C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__174647(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__174648(uint64_t a1)
{

}

uint64_t isRecordingAllowedForSettings(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  objc_msgSend(v1, "accessModeAtHome");
  if ((HMIsRecordingAllowedForCameraAccessMode() & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_msgSend(v1, "accessModeNotAtHome");
    v2 = HMIsRecordingAllowedForCameraAccessMode();
  }

  return v2;
}

void sub_222208F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222209808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t isAttributeIncludedInResidentSync(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  objc_msgSend(a1, "userInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("residentSyncInclude"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "BOOLValue");
  else
    v4 = 1;

  return v4;
}

uint64_t isRelationshipIncludedInResidentSync(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(a1, "userInfo");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("residentSyncInclude"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  return v3;
}

void sub_22220D3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22220D4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22220D5D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22220DFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 160), 8);
  _Unwind_Resume(a1);
}

id __destinationForAccountHandle(uint64_t a1, void *a2)
{
  void *v3;

  v3 = 0;
  if (a1 && a2)
  {
    objc_msgSend(a2, "remoteDestinationString");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

void sub_222212798(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_22221378C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__175811(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__175812(uint64_t a1)
{

}

void sub_222213944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222213D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222213EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222214024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222154A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222173FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__175964(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__175965(uint64_t a1)
{

}

void sub_22222151C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222221E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDUserConfirmationResponseAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 4)
    return off_24E78D418[a1 - 1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDUserConfirmationResponse %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id actionSetFromObject(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1;
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("objectReference"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "hmf_stringForKey:", CFSTR("objectType"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v3, "isEqualToString:", CFSTR("SCENE"))
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v4 = v2;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id valueWithAssistantUnits(void *a1, void *a2, void *a3, void *a4, unsigned int a5, int a6)
{
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  char v20;
  int v21;
  id v22;
  void *v23;
  char v24;
  void *v25;
  int v26;
  void *v27;
  id v28;
  int v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  double v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v48;
  id v49;
  void *v51;

  v49 = a4;
  v10 = a3;
  v11 = a2;
  v12 = a1;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  v14 = v10;
  v15 = v11;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "characteristicValueUnit:", v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
    v18 = v17;
  else
    v18 = v13;
  v19 = v18;
  v20 = objc_msgSend(v16, "supportsLocalization:", v14);

  if ((v20 & 1) != 0)
  {
    v21 = a6;
    v22 = v17;
    v23 = (void *)*MEMORY[0x24BDD5720];
    v24 = objc_msgSend(v22, "isEqualToString:", *MEMORY[0x24BDD5720]);
    v25 = (void *)*MEMORY[0x24BDD5728];
    if ((v24 & 1) != 0 || (v26 = objc_msgSend(v22, "isEqualToString:", *MEMORY[0x24BDD5728]), v27 = v22, v26))
    {
      if (v21)
        v27 = v23;
      else
        v27 = v25;
    }
    v28 = v27;

    if (!v13 || (v29 = objc_msgSend(v13, "isEqualToString:", v28), v30 = v13, v29))
      v30 = v28;
    v31 = v30;

    v19 = v31;
  }
  else
  {
    v23 = (void *)*MEMORY[0x24BDD5720];
    v25 = (void *)*MEMORY[0x24BDD5728];
  }

  objc_msgSend(v51, "characteristicValueUnit:", v15);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  v33 = v49;
  v34 = v32;
  v35 = v19;
  v36 = v33;
  if (objc_msgSend(v34, "isEqualToString:", v23))
  {
    v37 = v36;
    if (!objc_msgSend(v35, "isEqualToString:", v25))
      goto LABEL_22;
    objc_msgSend(v36, "floatValue");
    v38 = (void *)MEMORY[0x24BDD16E0];
    *(float *)&v39 = (float)(*(float *)&v39 * 1.8) + 32.0;
    goto LABEL_21;
  }
  v37 = v36;
  if (objc_msgSend(v34, "isEqualToString:", v25))
  {
    v37 = v36;
    if (objc_msgSend(v35, "isEqualToString:", v23))
    {
      objc_msgSend(v36, "floatValue");
      v38 = (void *)MEMORY[0x24BDD16E0];
      *(float *)&v39 = (float)((float)(*(float *)&v39 + -32.0) * 5.0) / 9.0;
LABEL_21:
      objc_msgSend(v38, "numberWithFloat:", v39);
      v37 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
LABEL_22:

  objc_msgSend(v51, "mapToAssistantCharacteristicValue:name:getActionType:", v37, v14, a5);
  v40 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v51, "mapToAssistantUnitName:", v35);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "mapCharacteristicValueType:", v14);
  v42 = (void *)objc_claimAutoreleasedReturnValue();

  v43 = v40;
  v44 = v42;
  v45 = v41;
  if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD56E0]))
  {
    v46 = objc_alloc_init(MEMORY[0x24BE812A8]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "BOOLValue"));
  }
  else if ((objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD56F0]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD5718]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD5700]) & 1) != 0
         || (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD5708]) & 1) != 0
         || objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD5710]))
  {
    v46 = objc_alloc_init(MEMORY[0x24BE812D8]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "integerValue"));
  }
  else if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD56E8]))
  {
    v46 = objc_alloc_init(MEMORY[0x24BE812C8]);
    objc_msgSend(v43, "floatValue");
    objc_msgSend(v46, "setValue:");
  }
  else if (objc_msgSend(v44, "isEqualToString:", *MEMORY[0x24BDD56F8]))
  {
    v46 = objc_alloc_init(MEMORY[0x24BE812F0]);
    v48 = (void *)objc_msgSend(v43, "copy");
    objc_msgSend(v46, "setValue:", v48);

  }
  else
  {
    v46 = 0;
  }
  objc_msgSend(v46, "setUnits:", v45);

  return v46;
}

HMDAssistantCharacteristicTuple *getTupleForCharacteristic(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  void *v13;
  HMDAssistantCharacteristicTuple *v14;

  v5 = a2;
  v6 = a1;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "characteristicType");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "mapToAssistantCharacteristicName:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "mapCharacteristicValueType:", v9);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)v10;
  if (v9)
    v12 = v10 == 0;
  else
    v12 = 1;
  if (v12)
  {
    v14 = 0;
  }
  else
  {
    valueWithAssistantUnits(0, v8, v9, v5, 1u, a3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[HMDAssistantCharacteristicTuple initWithAttribute:value:]([HMDAssistantCharacteristicTuple alloc], "initWithAttribute:value:", v9, v13);

  }
  return v14;
}

void __isMetricLocale_block_invoke()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x24BDBCEA0], "currentLocale");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKey:", *MEMORY[0x24BDBCB60]);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  isMetricLocale_isMetricLocale = objc_msgSend(v0, "BOOLValue");

}

uint64_t applyGuardTime()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  if (applyGuardTime_onceToken != -1)
    dispatch_once(&applyGuardTime_onceToken, &__block_literal_global_74_177709);
  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("firmwareUpdateApplyGuardTime"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = objc_msgSend(v2, "unsignedIntValue");
  return v3;
}

uint64_t __applyGuardTime_block_invoke()
{
  return objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96C338, CFSTR("firmwareUpdateApplyGuardTime"));
}

void sub_222226EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222274DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__178660(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__178661(uint64_t a1)
{

}

void sub_222227A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_22222841C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _approximateSizeOfPlistValue(const __CFString *a1, CFStringRef *a2, CFIndex *a3)
{
  CFTypeID v6;
  CFIndex Length;
  BOOL v8;
  char v9;
  CFIndex v10;
  CFStringRef v11;
  uint64_t v12;
  const __CFString *v13;
  CFIndex Count;
  CFIndex *p_usedBufLen;
  CFIndex v16;
  CFIndex v17;
  CFIndex ByteSize;
  uint64_t v20;
  CFIndex *v21;
  CFIndex usedBufLen;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  CFRange v27;

  if (!a1)
    return 0;
  v6 = CFGetTypeID(a1);
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  switch(v6)
  {
    case 7uLL:
      Length = CFStringGetLength(a1);
      usedBufLen = 0;
      v27.location = 0;
      v27.length = Length;
      if (CFStringGetBytes(a1, v27, 0x600u, 0, 0, 0, 0, &usedBufLen))
        v8 = usedBufLen == Length;
      else
        v8 = 0;
      v9 = !v8;
      v10 = Length << v9;
      v24[3] = v10;
      if (a2)
      {
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD260], 0, CFSTR("string value, approximate encoded size: %ld"), v10);
        goto LABEL_25;
      }
      break;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      break;
    case 0x10uLL:
      if (a2)
      {
        v13 = CFSTR("deleted value");
        goto LABEL_30;
      }
      break;
    case 0x12uLL:
      usedBufLen = 0;
      CFDictionaryApplyBlock();
      if (a2)
      {
        Count = CFDictionaryGetCount((CFDictionaryRef)a1);
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD260], 0, CFSTR("dictionary value, count: %ld, total nested objects: %ld, approximate encoded size: %ld"), Count, usedBufLen, v24[3]);
        goto LABEL_25;
      }
      break;
    case 0x13uLL:
      usedBufLen = 0;
      CFArrayGetCount((CFArrayRef)a1);
      p_usedBufLen = &usedBufLen;
      v20 = MEMORY[0x24BDAC760];
      if (a3)
        p_usedBufLen = a3;
      v21 = p_usedBufLen;
      CFArrayApplyBlock();
      if (a2)
      {
        v16 = CFArrayGetCount((CFArrayRef)a1);
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD260], 0, CFSTR("array value, count: %ld, tested nested objects: %ld, approximate encoded size: %ld"), v16, usedBufLen, v24[3], v20, 3221225472, ___approximateSizeOfPlistValue_block_invoke_2, &unk_24E78D690, &v23, v21);
        goto LABEL_25;
      }
      break;
    case 0x14uLL:
      v17 = CFDataGetLength((CFDataRef)a1);
      v24[3] = v17;
      if (a2)
      {
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD260], 0, CFSTR("data value, size: %ld"), v17);
LABEL_25:
        *a2 = v11;
      }
      break;
    case 0x15uLL:
      v26 = 1;
      if (a2)
      {
        v13 = CFSTR("BOOLean value");
        goto LABEL_30;
      }
      break;
    case 0x16uLL:
      ByteSize = CFNumberGetByteSize((CFNumberRef)a1);
      v24[3] = ByteSize;
      if (a2)
      {
        v13 = CFSTR("number value");
        goto LABEL_30;
      }
      break;
    default:
      if (v6 == 42)
      {
        v26 = 8;
        if (a2)
        {
          v13 = CFSTR("date value");
LABEL_30:
          *a2 = v13;
        }
      }
      break;
  }
  if (a3)
    ++*a3;
  v12 = v24[3];
  _Block_object_dispose(&v23, 8);
  return v12;
}

void sub_222228C84(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t ___approximateSizeOfPlistValue_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;

  v5 = _approximateSizeOfPlistValue(a2, 0, *(_QWORD *)(a1 + 40));
  result = _approximateSizeOfPlistValue(a3, 0, *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result + v5;
  return result;
}

uint64_t ___approximateSizeOfPlistValue_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = _approximateSizeOfPlistValue(a2, 0, *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) += result;
  return result;
}

void sub_2222290DC(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2222291F8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222229314(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222229F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18, id a19)
{
  id *v19;
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_22222B348(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22222B4E4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22222BBCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22222BEE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_22222C230(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void logAndPostNotification(void *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = (void *)MEMORY[0x24BDD16D0];
  v6 = a3;
  v7 = a2;
  v8 = a1;
  objc_msgSend(v5, "defaultCenter");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  logAndPostNotificationWithNotificationCenter(v9, v8, v7, v6);

}

void logAndPostNotificationWithNotificationCenter(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  int v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  objc_msgSend(v9, "description");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 138543874;
    v19 = v14;
    v20 = 2112;
    v21 = v8;
    v22 = 2112;
    v23 = v11;
    _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_INFO, "%{public}@Sending notification %@ with object %@", (uint8_t *)&v18, 0x20u);

  }
  objc_autoreleasePoolPop(v12);
  v15 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    HMFGetLogIdentifier();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 138544130;
    v19 = v17;
    v20 = 2112;
    v21 = v8;
    v22 = 2112;
    v23 = v11;
    v24 = 2112;
    v25 = v10;
    _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Sending notification %@ with object %@ and userInfo %@", (uint8_t *)&v18, 0x2Au);

  }
  objc_autoreleasePoolPop(v15);
  objc_msgSend(v7, "postNotificationName:object:userInfo:", v8, v9, v10);

}

void sub_2222343D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222234AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_2222350D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222237770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222379CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222237AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22223841C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_22223860C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2222388A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_222238B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_222238D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_222238F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2222390F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2222393DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__180514(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__180515(uint64_t a1)
{

}

id __descriptionsForRecordIDArray(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "na_map:", &__block_literal_global_393);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v1, "copy");

  return v2;
}

uint64_t ____descriptionsForRecordIDArray_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "hmbDescription");
}

id __descriptionsForRecordIDSet(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "na_map:", &__block_literal_global_392);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(v1, "copy");

  return v2;
}

uint64_t ____descriptionsForRecordIDSet_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "hmbDescription");
}

void sub_22223B494(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22223C3B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22223C4D0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22223C5A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222244934(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_222245C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222246284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22224648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222246A4C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222247C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __removeHomeState(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, uint64_t, _BYTE *);
  void *v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = a1;
  v4 = a2;
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v15 = 0x7FFFFFFFFFFFFFFFLL;
  v6 = MEMORY[0x24BDAC760];
  v7 = 3221225472;
  v8 = ____removeHomeState_block_invoke;
  v9 = &unk_24E78DD68;
  v5 = v4;
  v10 = v5;
  v11 = &v12;
  objc_msgSend(v3, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v6);
  if (v13[3] != 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(v3, "removeObjectAtIndex:", v6, v7, v8, v9);

  _Block_object_dispose(&v12, 8);
}

void sub_222248090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____removeHomeState_block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  int v9;

  objc_msgSend(a2, "accessory");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "uuid");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isEqual:", *(_QWORD *)(a1 + 32));

  if (v9)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

uint64_t __Block_byref_object_copy__181577(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__181578(uint64_t a1)
{

}

void sub_222249B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222249E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22224A470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22224A714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22224A9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22224ABA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__181748(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__181749(uint64_t a1)
{

}

void sub_22224AED0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22224CC30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&defaultStore_lock);
  _Unwind_Resume(a1);
}

void sub_22224CE24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&_testOnlyStore_lock);
  _Unwind_Resume(a1);
}

id __sendMessageWithFutureResult(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  HMDRemoteDeviceMessageDestination *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v26;
  _QWORD v27[4];
  id v28;
  id v29;
  id v30;

  v7 = a1;
  v30 = 0;
  v8 = (void *)MEMORY[0x24BE3F180];
  v9 = a4;
  v10 = a3;
  v11 = a2;
  objc_msgSend(v8, "futureWithPromise:", &v30);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "state");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "device");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v14)
  {
    v16 = v14;
  }
  else
  {
    objc_msgSend(v7, "dataSource");
    v26 = v12;
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "state");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "deviceIdentifier");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "deviceForIdentifier:", v19);
    v16 = (id)objc_claimAutoreleasedReturnValue();

    v12 = v26;
  }

  v20 = -[HMDRemoteDeviceMessageDestination initWithTarget:device:]([HMDRemoteDeviceMessageDestination alloc], "initWithTarget:device:", v11, v16);
  +[HMDRemoteMessage secureMessageWithName:qualityOfService:destination:messagePayload:restriction:](HMDRemoteMessage, "secureMessageWithName:qualityOfService:destination:messagePayload:restriction:", v10, -1, v20, v9, 17);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  v27[0] = MEMORY[0x24BDAC760];
  v27[1] = 3221225472;
  v27[2] = ____sendMessageWithFutureResult_block_invoke;
  v27[3] = &unk_24E799400;
  v28 = v7;
  v29 = v30;
  v22 = v7;
  objc_msgSend(v21, "setResponseHandler:", v27);
  objc_msgSend(v22, "homeManager");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "messageDispatcher");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "sendMessage:", v21);

  return v12;
}

void ____sendMessageWithFutureResult_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  v7 = (void *)MEMORY[0x227676638]();
  v8 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
  if (v5)
  {
    if (v10)
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v11;
      v15 = 2112;
      v16 = v5;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_ERROR, "%{public}@Message failed: %@", (uint8_t *)&v13, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
    objc_msgSend(*(id *)(a1 + 40), "rejectWithError:", v5);
  }
  else
  {
    if (v10)
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v12;
      v15 = 2112;
      v16 = v6;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_ERROR, "%{public}@Message completed with result: %@", (uint8_t *)&v13, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
    objc_msgSend(*(id *)(a1 + 40), "fulfillWithValue:", v6);
  }

}

void sub_222255488(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222255F34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222256444(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222577E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222257CD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225866C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222258808(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225A948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22225AD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_22225B21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id randomStringWithLength(uint64_t a1)
{
  uint64_t v1;
  void *i;

  v1 = a1;
  objc_msgSend(MEMORY[0x24BDD16A8], "stringWithCapacity:", a1);
  for (i = (void *)objc_claimAutoreleasedReturnValue(); v1; --v1)
    objc_msgSend(i, "appendFormat:", CFSTR("%c"), randomStringWithLength_characters[arc4random_uniform(0x5Cu)]);
  return i;
}

void sub_22225CC30(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225DF08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E1A4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E44C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E5F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E67C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E7E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E8B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225E988(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225EA5C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225EB10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225F79C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225F920(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225F990(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22225FAE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDRemoteEventRouterProtoConnectMessageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  HMDRemoteEventRouterProtoTopic *v24;
  uint64_t v25;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 2u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_40;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_42;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_40:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_42:
        *(_DWORD *)(a1 + 16) = v19;
        goto LABEL_43;
      case 3u:
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x24BE4EDC0]);
        v25 = 8;
        goto LABEL_30;
      case 4u:
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x24BE4EDC0]);
        v25 = 40;
LABEL_30:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
          goto LABEL_45;
        goto LABEL_37;
      case 5u:
        PBReaderReadString();
        v24 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend((id)a1, "addTopicFilterAdditions:", v24);
        goto LABEL_38;
      case 6u:
        v24 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend((id)a1, "addTopicAdditions:", v24);
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v24, a2))
        {
LABEL_37:
          PBReaderRecallMark();
LABEL_38:

LABEL_43:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_45:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_43;
    }
  }
}

__CFString *HMDCameraRecordingVideoCodecTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDCameraRecordingVideoCodecTypeH264");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDCameraRecordingVideoCodecTypeH265");
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingVideoCodecType %ld"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDCameraRecordingH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 < 3)
    return off_24E78E480[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingH264ProfileType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *HMDCameraRecordingH264LevelTypeAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E78E498[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingH264LevelType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void translateResolutionWidthHeight(void *a1, void *a2, uint64_t *a3)
{
  id v5;
  uint64_t v6;
  id v7;

  v7 = a1;
  v5 = a2;
  if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C3F8)
    && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C410) & 1) != 0)
  {
    v6 = 1;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C428)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C440) & 1) != 0)
  {
    v6 = 2;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C458)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C470) & 1) != 0)
  {
    v6 = 3;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C488)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C4A0) & 1) != 0)
  {
    v6 = 4;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C3F8)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C4B8) & 1) != 0)
  {
    v6 = 5;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C458)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C4D0) & 1) != 0)
  {
    v6 = 6;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C4E8)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C500) & 1) != 0)
  {
    v6 = 7;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C518)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C530) & 1) != 0)
  {
    v6 = 8;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C4D0)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C458) & 1) != 0)
  {
    v6 = 9;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C500)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C4E8) & 1) != 0)
  {
    v6 = 10;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C548)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C560) & 1) != 0)
  {
    v6 = 11;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C578)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C500) & 1) != 0)
  {
    v6 = 12;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C560)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C548) & 1) != 0)
  {
    v6 = 13;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C500)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C578) & 1) != 0)
  {
    v6 = 14;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C470)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C458) & 1) != 0)
  {
    v6 = 15;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C440)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C428) & 1) != 0)
  {
    v6 = 16;
  }
  else if (objc_msgSend(v7, "isEqualToNumber:", &unk_24E96C530)
         && (objc_msgSend(v5, "isEqualToNumber:", &unk_24E96C518) & 1) != 0)
  {
    v6 = 17;
  }
  else
  {
    v6 = 0;
  }
  *a3 = v6;

}

void sub_2222671FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222267BF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222267CAC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222268134(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222269C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226A668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226B23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226B964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226BBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226BE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22226CD4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 152));
  _Unwind_Resume(a1);
}

id logDescriptionForAccessory(void *a1)
{
  id v1;
  char isKindOfClass;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v1 = a1;
  if (v1)
  {
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();
    if ((isKindOfClass & 1) != 0)
      v3 = v1;
    else
      v3 = 0;
    v4 = v3;
    if ((isKindOfClass & 1) != 0)
      objc_msgSend(v1, "needsAirplayAccess");
    v6 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(v1, "name");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "uuid");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "identifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    HMFBooleanToString();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringWithFormat:", CFSTR("'%@' (%@ / %@, HAP=%@, Airplay=%@)"), v7, v8, v9, v10, v11);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_22226E1B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22226E40C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void ContinueRouterOperationOnWorkQueue(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  id v17;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  if (v7)
  {
    objc_msgSend(v7, "workQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __ContinueRouterOperationOnWorkQueue_block_invoke;
    v13[3] = &unk_24E790BD8;
    v14 = v7;
    v15 = v8;
    v16 = v9;
    v17 = v10;
    dispatch_async(v11, v13);

  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 23);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, void *))v9 + 2))(v9, v12);

  }
}

void sub_22226EFF4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

uint64_t credentialTypeForCredential(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _BOOL4 v5;

  v1 = a1;
  objc_msgSend(v1, "psk");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    v3 = 3;
  }
  else
  {
    objc_msgSend(v1, "macAddress");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4 != 0;

    v3 = 2 * v5;
  }

  return v3;
}

uint64_t getProtectionModeForAccessory(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "home");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "protectionMode");

  if (v3 && objc_msgSend(v1, "supportsNetworkProtection"))
    v4 = objc_msgSend(v1, "targetNetworkProtectionMode");
  else
    v4 = 3;

  return v4;
}

BOOL shouldManageAccessory(void *a1)
{
  id v1;
  _BOOL8 v2;
  void *v3;
  void *v4;

  v1 = a1;
  if ((objc_msgSend(v1, "supportsNetworkProtection") & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_msgSend(v1, "wiFiUniquePreSharedKey");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v2 = 1;
    }
    else
    {
      objc_msgSend(v1, "networkClientIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v2 = v4 != 0;

    }
  }

  return v2;
}

void sub_22226F648(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

HMDNetworkRouterCredential *networkRouterCredentialForAccessory(void *a1, void *a2)
{
  id v3;
  id v4;
  HMDNetworkRouterCredential *v5;
  void *v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(HMDNetworkRouterCredential);
  objc_msgSend(v3, "wiFiUniquePreSharedKey");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v3, "wiFiUniquePreSharedKey");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[HMDNetworkRouterCredential setPsk:](v5, "setPsk:", v7);

  }
  else
  {
    -[HMDNetworkRouterCredential setMacAddress:](v5, "setMacAddress:", v4);
  }

  return v5;
}

void sub_222272A28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222272B24(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitEventTriggerReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  AWDHomeKitEventTriggerEvent *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(AWDHomeKitEventTriggerEvent);
        objc_msgSend((id)a1, "addEvents:", v17);
        if (PBReaderPlaceMark() && (AWDHomeKitEventTriggerEventReadFrom((uint64_t)v17, a2) & 1) != 0)
          goto LABEL_40;
        goto LABEL_75;
      case 2u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 36) |= 8u;
        while (2)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              v14 = v20++ >= 9;
              if (v14)
              {
                v21 = 0;
                goto LABEL_58;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v21 = 0;
LABEL_58:
        v42 = v21 != 0;
        v43 = 33;
        goto LABEL_63;
      case 3u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 36) |= 4u;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v27 = 0;
                goto LABEL_62;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v27 = 0;
LABEL_62:
        v42 = v27 != 0;
        v43 = 32;
LABEL_63:
        *(_BYTE *)(a1 + v43) = v42;
        goto LABEL_73;
      case 4u:
        v17 = objc_alloc_init(AWDHomeKitPredicate);
        objc_storeStrong((id *)(a1 + 24), v17);
        if (PBReaderPlaceMark() && (AWDHomeKitPredicateReadFrom(v17, a2) & 1) != 0)
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_73:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_75:

        return 0;
      case 5u:
        v31 = 0;
        v32 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v33) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v33) = 0;
LABEL_67:
        v44 = 8;
        goto LABEL_72;
      case 6u:
        v37 = 0;
        v38 = 0;
        v33 = 0;
        *(_BYTE *)(a1 + 36) |= 2u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v33 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              v14 = v38++ >= 9;
              if (v14)
              {
                LODWORD(v33) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v33) = 0;
LABEL_71:
        v44 = 12;
LABEL_72:
        *(_DWORD *)(a1 + v44) = v33;
        goto LABEL_73;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_73;
    }
  }
}

id keyFromSelector(const char *a1)
{
  void *v1;
  void *v2;
  void *v3;
  int v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;

  NSStringFromSelector(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v1, "hasPrefix:", CFSTR("set")) || objc_msgSend(v1, "length") == 3)
    goto LABEL_6;
  objc_msgSend(v1, "substringWithRange:", 3, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "lowercaseString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "isEqualToString:", v3);

  if (!v4)
  {
    objc_msgSend(v2, "lowercaseString");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "substringWithRange:", 4, objc_msgSend(v1, "length") - 5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringByAppendingString:", v7);
    v8 = objc_claimAutoreleasedReturnValue();

    v1 = (void *)v8;
LABEL_6:
    v5 = v1;
    goto LABEL_7;
  }
  v5 = v1;

LABEL_7:
  return v5;
}

void setPropertyIMP(void *a1, const char *a2, void *a3)
{
  _QWORD *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  objc_class *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  objc_class *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  _QWORD *v34;
  __int16 v35;
  void *v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a3;
  v7 = (void *)MEMORY[0x227676638]();
  keyFromSelector(a2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "propertyIsReadOnly:", v8))
  {
    objc_msgSend((id)objc_opt_class(), "properties");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "objectForKey:", v8);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (objc_class *)objc_msgSend(v15, "classObj");

    if (v6 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      v21 = (void *)MEMORY[0x24BDBCE88];
      v22 = *MEMORY[0x24BDBCAB0];
      v23 = (void *)MEMORY[0x24BDD17C8];
      v24 = (objc_class *)objc_opt_class();
      NSStringFromClass(v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromClass(v16);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "stringWithFormat:", CFSTR("Property for parameter %@ was supplied as %@, but was expected to be %@."), v8, v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "exceptionWithName:reason:userInfo:", v22, v27, 0);
      v28 = (id)objc_claimAutoreleasedReturnValue();

      objc_exception_throw(v28);
    }
    if (v5[1])
    {
      if (v6)
      {
LABEL_9:
        v17 = (void *)v5[1];
        objc_msgSend(v8, "hmf_stringWithSmallestEncoding");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "setValue:forKey:", v6, v18);

        goto LABEL_10;
      }
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = (void *)v5[1];
      v5[1] = v19;

      if (v6)
        goto LABEL_9;
    }
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
  v9 = (void *)MEMORY[0x227676638]();
  v10 = v5;
  HMFGetOSLogHandle();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreSingleton dataVersion](HMDBackingStoreSingleton, "dataVersion");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544130;
    v30 = v12;
    v31 = 2112;
    v32 = v8;
    v33 = 2112;
    v34 = v10;
    v35 = 2112;
    v36 = v13;
    _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to write property %@ from %@, unwritable in homed data version %@.", buf, 0x2Au);

  }
  objc_autoreleasePoolPop(v9);
LABEL_10:

  objc_autoreleasePoolPop(v7);
}

void sub_222282A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222282DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222283EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_222284994(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStructuredDataTokenTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 + 2) < 0xF)
    return off_24E78EED8[a1 + 2];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown (%zd)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_222284DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t HMDStructuredDataErrorWithReason(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  id v10;
  void *v11;
  id v12;

  v9 = (objc_class *)MEMORY[0x24BDD17C8];
  v10 = a1;
  v11 = (void *)objc_msgSend([v9 alloc], "initWithFormat:arguments:", v10, &a9);

  objc_msgSend(MEMORY[0x24BDD1540], "hmfErrorWithCode:reason:", 15, v11);
  v12 = (id)objc_claimAutoreleasedReturnValue();

  return -2;
}

void sub_222287A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__188232(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__188233(uint64_t a1)
{

}

void sub_22228A99C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22228AA34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22228AB0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22228E764(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22228EA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22228EDD8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;

  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 144));
  _Unwind_Resume(a1);
}

void sub_22228EEF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22228EFCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222290AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222290E74(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__189636(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__189637(uint64_t a1)
{

}

void sub_22229129C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222913A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222914BC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222291610(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222916F0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222922B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22229BF70(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDUserDataControllerStateAsString(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if (a1 >= 4)
  {
    v2 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("Unknown state %@"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_24E78F740[a1];
  }
  return v1;
}

uint64_t HMDRemoteEventRouterProtoFetchEventsMessageReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  HMDRemoteEventRouterProtoTopic *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 3)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v20) = 0;
LABEL_35:
        *(_DWORD *)(a1 + 8) = v20;
      }
      else if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        objc_msgSend((id)a1, "addTopics:", v17);
        if (!PBReaderPlaceMark() || !HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_2222A12BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222A1594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222A654C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222A8AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2222A8C94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222AC568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222AD330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__194406(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__194407(uint64_t a1)
{

}

void sub_2222BAF50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222BAFC4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222BB098(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222BB16C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222BF648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__195353(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__195354(uint64_t a1)
{

}

void sub_2222C3E3C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C3FF0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C4554(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C45C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C4FC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C54B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C5A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27,id a28)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a27);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

void sub_2222C5B0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C5CF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C5D84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C5DE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C5F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2222C664C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C75B0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C87B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C8FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2222C9340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2222C9688(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C974C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C983C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C9924(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C9E60(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222C9F54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222CAE90(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2222CB664(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222CB6E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222CB75C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222CC0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222CC958(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2222CD45C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222CF6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222D2774(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2222D3BEC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2222D411C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222D44F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222D53BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222D66AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222D7F44(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222DA07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id a43)
{
  uint64_t v43;

  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(&a43);
  _Block_object_dispose((const void *)(v43 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t isIrrecoverableError(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v1 = a1;
  if (objc_msgSend(v1, "isHMError")
    && (objc_msgSend(v1, "code") == 90
     || objc_msgSend(v1, "code") == 79
     || objc_msgSend(v1, "code") == 52
     || objc_msgSend(v1, "code") == 96
     || objc_msgSend(v1, "code") == 13
     || objc_msgSend(v1, "code") == 11
     || objc_msgSend(v1, "code") == 55))
  {
    goto LABEL_30;
  }
  if (!objc_msgSend(v1, "isHAPError"))
    goto LABEL_40;
  if (objc_msgSend(v1, "code") != 20
    && objc_msgSend(v1, "code") != 21
    && objc_msgSend(v1, "code") != 22
    && objc_msgSend(v1, "code") != 23
    && objc_msgSend(v1, "code") != 26
    && objc_msgSend(v1, "code") != 25
    && objc_msgSend(v1, "code") != 34
    && objc_msgSend(v1, "code") != 9
    && objc_msgSend(v1, "code") != 12
    && objc_msgSend(v1, "code") != 10
    && objc_msgSend(v1, "code") != 11
    && objc_msgSend(v1, "code") != 18
    && objc_msgSend(v1, "code") != 7
    && objc_msgSend(v1, "code") != 3
    && objc_msgSend(v1, "code") != 15
    && objc_msgSend(v1, "code") != 17
    && objc_msgSend(v1, "code") != 16
    && objc_msgSend(v1, "code") != 35
    && objc_msgSend(v1, "code") != 36
    && objc_msgSend(v1, "code") != 30)
  {
    if (objc_msgSend(v1, "code") == 13
      || objc_msgSend(v1, "code") == 14
      || objc_msgSend(v1, "code") == 2
      || objc_msgSend(v1, "code") == 1)
    {
      objc_msgSend(v1, "userInfo");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "objectForKeyedSubscript:", *MEMORY[0x24BDD1398]);
      v4 = (void *)objc_claimAutoreleasedReturnValue();

      objc_opt_class();
      v5 = (objc_opt_isKindOfClass() & 1) != 0 ? v4 : 0;
      v6 = v5;

      if (v6)
      {
        v7 = (void *)MEMORY[0x24BDD1540];
        objc_msgSend(v6, "domain");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "errorWithDomain:code:userInfo:", v8, objc_msgSend(v6, "code"), 0);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v2 = isIrrecoverableError();

LABEL_41:
        goto LABEL_42;
      }
    }
LABEL_40:
    objc_msgSend(v1, "domain");
    v6 = (id)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v6, "isEqualToString:", *MEMORY[0x24BDDB490]);
    goto LABEL_41;
  }
LABEL_30:
  v2 = 1;
LABEL_42:

  return v2;
}

id _normalizeSetupCode(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  if (objc_msgSend(MEMORY[0x24BE1BBA8], "isValidSetupCode:", v1) || objc_msgSend(v1, "length") != 8)
  {
    v3 = v1;
  }
  else
  {
    v2 = (void *)objc_msgSend(v1, "mutableCopy");
    objc_msgSend(v2, "insertString:atIndex:", CFSTR("-"), 3);
    objc_msgSend(v2, "insertString:atIndex:", CFSTR("-"), 6);
    v3 = (id)objc_msgSend(v2, "copy");

  }
  return v3;
}

uint64_t __Block_byref_object_copy__196696(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__196697(uint64_t a1)
{

}

void sub_2222E31A0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222E5E70(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222E5F20(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222E60FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_2222E6288(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t AWDHomeKitPredicateReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  AWDHomeKitPresenceEvent *v17;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  BOOL v43;
  uint64_t v44;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(AWDHomeKitPresenceEvent);
          objc_msgSend(a1, "addPresenceEvents:", v17);
          if (PBReaderPlaceMark() && AWDHomeKitPresenceEventReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 2u:
          v19 = 0;
          v20 = 0;
          v21 = 0;
          a1[20] |= 2u;
          while (1)
          {
            v22 = *v3;
            v23 = *(_QWORD *)(a2 + v22);
            if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
            *(_QWORD *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0)
              goto LABEL_53;
            v19 += 7;
            v14 = v20++ >= 9;
            if (v14)
            {
              v21 = 0;
              goto LABEL_55;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_53:
          if (*(_BYTE *)(a2 + *v5))
            v21 = 0;
LABEL_55:
          v43 = v21 != 0;
          v44 = 17;
          goto LABEL_68;
        case 3u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          a1[20] |= 4u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v27 |= (unint64_t)(v30 & 0x7F) << v25;
              if (v30 < 0)
              {
                v25 += 7;
                v14 = v26++ >= 9;
                if (v14)
                {
                  v27 = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v27 = 0;
LABEL_59:
          v43 = v27 != 0;
          v44 = 18;
          goto LABEL_68;
        case 4u:
          v31 = 0;
          v32 = 0;
          v33 = 0;
          a1[20] |= 8u;
          while (2)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
              *(_QWORD *)(a2 + v34) = v35 + 1;
              v33 |= (unint64_t)(v36 & 0x7F) << v31;
              if (v36 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  v33 = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v33 = 0;
LABEL_63:
          v43 = v33 != 0;
          v44 = 19;
          goto LABEL_68;
        case 5u:
          v37 = 0;
          v38 = 0;
          v39 = 0;
          a1[20] |= 1u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v40 = *v3;
        v41 = *(_QWORD *)(a2 + v40);
        if (v41 == -1 || v41 >= *(_QWORD *)(a2 + *v4))
          break;
        v42 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
        *(_QWORD *)(a2 + v40) = v41 + 1;
        v39 |= (unint64_t)(v42 & 0x7F) << v37;
        if ((v42 & 0x80) == 0)
          goto LABEL_65;
        v37 += 7;
        v14 = v38++ >= 9;
        if (v14)
        {
          v39 = 0;
          goto LABEL_67;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_65:
      if (*(_BYTE *)(a2 + *v5))
        v39 = 0;
LABEL_67:
      v43 = v39 != 0;
      v44 = 16;
LABEL_68:
      a1[v44] = v43;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id getAccessoryAuthorizationsSettingsSerializedFilePath(void *a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;

  v1 = (void *)MEMORY[0x24BDD17C8];
  v2 = a1;
  v3 = (id)hh1ToHH2PerDeviceMigrationDirectoryPath;
  objc_msgSend(v1, "stringWithFormat:", CFSTR("%@/HMDHome-Authorization-Data-%@.plist"), v3, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_2222E9C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222EAD88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EAEFC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EAFAC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB040(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB0AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB220(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB2A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB574(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EB608(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EDF34(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EE768(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EE918(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222EEBD0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2222F5C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id createHMFNetAddressFromIPAddressString(void *a1)
{
  id v1;
  uint64_t v2;
  const char *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  _BYTE v10[28];
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v1 = objc_retainAutorelease(a1);
  v2 = objc_msgSend(v1, "UTF8String");
  if (v2)
    v3 = (const char *)v2;
  else
    v3 = "";
  *(_OWORD *)v10 = xmmword_2226A12B0;
  if (inet_pton(2, v3, &v10[4]) == 1
    || (*(_OWORD *)v10 = xmmword_2226A0FC0,
        *(_OWORD *)&v10[12] = *(__int128 *)((char *)&xmmword_2226A0FC0 + 12),
        inet_pton(30, v3, &v10[8]) == 1))
  {
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE3F1E0]), "initWithSocketAddress:", v10);
  }
  else
  {
    v5 = (void *)MEMORY[0x227676638]();
    objc_opt_class();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v10 = 138543618;
      *(_QWORD *)&v10[4] = v8;
      *(_WORD *)&v10[12] = 2112;
      *(_QWORD *)&v10[14] = v1;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@'%@' is not a valid IPv4 or IPv6 address string", v10, 0x16u);

    }
    objc_autoreleasePoolPop(v5);
    v4 = 0;
  }

  return v4;
}

void __validateHostNameForWANFirewallRule_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x24BDD1798], "regularExpressionWithPattern:options:error:", CFSTR("^(?=[^*]*(?:\\*(?:[^*]+|$)){0,2}$)[a-zA-Z0-9*](?:[a-zA-Z0-9*-]*[a-zA-Z0-9*])?$"), 0, 0);
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)validateHostNameForWANFirewallRule_componentRegex;
  validateHostNameForWANFirewallRule_componentRegex = v0;

}

uint64_t decodeStringFromJSONDictionary(void *a1, void *a2, int a3, _QWORD *a4)
{
  id v7;
  id v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  char isKindOfClass;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  id v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v22 = 0;
  v9 = decodeValueFromJSONDictionary(v7, v8, a3, &v22);
  v10 = v22;
  v11 = v10;
  if (v9)
  {
    if (v10)
    {
      v12 = v10;
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v14 = v12;
      else
        v14 = 0;
      v15 = v14;

      if ((isKindOfClass & 1) != 0 && objc_msgSend(v12, "length"))
      {
        *a4 = objc_retainAutorelease(v12);
        v16 = 1;
      }
      else
      {
        v17 = (void *)MEMORY[0x227676638]();
        objc_opt_class();
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        HMFGetOSLogHandle();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v24 = v20;
          v25 = 2112;
          v26 = v8;
          v27 = 2112;
          v28 = v7;
          _os_log_impl(&dword_2218F0000, v19, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' value: %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v17);
        v16 = 0;
      }

    }
    else
    {
      *a4 = 0;
      v16 = 1;
    }
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

uint64_t decodeValueFromJSONDictionary(void *a1, void *a2, int a3, _QWORD *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  int v17;
  void *v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  objc_msgSend(v7, "objectForKeyedSubscript:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
  {
    *a4 = objc_retainAutorelease(v9);
LABEL_8:
    v15 = 1;
    goto LABEL_9;
  }
  if (!a3)
  {
    *a4 = 0;
    goto LABEL_8;
  }
  v11 = (void *)MEMORY[0x227676638]();
  objc_opt_class();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  HMFGetOSLogHandle();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    HMFGetLogIdentifier();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = 138543874;
    v18 = v14;
    v19 = 2112;
    v20 = v8;
    v21 = 2112;
    v22 = v7;
    _os_log_impl(&dword_2218F0000, v13, OS_LOG_TYPE_ERROR, "%{public}@JSON contains no '%@' value: %@", (uint8_t *)&v17, 0x20u);

  }
  objc_autoreleasePoolPop(v11);
  v15 = 0;
LABEL_9:

  return v15;
}

uint64_t decodeUnsignedIntegerFromJSONDictionary(void *a1, void *a2, int a3, unint64_t a4, _QWORD *a5)
{
  id v9;
  id v10;
  int v11;
  id v12;
  void *v13;
  id v14;
  char isKindOfClass;
  void *v16;
  id v17;
  CFTypeID v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  id v25;
  uint8_t buf[4];
  void *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  id v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v9 = a1;
  v10 = a2;
  v25 = 0;
  v11 = decodeValueFromJSONDictionary(v9, v10, a3, &v25);
  v12 = v25;
  v13 = v12;
  if (v11)
  {
    if (v12)
    {
      v14 = v12;
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0)
        v16 = v14;
      else
        v16 = 0;
      v17 = v16;

      if ((isKindOfClass & 1) != 0
        && objc_msgSend(v14, "unsignedLongLongValue") <= a4
        && (v18 = CFGetTypeID(v14), v18 != CFBooleanGetTypeID()))
      {
        *a5 = objc_retainAutorelease(v14);
        v23 = 1;
      }
      else
      {
        v19 = (void *)MEMORY[0x227676638]();
        objc_opt_class();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        HMFGetOSLogHandle();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v27 = v22;
          v28 = 2112;
          v29 = v10;
          v30 = 2112;
          v31 = v9;
          _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' value: %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v19);
        v23 = 0;
      }

    }
    else
    {
      *a5 = 0;
      v23 = 1;
    }
  }
  else
  {
    v23 = 0;
  }

  return v23;
}

uint64_t decodeAddressFromJSONDictionary(void *a1, void *a2, int a3, _QWORD *a4)
{
  id v7;
  id v8;
  int v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  id v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  id v23;
  __int16 v24;
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v19 = 0;
  v9 = decodeStringFromJSONDictionary(v7, v8, a3, &v19);
  v10 = v19;
  v11 = v10;
  if (v9)
  {
    if (v10)
    {
      createHMFNetAddressFromIPAddressString(v10);
      v12 = (id)objc_claimAutoreleasedReturnValue();
      *a4 = v12;
      if (!v12)
      {
        v13 = (void *)MEMORY[0x227676638]();
        objc_opt_class();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        HMFGetOSLogHandle();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v21 = v16;
          v22 = 2112;
          v23 = v8;
          v24 = 2112;
          v25 = v7;
          _os_log_impl(&dword_2218F0000, v15, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' address: %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v13);
        goto LABEL_7;
      }
    }
    else
    {
      *a4 = 0;
    }
    v17 = 1;
    goto LABEL_10;
  }
LABEL_7:
  v17 = 0;
LABEL_10:

  return v17;
}

uint64_t decodeTimeFromJSONDictionary(void *a1, void *a2, _QWORD *a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v8;

  v8 = 0;
  v4 = decodeUnsignedIntegerFromJSONDictionary(a1, a2, 1, 0xFFFFFFFFuLL, &v8);
  v5 = v8;
  v6 = v5;
  if ((_DWORD)v4)
  {
    objc_msgSend(MEMORY[0x24BDBCE60], "dateWithTimeIntervalSinceReferenceDate:", (double)(unint64_t)objc_msgSend(v5, "unsignedLongValue"));
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v4;
}

uint64_t decodePortFromJSONDictionary(void *a1, void *a2, int a3, _WORD *a4, BOOL *a5)
{
  uint64_t v7;
  id v8;
  void *v9;
  __int16 v10;
  id v12;

  v12 = 0;
  v7 = decodeUnsignedIntegerFromJSONDictionary(a1, a2, a3, 0xFFFFuLL, &v12);
  v8 = v12;
  v9 = v8;
  if ((_DWORD)v7)
  {
    if (a5)
      *a5 = v8 != 0;
    if (v8)
      v10 = objc_msgSend(v8, "unsignedShortValue");
    else
      v10 = 0;
    *a4 = v10;
  }

  return v7;
}

void sub_2222FC7C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_2222FCDB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2222FCE80(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222FD3E0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2222FF64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2222FFC90(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_22230020C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_22230057C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222300968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__199605(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__199606(uint64_t a1)
{

}

id _findResidentMatching(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char isMKFResidentCurrentDevice;
  id v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v14[4];
  id v15;
  id v16;
  char v17;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v3, "idsIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "idsDestination");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDDeviceAddress addressWithIDSIdentifier:idsDestination:](HMDDeviceAddress, "addressWithIDSIdentifier:idsDestination:", v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  isMKFResidentCurrentDevice = _isMKFResidentCurrentDevice(v3);
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = ___findResidentMatching_block_invoke;
  v14[3] = &unk_24E790CD8;
  v17 = isMKFResidentCurrentDevice;
  v15 = v3;
  v16 = v7;
  v9 = v7;
  v10 = v3;
  objc_msgSend(v4, "objectsPassingTest:", v14);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "anyObject");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

uint64_t _isMKFResidentCurrentDevice(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  objc_msgSend(a1, "appleMediaAccessory");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "identifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (id)_mediaRouteIdentifier;
  v4 = objc_msgSend(v2, "isEqualToString:", v3);

  return v4;
}

uint64_t ___findResidentMatching_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  if (objc_msgSend(v3, "isCurrentDevice") && *(_BYTE *)(a1 + 48))
  {
    v4 = 1;
  }
  else
  {
    objc_msgSend(v3, "device");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "device");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v6, "isEqual:", v8) & 1) != 0)
      v4 = 1;
    else
      v4 = objc_msgSend(v3, "isDeviceEquivalentToDeviceAddress:", *(_QWORD *)(a1 + 40));

  }
  return v4;
}

void sub_2223029D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222302CC8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223037E0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222305120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  id *v39;

  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222306AB0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf)
{
  uint64_t v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;

  if (a2 == 1)
  {
    v12 = objc_begin_catch(a1);
    v13 = (void *)MEMORY[0x227676638]();
    HMFGetOSLogHandle();
    v14 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138543618;
      *(_QWORD *)((char *)&buf + 4) = v15;
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v12;
      _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_DEFAULT, "%{public}@### decode eventValue resulted in exception: %@", (uint8_t *)&buf, 0x16u);

    }
    objc_autoreleasePoolPop(v13);
    v16 = *(void **)(v11 + 128);
    *(_QWORD *)(v11 + 128) = 0;

    objc_end_catch();
    JUMPOUT(0x222306A74);
  }
  _Unwind_Resume(a1);
}

id HMDSortedServiceTypeUUIDsFromStrings(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", objc_msgSend(v1, "count"));
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(MEMORY[0x24BE3F210], "hmf_cachedInstanceForNSString:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v7), (_QWORD)v11);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (v8)
          objc_msgSend(v2, "addObject:", v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  objc_msgSend(v2, "sortUsingSelector:", sel_compare_);
  v9 = (void *)objc_msgSend(v2, "copy");

  return v9;
}

id serviceTypeUUIDsForAccessory(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a1, "services");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "count"))
  {
    +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v1, "count"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v17 = 0u;
    v4 = v1;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v15 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
          objc_msgSend(v9, "type", (_QWORD)v14);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v2, "shouldFilterServiceOfType:", v10) & 1) == 0)
          {
            objc_msgSend(v9, "type");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v3, "addObject:", v11);

          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
      }
      while (v6);
    }

    v12 = (void *)objc_msgSend(v3, "copy");
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

void HMDPopulateAccessoryModelFromHAPAccessory(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  int v45;
  void *v46;
  NSObject *v47;
  _BOOL4 v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  unsigned __int8 v62;
  uint8_t buf[4];
  void *v64;
  __int16 v65;
  void *v66;
  __int16 v67;
  void *v68;
  __int16 v69;
  void *v70;
  __int16 v71;
  void *v72;
  __int16 v73;
  id v74;
  _QWORD v75[3];
  _QWORD v76[3];
  _QWORD v77[3];
  _QWORD v78[5];

  v78[3] = *MEMORY[0x24BDAC8D0];
  v7 = a1;
  v8 = a2;
  v9 = a4;
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", a3);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setCertificationStatus:", v10);

  objc_msgSend(v8, "name");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v11, "copy");
  objc_msgSend(v7, "setProvidedName:", v12);

  objc_msgSend(v8, "category");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (v13)
  {
    v15 = v13;
  }
  else
  {
    +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "categoryForOther");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "identifier");
    v15 = (id)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(v7, "setAccessoryCategory:", v15);
  objc_msgSend(v7, "setInitialCategoryIdentifier:", v15);
  objc_msgSend(v8, "model");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setModel:", v18);

  objc_msgSend(v8, "model");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setInitialModel:", v19);

  objc_msgSend(v8, "manufacturer");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setManufacturer:", v20);

  objc_msgSend(v8, "manufacturer");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setInitialManufacturer:", v21);

  objc_msgSend(v8, "firmwareVersion");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setFirmwareVersion:", v22);

  serviceTypeUUIDsForAccessory(v8);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v59 = v23;
  if (v23)
  {
    HMDSortedServiceTypeUUIDsFromStrings(v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setInitialServiceTypes:", v24);

  }
  else
  {
    objc_msgSend(v7, "setInitialServiceTypes:", 0);
  }
  v60 = v15;
  objc_msgSend(v8, "serialNumber");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSerialNumber:", v25);

  objc_msgSend(v8, "sleepInterval");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSleepInterval:", v26);

  if (v9)
  {
    objc_msgSend(v7, "setHostAccessory:", v9);
    objc_msgSend(v9, "room");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setRoom:", v27);

  }
  v58 = v9;
  v77[0] = CFSTR("HM.serverIdentifier");
  objc_msgSend(v8, "serverIdentifier");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v78[0] = v28;
  v77[1] = CFSTR("HM.instanceID");
  objc_msgSend(v8, "instanceID");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v78[1] = v29;
  v77[2] = CFSTR("linkType");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v8, "linkType"));
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v78[2] = v30;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v78, v77, 3);
  v31 = objc_claimAutoreleasedReturnValue();

  v57 = (void *)v31;
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithObject:", v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v8, "linkType") == 1)
  {
    objc_msgSend(v8, "servicesOfType:", CFSTR("00000701-0000-1000-8000-0026BB765291"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "count");

    if (v34)
    {
      v75[0] = CFSTR("HM.serverIdentifier");
      objc_msgSend(v8, "serverIdentifier");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v76[0] = v35;
      v75[1] = CFSTR("HM.instanceID");
      objc_msgSend(v8, "instanceID");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      v75[2] = CFSTR("linkType");
      v76[1] = v36;
      v76[2] = &unk_24E96CC08;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v76, v75, 3);
      v37 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v32, "addObject:", v37);
    }
  }
  objc_msgSend(v7, "setTransportInformation:", v32);
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", objc_msgSend(v8, "communicationProtocol"));
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setCommunicationProtocol:", v38);

  objc_msgSend(v8, "uniqueIdentifier");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setUniqueIdentifier:", v39);

  objc_msgSend(v8, "identifier");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setIdentifier:", v40);

  objc_msgSend(v8, "identifier");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v62 = 0;
  objc_msgSend(MEMORY[0x24BE1BC08], "systemStore");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v61 = 0;
  objc_msgSend(v42, "readPublicKeyForAccessoryName:registeredWithHomeKit:error:", v41, &v62, &v61);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v44 = v61;

  v45 = v62;
  v46 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v47 = objc_claimAutoreleasedReturnValue();
  v48 = os_log_type_enabled(v47, OS_LOG_TYPE_INFO);
  if (!v44 && v41 && v43 && v45)
  {
    if (v48)
    {
      HMFGetLogIdentifier();
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "name");
      v55 = v32;
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      v64 = v49;
      v65 = 2112;
      v66 = v50;
      v67 = 2112;
      v68 = v41;
      v69 = 2112;
      v70 = v43;
      _os_log_impl(&dword_2218F0000, v47, OS_LOG_TYPE_INFO, "%{public}@Accessory %@ setting pairing username and pubkey to ('%@', '%@')", buf, 0x2Au);

      v32 = v55;
    }

    objc_autoreleasePoolPop(v46);
    objc_msgSend(v7, "setPairingUsername:", v41);
    objc_msgSend(v7, "setPublicKey:", v43);
  }
  else
  {
    if (v48)
    {
      HMFGetLogIdentifier();
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "providedName");
      v56 = v32;
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      HMFBooleanToString();
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544642;
      v64 = v51;
      v65 = 2112;
      v66 = v52;
      v67 = 2112;
      v68 = v41;
      v69 = 2112;
      v70 = v43;
      v71 = 2112;
      v72 = v53;
      v73 = 2112;
      v74 = v44;
      _os_log_impl(&dword_2218F0000, v47, OS_LOG_TYPE_INFO, "%{public}@Accessory %@ - failed to read public key(%@)/pairing username(%@) homeKitRegistered(%@) - error %@", buf, 0x3Eu);

      v32 = v56;
    }

    objc_autoreleasePoolPop(v46);
    v9 = v58;
  }
  objc_msgSend(v8, "server");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  +[HMDHome updateCHIPPropertiesOnMKFAccessoryModel:forAddedHAPAccessoryServer:](HMDHome, "updateCHIPPropertiesOnMKFAccessoryModel:forAddedHAPAccessoryServer:", v7, v54);

}

id HMDNewModelsFromHAPServices(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  char v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  id obj;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  id v66;
  HMDCharacteristicMetadata *v67;
  HMDCharacteristicMetadata *v68;
  void *v69;
  void *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _BYTE v79[128];
  _QWORD v80[4];
  _QWORD v81[4];
  _BYTE v82[128];
  uint64_t v83;

  v83 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v55 = a2;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v3, "count"));
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  v74 = 0u;
  obj = v3;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v79, 16);
  if (v5)
  {
    v6 = v5;
    v59 = *(_QWORD *)v72;
    v53 = v4;
    do
    {
      v7 = 0;
      v56 = v6;
      do
      {
        if (*(_QWORD *)v72 != v59)
          objc_enumerationMutation(obj);
        v60 = v7;
        v8 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * v7);
        objc_msgSend(v8, "type");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v4, "shouldFilterServiceOfType:", v9);

        if ((v10 & 1) == 0)
        {
          objc_msgSend(v8, "instanceID");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v55, "materializeOrCreateServicesRelationWithInstanceID:createdNew:", v11, 0);
          v12 = (void *)objc_claimAutoreleasedReturnValue();

          v13 = objc_alloc(MEMORY[0x24BDD1880]);
          objc_msgSend(v8, "type");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = (void *)objc_msgSend(v13, "initWithUUIDString:", v14);
          objc_msgSend(v12, "setServiceType:", v15);

          objc_msgSend(v8, "linkedServices");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = (void *)objc_msgSend(v16, "copy");
          objc_msgSend(v12, "setLinkedServices:", v17);

          objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", objc_msgSend(v8, "serviceProperties"));
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "setServiceProperties:", v18);

          objc_msgSend(v54, "addObject:", v12);
          v19 = v8;
          v64 = v12;
          +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = (void *)MEMORY[0x24BDBCEF0];
          objc_msgSend(v19, "characteristics");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "setWithCapacity:", objc_msgSend(v22, "count"));
          v63 = (void *)objc_claimAutoreleasedReturnValue();

          v77 = 0u;
          v78 = 0u;
          v75 = 0u;
          v76 = 0u;
          v58 = v19;
          objc_msgSend(v19, "characteristics");
          v66 = (id)objc_claimAutoreleasedReturnValue();
          v23 = objc_msgSend(v66, "countByEnumeratingWithState:objects:count:", &v75, v82, 16);
          if (v23)
          {
            v24 = v23;
            v25 = *(_QWORD *)v76;
            v61 = *(_QWORD *)v76;
            v62 = v20;
            do
            {
              v26 = 0;
              v65 = v24;
              do
              {
                if (*(_QWORD *)v76 != v25)
                  objc_enumerationMutation(v66);
                v27 = *(void **)(*((_QWORD *)&v75 + 1) + 8 * v26);
                objc_msgSend(v27, "type");
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                v29 = objc_msgSend(v20, "shouldFilterCharacteristicOfType:", v28);

                if ((v29 & 1) == 0)
                {
                  objc_msgSend(v27, "metadata");
                  v30 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v30, "constraints");
                  v70 = (void *)objc_claimAutoreleasedReturnValue();
                  v67 = [HMDCharacteristicMetadata alloc];
                  objc_msgSend(v70, "minimumValue");
                  v31 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v70, "maximumValue");
                  v32 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v70, "stepValue");
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v70, "maxLength");
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v70, "validValues");
                  v35 = (void *)objc_claimAutoreleasedReturnValue();
                  v69 = v30;
                  objc_msgSend(v30, "format");
                  v36 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v30, "units");
                  v37 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v30, "manufacturerDescription");
                  v38 = (void *)objc_claimAutoreleasedReturnValue();
                  v68 = -[HMDCharacteristicMetadata initWithMinimumValue:maximumValue:stepValue:maxLength:validValues:format:units:manufacturerDescription:](v67, "initWithMinimumValue:maximumValue:stepValue:maxLength:validValues:format:units:manufacturerDescription:", v31, v32, v33, v34, v35, v36, v37, v38);

                  v39 = (void *)MEMORY[0x24BDBCED8];
                  v80[0] = CFSTR("characteristicInstanceID");
                  objc_msgSend(v27, "instanceID");
                  v40 = (void *)objc_claimAutoreleasedReturnValue();
                  v81[0] = v40;
                  v80[1] = CFSTR("characteristicType");
                  objc_msgSend(v27, "type");
                  v41 = (void *)objc_claimAutoreleasedReturnValue();
                  v81[1] = v41;
                  v80[2] = CFSTR("characteristicProperties");
                  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", objc_msgSend(v27, "properties"));
                  v42 = (void *)objc_claimAutoreleasedReturnValue();
                  v81[2] = v42;
                  v80[3] = CFSTR("characteristicMetadata");
                  -[HMDCharacteristicMetadata dictionaryRepresentation](v68, "dictionaryRepresentation");
                  v43 = (void *)objc_claimAutoreleasedReturnValue();
                  v81[3] = v43;
                  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v81, v80, 4);
                  v44 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v39, "dictionaryWithDictionary:", v44);
                  v45 = (void *)objc_claimAutoreleasedReturnValue();

                  v20 = v62;
                  objc_msgSend(v69, "format");
                  v46 = (void *)objc_claimAutoreleasedReturnValue();
                  +[HMDServiceTransaction cd_modelTypeForCharacteristicFormat:](HMDServiceTransaction, "cd_modelTypeForCharacteristicFormat:", v46);
                  v47 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v27, "instanceID");
                  v48 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v64, "materializeOrCreateCharacteristicsRelationOfType:instanceID:createdNew:", v47, v48, 0);
                  v49 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v49, "pr_updateWithDictionary:", v45);
                  objc_msgSend(v63, "addObject:", v49);

                  v25 = v61;
                  v24 = v65;

                }
                ++v26;
              }
              while (v24 != v26);
              v24 = objc_msgSend(v66, "countByEnumeratingWithState:objects:count:", &v75, v82, 16);
            }
            while (v24);
          }

          v50 = (void *)objc_msgSend(v63, "copy");
          v4 = v53;
          v6 = v56;
        }
        v7 = v60 + 1;
      }
      while (v60 + 1 != v6);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v79, 16);
    }
    while (v6);
  }

  v51 = (void *)objc_msgSend(v54, "copy");
  return v51;
}

id HMDAddToTransactionBlockFromHAPAccessoryModel(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  id v57;
  uint8_t v58[128];
  uint8_t buf[4];
  void *v60;
  __int16 v61;
  void *v62;
  __int16 v63;
  id v64;
  __int16 v65;
  void *v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v51 = a1;
  v9 = a2;
  v10 = a3;
  v50 = a4;
  v11 = a5;
  HMDCastIfManagedObjectBSORepresentable(v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = 0;
  objc_msgSend(v12, "hmd_modelsWithChangeType:detached:createManagedObject:error:", 1, 1, 0, &v57);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v57;
  objc_msgSend(v13, "firstObject");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v16 = v15;
  else
    v16 = 0;
  v17 = v16;

  if (v17)
  {
    objc_msgSend(v17, "roomUUID");
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v18)
    {
      objc_msgSend(v10, "roomForEntireHome");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "uuid");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "UUIDString");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "setRoomUUID:", v21);

    }
    objc_msgSend(v11, "uuidForKey:", CFSTR("HMDHostAccessoryIdentifierMessageKey"));
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v49 = v17;
    if (v48)
    {
      objc_msgSend(v17, "hostAccessoryUUID");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      v23 = (void *)MEMORY[0x227676638]();
      HMFGetOSLogHandle();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_INFO);
      if (v22)
      {
        if (v25)
        {
          HMFGetLogIdentifier();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v49, "hostAccessoryUUID");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v60 = v26;
          v61 = 2112;
          v62 = v48;
          v63 = 2112;
          v64 = v9;
          v65 = 2112;
          v66 = v27;
          _os_log_impl(&dword_2218F0000, v24, OS_LOG_TYPE_INFO, "%{public}@Not setting host UUID: %@ from message on accessory model: %@ as it was already set on the model to: %@", buf, 0x2Au);

        }
        objc_autoreleasePoolPop(v23);
        v17 = v49;
      }
      else
      {
        if (v25)
        {
          HMFGetLogIdentifier();
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543874;
          v60 = v29;
          v61 = 2112;
          v62 = v48;
          v63 = 2112;
          v64 = v9;
          _os_log_impl(&dword_2218F0000, v24, OS_LOG_TYPE_INFO, "%{public}@Setting host UUID: %@ from message on accessory model: %@", buf, 0x20u);

        }
        objc_autoreleasePoolPop(v23);
        objc_msgSend(v48, "UUIDString");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = v49;
        objc_msgSend(v49, "setHostAccessoryUUID:", v30);

      }
    }
    objc_msgSend(v10, "uuid");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setParentUUIDIfNotNil:", v31);

    objc_msgSend(v17, "setConfigurationTracker:", v50);
    objc_msgSend(v51, "add:withMessage:", v17, v11);
    v55 = 0u;
    v56 = 0u;
    v53 = 0u;
    v54 = 0u;
    objc_msgSend(v9, "services");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v53, v58, 16);
    if (v33)
    {
      v34 = v33;
      v44 = v12;
      v45 = v11;
      v46 = v10;
      v47 = v9;
      v35 = *(_QWORD *)v54;
      while (2)
      {
        v36 = 0;
        v37 = v14;
        do
        {
          if (*(_QWORD *)v54 != v35)
            objc_enumerationMutation(v32);
          HMDCastIfManagedObjectBSORepresentable(*(void **)(*((_QWORD *)&v53 + 1) + 8 * v36));
          v38 = (void *)objc_claimAutoreleasedReturnValue();
          v52 = v37;
          objc_msgSend(v38, "hmd_modelsWithChangeType:detached:createManagedObject:error:", 1, 0, 0, &v52);
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = v52;

          objc_msgSend(v39, "firstObject");
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v41 = v40;
          else
            v41 = 0;
          v42 = v41;

          if (!v42)
          {
            v14 = v14;

            v28 = v14;
            goto LABEL_29;
          }
          objc_msgSend(v42, "setConfigurationTracker:", v50);
          objc_msgSend(v51, "add:", v42);

          ++v36;
          v37 = v14;
        }
        while (v34 != v36);
        v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v53, v58, 16);
        if (v34)
          continue;
        break;
      }
      v28 = 0;
LABEL_29:
      v10 = v46;
      v9 = v47;
      v12 = v44;
      v11 = v45;
    }
    else
    {
      v28 = 0;
    }

    v17 = v49;
  }
  else
  {
    v14 = v14;
    v28 = v14;
  }

  return v28;
}

HMDManagedObjectCodingModel *HMDRemoteAddCodingModel()
{
  HMDManagedObjectCodingModel *v0;
  void *v1;
  HMDManagedObjectCodingModel *v2;

  v0 = [HMDManagedObjectCodingModel alloc];
  +[HMDCoreData managedObjectModel](HMDCoreData, "managedObjectModel");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = -[HMDManagedObjectCodingModel initWithModel:configNamespace:rootEntityName:](v0, "initWithModel:configNamespace:rootEntityName:", v1, CFSTR("remoteAdd"), CFSTR("MKFHAPAccessory"));

  return v2;
}

void sub_22230B524(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22230B5A4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22230B624(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222314168(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223141E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222314C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  __HMFActivityScopeLeave();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223184E4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x3A0]);
  _Unwind_Resume(a1);
}

__CFString *HMDFMFStatusAsString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E791150[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDFMFStatus %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *changeTypeAsNSString(unint64_t a1)
{
  if (a1 < 4)
    return off_24E791190[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("<UNKNOWN %lu>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void __sort(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t j;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t k;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  NSObject *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id obj;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint8_t buf[4];
  void *v57;
  __int16 v58;
  void *v59;
  _BYTE v60[128];
  _BYTE v61[128];
  _BYTE v62[128];
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "count") >= 2)
  {
    v2 = (void *)objc_msgSend(v1, "mutableCopy");
    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v1, "count"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0u;
    v36 = v1;
    v4 = v1;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v52, v62, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v53;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v53 != v7)
            objc_enumerationMutation(v4);
          objc_msgSend(*(id *)(*((_QWORD *)&v52 + 1) + 8 * i), "change", v36);
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "uuid");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v3, "addObject:", v10);

        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v52, v62, 16);
      }
      while (v6);
    }

    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v4, "count"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v4, "count"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v2, "count");
    v13 = 0;
    v37 = v12 & ~(v12 >> 63);
    v38 = v4;
    v41 = v2;
    while (objc_msgSend(v2, "count", v36))
    {
      v39 = v13;
      v50 = 0u;
      v51 = 0u;
      v48 = 0u;
      v49 = 0u;
      obj = (id)objc_msgSend(v2, "copy");
      v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v48, v61, 16);
      if (v14)
      {
        v15 = v14;
        v43 = *(_QWORD *)v49;
        do
        {
          for (j = 0; j != v15; ++j)
          {
            if (*(_QWORD *)v49 != v43)
              objc_enumerationMutation(obj);
            v17 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * j);
            objc_msgSend(MEMORY[0x24BDBCEF0], "set");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "change");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "parentUUID");
            v20 = (void *)objc_claimAutoreleasedReturnValue();

            if (v20)
            {
              objc_msgSend(v17, "change");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "parentUUID");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v18, "addObject:", v22);

            }
            objc_msgSend(v17, "dependentUUIDs");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "allObjects");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "addObjectsFromArray:", v24);

            v46 = 0u;
            v47 = 0u;
            v44 = 0u;
            v45 = 0u;
            v25 = v18;
            v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v60, 16);
            if (v26)
            {
              v27 = v26;
              v28 = *(_QWORD *)v45;
              while (2)
              {
                for (k = 0; k != v27; ++k)
                {
                  if (*(_QWORD *)v45 != v28)
                    objc_enumerationMutation(v25);
                  v30 = *(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * k);
                  if (objc_msgSend(v3, "containsObject:", v30)
                    && !objc_msgSend(v11, "containsObject:", v30))
                  {

                    goto LABEL_29;
                  }
                }
                v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v44, v60, 16);
                if (v27)
                  continue;
                break;
              }
            }

            objc_msgSend(v40, "addObject:", v17);
            objc_msgSend(v17, "change");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v31, "uuid");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "addObject:", v32);

            objc_msgSend(v41, "removeObject:", v17);
LABEL_29:

          }
          v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v48, v61, 16);
        }
        while (v15);
      }

      v4 = v38;
      v13 = v39 + 1;
      v2 = v41;
      if (v39 == v37)
      {
        v33 = (void *)MEMORY[0x227676638]();
        HMFGetOSLogHandle();
        v34 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v57 = v35;
          v58 = 2112;
          v59 = v41;
          _os_log_impl(&dword_2218F0000, v34, OS_LOG_TYPE_ERROR, "%{public}@Possible circular dependency in %@, trying to continue", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v33);
        objc_msgSend(v40, "addObjectsFromArray:", v41);
        objc_msgSend(v41, "removeAllObjects");
        break;
      }
    }
    objc_msgSend(v4, "setArray:", v40);

    v1 = v36;
  }

}

void sub_22231EC9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22231F0D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __identifierForParentUUID(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = __identifierForParentUUID_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&__identifierForParentUUID_onceToken, &__block_literal_global_942);
  v3 = objc_alloc(MEMORY[0x24BDD1880]);
  v4 = __identifierForParentUUID_namespace;
  objc_msgSend(v2, "UUIDString");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "dataUsingEncoding:", 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v3, "initWithNamespace:data:", v4, v6);

  return v7;
}

void ____identifierForParentUUID_block_invoke()
{
  uint64_t v0;
  void *v1;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("497A934F-F7DC-4596-BA43-9B1BBA077D55"));
  v1 = (void *)__identifierForParentUUID_namespace;
  __identifierForParentUUID_namespace = v0;

}

id __HMDDeviceCapabilitiesModelCodingKeyMapping()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  _QWORD v63[61];
  _QWORD v64[63];

  v64[61] = *MEMORY[0x24BDAC8D0];
  v63[0] = CFSTR("HM.keychainSync");
  NSStringFromSelector(sel_supportsKeychainSync);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v64[0] = v62;
  v63[1] = CFSTR("HM.deviceSetup");
  NSStringFromSelector(sel_supportsDeviceSetup);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v64[1] = v61;
  v63[2] = CFSTR("HM.keyTransferClient");
  NSStringFromSelector(sel_supportsKeyTransferClient);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  v64[2] = v60;
  v63[3] = CFSTR("HM.keyTransferServer");
  NSStringFromSelector(sel_supportsKeyTransferServer);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v64[3] = v59;
  v63[4] = CFSTR("HM.standalone");
  NSStringFromSelector(sel_supportsStandaloneMode);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v64[4] = v58;
  v63[5] = CFSTR("HM.cloudDataSync");
  NSStringFromSelector(sel_supportsCloudDataSync);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v64[5] = v57;
  v63[6] = CFSTR("HM.WHA");
  NSStringFromSelector(sel_supportsWholeHouseAudio);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v64[6] = v56;
  v63[7] = CFSTR("HM.assistantAC");
  NSStringFromSelector(sel_supportsAssistantAccessControl);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v64[7] = v55;
  v63[8] = CFSTR("HM.resident");
  NSStringFromSelector(sel_residentCapable);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v64[8] = v54;
  v63[9] = CFSTR("HM.remoteGateway");
  NSStringFromSelector(sel_remoteGatewayCapable);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  v64[9] = v53;
  v63[10] = CFSTR("HM.homeInvitation");
  NSStringFromSelector(sel_supportsHomeInvitation);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v64[10] = v52;
  v63[11] = CFSTR("HM.targetControl");
  NSStringFromSelector(sel_supportsTargetControl);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  v64[11] = v51;
  v63[12] = CFSTR("HM.multiUser");
  NSStringFromSelector(sel_supportsMultiUser);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  v64[12] = v50;
  v63[13] = CFSTR("HM.homeLevelLocationServiceSetting");
  NSStringFromSelector(sel_supportsHomeLevelLocationServiceSetting);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v64[13] = v49;
  v63[14] = CFSTR("HM.restart");
  NSStringFromSelector(sel_supportsCompanionInitiatedRestart);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  v64[14] = v48;
  v63[15] = CFSTR("HM.obliterate");
  NSStringFromSelector(sel_supportsCompanionInitiatedObliterate);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v64[15] = v47;
  v63[16] = CFSTR("HM.camRec");
  NSStringFromSelector(sel_supportsCameraRecording);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v64[16] = v46;
  v63[17] = CFSTR("HM.routerManagement");
  NSStringFromSelector(sel_supportsRouterManagement);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  v64[17] = v45;
  v63[18] = CFSTR("HM.shortcutAction");
  NSStringFromSelector(sel_supportsShortcutActions);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v64[18] = v44;
  v63[19] = CFSTR("HM.mediaActions");
  NSStringFromSelector(sel_supportsMediaActions);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v64[19] = v43;
  v63[20] = CFSTR("HM.firmwareUpdate");
  NSStringFromSelector(sel_supportsFirmwareUpdate);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v64[20] = v42;
  v63[21] = CFSTR("HM.residentFirmwareUpdate");
  NSStringFromSelector(sel_supportsResidentFirmwareUpdate);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v64[21] = v41;
  v63[22] = CFSTR("HM.cameraActivityZones");
  NSStringFromSelector(sel_supportsCameraActivityZones);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v64[22] = v40;
  v63[23] = CFSTR("HM.createMusicAlarm");
  NSStringFromSelector(sel_supportsMusicAlarm);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v64[23] = v39;
  v63[24] = CFSTR("HM.faceClassification");
  NSStringFromSelector(sel_supportsFaceClassification);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v64[24] = v38;
  v63[25] = CFSTR("HM.naturalLighting");
  NSStringFromSelector(sel_supportsNaturalLighting);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v64[25] = v37;
  v63[26] = CFSTR("HM.IDSActivityMonitorPresence");
  NSStringFromSelector(sel_supportsIDSActivityMonitorPresence);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v64[26] = v36;
  v63[27] = CFSTR("HM.cameraRecordingReachabilityNotifications");
  NSStringFromSelector(sel_supportsCameraRecordingReachabilityNotifications);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v64[27] = v35;
  v63[28] = CFSTR("HM.announce");
  NSStringFromSelector(sel_supportsAnnounce);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v64[28] = v34;
  v63[29] = CFSTR("HM.soundAnalysis");
  NSStringFromSelector(sel_supportsAudioAnalysis);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v64[29] = v33;
  v63[30] = CFSTR("HM.supportsDropIn");
  NSStringFromSelector(sel_supportsDropIn);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v64[30] = v32;
  v63[31] = CFSTR("HM.ThirdPartyMusic");
  NSStringFromSelector(sel_supportsThirdPartyMusic);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v64[31] = v31;
  v63[32] = CFSTR("HM.preferredMediaUser");
  NSStringFromSelector(sel_supportsPreferredMediaUser);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v64[32] = v30;
  v63[33] = CFSTR("HM.ThreadBorderRouter");
  NSStringFromSelector(sel_supportsThreadBorderRouter);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v64[33] = v29;
  v63[34] = CFSTR("HM.siriEndpointSetup");
  NSStringFromSelector(sel_supportsSiriEndpointSetup);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v64[34] = v28;
  v63[35] = CFSTR("HM.homeHub");
  NSStringFromSelector(sel_supportsHomeHub);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v64[35] = v27;
  v63[36] = CFSTR("HM.lockNotificationContext");
  NSStringFromSelector(sel_supportsLockNotificationContext);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v64[36] = v26;
  v63[37] = CFSTR("HM.wakeOnLAN");
  NSStringFromSelector(sel_supportsWakeOnLAN);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v64[37] = v25;
  v63[38] = CFSTR("HM.audioReturnChannel");
  NSStringFromSelector(sel_supportsAudioReturnChannel);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v64[38] = v24;
  v63[39] = CFSTR("HM.walletKey");
  NSStringFromSelector(sel_supportsWalletKey);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v64[39] = v23;
  v63[40] = CFSTR("HM.cameraPackageDetection");
  NSStringFromSelector(sel_supportsCameraPackageDetection);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v64[40] = v22;
  v63[41] = CFSTR("HM.coordinationDoorbellChime");
  NSStringFromSelector(sel_supportsCoordinationDoorbellChime);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v64[41] = v21;
  v63[42] = CFSTR("HM.coordinationFreeDoorbellChime");
  NSStringFromSelector(sel_supportsCoordinationFreeDoorbellChime);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v64[42] = v20;
  v63[43] = CFSTR("HM.TVOSUpdateManualUpdateAvailableNotification");
  NSStringFromSelector(sel_supportsTVOSUpdateManualUpdateAvailableNotification);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v64[43] = v19;
  v63[44] = CFSTR("HM.accessCodes");
  NSStringFromSelector(sel_supportsAccessCodes);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v64[44] = v18;
  v63[45] = CFSTR("HM.CHIP");
  NSStringFromSelector(sel_supportsCHIP);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v64[45] = v17;
  v63[46] = CFSTR("HM.doorbellChime");
  NSStringFromSelector(sel_supportsDoorbellChime);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v64[46] = v16;
  v63[47] = CFSTR("HM.userMediaSettings");
  NSStringFromSelector(sel_supportsUserMediaSettings);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v64[47] = v15;
  v63[48] = CFSTR("HM.unifiedMediaNotifications");
  NSStringFromSelector(sel_supportsUnifiedMediaNotifications);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v64[48] = v14;
  v63[49] = CFSTR("HM.managedConfigProfile");
  NSStringFromSelector(sel_supportsManagedConfigurationProfile);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v64[49] = v13;
  v63[50] = CFSTR("HM.captiveNetworks");
  NSStringFromSelector(sel_supportsCaptiveNetworks);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v64[50] = v12;
  v63[51] = CFSTR("HM.modernTransport");
  NSStringFromSelector(sel_supportsModernTransport);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v64[51] = v0;
  v63[52] = CFSTR("HM.residentFirstAccessoryCommunication");
  NSStringFromSelector(sel_supportsResidentFirstAccessoryCommunication);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v64[52] = v1;
  v63[53] = CFSTR("HM.messagedHomePodSettings");
  NSStringFromSelector(sel_supportsMessagedHomePodSettings);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v64[53] = v2;
  v63[54] = CFSTR("HM.customDestinationMediaAction");
  NSStringFromSelector(sel_supportsCustomMediaApplicationDestination);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v64[54] = v3;
  v63[55] = CFSTR("HM.threadNetworkCredentialSharing");
  NSStringFromSelector(sel_supportsThreadNetworkCredentialSharing);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v64[55] = v4;
  v63[56] = CFSTR("HM.matterSharedAdminPairing");
  NSStringFromSelector(sel_supportsMatterSharedAdminPairing);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v64[56] = v5;
  v63[57] = CFSTR("HM.appleTVRMV");
  NSStringFromSelector(sel_supportsRMVonAppleTV);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v64[57] = v6;
  v63[58] = CFSTR("HM.justSiri");
  NSStringFromSelector(sel_supportsJustSiri);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v64[58] = v7;
  v63[59] = CFSTR("HM.threadService");
  NSStringFromSelector(sel_supportsThreadService);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v64[59] = v8;
  v63[60] = CFSTR("HM.matterOwnerCertFetch");
  NSStringFromSelector(sel_supportsMatterOwnerCertFetch);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v64[60] = v9;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v64, v63, 61);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  return v11;
}

BOOL productSupportsKeychainSync(void *a1)
{
  id v1;
  unint64_t v2;
  _BOOL8 v3;

  v1 = a1;
  v2 = objc_msgSend(v1, "productPlatform");
  if (v2 > 5)
  {
LABEL_6:
    v3 = 0;
    goto LABEL_7;
  }
  if (((1 << v2) & 0x2A) == 0)
  {
    if (((1 << v2) & 0x11) == 0 && objc_msgSend(v1, "productClass") != 6)
    {
      v3 = objc_msgSend(v1, "productClass") != 4;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v3 = 1;
LABEL_7:

  return v3;
}

BOOL productSupportsDeviceSetup(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  if (v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  else
    return v4 == 6;
}

BOOL productSupportsKeyTransferClient(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _BOOL8 v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v5, "productPlatform") == 1)
    goto LABEL_7;
  objc_msgSend(v5, "softwareVersion");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, "operatingSystemVersion");
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
  }
  v13 = *MEMORY[0x24BE3F080];
  v14 = *(_QWORD *)(MEMORY[0x24BE3F080] + 16);
  v10 = HMFOperatingSystemVersionCompare();

  if (v10 == -1)
LABEL_7:
    v11 = objc_msgSend(v5, "productPlatform", v13, v14, v15, v16, v17) == 5;
  else
    v11 = productSupportsKeychainSync(v5);

  return v11;
}

BOOL productSupportsKeyTransferServer(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BOOL8 v4;
  void *v5;
  void *v6;

  v1 = a1;
  if (objc_msgSend(v1, "productClass") == 4 && objc_msgSend(v1, "productPlatform") == 4)
  {
    objc_msgSend(v1, "softwareVersion");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2)
      objc_msgSend(v2, "operatingSystemVersion");
    if (HMFOperatingSystemVersionCompare() == -1)
    {
      v4 = 0;
    }
    else
    {
      objc_msgSend(v1, "softwareVersion");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      if (v5)
        objc_msgSend(v5, "operatingSystemVersion");
      v4 = HMFOperatingSystemVersionCompare() == -1;

    }
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t productSupportsCloudDataSync(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  BOOL v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = 1;
  switch(objc_msgSend(v1, "productPlatform"))
  {
    case 1:
    case 3:
    case 5:
      break;
    case 2:
      v5 = objc_msgSend(v1, "productClass") == 4;
      goto LABEL_7;
    case 4:
      v5 = HMFOperatingSystemVersionCompare() == 1;
LABEL_7:
      v4 = !v5;
      break;
    default:
      v4 = 0;
      break;
  }

  return v4;
}

BOOL productSupportsWholeHouseAudio(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  return (v4 == 6 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsAssistantAccessControl(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v1 = a1;
  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "preferenceForKey:", CFSTR("enableAppleMedia"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "BOOLValue");

  if (!v4)
    goto LABEL_5;
  objc_msgSend(v1, "softwareVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "operatingSystemVersion");

  if (objc_msgSend(v1, "productClass") == 6)
    v7 = HMFOperatingSystemVersionCompare() != 1;
  else
LABEL_5:
    v7 = 0;

  return v7;
}

BOOL productIsResidentCapable(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  if (v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  else
    return v4 == 6;
}

BOOL productSupportsHomeInvitation(void *a1)
{
  id v1;
  _BOOL8 v2;

  v1 = a1;
  v2 = 1;
  switch(objc_msgSend(v1, "productPlatform"))
  {
    case 1:
    case 5:
      break;
    case 2:
      if (objc_msgSend(v1, "productClass") == 6)
        goto LABEL_2;
      v2 = objc_msgSend(v1, "productClass") != 4;
      break;
    default:
LABEL_2:
      v2 = 0;
      break;
  }

  return v2;
}

BOOL productSupportsTargetControl(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BOOL8 v4;

  v1 = a1;
  if (objc_msgSend(v1, "productClass") == 4)
  {
    objc_msgSend(v1, "softwareVersion");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2)
      objc_msgSend(v2, "operatingSystemVersion");

    v4 = HMFOperatingSystemVersionCompare() != 1;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

BOOL productSupportsMultiUser(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  return (v4 == 6 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsHomeLevelLocationServiceSetting(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _BOOL8 result;

  v1 = a1;
  v2 = objc_msgSend(v1, "productPlatform");
  v3 = objc_msgSend(v1, "productClass");
  objc_msgSend(v1, "softwareVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(v4, "operatingSystemVersion");

  result = 0;
  if (v2 == 4 && v3 == 6)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsCompanionInitiatedRestart(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCompanionInitiatedObliterate(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCameraRecording(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  _BOOL8 result;

  v1 = a1;
  v2 = objc_msgSend(v1, "productPlatform");
  v3 = objc_msgSend(v1, "productClass");
  objc_msgSend(v1, "softwareVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(v4, "operatingSystemVersion");

  result = 0;
  if (v3 <= 6 && ((1 << v3) & 0x58) != 0)
    return (v2 == 2 || v2 == 4) && HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsRouterManagement(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v1 = a1;
  if (!productIsResidentCapable(v1))
  {
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v2 = objc_msgSend(v1, "productPlatform");
  v3 = objc_msgSend(v1, "productClass");
  objc_msgSend(v1, "softwareVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
    objc_msgSend(v4, "operatingSystemVersion");

  v6 = 0;
  if (v3 <= 6 && ((1 << v3) & 0x58) != 0)
  {
    if (v2 == 4 || v2 == 2)
    {
      v6 = HMFOperatingSystemVersionCompare() != 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
LABEL_10:

  return v6;
}

BOOL productSupportsShortcutActions(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  result = 1;
  switch(v4)
  {
    case 1:
    case 2:
    case 4:
      result = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 5:
      return result;
    default:
      result = 0;
      break;
  }
  return result;
}

BOOL productSupportsMediaActions(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  result = 1;
  switch(v4)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      result = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 5:
      return result;
    default:
      result = 0;
      break;
  }
  return result;
}

BOOL productSupportsFirmwareUpdate(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v1 = a1;
  v2 = objc_msgSend(v1, "productPlatform");
  v3 = objc_msgSend(v1, "productClass");
  objc_msgSend(v1, "softwareVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
    objc_msgSend(v4, "operatingSystemVersion");

  if (objc_msgSend(v1, "productPlatform") == 1)
  {
LABEL_4:
    v6 = HMFOperatingSystemVersionCompare() != 1;
  }
  else
  {
    v6 = 0;
    switch(v3)
    {
      case 1:
      case 3:
        if (v2 == 2)
          goto LABEL_4;
        goto LABEL_9;
      case 4:
      case 6:
        if (v2 == 4)
          goto LABEL_4;
LABEL_9:
        v6 = 0;
        break;
      case 11:
        v6 = 1;
        break;
      default:
        break;
    }
  }

  return v6;
}

BOOL productSupportsResidentFirmwareUpdate(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  v2 = objc_msgSend(v1, "productPlatform");
  v3 = objc_msgSend(v1, "productClass");
  objc_msgSend(v1, "softwareVersion");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(v4, "operatingSystemVersion");

  return (v3 | 2) == 6 && v2 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCameraActivityZones(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  if (v5 == 6 || v5 == 4)
  {
    if (v4 == 4)
      return HMFOperatingSystemVersionCompare() != 1;
  }
  else if (v5 == 3 && v4 == 2)
  {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return 0;
}

BOOL productSupportsMusicAlarm(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productClass");
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsAnnounce(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  switch(v5)
  {
    case 1:
    case 2:
    case 3:
      if (v4 != 2)
        goto LABEL_10;
      goto LABEL_9;
    case 5:
      if (v4 == 3)
        goto LABEL_9;
      goto LABEL_10;
    case 6:
      if (v4 == 4)
LABEL_9:
        result = HMFOperatingSystemVersionCompare() != 1;
      else
LABEL_10:
        result = 0;
      break;
    case 11:
      result = 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t productSupportsAudioAnalysis(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v3 = a2;
  v11 = 0uLL;
  v4 = a1;
  objc_msgSend(v4, "softwareVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "operatingSystemVersion");
  else
    v11 = 0uLL;

  v7 = objc_msgSend(v4, "productPlatform");
  v8 = objc_msgSend(v4, "productClass");

  v9 = 0;
  switch(v8)
  {
    case 1:
    case 2:
    case 3:
      if (v7 != 2)
        goto LABEL_11;
      goto LABEL_8;
    case 5:
      if (v7 != 3)
        goto LABEL_11;
LABEL_8:
      v9 = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 6:
      if (v7 == 4 && HMFOperatingSystemVersionCompare() != 1)
        v9 = objc_msgSend(v3, "homeSafetySecurityEnabled", v11, 0);
      else
LABEL_11:
        v9 = 0;
      break;
    case 11:
      v9 = 1;
      break;
    default:
      break;
  }

  return v9;
}

uint64_t productSupportsDropIn(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v3 = a2;
  v11 = 0uLL;
  v4 = a1;
  objc_msgSend(v4, "softwareVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "operatingSystemVersion");
  else
    v11 = 0uLL;

  v7 = objc_msgSend(v4, "productPlatform");
  v8 = objc_msgSend(v4, "productClass");

  if ((unint64_t)(v8 - 1) < 3)
  {
    if (v7 == 2)
      goto LABEL_13;
    goto LABEL_14;
  }
  if (v8 == 5)
  {
    if (v7 == 3)
    {
LABEL_13:
      v9 = HMFOperatingSystemVersionCompare() != 1;
      goto LABEL_15;
    }
LABEL_14:
    v9 = 0;
    goto LABEL_15;
  }
  if (v8 != 6 || v7 != 4 || HMFOperatingSystemVersionCompare() == 1)
    goto LABEL_14;
  v9 = objc_msgSend(v3, "homeSafetySecurityEnabled", v11, 0);
LABEL_15:

  return v9;
}

BOOL productSupportsThirdPartyMusic(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsPreferredMediaUser(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsUserMediaSettings(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsCoordinationDoorbellChime(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsCoordinationFreeDoorbellChime(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsSiriEndpointSetup(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsHomeHub(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int v8;
  _BOOL8 v9;

  v3 = a1;
  v4 = a2;
  if (!_os_feature_enabled_impl())
    goto LABEL_8;
  objc_msgSend(v3, "softwareVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "operatingSystemVersion");

  v7 = objc_msgSend(v3, "productPlatform");
  if (objc_msgSend(v3, "productClass") == 6)
  {
    v8 = objc_msgSend(v4, "supportsSiriHub");
    v9 = 0;
    if (v7 == 4 && v8)
      v9 = HMFOperatingSystemVersionCompare() != 1;
  }
  else
  {
LABEL_8:
    v9 = 0;
  }

  return v9;
}

BOOL productSupportsWakeOnLAN(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  switch(v5)
  {
    case 1:
    case 3:
      if (v4 != 2)
        goto LABEL_8;
      goto LABEL_7;
    case 4:
    case 6:
      if (v4 == 4)
LABEL_7:
        result = HMFOperatingSystemVersionCompare() != 1;
      else
LABEL_8:
        result = 0;
      break;
    default:
      return result;
  }
  return result;
}

BOOL productSupportsLockNotificationContext(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  if (v5 == 6 || v5 == 4)
  {
    if (v4 == 4)
      return HMFOperatingSystemVersionCompare() != 1;
  }
  else if (v5 == 3 && v4 == 2)
  {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return 0;
}

uint64_t productSupportsAudioReturnChannel(void *a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if (objc_msgSend(a1, "productClass") == 6)
    v4 = objc_msgSend(v3, "supportsReceivingARCStreamOverAirPlay");
  else
    v4 = 0;

  return v4;
}

BOOL productSupportsUnifiedMediaNotifications(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCaptiveNetworks(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
    return HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsResidentFirstAccessoryCommunication(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  _BOOL8 result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 <= 6 && ((1 << v5) & 0x58) != 0)
    return (v4 == 2 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
  return result;
}

BOOL productSupportsMessagedHomePodSettings(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  HMDHomeKitVersion *v10;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "softwareVersion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "operatingSystemVersion");

  v7 = objc_msgSend(v4, "productPlatform");
  v8 = objc_msgSend(v4, "productClass");

  v9 = 0;
  if (v8 == 6 && v7 == 4)
  {
    v10 = -[HMDHomeKitVersion initWithVersionString:]([HMDHomeKitVersion alloc], "initWithVersionString:", CFSTR("8.0"));
    v9 = -[HMDHomeKitVersion compare:](v10, "compare:", v3) != 1 && HMFOperatingSystemVersionCompare() != 1;

  }
  return v9;
}

BOOL productSupportsCustomMediaApplicationDestination(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsThreadNetworkCredentialSharing(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 IsResidentCapable;

  v5 = a3;
  v6 = a2;
  v7 = a1;
  objc_msgSend(v7, "softwareVersion");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
    objc_msgSend(v8, "operatingSystemVersion");

  v10 = objc_msgSend(v7, "productPlatform");
  v11 = objc_msgSend(v7, "productClass");
  IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4)
        return HMFOperatingSystemVersionCompare() != 1;
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

BOOL productSupportsMatterSharedAdminPairing(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 IsResidentCapable;

  v5 = a3;
  v6 = a2;
  v7 = a1;
  objc_msgSend(v7, "softwareVersion");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
    objc_msgSend(v8, "operatingSystemVersion");

  v10 = objc_msgSend(v7, "productPlatform");
  v11 = objc_msgSend(v7, "productClass");
  IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4)
        return HMFOperatingSystemVersionCompare() != 1;
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

uint64_t productSupportsRMVonAppleTV(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 4 && v4 == 4)
  {
    if (HMFOperatingSystemVersionCompare() == 1)
      return 0;
    else
      return _os_feature_enabled_impl();
  }
  return result;
}

uint64_t productSupportsJustSiri(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = a1;
  objc_msgSend(v1, "softwareVersion");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    objc_msgSend(v2, "operatingSystemVersion");

  v4 = objc_msgSend(v1, "productPlatform");
  v5 = objc_msgSend(v1, "productClass");

  result = 0;
  if (v5 == 6 && v4 == 4)
  {
    if (HMFOperatingSystemVersionCompare() == 1)
      return 0;
    else
      return _os_feature_enabled_impl();
  }
  return result;
}

BOOL productSupportsMatterOwnerCertFetch(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 IsResidentCapable;

  v5 = a3;
  v6 = a2;
  v7 = a1;
  objc_msgSend(v7, "softwareVersion");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
    objc_msgSend(v8, "operatingSystemVersion");

  v10 = objc_msgSend(v7, "productPlatform");
  v11 = objc_msgSend(v7, "productClass");
  IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4)
        return HMFOperatingSystemVersionCompare() != 1;
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

void sub_222324924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222329F18(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDWatchManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  void *v3;
  os_unfair_lock_s *v4;
  NSObject *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  HMDDevice *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  void *v18;
  void *v19;
  os_unfair_lock_s *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t k;
  void *v29;
  void *v30;
  os_unfair_lock_s *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id obj;
  id obja;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  const __CFString *v55;
  void *v56;
  _BYTE v57[128];
  const __CFString *v58;
  void *v59;
  _BYTE v60[128];
  uint8_t v61[128];
  uint8_t buf[4];
  void *v63;
  __int16 v64;
  id v65;
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  v38 = a1;
  v39 = a2;
  if (v38)
  {
    v3 = (void *)MEMORY[0x227676638]();
    v4 = (os_unfair_lock_s *)v38;
    HMFGetOSLogHandle();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v63 = v6;
      v64 = 2112;
      v65 = v39;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Processing connected devices: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v39, "count"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v7 = v39;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
    if (v8)
    {
      v9 = *(_QWORD *)v52;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v52 != v9)
            objc_enumerationMutation(v7);
          v11 = *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * i);
          if (+[HMDWatchManager isCompatibleWatchDevice:](HMDWatchManager, "isCompatibleWatchDevice:", v11))
          {
            v12 = -[HMDDevice initWithService:device:]([HMDDevice alloc], "initWithService:device:", *(_QWORD *)&v4[10]._os_unfair_lock_opaque, v11);
            if (v12)
              objc_msgSend(v40, "addObject:", v12);

          }
        }
        v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
      }
      while (v8);
    }

    os_unfair_lock_lock_with_options();
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithArray:", *(_QWORD *)&v4[8]._os_unfair_lock_opaque);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "allObjects");
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *(void **)&v4[8]._os_unfair_lock_opaque;
    *(_QWORD *)&v4[8]._os_unfair_lock_opaque = v13;

    LOBYTE(v4[6]._os_unfair_lock_opaque) = objc_msgSend(v40, "count") != 0;
    os_unfair_lock_unlock(v4 + 2);
    objc_msgSend(v37, "hmf_removedObjectsFromSet:", v40);
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    obj = (id)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v60, 16);
    if (v15)
    {
      v16 = *(_QWORD *)v48;
      do
      {
        for (j = 0; j != v15; ++j)
        {
          if (*(_QWORD *)v48 != v16)
            objc_enumerationMutation(obj);
          v18 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * j);
          v19 = (void *)MEMORY[0x227676638]();
          v20 = v4;
          HMFGetOSLogHandle();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v63 = v22;
            v64 = 2112;
            v65 = v18;
            _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@Removed connected device: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v19);
          +[HMDWatchConnectivityLogEventManager sharedInstance](HMDWatchConnectivityLogEventManager, "sharedInstance");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "incrementWatchRemovedNotificationCount");

          objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v58 = CFSTR("HMDDeviceNotificationKey");
          v59 = v18;
          objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v59, &v58, 1);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "postNotificationName:object:userInfo:", CFSTR("HMDWatcherManagerWatchDisconnectedNotification"), v20, v25);

        }
        v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v60, 16);
      }
      while (v15);
    }

    objc_msgSend(v37, "hmf_addedObjectsFromSet:", v40);
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    obja = (id)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v43, v57, 16);
    if (v26)
    {
      v27 = *(_QWORD *)v44;
      do
      {
        for (k = 0; k != v26; ++k)
        {
          if (*(_QWORD *)v44 != v27)
            objc_enumerationMutation(obja);
          v29 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * k);
          v30 = (void *)MEMORY[0x227676638]();
          v31 = v4;
          HMFGetOSLogHandle();
          v32 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v63 = v33;
            v64 = 2112;
            v65 = v29;
            _os_log_impl(&dword_2218F0000, v32, OS_LOG_TYPE_DEFAULT, "%{public}@Added connected device: %@", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v30);
          +[HMDWatchConnectivityLogEventManager sharedInstance](HMDWatchConnectivityLogEventManager, "sharedInstance");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "incrementWatchAddedNotificationCount");

          objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          v55 = CFSTR("HMDDeviceNotificationKey");
          v56 = v29;
          objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v56, &v55, 1);
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v35, "postNotificationName:object:userInfo:", CFSTR("HMDWatcherManagerWatchConnectedNotification"), v31, v36);

        }
        v26 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v43, v57, 16);
      }
      while (v26);
    }

  }
}

void sub_22232A8F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222331088(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222331214(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222332B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 192), 8);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_22233549C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222335718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222339F7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__204977(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__204978(uint64_t a1)
{

}

void sub_22233FB48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22233FBA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22233FC28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222345714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_222345890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__206143(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__206144(uint64_t a1)
{

}

void sub_222347090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222347600(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_222347F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22234876C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222349988(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22234D434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22234D808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22234DBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22234E2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_22234E7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22234EB44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_22234EE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222350BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222350E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223518CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222351E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222352380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222353220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__206586(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__206587(uint64_t a1)
{

}

void sub_22235A730(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22235AA28(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __updateClipManagerWriteAccess(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  id v7;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "workQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v5);

  objc_msgSend(v3, "accessModeAtHome");
  LODWORD(v5) = HMIsRecordingAllowedForCameraAccessMode();
  objc_msgSend(v3, "accessModeNotAtHome");

  v6 = v5 | HMIsRecordingAllowedForCameraAccessMode();
  objc_msgSend(v4, "clipManager");
  v7 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "setHasWriteAccess:", v6);
}

void sub_222365FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222366424(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL __HMDDeviceSetupManagerIsProxSetupRunning(void *a1)
{
  unsigned int *v1;
  void *v2;
  int v3;
  void *v4;
  int v5;
  void *v6;
  unsigned int *v7;
  NSObject *v8;
  void *v9;
  _BOOL8 v10;
  uint64_t v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(v1, "darwinNotificationProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "notifyIsValidToken:", v1[3]);

  if (v3)
  {
    v12 = 0;
    objc_msgSend(v1, "darwinNotificationProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "notifyGetState:state:", v1[3], &v12);

    if (!v5)
    {
      v10 = v12 == 1;
      goto LABEL_7;
    }
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v1;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v14 = v9;
      v15 = 1024;
      v16 = v5;
      _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to get ProxSetup state with status: %u", buf, 0x12u);

    }
    objc_autoreleasePoolPop(v6);
  }
  v10 = 0;
LABEL_7:

  return v10;
}

void sub_222368074(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22236A1B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__209352(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__209353(uint64_t a1)
{

}

void sub_2223729A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  id *v30;
  id *v31;
  uint64_t v32;

  objc_destroyWeak(v30);
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_2223733A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  id *v30;
  id *v31;
  uint64_t v32;

  objc_destroyWeak(v30);
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_2223744D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;
  id *v32;
  uint64_t v33;

  objc_destroyWeak(v31);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v33 - 176));
  _Unwind_Resume(a1);
}

void sub_222375E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223767B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222378350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22237DEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id ipAccessoryStageSystemCriteria()
{
  xpc_object_t v0;
  const char *v1;
  unsigned int v2;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC5E8], "com.apple.homed.firmwareUpdate.ipAccessory.stage.group");
  v1 = (const char *)*MEMORY[0x24BDAC5E0];
  v2 = uint32ForPreference(CFSTR("firmwareUpdateIPAccessoryStageConcurrentLimit"));
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6D8], 1);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC658], (const char *)*MEMORY[0x24BDAC668]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 1);
  return v0;
}

id bleAccessoryStageSystemCriteria()
{
  xpc_object_t v0;
  const char *v1;
  unsigned int v2;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC5E8], "com.apple.homed.firmwareUpdate.bleAccessory.stage.group");
  v1 = (const char *)*MEMORY[0x24BDAC5E0];
  v2 = uint32ForPreference(CFSTR("firmwareUpdateBLEAccessoryStageConcurrentLimit"));
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 1);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 5);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC610]);
  return v0;
}

id threadAccessoryStageSystemCriteria()
{
  xpc_object_t v0;
  const char *v1;
  unsigned int v2;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC5E8], "com.apple.homed.firmwareUpdate.threadAccessory.stage.group");
  v1 = (const char *)*MEMORY[0x24BDAC5E0];
  v2 = uint32ForPreference(CFSTR("firmwareUpdateThreadAccessoryStageConcurrentLimit"));
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6D8], 1);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC658], (const char *)*MEMORY[0x24BDAC668]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 1);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 5);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC610]);
  return v0;
}

uint64_t uint32ForPreference(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = uint32ForPreference_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&uint32ForPreference_onceToken, &__block_literal_global_141_211468);
  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "preferenceForKey:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "numberValue");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "unsignedIntValue");

  return v6;
}

uint64_t __uint32ForPreference_block_invoke()
{
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF38, CFSTR("firmwareUpdateStageMinDelay"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF50, CFSTR("firmwareUpdateStageMaxDelay"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF68, CFSTR("firmwareUpdateApplyMinDelay"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF80, CFSTR("firmwareUpdateApplyMaxDelay"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF98, CFSTR("firmwareUpdateIPAccessoryStageConcurrentLimit"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CF68, CFSTR("firmwareUpdateIPAccessoryApplyConcurrentLimit"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CFB0, CFSTR("firmwareUpdateBLEAccessoryStageConcurrentLimit"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CFC8, CFSTR("firmwareUpdateBLEAccessoryApplyConcurrentLimit"));
  objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CFB0, CFSTR("firmwareUpdateThreadAccessoryStageConcurrentLimit"));
  return objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96CFB0, CFSTR("firmwareUpdateThreadAccessoryApplyConcurrentLimit"));
}

void sub_22238B9F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222391E78(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223924D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222393418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18, id a19, id a20)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_2223945C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222394BCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223955FC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDRemoteDeviceMonitorReachable(void *a1)
{
  id *v1;
  id *v2;
  id WeakRetained;
  void *v4;
  uint64_t v5;
  void *v6;
  id *v7;
  NSObject *v8;
  void *v9;
  const char *v10;
  id *v11;
  id *v12;
  int v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  v2 = v1;
  if (!v1)
    goto LABEL_14;
  if ((objc_msgSend(v1[11], "isReachable") & 1) == 0)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v7 = v2;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      goto LABEL_13;
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Considering ourselves unreachable because net monitor is unreachable";
LABEL_12:
    _os_log_impl(&dword_2218F0000, v8, OS_LOG_TYPE_INFO, v10, (uint8_t *)&v14, 0xCu);

    goto LABEL_13;
  }
  WeakRetained = objc_loadWeakRetained(v2 + 9);
  objc_msgSend(WeakRetained, "device");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v11 = v2;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      goto LABEL_13;
    HMFGetLogIdentifier();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 138543362;
    v15 = v9;
    v10 = "%{public}@Considering ourselves unreachable because there is no current device";
    goto LABEL_12;
  }
  if ((objc_msgSend(v2[6], "hmd_isActive") & 1) == 0)
  {
    v6 = (void *)MEMORY[0x227676638]();
    v12 = v2;
    HMFGetOSLogHandle();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138543362;
      v15 = v9;
      v10 = "%{public}@Considering ourselves unreachable because the IDSService is not active";
      goto LABEL_12;
    }
LABEL_13:

    objc_autoreleasePoolPop(v6);
LABEL_14:
    v5 = 0;
    goto LABEL_15;
  }
  v5 = 1;
LABEL_15:

  return v5;
}

void sub_222395D10(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222398A98(_Unwind_Exception *a1)
{
  _HMFThreadLocalAsyncContextPop();
  _Unwind_Resume(a1);
}

void sub_222399A7C(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22239A89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22239C25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22239C664(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22239C8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__213039(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__213040(uint64_t a1)
{

}

uint64_t __hmiActivityZonesFromActivityZones_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "createHMIActivityZoneWithIsInclusion:", *(unsigned __int8 *)(a1 + 32));
}

void sub_2223A70C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_2223A7654(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_2223ABFD8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223AC124(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223AC2C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223AE12C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223AEC40(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_2223AF690(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223B41FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __accessoriesFromAccessoryUUIDs(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v3, "count"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(v4, "accessoryWithUUID:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v10), (_QWORD)v14);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
          objc_msgSend(v5, "addObject:", v11);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = (void *)objc_msgSend(v5, "copy");
  return v12;
}

id __displayNameForUser(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  _QWORD v6[4];
  id v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;

  v1 = a1;
  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = __Block_byref_object_copy__215181;
  v13 = __Block_byref_object_dispose__215182;
  v14 = 0;
  v2 = (void *)MEMORY[0x24BE3F138];
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = ____displayNameForUser_block_invoke;
  v6[3] = &unk_24E79B698;
  v3 = v1;
  v7 = v3;
  v8 = &v9;
  objc_msgSend(v2, "activityWithName:block:", CFSTR("User.Name"), v6);
  v4 = (id)v10[5];

  _Block_object_dispose(&v9, 8);
  return v4;
}

void sub_2223BD874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__215181(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__215182(uint64_t a1)
{

}

void ____displayNameForUser_block_invoke(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  objc_msgSend(*(id *)(a1 + 32), "accountHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contact");
  v12 = (id)objc_claimAutoreleasedReturnValue();

  v3 = v12;
  if (!v12)
  {
    objc_msgSend(*(id *)(a1 + 32), "account");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "contact");
    v13 = (id)objc_claimAutoreleasedReturnValue();

    v3 = v13;
    if (!v13)
    {
      v14 = 0;
      goto LABEL_6;
    }
  }
  v14 = v3;
  objc_msgSend(MEMORY[0x24BDBACC0], "stringFromContact:style:", v3, 0);
  v5 = objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
LABEL_6:
    +[HMDAccountHandleFormatter defaultFormatter](HMDAccountHandleFormatter, "defaultFormatter");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "accountHandle");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringForObjectValue:", v8);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    goto LABEL_7;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;
LABEL_7:

}

void __registerForAccountNotifications(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  void *v12;
  void *v13;
  void *v14;
  char *v15;
  void *v16;
  const __CFString *v17;
  void *v18;
  unsigned __int8 v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (v1)
  {
    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "removeObserver:name:object:", v1, CFSTR("HMDAccountRegistryAddedAccountNotification"), 0);

    objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "removeObserver:name:object:", v1, CFSTR("HMDAccountRegistryRemovedAccountNotification"), 0);

    objc_msgSend(v1, "accountHandle");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v19 = 0;
      +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "accountForHandle:exists:", v4, &v19);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      v7 = v19;
      v8 = (void *)MEMORY[0x227676638]();
      v9 = v1;
      HMFGetOSLogHandle();
      v10 = objc_claimAutoreleasedReturnValue();
      v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG);
      if (v7)
      {
        if (v11)
        {
          HMFGetLogIdentifier();
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "shortDescription");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          v21 = v12;
          v22 = 2112;
          v23 = v13;
          _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_DEBUG, "%{public}@Registering for notifications for account: %@", buf, 0x16u);

        }
        objc_autoreleasePoolPop(v8);
        objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = sel___handleRemovedAccount_;
        +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = CFSTR("HMDAccountRegistryRemovedAccountNotification");
      }
      else
      {
        if (v11)
        {
          HMFGetLogIdentifier();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v21 = v18;
          _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account notifications", buf, 0xCu);

        }
        objc_autoreleasePoolPop(v8);
        objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = sel___handleAddedAccount_;
        +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = CFSTR("HMDAccountRegistryAddedAccountNotification");
      }
      objc_msgSend(v14, "addObserver:selector:name:object:", v9, v15, v17, v16);

    }
  }

}

void __handleUpdatedAccount(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    objc_msgSend(v1, "deregisterIdentity");
    objc_msgSend(v1, "registerIdentity");

  }
}

void __updateWithAccount(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  NSObject *v28;
  void *v29;
  void *v30;
  _QWORD v31[4];
  id v32;
  id v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (v3)
  {
    v5 = (void *)MEMORY[0x227676638]();
    v6 = v3;
    HMFGetOSLogHandle();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "userID");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v35 = v8;
      v36 = 2112;
      v37 = v9;
      v38 = 2112;
      v39 = v4;
      _os_log_impl(&dword_2218F0000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating with account: %@ / %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v5);
    if (v4)
    {
      objc_msgSend(v6, "accountHandle");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        objc_msgSend(v4, "handles");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = objc_msgSend(v11, "containsObject:", v10);

        if ((v12 & 1) != 0)
        {
          if (objc_msgSend(v4, "isAuthenticated"))
          {
            objc_msgSend(v4, "identifier");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "accountIdentifier");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = HMFEqualObjects();

            if ((v15 & 1) == 0)
            {
              v16 = (void *)MEMORY[0x227676638]();
              v17 = v6;
              HMFGetOSLogHandle();
              v18 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                HMFGetLogIdentifier();
                v19 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v17, "userID");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543874;
                v35 = v19;
                v36 = 2112;
                v37 = v20;
                v38 = 2112;
                v39 = v13;
                _os_log_impl(&dword_2218F0000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@Updating account identifier to: %@ / %@", buf, 0x20u);

              }
              objc_autoreleasePoolPop(v16);
              v21 = (void *)objc_msgSend(v17, "newModelWithChangeType:", 2);
              objc_msgSend(v21, "setAccountIdentifier:", v13);
              objc_msgSend(v17, "home");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v22, "backingStore");
              v23 = (void *)objc_claimAutoreleasedReturnValue();
              +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v23, "transaction:options:", CFSTR("userUpdateAccountIdentifier"), v24);
              v25 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v25, "add:", v21);
              v31[0] = MEMORY[0x24BDAC760];
              v31[1] = 3221225472;
              v31[2] = ____updateWithAccount_block_invoke;
              v31[3] = &unk_24E79BCC8;
              v32 = v17;
              v33 = v13;
              objc_msgSend(v25, "run:", v31);

            }
          }
        }
        else
        {
          v26 = (void *)MEMORY[0x227676638]();
          v27 = v6;
          HMFGetOSLogHandle();
          v28 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "userID");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543874;
            v35 = v29;
            v36 = 2112;
            v37 = v30;
            v38 = 2112;
            v39 = v4;
            _os_log_impl(&dword_2218F0000, v28, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to update with account: %@ / %@", buf, 0x20u);

          }
          objc_autoreleasePoolPop(v26);
        }
      }

    }
  }

}

void ____updateWithAccount_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = (void *)MEMORY[0x227676638]();
  v5 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    HMFGetLogIdentifier();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 32), "userID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138544130;
    v11 = v7;
    v12 = 2112;
    v13 = v8;
    v14 = 2112;
    v15 = v9;
    v16 = 2112;
    v17 = v3;
    _os_log_impl(&dword_2218F0000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Finished updating the accountIdentifier [%@] for user [%@] finished with error: %@", (uint8_t *)&v10, 0x2Au);

  }
  objc_autoreleasePoolPop(v4);

}

id _userPairingIdentity(void *a1, uint64_t a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  if (a1)
  {
    v3 = (objc_class *)MEMORY[0x24BE1BBB0];
    v4 = a1;
    v5 = [v3 alloc];
    objc_msgSend(v4, "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "publicKey");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = (void *)objc_msgSend(v5, "initWithIdentifier:publicKey:privateKey:permissions:", v6, v7, 0, (a2 & 0xFFFFFFFFFFFFFFFDLL) == 1);
  }
  else
  {
    v8 = 0;
  }
  return v8;
}

void ____auditAccount_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  char v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "accountHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x227676638]();
  v4 = *(id *)(a1 + 32);
  HMFGetOSLogHandle();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v6)
    {
      HMFGetLogIdentifier();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "home");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "name");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v21 = v7;
      v22 = 2112;
      v23 = v2;
      v24 = 2112;
      v25 = v9;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Auditing user account with handle : %@ for home: %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v3);
    v19 = 0;
    +[HMDAccountRegistry sharedRegistry](HMDAccountRegistry, "sharedRegistry");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "accountForHandle:exists:", v2, &v19);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19)
    {
      __updateWithAccount(*(void **)(a1 + 32), v11);
    }
    else
    {
      v14 = (void *)MEMORY[0x227676638]();
      v15 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "userID");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v21 = v17;
        v22 = 2112;
        v23 = v18;
        _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_INFO, "%{public}@Account does not currently exist for user: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v14);
    }

  }
  else
  {
    if (v6)
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "userID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v21 = v12;
      v22 = 2112;
      v23 = v13;
      _os_log_impl(&dword_2218F0000, v5, OS_LOG_TYPE_INFO, "%{public}@Not auditing the account for the user: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v3);
  }

}

uint64_t HMDUserPrivilegeCompare(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  BOOL v6;

  v2 = 3;
  if (a1 == 1)
    v3 = 3;
  else
    v3 = a1;
  if (a2 != 1)
    v2 = a2;
  if (v3 == v2)
    return 0;
  if (v3 == 3 || v2 == 3)
  {
    v6 = v3 == 3;
    goto LABEL_23;
  }
  if (v3 == 4 || v2 == 4)
  {
    v6 = v3 == 4;
    goto LABEL_23;
  }
  if (!v3 || !v2)
  {
    v6 = v3 == 0;
LABEL_23:
    if (v6)
      return 1;
    else
      return -1;
  }
  if (v2 == 5)
    v5 = -1;
  else
    v5 = 0;
  if (v3 == 5)
    return 1;
  else
    return v5;
}

void sub_2223C7794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(v16);
  objc_destroyWeak((id *)(v18 - 104));
  _Unwind_Resume(a1);
}

void sub_2223C8178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223CA02C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223CF750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__217188(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__217189(uint64_t a1)
{

}

void sub_2223D1064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223D1BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223D1C1C(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2223D1DB0(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2223D1F30(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_2223D86B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2223D8814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223D8EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__218898(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__218899(uint64_t a1)
{

}

void sub_2223DACDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDCameraLocalStreamSessionStateAsString(uint64_t a1)
{
  uint64_t v2;
  __CFString *v3;

  v2 = a1 - 1;
  v3 = CFSTR("UNKNOWN");
  switch(v2)
  {
    case 0:
      return v3;
    case 1:
      v3 = CFSTR("NEGOTIATION");
      return v3;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_7;
    case 3:
      return CFSTR("IDS-SESSION-STARTED");
    case 7:
      return CFSTR("STREAMING-STARTED-DEVICE");
    default:
      if (a1 == 16)
        return CFSTR("STREAM-STOPPED");
LABEL_7:
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraLocalStreamSessionState %tu"), a1);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v3;
  }
}

void sub_2223DC9F4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223E07E0(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

uint64_t __Block_byref_object_copy__220030(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__220031(uint64_t a1)
{

}

uint64_t __HMDProcessInfoBoolForEntitlement(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  if (!a1 || !a2)
    return 0;
  objc_msgSend(a1, "valueForEntitlement:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  v5 = objc_msgSend(v4, "BOOLValue");
  return v5;
}

id encodedSnapshotFile(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  _QWORD v9[5];

  v9[4] = *MEMORY[0x24BDAC8D0];
  if (!a1)
    return 0;
  v8[0] = *MEMORY[0x24BDD6DC0];
  v1 = a1;
  objc_msgSend(v1, "slotIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v2;
  v8[1] = *MEMORY[0x24BDD7E28];
  objc_msgSend(v1, "filePath");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[1] = v3;
  v8[2] = *MEMORY[0x24BDD7E20];
  objc_msgSend(v1, "snapshotTimestamp");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v9[2] = v4;
  v8[3] = *MEMORY[0x24BDD6F00];
  objc_msgSend(v1, "aspectRatio");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v9[3] = v5;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v9, v8, 4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

BOOL isMostRecentSnapshotValid(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v1 = a1;
  objc_msgSend(v1, "slotIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    objc_msgSend(v1, "filePath");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v1, "snapshotTimestamp");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (v4)
      {
        objc_msgSend(v1, "aspectRatio");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = v5 != 0;

      }
      else
      {
        v6 = 0;
      }

    }
    else
    {
      v6 = 0;
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

BOOL HMDRemoteEventRouterProtoEventsMessageReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  id v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 3)
      {
        v17 = objc_alloc_init(MEMORY[0x24BE4EDC0]);
        objc_msgSend(a1, "addCachedEvents:", v17);
      }
      else
      {
        if ((v10 >> 3) != 2)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
          continue;
        }
        v17 = objc_alloc_init(MEMORY[0x24BE4EDC0]);
        objc_msgSend(a1, "addEvents:", v17);
      }
      if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();

    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_2223E6DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223E74AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_2223E8BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223E9434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __percentageForCharacteristicValue(void *a1, void *a2)
{
  id v3;
  float v4;
  float v5;
  void *v6;
  void *v7;
  void *v8;
  float v9;
  float v10;
  void *v11;
  void *v12;
  void *v13;
  float v14;
  float v15;
  double v16;

  if (a2)
  {
    v3 = a1;
    objc_msgSend(a2, "floatValue");
    v5 = v4;
    objc_msgSend(v3, "metadata");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v6, "minimumValue");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      objc_msgSend(v6, "minimumValue");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "floatValue");
      v10 = v9;

    }
    else
    {
      v10 = 0.0;
    }

    objc_msgSend(v6, "maximumValue");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      objc_msgSend(v6, "maximumValue");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "floatValue");
      v15 = v14;

    }
    else
    {
      v15 = 100.0;
    }

    *(float *)&v16 = (float)(v5 - v10) / (float)(v15 - v10);
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithFloat:", v16);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v11 = 0;
  }
  return v11;
}

void sub_2223EE2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F0668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2223F084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Block_object_dispose((const void *)(v32 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_2223F130C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2223F154C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F1F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F20D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F225C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2223F23E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F2594(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2223F2808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F297C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F2AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F2BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F2D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2223F2EF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_2223F3074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2223F31A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__221039(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__221040(uint64_t a1)
{

}

void sub_2223F4720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F6344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F7280(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_2223F7518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F8424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223F91A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223FA000(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2223FA60C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_2223FA88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2223FAA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL isNearLocation(void *a1, void *a2)
{
  id v3;
  id v4;
  double v5;
  double v6;
  int v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  void *v11;
  const char *v12;
  _BOOL8 v13;
  int v15;
  void *v16;
  __int16 v17;
  double v18;
  __int16 v19;
  id v20;
  __int16 v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "distanceFromLocation:", v4);
  v6 = v5;
  v7 = isInternalBuild();
  v8 = (void *)MEMORY[0x227676638]();
  HMFGetOSLogHandle();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
  if (v7)
  {
    if (v10)
    {
      HMFGetLogIdentifier();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138544130;
      v16 = v11;
      v17 = 2048;
      v18 = v6;
      v19 = 2112;
      v20 = v3;
      v21 = 2112;
      v22 = v4;
      v12 = "%{public}@Distance between locations: %lf m (%@, %@)";
LABEL_6:
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_DEBUG, v12, (uint8_t *)&v15, 0x2Au);

    }
  }
  else if (v10)
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = 138544131;
    v16 = v11;
    v17 = 2048;
    v18 = v6;
    v19 = 2117;
    v20 = v3;
    v21 = 2117;
    v22 = v4;
    v12 = "%{public}@Distance between locations: %lf m (%{sensitive}@, %{sensitive}@)";
    goto LABEL_6;
  }

  objc_autoreleasePoolPop(v8);
  if (v6 > 0.0 || fabs(v6) < 2.22044605e-16)
    v13 = v6 < 100.0 || fabs(v6 + -100.0) < 2.22044605e-16;
  else
    v13 = 0;

  return v13;
}

void sub_2223FCD28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2223FE804(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223FE8D8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223FE9AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2223FF410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__221910(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__221911(uint64_t a1)
{

}

void sub_222402AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id CompositeSettings_Database_log()
{
  if (CompositeSettings_Database_log__hmf_once_t0 != -1)
    dispatch_once(&CompositeSettings_Database_log__hmf_once_t0, &__block_literal_global_222064);
  return (id)CompositeSettings_Database_log__hmf_once_v1;
}

void sub_222403AB4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222403BE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222403C9C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222403E08(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222403FF8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222404164(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224041D4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240426C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222404654(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240D3F8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240D464(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240D688(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240D81C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240DE90(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240DFBC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22240ED94(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224137B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22241412C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22241EB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22241F024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22241F454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__224349(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__224350(uint64_t a1)
{

}

uint64_t isBridgedAccessory(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = (void *)MEMORY[0x24BE1B998];
  objc_msgSend(a1, "uniqueIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "instanceIDForUniqueIdentifier:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", *MEMORY[0x24BE1BCA0]);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "isEqualToNumber:", v4) ^ 1;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_222423D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222426F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222427028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  id *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v7);
  _Unwind_Resume(a1);
}

void sub_2224294D8(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_222429F84(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22242ABF4(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

void sub_22242AC90(_Unwind_Exception *a1)
{
  os_unfair_recursive_lock_unlock();
  _Unwind_Resume(a1);
}

__CFString *HMDHomeLocationSourceToString(unint64_t a1)
{
  if (a1 < 5)
    return off_24E795AB8[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void __Block_byref_object_copy__224954(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void __Block_byref_object_dispose__224955(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

double getLocationUpdateTimeInterval()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  _QWORD v14[4];
  void *v15;
  void *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD v19[3];
  int v20;
  _QWORD v21[4];

  v21[0] = 0;
  v21[1] = v21;
  v21[2] = 0x2020000000;
  v21[3] = 0;
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x2020000000;
  v20 = 0;
  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "preferenceForKey:", CFSTR("kLocationUpdateIntervalMinutes"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "numberValue");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "preferenceForKey:", CFSTR("kLocationUpdateIntervalVarianceMinutes"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "numberValue");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = __getLocationUpdateTimeInterval_block_invoke;
  v14[3] = &unk_24E795A98;
  v17 = v21;
  v18 = v19;
  v15 = v2;
  v16 = v5;
  v6 = getLocationUpdateTimeInterval_onceToken;
  v7 = v5;
  v8 = v2;
  v9 = v8;
  if (v6 == -1)
  {
    v10 = v8;
    v11 = v7;
  }
  else
  {
    dispatch_once(&getLocationUpdateTimeInterval_onceToken, v14);
    v10 = v15;
    v11 = v16;
  }
  v12 = *(double *)&getLocationUpdateTimeInterval_locationUpdateIntervalWithVariance;

  _Block_object_dispose(v19, 8);
  _Block_object_dispose(v21, 8);
  return v12;
}

void sub_22242C590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

double __getLocationUpdateTimeInterval_block_invoke(uint64_t a1)
{
  double v2;
  double v3;
  double result;

  if (_os_feature_enabled_impl())
  {
    objc_msgSend(*(id *)(a1 + 32), "doubleValue");
    v3 = v2 * 60.0;
  }
  else
  {
    v3 = 86400.0;
  }
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v3;
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = arc4random_uniform(objc_msgSend(*(id *)(a1 + 40), "unsignedIntValue"));
  result = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)
         + (double)(60 * (unint64_t)*(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));
  *(double *)&getLocationUpdateTimeInterval_locationUpdateIntervalWithVariance = result;
  return result;
}

void sub_22242D09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22242E8B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __HMDHomeAdministratorHandlerRegister(void *a1, void *a2, void *a3, void *a4)
{
  os_unfair_lock_s *v4;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  _Unwind_Exception *v24;
  void *v25;

  v8 = a1;
  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = (void *)MEMORY[0x227676638]();
  v13 = 0;
  if (v8 && v9 && v10 && v11)
  {
    objc_msgSend(v11, "hmf_objectPassingTest:", &__block_literal_global_157);
    v14 = objc_claimAutoreleasedReturnValue();
    if (!v14)
    {
      v24 = (_Unwind_Exception *)_HMFPreconditionFailure();
      os_unfair_lock_unlock(v4);
      _Unwind_Resume(v24);
    }
    v25 = (void *)v14;
    v13 = (void *)objc_msgSend(v11, "mutableCopy");
    v15 = objc_msgSend(v11, "indexOfObjectPassingTest:", &__block_literal_global_160_225270);
    if (v15 == 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v8, "home");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      +[HMDUserMessagePolicy userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:](HMDUserMessagePolicy, "userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:", v16, 4, 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "addObject:", v17);
    }
    else
    {
      v18 = v15;
      objc_msgSend(v13, "objectAtIndex:", v15);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = (void *)objc_msgSend(v19, "mutableCopy");

      objc_msgSend(v16, "setUserPrivilege:", 4);
      objc_msgSend(v16, "setRequiresRemoteAccess:", 0);
      v17 = (void *)objc_msgSend(v16, "copy");
      objc_msgSend(v13, "replaceObjectAtIndex:withObject:", v18, v17);
    }

    v20 = v8;
    v21 = v10;
    os_unfair_lock_lock_with_options();
    objc_msgSend(*((id *)v20 + 8), "objectForKey:", v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v22)
    {
      v22 = (void *)objc_msgSend(objc_alloc((Class)objc_opt_class()), "initWithReceiver:handler:", v21, v20);
      objc_msgSend(*((id *)v20 + 8), "setObject:forKey:", v22, v21);
    }
    os_unfair_lock_unlock((os_unfair_lock_t)v20 + 12);

    objc_msgSend(v22, "registerForMessage:policies:", v9, v13);
  }
  objc_autoreleasePoolPop(v12);

  return v13;
}

BOOL HMDIsAllowedFallbackRemoteError(void *a1)
{
  id v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = a1;
  if ((objc_msgSend(v1, "isHMFError") & 1) != 0)
  {
    v2 = 14;
  }
  else
  {
    if (!objc_msgSend(v1, "isHMError"))
    {
      v3 = 0;
      goto LABEL_9;
    }
    if (objc_msgSend(v1, "code") == 8 || objc_msgSend(v1, "code") == 54)
    {
      v3 = 1;
      goto LABEL_9;
    }
    v2 = 2;
  }
  v3 = objc_msgSend(v1, "code") == v2;
LABEL_9:

  return v3;
}

void sub_2224309E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224348CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__225889(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__225890(uint64_t a1)
{

}

void sub_2224355E0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222436B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22243D598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22243DA6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22243F188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 144));
  _Unwind_Resume(a1);
}

void sub_2224402A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,id location,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  _Block_object_dispose(&a61, 8);
  _Unwind_Resume(a1);
}

void sub_222440B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_222441470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222441C70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_222442560(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_2224426B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_222442C8C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222442D0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222442D84(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222442DFC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222442F58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224430C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222443ED4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224474DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222447618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22244AC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22244CFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;

  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22244DA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_2224515E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222453434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222453728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222454FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222458110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id *location,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id a44)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a16);
  objc_destroyWeak(&a34);
  objc_destroyWeak(&a44);
  _Unwind_Resume(a1);
}

void sub_222459300(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_2224598EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x220]);
  _Unwind_Resume(a1);
}

void sub_22245D384(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22245D7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_22245DE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak((id *)(v10 - 152));
  _Unwind_Resume(a1);
}

void sub_22245F950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222460A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id location)
{
  id *v62;
  uint64_t v63;

  objc_destroyWeak(v62);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v63 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_222460E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222463318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a35);
  _Unwind_Resume(a1);
}

void sub_222464094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id *location, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a69;
  uint64_t v69;

  _Block_object_dispose(&a63, 8);
  _Block_object_dispose((const void *)(v69 - 176), 8);
  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

void sub_22246B44C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22246C528(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22246C7A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22246C988(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22246CB0C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22246CC48(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22246ED0C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_22246F598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222470750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;
  id *v24;
  uint64_t v25;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v25 - 176));
  _Unwind_Resume(a1);
}

void sub_222472A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222473964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222474588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222474B50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222474CE8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224799F0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222479AA4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222479B88(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222479C54(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222479D2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22247C078(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22247EE58(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22247F7AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222480AC0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__227383(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__227384(uint64_t a1)
{

}

void sub_222482450(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_222484664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_222487114(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id __isUserInMessagePartOfHome(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v7, "matchingRemoteIdentityUserForHome:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    v9 = (void *)MEMORY[0x227676638]();
    v10 = v5;
    HMFGetOSLogHandle();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      HMFGetLogIdentifier();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138543874;
      v16 = v12;
      v17 = 2112;
      v18 = v8;
      v19 = 2112;
      v20 = v7;
      _os_log_impl(&dword_2218F0000, v11, OS_LOG_TYPE_DEBUG, "%{public}@Found matching user: %@, for message: %@", (uint8_t *)&v15, 0x20u);

    }
    objc_autoreleasePoolPop(v9);
    v13 = v8;
  }

  return v8;
}

void sub_2224879B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_222488848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_22248950C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22248BAA8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t mapToHMMediaShuffleState(uint64_t a1)
{
  uint64_t v1;

  v1 = 1;
  if (a1 == 1)
    v1 = 2;
  if (a1 == 2)
    return 3;
  else
    return v1;
}

void sub_222491610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222491838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222491964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__229087(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__229088(uint64_t a1)
{

}

void sub_2224934F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__229357(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__229358(uint64_t a1)
{

}

uint64_t AWDHomeKitCameraSettingsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t result;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  void *v61;
  BOOL v62;
  uint64_t v63;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 28) |= 0x20u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_72;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_74;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_72:
          if (*(_BYTE *)(a2 + *v5))
            v19 = 0;
LABEL_74:
          v62 = v19 != 0;
          v63 = 24;
          goto LABEL_99;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_BYTE *)(a1 + 28) |= 8u;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v27 + 1;
              v25 |= (unint64_t)(v28 & 0x7F) << v23;
              if (v28 < 0)
              {
                v23 += 7;
                v14 = v24++ >= 9;
                if (v14)
                {
                  v25 = 0;
                  goto LABEL_78;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
LABEL_78:
          v62 = v25 != 0;
          v63 = 22;
          goto LABEL_99;
        case 3u:
          v29 = 0;
          v30 = 0;
          v31 = 0;
          *(_BYTE *)(a1 + 28) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
              *(_QWORD *)(a2 + v32) = v33 + 1;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                v14 = v30++ >= 9;
                if (v14)
                {
                  LODWORD(v31) = 0;
                  goto LABEL_82;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v31) = 0;
LABEL_82:
          *(_DWORD *)(a1 + 16) = v31;
          continue;
        case 4u:
          v35 = 0;
          v36 = 0;
          v37 = 0;
          *(_BYTE *)(a1 + 28) |= 0x40u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v37 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                v14 = v36++ >= 9;
                if (v14)
                {
                  v37 = 0;
                  goto LABEL_86;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v37 = 0;
LABEL_86:
          v62 = v37 != 0;
          v63 = 25;
          goto LABEL_99;
        case 6u:
          v42 = 0;
          v43 = 0;
          v44 = 0;
          *(_BYTE *)(a1 + 28) |= 2u;
          while (2)
          {
            v45 = *v3;
            v46 = *(_QWORD *)(a2 + v45);
            if (v46 == -1 || v46 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v46);
              *(_QWORD *)(a2 + v45) = v46 + 1;
              v44 |= (unint64_t)(v47 & 0x7F) << v42;
              if (v47 < 0)
              {
                v42 += 7;
                v14 = v43++ >= 9;
                if (v14)
                {
                  v44 = 0;
                  goto LABEL_90;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v44 = 0;
LABEL_90:
          v62 = v44 != 0;
          v63 = 20;
          goto LABEL_99;
        case 7u:
          v48 = 0;
          v49 = 0;
          v50 = 0;
          *(_BYTE *)(a1 + 28) |= 4u;
          while (2)
          {
            v51 = *v3;
            v52 = *(_QWORD *)(a2 + v51);
            if (v52 == -1 || v52 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v52);
              *(_QWORD *)(a2 + v51) = v52 + 1;
              v50 |= (unint64_t)(v53 & 0x7F) << v48;
              if (v53 < 0)
              {
                v48 += 7;
                v14 = v49++ >= 9;
                if (v14)
                {
                  v50 = 0;
                  goto LABEL_94;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v50 = 0;
LABEL_94:
          v62 = v50 != 0;
          v63 = 21;
          goto LABEL_99;
        case 8u:
          v54 = 0;
          v55 = 0;
          v56 = 0;
          *(_BYTE *)(a1 + 28) |= 0x10u;
          break;
        case 9u:
          PBReaderReadString();
          v60 = objc_claimAutoreleasedReturnValue();
          v61 = *(void **)(a1 + 8);
          *(_QWORD *)(a1 + 8) = v60;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v57 = *v3;
        v58 = *(_QWORD *)(a2 + v57);
        if (v58 == -1 || v58 >= *(_QWORD *)(a2 + *v4))
          break;
        v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v58);
        *(_QWORD *)(a2 + v57) = v58 + 1;
        v56 |= (unint64_t)(v59 & 0x7F) << v54;
        if ((v59 & 0x80) == 0)
          goto LABEL_96;
        v54 += 7;
        v14 = v55++ >= 9;
        if (v14)
        {
          v56 = 0;
          goto LABEL_98;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_96:
      if (*(_BYTE *)(a2 + *v5))
        v56 = 0;
LABEL_98:
      v62 = v56 != 0;
      v63 = 23;
LABEL_99:
      *(_BYTE *)(a1 + v63) = v62;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_222497844(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__229719(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__229720(uint64_t a1)
{

}

void sub_22249EA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_22249EE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224A40F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getRadarDraftClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  TapToRadarKitLibrary();
  result = objc_getClass("RadarDraft");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRadarDraftClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__getRadarComponentClass_block_invoke(v3);
  }
  return result;
}

Class __getRadarComponentClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  TapToRadarKitLibrary();
  result = objc_getClass("RadarComponent");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRadarComponentClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = abort_report_np();
    return (Class)__125__HMDTTRManager_initiateRadarWithTitle_componentName_componentVersion_componentID_displayReason_attachments_isUserInitiated___block_invoke(v3);
  }
  return result;
}

void TapToRadarKitLibrary()
{
  void *v0;

  if (!TapToRadarKitLibraryCore())
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t TapToRadarKitLibraryCore()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = TapToRadarKitLibraryCore_frameworkLibrary;
  v6 = TapToRadarKitLibraryCore_frameworkLibrary;
  if (!TapToRadarKitLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_24E797470;
    v8 = *(_OWORD *)&off_24E797480;
    v1 = _sl_dlopen();
    v4[3] = v1;
    TapToRadarKitLibraryCore_frameworkLibrary = v1;
    v0 = v1;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_2224A4E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class __getTapToRadarServiceClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  SEL v4;

  TapToRadarKitLibrary();
  result = objc_getClass("TapToRadarService");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTapToRadarServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = (void *)abort_report_np();
    return (Class)+[HMDTTRManager sharedManager](v3, v4);
  }
  return result;
}

uint64_t AWDHomeKitMultiUserSettingsReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  AWDHomeKitMultiUserSettingsValueByKeyPath *v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v23 = objc_alloc_init(AWDHomeKitMultiUserSettingsValueByKeyPath);
        objc_msgSend(a1, "addHomeKitMultiUserSettingsValuesByKeyPath:", v23);
        if (!PBReaderPlaceMark()
          || (AWDHomeKitMultiUserSettingsValueByKeyPathReadFrom((uint64_t)v23, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        a1[20] |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_33;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_35:
        a1[16] = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t HMDRemoteEventRouterProtoMultiHopFetchEventsResponseReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  id v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v17 = objc_alloc_init(MEMORY[0x24BE4EDC0]);
        objc_msgSend(a1, "addChangedEvents:", v17);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_2224AAECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __mapProfilesToProfileUUIDs(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v7), "uniqueIdentifier", (_QWORD)v12);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "UUIDString");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v9);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

  v10 = (void *)objc_msgSend(v2, "copy");
  return v10;
}

id mapProfilesToAccessoryUUIDs(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v30;
  void *v31;
  id obj;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v4, "count"));
  v30 = v3;
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  objc_msgSend(v3, "accessories");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v34;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v34 != v7)
          objc_enumerationMutation(obj);
        v9 = *(id *)(*((_QWORD *)&v33 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v10 = v9;
        else
          v10 = 0;
        v11 = v10;

        if (v11)
        {
          objc_msgSend(v11, "mediaProfile");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = v12;
          if (v12)
          {
            objc_msgSend(v12, "uniqueIdentifier");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v14, "UUIDString");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            v16 = objc_msgSend(v4, "containsObject:", v15);

            if (v16)
            {
              objc_msgSend(v11, "uuid");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "UUIDString");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "addObject:", v18);

            }
          }

        }
        v19 = v9;
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v20 = v19;
        else
          v20 = 0;
        v21 = v20;

        if (v21)
        {
          objc_msgSend(v21, "findServiceWithServiceType:", CFSTR("00000228-0000-1000-8000-0026BB765291"));
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (v22)
          {
            +[HMDMediaProfile uniqueIdentifierFromAccessory:](HMDHAPMediaProfile, "uniqueIdentifierFromAccessory:", v21);
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "UUIDString");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = objc_msgSend(v4, "containsObject:", v24);

            if (v25)
            {
              objc_msgSend(v21, "uuid");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v26, "UUIDString");
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v31, "addObject:", v27);

            }
          }

        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    }
    while (v6);
  }

  v28 = (void *)objc_msgSend(v31, "copy");
  return v28;
}

id mapProfilesToServiceUUIDs(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  void *v20;
  void *v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v22 = a2;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v22, "count"));
  v20 = v3;
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  objc_msgSend(v3, "accessories");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v24;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v24 != v7)
          objc_enumerationMutation(v4);
        v9 = *(id *)(*((_QWORD *)&v23 + 1) + 8 * v8);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v10 = v9;
        else
          v10 = 0;
        v11 = v10;

        if (v11)
        {
          objc_msgSend(v11, "findServiceWithServiceType:", CFSTR("00000228-0000-1000-8000-0026BB765291"));
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          if (v12)
          {
            +[HMDMediaProfile uniqueIdentifierFromAccessory:](HMDHAPMediaProfile, "uniqueIdentifierFromAccessory:", v11);
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "UUIDString");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v22, "containsObject:", v14);

            if (v15)
            {
              objc_msgSend(v12, "uuid");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v16, "UUIDString");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "addObject:", v17);

            }
          }

        }
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v6);
  }

  v18 = (void *)objc_msgSend(v21, "copy");
  return v18;
}

id __mapUUIDsToProfiles(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", objc_msgSend(v4, "count"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v18;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v18 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v10);
        v12 = objc_alloc(MEMORY[0x24BDD1880]);
        v13 = (void *)objc_msgSend(v12, "initWithUUIDString:", v11, (_QWORD)v17);
        objc_msgSend(v3, "mediaProfileWithUUID:", v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (v14)
          objc_msgSend(v5, "addObject:", v14);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v8);
  }

  v15 = (void *)objc_msgSend(v5, "copy");
  return v15;
}

void sub_2224AF30C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AF394(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AF64C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AF84C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AF9C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AFABC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AFD74(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224AFF40(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B0150(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B03B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B0440(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B0554(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B1704(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B17C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B25AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224B270C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDAccessoryFirmwareUpdateAggregatePolicy *HMDFirmwareUpdatePolicyForAccessory(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  int v31;
  id v32;
  id v33;
  HMDAccessoryFirmwareUpdatePresencePolicy *v34;
  void *v35;
  int v36;
  id v37;
  id v38;
  HMDAccessoryFirmwareUpdateTimedAutomationPolicy *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  NSObject *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  HMDAccessoryFirmwareUpdateCharacteristicBasedPolicy *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  HMDAccessoryFirmwareUpdateTimeWindowPolicy *v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  HMDAccessoryFirmwareUpdateCameraPolicy *v79;
  uint64_t v80;
  NSObject *v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  NSObject *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  NSObject *v97;
  void *v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  HMDAccessoryFirmwareUpdateAllowPolicy *v103;
  void *v104;
  char isKindOfClass;
  void *v106;
  id v107;
  id v108;
  id v109;
  HMDAccessoryFirmwareUpdateAggregatePolicy *v110;
  HMDAccessoryFirmwareUpdateAggregatePolicy *v111;
  void *v113;
  id obj;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  id v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  id v130;
  id v131;
  id v132;
  id v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  _BYTE v149[128];
  uint8_t v150[128];
  uint8_t buf[4];
  void *v152;
  __int16 v153;
  void *v154;
  __int128 aBlock;
  uint64_t (*v156)(uint64_t, void *);
  void *v157;
  id v158;
  uint64_t v159;

  v159 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a3;
  v7 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  objc_msgSend(v7, "addObject:", v5);
  v113 = v5;
  v117 = v6;
  getBridgedAccessoriesForBridge(v5, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "addObjectsFromArray:", v8);

  objc_msgSend(MEMORY[0x24BDBCEF0], "set");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v137 = 0u;
  v138 = 0u;
  v139 = 0u;
  v140 = 0u;
  obj = v7;
  v116 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v137, v149, 16);
  if (v116)
  {
    v115 = *(_QWORD *)v138;
    v120 = a2;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v138 != v115)
        {
          v10 = v9;
          objc_enumerationMutation(obj);
          v9 = v10;
        }
        v119 = v9;
        v11 = *(id *)(*((_QWORD *)&v137 + 1) + 8 * v9);
        v12 = v117;
        objc_msgSend(MEMORY[0x24BDBCEF0], "set");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
        v123 = (void *)objc_claimAutoreleasedReturnValue();
        v141 = 0u;
        v142 = 0u;
        v143 = 0u;
        v144 = 0u;
        objc_msgSend(v11, "services");
        v121 = (id)objc_claimAutoreleasedReturnValue();
        v126 = objc_msgSend(v121, "countByEnumeratingWithState:objects:count:", &v141, v150, 16);
        if (v126)
        {
          v124 = *(_QWORD *)v142;
          v125 = v13;
          v122 = v11;
          v127 = v12;
LABEL_8:
          v14 = 0;
          while (1)
          {
            if (*(_QWORD *)v142 != v124)
            {
              v15 = v14;
              objc_enumerationMutation(v121);
              v14 = v15;
            }
            v128 = v14;
            v16 = *(void **)(*((_QWORD *)&v141 + 1) + 8 * v14);
            if (a2 == 1)
              break;
            if (a2)
              goto LABEL_60;
            objc_msgSend(*(id *)(*((_QWORD *)&v141 + 1) + 8 * v14), "serviceType");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v11, "category");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "categoryType");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v123, "stagingPolicyConfigurationForService:category:", v17, v19);
            v20 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v20)
            {
              objc_msgSend(v16, "serviceType");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v123, "stagingPolicyConfigurationForService:category:", v21, 0);
              v22 = objc_claimAutoreleasedReturnValue();
LABEL_17:
              v20 = (void *)v22;

              if (!v20)
              {
LABEL_60:
                if (objc_msgSend(v16, "isCustom"))
                {
                  v80 = MEMORY[0x227676638]();
                  HMFGetOSLogHandle();
                  v81 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v81, OS_LOG_TYPE_INFO))
                  {
                    HMFGetLogIdentifier();
                    v82 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v16, "serviceType");
                    v83 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138543618;
                    v152 = v82;
                    v153 = 2112;
                    v154 = v83;
                    _os_log_impl(&dword_2218F0000, v81, OS_LOG_TYPE_INFO, "%{public}@Skipping policy creation for the custom service: %@", buf, 0x16u);

                  }
                  v84 = (void *)v80;
                }
                else
                {
                  v85 = v16;
                  if (isIgnoredServiceForAutoApply_token != -1)
                    dispatch_once(&isIgnoredServiceForAutoApply_token, &__block_literal_global_233035);
                  objc_msgSend(v85, "accessory");
                  v86 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v86, "cameraProfiles");
                  v87 = (void *)objc_claimAutoreleasedReturnValue();
                  if (!objc_msgSend(v87, "count"))
                  {

LABEL_76:
                    v96 = (void *)MEMORY[0x227676638]();
                    HMFGetOSLogHandle();
                    v97 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v97, OS_LOG_TYPE_DEBUG))
                    {
                      HMFGetLogIdentifier();
                      v98 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v85, "serviceType");
                      v99 = (void *)objc_claimAutoreleasedReturnValue();
                      *(_DWORD *)buf = 138543618;
                      v152 = v98;
                      v153 = 2112;
                      v154 = v99;
                      _os_log_impl(&dword_2218F0000, v97, OS_LOG_TYPE_DEBUG, "%{public}@Policy configuration not available for service type: %@", buf, 0x16u);

                    }
                    objc_autoreleasePoolPop(v96);
                    v100 = (void *)MEMORY[0x24BDBCE30];
                    v101 = v127;
                    v102 = v11;
                    v103 = -[HMDAccessoryFirmwareUpdatePolicy initWithAccessory:workQueue:]([HMDAccessoryFirmwareUpdateAllowPolicy alloc], "initWithAccessory:workQueue:", v102, v101);

                    objc_msgSend(v100, "arrayWithObject:", v103);
                    v95 = (void *)objc_claimAutoreleasedReturnValue();

                    v12 = v127;
                    v94 = v125;
                    goto LABEL_79;
                  }
                  v88 = (void *)isIgnoredServiceForAutoApply_ignoredServices;
                  objc_msgSend(v85, "serviceType");
                  v89 = (void *)objc_claimAutoreleasedReturnValue();
                  LODWORD(v88) = objc_msgSend(v88, "containsObject:", v89);

                  if (!(_DWORD)v88)
                    goto LABEL_76;
                  v90 = MEMORY[0x227676638]();
                  HMFGetOSLogHandle();
                  v91 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
                  {
                    HMFGetLogIdentifier();
                    v92 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v85, "serviceType");
                    v93 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138543618;
                    v152 = v92;
                    v153 = 2112;
                    v154 = v93;
                    _os_log_impl(&dword_2218F0000, v91, OS_LOG_TYPE_INFO, "%{public}@Skipping policy creation for the accessory firmware update ignored service: %@", buf, 0x16u);

                  }
                  v84 = (void *)v90;
                }
                objc_autoreleasePoolPop(v84);
                v13 = v125;
                goto LABEL_72;
              }
            }
LABEL_18:
            v26 = v20;
            v27 = v11;
            v133 = v127;
            objc_msgSend(MEMORY[0x24BDBCEB8], "array");
            v129 = (void *)objc_claimAutoreleasedReturnValue();
            v134 = v26;
            objc_msgSend(v26, "criteria");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            v29 = objc_msgSend(v28, "anyUserAtHome");

            if ((v29 & 1) != 0
              || (objc_msgSend(v134, "criteria"),
                  v30 = (void *)objc_claimAutoreleasedReturnValue(),
                  v31 = objc_msgSend(v30, "noUserAtHome"),
                  v30,
                  v31))
            {
              v32 = v133;
              v33 = v27;
              v34 = -[HMDAccessoryFirmwareUpdatePresencePolicy initWithAccessory:presenceNeeded:workQueue:]([HMDAccessoryFirmwareUpdatePresencePolicy alloc], "initWithAccessory:presenceNeeded:workQueue:", v33, v29, v32);

              if (v34)
              {
                objc_msgSend(v129, "addObject:", v34);

              }
            }
            objc_msgSend(v134, "criteria");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = objc_msgSend(v35, "checkForScheduledAutomation");

            if (v36)
            {
              v37 = v133;
              v38 = v27;
              v39 = -[HMDAccessoryFirmwareUpdatePolicy initWithAccessory:workQueue:]([HMDAccessoryFirmwareUpdateTimedAutomationPolicy alloc], "initWithAccessory:workQueue:", v38, v37);

              if (v39)
                objc_msgSend(v129, "addObject:", v39);

            }
            v147 = 0u;
            v148 = 0u;
            v145 = 0u;
            v146 = 0u;
            objc_msgSend(v134, "criteria");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v40, "characteristicConfigurations");
            v41 = (void *)objc_claimAutoreleasedReturnValue();

            v131 = v41;
            v136 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v145, buf, 16);
            if (v136)
            {
              v135 = *(_QWORD *)v146;
              v132 = v27;
              do
              {
                v42 = 0;
                do
                {
                  if (*(_QWORD *)v146 != v135)
                    objc_enumerationMutation(v131);
                  v43 = *(void **)(*((_QWORD *)&v145 + 1) + 8 * v42);
                  objc_msgSend(v43, "format");
                  v44 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v43, "values");
                  v45 = (void *)objc_claimAutoreleasedReturnValue();
                  v46 = v44;
                  v47 = v45;
                  if ((objc_msgSend(v46, "isEqualToString:", CFSTR("BOOL")) & 1) != 0
                    || (objc_msgSend(v46, "isEqualToString:", CFSTR("int")) & 1) != 0
                    || objc_msgSend(v46, "isEqualToString:", CFSTR("uint8")))
                  {
                    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
                    *((_QWORD *)&aBlock + 1) = 3221225472;
                    v156 = __characteristicPolicyHandlerForFormat_block_invoke;
                    v157 = &unk_24E798C68;
                    v158 = v47;
                    v48 = _Block_copy(&aBlock);

                  }
                  else
                  {
                    v48 = 0;
                  }

                  if (v48)
                  {
                    objc_msgSend(v134, "type");
                    v49 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v43, "type");
                    v50 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v43, "settlingTime");
                    v51 = (void *)objc_claimAutoreleasedReturnValue();
                    v52 = v27;
                    v53 = v49;
                    v54 = v50;
                    v55 = v51;
                    v56 = v48;
                    v57 = v133;
                    if (v55)
                    {
                      v58 = objc_msgSend(v55, "unsignedIntegerValue");
                    }
                    else
                    {
                      v130 = v52;
                      if (valueDebounceDuration_onceToken != -1)
                        dispatch_once(&valueDebounceDuration_onceToken, &__block_literal_global_25_233039);
                      objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
                      v62 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v62, "preferenceForKey:", CFSTR("firmwareUpdateCharacteristicValueDebounceDuration"));
                      v63 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v63, "numberValue");
                      v64 = (void *)objc_claimAutoreleasedReturnValue();

                      v58 = objc_msgSend(v64, "unsignedIntValue");
                      v52 = v130;
                    }
                    v65 = -[HMDAccessoryFirmwareUpdateCharacteristicBasedPolicy initWithAccessory:serviceType:characteristicType:debounceDuration:policyHandler:workQueue:]([HMDAccessoryFirmwareUpdateCharacteristicBasedPolicy alloc], "initWithAccessory:serviceType:characteristicType:debounceDuration:policyHandler:workQueue:", v52, v53, v54, v58, v56, v57);

                    if (v65)
                      objc_msgSend(v129, "addObject:", v65);

                    v27 = v132;
                  }
                  else
                  {
                    v59 = (void *)MEMORY[0x227676638]();
                    HMFGetOSLogHandle();
                    v60 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
                    {
                      HMFGetLogIdentifier();
                      v61 = (void *)objc_claimAutoreleasedReturnValue();
                      LODWORD(aBlock) = 138543362;
                      *(_QWORD *)((char *)&aBlock + 4) = v61;
                      _os_log_impl(&dword_2218F0000, v60, OS_LOG_TYPE_ERROR, "%{public}@Invalid characteristic policy handler", (uint8_t *)&aBlock, 0xCu);

                    }
                    objc_autoreleasePoolPop(v59);
                  }

                  ++v42;
                }
                while (v136 != v42);
                v66 = objc_msgSend(v131, "countByEnumeratingWithState:objects:count:", &v145, buf, 16);
                v136 = v66;
              }
              while (v66);
            }

            objc_msgSend(v134, "criteria");
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v67, "updateTimeWindow");
            v68 = (void *)objc_claimAutoreleasedReturnValue();

            if (v68)
            {
              objc_msgSend(v134, "criteria");
              v69 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v69, "updateTimeWindow");
              v70 = (void *)objc_claimAutoreleasedReturnValue();
              v71 = v133;
              v72 = v70;
              v73 = v27;
              v74 = -[HMDAccessoryFirmwareUpdateTimeWindowPolicy initWithAccessory:timeWindow:workQueue:]([HMDAccessoryFirmwareUpdateTimeWindowPolicy alloc], "initWithAccessory:timeWindow:workQueue:", v73, v72, v71);

              if (v74)
                objc_msgSend(v129, "addObject:", v74);

            }
            objc_msgSend(v27, "cameraProfiles");
            v75 = (void *)objc_claimAutoreleasedReturnValue();
            v76 = objc_msgSend(v75, "count");

            a2 = v120;
            v11 = v122;
            if (v76)
            {
              v77 = v133;
              v78 = v27;
              v79 = -[HMDAccessoryFirmwareUpdatePolicy initWithAccessory:workQueue:]([HMDAccessoryFirmwareUpdateCameraPolicy alloc], "initWithAccessory:workQueue:", v78, v77);

              if (v79)
                objc_msgSend(v129, "addObject:", v79);

            }
            v13 = v125;
            objc_msgSend(v125, "addObjectsFromArray:", v129);

LABEL_72:
            v12 = v127;
            v14 = v128 + 1;
            if (v128 + 1 == v126)
            {
              v126 = objc_msgSend(v121, "countByEnumeratingWithState:objects:count:", &v141, v150, 16);
              if (v126)
                goto LABEL_8;
              goto LABEL_74;
            }
          }
          objc_msgSend(*(id *)(*((_QWORD *)&v141 + 1) + 8 * v14), "serviceType");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "category");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v24, "categoryType");
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v123, "autoApplyPolicyConfigurationForService:category:", v23, v25);
          v20 = (void *)objc_claimAutoreleasedReturnValue();

          if (v20)
            goto LABEL_18;
          objc_msgSend(v16, "serviceType");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v123, "autoApplyPolicyConfigurationForService:category:", v21, 0);
          v22 = objc_claimAutoreleasedReturnValue();
          goto LABEL_17;
        }
LABEL_74:

        objc_msgSend(v13, "allObjects");
        v94 = v13;
        v95 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_79:

        if (objc_msgSend(v95, "count") == 1)
        {
          objc_msgSend(v95, "firstObject");
          v104 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          isKindOfClass = objc_opt_isKindOfClass();

          if ((isKindOfClass & 1) != 0)
          {
            objc_msgSend(v118, "removeAllObjects");
            objc_msgSend(v95, "firstObject");
            v106 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v118, "addObject:", v106);

            goto LABEL_85;
          }
        }
        objc_msgSend(v118, "addObjectsFromArray:", v95);

        v9 = v119 + 1;
      }
      while (v119 + 1 != v116);
      v116 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v137, v149, 16);
    }
    while (v116);
  }
LABEL_85:

  objc_msgSend(v118, "allObjects");
  v107 = (id)objc_claimAutoreleasedReturnValue();
  v108 = v113;
  v109 = v117;
  if (objc_msgSend(v107, "count"))
  {
    if (objc_msgSend(v107, "count") == 1)
    {
      objc_msgSend(v107, "firstObject");
      v110 = (HMDAccessoryFirmwareUpdateAggregatePolicy *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v110 = -[HMDAccessoryFirmwareUpdateAggregatePolicy initWithPolicies:accessory:workQueue:]([HMDAccessoryFirmwareUpdateAggregatePolicy alloc], "initWithPolicies:accessory:workQueue:", v107, v108, v109);
    }
    v111 = v110;
  }
  else
  {
    v111 = 0;
  }

  -[HMDAccessoryFirmwareUpdateAggregatePolicy configure](v111, "configure");
  return v111;
}

id getBridgedAccessoriesForBridge(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  id v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v22 = a2;
  v23 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  if (objc_msgSend(v3, "isPrimary"))
  {
    objc_msgSend(v3, "identifiersForBridgedAccessories");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "count");

    if (v5)
    {
      objc_msgSend(v3, "identifiersForBridgedAccessories");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = (void *)objc_msgSend(v6, "copy");

      objc_msgSend(v3, "home");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = 0u;
      v25 = 0u;
      v26 = 0u;
      v27 = 0u;
      v9 = v7;
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v25;
        do
        {
          for (i = 0; i != v11; ++i)
          {
            if (*(_QWORD *)v25 != v12)
              objc_enumerationMutation(v9);
            objc_msgSend(v8, "accessoryWithUUID:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i));
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v15 = v14;
            else
              v15 = 0;
            v16 = v15;
            v17 = v16;
            if (v16)
            {
              objc_msgSend(v16, "bridge");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = objc_msgSend(v18, "isEqual:", v3);

              if (v19)
              {
                objc_msgSend(v23, "addObject:", v17);
                getBridgedAccessoriesForBridge(v17, v22);
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v23, "addObjectsFromArray:", v20);

              }
            }

          }
          v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
        }
        while (v11);
      }

    }
  }

  return v23;
}

uint64_t __valueDebounceDuration_block_invoke()
{
  return objc_msgSend(MEMORY[0x24BE3F248], "setDefaultValue:forPreferenceKey:", &unk_24E96D340, CFSTR("firmwareUpdateCharacteristicValueDebounceDuration"));
}

uint64_t __characteristicPolicyHandlerForFormat_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;

  objc_msgSend(a2, "value");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5)
    v6 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v5);
  else
    v6 = 1;

  return v6;
}

void __isIgnoredServiceForAutoApply_block_invoke()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x24BE3F248], "sharedPreferences");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "preferenceForKey:", CFSTR("accessoryFirmwareUpdateAutoApplyIgnoredServices"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "value");
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = (void *)isIgnoredServiceForAutoApply_ignoredServices;
  isIgnoredServiceForAutoApply_ignoredServices = v1;

}

void sub_2224B731C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224B9A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224BB0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__234105(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__234106(uint64_t a1)
{

}

void sub_2224BE5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  id *v21;
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

void sub_2224BEEC0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 80));
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_2224BF404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_2224C445C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_2224C53B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224C5640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__234601(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__234602(uint64_t a1)
{

}

void sub_2224C6128(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224C65BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224C68C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224C6B4C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224C83AC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __modelIDsFromModelIDStrings(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = (void *)objc_msgSend(v1, "copy", 0);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v7));
        if (v8)
          objc_msgSend(v2, "addObject:", v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  v9 = (void *)objc_msgSend(v2, "copy");
  return v9;
}

id __accessoriesWithModelIDs(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id obj;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  void *v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v28 = a1;
  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(v28, "user");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4;
    if (v4)
    {
      objc_msgSend(v4, "home");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        v25 = v5;
        objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v3, "count"));
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v30 = 0u;
        v31 = 0u;
        v32 = 0u;
        v33 = 0u;
        v26 = v3;
        obj = (id)objc_msgSend(v3, "copy");
        v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v31;
          v27 = v7;
          do
          {
            for (i = 0; i != v9; ++i)
            {
              if (*(_QWORD *)v31 != v10)
                objc_enumerationMutation(obj);
              v12 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
              objc_msgSend(v6, "accessoryWithUUID:", v12);
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              if (v13)
              {
                objc_msgSend(v7, "addObject:", v13);
              }
              else
              {
                v14 = (void *)MEMORY[0x227676638]();
                v15 = v28;
                HMFGetOSLogHandle();
                v16 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
                {
                  HMFGetLogIdentifier();
                  v17 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v12, "UUIDString");
                  v18 = (void *)objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138543874;
                  v35 = v17;
                  v36 = 2112;
                  v37 = v18;
                  v38 = 2112;
                  v39 = v6;
                  _os_log_impl(&dword_2218F0000, v16, OS_LOG_TYPE_ERROR, "%{public}@Failed to find accessory with model ID, %@, in home: %@", buf, 0x20u);

                  v7 = v27;
                }

                objc_autoreleasePoolPop(v14);
              }

            }
            v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
          }
          while (v9);
        }

        v19 = (void *)objc_msgSend(v7, "copy");
        v5 = v25;
        v3 = v26;
      }
      else
      {
        v19 = (void *)MEMORY[0x24BDBD1A8];
      }

    }
    else
    {
      v20 = (void *)MEMORY[0x227676638]();
      v21 = v28;
      HMFGetOSLogHandle();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v35 = v23;
        _os_log_impl(&dword_2218F0000, v22, OS_LOG_TYPE_ERROR, "%{public}@Missing user", buf, 0xCu);

      }
      objc_autoreleasePoolPop(v20);
      v19 = (void *)MEMORY[0x24BDBD1A8];
    }

  }
  else
  {
    v19 = (void *)MEMORY[0x24BDBD1A8];
  }

  return v19;
}

void sub_2224C88EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __modelIDStringsFromAccessories(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = (void *)objc_msgSend(v1, "copy", 0);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v7), "uuid");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = v8;
        if (v8)
        {
          objc_msgSend(v8, "UUIDString");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v2, "addObject:", v10);

        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_msgSend(v2, "copy");
  return v11;
}

void sub_2224C959C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224CBC50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC048(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC1CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC25C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC634(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC728(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CC898(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CCAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_2224CD26C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224CE1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __getType(os_unfair_lock_s *a1)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  if (!a1)
    return 0;
  v1 = a1 + 2;
  v2 = a1;
  os_unfair_lock_lock_with_options();
  v3 = *(_QWORD *)&v2[14]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v1);

  return v3;
}

uint64_t __Block_byref_object_copy__235063(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__235064(uint64_t a1)
{

}

id __missingElementsFromLeftNotInRight(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t j;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v27;
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v4, "hmf_isEmpty"))
  {
    v5 = (void *)objc_msgSend(v3, "mutableCopy");
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v4;
    v6 = v4;
    v7 = objc_alloc_init(MEMORY[0x24BDBCED8]);
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    v8 = v6;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v34;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v34 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * i);
          __itemFromConstraint(v13);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = v14;
          if (v14)
          {
            objc_msgSend(v14, "identifier");
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v7, "setObject:forKey:", v13, v16);

          }
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
      }
      while (v10);
    }

    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v28 = v3;
    v17 = v3;
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)v30;
      do
      {
        for (j = 0; j != v19; ++j)
        {
          if (*(_QWORD *)v30 != v20)
            objc_enumerationMutation(v17);
          v22 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * j);
          __itemFromConstraint(v22);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "identifier");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "objectForKey:", v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v25)
            objc_msgSend(v5, "addObject:", v22);

        }
        v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
      }
      while (v19);
    }

    v4 = v27;
    v3 = v28;
  }

  return v5;
}

id __deepCopiedConstraints(void *a1)
{
  objc_class *v1;
  id v2;
  void *v3;

  v1 = (objc_class *)MEMORY[0x24BDBCE30];
  v2 = a1;
  v3 = (void *)objc_msgSend([v1 alloc], "initWithArray:copyItems:", v2, 1);

  return v3;
}

id __itemFromConstraint(void *a1)
{
  void *v1;
  void *v2;
  id v3;

  objc_msgSend(a1, "value");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;

  return v3;
}

BOOL __isConstraintValid(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  id v17;
  _BOOL8 v18;
  void *v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  NSObject *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  NSObject *v39;
  void *v40;
  void *v42;
  void *v43;
  id v44;
  _QWORD *v45;
  uint8_t buf[4];
  void *v47;
  __int16 v48;
  id v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = objc_msgSend(v6, "type");
  if ((unint64_t)(v7 - 1) < 2)
  {
    objc_msgSend(v6, "value");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v16 = v15;
    else
      v16 = 0;
    v17 = v16;

    v18 = v17 != 0;
    if (v17)
      goto LABEL_43;
    v19 = (void *)MEMORY[0x227676638]();
    v20 = v5;
    HMFGetOSLogHandle();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "value");
      v45 = a3;
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v47 = v22;
      v48 = 2112;
      v49 = (id)objc_opt_class();
      v24 = v49;
      _os_log_impl(&dword_2218F0000, v21, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);

      a3 = v45;
    }

    objc_autoreleasePoolPop(v19);
    if (!a3)
      goto LABEL_43;
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 22);
    v25 = (id)objc_claimAutoreleasedReturnValue();
    goto LABEL_41;
  }
  if (v7 == 3)
  {
    objc_msgSend(v6, "value");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v27 = v26;
    else
      v27 = 0;
    v17 = v27;

    if (v17)
    {
      if (objc_msgSend(v17, "compare:", &unk_24E96D388) == 1)
      {
        v18 = 1;
LABEL_43:

        goto LABEL_44;
      }
      v37 = (void *)MEMORY[0x227676638]();
      v38 = v5;
      HMFGetOSLogHandle();
      v39 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v47 = v40;
        v48 = 2112;
        v49 = v17;
        _os_log_impl(&dword_2218F0000, v39, OS_LOG_TYPE_INFO, "%{public}@Invalid step constraint value: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v37);
      if (a3)
      {
        v34 = 43;
        goto LABEL_40;
      }
    }
    else
    {
      v28 = (void *)MEMORY[0x227676638]();
      v29 = v5;
      HMFGetOSLogHandle();
      v30 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "value");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v47 = v31;
        v48 = 2112;
        v49 = (id)objc_opt_class();
        v33 = v49;
        _os_log_impl(&dword_2218F0000, v30, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);

      }
      objc_autoreleasePoolPop(v28);
      if (a3)
      {
        v34 = 22;
LABEL_40:
        objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", v34);
        v25 = (id)objc_claimAutoreleasedReturnValue();
        v18 = 0;
LABEL_41:
        *a3 = v25;
        goto LABEL_43;
      }
    }
    v18 = 0;
    goto LABEL_43;
  }
  if (v7 != 4)
    goto LABEL_35;
  v8 = objc_msgSend(v5, "type");
  if (v8 == 5)
  {
    objc_msgSend(v6, "value");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v36 = v35;
    else
      v36 = 0;
    v11 = v36;

    if (!v11)
    {
      v12 = (void *)MEMORY[0x227676638]();
      v13 = v5;
      HMFGetOSLogHandle();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        goto LABEL_47;
      goto LABEL_46;
    }
    goto LABEL_34;
  }
  if (v8 != 4)
  {
LABEL_35:
    v18 = 1;
    goto LABEL_44;
  }
  objc_msgSend(v6, "value");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v10 = v9;
  else
    v10 = 0;
  v11 = v10;

  if (v11)
  {
LABEL_34:

    goto LABEL_35;
  }
  v12 = (void *)MEMORY[0x227676638]();
  v13 = v5;
  HMFGetOSLogHandle();
  v14 = objc_claimAutoreleasedReturnValue();
  if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    goto LABEL_47;
LABEL_46:
  HMFGetLogIdentifier();
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "value");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)buf = 138543618;
  v47 = v42;
  v48 = 2112;
  v49 = (id)objc_opt_class();
  v44 = v49;
  _os_log_impl(&dword_2218F0000, v14, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);

LABEL_47:
  objc_autoreleasePoolPop(v12);
  if (a3)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 22);
    v18 = 0;
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v18 = 0;
  }
LABEL_44:

  return v18;
}

void sub_2224D03F0(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D13BC(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D1458(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D1C24(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D1DA4(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D2070(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D2330(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2224D2E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void sub_2224D334C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__235351(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__235352(uint64_t a1)
{

}

void sub_2224D45A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224D57E8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224D5AA0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224D68A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, id *location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35,id a36)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a17);
  objc_destroyWeak(&a35);
  objc_destroyWeak(&a36);
  _Unwind_Resume(a1);
}

void sub_2224D6ECC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2224D7DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224DE448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224DE578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__236623(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__236624(uint64_t a1)
{

}

void sub_2224E2D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224E3CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__237174(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__237175(uint64_t a1)
{

}

void sub_2224E4664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224E63F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224E77C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224E97A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDEventTriggerExecutionStateAsString(unint64_t a1)
{
  if (a1 < 7)
    return off_24E798828[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDEventTriggerExecutionState %tu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_2224ED1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2224ED770(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2224EE3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224F00B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__238236(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__238237(uint64_t a1)
{

}

void sub_2224F4D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224F628C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224F66A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224F7D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224F8708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2224FAF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __descriptionHeader(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = (void *)MEMORY[0x24BDD17C8];
  v2 = a1;
  objc_msgSend(v2, "author");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "context");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "stringWithFormat:", CFSTR("A: %@  C: %@"), v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_2224FCF70(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __removeRegistrations(void *a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  _QWORD v12[4];
  id v13;

  v5 = a1;
  v6 = MEMORY[0x24BDAC760];
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = ____removeRegistrations_block_invoke;
  v12[3] = &unk_24E798F80;
  v7 = v5;
  v13 = v7;
  v8 = a3;
  objc_msgSend(a2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v12);
  v10[0] = v6;
  v10[1] = 3221225472;
  v10[2] = ____removeRegistrations_block_invoke_2;
  v10[3] = &unk_24E798FA8;
  v11 = v7;
  v9 = v7;
  objc_msgSend(v8, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v10);

}

uint64_t ____removeRegistrations_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
    v5 = *(void **)(v4 + 24);
  else
    v5 = 0;
  objc_msgSend(v5, "removeObjectForKey:", a2);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
    v7 = *(void **)(v6 + 32);
  else
    v7 = 0;
  objc_msgSend(v7, "removeObjectForKey:", a2);
  v8 = *(_QWORD *)(a1 + 32);
  if (v8)
    v9 = *(void **)(v8 + 48);
  else
    v9 = 0;
  return objc_msgSend(v9, "removeObjectForKey:", a2);
}

void ____removeRegistrations_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    v4 = *(void **)(v3 + 40);
  else
    v4 = 0;
  v7 = a2;
  objc_msgSend(v4, "removeObjectForKey:");
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    v6 = *(void **)(v5 + 56);
  else
    v6 = 0;
  objc_msgSend(v6, "removeObjectForKey:", v7);

}

void sub_2224FDE2C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2224FDEF4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void _binChanges(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;

  v9 = a1;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  if (objc_msgSend(v11, "count") || objc_msgSend(v12, "count"))
  {
    v19 = 0;
    v20 = &v19;
    v21 = 0x3032000000;
    v22 = __Block_byref_object_copy__239209;
    v23 = __Block_byref_object_dispose__239210;
    v24 = 0;
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = ___binChanges_block_invoke;
    v13[3] = &unk_24E798F58;
    v14 = v9;
    v15 = v11;
    v16 = v12;
    v17 = &v19;
    v18 = a2;
    objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v13);
    if (v20[5])
      objc_msgSend(v10, "minusSet:");

    _Block_object_dispose(&v19, 8);
  }

}

void sub_2224FE104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__239209(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__239210(uint64_t a1)
{

}

void ___binChanges_block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  HMCRedirectorStrongTuple *v6;
  void *v7;
  void *v8;
  void *v9;
  HMCRedirectorStrongTuple *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void **v17;
  void *v18;
  void *v19;
  HMCRedirectorChangeItem *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  Protocol *modelType;
  uint64_t v25;
  NSUUID *modelID;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  NSSet *changedProperties;
  uint64_t v32;
  id v33;
  objc_super v34;

  v33 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v33;
  else
    v3 = 0;
  v4 = v3;
  if (v4)
  {
    v5 = *(void **)(a1 + 32);
    if (!v5 || objc_msgSend(v5, "modelBelongsToThisPartition:", v33))
    {
      objc_msgSend(*(id *)(a1 + 40), "objectForKey:", objc_opt_class());
      v6 = (HMCRedirectorStrongTuple *)objc_claimAutoreleasedReturnValue();
      -[HMCRedirectorTuple strongify](v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (v7)
        goto LABEL_9;
      v8 = *(void **)(a1 + 48);
      objc_msgSend(v4, "modelID");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "objectForKey:", v9);
      v10 = (HMCRedirectorStrongTuple *)objc_claimAutoreleasedReturnValue();
      -[HMCRedirectorTuple strongify](v10);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (v7)
      {
LABEL_9:
        v11 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        if (!v11)
        {
          v12 = objc_alloc_init(MEMORY[0x24BDBCEF0]);
          v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
          v14 = *(void **)(v13 + 40);
          *(_QWORD *)(v13 + 40) = v12;

          v11 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        }
        objc_msgSend(v11, "addObject:", v33);
        v15 = **(void ***)(a1 + 64);
        if (!v15)
        {
          objc_msgSend(MEMORY[0x24BDD1650], "strongToStrongObjectsMapTable");
          v16 = objc_claimAutoreleasedReturnValue();
          v17 = *(void ***)(a1 + 64);
          v18 = *v17;
          *v17 = (void *)v16;

          v15 = **(void ***)(a1 + 64);
        }
        objc_msgSend(v15, "objectForKey:", v7);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v19)
        {
          objc_msgSend(MEMORY[0x24BDBCEF0], "set");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(**(id **)(a1 + 64), "setObject:forKey:", v19, v7);
        }
        v20 = [HMCRedirectorChangeItem alloc];
        v21 = *(_QWORD *)(a1 + 48);
        v22 = v4;
        if (v20)
        {
          v34.receiver = v20;
          v34.super_class = (Class)HMCRedirectorChangeItem;
          v20 = (HMCRedirectorChangeItem *)objc_msgSendSuper2(&v34, sel_init);
          if (v20)
          {
            objc_msgSend((id)objc_opt_class(), "backingModelProtocol");
            v23 = objc_claimAutoreleasedReturnValue();
            modelType = v20->_modelType;
            v20->_modelType = (Protocol *)v23;

            objc_msgSend(v22, "modelID");
            v25 = objc_claimAutoreleasedReturnValue();
            modelID = v20->_modelID;
            v20->_modelID = (NSUUID *)v25;

            v27 = (void *)MEMORY[0x24BDBCF20];
            if (v21)
            {
              objc_msgSend(v22, "changedValues");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v28, "allKeys");
              v29 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "setWithArray:", v29);
              v30 = objc_claimAutoreleasedReturnValue();
              changedProperties = v20->_changedProperties;
              v20->_changedProperties = (NSSet *)v30;

            }
            else
            {
              objc_msgSend(MEMORY[0x24BDBCF20], "set");
              v32 = objc_claimAutoreleasedReturnValue();
              v28 = v20->_changedProperties;
              v20->_changedProperties = (NSSet *)v32;
            }

          }
        }

        objc_msgSend(v19, "addObject:", v20);
      }
    }
  }

}

void sub_222500A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222505630(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225056B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22250570C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225057B4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22250A620(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDResetConfigPostCleanupStepsToString(uint64_t a1)
{
  __int16 v1;
  __CFString *v2;
  void *v3;
  void *v4;

  if (!a1)
  {
    v2 = CFSTR("Unknown");
    return v2;
  }
  v1 = a1;
  if (a1 != -1)
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "array");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v3;
    if ((v1 & 2) != 0)
    {
      objc_msgSend(v3, "addObject:", CFSTR("working store"));
      if ((v1 & 4) == 0)
      {
LABEL_7:
        if ((v1 & 8) == 0)
          goto LABEL_8;
        goto LABEL_18;
      }
    }
    else if ((v1 & 4) == 0)
    {
      goto LABEL_7;
    }
    objc_msgSend(v4, "addObject:", CFSTR("cloud store"));
    if ((v1 & 8) == 0)
    {
LABEL_8:
      if ((v1 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_19;
    }
LABEL_18:
    objc_msgSend(v4, "addObject:", CFSTR("local store"));
    if ((v1 & 0x10) == 0)
    {
LABEL_9:
      if ((v1 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_20;
    }
LABEL_19:
    objc_msgSend(v4, "addObject:", CFSTR("shared cloud store"));
    if ((v1 & 0x20) == 0)
    {
LABEL_10:
      if ((v1 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_21;
    }
LABEL_20:
    objc_msgSend(v4, "addObject:", CFSTR("HH1 keyed archive"));
    if ((v1 & 0x40) == 0)
    {
LABEL_11:
      if ((v1 & 0x80) == 0)
        goto LABEL_12;
      goto LABEL_22;
    }
LABEL_21:
    objc_msgSend(v4, "addObject:", CFSTR("HH1 SQL store"));
    if ((v1 & 0x80) == 0)
    {
LABEL_12:
      if ((v1 & 0x100) == 0)
      {
LABEL_14:
        objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", "));
        v2 = (__CFString *)objc_claimAutoreleasedReturnValue();

        return v2;
      }
LABEL_13:
      objc_msgSend(v4, "addObject:", CFSTR("client store"));
      goto LABEL_14;
    }
LABEL_22:
    objc_msgSend(v4, "addObject:", CFSTR("everything except demo mode"));
    if ((v1 & 0x100) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  v2 = CFSTR("everything");
  return v2;
}

void sub_222514CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL HMDIsEmptyHome(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  objc_msgSend(v1, "rooms");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "count"))
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(v1, "accessories");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v4, "count"))
    {
      v3 = 0;
    }
    else
    {
      objc_msgSend(v1, "sharedUsers");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v5, "count"))
      {
        v3 = 0;
      }
      else
      {
        objc_msgSend(v1, "outgoingInvitations");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v3 = objc_msgSend(v6, "count") == 0;

      }
    }

  }
  return v3;
}

uint64_t identifierForTargetWithUUID(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = v3;
  do
  {
    v5 = v4;
    v6 = (void *)MEMORY[0x24BDD1880];
    objc_msgSend(a2, "UUIDString");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = v7;
    objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v11, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "hm_deriveUUIDFromBaseUUID:withSalts:", v5, v8);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = objc_msgSend(v4, "hash");
  }
  while (!(_DWORD)v9);

  return v9;
}

uint64_t mapTargetCategory(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = a1;
  +[HMDHAPMetadata getSharedInstance](HMDHAPMetadata, "getSharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "categoryType");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "categoryForType:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "unsignedShortValue");

  return v6;
}

id buttonConfigurationAsString(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDD16A8], "string");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v7), "shortDescription");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "appendFormat:", CFSTR("%@, "), v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v5);
  }

  v9 = (void *)objc_msgSend(v2, "copy");
  return v9;
}

void sub_22251B6D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void logRemoteMessageEvent(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  __CFString *v14;
  __CFString *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;

  v22 = a1;
  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "hmf_stringForKey:", CFSTR("kRemoteMessageAttributedMessageNameKey"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = v7;
  }
  else
  {
    objc_msgSend(v22, "hmf_stringForKey:", CFSTR("kIDSMessageNameKey"));
    v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  v10 = v9;

  objc_msgSend(v22, "hmf_UUIDForKey:", CFSTR("kIDSMessageIdentifierKey"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "hmf_stringForKey:", CFSTR("kRemoteMessagePeerInformationKey"));
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)v12;
  v14 = CFSTR("Unknown");
  if (v12)
    v14 = (__CFString *)v12;
  v15 = v14;

  objc_msgSend(v6, "hmf_numberForKey:", CFSTR("kRemoteMessageTransportAttributionKey"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "unsignedIntegerValue");
  objc_msgSend(v6, "hmf_numberForKey:", CFSTR("kRemoteMessageQoSKey"));
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  +[HMDMetricsManager sharedLogEventSubmitter](HMDMetricsManager, "sharedLogEventSubmitter");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v21) = v17;
  +[HMDRemoteMessageLogEvent receivedRemoteMessageName:identifier:transactionIdentifier:messageType:peerInformation:secure:transportType:messageQoS:](HMDRemoteMessageLogEvent, "receivedRemoteMessageName:identifier:transactionIdentifier:messageType:peerInformation:secure:transportType:messageQoS:", v10, v11, v5, 0, v15, 1, v21, objc_msgSend(v18, "integerValue"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v19, "submitLogEvent:", v20);
}

id augmentResponseOptions(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = a1;
  v4 = v3;
  if (a2)
  {
    v5 = a2;
    v6 = (void *)objc_msgSend(v4, "mutableCopy");
    objc_msgSend(v6, "setObject:forKey:", v5, CFSTR("kRemoteMessageAttributedMessageNameKey"));

    v7 = (id)objc_msgSend(v6, "copy");
  }
  else
  {
    v7 = v3;
  }

  return v7;
}

uint64_t _pairingFindPeer(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  _QWORD *v7;
  void *v8;
  NSObject *v9;
  id v10;
  void *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD block[5];
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;

  v7 = a4;
  v19 = 0;
  v20 = &v19;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__241906;
  v23 = __Block_byref_object_dispose__241907;
  v24 = 0;
  if (v7[24])
  {
    v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD17C8]), "initWithBytes:length:encoding:", a1, a2, 4);
    if (v8)
    {
      v9 = v7[30];
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = ___pairingFindPeer_block_invoke;
      block[3] = &unk_24E79C0A8;
      v18 = &v19;
      block[4] = v7;
      v10 = v8;
      v17 = v10;
      dispatch_sync(v9, block);

      v11 = (void *)v20[5];
      if (v11)
      {
        if (objc_msgSend(v11, "length") == 32)
        {
          v12 = (_OWORD *)objc_msgSend(objc_retainAutorelease((id)v20[5]), "bytes");
          v13 = 0;
          v14 = v12[1];
          *a3 = *v12;
          a3[1] = v14;
        }
        else
        {
          v13 = 4294960553;
        }
      }
      else
      {
        v13 = 4294960569;
      }
    }
    else
    {
      v10 = 0;
      v13 = 4294960579;
    }
  }
  else
  {
    v10 = 0;
    v13 = 4294960534;
  }
  _Block_object_dispose(&v19, 8);

  return v13;
}

void sub_22251CCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _pairingCopyIdentity(uint64_t a1, char **a2, _OWORD *a3, _OWORD *a4, void *a5)
{
  NSObject **v8;
  NSObject **v9;
  NSObject *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  size_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  _OWORD *v20;
  __int128 v21;
  void *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;

  v8 = a5;
  v9 = v8;
  v28 = 0;
  v29 = &v28;
  v30 = 0x3032000000;
  v31 = __Block_byref_object_copy__241906;
  v32 = __Block_byref_object_dispose__241907;
  v33 = 0;
  if (!v8[23])
  {
    v24 = 4294960534;
    goto LABEL_17;
  }
  v10 = v8[30];
  v27[0] = MEMORY[0x24BDAC760];
  v27[1] = 3221225472;
  v27[2] = ___pairingCopyIdentity_block_invoke;
  v27[3] = &unk_24E79B698;
  v27[4] = v9;
  v27[5] = &v28;
  dispatch_sync(v10, v27);
  v11 = (void *)v29[5];
  if (!v11)
  {
    v24 = 4294960569;
    goto LABEL_17;
  }
  if (a2)
  {
    objc_msgSend(v11, "identifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "lengthOfBytesUsingEncoding:", 4);

    if (!v13)
    {
      v24 = 4294960553;
      goto LABEL_17;
    }
    v14 = v13 + 1;
    v15 = (char *)malloc_type_calloc(v13 + 1, 1uLL, 0x100004077774924uLL);
    if (!v15)
    {
      v24 = 4294960568;
      goto LABEL_17;
    }
    objc_msgSend((id)v29[5], "identifier");
    v16 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    strlcpy(v15, (const char *)objc_msgSend(v16, "UTF8String"), v14);

    *a2 = v15;
  }
  if (a3)
  {
    objc_msgSend((id)v29[5], "publicKey");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "data");
    v18 = (id)objc_claimAutoreleasedReturnValue();

    if (!v18)
    {
LABEL_18:
      v24 = 4294960569;
      goto LABEL_15;
    }
    if (objc_msgSend(v18, "length") != 32)
    {
LABEL_19:
      v24 = 4294960553;
      goto LABEL_15;
    }
    v19 = objc_retainAutorelease(v18);
    v20 = (_OWORD *)objc_msgSend(v19, "bytes");
    v21 = v20[1];
    *a3 = *v20;
    a3[1] = v21;

  }
  if (!a4)
  {
    v24 = 0;
    goto LABEL_17;
  }
  objc_msgSend((id)v29[5], "privateKey");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "data");
  v18 = (id)objc_claimAutoreleasedReturnValue();

  if (!v18)
    goto LABEL_18;
  if (objc_msgSend(v18, "length") != 32)
    goto LABEL_19;
  v18 = objc_retainAutorelease(v18);
  v23 = (_OWORD *)objc_msgSend(v18, "bytes");
  v24 = 0;
  v25 = v23[1];
  *a4 = *v23;
  a4[1] = v25;
LABEL_15:

LABEL_17:
  _Block_object_dispose(&v28, 8);

  return v24;
}

void sub_22251CF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__241906(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__241907(uint64_t a1)
{

}

void ___pairingCopyIdentity_block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  id v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 184);
  v11 = 0;
  (*(void (**)(void))(v2 + 16))();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = v11;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v7 = (void *)MEMORY[0x227676638]();
    v8 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v13 = v10;
      v14 = 2112;
      v15 = v4;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to get local pairing identity with error: %@", buf, 0x16u);

    }
    objc_autoreleasePoolPop(v7);
  }

}

void ___pairingFindPeer_block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 192);
  v12 = 0;
  (*(void (**)(void))(v2 + 16))();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = v12;
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v7 = (void *)MEMORY[0x227676638]();
    v8 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      HMFGetLogIdentifier();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      v14 = v10;
      v15 = 2112;
      v16 = v11;
      v17 = 2112;
      v18 = v4;
      _os_log_impl(&dword_2218F0000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Find peer %@ failed: %@", buf, 0x20u);

    }
    objc_autoreleasePoolPop(v7);
  }

}

void sub_22251E8C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22251F2D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_222520C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  __HMFActivityScopeLeave();
  objc_destroyWeak((id *)(v18 - 112));
  _Unwind_Resume(a1);
}

void sub_222520DE8(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_222524244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2225259F0(_Unwind_Exception *a1)
{
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2225265B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225268EC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225269BC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222526B6C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222526CC0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222526D50(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222526FDC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222527140(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222527908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a71, 8);
  _Unwind_Resume(a1);
}

void sub_222527A7C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222527DE0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222528E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22252D8C0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222534034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222534408(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225344C8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253459C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2225348C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222534EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_22253ACCC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253AEA8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253B1CC(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253B370(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253B5B8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253B770(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253D574(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253E1C4(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22253EF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL AWDHomeKitCameraStreamReconfigureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 16) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__reconfigurationTimestamp;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            LODWORD(v19) = 0;
            v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__reconfigurationTimestamp;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__reconfigurationTimestamp;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_41:
        *(_DWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    *(_BYTE *)(a1 + 16) |= 2u;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__resolution;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        LODWORD(v19) = 0;
        v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__resolution;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___AWDHomeKitCameraStreamReconfigure__resolution;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

__CFString *HMDCameraRecordingAudioCodecTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDCameraRecordingAudioCodecTypeAACLC");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDCameraRecordingAudioCodecTypeAACELD");
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingAudioCodecType %ld"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDCameraRecordingAudioBitRateModeTypeAsString(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("HMDCameraRecordingAudioBitRateModeTypeVariable");
  if (a1 == 1)
  {
    v1 = CFSTR("HMDCameraRecordingAudioBitRateModeTypeConstant");
  }
  else
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingAudioBitRateModeType %ld"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *HMDCameraRecordingAudioSampleRateTypeAsString(unint64_t a1)
{
  if (a1 < 6)
    return off_24E79A798[a1];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Unknown HMDCameraRecordingAudioSampleRateType %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_222544DB8(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222545144(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t checkValueOfClass(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char isKindOfClass;
  char v6;
  void *v7;
  void *v8;

  isKindOfClass = objc_opt_isKindOfClass();
  v6 = isKindOfClass;
  if (a3 && (isKindOfClass & 1) == 0)
  {
    v7 = (void *)MEMORY[0x24BDD1540];
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("Expected %@"), a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "hmfErrorWithCode:reason:", 3, v8);
    *a3 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v6 & 1;
}

void classMethodNotAvailable()
{
  id v0;

  objc_msgSend(MEMORY[0x24BDBCE88], "exceptionWithName:reason:userInfo:", *MEMORY[0x24BDBCAB0], CFSTR("class methods are not supported when adapting NSValueTransformers"), 0);
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_exception_throw(v0);
}

void sub_22254B8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id accessoryRequestMapFromRequests(void *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _BOOL4 v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  _BOOL4 v26;
  uint64_t v27;
  void *v28;
  void *v29;
  NSObject *v30;
  void *v31;
  void *v32;
  void *v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  __int128 v45;
  id v46;
  uint64_t v47;
  id v48;
  id obj;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint8_t buf[4];
  void *v55;
  __int16 v56;
  void *v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v48 = a2;
  v46 = a3;
  objc_msgSend(MEMORY[0x24BDD1650], "strongToStrongObjectsMapTable");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v50 = 0u;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  obj = v5;
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)v51;
    *(_QWORD *)&v8 = 138543618;
    v45 = v8;
    do
    {
      v11 = 0;
      v47 = v9;
      do
      {
        if (*(_QWORD *)v51 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * v11);
        objc_msgSend(v12, "accessory", v45);
        v13 = objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          v14 = (void *)v13;
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
            goto LABEL_12;
          v15 = v10;
          v16 = v6;
          objc_msgSend(v12, "characteristic");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "type");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "service");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "type");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = +[HMDHAPMetadata isOwnerPrivilegeRequiredForWritingCharacteristicType:serviceType:](HMDHAPMetadata, "isOwnerPrivilegeRequiredForWritingCharacteristicType:serviceType:", v18, v20);

          if (v21 && (objc_msgSend(v46, "isOwner") & 1) == 0)
          {
            v33 = (void *)MEMORY[0x227676638]();
            HMFGetOSLogHandle();
            v34 = objc_claimAutoreleasedReturnValue();
            v6 = v16;
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v35 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v45;
              v55 = v35;
              v56 = 2112;
              v57 = v12;
              _os_log_impl(&dword_2218F0000, v34, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic write request that requires owner privilege: %@", buf, 0x16u);

            }
            objc_autoreleasePoolPop(v33);
            objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 10);
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            +[HMDCharacteristicResponse responseWithRequest:error:](HMDCharacteristicResponse, "responseWithRequest:error:", v12, v36);
            v37 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v48, "addObject:", v37);
            v10 = v15;
            v9 = v47;
          }
          else
          {
            objc_msgSend(v12, "characteristic");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v22, "type");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "service");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v24, "type");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            v26 = +[HMDHAPMetadata isAdminPrivilegeRequiredForWritingCharacteristicType:serviceType:](HMDHAPMetadata, "isAdminPrivilegeRequiredForWritingCharacteristicType:serviceType:", v23, v25);

            v6 = v16;
            v10 = v15;
            v9 = v47;
            if (!v26 || (objc_msgSend(v46, "isAdministrator") & 1) != 0)
            {
LABEL_12:
              if ((objc_msgSend(v14, "isPrimary") & 1) == 0)
              {
                objc_msgSend(v14, "bridge");
                v27 = objc_claimAutoreleasedReturnValue();

                v14 = (void *)v27;
              }
              objc_msgSend(v6, "objectForKey:", v14);
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v28)
              {
                objc_msgSend(MEMORY[0x24BDBCEB8], "array");
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v6, "setObject:forKey:", v28, v14);
              }
              objc_msgSend(v28, "addObject:", v12);

              goto LABEL_20;
            }
            v38 = (void *)MEMORY[0x227676638]();
            HMFGetOSLogHandle();
            v39 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              v40 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)buf = v45;
              v55 = v40;
              v56 = 2112;
              v57 = v12;
              _os_log_impl(&dword_2218F0000, v39, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic write request that requires admin privilege: %@", buf, 0x16u);

            }
            objc_autoreleasePoolPop(v38);
            objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 10);
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            +[HMDCharacteristicResponse responseWithRequest:error:](HMDCharacteristicResponse, "responseWithRequest:error:", v12, v41);
            v42 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v48, "addObject:", v42);
          }
        }
        else
        {
          v29 = (void *)MEMORY[0x227676638]();
          HMFGetOSLogHandle();
          v30 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
          {
            HMFGetLogIdentifier();
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = v45;
            v55 = v31;
            v56 = 2112;
            v57 = v12;
            _os_log_impl(&dword_2218F0000, v30, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic request: %@, accessory is nil", buf, 0x16u);

          }
          objc_autoreleasePoolPop(v29);
          objc_msgSend(MEMORY[0x24BDD1540], "hmErrorWithCode:", 2);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          +[HMDCharacteristicResponse responseWithRequest:error:](HMDCharacteristicResponse, "responseWithRequest:error:", v12, v32);
          v14 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v48, "addObject:", v14);
        }
LABEL_20:

        ++v11;
      }
      while (v9 != v11);
      v43 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
      v9 = v43;
    }
    while (v43);
  }

  return v6;
}

void sub_22254E128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22255003C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_2225507D4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2225510A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __writeRequestsFromRequests_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

uint64_t __migrateRequestsPassingTest_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_2225525A0(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222552608(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_222552970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
  os_unfair_lock_unlock(lock);
  _Unwind_Resume(a1);
}

void sub_222554550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2225564B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22255681C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDRemoteMessagePayloadKeysForTransportMetadata()
{
  if (HMDRemoteMessagePayloadKeysForTransportMetadata_onceToken != -1)
    dispatch_once(&HMDRemoteMessagePayloadKeysForTransportMetadata_onceToken, &__block_literal_global_248614);
  return (id)HMDRemoteMessagePayloadKeysForTransportMetadata_keys;
}

void sub_22255DCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22255E218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22255E3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22255E65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22256714C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_222567290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2225673D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222567534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22256767C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_222567790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2225678D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2225679D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__249827(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__249828(uint64_t a1)
{

}

void sub_22256D200(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22256D34C(_Unwind_Exception *a1)
{
  os_unfair_lock_s *v1;

  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22256DA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2225769F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateLoggedInAccount(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  void *v30;
  void *v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  id v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = (void *)MEMORY[0x227676638]();
  v9 = v5;
  HMFGetOSLogHandle();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    HMFGetLogIdentifier();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v33 = v11;
    v34 = 2112;
    v35 = v6;
    _os_log_impl(&dword_2218F0000, v10, OS_LOG_TYPE_INFO, "%{public}@Posting transaction to update logged in account to %@", buf, 0x16u);

  }
  objc_autoreleasePoolPop(v8);
  objc_msgSend(v9, "accessory");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "transactionWithObjectChangeType:", 2);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v14 = v13;
  else
    v14 = 0;
  v15 = v14;

  if (v15)
  {
    encodeRootObject();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setLoggedInAccount:", v16);

    objc_msgSend(v12, "home");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "backingStore");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "name");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    +[HMDBackingStoreTransactionOptions defaultXPCOptions](HMDBackingStoreTransactionOptions, "defaultXPCOptions");
    v19 = v13;
    v20 = v15;
    v21 = v9;
    v22 = v12;
    v23 = v7;
    v24 = v6;
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "transaction:options:", v18, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = v24;
    v7 = v23;
    v12 = v22;
    v9 = v21;
    v15 = v20;
    v13 = v19;

    objc_msgSend(v26, "add:withMessage:", v15, v7);
    objc_msgSend(v26, "run");

  }
  else
  {
    v27 = (void *)MEMORY[0x227676638]();
    v28 = v9;
    HMFGetOSLogHandle();
    v29 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      HMFGetLogIdentifier();
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v33 = v30;
      _os_log_impl(&dword_2218F0000, v29, OS_LOG_TYPE_ERROR, "%{public}@Did not obtain apple media accessory model type to update logged in account.", buf, 0xCu);

    }
    objc_autoreleasePoolPop(v27);
  }

}

__CFString *HMDMediaDestinationManagerFailureCodeAsString(uint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;

  if ((unint64_t)(a1 - 1) >= 3)
  {
    v2 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", a1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "stringWithFormat:", CFSTR("failureCode(%@)"), v3);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v1 = off_24E79BE00[a1 - 1];
  }
  return v1;
}

void sub_222587270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_222587E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__254562(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__254563(uint64_t a1)
{

}

void sub_22258AC4C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x380], 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__254878(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__254879(uint64_t a1)
{

}

void sub_22258CCB4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 256));
  _Unwind_Resume(a1);
}

void sub_22258D480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, id a15)
{
  id *v15;
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a15);
  _Unwind_Resume(a1);
}

void sub_22258EFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__255177(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__255178(uint64_t a1)
{

}

id addOrReplaceElements(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v8 = (void *)objc_msgSend(v6, "mutableCopy");
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __addOrReplaceElements_block_invoke;
    v13[3] = &unk_24E79C528;
    v9 = v8;
    v14 = v9;
    v15 = v7;
    objc_msgSend(v5, "na_each:", v13);
    v10 = v15;
    v11 = v9;

  }
  else
  {
    v11 = v6;
  }

  return v11;
}

void __addOrReplaceElements_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a2;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __addOrReplaceElements_block_invoke_2;
  v8[3] = &unk_24E79C500;
  v4 = *(void **)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v7 = v3;
  v9 = v7;
  v5 = objc_msgSend(v4, "indexOfObjectPassingTest:", v8);
  v6 = *(void **)(a1 + 32);
  if (v5 == 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(v6, "addObject:", v7);
  else
    objc_msgSend(v6, "replaceObjectAtIndex:withObject:", v5, v7);

}

uint64_t __addOrReplaceElements_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), a2);
  if ((_DWORD)result)
    *a4 = 1;
  return result;
}

uint64_t sub_222596360()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_22259636C()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_222596378()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_222596384()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_222596390()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_22259639C()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_2225963A8()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2225963B4()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_2225963C0()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2225963CC()
{
  return MEMORY[0x24BDCB8C0]();
}

uint64_t sub_2225963D8()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_2225963E4()
{
  return MEMORY[0x24BDCB910]();
}

uint64_t sub_2225963F0()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_2225963FC()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_222596408()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_222596414()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_222596420()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_22259642C()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_222596438()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_222596444()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_222596450()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_22259645C()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_222596468()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_222596474()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_222596480()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_22259648C()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_222596498()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_2225964A4()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_2225964B0()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_2225964BC()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2225964C8()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2225964D4()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_2225964E0()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_2225964EC()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_2225964F8()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_222596504()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_222596510()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_22259651C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_222596528()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_222596534()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_222596540()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22259654C()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_222596558()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_222596564()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_222596570()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_22259657C()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_222596588()
{
  return MEMORY[0x24BDCDC68]();
}

uint64_t _s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2225965A0()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2225965AC()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_2225965B8()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_2225965C4()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_2225965D0()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_2225965DC()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2225965E8()
{
  return MEMORY[0x24BDCE600]();
}

uint64_t sub_2225965F4()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_222596600()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_22259660C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_222596618()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_222596624()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_222596630()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_22259663C()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_222596648()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_222596654()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_222596660()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_22259666C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_222596678()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_222596684()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_222596690()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_22259669C()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_2225966A8()
{
  return MEMORY[0x24BE31D88]();
}

uint64_t sub_2225966B4()
{
  return MEMORY[0x24BE31DD0]();
}

uint64_t sub_2225966C0()
{
  return MEMORY[0x24BE31DE8]();
}

uint64_t sub_2225966CC()
{
  return MEMORY[0x24BE31F98]();
}

uint64_t sub_2225966D8()
{
  return MEMORY[0x24BE32018]();
}

uint64_t sub_2225966E4()
{
  return MEMORY[0x24BE32040]();
}

uint64_t sub_2225966F0()
{
  return MEMORY[0x24BE32048]();
}

uint64_t sub_2225966FC()
{
  return MEMORY[0x24BE32060]();
}

uint64_t sub_222596708()
{
  return MEMORY[0x24BE322C8]();
}

uint64_t sub_222596714()
{
  return MEMORY[0x24BE32320]();
}

uint64_t sub_222596720()
{
  return MEMORY[0x24BE32378]();
}

uint64_t sub_22259672C()
{
  return MEMORY[0x24BE32388]();
}

uint64_t sub_222596738()
{
  return MEMORY[0x24BE3E828]();
}

uint64_t sub_222596744()
{
  return MEMORY[0x24BE3E830]();
}

uint64_t sub_222596750()
{
  return MEMORY[0x24BE3E840]();
}

uint64_t sub_22259675C()
{
  return MEMORY[0x24BE3E848]();
}

uint64_t sub_222596768()
{
  return MEMORY[0x24BE3E850]();
}

uint64_t sub_222596774()
{
  return MEMORY[0x24BE3E858]();
}

uint64_t sub_222596780()
{
  return MEMORY[0x24BE3E860]();
}

uint64_t sub_22259678C()
{
  return MEMORY[0x24BE3E868]();
}

uint64_t sub_222596798()
{
  return MEMORY[0x24BE3E870]();
}

uint64_t sub_2225967A4()
{
  return MEMORY[0x24BE3E878]();
}

uint64_t sub_2225967B0()
{
  return MEMORY[0x24BE3E888]();
}

uint64_t sub_2225967BC()
{
  return MEMORY[0x24BE3E890]();
}

uint64_t sub_2225967C8()
{
  return MEMORY[0x24BE3E898]();
}

uint64_t sub_2225967D4()
{
  return MEMORY[0x24BE3E8A0]();
}

uint64_t sub_2225967E0()
{
  return MEMORY[0x24BE3E8B0]();
}

uint64_t sub_2225967EC()
{
  return MEMORY[0x24BE3E8B8]();
}

uint64_t sub_2225967F8()
{
  return MEMORY[0x24BE3E8C0]();
}

uint64_t sub_222596804()
{
  return MEMORY[0x24BE3E8C8]();
}

uint64_t sub_222596810()
{
  return MEMORY[0x24BE3E8D8]();
}

uint64_t sub_22259681C()
{
  return MEMORY[0x24BE3E8E0]();
}

uint64_t sub_222596828()
{
  return MEMORY[0x24BE3E8E8]();
}

uint64_t sub_222596834()
{
  return MEMORY[0x24BE3E8F0]();
}

uint64_t sub_222596840()
{
  return MEMORY[0x24BE3E8F8]();
}

uint64_t sub_22259684C()
{
  return MEMORY[0x24BE3E900]();
}

uint64_t sub_222596858()
{
  return MEMORY[0x24BE3E908]();
}

uint64_t sub_222596864()
{
  return MEMORY[0x24BE3E910]();
}

uint64_t sub_222596870()
{
  return MEMORY[0x24BE3E918]();
}

uint64_t sub_22259687C()
{
  return MEMORY[0x24BE3E920]();
}

uint64_t sub_222596888()
{
  return MEMORY[0x24BE3E928]();
}

uint64_t sub_222596894()
{
  return MEMORY[0x24BE3E938]();
}

uint64_t sub_2225968A0()
{
  return MEMORY[0x24BE3E958]();
}

uint64_t sub_2225968AC()
{
  return MEMORY[0x24BE3E968]();
}

uint64_t sub_2225968B8()
{
  return MEMORY[0x24BE3E978]();
}

uint64_t sub_2225968C4()
{
  return MEMORY[0x24BE3E988]();
}

uint64_t sub_2225968D0()
{
  return MEMORY[0x24BE3E990]();
}

uint64_t sub_2225968DC()
{
  return MEMORY[0x24BE3E998]();
}

uint64_t sub_2225968E8()
{
  return MEMORY[0x24BE3E9A0]();
}

uint64_t sub_2225968F4()
{
  return MEMORY[0x24BE3E9A8]();
}

uint64_t sub_222596900()
{
  return MEMORY[0x24BE3E9B8]();
}

uint64_t sub_22259690C()
{
  return MEMORY[0x24BE3E9C0]();
}

uint64_t sub_222596918()
{
  return MEMORY[0x24BE4EDD0]();
}

uint64_t sub_222596924()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_222596930()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_22259693C()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_222596948()
{
  return MEMORY[0x24BE4F0C0]();
}

uint64_t sub_222596954()
{
  return MEMORY[0x24BE4F0C8]();
}

uint64_t sub_222596960()
{
  return MEMORY[0x24BE4F0D0]();
}

uint64_t sub_22259696C()
{
  return MEMORY[0x24BE4F0D8]();
}

uint64_t sub_222596978()
{
  return MEMORY[0x24BE4F0E0]();
}

uint64_t sub_222596984()
{
  return MEMORY[0x24BE4F0E8]();
}

uint64_t sub_222596990()
{
  return MEMORY[0x24BE4F0F0]();
}

uint64_t sub_22259699C()
{
  return MEMORY[0x24BE4F100]();
}

uint64_t sub_2225969A8()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t sub_2225969B4()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_2225969C0()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_2225969CC()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_2225969D8()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_2225969E4()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_2225969F0()
{
  return MEMORY[0x24BE5C088]();
}

uint64_t sub_2225969FC()
{
  return MEMORY[0x24BE5C090]();
}

uint64_t sub_222596A08()
{
  return MEMORY[0x24BE5C0B0]();
}

uint64_t sub_222596A14()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t sub_222596A20()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t sub_222596A2C()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_222596A38()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_222596A44()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_222596A50()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_222596A5C()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_222596A68()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_222596A74()
{
  return MEMORY[0x24BE5C200]();
}

uint64_t sub_222596A80()
{
  return MEMORY[0x24BE5C288]();
}

uint64_t sub_222596A8C()
{
  return MEMORY[0x24BE5C290]();
}

uint64_t sub_222596A98()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t sub_222596AA4()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t sub_222596AB0()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t sub_222596ABC()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_222596AC8()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_222596AD4()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_222596AE0()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_222596AEC()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_222596AF8()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_222596B04()
{
  return MEMORY[0x24BE799B8]();
}

uint64_t sub_222596B10()
{
  return MEMORY[0x24BE799C0]();
}

uint64_t sub_222596B1C()
{
  return MEMORY[0x24BE799C8]();
}

uint64_t sub_222596B28()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_222596B34()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_222596B40()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_222596B4C()
{
  return MEMORY[0x24BDD4720]();
}

uint64_t sub_222596B58()
{
  return MEMORY[0x24BDD4750]();
}

uint64_t sub_222596B64()
{
  return MEMORY[0x24BDD4758]();
}

uint64_t sub_222596B70()
{
  return MEMORY[0x24BDD4760]();
}

uint64_t sub_222596B7C()
{
  return MEMORY[0x24BDD4770]();
}

uint64_t sub_222596B88()
{
  return MEMORY[0x24BDD4778]();
}

uint64_t sub_222596B94()
{
  return MEMORY[0x24BDD4780]();
}

uint64_t sub_222596BA0()
{
  return MEMORY[0x24BDD4788]();
}

uint64_t sub_222596BAC()
{
  return MEMORY[0x24BDD4790]();
}

uint64_t sub_222596BB8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_222596BC4()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_222596BD0()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_222596BDC()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_222596BE8()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_222596BF4()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_222596C00()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_222596C0C()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_222596C18()
{
  return MEMORY[0x24BDC63A0]();
}

uint64_t sub_222596C24()
{
  return MEMORY[0x24BDC63B0]();
}

uint64_t sub_222596C30()
{
  return MEMORY[0x24BDC63E0]();
}

uint64_t sub_222596C3C()
{
  return MEMORY[0x24BDC66D8]();
}

uint64_t sub_222596C48()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_222596C54()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_222596C60()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_222596C6C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_222596C78()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_222596C84()
{
  return MEMORY[0x24BEE0500]();
}

uint64_t sub_222596C90()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_222596C9C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_222596CA8()
{
  return MEMORY[0x24BEE07F8]();
}

uint64_t sub_222596CB4()
{
  return MEMORY[0x24BEE0800]();
}

uint64_t sub_222596CC0()
{
  return MEMORY[0x24BEE0808]();
}

uint64_t sub_222596CCC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_222596CD8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_222596CE4()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_222596CF0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_222596CFC()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_222596D08()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_222596D14()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_222596D20()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_222596D2C()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_222596D38()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_222596D44()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_222596D50()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_222596D5C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_222596D68()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_222596D74()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_222596D80()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_222596D8C()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_222596D98()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_222596DA4()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_222596DB0()
{
  return MEMORY[0x24BE3E9C8]();
}

uint64_t sub_222596DBC()
{
  return MEMORY[0x24BE3E9D8]();
}

uint64_t sub_222596DC8()
{
  return MEMORY[0x24BE3E9E8]();
}

uint64_t sub_222596DD4()
{
  return MEMORY[0x24BEE1050]();
}

uint64_t sub_222596DE0()
{
  return MEMORY[0x24BEE1058]();
}

uint64_t sub_222596DEC()
{
  return MEMORY[0x24BEE1060]();
}

uint64_t sub_222596DF8()
{
  return MEMORY[0x24BEE10D0]();
}

uint64_t sub_222596E04()
{
  return MEMORY[0x24BEE10D8]();
}

uint64_t sub_222596E10()
{
  return MEMORY[0x24BEE10E0]();
}

uint64_t sub_222596E1C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_222596E28()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_222596E34()
{
  return MEMORY[0x24BDCFBC0]();
}

uint64_t sub_222596E40()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_222596E4C()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_222596E58()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_222596E64()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_222596E70()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_222596E7C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_222596E88()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_222596E94()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_222596EA0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_222596EAC()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_222596EB8()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_222596EC4()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_222596ED0()
{
  return MEMORY[0x24BEE6860]();
}

uint64_t sub_222596EDC()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_222596EE8()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_222596EF4()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_222596F00()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_222596F0C()
{
  return MEMORY[0x24BEE6A40]();
}

uint64_t sub_222596F18()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_222596F24()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_222596F30()
{
  return MEMORY[0x24BEE6A98]();
}

uint64_t sub_222596F3C()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_222596F48()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_222596F54()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_222596F60()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_222596F6C()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_222596F78()
{
  return MEMORY[0x24BEE1478]();
}

uint64_t sub_222596F84()
{
  return MEMORY[0x24BDCFC78]();
}

uint64_t sub_222596F90()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_222596F9C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_222596FA8()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_222596FB4()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_222596FC0()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_222596FCC()
{
  return MEMORY[0x24BEE16E8]();
}

uint64_t sub_222596FD8()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_222596FE4()
{
  return MEMORY[0x24BDCFD38]();
}

uint64_t sub_222596FF0()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_222596FFC()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_222597008()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_222597014()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_222597020()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_22259702C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_222597038()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_222597044()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_222597050()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_22259705C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_222597068()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_222597074()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_222597080()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22259708C()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_222597098()
{
  return MEMORY[0x24BDD0010]();
}

uint64_t sub_2225970A4()
{
  return MEMORY[0x24BDD0028]();
}

uint64_t sub_2225970B0()
{
  return MEMORY[0x24BDD0058]();
}

uint64_t sub_2225970BC()
{
  return MEMORY[0x24BDBB390]();
}

uint64_t sub_2225970C8()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_2225970D4()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_2225970E0()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_2225970EC()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2225970F8()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_222597104()
{
  return MEMORY[0x24BEE1C60]();
}

uint64_t sub_222597110()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22259711C()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_222597128()
{
  return MEMORY[0x24BDD0498]();
}

uint64_t sub_222597134()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_222597140()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22259714C()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_222597158()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_222597164()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_222597170()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22259717C()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_222597188()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_222597194()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_2225971A0()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2225971AC()
{
  return MEMORY[0x24BEE2318]();
}

uint64_t sub_2225971B8()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_2225971C4()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_2225971D0()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_2225971DC()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_2225971E8()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_2225971F4()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_222597200()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_22259720C()
{
  return MEMORY[0x24BEE2368]();
}

uint64_t sub_222597218()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_222597224()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_222597230()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_22259723C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_222597248()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_222597254()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_222597260()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_22259726C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_222597278()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_222597284()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_222597290()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_22259729C()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2225972A8()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2225972B4()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_2225972C0()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_2225972CC()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2225972D8()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_2225972E4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2225972F0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2225972FC()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_222597308()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_222597314()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_222597320()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_22259732C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_222597338()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_222597344()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_222597350()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_22259735C()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_222597368()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_222597374()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_222597380()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_22259738C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_222597398()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2225973A4()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_2225973B0()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2225973BC()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2225973C8()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2225973D4()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2225973E0()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2225973EC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2225973F8()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_222597404()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_222597410()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_22259741C()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_222597428()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_222597434()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_222597440()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_22259744C()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_222597458()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_222597464()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_222597470()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_22259747C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_222597488()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_222597494()
{
  return MEMORY[0x24BEE33F0]();
}

uint64_t sub_2225974A0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2225974AC()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2225974B8()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_2225974C4()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2225974D0()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2225974DC()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2225974E8()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2225974F4()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_222597500()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_22259750C()
{
  return MEMORY[0x24BEE3530]();
}

uint64_t sub_222597518()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_222597524()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_222597530()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22259753C()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_222597548()
{
  return MEMORY[0x24BEE3678]();
}

uint64_t sub_222597554()
{
  return MEMORY[0x24BEE3680]();
}

uint64_t sub_222597560()
{
  return MEMORY[0x24BEE3688]();
}

uint64_t sub_22259756C()
{
  return MEMORY[0x24BEE3698]();
}

uint64_t sub_222597578()
{
  return MEMORY[0x24BEE36A0]();
}

uint64_t sub_222597584()
{
  return MEMORY[0x24BEE36A8]();
}

uint64_t sub_222597590()
{
  return MEMORY[0x24BEE36C8]();
}

uint64_t sub_22259759C()
{
  return MEMORY[0x24BEE36F0]();
}

uint64_t sub_2225975A8()
{
  return MEMORY[0x24BEE3700]();
}

uint64_t sub_2225975B4()
{
  return MEMORY[0x24BEE3708]();
}

uint64_t sub_2225975C0()
{
  return MEMORY[0x24BEE37D8]();
}

uint64_t sub_2225975CC()
{
  return MEMORY[0x24BEE37E0]();
}

uint64_t sub_2225975D8()
{
  return MEMORY[0x24BEE37E8]();
}

uint64_t sub_2225975E4()
{
  return MEMORY[0x24BEE37F0]();
}

uint64_t sub_2225975F0()
{
  return MEMORY[0x24BEE37F8]();
}

uint64_t sub_2225975FC()
{
  return MEMORY[0x24BEE3800]();
}

uint64_t sub_222597608()
{
  return MEMORY[0x24BEE3808]();
}

uint64_t sub_222597614()
{
  return MEMORY[0x24BEE3810]();
}

uint64_t sub_222597620()
{
  return MEMORY[0x24BEE3818]();
}

uint64_t sub_22259762C()
{
  return MEMORY[0x24BEE3820]();
}

uint64_t sub_222597638()
{
  return MEMORY[0x24BEE3828]();
}

uint64_t sub_222597644()
{
  return MEMORY[0x24BEE3830]();
}

uint64_t sub_222597650()
{
  return MEMORY[0x24BEE3838]();
}

uint64_t sub_22259765C()
{
  return MEMORY[0x24BEE3840]();
}

uint64_t sub_222597668()
{
  return MEMORY[0x24BEE3848]();
}

uint64_t sub_222597674()
{
  return MEMORY[0x24BEE3850]();
}

uint64_t sub_222597680()
{
  return MEMORY[0x24BEE3858]();
}

uint64_t sub_22259768C()
{
  return MEMORY[0x24BEE3860]();
}

uint64_t sub_222597698()
{
  return MEMORY[0x24BEE3868]();
}

uint64_t sub_2225976A4()
{
  return MEMORY[0x24BEE3870]();
}

uint64_t sub_2225976B0()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_2225976BC()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_2225976C8()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_2225976D4()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2225976E0()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2225976EC()
{
  return MEMORY[0x24BEE3AD0]();
}

uint64_t sub_2225976F8()
{
  return MEMORY[0x24BEE3AD8]();
}

uint64_t sub_222597704()
{
  return MEMORY[0x24BEE3B70]();
}

uint64_t sub_222597710()
{
  return MEMORY[0x24BEE3B78]();
}

uint64_t sub_22259771C()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_222597728()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_222597734()
{
  return MEMORY[0x24BEE3BE8]();
}

uint64_t sub_222597740()
{
  return MEMORY[0x24BEE3BF0]();
}

uint64_t sub_22259774C()
{
  return MEMORY[0x24BEE3BF8]();
}

uint64_t sub_222597758()
{
  return MEMORY[0x24BEE3C08]();
}

uint64_t sub_222597764()
{
  return MEMORY[0x24BEE3C10]();
}

uint64_t sub_222597770()
{
  return MEMORY[0x24BEE3C18]();
}

uint64_t sub_22259777C()
{
  return MEMORY[0x24BEE3C38]();
}

uint64_t sub_222597788()
{
  return MEMORY[0x24BEE3C60]();
}

uint64_t sub_222597794()
{
  return MEMORY[0x24BEE3C70]();
}

uint64_t sub_2225977A0()
{
  return MEMORY[0x24BEE3C78]();
}

uint64_t sub_2225977AC()
{
  return MEMORY[0x24BEE3C80]();
}

uint64_t sub_2225977B8()
{
  return MEMORY[0x24BEE3C88]();
}

uint64_t sub_2225977C4()
{
  return MEMORY[0x24BEE3C90]();
}

uint64_t sub_2225977D0()
{
  return MEMORY[0x24BEE3CA0]();
}

uint64_t sub_2225977DC()
{
  return MEMORY[0x24BEE3CA8]();
}

uint64_t sub_2225977E8()
{
  return MEMORY[0x24BEE3CB0]();
}

uint64_t sub_2225977F4()
{
  return MEMORY[0x24BEE3CD0]();
}

uint64_t sub_222597800()
{
  return MEMORY[0x24BEE3CE0]();
}

uint64_t sub_22259780C()
{
  return MEMORY[0x24BEE3CF8]();
}

uint64_t sub_222597818()
{
  return MEMORY[0x24BEE3D00]();
}

uint64_t sub_222597824()
{
  return MEMORY[0x24BEE3D08]();
}

uint64_t sub_222597830()
{
  return MEMORY[0x24BEE3D10]();
}

uint64_t sub_22259783C()
{
  return MEMORY[0x24BEE3D18]();
}

uint64_t sub_222597848()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_222597854()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_222597860()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_22259786C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_222597878()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_222597884()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_222597890()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_22259789C()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_2225978A8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_2225978B4()
{
  return MEMORY[0x24BEE3EE8]();
}

uint64_t sub_2225978C0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2225978CC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2225978D8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2225978E4()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2225978F0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2225978FC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_222597908()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_222597914()
{
  return MEMORY[0x24BEE4308]();
}

uint64_t sub_222597920()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_22259792C()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_222597938()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_222597944()
{
  return MEMORY[0x24BDD07B8]();
}

uint64_t sub_222597950()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_22259795C()
{
  return MEMORY[0x24BDD0810]();
}

uint64_t sub_222597968()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_222597974()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_222597980()
{
  return MEMORY[0x24BEE4830]();
}

uint64_t sub_22259798C()
{
  return MEMORY[0x24BEE4858]();
}

uint64_t sub_222597998()
{
  return MEMORY[0x24BEE4870]();
}

uint64_t sub_2225979A4()
{
  return MEMORY[0x24BEE49F8]();
}

uint64_t sub_2225979B0()
{
  return MEMORY[0x24BEE4A00]();
}

uint64_t sub_2225979BC()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2225979C8()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2225979D4()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AFPreferencesMultiUserCompanionNotificationLanguageCodesForHomePodVersion()
{
  return MEMORY[0x24BE08EC8]();
}

uint64_t BOMCopierCopyWithOptions()
{
  return MEMORY[0x24BE0FA58]();
}

uint64_t BOMCopierFree()
{
  return MEMORY[0x24BE0FA68]();
}

uint64_t BOMCopierNew()
{
  return MEMORY[0x24BE0FA70]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

uint64_t CARenderServerGetServerPort()
{
  return MEMORY[0x24BDE5540]();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x24BDAC328](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x24BDAC330](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x24BDAC338](c, data, *(_QWORD *)&len);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x24BDAC360](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x24BDAC368](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x24BDAC370](c, data, *(_QWORD *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x24BDBB780]();
  return result;
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x24BDBB7C8](theArray, value);
}

uint64_t CFArrayApplyBlock()
{
  return MEMORY[0x24BE28F20]();
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x24BDBB808](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x24BDBB820](theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x24BDBB850]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x24BDBB860](theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x24BDBB930](arg);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x24BDBBA18]();
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x24BDBBCF8](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x24BDBBD08]();
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x24BDBBDA8]();
}

uint64_t CFDictionaryApplyBlock()
{
  return MEMORY[0x24BE28F48]();
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x24BDBBDD8](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x24BDBBE00](theDict);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x24BDBBE18]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x24BDBBEF8](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x24BDBC040](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x24BDBC050]();
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x24BDBC088](center, observer, name, object);
}

CFTypeID CFNullGetTypeID(void)
{
  return MEMORY[0x24BDBC090]();
}

CFIndex CFNumberGetByteSize(CFNumberRef number)
{
  return MEMORY[0x24BDBC108](number);
}

CFNumberType CFNumberGetType(CFNumberRef number)
{
  return MEMORY[0x24BDBC110](number);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x24BDBC118]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x24BDBC150](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x24BDBC160](key, applicationID);
}

CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFArrayRef)MEMORY[0x24BDBC168](applicationID, userName, hostName);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFDictionaryRef)MEMORY[0x24BDBC170](keysToFetch, applicationID, userName, hostName);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x24BDBC178](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x24BDBC188](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x24BDBC190](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
  MEMORY[0x24BDBC198](key, value, applicationID);
}

void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x24BDBC1A0](keysToSet, keysToRemove, applicationID, userName, hostName);
}

uint64_t CFPrefs_CopyTypedValue()
{
  return MEMORY[0x24BE29088]();
}

uint64_t CFPrefs_GetDouble()
{
  return MEMORY[0x24BE29090]();
}

uint64_t CFPrefs_GetInt64()
{
  return MEMORY[0x24BE29098]();
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x24BDBC2A8](cf);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x24BDBC598](alloc, formatOptions, format);
}

CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen)
{
  return MEMORY[0x24BDBC5F8](theString, range.location, range.length, *(_QWORD *)&encoding, lossByte, isExternalRepresentation, buffer, maxBufLen);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x24BDBC658](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x24BDBC698]();
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x24BDBC918](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x24BDBC920](allocator, flags, error, dictionary, timeout);
}

CFStringRef CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx)
{
  return (CFStringRef)MEMORY[0x24BDBC948](userNotification, key, idx);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x24BDBC950](userNotification, responseFlags, timeout);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x24BDBD918](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x24BDBD920](context);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
  MEMORY[0x24BDBDDD8](c, image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x24BDBDF30](c);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9048](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9078](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef image)
{
  return MEMORY[0x24BDBE620](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x24BDBE630](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x24BDBE648](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBE658](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x24BDBE680](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x24BDBE6E0](image);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x24BDD9158](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9170](data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9180](url, options);
}

uint64_t CKContainerEnvironmentFromString()
{
  return MEMORY[0x24BDB8E70]();
}

uint64_t CKContainerEnvironmentString()
{
  return MEMORY[0x24BDB8E78]();
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x24BDBFA10](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x24BDC0450](time1, time2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  Float64 result;

  MEMORY[0x24BDC0490](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x24BDC0498](retstr, value, *(_QWORD *)&timescale);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x24BDC04C0](retstr, *(_QWORD *)&preferredTimescale, seconds);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x24BDC0558](retstr, range);
}

CMTimeRange *__cdecl CMTimeRangeGetIntersection(CMTimeRange *__return_ptr retstr, CMTimeRange *range, CMTimeRange *otherRange)
{
  return (CMTimeRange *)MEMORY[0x24BDC0568](retstr, range, otherRange);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x24BDC05A0](retstr, lhs, rhs);
}

uint64_t CPCopyBundleIdentifierAndTeamFromAuditToken()
{
  return MEMORY[0x24BE04658]();
}

uint64_t DebugGetErrorString()
{
  return MEMORY[0x24BE29350]();
}

uint64_t GetPrimaryIPAddress()
{
  return MEMORY[0x24BE293F0]();
}

uint64_t HAPAccessCodeResponseStatusAsString()
{
  return MEMORY[0x24BE1B420]();
}

uint64_t HAPAccessoryServerDiscoveryMethodToString()
{
  return MEMORY[0x24BE1B450]();
}

uint64_t HAPAccessoryServerSessionTypesFromString()
{
  return MEMORY[0x24BE1B458]();
}

uint64_t HAPAccessorySuspendedStateDescription()
{
  return MEMORY[0x24BE1B460]();
}

uint64_t HAPAuthMethodToString()
{
  return MEMORY[0x24BE1B488]();
}

uint64_t HAPCharacteristicFormatFromString()
{
  return MEMORY[0x24BE1B4A0]();
}

uint64_t HAPCommunicationProtocolDescription()
{
  return MEMORY[0x24BE1B668]();
}

uint64_t HAPCompareStateNumberWithRollover()
{
  return MEMORY[0x24BE1B670]();
}

uint64_t HAPDataStreamTransportCommandStatusAsString()
{
  return MEMORY[0x24BE1B678]();
}

uint64_t HAPDateWithTimeIntervalSince1970()
{
  return MEMORY[0x24BE1B680]();
}

uint64_t HAPDispatchQueueName()
{
  return MEMORY[0x24BE1B688]();
}

uint64_t HAPFirmwareUpdateStateAsString()
{
  return MEMORY[0x24BE1B698]();
}

uint64_t HAPIsHH2Enabled()
{
  return MEMORY[0x24BE1B6A0]();
}

uint64_t HAPLinkLayerTypeDescription()
{
  return MEMORY[0x24BE1B6B0]();
}

uint64_t HAPLinkTypeDescription()
{
  return MEMORY[0x24BE1B6B8]();
}

uint64_t HAPOTAProviderStateAsString()
{
  return MEMORY[0x24BE1B750]();
}

uint64_t HAPOperatingStateAbnormalReasonsAsString()
{
  return MEMORY[0x24BE1B758]();
}

uint64_t HAPOperatingStateAsString()
{
  return MEMORY[0x24BE1B760]();
}

uint64_t HAPShortUUIDType()
{
  return MEMORY[0x24BE1B8A0]();
}

uint64_t HAPStagingNotReadyReasonsAsString()
{
  return MEMORY[0x24BE1B8A8]();
}

uint64_t HAPStringFromAccessoryServerSession()
{
  return MEMORY[0x24BE1B8B0]();
}

uint64_t HAPTLVCreateParseArrayToString()
{
  return MEMORY[0x24BE1B8C0]();
}

uint64_t HAPTLVParseContiguousTlvs()
{
  return MEMORY[0x24BE1B8C8]();
}

uint64_t HAPTLVParseUInt64()
{
  return MEMORY[0x24BE1B8D0]();
}

uint64_t HAPTLVWriteUInt64()
{
  return MEMORY[0x24BE1B8D8]();
}

uint64_t HAPUpdateNotReadyReasonsAsString()
{
  return MEMORY[0x24BE1B910]();
}

uint64_t HAPUserPermissionTypeDescription()
{
  return MEMORY[0x24BE1B918]();
}

uint64_t HAPValidateSetupHash()
{
  return MEMORY[0x24BE1B920]();
}

uint64_t HKSPGenerateSleepStoreIdentifier()
{
  return MEMORY[0x24BEA93D8]();
}

uint64_t HMAccessoryCertificationStatusToString()
{
  return MEMORY[0x24BDD4AA0]();
}

uint64_t HMAccessoryNetworkProtectionModeAsString()
{
  return MEMORY[0x24BDD4CF0]();
}

uint64_t HMAccessorySettingConstraintTypeFromString()
{
  return MEMORY[0x24BDD4DF0]();
}

uint64_t HMAccessorySettingPropertiesFromString()
{
  return MEMORY[0x24BDD4E38]();
}

uint64_t HMAccessorySettingPropertiesToString()
{
  return MEMORY[0x24BDD4E40]();
}

uint64_t HMAccessorySettingTypeFromString()
{
  return MEMORY[0x24BDD4E68]();
}

uint64_t HMAccessorySettingTypeToString()
{
  return MEMORY[0x24BDD4E70]();
}

uint64_t HMAccessoryTransportTypesToString()
{
  return MEMORY[0x24BDD5118]();
}

uint64_t HMAccessoryWiFiCredentialTypeAsString()
{
  return MEMORY[0x24BDD5180]();
}

uint64_t HMActionTypeAsString()
{
  return MEMORY[0x24BDD5230]();
}

uint64_t HMAreSnapshotsAllowedForCameraAccessMode()
{
  return MEMORY[0x24BDD52B0]();
}

uint64_t HMAssistantAccessControlOptionsToString()
{
  return MEMORY[0x24BDD52D8]();
}

uint64_t HMCLAuthorizationStatusAsString()
{
  return MEMORY[0x24BDD53C0]();
}

uint64_t HMCLRegionStateAsString()
{
  return MEMORY[0x24BDD53C8]();
}

uint64_t HMCacheSubdirectoryWithRelativePath()
{
  return MEMORY[0x24BDD53D0]();
}

uint64_t HMCameraAccessModeAsString()
{
  return MEMORY[0x24BDD53D8]();
}

uint64_t HMCameraAudioStreamSettingAsString()
{
  return MEMORY[0x24BDD53E0]();
}

uint64_t HMCameraSignificantEventPersonFamiliarityOptionsAsString()
{
  return MEMORY[0x24BDD55E0]();
}

uint64_t HMCameraSignificantEventTypesAsString()
{
  return MEMORY[0x24BDD55E8]();
}

uint64_t HMCameraSignificantEventTypesFromReasons()
{
  return MEMORY[0x24BDD55F0]();
}

uint64_t HMCameraSupportedFeaturesAsString()
{
  return MEMORY[0x24BDD5658]();
}

uint64_t HMCreateHomeKitCacheDirectory()
{
  return MEMORY[0x24BDD5AD0]();
}

uint64_t HMDLocationAuthorizationAsString()
{
  return MEMORY[0x24BDD5AD8]();
}

uint64_t HMDRegionStateString()
{
  return MEMORY[0x24BDD5AE0]();
}

uint64_t HMDSecureClassBulletinUserAttributionTime()
{
  return MEMORY[0x24BDD5AE8]();
}

uint64_t HMDTaggedLoggingCreateDictionary()
{
  return MEMORY[0x24BE4F108]();
}

uint64_t HMDailyRotatedUUID()
{
  return MEMORY[0x24BDD5AF8]();
}

uint64_t HMDateComponentFromSecondsOfDay()
{
  return MEMORY[0x24BDD5B00]();
}

uint64_t HMDateFromDateWithHourAndMinuteComponents()
{
  return MEMORY[0x24BDD5B08]();
}

uint64_t HMDaysOfTheWeekFromDateComponents()
{
  return MEMORY[0x24BDD5B10]();
}

uint64_t HMDaysOfTheWeekToDateComponents()
{
  return MEMORY[0x24BDD5B18]();
}

uint64_t HMDispatchQueueNameString()
{
  return MEMORY[0x24BDD5BA8]();
}

uint64_t HMDurationsApproximatelyEqual()
{
  return MEMORY[0x24BDD5BD0]();
}

uint64_t HMEProtoEventInfoReadFrom()
{
  return MEMORY[0x24BE4ED70]();
}

uint64_t HMErrorFromOSStatus()
{
  return MEMORY[0x24BE1B928]();
}

uint64_t HMEventTriggerActivationStateAsString()
{
  return MEMORY[0x24BDD5BE0]();
}

uint64_t HMFAreStringsEqualIgnoringCase()
{
  return MEMORY[0x24BE3E9F8]();
}

uint64_t HMFBooleanToString()
{
  return MEMORY[0x24BE3EA00]();
}

uint64_t HMFCreateOSLogHandle()
{
  return MEMORY[0x24BE3EA08]();
}

uint64_t HMFDataIsReversed()
{
  return MEMORY[0x24BE3EA10]();
}

uint64_t HMFDigestAlgorithmToString()
{
  return MEMORY[0x24BE3EA18]();
}

uint64_t HMFDispatchQueueName()
{
  return MEMORY[0x24BE3EA20]();
}

uint64_t HMFEnabledStatusToString()
{
  return MEMORY[0x24BE3EB98]();
}

uint64_t HMFEncodedRootObject()
{
  return MEMORY[0x24BE3EBA0]();
}

uint64_t HMFEqualObjects()
{
  return MEMORY[0x24BE3EBA8]();
}

uint64_t HMFGetLogIdentifier()
{
  return MEMORY[0x24BE3EBB8]();
}

uint64_t HMFGetOSLogHandle()
{
  return MEMORY[0x24BE3EBC0]();
}

uint64_t HMFIsInternalBuild()
{
  return MEMORY[0x24BE3EBD8]();
}

uint64_t HMFMethodDescription()
{
  return MEMORY[0x24BE3EC08]();
}

uint64_t HMFObjectDescription()
{
  return MEMORY[0x24BE3EC10]();
}

uint64_t HMFOperatingSystemVersionCompare()
{
  return MEMORY[0x24BE3EC18]();
}

uint64_t HMFProductClassFromString()
{
  return MEMORY[0x24BE3EC58]();
}

uint64_t HMFProductClassToString()
{
  return MEMORY[0x24BE3EC60]();
}

uint64_t HMFProductColorToString()
{
  return MEMORY[0x24BE3EC68]();
}

uint64_t HMFProductPlatformFromString()
{
  return MEMORY[0x24BE3F0C8]();
}

uint64_t HMFProductPlatformToString()
{
  return MEMORY[0x24BE3F0D0]();
}

uint64_t HMFQOSClassFromQualityOfService()
{
  return MEMORY[0x24BE3F0D8]();
}

uint64_t HMFQualityOfServiceCompare()
{
  return MEMORY[0x24BE3F0E0]();
}

uint64_t HMFQualityOfServiceToString()
{
  return MEMORY[0x24BE3F0E8]();
}

uint64_t HMFRandomDataWithLength()
{
  return MEMORY[0x24BE3F0F0]();
}

uint64_t HMFRandomUInt32()
{
  return MEMORY[0x24BE3F0F8]();
}

uint64_t HMFRequireCurrentAsyncContext()
{
  return MEMORY[0x24BE3F100]();
}

uint64_t HMFTimeIntervalDescription()
{
  return MEMORY[0x24BE3F120]();
}

uint64_t HMFUptime()
{
  return MEMORY[0x24BE3F128]();
}

uint64_t HMHomeAddWalletKeyOptionsDescription()
{
  return MEMORY[0x24BDD5C60]();
}

uint64_t HMHomeKitCacheDirectory()
{
  return MEMORY[0x24BDD5DF8]();
}

uint64_t HMHomeManagerAreAnyAccessoriesConfigured()
{
  return MEMORY[0x24BDD5E50]();
}

uint64_t HMHomeManagerAreAnyAppleTVAccessoriesConfigured()
{
  return MEMORY[0x24BDD5E58]();
}

uint64_t HMHomeManagerAreAnySpeakersConfigured()
{
  return MEMORY[0x24BDD5E60]();
}

uint64_t HMHomeManagerAreAnyTelevisionAccessoriesConfigured()
{
  return MEMORY[0x24BDD5E68]();
}

uint64_t HMHomeManagerDataSyncStateToString()
{
  return MEMORY[0x24BDD5EB0]();
}

uint64_t HMHomeManagerNameValidationOptionsToString()
{
  return MEMORY[0x24BDD6068]();
}

uint64_t HMHomeManagerOptionsShortDescription()
{
  return MEMORY[0x24BDD6090]();
}

uint64_t HMHomeManagerOptionsToString()
{
  return MEMORY[0x24BDD6098]();
}

uint64_t HMHomeManagerStatusToString()
{
  return MEMORY[0x24BDD6148]();
}

uint64_t HMHomeWalletKeyColorAsString()
{
  return MEMORY[0x24BDD63F0]();
}

uint64_t HMINControlHomeIntentShortDescription()
{
  return MEMORY[0x24BDD6468]();
}

uint64_t HMImmutableSettingChangeEventComponentsFromTopic()
{
  return MEMORY[0x24BDD6470]();
}

uint64_t HMImmutableSettingChangeEventTopicFromComponents()
{
  return MEMORY[0x24BDD6478]();
}

uint64_t HMImmutableSettingChangeEventTopicFromMediaSystem()
{
  return MEMORY[0x24BDD6480]();
}

uint64_t HMIsHAPMetadataNeededForHMHomeManagerOptions()
{
  return MEMORY[0x24BDD64A0]();
}

uint64_t HMIsMotionDetectionAllowedForCameraAccessMode()
{
  return MEMORY[0x24BDD64A8]();
}

uint64_t HMIsRecordingAllowedForCameraAccessMode()
{
  return MEMORY[0x24BDD64B0]();
}

uint64_t HMIsStreamingAllowedForCameraAccessMode()
{
  return MEMORY[0x24BDD64B8]();
}

uint64_t HMIsValidRegion()
{
  return MEMORY[0x24BDD64C0]();
}

uint64_t HMIsValidSignificantEvent()
{
  return MEMORY[0x24BDD64C8]();
}

uint64_t HMMLogTagActivityWithError()
{
  return MEMORY[0x24BE4F130]();
}

uint64_t HMMMUserRestrictionToString()
{
  return MEMORY[0x24BDD65A8]();
}

uint64_t HMMSafeHomeUUIDFromLogEvent()
{
  return MEMORY[0x24BE4F140]();
}

uint64_t HMMTRUserPrivilegeAsString()
{
  return MEMORY[0x24BE4EF30]();
}

uint64_t HMMatterScheduleIntervalFromStartAndEndDates()
{
  return MEMORY[0x24BDD65B0]();
}

uint64_t HMMaxLengthForNaming()
{
  return MEMORY[0x24BDD65B8]();
}

uint64_t HMMediaDestinationControllerSupportOptionsAsString()
{
  return MEMORY[0x24BDD65C8]();
}

uint64_t HMMediaDestinationControllerUpateOptionsAsString()
{
  return MEMORY[0x24BDD65D0]();
}

uint64_t HMMediaDestinationSupportOptionsAsString()
{
  return MEMORY[0x24BDD6600]();
}

uint64_t HMMediaDestinationTypeAsString()
{
  return MEMORY[0x24BDD6610]();
}

uint64_t HMMediaSystemRoleTypeAsString()
{
  return MEMORY[0x24BDD6768]();
}

uint64_t HMNetworkProtectionModeAsString()
{
  return MEMORY[0x24BDD67D0]();
}

uint64_t HMNetworkRouterSupportDisableReasonAsString()
{
  return MEMORY[0x24BDD68C8]();
}

uint64_t HMPresenceEventTypeAsString()
{
  return MEMORY[0x24BDD69F0]();
}

uint64_t HMPresenceEventUserTypeAsString()
{
  return MEMORY[0x24BDD69F8]();
}

uint64_t HMSecondsFromDateComponent()
{
  return MEMORY[0x24BDD6AC0]();
}

uint64_t HMSettingConstraintTypeToString()
{
  return MEMORY[0x24BDD6CC0]();
}

uint64_t HMSettingVersionValueTypeAsString()
{
  return MEMORY[0x24BDD6CE8]();
}

uint64_t HMSetupAccessoryProgressAsString()
{
  return MEMORY[0x24BDD6CF0]();
}

uint64_t HMSiriEndpointOnboardingResultAsString()
{
  return MEMORY[0x24BDD6D10]();
}

uint64_t HMSiriEndpointProfileSessionStateTypeToString()
{
  return MEMORY[0x24BDD6D98]();
}

uint64_t HMSoftwareUpdateAssetSourceAsString()
{
  return MEMORY[0x24BDD6DC8]();
}

uint64_t HMSoftwareUpdateNeedsAttentionReasonsToString()
{
  return MEMORY[0x24BDD6E98]();
}

uint64_t HMSoftwareUpdateStateToString()
{
  return MEMORY[0x24BDD6ED0]();
}

uint64_t HMSoftwareUpdateUpdateTypeToString()
{
  return MEMORY[0x24BDD6EF0]();
}

uint64_t HMStringFromCameraClipQuality()
{
  return MEMORY[0x24BDD6F10]();
}

uint64_t HMStringFromCameraSignificantEventConfidenceLevel()
{
  return MEMORY[0x24BDD6F18]();
}

uint64_t HMStringFromCameraSignificantEventReason()
{
  return MEMORY[0x24BDD6F20]();
}

uint64_t HMStringFromHomeLocation()
{
  return MEMORY[0x24BDD6F28]();
}

uint64_t HMStringFromIntentRequestType()
{
  return MEMORY[0x24BDD6F30]();
}

uint64_t HMUserCameraAccessLevelAsString()
{
  return MEMORY[0x24BDD7040]();
}

uint64_t HMUserDefaultCamerasAccessLevel()
{
  return MEMORY[0x24BDD70A0]();
}

uint64_t HMUserIsRecordingAllowedWithCameraAccessLevel()
{
  return MEMORY[0x24BDD70C0]();
}

uint64_t HMUserIsStreamingAllowedWithCameraAccessLevel()
{
  return MEMORY[0x24BDD70D0]();
}

uint64_t HMUserIsValidCameraAccessLevel()
{
  return MEMORY[0x24BDD70D8]();
}

uint64_t HMUserPrivilegeToString()
{
  return MEMORY[0x24BDD7150]();
}

uint64_t HMVConfigurationCloudKitContainerID()
{
  return MEMORY[0x24BE4EDE0]();
}

uint64_t HMVConfigurationZoneNameForZoneUUID()
{
  return MEMORY[0x24BE4EDE8]();
}

uint64_t HMVConfigurationZoneUUIDForHomeIdentifier()
{
  return MEMORY[0x24BE4EDF0]();
}

uint64_t HMXPCClientEntitlementsShortDescription()
{
  return MEMORY[0x24BDD7288]();
}

uint64_t HardwareAddressToCString()
{
  return MEMORY[0x24BE29598]();
}

uint64_t IDSCopyAddressDestinationForDestination()
{
  return MEMORY[0x24BE4F958]();
}

uint64_t IDSCopyIDForBusinessID()
{
  return MEMORY[0x24BE4F970]();
}

uint64_t IDSCopyIDForDevice()
{
  return MEMORY[0x24BE4F978]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x24BE4F980]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x24BE4F988]();
}

uint64_t IDSCopyIDForTokenWithID()
{
  return MEMORY[0x24BE4F9A0]();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return MEMORY[0x24BE4F9A8]();
}

IOReturn IOPMAssertionCreateWithDescription(CFStringRef AssertionType, CFStringRef Name, CFStringRef Details, CFStringRef HumanReadableReason, CFStringRef LocalizationBundlePath, CFTimeInterval Timeout, CFStringRef TimeoutAction, IOPMAssertionID *AssertionID)
{
  return MEMORY[0x24BDD8710](AssertionType, Name, Details, HumanReadableReason, LocalizationBundlePath, TimeoutAction, AssertionID, Timeout);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return MEMORY[0x24BDD8740](*(_QWORD *)&AssertionID);
}

uint64_t IOPSDrawingUnlimitedPower()
{
  return MEMORY[0x24BDD8808]();
}

uint64_t IXStringForAppRemovability()
{
  return MEMORY[0x24BE51F58]();
}

uint64_t IsAppleTV()
{
  return MEMORY[0x24BE295B8]();
}

uint64_t LogPrintF()
{
  return MEMORY[0x24BE295F0]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x24BED8470]();
}

uint64_t MGGetProductType()
{
  return MEMORY[0x24BED8488]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x24BED84B0]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x24BE67140]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

uint64_t MPCAssistantErrorIsInformational()
{
  return MEMORY[0x24BE64CB0]();
}

uint64_t MRAVEndpointCopyLocalizedName()
{
  return MEMORY[0x24BE64D90]();
}

uint64_t MRAVEndpointCopyOutputDevices()
{
  return MEMORY[0x24BE64D98]();
}

uint64_t MRAVEndpointCopyUniqueIdentifier()
{
  return MEMORY[0x24BE64DA0]();
}

uint64_t MRAVEndpointGetExternalDevice()
{
  return MEMORY[0x24BE64DB8]();
}

uint64_t MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities()
{
  return MEMORY[0x24BE64DD8]();
}

uint64_t MRAVEndpointSetOutputDeviceUIDVolume()
{
  return MEMORY[0x24BE64E28]();
}

uint64_t MRAVOutputDeviceCopyModelID()
{
  return MEMORY[0x24BE64E60]();
}

uint64_t MRAVOutputDeviceCopyName()
{
  return MEMORY[0x24BE64E68]();
}

uint64_t MRAVOutputDeviceCopyUniqueIdentifier()
{
  return MEMORY[0x24BE64E70]();
}

uint64_t MRAVOutputDeviceGetAVOutputDevice()
{
  return MEMORY[0x24BE64E80]();
}

uint64_t MRAVOutputDeviceGetSubtype()
{
  return MEMORY[0x24BE64E88]();
}

uint64_t MRAVOutputDeviceSupportsBufferedAirPlay()
{
  return MEMORY[0x24BE64EA0]();
}

uint64_t MRAVOutputDeviceSupportsHAP()
{
  return MEMORY[0x24BE64EA8]();
}

uint64_t MRAVReconnaissanceSessionBeginSearch()
{
  return MEMORY[0x24BE64EB8]();
}

uint64_t MRAVReconnaissanceSessionCancelSearch()
{
  return MEMORY[0x24BE64EC0]();
}

uint64_t MRAVReconnaissanceSessionCreateWithEndpointFeatures()
{
  return MEMORY[0x24BE64EC8]();
}

uint64_t MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback()
{
  return MEMORY[0x24BE64F08]();
}

uint64_t MRAVRoutingDiscoverySessionCopyAvailableOutputDevices()
{
  return MEMORY[0x24BE64F10]();
}

uint64_t MRAVRoutingDiscoverySessionCreate()
{
  return MEMORY[0x24BE64F18]();
}

uint64_t MRAVRoutingDiscoverySessionRemoveOutputDevicesChangedCallback()
{
  return MEMORY[0x24BE64F20]();
}

uint64_t MRAVRoutingDiscoverySessionSetDiscoveryMode()
{
  return MEMORY[0x24BE64F28]();
}

uint64_t MREExceptionTypeToString()
{
  return MEMORY[0x24BED8428]();
}

uint64_t MRExternalDeviceConnect()
{
  return MEMORY[0x24BE64FC8]();
}

uint64_t MRExternalDeviceCopyCustomOrigin()
{
  return MEMORY[0x24BE64FD8]();
}

uint64_t MRExternalDeviceDisconnect()
{
  return MEMORY[0x24BE64FE0]();
}

uint64_t MRExternalDeviceGetConnectionState()
{
  return MEMORY[0x24BE64FE8]();
}

uint64_t MRExternalDeviceSetConnectionStateCallback()
{
  return MEMORY[0x24BE64FF0]();
}

uint64_t MRExternalDeviceSetWantsNowPlayingUpdates()
{
  return MEMORY[0x24BE64FF8]();
}

uint64_t MRMediaRemoteErrorIsInformational()
{
  return MEMORY[0x24BE65108]();
}

uint64_t MRMediaRemoteGetLocalOrigin()
{
  return MEMORY[0x24BE65148]();
}

uint64_t MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin()
{
  return MEMORY[0x24BE65170]();
}

uint64_t MRMediaRemoteSendCommandForOriginWithReply()
{
  return MEMORY[0x24BE65228]();
}

uint64_t MRMediaRemoteSetWantsNowPlayingNotifications()
{
  return MEMORY[0x24BE65270]();
}

uint64_t MROriginIsLocalOrigin()
{
  return MEMORY[0x24BE65340]();
}

uint64_t MTRSetMessageReliabilityParameters()
{
  return MEMORY[0x24BDDB4E8]();
}

uint64_t NAEmptyResult()
{
  return MEMORY[0x24BE6B5E8]();
}

uint64_t NEHelperCacheClearUUIDs()
{
  return MEMORY[0x24BDAC478]();
}

uint64_t NEHelperCacheCopyAppUUIDMapping()
{
  return MEMORY[0x24BDAC480]();
}

uint64_t NEHelperCacheCopySigningIdentifierMapping()
{
  return MEMORY[0x24BDAC488]();
}

uint64_t NRWatchOSVersion()
{
  return MEMORY[0x24BE6B490]();
}

NSArray *__cdecl NSAllMapTableValues(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x24BDD0B38](table);
}

uint64_t NSAppendPrintF()
{
  return MEMORY[0x24BE29648]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x24BDD0B80](aClassName);
}

uint64_t NSLocalizedFileSizeDescription()
{
  return MEMORY[0x24BDD0FE0]();
}

uint64_t NSPrintF()
{
  return MEMORY[0x24BE296C0]();
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x24BDD11B8](namestr);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x24BDD1208](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x24BDD1218](aSelectorName);
}

uint64_t NSStringFromBOOL()
{
  return MEMORY[0x24BDD1238]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x24BDD1240](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x24BDD1250](proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x24BDD1268](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

uint64_t OPACKDecodeBytes()
{
  return MEMORY[0x24BE29868]();
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x24BE29870]();
}

uint64_t OPACKEncodeObject()
{
  return MEMORY[0x24BE29878]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x24BE29880]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x24BE7AF80]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x24BE7AF88]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x24BE7AF90]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x24BE7AFA0]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x24BE7AFA8]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x24BE7AFB0]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x24BE7AFD8]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x24BE7AFE8]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x24BE7AFF0]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x24BE7B008]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x24BE7B018]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x24BE7B028]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x24BE7B030]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x24BE7B038]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x24BE7B048]();
}

uint64_t PairingSessionCreate()
{
  return MEMORY[0x24BE298A8]();
}

uint64_t PairingSessionDeriveKey()
{
  return MEMORY[0x24BE298B8]();
}

uint64_t PairingSessionExchange()
{
  return MEMORY[0x24BE298C0]();
}

uint64_t PairingSessionSetLogging()
{
  return MEMORY[0x24BE298E0]();
}

uint64_t RandomBytes()
{
  return MEMORY[0x24BE29910]();
}

uint64_t ReportMemoryExceptionFromTask()
{
  return MEMORY[0x24BED8430]();
}

CFArrayRef SCDynamicStoreCopyKeyList(SCDynamicStoreRef store, CFStringRef pattern)
{
  return (CFArrayRef)MEMORY[0x24BDF5658](store, pattern);
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return (CFPropertyListRef)MEMORY[0x24BDF5670](store, key);
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return (SCDynamicStoreRef)MEMORY[0x24BDF5678](allocator, name, callout, context);
}

CFStringRef SCDynamicStoreKeyCreateNetworkGlobalEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x24BDF5698](allocator, domain, entity);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x24BDF56A8](allocator, domain, ifname, entity);
}

CFStringRef SCDynamicStoreKeyCreateNetworkServiceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef serviceID, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x24BDF56B0](allocator, domain, serviceID, entity);
}

Boolean SCDynamicStoreSetDispatchQueue(SCDynamicStoreRef store, dispatch_queue_t queue)
{
  return MEMORY[0x24BDF56C8](store, queue);
}

Boolean SCDynamicStoreSetNotificationKeys(SCDynamicStoreRef store, CFArrayRef keys, CFArrayRef patterns)
{
  return MEMORY[0x24BDF56D0](store, keys, patterns);
}

int SCError(void)
{
  return MEMORY[0x24BDF56E0]();
}

CFArrayRef SCNetworkInterfaceCopyAll(void)
{
  return (CFArrayRef)MEMORY[0x24BDF5708]();
}

CFStringRef SCNetworkInterfaceGetBSDName(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x24BDF5718](interface);
}

CFStringRef SCNetworkInterfaceGetHardwareAddressString(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x24BDF5720](interface);
}

CFStringRef SCNetworkInterfaceGetInterfaceType(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x24BDF5730](interface);
}

uint64_t SZArchiverCreateStreamableZip()
{
  return MEMORY[0x24BEB2CA0]();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x24BDE8918](allocator, data);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x24BDE8AA8](key, error);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B30](parameters, error);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x24BDE8B38](key, algorithm, dataToSign, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B40](keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x24BDE8BA8](key, algorithm, signedData, signature, error);
}

uint64_t SecPasswordGenerate()
{
  return MEMORY[0x24BDE8BD0]();
}

uint64_t SecPolicyCreateApplePinned()
{
  return MEMORY[0x24BDE8C18]();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x24BDE8CC8](rnd, count, bytes);
}

SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
{
  return (SecKeyRef)MEMORY[0x24BDE8DC8](trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x24BDE8DD8](certificates, policies, trust);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x24BDE8DF0](trust, error);
}

uint64_t SocketGetInterfaceInfo()
{
  return MEMORY[0x24BE299D8]();
}

uint64_t TCCAccessCheckAuditToken()
{
  return MEMORY[0x24BEB3758]();
}

uint64_t TLV8BufferAppend()
{
  return MEMORY[0x24BE29A40]();
}

uint64_t TLV8BufferAppendUInt64()
{
  return MEMORY[0x24BE29A48]();
}

uint64_t TLV8BufferFree()
{
  return MEMORY[0x24BE29A50]();
}

uint64_t TLV8BufferInit()
{
  return MEMORY[0x24BE29A58]();
}

uint64_t TLV8Get()
{
  return MEMORY[0x24BE29A60]();
}

uint64_t TLV8GetNext()
{
  return MEMORY[0x24BE29A68]();
}

uint64_t TLV8GetOrCopyCoalesced()
{
  return MEMORY[0x24BE29A70]();
}

uint64_t TLV8GetUInt64()
{
  return MEMORY[0x24BE29A78]();
}

uint64_t UARPAssetDownloadStatusToString()
{
  return MEMORY[0x24BE28A28]();
}

uint64_t UARPFirmwareStagingCompletionStatusToString()
{
  return MEMORY[0x24BE28A30]();
}

uint64_t UARPFirmwareUpdateAvailabilityStatusToString()
{
  return MEMORY[0x24BE28A38]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x24BE29AF0]();
}

uint64_t UpTicksToSeconds()
{
  return MEMORY[0x24BE29B00]();
}

uint64_t WiFiCopyCurrentNetworkInfoEx()
{
  return MEMORY[0x24BE29B18]();
}

uint64_t WiFiCopyNetworkInfo()
{
  return MEMORY[0x24BE29B20]();
}

uint64_t WiFiNetworkGetOperatingBand()
{
  return MEMORY[0x24BE67C18]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x24BDBD138]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x24BDBD148]();
}

void _Exit(int a1)
{
  MEMORY[0x24BDAC748](*(_QWORD *)&a1);
}

uint64_t _HMFPreconditionFailure()
{
  return MEMORY[0x24BE3F2D0]();
}

uint64_t _HMFPreconditionFailureWithFormat()
{
  return MEMORY[0x24BE3F2D8]();
}

uint64_t _HMFThreadLocalAsyncContextPop()
{
  return MEMORY[0x24BE3F2E0]();
}

uint64_t _HMFThreadLocalAsyncContextPush()
{
  return MEMORY[0x24BE3F2E8]();
}

uint64_t _LogCategory_Initialize()
{
  return MEMORY[0x24BE29B48]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t CtrXPC::Event::getDataValue(CtrXPC::Event *this)
{
  return MEMORY[0x24BE28968](this);
}

uint64_t CtrXPC::Event::getName(CtrXPC::Event *this)
{
  return MEMORY[0x24BE28970](this);
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x24BEDAA60](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x24BEDAA70](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x24BEDAEF8]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x24BEDAF00]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x24BEDAF10]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x24BEDB048]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x24BEDB050]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
  MEMORY[0x24BEDB180](this);
}

void std::locale::~locale(std::locale *this)
{
  MEMORY[0x24BEDB448](this);
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
  MEMORY[0x24BEDB500](this);
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
  MEMORY[0x24BEDB518](this, __sb);
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
  MEMORY[0x24BEDB530](this, *(_QWORD *)&__state);
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x24BEDB5E8]();
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

void operator delete(void *__p)
{
  off_24E763E58(__p);
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_24E763E60(__sz);
}

uint64_t __HMFActivityScopeLeave()
{
  return MEMORY[0x24BE3F2F0]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x24BDAC7A0](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x24BEDB928]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x24BDAC7D8](a1);
  return result;
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x24BDAC910]();
}

uint64_t _os_assumes_log()
{
  return MEMORY[0x24BDACB48]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x24BDACB60]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x24BEAE670]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x24BDAD010]();
}

uint64_t allowedCharValueTypes()
{
  return MEMORY[0x24BDD7AF8]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x24BDAD158]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x24BDAD170](*(_QWORD *)&__upper_bound);
}

uint64_t areAnyHomePodMiniConfigured()
{
  return MEMORY[0x24BDD7B00]();
}

uint64_t areAnyHomePodsConfigured()
{
  return MEMORY[0x24BDD7B08]();
}

uint64_t areAnyLargeHomePodConfigured()
{
  return MEMORY[0x24BDD7B10]();
}

uint64_t areHomesConfigured()
{
  return MEMORY[0x24BDD7B18]();
}

uint64_t areIncomingInvitesPresent()
{
  return MEMORY[0x24BDD7B20]();
}

uint64_t atoll(const char *a1)
{
  return MEMORY[0x24BDAD268](a1);
}

int bind(int a1, const sockaddr *a2, socklen_t a3)
{
  return MEMORY[0x24BDAD2C8](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t cced25519_sign_compat()
{
  return MEMORY[0x24BE29B60]();
}

uint64_t cced25519_verify_compat()
{
  return MEMORY[0x24BE29B68]();
}

uint64_t cchkdf()
{
  return MEMORY[0x24BDAD690]();
}

uint64_t ccsha512_di()
{
  return MEMORY[0x24BDAD840]();
}

uint64_t chacha20_poly1305_decrypt_all_64x64()
{
  return MEMORY[0x24BE29B80]();
}

uint64_t chacha20_poly1305_decrypt_all_96x32()
{
  return MEMORY[0x24BE29B88]();
}

uint64_t chacha20_poly1305_encrypt_all_64x64()
{
  return MEMORY[0x24BE29B98]();
}

uint64_t chacha20_poly1305_encrypt_all_96x32()
{
  return MEMORY[0x24BE29BA0]();
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x24BEDCE40](cls, name, imp, types);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x24BEDCEB8](cls, name);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x24BDAD9C0](*(_QWORD *)&__clock_id);
}

int close(int a1)
{
  return MEMORY[0x24BDAD9D8](*(_QWORD *)&a1);
}

uint64_t csops_audittoken()
{
  return MEMORY[0x24BDADC08]();
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x24BEDF1C8](strm, *(_QWORD *)&flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return MEMORY[0x24BEDF1D0](strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x24BEDF1D8](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x24BEDF1E0](strm, *(_QWORD *)&level, *(_QWORD *)&method, *(_QWORD *)&windowBits, *(_QWORD *)&memLevel, *(_QWORD *)&strategy, version, *(_QWORD *)&stream_size);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x24BDADC58](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADC60](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x24BDADCA8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC8](queue, block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x24BDADD18](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x24BDADD20](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

void dispatch_block_perform(dispatch_block_flags_t flags, dispatch_block_t block)
{
  MEMORY[0x24BDADD30](flags, block);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return (dispatch_data_t)MEMORY[0x24BDADD60](buffer, size, queue, destructor);
}

dispatch_data_t dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2)
{
  return (dispatch_data_t)MEMORY[0x24BDADD70](data1, data2);
}

dispatch_data_t dispatch_data_create_map(dispatch_data_t data, const void **buffer_ptr, size_t *size_ptr)
{
  return (dispatch_data_t)MEMORY[0x24BDADD78](data, buffer_ptr, size_ptr);
}

dispatch_data_t dispatch_data_create_subrange(dispatch_data_t data, size_t offset, size_t length)
{
  return (dispatch_data_t)MEMORY[0x24BDADD80](data, offset, length);
}

size_t dispatch_data_get_size(dispatch_data_t data)
{
  return MEMORY[0x24BDADD90](data);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x24BDADDA8](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDE0](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADDF0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEB8](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEC8](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED8](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x24BDADF30](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADF38](dsema, timeout);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return MEMORY[0x24BDADF50]();
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
  MEMORY[0x24BDADF60](object, queue);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x24BDADF68](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFA0](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x24BDADFE0](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x24BDAE008](when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x24BDAE010](label);
}

dispatch_workloop_t dispatch_workloop_create_inactive(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x24BDAE018](label);
}

void dispatch_workloop_set_autorelease_frequency(dispatch_workloop_t workloop, dispatch_autorelease_frequency_t frequency)
{
  MEMORY[0x24BDAE028](workloop, frequency);
}

uint64_t dispatch_workloop_set_cpupercent()
{
  return MEMORY[0x24BDAE030]();
}

uint64_t dispatch_workloop_set_scheduler_priority()
{
  return MEMORY[0x24BDAE048]();
}

char *dlerror(void)
{
  return (char *)MEMORY[0x24BDAE068]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

uint64_t encodeRootObject()
{
  return MEMORY[0x24BDD7B28]();
}

uint64_t eventTypeForPresenceTypeAndGranularity()
{
  return MEMORY[0x24BDD7B30]();
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x24BDAE278](__x);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

float fmodf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAE3F8](a1, a2);
  return result;
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void freeifaddrs(ifaddrs *a1)
{
  MEMORY[0x24BDAE468](a1);
}

uint64_t generateURLForHomeKitObject()
{
  return MEMORY[0x24BDD7B38]();
}

uint64_t getAssistantConfigurationSnapshot()
{
  return MEMORY[0x24BDD7B40]();
}

uint64_t getAssistantConfigurationVersion()
{
  return MEMORY[0x24BDD7B48]();
}

uint64_t getLastSyncedAssistantConfigurationVersion()
{
  return MEMORY[0x24BDD7B50]();
}

int getifaddrs(ifaddrs **a1)
{
  return MEMORY[0x24BDAE660](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x24BDAE6D0]();
}

uid_t getuid(void)
{
  return MEMORY[0x24BDAE788]();
}

uint64_t granularityForEventType()
{
  return MEMORY[0x24BDD7B58]();
}

uint64_t hap2LogInitialize()
{
  return MEMORY[0x24BE1BC80]();
}

uint64_t hm_assistantIdentifier()
{
  return MEMORY[0x24BDD7B60]();
}

uint64_t hm_assistantIdentifierWithSalts()
{
  return MEMORY[0x24BDD7B68]();
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return (const char *)MEMORY[0x24BDAE8B0](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int inet_pton(int a1, const char *a2, void *a3)
{
  return MEMORY[0x24BDAE8B8](*(_QWORD *)&a1, a2, a3);
}

int inflate(z_streamp strm, int flush)
{
  return MEMORY[0x24BEDF260](strm, *(_QWORD *)&flush);
}

int inflateEnd(z_streamp strm)
{
  return MEMORY[0x24BEDF268](strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return MEMORY[0x24BEDF270](strm, *(_QWORD *)&windowBits, version, *(_QWORD *)&stream_size);
}

uint64_t initializeMappingsAndPaths()
{
  return MEMORY[0x24BDD7B70]();
}

uint64_t isAllowedCharType()
{
  return MEMORY[0x24BDD7B78]();
}

uint64_t isEqualAllowingNil()
{
  return MEMORY[0x24BDD7B80]();
}

uint64_t isFeatureMatteriPhoneOnlyPairingControlEnabled()
{
  return MEMORY[0x24BE4EFC0]();
}

uint64_t isFeatureMatteriPhoneOnlyPairingControlForThreadEnabled()
{
  return MEMORY[0x24BE4EFC8]();
}

uint64_t isInternalBuild()
{
  return MEMORY[0x24BDD7B88]();
}

uint64_t isPresenceAuthorizationValid()
{
  return MEMORY[0x24BDD7B90]();
}

uint64_t isRestoreSupportedForCharacteristic()
{
  return MEMORY[0x24BDD7B98]();
}

uint64_t isValidHMSoftwareUpdateAssetSourceString()
{
  return MEMORY[0x24BDD7BA0]();
}

uint64_t localizationKeyForCharacteristicType()
{
  return MEMORY[0x24BDD7E48]();
}

uint64_t localizedWiFiStringKey()
{
  return MEMORY[0x24BDD7E50]();
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAB0](__x);
  return result;
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAD8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x24BDAEB80](msg, *(_QWORD *)&option, *(_QWORD *)&send_size, *(_QWORD *)&rcv_size, *(_QWORD *)&rcv_name, *(_QWORD *)&timeout, *(_QWORD *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
  MEMORY[0x24BDAEB90](a1);
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return MEMORY[0x24BDAEBB0](*(_QWORD *)&task, *(_QWORD *)&name);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED70](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE70](__s, *(_QWORD *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint64_t memorystatus_control()
{
  return MEMORY[0x24BDAEEA0]();
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x24BDAEEC8](__s, __smax, *(_QWORD *)&__c, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
  MEMORY[0x24BDAEEE0](*(_QWORD *)&reply_port);
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x24BDAEEF8]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
  MEMORY[0x24BDAEF08](*(_QWORD *)&reply_port);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x24BDAF168](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x24BDAF198](*(_QWORD *)&token, state64);
}

uint64_t nw_activity_activate()
{
  return MEMORY[0x24BDE0950]();
}

uint64_t nw_activity_complete_with_reason()
{
  return MEMORY[0x24BDE0960]();
}

uint64_t nw_activity_create()
{
  return MEMORY[0x24BDE0990]();
}

uint64_t nw_activity_get_label()
{
  return MEMORY[0x24BDE09C0]();
}

uint64_t nw_activity_is_activated()
{
  return MEMORY[0x24BDE09D0]();
}

uint64_t nw_activity_set_parent_activity()
{
  return MEMORY[0x24BDE09E8]();
}

uint64_t nw_activity_submit_metrics()
{
  return MEMORY[0x24BDE09F0]();
}

void nw_connection_cancel(nw_connection_t connection)
{
  MEMORY[0x24BDE0AF8](connection);
}

nw_connection_t nw_connection_create(nw_endpoint_t endpoint, nw_parameters_t parameters)
{
  return (nw_connection_t)MEMORY[0x24BDE0B68](endpoint, parameters);
}

void nw_connection_receive(nw_connection_t connection, uint32_t minimum_incomplete_length, uint32_t maximum_length, nw_connection_receive_completion_t completion)
{
  MEMORY[0x24BDE0C28](connection, *(_QWORD *)&minimum_incomplete_length, *(_QWORD *)&maximum_length, completion);
}

void nw_connection_receive_message(nw_connection_t connection, nw_connection_receive_completion_t completion)
{
  MEMORY[0x24BDE0C38](connection, completion);
}

uint64_t nw_connection_reset_traffic_class()
{
  return MEMORY[0x24BDE0C48]();
}

void nw_connection_send(nw_connection_t connection, dispatch_data_t content, nw_content_context_t context, BOOL is_complete, nw_connection_send_completion_t completion)
{
  MEMORY[0x24BDE0C58](connection, content, context, is_complete, completion);
}

void nw_connection_set_queue(nw_connection_t connection, dispatch_queue_t queue)
{
  MEMORY[0x24BDE0C98](connection, queue);
}

uint64_t nw_connection_set_read_close_handler()
{
  return MEMORY[0x24BDE0CA0]();
}

void nw_connection_set_state_changed_handler(nw_connection_t connection, nw_connection_state_changed_handler_t handler)
{
  MEMORY[0x24BDE0CB0](connection, handler);
}

void nw_connection_start(nw_connection_t connection)
{
  MEMORY[0x24BDE0CD0](connection);
}

uint64_t nw_context_create()
{
  return MEMORY[0x24BDE0DA0]();
}

uint64_t nw_context_set_isolate_protocol_stack()
{
  return MEMORY[0x24BDE0DC0]();
}

uint64_t nw_context_set_scheduling_mode()
{
  return MEMORY[0x24BDE0DD0]();
}

uint64_t nw_endpoint_create_host_with_numeric_port()
{
  return MEMORY[0x24BDE0E98]();
}

CFErrorRef nw_error_copy_cf_error(nw_error_t error)
{
  return (CFErrorRef)MEMORY[0x24BDE0FA8](error);
}

nw_parameters_t nw_parameters_create_secure_tcp(nw_parameters_configure_protocol_block_t configure_tls, nw_parameters_configure_protocol_block_t configure_tcp)
{
  return (nw_parameters_t)MEMORY[0x24BDE1588](configure_tls, configure_tcp);
}

uint64_t nw_parameters_set_context()
{
  return MEMORY[0x24BDE1648]();
}

uint64_t nw_parameters_set_data_mode()
{
  return MEMORY[0x24BDE1658]();
}

uint64_t nw_path_create_default_evaluator()
{
  return MEMORY[0x24BDE17E8]();
}

uint64_t nw_path_evaluator_copy_path()
{
  return MEMORY[0x24BDE1828]();
}

BOOL nw_path_uses_interface_type(nw_path_t path, nw_interface_type_t interface_type)
{
  return MEMORY[0x24BDE1A68](path, *(_QWORD *)&interface_type);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return (Class)MEMORY[0x24BEDCF90](superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x24BEDCFB0](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x24BEDCFC0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x24BEDCFD8](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x24BEDD020](dest, src, size, atomic, hasStrong);
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_end_catch(void)
{
  MEMORY[0x24BEDD050]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x24BEDD078](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x24BEDD080](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x24BEDD088](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

void objc_moveWeak(id *to, id *from)
{
  MEMORY[0x24BEDD0F8](to, from);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x24BEDD160]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_registerClassPair(Class cls)
{
  MEMORY[0x24BEDD170](cls);
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

void objc_removeAssociatedObjects(id object)
{
  MEMORY[0x24BEDD290](object);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x24BEDD3C0](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3E0](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x24BEDD438](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x24BEDD440](obj);
}

void objc_terminate(void)
{
  MEMORY[0x24BEDD450]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD458](a1);
}

Class object_setClass(id a1, Class a2)
{
  return (Class)MEMORY[0x24BEDD490](a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x24BDAF400](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x24BDAF410](log, ptr);
}

uint64_t os_state_add_handler()
{
  return MEMORY[0x24BDAF420]();
}

uint64_t os_state_remove_handler()
{
  return MEMORY[0x24BDAF428]();
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x24BDAF450](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x24BDAF458](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

uint64_t os_unfair_lock_lock_with_options()
{
  return MEMORY[0x24BDAF470]();
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x24BDAF490]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x24BDAF4A8]();
}

uint64_t playbackStateAsString()
{
  return MEMORY[0x24BDD7E58]();
}

uint64_t presenceTypeForEventTypeAndGranularity()
{
  return MEMORY[0x24BDD7E60]();
}

int proc_pid_rusage(int pid, int flavor, rusage_info_t *buffer)
{
  return MEMORY[0x24BDAF6E8](*(_QWORD *)&pid, *(_QWORD *)&flavor, buffer);
}

uint64_t proc_reset_footprint_interval()
{
  return MEMORY[0x24BDAF720]();
}

BOOL protocol_isEqual(Protocol *proto, Protocol *other)
{
  return MEMORY[0x24BEDD4F8](proto, other);
}

pthread_introspection_hook_t pthread_introspection_hook_install(pthread_introspection_hook_t hook)
{
  return (pthread_introspection_hook_t)MEMORY[0x24BDAF870](hook);
}

ssize_t recvfrom(int a1, void *a2, size_t a3, int a4, sockaddr *a5, socklen_t *a6)
{
  return MEMORY[0x24BDAFAE8](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4, a5, a6);
}

ssize_t send(int a1, const void *a2, size_t a3, int a4)
{
  return MEMORY[0x24BDAFCE8](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return MEMORY[0x24BDAFD10](__name, __value, *(_QWORD *)&__overwrite);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return MEMORY[0x24BDAFD78](*(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3, a4, *(_QWORD *)&a5);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x24BDAFE00](*(_QWORD *)&a1, a2);
}

int socket(int a1, int a2, int a3)
{
  return MEMORY[0x24BDAFE50](*(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_blob64(sqlite3_stmt *a1, int a2, const void *a3, sqlite3_uint64 a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF50](a1, *(_QWORD *)&a2, a3, a4, a5);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x24BEDDF68](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x24BEDDF70](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDDF78](a1);
}

const char *__cdecl sqlite3_bind_parameter_name(sqlite3_stmt *a1, int a2)
{
  return (const char *)MEMORY[0x24BEDDF88](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF98](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_bind_zeroblob(sqlite3_stmt *a1, int a2, int n)
{
  return MEMORY[0x24BEDDFB8](a1, *(_QWORD *)&a2, *(_QWORD *)&n);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x24BEDE010](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x24BEDE020](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE028](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE038](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x24BEDE048](a1, *(_QWORD *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE058](a1, *(_QWORD *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE068](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE078](a1, *(_QWORD *)&iCol);
}

sqlite3 *__cdecl sqlite3_db_handle(sqlite3_stmt *a1)
{
  return (sqlite3 *)MEMORY[0x24BEDE0D8](a1);
}

int sqlite3_errcode(sqlite3 *db)
{
  return MEMORY[0x24BEDE100](db);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x24BEDE108](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x24BEDE118](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE140](pStmt);
}

int sqlite3_get_autocommit(sqlite3 *a1)
{
  return MEMORY[0x24BEDE150](a1);
}

int sqlite3_initialize(void)
{
  return MEMORY[0x24BEDE160]();
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x24BEDE180](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x24BEDE1C0](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x24BEDE1D0](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE1E0](pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x24BEDE2A0](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE2A8](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x24BDAFEF0](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x24BDAFF18](*(_QWORD *)&__errnum);
}

uint64_t stringToHMSoftwareUpdateAssetSource()
{
  return MEMORY[0x24BDD7E68]();
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x24BDAFF38](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x24BEE4DA8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x24BDB0100](a1, a2, a3, a4, a5);
}

uint64_t systemResourceUsageLevelAsString()
{
  return MEMORY[0x24BE4D270]();
}

kern_return_t task_generate_corpse(task_read_t task, mach_port_t *corpse_task_port)
{
  return MEMORY[0x24BDB0168](*(_QWORD *)&task, corpse_task_port);
}

kern_return_t task_threads(task_inspect_t target_task, thread_act_array_t *act_list, mach_msg_type_number_t *act_listCnt)
{
  return MEMORY[0x24BDB01C8](*(_QWORD *)&target_task, act_list, act_listCnt);
}

int unlink(const char *a1)
{
  return MEMORY[0x24BDB02B0](a1);
}

uint64_t userTypeForPresenceTypeAndGranularity()
{
  return MEMORY[0x24BDD7E70]();
}

uint64_t usersListApplicable()
{
  return MEMORY[0x24BDD7E78]();
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x24BDB0308](uu1, uu2);
}

void uuid_generate(uuid_t out)
{
  MEMORY[0x24BDB0318](out);
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x24BDB0390](*(_QWORD *)&target_task, address, size);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x24BDB0418](msg);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x24BDB05D0](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x24BDB05E0](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x24BDB05E8](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x24BDB0608](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x24BDB0610](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x24BDB0618](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x24BDB0620](identifier);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x24BDB0638](xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x24BDB0660](xarray);
}

xpc_object_t xpc_array_get_dictionary(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x24BDB0670](xarray, index);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x24BDB06E0](xBOOL);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x24BDB0718](connection);
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return MEMORY[0x24BDB0720]();
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x24BDB0798](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x24BDB07A8](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x24BDB07C8](connection, handler);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x24BDB07E8](connection, targetq);
}

void xpc_connection_suspend(xpc_connection_t connection)
{
  MEMORY[0x24BDB07F8](connection);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x24BDB0890](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x24BDB08A0](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x24BDB08B0](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x24BDB08C0](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x24BDB08D0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x24BDB08D8](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0908](xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0938](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0968](xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return MEMORY[0x24BDB0970]();
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x24BDB0978](xdict, key, value);
}

void xpc_dictionary_set_date(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x24BDB0990](xdict, key, value);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x24BDB0998](xdict, key, value);
}

void xpc_dictionary_set_fd(xpc_object_t xdict, const char *key, int fd)
{
  MEMORY[0x24BDB09A0](xdict, key, *(_QWORD *)&fd);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x24BDB09A8](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x24BDB09D0](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x24BDB09E0](xdict, key, value);
}

uint64_t xpc_event_publisher_activate()
{
  return MEMORY[0x24BDB0A10]();
}

uint64_t xpc_event_publisher_create()
{
  return MEMORY[0x24BDB0A18]();
}

uint64_t xpc_event_publisher_fire()
{
  return MEMORY[0x24BDB0A20]();
}

uint64_t xpc_event_publisher_set_error_handler()
{
  return MEMORY[0x24BDB0A30]();
}

uint64_t xpc_event_publisher_set_handler()
{
  return MEMORY[0x24BDB0A38]();
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

uint64_t xpc_set_event()
{
  return MEMORY[0x24BDB0B50]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x24BDB0B58](stream, targetq, handler);
}

size_t xpc_string_get_length(xpc_object_t xstring)
{
  return MEMORY[0x24BDB0BA0](xstring);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x24BDB0BA8](xstring);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x24BDB0C00](xuuid);
}

